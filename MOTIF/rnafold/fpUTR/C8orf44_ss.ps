%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCGUCUAGCUGCACUUCCUCCUUAGGCGGAGGGGAGGAUUCAGGGAAGCUUGGUUAAAAACAGUUAUGGCAGUGGGAGUCGAAGCGAGGGUCUGAAGUUCACGACUACUAGAAGGGGAGGGGAGUGGAAAGGCUCUCAGUGAAAAAGGUAUGGAACCCUUCAGAUCAAAGCUUACCAAUAAAUUCAGUAUGUAGAACAGAUUAACGUAGUUGAA\
) } def
/len { sequence length } bind def

/coor [
[71.52207947 383.67550659]
[67.46607971 398.11672974]
[63.41007614 412.55795288]
[59.35407639 426.99917603]
[55.29807663 441.44039917]
[51.24207306 455.88159180]
[59.19685364 469.53799438]
[55.08448029 484.79788208]
[41.34475327 492.60781860]
[26.12920380 488.33435059]
[18.46495247 474.51281738]
[22.89906120 459.34329224]
[36.80085373 451.82559204]
[40.85685349 437.38436890]
[44.91285324 422.94317627]
[48.96885681 408.50195312]
[53.02485657 394.06072998]
[57.08085632 379.61950684]
[44.44614029 371.53469849]
[33.03303528 381.26818848]
[21.61993027 391.00170898]
[10.20682430 400.73519897]
[-1.20628154 410.46868896]
[-12.61938763 420.20220947]
[-24.03249359 429.93569946]
[-35.44559860 439.66918945]
[-35.13948822 455.30377197]
[-44.99489975 467.44482422]
[-60.35841751 470.35968018]
[-73.97585297 462.67205811]
[-79.41746521 448.01181030]
[-74.11389923 433.30105591]
[-60.56933594 425.48577881]
[-45.17910004 428.25610352]
[-33.76599121 418.52258301]
[-22.35288620 408.78909302]
[-10.93978119 399.05560303]
[0.47332484 389.32208252]
[11.88643074 379.58859253]
[23.29953575 369.85510254]
[34.71264267 360.12158203]
[28.71808243 340.79623413]
[30.92055702 321.04449463]
[40.66615295 304.13760376]
[56.07592392 292.75985718]
[74.40146637 288.58328247]
[75.91205597 273.65954590]
[66.32453156 262.31869507]
[67.64389038 247.16236877]
[79.60422516 237.18298340]
[81.11481476 222.25923157]
[82.62540436 207.33549500]
[84.13598633 192.41174316]
[85.64657593 177.48800659]
[87.04959106 162.55377197]
[88.34496307 147.60980225]
[89.64033508 132.66584778]
[90.93570709 117.72187805]
[84.84639740 131.43028259]
[71.63991547 138.54286194]
[56.84296417 136.08312988]
[46.64783096 125.08044434]
[45.32100677 110.13924408]
[53.41775131 97.51217651]
[67.54970551 92.48347473]
[81.80388641 97.15832520]
[69.84896851 88.09852600]
[57.89405441 79.03871918]
[42.22216797 76.87018585]
[36.75183105 63.01649857]
[24.79691505 53.95669556]
[12.84200001 44.89689636]
[0.88708454 35.83709335]
[-14.31798649 39.48946762]
[-28.29030991 32.46748734]
[-34.43258286 18.08671951]
[-29.84460831 3.13732052]
[-16.69269180 -5.32205915]
[-1.18676460 -3.29715967]
[9.35174942 8.25592422]
[9.94688511 23.88217735]
[21.90180206 32.94197845]
[33.85671616 42.00178146]
[45.81163406 51.06158066]
[60.62842178 52.58209991]
[66.95385742 67.08380890]
[78.90876770 76.14360809]
[90.86368561 85.20340729]
[104.78311157 79.61327362]
[107.15097809 64.80134583]
[109.51884460 49.98941422]
[111.88670349 35.17748642]
[114.25457001 20.36555862]
[116.62243652 5.55363035]
[118.99030304 -9.25829792]
[121.35816193 -24.07022667]
[114.86606598 -30.89551926]
[112.27764893 -39.80957031]
[114.05131531 -48.78065872]
[119.66584015 -55.82390213]
[127.76478577 -59.44039917]
[130.77059937 -74.13614655]
[133.77641296 -88.83190155]
[136.78224182 -103.52764893]
[139.78805542 -118.22339630]
[131.34541321 -131.31384277]
[134.60308838 -146.17460632]
[147.13485718 -154.14270020]
[150.14067078 -168.83843994]
[143.91342163 -186.17025757]
[156.06463623 -198.83486938]
[158.85836792 -213.57240295]
[149.75396729 -226.49081421]
[152.53315735 -242.04882812]
[165.54710388 -251.01614380]
[181.07485962 -248.07261658]
[189.90408325 -234.96458435]
[186.79655457 -219.46882629]
[173.59591675 -210.77867126]
[170.80218506 -196.04113770]
[177.35055542 -185.87422180]
[175.14732361 -173.57600403]
[164.83642578 -165.83262634]
[161.83059692 -151.13687134]
[170.22729492 -138.88815308]
[167.38832092 -123.94175720]
[154.48379517 -115.21758270]
[151.47798157 -100.52183533]
[148.47216797 -85.82608032]
[145.46635437 -71.13033295]
[142.46054077 -56.43458557]
[150.66250610 -37.49242020]
[136.17008972 -21.70236015]
[133.80223083 -6.89043283]
[131.43435669 7.92149544]
[129.06649780 22.73342323]
[126.69863129 37.54535294]
[124.33077240 52.35728073]
[121.96290588 67.16920471]
[119.59503937 81.98113251]
[117.27799988 86.06109619]
[114.52989197 89.75456238]
[111.39169312 93.02384186]
[125.83290863 88.96784210]
[140.27413940 84.91184235]
[154.71534729 80.85584259]
[159.47991943 71.08525085]
[168.64491272 65.65899658]
[179.06430054 66.15937805]
[187.31236267 72.18033600]
[201.86447144 68.54219055]
[216.41658020 64.90403748]
[225.87031555 51.94230270]
[241.90405273 51.39599609]
[252.21810913 63.68419647]
[248.90040588 79.38044739]
[234.49600220 86.44393158]
[220.05473328 79.45614624]
[205.50262451 83.09429932]
[190.95051575 86.73244476]
[178.06411743 101.15271759]
[158.77134705 95.29706573]
[144.33013916 99.35306549]
[129.88891602 103.40906525]
[115.44769287 107.46506500]
[105.87966919 119.01725006]
[104.58429718 133.96121216]
[103.28892517 148.90518188]
[101.99355316 163.84913635]
[104.36931610 172.66366577]
[100.57032013 178.99859619]
[99.05973053 193.92233276]
[97.54914093 208.84608459]
[96.03855896 223.76982117]
[94.52796936 238.69357300]
[104.24596405 250.86723328]
[102.50141907 265.98052979]
[90.83580017 275.17013550]
[89.32521057 290.09387207]
[102.45104218 296.14154053]
[112.99855804 305.98010254]
[119.91634369 318.60464478]
[122.52239227 332.73379517]
[120.57133484 346.93969727]
[114.27739716 359.79248047]
[104.29106140 370.00393677]
[111.15863800 383.33944702]
[118.02621460 396.67498779]
[124.89378357 410.01052856]
[131.76136780 423.34603882]
[138.72485352 436.63174438]
[145.78387451 449.86694336]
[152.84291077 463.10211182]
[159.90194702 476.33731079]
[166.96098328 489.57247925]
[180.28234863 498.10781860]
[179.44485474 512.97888184]
[186.50389099 526.21405029]
[201.37153625 532.24169922]
[205.79040527 547.66418457]
[196.37072754 560.65069580]
[180.33847046 561.23907471]
[169.99220276 548.97796631]
[173.26870728 533.27307129]
[166.20967102 520.03790283]
[153.39321899 512.44921875]
[153.72579956 496.63153076]
[146.66676331 483.39633179]
[139.60772705 470.16116333]
[132.54869080 456.92596436]
[125.48966217 443.69079590]
[119.57146454 439.27053833]
[118.42582703 430.21362305]
[111.55825806 416.87808228]
[104.69068146 403.54257202]
[97.82310486 390.20703125]
[90.95552826 376.87149048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[46 179]
[47 178]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[55 169]
[56 168]
[57 167]
[58 166]
[66 88]
[67 87]
[68 86]
[70 84]
[71 83]
[72 82]
[73 81]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
[96 133]
[101 131]
[102 130]
[103 129]
[104 128]
[105 127]
[108 124]
[109 123]
[111 120]
[112 119]
[143 165]
[144 164]
[145 163]
[146 162]
[150 160]
[151 159]
[152 158]
[186 217]
[187 216]
[188 215]
[189 214]
[190 213]
[191 211]
[192 210]
[193 209]
[194 208]
[195 207]
[197 205]
[198 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
