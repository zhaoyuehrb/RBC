%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM3B)
} def

/sequence { (\
UUUGCCCGACUGGCCGCGCACCCAGCUGGCCCGCCCCUGCCCGACACGACCGCUGCCCGCCCCUUGCCUUCCUGACCCAGGGGCUCCGCUGGCUGCGGUCGCCUGGGAGCUGCCGCCAGGGCCAGGAGGGGAGCGGCACCUGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.004697905 ubox
1 144 0.014393737 ubox
1 145 0.043252377 ubox
1 146 0.071488575 ubox
2 8 0.005074597 ubox
2 9 0.007213278 ubox
2 143 0.005187556 ubox
2 144 0.047608332 ubox
2 145 0.120818047 ubox
2 146 0.089827702 ubox
3 8 0.007389804 ubox
3 12 0.003949784 ubox
3 142 0.004042774 ubox
3 143 0.016352806 ubox
3 144 0.119652139 ubox
3 145 0.128842324 ubox
4 11 0.003615943 ubox
4 14 0.007709968 ubox
5 13 0.009053737 ubox
5 143 0.219039904 ubox
6 12 0.012688590 ubox
6 13 0.006730396 ubox
6 142 0.215184929 ubox
6 143 0.961553144 ubox
7 12 0.019842035 ubox
7 142 0.964491900 ubox
8 141 0.883896255 ubox
10 143 0.035031656 ubox
10 146 0.003883613 ubox
11 138 0.258882743 ubox
11 142 0.033660014 ubox
11 145 0.003605728 ubox
12 137 0.187610703 ubox
12 140 0.056847568 ubox
12 141 0.027820078 ubox
13 137 0.980935977 ubox
13 139 0.039147228 ubox
13 140 0.013310076 ubox
14 136 0.999877803 ubox
15 135 0.999899889 ubox
16 134 0.999850113 ubox
16 137 0.006552360 ubox
17 133 0.999650268 ubox
17 135 0.011159264 ubox
17 136 0.004657705 ubox
18 134 0.015824973 ubox
19 133 0.016468706 ubox
21 129 0.015301614 ubox
21 130 0.998191659 ubox
21 131 0.053545748 ubox
22 128 0.014732239 ubox
22 129 0.998469821 ubox
22 130 0.052919570 ubox
23 128 0.998238263 ubox
23 129 0.052072234 ubox
26 125 0.999720683 ubox
26 126 0.016378459 ubox
27 124 0.999710458 ubox
27 125 0.008075325 ubox
28 123 0.999984860 ubox
29 122 0.999992371 ubox
30 120 0.004199607 ubox
30 121 0.999972134 ubox
31 119 0.005925495 ubox
31 120 0.999929187 ubox
32 43 0.003778353 ubox
32 115 0.030682294 ubox
32 119 0.996491087 ubox
32 120 0.003486633 ubox
33 38 0.003165717 ubox
33 40 0.024093217 ubox
33 42 0.003871014 ubox
33 110 0.042429399 ubox
33 111 0.004219949 ubox
33 113 0.648534400 ubox
33 114 0.053529768 ubox
33 116 0.712992454 ubox
34 39 0.025479747 ubox
34 107 0.006896670 ubox
34 109 0.042172404 ubox
34 112 0.650005903 ubox
34 115 0.715104478 ubox
35 106 0.006929639 ubox
35 107 0.039373628 ubox
35 121 0.004023943 ubox
36 105 0.006909507 ubox
36 106 0.039369145 ubox
36 107 0.007451676 ubox
36 120 0.005946488 ubox
37 105 0.039319830 ubox
37 106 0.007249067 ubox
37 109 0.659009513 ubox
37 119 0.007394937 ubox
38 46 0.008522111 ubox
38 105 0.006688328 ubox
38 108 0.657728369 ubox
38 112 0.035495735 ubox
38 115 0.011083461 ubox
38 118 0.010665168 ubox
39 45 0.009627872 ubox
39 102 0.028889112 ubox
39 104 0.004337228 ubox
39 110 0.695119788 ubox
39 111 0.014784642 ubox
39 113 0.028724053 ubox
39 114 0.011790565 ubox
39 116 0.004714309 ubox
39 117 0.010559878 ubox
40 101 0.026418701 ubox
40 106 0.108502793 ubox
40 107 0.710113257 ubox
40 109 0.692144463 ubox
40 112 0.026676028 ubox
40 115 0.004466605 ubox
41 105 0.106476486 ubox
41 106 0.714785005 ubox
41 107 0.688801422 ubox
42 105 0.715172114 ubox
42 106 0.688275442 ubox
43 104 0.634671788 ubox
45 105 0.086654933 ubox
46 104 0.082011660 ubox
47 101 0.991879693 ubox
48 100 0.999930409 ubox
49 99 0.999867252 ubox
50 98 0.999989092 ubox
51 97 0.999977946 ubox
52 96 0.999972731 ubox
53 95 0.997636386 ubox
54 95 0.004398154 ubox
55 89 0.003530879 ubox
55 93 0.997594892 ubox
55 94 0.005261414 ubox
56 88 0.003550621 ubox
56 92 0.999569323 ubox
57 91 0.998358064 ubox
57 92 0.028607144 ubox
58 88 0.118103911 ubox
58 91 0.039570375 ubox
59 67 0.003434790 ubox
59 84 0.176796134 ubox
59 87 0.091698518 ubox
59 89 0.977614576 ubox
59 90 0.017678489 ubox
60 66 0.003439149 ubox
60 83 0.180898751 ubox
60 88 0.976873516 ubox
61 82 0.181524783 ubox
61 83 0.410743420 ubox
62 81 0.181258692 ubox
62 82 0.411109652 ubox
62 83 0.007586225 ubox
63 80 0.180957834 ubox
63 81 0.411159306 ubox
63 82 0.007460839 ubox
63 83 0.003725816 ubox
64 75 0.010993868 ubox
64 79 0.153444920 ubox
64 80 0.410799086 ubox
64 81 0.003780422 ubox
65 74 0.017752095 ubox
65 79 0.418814063 ubox
65 80 0.003466431 ubox
66 73 0.011905790 ubox
66 78 0.425792519 ubox
66 84 0.892152079 ubox
66 87 0.007339474 ubox
67 81 0.008998733 ubox
67 82 0.021973322 ubox
67 83 0.891892284 ubox
68 80 0.009150067 ubox
68 81 0.022875696 ubox
68 82 0.877676583 ubox
68 83 0.034073940 ubox
69 75 0.267542454 ubox
69 79 0.008746734 ubox
69 80 0.023470194 ubox
69 81 0.238261449 ubox
69 82 0.032881011 ubox
69 83 0.021823037 ubox
70 74 0.243987753 ubox
70 79 0.023724430 ubox
70 80 0.088365101 ubox
70 81 0.045156663 ubox
70 82 0.134553895 ubox
70 83 0.004049724 ubox
71 80 0.055749123 ubox
71 81 0.854576865 ubox
71 82 0.016620868 ubox
72 80 0.884845654 ubox
72 81 0.022917161 ubox
73 79 0.885609946 ubox
73 80 0.023469157 ubox
74 78 0.871643338 ubox
83 89 0.003353002 ubox
84 88 0.003413221 ubox
102 120 0.005474692 ubox
103 119 0.008077715 ubox
104 115 0.008347342 ubox
104 118 0.011688290 ubox
105 114 0.012944625 ubox
105 117 0.012176287 ubox
106 113 0.012948092 ubox
106 114 0.004956753 ubox
106 116 0.012072766 ubox
106 117 0.003895901 ubox
107 113 0.005130539 ubox
107 116 0.003984534 ubox
109 116 0.080329234 ubox
110 115 0.080591516 ubox
110 119 0.008829238 ubox
111 118 0.023999724 ubox
112 117 0.025383512 ubox
114 119 0.007343756 ubox
140 146 0.009324632 ubox
141 145 0.008593362 ubox
6 143 0.9500000 lbox
7 142 0.9500000 lbox
8 141 0.9500000 lbox
13 137 0.9500000 lbox
14 136 0.9500000 lbox
15 135 0.9500000 lbox
16 134 0.9500000 lbox
17 133 0.9500000 lbox
21 130 0.9500000 lbox
22 129 0.9500000 lbox
23 128 0.9500000 lbox
26 125 0.9500000 lbox
27 124 0.9500000 lbox
28 123 0.9500000 lbox
29 122 0.9500000 lbox
30 121 0.9500000 lbox
31 120 0.9500000 lbox
32 119 0.9500000 lbox
33 116 0.9500000 lbox
34 115 0.9500000 lbox
39 110 0.9500000 lbox
40 109 0.9500000 lbox
41 107 0.9500000 lbox
42 106 0.9500000 lbox
47 101 0.9500000 lbox
48 100 0.9500000 lbox
49 99 0.9500000 lbox
50 98 0.9500000 lbox
51 97 0.9500000 lbox
52 96 0.9500000 lbox
53 95 0.9500000 lbox
55 93 0.9500000 lbox
56 92 0.9500000 lbox
57 91 0.9500000 lbox
59 89 0.9500000 lbox
60 88 0.9500000 lbox
66 84 0.9500000 lbox
67 83 0.9500000 lbox
68 82 0.9500000 lbox
71 81 0.9500000 lbox
72 80 0.9500000 lbox
73 79 0.9500000 lbox
74 78 0.9500000 lbox
showpage
end
%%EOF
