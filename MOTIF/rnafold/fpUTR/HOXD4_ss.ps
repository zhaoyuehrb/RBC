%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUAAUAUCUGGCAGGGGCUCUCAAAUGUGCCAUAGCAAGCUACUUGAUUACACGUAUGUUAUUUAGUUAAAUUUGUGAAAAUUAUGAGAUGCUCACCAACCCGGUGAUAAACUUGCUCCCUCGCCAUUGGCUGGCCUGGUCACAUGGCUGCCCAACUUUAUUCAGUUGACAGCAAGUAGGAGGGCCCUAUGGAAGGAGAAAAAAAGACAACACGAGAAAAAUUAGUAUUUUCUACCUUCUGAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[129.09048462 346.71054077]
[114.63423157 342.70846558]
[101.59043884 335.30172729]
[90.74676514 324.93762207]
[82.75798798 312.24197388]
[78.10652924 297.98141479]
[77.07324982 283.01702881]
[79.72055054 268.25250244]
[85.88858032 254.57933044]
[95.20487213 242.82319641]
[107.10687256 233.69398499]
[120.87586975 227.74296570]
[135.68043518 225.32949829]
[150.62658691 226.59930420]
[164.81181335 231.47570801]
[177.37602234 239.66130066]
[169.49839783 226.89637756]
[161.62078857 214.13145447]
[153.74316406 201.36654663]
[145.86553955 188.60162354]
[137.98793030 175.83671570]
[130.11030579 163.07179260]
[122.23268890 150.30686951]
[114.35506439 137.54196167]
[102.50970459 142.40127563]
[89.05772400 143.39993286]
[75.28907013 140.02748108]
[62.64713287 132.21110535]
[52.57938766 120.35832214]
[39.52663422 127.74923706]
[26.47387695 135.14013672]
[27.59354019 147.97767639]
[23.79711723 160.24317932]
[15.68025970 170.13137817]
[4.47177219 176.20080566]
[-8.15232468 177.58395386]
[-20.31938744 174.11109924]
[-30.23793411 166.33023071]
[-43.47230148 173.39077759]
[-56.70666885 180.45133972]
[-69.94104004 187.51190186]
[-81.06973267 200.30207825]
[-96.44078827 193.14897156]
[-93.82235718 176.39843750]
[-77.00159454 174.27752686]
[-63.76722717 167.21697998]
[-50.53285980 160.15641785]
[-37.29849243 153.09585571]
[-37.33723831 135.85775757]
[-28.58165169 120.90523529]
[-13.37358284 112.41677856]
[4.12771368 112.81758881]
[19.08296585 122.08738708]
[32.13572311 114.69647980]
[45.18848038 107.30556488]
[43.68305206 92.38130188]
[29.41720581 87.74604797]
[15.15135765 83.11079407]
[0.88550985 78.47554016]
[-14.63019085 81.56965637]
[-24.34358978 70.27810669]
[-38.60943604 65.64285278]
[-52.87528610 61.00759506]
[-67.14112854 56.37234116]
[-79.32561493 67.56729889]
[-95.40261078 71.06265259]
[-110.95661926 65.99547577]
[-121.76464844 53.84131241]
[-124.94271851 37.98606873]
[-139.26568604 33.53044510]
[-153.58865356 29.07482338]
[-167.46076965 36.64714813]
[-182.60050964 32.11243057]
[-190.02574158 18.16103745]
[-185.33122253 3.07008171]
[-171.30209351 -4.20723867]
[-156.26162720 0.64658046]
[-149.13302612 14.75185490]
[-134.81005859 19.20747757]
[-120.48709106 23.66310120]
[-111.09721375 13.76475811]
[-98.29907990 8.84913731]
[-84.56551361 9.92699432]
[-72.57640839 16.84509277]
[-64.69582367 28.30501175]
[-62.50587845 42.10649490]
[-48.24002838 46.74174881]
[-33.97418213 51.37700272]
[-19.70833397 56.01226044]
[-5.21302176 52.58659363]
[5.52076483 64.20968628]
[19.78661156 68.84494781]
[34.05245972 73.48020172]
[48.31830978 78.11545563]
[57.43726349 66.20559692]
[49.24134827 53.64267731]
[41.04543304 41.07975769]
[32.84951782 28.51683617]
[24.65360069 15.95391655]
[9.31336212 11.25747013]
[3.55496240 -3.71652031]
[11.79575348 -17.48129082]
[27.71410561 -19.47768784]
[39.09882355 -8.17424583]
[37.21652222 7.75800085]
[45.41243744 20.32092094]
[53.60835266 32.88384247]
[61.80426788 45.44676208]
[70.00018311 58.00968170]
[81.90554047 54.72953033]
[93.58895111 54.55052567]
[104.29643250 57.16880798]
[113.40710449 62.10915375]
[120.96144867 49.15030289]
[128.51579285 36.19145203]
[136.07014465 23.23260117]
[143.62449646 10.27375031]
[151.17884827 -2.68510079]
[158.73318481 -15.64395237]
[150.73915100 -23.92061996]
[146.08934021 -35.17819214]
[145.87985229 -48.03059769]
[150.62428284 -60.70032120]
[160.12023926 -71.26393127]
[173.41897583 -77.93981934]
[178.05422974 -92.20566559]
[182.68948364 -106.47151947]
[187.32473755 -120.73736572]
[191.95999146 -135.00321960]
[196.50552368 -149.29789734]
[200.96113586 -163.62086487]
[205.41676331 -177.94383240]
[209.87239075 -192.26679993]
[214.32801819 -206.58976746]
[208.16845703 -221.40325928]
[216.03556824 -235.38496399]
[231.89437866 -237.80932617]
[243.57937622 -226.81657410]
[242.12681580 -210.83941650]
[228.65098572 -202.13415527]
[224.19535828 -187.81118774]
[219.73973083 -173.48822021]
[215.28411865 -159.16525269]
[210.82849121 -144.84228516]
[211.84005737 -137.54046631]
[206.22584534 -130.36795044]
[201.59057617 -116.10211182]
[196.95532227 -101.83625793]
[192.32006836 -87.57041168]
[187.68481445 -73.30456543]
[193.75244141 -68.89617920]
[202.56942749 -81.03128815]
[214.70439148 -72.21410370]
[205.88769531 -60.07939911]
[211.95532227 -55.67100906]
[224.09057617 -64.48778534]
[236.22584534 -73.30456543]
[248.36109924 -82.12134552]
[260.49633789 -90.93812561]
[262.72082520 -106.58508301]
[275.40783691 -116.00926971]
[291.03039551 -113.61948395]
[300.31991577 -100.83354950]
[297.76510620 -85.23712158]
[284.88168335 -76.08329773]
[269.31314087 -78.80287170]
[257.17788696 -69.98609161]
[245.04261780 -61.16931152]
[232.90736389 -52.35253143]
[220.77210999 -43.53575516]
[212.72750854 -18.68487358]
[192.85134888 -5.77615309]
[171.69204712 -8.08960438]
[164.13769531 4.86924744]
[156.58334351 17.82809830]
[149.02899170 30.78694916]
[141.47465515 43.74580002]
[133.92030334 56.70465088]
[126.36595154 69.66350555]
[138.47433472 88.37278748]
[138.75437927 110.65667725]
[127.11998749 129.66433716]
[134.99760437 142.42926025]
[142.87522888 155.19416809]
[150.75283813 167.95909119]
[158.63046265 180.72399902]
[166.50808716 193.48892212]
[174.38569641 206.25384521]
[182.26332092 219.01875305]
[190.14094543 231.78367615]
[197.08502197 234.69972229]
[201.18090820 240.12510681]
[201.87705994 246.15307617]
[212.81158447 256.42129517]
[223.74612427 266.68948364]
[234.68064880 276.95770264]
[245.61517334 287.22592163]
[256.54971313 297.49411011]
[267.54852295 307.69342041]
[278.61123657 317.82339478]
[289.67391968 327.95339966]
[300.73663330 338.08340454]
[311.79931641 348.21337891]
[322.86203003 358.34338379]
[335.32363892 349.86959839]
[349.40374756 344.49862671]
[364.34301758 342.52014160]
[379.33581543 344.04080200]
[393.57360840 348.97863770]
[406.28854370 357.06735229]
[416.79495239 367.87069702]
[424.52618408 380.80609131]
[429.06533813 395.17596436]
[430.16763306 410.20532227]
[427.77362061 425.08367920]
[422.01235962 439.00863647]
[413.19461060 451.22927856]
[401.79586792 461.08651733]
[388.43087769 468.04882812]
[373.82037354 471.74066162]
[358.75228882 471.96298218]
[344.03921509 468.70379639]
[330.47463989 462.13882446]
[318.79003906 452.62216187]
[309.61560059 440.66696167]
[303.44604492 426.91802979]
[300.61410522 412.11679077]
[301.27252197 397.06146240]
[305.38577271 382.56393433]
[312.73202515 369.40606689]
[301.66934204 359.27609253]
[290.60662842 349.14608765]
[279.54394531 339.01611328]
[268.48123169 328.88610840]
[257.41854858 318.75610352]
[250.38095093 316.56243896]
[246.28149414 308.42864990]
[235.34696960 298.16043091]
[224.41244507 287.89224243]
[213.47790527 277.62402344]
[202.54338074 267.35580444]
[191.60885620 257.08761597]
[197.12149048 271.03790283]
[199.06561279 285.91137695]
[197.32382202 300.80990601]
[192.00128174 314.83386230]
[183.41941833 327.13635254]
[172.09642029 336.97454834]
[158.71604919 343.75433350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 190]
[17 189]
[18 188]
[19 187]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[29 55]
[30 54]
[31 53]
[38 48]
[39 47]
[40 46]
[41 45]
[56 94]
[57 93]
[58 92]
[59 91]
[61 89]
[62 88]
[63 87]
[64 86]
[69 80]
[70 79]
[71 78]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[113 179]
[114 178]
[115 177]
[116 176]
[117 175]
[118 174]
[119 173]
[125 150]
[126 149]
[127 148]
[128 147]
[129 146]
[130 144]
[131 143]
[132 142]
[133 141]
[134 140]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[193 242]
[194 241]
[195 240]
[196 239]
[197 238]
[198 237]
[199 235]
[200 234]
[201 233]
[202 232]
[203 231]
[204 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
