%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POLR3GL)
} def

/sequence { (\
GCGGGCUUAGAACGCCACCGACUUGAGGAAGCCCAGUACAUUUCAAGUUGGUCGCGGCUUGGGCUCCGCUUUGGGGAGGGGCAGCAGGUUUAUUCACUGGAUCUCUGAAUACCCAGGCCCCCUCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.998102593 ubox
2 68 0.999784983 ubox
3 66 0.087979500 ubox
3 67 0.996071071 ubox
4 65 0.123539352 ubox
4 66 0.992206333 ubox
5 64 0.993774676 ubox
5 65 0.110417064 ubox
6 62 0.007462560 ubox
6 63 0.999951242 ubox
7 61 0.009203116 ubox
7 62 0.998716842 ubox
8 61 0.995447136 ubox
8 62 0.003876326 ubox
9 59 0.098080728 ubox
9 60 0.989543606 ubox
10 58 0.130131369 ubox
10 59 0.965695550 ubox
10 60 0.021350575 ubox
11 59 0.026819182 ubox
11 60 0.004690965 ubox
12 59 0.005962217 ubox
13 56 0.999494156 ubox
14 55 0.999778485 ubox
14 58 0.019841947 ubox
15 54 0.999152838 ubox
15 57 0.019857618 ubox
16 56 0.019844313 ubox
17 52 0.988218343 ubox
18 51 0.999972403 ubox
19 50 0.999962121 ubox
20 49 0.999090616 ubox
21 48 0.999740597 ubox
22 47 0.999975621 ubox
23 46 0.999429808 ubox
24 35 0.004070746 ubox
24 45 0.999280194 ubox
25 34 0.004601355 ubox
25 42 0.003174119 ubox
25 43 0.011595869 ubox
25 44 0.999305186 ubox
26 41 0.008599263 ubox
26 42 0.067892229 ubox
26 43 0.990169425 ubox
27 33 0.126145841 ubox
27 34 0.387992092 ubox
27 41 0.088261141 ubox
27 42 0.843973130 ubox
27 43 0.039004296 ubox
27 44 0.030323874 ubox
28 32 0.125083687 ubox
28 33 0.389245611 ubox
28 41 0.648706243 ubox
28 42 0.094937257 ubox
28 43 0.051877289 ubox
28 44 0.012431829 ubox
29 41 0.123947026 ubox
29 42 0.087325243 ubox
29 43 0.015531433 ubox
30 41 0.105753972 ubox
30 42 0.025454915 ubox
31 37 0.561620661 ubox
31 41 0.026445668 ubox
31 42 0.007673284 ubox
32 36 0.569576154 ubox
35 42 0.023403488 ubox
35 43 0.009223910 ubox
36 41 0.021168591 ubox
36 42 0.022008469 ubox
72 126 0.684039641 ubox
73 121 0.006656217 ubox
73 122 0.005804053 ubox
73 124 0.003515311 ubox
73 125 0.771763850 ubox
73 128 0.598367530 ubox
74 120 0.006691540 ubox
74 121 0.005798665 ubox
74 123 0.003550598 ubox
74 124 0.771902507 ubox
74 125 0.040234834 ubox
74 127 0.604757026 ubox
74 128 0.009135026 ubox
75 119 0.006705194 ubox
75 120 0.005783335 ubox
75 122 0.007484952 ubox
75 123 0.771346106 ubox
75 124 0.039555838 ubox
75 125 0.633703499 ubox
75 127 0.006610347 ubox
76 118 0.006704462 ubox
76 119 0.005758802 ubox
76 121 0.005702827 ubox
76 122 0.771712489 ubox
76 123 0.034841200 ubox
76 124 0.634383336 ubox
77 123 0.634225281 ubox
78 114 0.004568541 ubox
78 120 0.006456705 ubox
78 121 0.788743927 ubox
78 122 0.614448360 ubox
79 113 0.004571999 ubox
79 114 0.007713451 ubox
79 119 0.005603512 ubox
79 120 0.804437802 ubox
79 121 0.593906056 ubox
80 112 0.004541804 ubox
80 113 0.007772393 ubox
80 118 0.004554280 ubox
80 119 0.819728098 ubox
80 120 0.572618005 ubox
80 121 0.003622098 ubox
81 112 0.007807048 ubox
81 118 0.834714905 ubox
81 119 0.548078792 ubox
81 120 0.004333655 ubox
82 99 0.010043927 ubox
82 107 0.131193546 ubox
82 117 0.848376412 ubox
83 90 0.004344777 ubox
83 91 0.004150279 ubox
83 94 0.003424707 ubox
83 98 0.010542264 ubox
83 104 0.016522009 ubox
83 106 0.147162843 ubox
84 89 0.003696746 ubox
84 90 0.004084090 ubox
84 93 0.003854453 ubox
84 97 0.010558705 ubox
84 103 0.017521579 ubox
84 105 0.147917162 ubox
84 118 0.491704234 ubox
85 99 0.104571713 ubox
85 107 0.039288077 ubox
85 117 0.493776059 ubox
86 94 0.006731396 ubox
86 98 0.104735941 ubox
86 104 0.268001875 ubox
86 106 0.038390627 ubox
87 93 0.007668701 ubox
87 94 0.005760244 ubox
87 95 0.042557211 ubox
87 97 0.104279699 ubox
87 98 0.016296034 ubox
87 103 0.281648512 ubox
87 104 0.009378335 ubox
87 105 0.037479331 ubox
87 113 0.769878135 ubox
87 114 0.541039201 ubox
87 119 0.004922652 ubox
88 93 0.004837457 ubox
88 94 0.040570754 ubox
88 97 0.019908135 ubox
88 102 0.282082465 ubox
88 103 0.018627799 ubox
88 104 0.029663833 ubox
88 110 0.021777145 ubox
88 112 0.770969345 ubox
88 113 0.539569782 ubox
88 118 0.006938694 ubox
89 96 0.021024039 ubox
89 101 0.282626743 ubox
89 108 0.003661958 ubox
89 109 0.025222606 ubox
89 111 0.627892928 ubox
89 117 0.006909229 ubox
90 99 0.007690609 ubox
90 100 0.281988882 ubox
90 101 0.014776047 ubox
90 107 0.005241965 ubox
90 108 0.032288158 ubox
90 109 0.018022224 ubox
90 116 0.006023333 ubox
91 99 0.278872227 ubox
91 100 0.015837873 ubox
91 107 0.032920290 ubox
91 108 0.016830760 ubox
91 111 0.670443340 ubox
92 98 0.263919629 ubox
92 102 0.034626609 ubox
92 106 0.027543450 ubox
92 110 0.906628793 ubox
93 101 0.037562078 ubox
93 108 0.010261759 ubox
93 109 0.942319909 ubox
94 99 0.003212781 ubox
94 100 0.037547110 ubox
94 101 0.027242500 ubox
94 107 0.008523951 ubox
94 108 0.947846288 ubox
95 99 0.036413880 ubox
95 100 0.028002500 ubox
95 107 0.948085155 ubox
96 106 0.851184691 ubox
97 116 0.059847824 ubox
98 107 0.017757347 ubox
98 115 0.060024368 ubox
99 105 0.370828011 ubox
99 106 0.207000901 ubox
99 113 0.004430807 ubox
99 114 0.060037415 ubox
100 104 0.244987271 ubox
100 105 0.292629007 ubox
100 112 0.005713877 ubox
100 113 0.059838137 ubox
101 110 0.012029618 ubox
102 108 0.010869671 ubox
102 109 0.012263946 ubox
103 107 0.011570382 ubox
103 116 0.003307126 ubox
103 117 0.005192348 ubox
104 117 0.024665258 ubox
105 116 0.259913596 ubox
106 115 0.260924486 ubox
107 114 0.261029175 ubox
1 69 0.9500000 lbox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
8 61 0.9500000 lbox
9 60 0.9500000 lbox
10 59 0.9500000 lbox
13 56 0.9500000 lbox
14 55 0.9500000 lbox
15 54 0.9500000 lbox
17 52 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
72 126 0.9500000 lbox
73 125 0.9500000 lbox
74 124 0.9500000 lbox
75 123 0.9500000 lbox
76 122 0.9500000 lbox
78 121 0.9500000 lbox
79 120 0.9500000 lbox
80 119 0.9500000 lbox
81 118 0.9500000 lbox
82 117 0.9500000 lbox
87 113 0.9500000 lbox
88 112 0.9500000 lbox
89 111 0.9500000 lbox
92 110 0.9500000 lbox
93 109 0.9500000 lbox
94 108 0.9500000 lbox
95 107 0.9500000 lbox
96 106 0.9500000 lbox
showpage
end
%%EOF
