%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATP6V1A)
} def

/sequence { (\
CCCCCCCCCAACCUGUGCAGCUGAGGACUUCCCCUCCGUGGUGACAGCCUCUGGGUCCUCGGUCGGUACAGUCUCUGCACCUCGCGCCCCAGCAGGUAAACUAACAUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 96 0.008937490 ubox
2 95 0.008817914 ubox
2 96 0.012364052 ubox
3 95 0.012139209 ubox
3 96 0.012371218 ubox
4 95 0.012152660 ubox
4 96 0.012401595 ubox
5 95 0.012183937 ubox
5 96 0.012487356 ubox
6 95 0.012271851 ubox
6 96 0.012695377 ubox
7 95 0.012485892 ubox
7 96 0.012552781 ubox
8 95 0.012324914 ubox
8 96 0.018257538 ubox
9 77 0.182142354 ubox
9 95 0.018190003 ubox
10 76 0.178452404 ubox
10 108 0.010614000 ubox
11 42 0.003305779 ubox
11 72 0.198739438 ubox
11 97 0.069740362 ubox
11 107 0.010543243 ubox
12 41 0.003721538 ubox
12 71 0.148752092 ubox
12 96 0.072247432 ubox
13 40 0.003717874 ubox
13 47 0.028504684 ubox
13 71 0.974036926 ubox
13 95 0.071472595 ubox
14 46 0.035322113 ubox
14 70 0.994504491 ubox
14 94 0.070807003 ubox
14 106 0.004342880 ubox
15 45 0.036346094 ubox
15 69 0.996604848 ubox
15 80 0.021381146 ubox
15 87 0.013985482 ubox
15 93 0.066507868 ubox
15 105 0.004784206 ubox
16 43 0.012672606 ubox
16 44 0.033931061 ubox
16 46 0.003212072 ubox
16 68 0.996230441 ubox
16 79 0.022332540 ubox
16 86 0.016778781 ubox
16 91 0.017645892 ubox
16 92 0.062438007 ubox
16 104 0.004570024 ubox
17 42 0.030797056 ubox
17 45 0.003619336 ubox
17 64 0.004985457 ubox
17 67 0.996341869 ubox
17 78 0.025022261 ubox
17 85 0.028151307 ubox
17 87 0.044933838 ubox
17 90 0.021545647 ubox
18 41 0.031612713 ubox
18 43 0.009115118 ubox
18 66 0.996299453 ubox
18 77 0.025027368 ubox
18 84 0.028140055 ubox
18 86 0.044915699 ubox
18 92 0.003199574 ubox
19 42 0.008472546 ubox
19 76 0.024994013 ubox
19 82 0.007231467 ubox
20 39 0.035455739 ubox
20 42 0.004534243 ubox
20 63 0.991867645 ubox
20 75 0.024476659 ubox
20 78 0.004730879 ubox
20 81 0.006467529 ubox
20 85 0.017235385 ubox
20 87 0.031145386 ubox
21 38 0.036916586 ubox
21 41 0.005530577 ubox
21 62 0.998169535 ubox
21 77 0.004743049 ubox
21 84 0.016828926 ubox
21 86 0.031037132 ubox
22 40 0.005472582 ubox
22 61 0.997563852 ubox
22 79 0.007438512 ubox
22 84 0.017956308 ubox
23 36 0.044802440 ubox
23 39 0.003184296 ubox
23 51 0.005103689 ubox
23 60 0.998371407 ubox
23 75 0.006306366 ubox
23 78 0.007499012 ubox
23 83 0.020171921 ubox
24 35 0.044941553 ubox
24 50 0.005133753 ubox
24 59 0.998272865 ubox
24 74 0.006556149 ubox
24 76 0.007478810 ubox
24 82 0.020140645 ubox
25 34 0.044929843 ubox
25 37 0.003737093 ubox
25 49 0.005139202 ubox
25 58 0.998412392 ubox
25 73 0.005249925 ubox
25 74 0.024204100 ubox
25 75 0.007548001 ubox
25 81 0.019580717 ubox
26 33 0.044811902 ubox
26 36 0.003740170 ubox
26 48 0.005138706 ubox
26 57 0.998404064 ubox
26 72 0.003400135 ubox
26 73 0.027719205 ubox
26 80 0.016870809 ubox
27 35 0.003599252 ubox
27 56 0.995801726 ubox
27 72 0.031161336 ubox
28 47 0.008491747 ubox
28 54 0.015262256 ubox
28 55 0.789628232 ubox
28 71 0.031307789 ubox
29 44 0.011658086 ubox
29 46 0.010662090 ubox
29 47 0.003621435 ubox
29 53 0.020223338 ubox
29 54 0.462378883 ubox
29 55 0.015736637 ubox
29 70 0.030031363 ubox
30 41 0.004971598 ubox
30 43 0.016860176 ubox
30 44 0.288088575 ubox
30 46 0.003527999 ubox
30 53 0.256760865 ubox
30 54 0.055690544 ubox
30 55 0.042122045 ubox
31 40 0.006695939 ubox
31 41 0.029359221 ubox
31 43 0.307253935 ubox
31 53 0.076074446 ubox
31 54 0.166761278 ubox
31 55 0.270163196 ubox
31 66 0.005611343 ubox
32 40 0.029365639 ubox
32 41 0.141998327 ubox
32 53 0.171460644 ubox
32 54 0.314026395 ubox
32 55 0.515563875 ubox
32 65 0.005332620 ubox
32 66 0.030299799 ubox
33 40 0.140970151 ubox
33 41 0.294309410 ubox
33 53 0.313717248 ubox
33 54 0.605143577 ubox
33 55 0.102590244 ubox
33 65 0.030412817 ubox
33 66 0.010962257 ubox
34 40 0.295055953 ubox
34 41 0.010300767 ubox
34 47 0.034801839 ubox
34 53 0.611071182 ubox
34 54 0.119951149 ubox
34 55 0.065150562 ubox
34 65 0.010975575 ubox
35 40 0.009323147 ubox
35 41 0.003923757 ubox
35 44 0.014468671 ubox
35 46 0.031945772 ubox
35 53 0.111949958 ubox
35 54 0.072152620 ubox
35 55 0.123084963 ubox
36 40 0.004804329 ubox
36 43 0.015418156 ubox
36 53 0.119701877 ubox
36 54 0.504774189 ubox
36 55 0.025599662 ubox
36 62 0.032848688 ubox
37 43 0.011468551 ubox
37 53 0.520029073 ubox
37 54 0.029881931 ubox
37 61 0.032869449 ubox
37 84 0.021430500 ubox
38 42 0.007187363 ubox
38 45 0.125106267 ubox
38 48 0.095944771 ubox
38 52 0.502809025 ubox
38 60 0.032792957 ubox
38 83 0.023171035 ubox
38 85 0.003487298 ubox
39 44 0.124359393 ubox
39 46 0.210381499 ubox
39 47 0.074321074 ubox
39 53 0.008101108 ubox
39 84 0.003361916 ubox
40 45 0.216359126 ubox
40 49 0.903945723 ubox
40 50 0.031022390 ubox
40 51 0.019494448 ubox
40 52 0.013046953 ubox
40 58 0.032427519 ubox
40 59 0.004602605 ubox
40 81 0.024562639 ubox
41 48 0.904467408 ubox
41 49 0.029290614 ubox
41 50 0.017069194 ubox
41 51 0.013242917 ubox
41 57 0.032437490 ubox
41 58 0.004871264 ubox
41 80 0.024616279 ubox
41 101 0.003177558 ubox
42 47 0.889939697 ubox
42 55 0.003275742 ubox
42 79 0.024617377 ubox
43 51 0.025809633 ubox
43 57 0.005013828 ubox
43 78 0.024615967 ubox
44 50 0.024664040 ubox
44 56 0.005126769 ubox
45 53 0.248607685 ubox
45 55 0.005026979 ubox
45 77 0.024607136 ubox
46 52 0.248770567 ubox
46 76 0.024600590 ubox
47 51 0.243395592 ubox
47 56 0.010219679 ubox
47 75 0.024519038 ubox
47 97 0.023582845 ubox
48 54 0.034038359 ubox
48 55 0.011913086 ubox
48 96 0.037147581 ubox
49 53 0.034624470 ubox
49 54 0.012816256 ubox
49 95 0.037262018 ubox
50 94 0.037120203 ubox
51 71 0.024524262 ubox
51 92 0.037473369 ubox
52 70 0.024541124 ubox
52 91 0.037659325 ubox
53 69 0.024487944 ubox
53 89 0.010290448 ubox
53 90 0.036626895 ubox
54 88 0.013636850 ubox
54 89 0.035520359 ubox
55 67 0.007343471 ubox
55 87 0.016302276 ubox
55 88 0.034315112 ubox
56 66 0.004587628 ubox
56 86 0.018293720 ubox
57 65 0.004621100 ubox
57 66 0.023929400 ubox
58 65 0.023927133 ubox
60 84 0.028804995 ubox
60 86 0.016402073 ubox
61 81 0.020361866 ubox
61 83 0.028902153 ubox
61 85 0.016652072 ubox
62 80 0.020441508 ubox
62 82 0.024057403 ubox
62 85 0.007225858 ubox
63 79 0.020377539 ubox
63 84 0.007157697 ubox
64 77 0.020517710 ubox
64 84 0.003327856 ubox
65 76 0.020571805 ubox
65 81 0.066921890 ubox
66 75 0.020587096 ubox
66 80 0.067045438 ubox
67 79 0.065796567 ubox
69 77 0.067586849 ubox
70 76 0.067650488 ubox
70 102 0.015889894 ubox
71 75 0.066264977 ubox
71 78 0.035865341 ubox
71 101 0.020797948 ubox
71 105 0.069685932 ubox
71 107 0.004590752 ubox
72 77 0.035251490 ubox
72 79 0.005206380 ubox
72 96 0.009110219 ubox
72 100 0.021967859 ubox
72 104 0.073145813 ubox
72 106 0.010155143 ubox
73 95 0.012538042 ubox
73 96 0.035595208 ubox
74 94 0.012342976 ubox
74 95 0.004270594 ubox
74 96 0.129640346 ubox
75 92 0.012307376 ubox
75 95 0.172614031 ubox
76 86 0.021491725 ubox
76 91 0.012148687 ubox
76 94 0.173103655 ubox
76 98 0.064104521 ubox
76 103 0.039649417 ubox
76 106 0.039860925 ubox
77 83 0.003213132 ubox
77 85 0.051596672 ubox
77 87 0.009760067 ubox
77 90 0.010581910 ubox
77 93 0.173202928 ubox
77 97 0.040615476 ubox
77 102 0.039270358 ubox
77 105 0.044076117 ubox
78 84 0.051643288 ubox
78 86 0.010129411 ubox
78 92 0.172990258 ubox
78 96 0.027543873 ubox
79 97 0.930720068 ubox
80 96 0.977914226 ubox
81 92 0.004690451 ubox
81 95 0.978654711 ubox
81 96 0.027381414 ubox
82 91 0.009232316 ubox
82 94 0.972563651 ubox
82 95 0.027553652 ubox
82 96 0.009196288 ubox
83 95 0.012854705 ubox
84 93 0.977942903 ubox
85 92 0.977961461 ubox
86 93 0.064954584 ubox
86 97 0.037912790 ubox
87 92 0.064838633 ubox
87 96 0.040061975 ubox
88 95 0.039979785 ubox
88 96 0.009959308 ubox
89 95 0.010081970 ubox
89 96 0.016006880 ubox
90 95 0.016105966 ubox
94 102 0.014626359 ubox
95 101 0.015420843 ubox
95 102 0.006314521 ubox
96 101 0.008962443 ubox
96 105 0.039530374 ubox
96 107 0.006193544 ubox
97 103 0.012330456 ubox
97 104 0.038920195 ubox
97 106 0.008298178 ubox
98 102 0.015389030 ubox
98 108 0.017125179 ubox
99 107 0.019534646 ubox
99 108 0.027915449 ubox
100 107 0.028599906 ubox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
15 69 0.9500000 lbox
16 68 0.9500000 lbox
17 67 0.9500000 lbox
18 66 0.9500000 lbox
20 63 0.9500000 lbox
21 62 0.9500000 lbox
22 61 0.9500000 lbox
23 60 0.9500000 lbox
24 59 0.9500000 lbox
25 58 0.9500000 lbox
26 57 0.9500000 lbox
27 56 0.9500000 lbox
32 55 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
79 97 0.9500000 lbox
80 96 0.9500000 lbox
81 95 0.9500000 lbox
82 94 0.9500000 lbox
84 93 0.9500000 lbox
85 92 0.9500000 lbox
showpage
end
%%EOF
