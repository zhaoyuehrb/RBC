%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAUAGAUCCGGCAAGAGCUUAGCUGUGAUCACUCCUAGCUGCUCAGCAAACCACUGAGGUUCCUGGGAAAAAAAAAAAAAUAUCUCAAGGGUGUGUUAACUUGGGACACUCGUUAACUGGGGGACCUUCUUGAGGCUUUUUUCCUUCUUUUUAAAAAUCAUCUUUGAUUAUUCUUCUUUUCUAGUAAAAUAAUAUUUAGAAAAAAUA\
) } def
/len { sequence length } bind def

/coor [
[97.08606720 229.83396912]
[84.69091034 221.38647461]
[87.36109924 206.62600708]
[88.61122894 191.67819214]
[89.86135101 176.73037720]
[91.11148071 161.78256226]
[83.61337280 161.61427307]
[75.34991455 174.13287354]
[67.08645630 186.65147400]
[58.82300568 199.17007446]
[50.65341949 211.75013733]
[42.57815933 224.39094543]
[34.50290298 237.03176880]
[26.42764282 249.67257690]
[32.96782303 263.64501953]
[30.89304733 278.93225098]
[20.86536598 290.65612793]
[6.08457947 295.07559204]
[-8.73281956 290.78045654]
[-18.85865211 279.14126587]
[-21.06180382 263.87200928]
[-14.63925362 249.84510803]
[-1.64041591 241.53645325]
[13.78682709 241.59732056]
[21.86208725 228.95649719]
[29.93734550 216.31568909]
[38.01260376 203.67488098]
[38.96449661 196.34518433]
[46.30440521 190.90661621]
[54.56785965 178.38801575]
[62.83131409 165.86941528]
[71.09477234 153.35083008]
[57.74176407 140.37738037]
[49.40456390 124.50334930]
[46.53753662 107.50000000]
[31.53753853 107.50000000]
[16.53753853 107.50000000]
[1.53753817 107.50000000]
[-13.46246147 107.50000000]
[-28.46246147 107.50000000]
[-38.21705246 121.31780243]
[-54.12755966 126.54702759]
[-69.86214447 121.31513977]
[-79.28258514 107.87187958]
[-94.28090668 108.09626770]
[-109.27922821 108.32066345]
[-124.27754974 108.54505157]
[-139.27586365 108.76944733]
[-149.00619507 121.01095581]
[-164.33900452 124.08329010]
[-178.03459167 116.53578186]
[-183.62632751 101.93213654]
[-178.47396851 87.16774750]
[-165.01029968 79.21390533]
[-149.59245300 81.82617950]
[-139.50025940 93.77112579]
[-124.50193787 93.54673004]
[-109.50361633 93.32234192]
[-94.50529480 93.09794617]
[-79.50697327 92.87355804]
[-72.86793518 81.29009247]
[-61.27913284 74.44499207]
[-47.71336746 74.21842194]
[-35.71244431 80.77648926]
[-28.46246147 92.50000000]
[-13.46246147 92.50000000]
[1.53753817 92.50000000]
[16.53753853 92.50000000]
[31.53753853 92.50000000]
[46.53753662 92.50000000]
[48.72132111 83.11858368]
[52.53751373 74.27457428]
[57.86462784 66.24951172]
[64.53308105 59.29886246]
[72.33058929 53.64389420]
[81.00892639 49.46462631]
[90.29183197 46.89410400]
[99.88378143 46.01415634]
[109.47943115 46.85279846]
[118.77331543 49.38332748]
[127.46956635 53.52519226]
[136.82191467 41.79771805]
[146.17425537 30.07024574]
[155.52661133 18.34277344]
[154.86071777 5.46129656]
[162.89237976 -4.11411333]
[174.89776611 -5.60040808]
[184.42449951 -17.18666267]
[193.95124817 -28.77291679]
[203.47798157 -40.35917282]
[213.00471497 -51.94542694]
[222.53144836 -63.53168106]
[232.05818176 -75.11793518]
[241.58493042 -86.70418549]
[251.11166382 -98.29044342]
[234.86843872 -108.18141937]
[228.01655579 -131.84228516]
[229.36114502 -146.78189087]
[230.70573425 -161.72151184]
[232.05032349 -176.66111755]
[233.39491272 -191.60073853]
[234.73950195 -206.54035950]
[227.08740234 -216.92405701]
[228.51535034 -229.34005737]
[237.71592712 -237.19421387]
[239.28385925 -252.11203003]
[232.12304688 -266.86517334]
[241.54200745 -280.28958130]
[257.85131836 -278.57540894]
[264.27334595 -263.48602295]
[254.20167542 -250.54411316]
[252.63375854 -235.62628174]
[260.62527466 -220.00286865]
[249.67910767 -205.19577026]
[248.33451843 -190.25614929]
[246.98992920 -175.31652832]
[245.64533997 -160.37692261]
[244.30075073 -145.43730164]
[242.95616150 -130.49769592]
[256.16567993 -123.38935089]
[269.37402344 -116.28163147]
[281.10150146 -125.63397980]
[292.82897949 -134.98632812]
[304.55645752 -144.33866882]
[316.28390503 -153.69102478]
[328.01138306 -163.04336548]
[339.30746460 -172.91244507]
[350.14938354 -183.27838135]
[360.99130249 -193.64433289]
[371.83322144 -204.01026917]
[379.10327148 -219.32637024]
[395.83337402 -216.58035278]
[397.82601929 -199.74391174]
[382.19915771 -193.16835022]
[371.35723877 -182.80239868]
[360.51531982 -172.43646240]
[349.67340088 -162.07052612]
[364.60568237 -160.64686584]
[374.26416016 -149.17019653]
[373.11657715 -134.21415710]
[361.82025146 -124.34533691]
[346.84558105 -125.21645355]
[336.76977539 -136.32852173]
[337.36373901 -151.31588745]
[325.63626099 -141.96354675]
[313.90878296 -132.61120605]
[302.18133545 -123.25885010]
[290.45385742 -113.90650940]
[278.72637939 -104.55416107]
[293.44854736 -107.42779541]
[307.89691162 -103.39733887]
[319.00576782 -93.31797028]
[324.41793823 -79.32839966]
[322.98510742 -64.39698792]
[315.01126099 -51.69196701]
[302.18832397 -43.90914154]
[287.23715210 -42.69991302]
[273.33013916 -48.32085800]
[263.41815186 -59.57930374]
[259.60437012 -74.08637238]
[262.69790649 -88.76371002]
[253.17117310 -77.17745209]
[243.64443970 -65.59120178]
[234.11770630 -54.00494385]
[224.59097290 -42.41868973]
[215.06423950 -30.83243561]
[205.53749084 -19.24617958]
[196.01075745 -7.65992594]
[186.48402405 3.92632818]
[184.54663086 21.36771202]
[167.25407410 27.69512177]
[157.90173340 39.42259216]
[148.54937744 51.15006638]
[139.19703674 62.87753677]
[151.32122803 79.33800507]
[156.66128540 99.58796692]
[154.11369324 120.87695312]
[143.67294312 140.17291260]
[126.48255157 154.59393311]
[134.17604065 167.47065735]
[141.86952209 180.34739685]
[149.56301880 193.22412109]
[157.25650024 206.10086060]
[164.94999695 218.97758484]
[172.64347839 231.85432434]
[180.33697510 244.73104858]
[195.61547852 243.82237244]
[209.56144714 250.12863159]
[218.97016907 262.20068359]
[221.67959595 277.26446533]
[217.06713867 291.85842896]
[206.19268799 302.62899780]
[191.55513000 307.10116577]
[176.51805115 304.24725342]
[164.53686523 294.72308350]
[158.36476135 280.71722412]
[159.42005920 265.44815063]
[167.46023560 252.42454529]
[159.76675415 239.54780579]
[152.07325745 226.67108154]
[144.37977600 213.79434204]
[136.68627930 200.91761780]
[128.99279785 188.04087830]
[121.29930878 175.16415405]
[113.60581970 162.28741455]
[106.10770416 162.11914062]
[106.68594360 177.10798645]
[107.26418304 192.09683228]
[107.84241486 207.08569336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 32]
[8 31]
[9 30]
[10 29]
[11 27]
[12 26]
[13 25]
[14 24]
[35 70]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[81 174]
[82 173]
[83 172]
[84 171]
[87 169]
[88 168]
[89 167]
[90 166]
[91 165]
[92 164]
[93 163]
[94 162]
[95 161]
[97 119]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[105 112]
[106 111]
[121 149]
[122 148]
[123 147]
[124 146]
[125 145]
[126 144]
[127 137]
[128 136]
[129 135]
[130 134]
[179 205]
[180 204]
[181 203]
[182 202]
[183 201]
[184 200]
[185 199]
[186 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
