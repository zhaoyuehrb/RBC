%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PUM1)
} def

/sequence { (\
AGUGGGCCGCCAUGUUGUCGGAGUGAAAGGUAAGGGGGAGCGAGAGCGCCAGAGAGAGAAGAUCGGGGGGCUGAAAUCCAUCUUCAUCCUACCGCUCCGCCCGUGUUGGUGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 13 0.013817632 ubox
3 12 0.014638861 ubox
3 103 0.004199281 ubox
3 111 0.006465957 ubox
4 11 0.014906710 ubox
4 102 0.005806987 ubox
5 10 0.014893430 ubox
5 101 0.005810092 ubox
6 100 0.005804927 ubox
6 110 0.135369145 ubox
7 99 0.005467141 ubox
7 109 0.139603041 ubox
7 112 0.986790736 ubox
8 108 0.139627849 ubox
8 111 0.989976928 ubox
9 106 0.008170045 ubox
9 107 0.135166526 ubox
9 110 0.989664158 ubox
10 105 0.008258088 ubox
10 109 0.990050801 ubox
11 105 0.150998676 ubox
11 108 0.988273198 ubox
12 104 0.182927954 ubox
12 106 0.167850841 ubox
12 107 0.955677897 ubox
13 103 0.219737777 ubox
13 105 0.233304360 ubox
14 19 0.004435892 ubox
14 100 0.007186233 ubox
14 102 0.220491460 ubox
14 104 0.173920082 ubox
14 106 0.041911370 ubox
14 107 0.004818619 ubox
15 99 0.004255943 ubox
15 103 0.103051468 ubox
15 105 0.056597142 ubox
16 103 0.712693446 ubox
16 105 0.020752530 ubox
17 100 0.375037072 ubox
17 102 0.728279914 ubox
17 104 0.016436013 ubox
18 26 0.004234153 ubox
18 99 0.078973752 ubox
18 103 0.016880804 ubox
19 25 0.004469577 ubox
19 99 0.990548109 ubox
19 103 0.017849686 ubox
20 98 0.999766859 ubox
20 102 0.017515020 ubox
21 97 0.999811483 ubox
21 101 0.017416599 ubox
22 96 0.999673045 ubox
23 95 0.999807786 ubox
23 100 0.016976713 ubox
24 94 0.999269666 ubox
24 99 0.016933128 ubox
25 93 0.993217264 ubox
25 97 0.008197940 ubox
25 98 0.014899581 ubox
26 96 0.011249642 ubox
28 90 0.980841456 ubox
29 88 0.102812167 ubox
29 89 0.991491118 ubox
29 90 0.006979848 ubox
29 93 0.072117987 ubox
30 87 0.113880243 ubox
30 88 0.989784334 ubox
30 89 0.007211971 ubox
30 92 0.075544220 ubox
31 86 0.405958585 ubox
31 91 0.075236625 ubox
32 84 0.800634976 ubox
32 90 0.054033505 ubox
33 83 0.848855923 ubox
33 84 0.420817710 ubox
33 90 0.050673248 ubox
34 82 0.851882909 ubox
34 83 0.493673654 ubox
34 84 0.078971712 ubox
34 85 0.030380204 ubox
34 88 0.007210044 ubox
34 89 0.071654097 ubox
34 90 0.010213075 ubox
35 50 0.003902648 ubox
35 79 0.011351753 ubox
35 81 0.691273801 ubox
35 82 0.499032411 ubox
35 83 0.085975002 ubox
35 84 0.028350567 ubox
35 85 0.082275883 ubox
35 87 0.005403322 ubox
35 88 0.071448116 ubox
35 89 0.013217723 ubox
36 49 0.003871810 ubox
36 50 0.015906674 ubox
36 78 0.011507038 ubox
36 79 0.076149509 ubox
36 81 0.450310235 ubox
36 82 0.086079829 ubox
36 83 0.026657851 ubox
36 84 0.082285589 ubox
36 85 0.004454650 ubox
36 87 0.057005470 ubox
36 88 0.013255061 ubox
36 90 0.003294750 ubox
37 49 0.015775917 ubox
37 50 0.061046538 ubox
37 77 0.011250843 ubox
37 78 0.072528782 ubox
37 79 0.988898797 ubox
37 81 0.021988869 ubox
37 82 0.018740589 ubox
37 83 0.081754738 ubox
37 85 0.037203653 ubox
37 89 0.004026423 ubox
37 102 0.006225740 ubox
38 49 0.061048287 ubox
38 77 0.062471639 ubox
38 78 0.990536074 ubox
38 81 0.013666505 ubox
38 82 0.081918272 ubox
38 84 0.037444115 ubox
38 85 0.008946008 ubox
38 88 0.004033767 ubox
38 101 0.006239555 ubox
39 77 0.986334047 ubox
39 81 0.081503159 ubox
39 83 0.037524026 ubox
39 84 0.008408864 ubox
39 87 0.003891916 ubox
40 47 0.065777304 ubox
40 49 0.012169731 ubox
40 82 0.037471782 ubox
40 83 0.006991454 ubox
40 100 0.006700729 ubox
41 46 0.065875319 ubox
41 48 0.012284105 ubox
41 73 0.037508098 ubox
41 99 0.006800118 ubox
42 47 0.012069686 ubox
42 72 0.018671183 ubox
42 78 0.065671949 ubox
42 82 0.005753379 ubox
42 98 0.006800413 ubox
43 72 0.020022500 ubox
43 77 0.060926398 ubox
43 81 0.005401635 ubox
43 83 0.003220760 ubox
44 71 0.011909774 ubox
44 78 0.014370232 ubox
44 82 0.003303888 ubox
44 97 0.006847900 ubox
45 72 0.989197529 ubox
45 77 0.011696877 ubox
45 96 0.006850625 ubox
46 71 0.997296613 ubox
46 95 0.006852843 ubox
47 70 0.997235291 ubox
47 73 0.019009725 ubox
47 94 0.006852813 ubox
48 71 0.030159401 ubox
48 72 0.004157275 ubox
48 93 0.006829551 ubox
49 66 0.012267270 ubox
49 67 0.059992389 ubox
49 68 0.980431484 ubox
49 69 0.171426089 ubox
49 70 0.030432627 ubox
50 65 0.012731915 ubox
50 66 0.071711757 ubox
50 67 0.978977178 ubox
50 68 0.171437813 ubox
50 69 0.030392919 ubox
51 90 0.008213969 ubox
52 64 0.500034659 ubox
52 82 0.003384004 ubox
52 84 0.011050381 ubox
52 85 0.007201594 ubox
52 89 0.008736811 ubox
53 63 0.494478691 ubox
53 81 0.003382283 ubox
53 83 0.012363369 ubox
53 84 0.005846653 ubox
53 90 0.008718145 ubox
54 64 0.757151050 ubox
54 82 0.012937574 ubox
54 84 0.006133300 ubox
54 85 0.003503371 ubox
54 88 0.010584971 ubox
54 89 0.009317617 ubox
55 63 0.751209714 ubox
55 81 0.012920390 ubox
55 83 0.007675467 ubox
55 87 0.011108233 ubox
56 64 0.392209350 ubox
56 78 0.003587389 ubox
56 82 0.008434087 ubox
56 88 0.011649626 ubox
57 63 0.388568826 ubox
57 77 0.003578466 ubox
57 81 0.008380044 ubox
57 83 0.003425927 ubox
57 87 0.012302780 ubox
58 64 0.042587409 ubox
58 78 0.012504739 ubox
58 82 0.003732459 ubox
58 85 0.062361948 ubox
59 63 0.037129828 ubox
59 77 0.012194942 ubox
59 81 0.003661426 ubox
59 84 0.062431361 ubox
60 83 0.062464292 ubox
61 78 0.007509533 ubox
61 82 0.062506549 ubox
62 77 0.007332355 ubox
62 81 0.062368752 ubox
63 74 0.020422217 ubox
63 76 0.003392934 ubox
63 80 0.059158729 ubox
64 73 0.022012199 ubox
65 72 0.022012984 ubox
65 78 0.004806636 ubox
65 79 0.050135217 ubox
66 71 0.022000116 ubox
66 77 0.004495023 ubox
66 78 0.049931395 ubox
66 79 0.030233176 ubox
67 77 0.046505650 ubox
67 78 0.030642231 ubox
67 79 0.013649620 ubox
68 77 0.030373559 ubox
68 78 0.013684514 ubox
68 79 0.009748590 ubox
69 77 0.013120845 ubox
69 78 0.009777836 ubox
70 77 0.007508331 ubox
73 79 0.004452883 ubox
99 106 0.004777546 ubox
99 110 0.004418265 ubox
100 105 0.006530153 ubox
100 109 0.005059448 ubox
101 108 0.005043810 ubox
101 109 0.005425654 ubox
101 112 0.012362904 ubox
102 108 0.005505385 ubox
102 111 0.012395952 ubox
103 107 0.003459629 ubox
103 110 0.009725436 ubox
104 109 0.005722030 ubox
7 112 0.9500000 lbox
8 111 0.9500000 lbox
9 110 0.9500000 lbox
10 109 0.9500000 lbox
11 108 0.9500000 lbox
12 107 0.9500000 lbox
16 103 0.9500000 lbox
17 102 0.9500000 lbox
19 99 0.9500000 lbox
20 98 0.9500000 lbox
21 97 0.9500000 lbox
22 96 0.9500000 lbox
23 95 0.9500000 lbox
24 94 0.9500000 lbox
25 93 0.9500000 lbox
28 90 0.9500000 lbox
29 89 0.9500000 lbox
30 88 0.9500000 lbox
32 84 0.9500000 lbox
33 83 0.9500000 lbox
34 82 0.9500000 lbox
35 81 0.9500000 lbox
37 79 0.9500000 lbox
38 78 0.9500000 lbox
39 77 0.9500000 lbox
45 72 0.9500000 lbox
46 71 0.9500000 lbox
47 70 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
54 64 0.9500000 lbox
55 63 0.9500000 lbox
showpage
end
%%EOF
