%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGCGCCGACUAUUUCUUCCGCCGUCCGCCGGUGGCGAGGCCCAGGCUGUCGCCGGGUGUGCAGCGGCGUCGCGGCCAGUAGAGGGAUUCUGGGUAACGGCCCGGACCCCCGGCUGGGCUUCUGGCUCGGCGCAGCAGGUUCCAUUCACGCCAAGUCUGUUGGCAGUGGCAGUUGUAGGGCCAAGGGCGGUUGUAGGACCCGGAGCAGCCGGAC\
) } def
/len { sequence length } bind def

/coor [
[-190.81015015 548.77081299]
[-199.68234253 548.73828125]
[-208.46379089 560.89910889]
[-210.27000427 576.61688232]
[-223.99372864 582.40557861]
[-232.77517700 594.56640625]
[-241.55662537 606.72723389]
[-250.33805847 618.88812256]
[-236.50753784 613.08148193]
[-221.50947571 613.32269287]
[-207.87281799 619.57098389]
[-197.89694214 630.77288818]
[-193.26397705 645.03942871]
[-194.75511169 659.96514893]
[-202.11891174 673.03320312]
[-214.11370850 682.04016113]
[-228.71696472 685.46722412]
[-243.46632385 682.73651123]
[-255.87475586 674.30853271]
[-263.84997559 661.60437012]
[-266.04724121 646.76617432]
[-262.09545898 632.29486084]
[-273.00607300 642.58850098]
[-283.91668701 652.88214111]
[-294.82730103 663.17572021]
[-296.72927856 679.10565186]
[-310.44494629 687.42791748]
[-325.45281982 681.75836182]
[-330.24011230 666.44622803]
[-321.13446045 653.23767090]
[-305.12091064 652.26513672]
[-294.21029663 641.97149658]
[-283.29971313 631.67785645]
[-272.38909912 621.38427734]
[-262.49890137 610.10668945]
[-253.71746826 597.94580078]
[-244.93601990 585.78497314]
[-236.15458679 573.62408447]
[-234.97647095 558.77618408]
[-220.62463379 552.11767578]
[-211.84320068 539.95684814]
[-211.53553772 519.31823730]
[-191.83642578 510.87664795]
[-183.59378052 498.34432983]
[-182.54490662 491.03134155]
[-175.13902283 485.69088745]
[-166.71499634 473.27978516]
[-158.29096985 460.86865234]
[-149.86692810 448.45755005]
[-141.44290161 436.04644775]
[-133.01887512 423.63531494]
[-134.98397827 411.70184326]
[-128.07055664 401.29376221]
[-115.52941132 398.29061890]
[-106.92576599 386.00332642]
[-98.32212067 373.71606445]
[-89.71847534 361.42877197]
[-81.11483002 349.14151001]
[-72.51118469 336.85421753]
[-71.92412567 319.31344604]
[-55.16750717 311.67398071]
[-46.74347687 299.26287842]
[-38.31944275 286.85177612]
[-29.89541245 274.44064331]
[-21.47138023 262.02954102]
[-13.04734993 249.61843872]
[-12.30158615 234.74250793]
[1.85051906 227.66943359]
[10.27455044 215.25831604]
[11.42968559 207.96136475]
[18.91244507 202.72917175]
[27.51609230 190.44189453]
[24.68481255 175.86384583]
[33.23509598 163.28024292]
[48.54508972 160.40937805]
[57.14873886 148.12210083]
[65.75238037 135.83480835]
[74.35603333 123.54753113]
[69.16400146 116.16294861]
[66.04507446 107.69172668]
[65.20893097 98.70339203]
[66.71179199 89.80223083]
[70.45260620 81.58666229]
[76.17989349 74.60901642]
[83.50859833 69.33840942]
[79.41600037 54.90751648]
[75.32339478 40.47662735]
[61.80463028 32.73836899]
[57.85972595 18.04509163]
[65.32028198 5.20469952]
[61.22768402 -9.22619152]
[57.13508224 -23.65708351]
[53.04248047 -38.08797455]
[48.94988251 -52.51886749]
[44.85728073 -66.94976044]
[40.76468277 -81.38064575]
[28.63071442 -92.41236877]
[32.38140106 -108.37684631]
[48.15835571 -112.85118866]
[59.73160172 -101.23258209]
[55.19557190 -85.47325134]
[59.28817368 -71.04235840]
[63.38077545 -56.61146545]
[67.47337341 -42.18057632]
[71.56597137 -27.74968338]
[75.65857697 -13.31879139]
[79.75117493 1.11209953]
[92.84188080 8.12415314]
[97.19793701 22.70082855]
[89.75428772 36.38402557]
[93.84689331 50.81491852]
[97.93949127 65.24581146]
[105.66902161 62.71638107]
[114.34389496 62.00855637]
[120.68317413 48.41394043]
[127.02244568 34.81932068]
[133.36172485 21.22470474]
[139.70098877 7.63008881]
[146.04026794 -5.96452808]
[152.37954712 -19.55914497]
[158.71881104 -33.15376282]
[159.93287659 -50.06418228]
[176.51852417 -53.57883835]
[184.48718262 -38.61432266]
[172.31343079 -26.81448746]
[165.97415161 -13.21987057]
[159.63488770 0.37474597]
[153.29560852 13.96936321]
[146.95632935 27.56398010]
[140.61706543 41.15859604]
[134.27778625 54.75321198]
[127.93851471 68.34783173]
[137.24205017 80.11406708]
[151.93215942 77.08080292]
[166.62226868 74.04753876]
[181.31237793 71.01427460]
[196.00248718 67.98101044]
[199.45484924 57.89315414]
[206.72613525 50.20569611]
[216.45681763 46.25849533]
[226.86746216 46.70109177]
[236.08406067 51.38677597]
[242.47535706 59.41108704]
[257.28378296 57.02148438]
[272.09222412 54.63188171]
[286.90066528 52.24227905]
[301.70910645 49.85267639]
[305.74945068 46.55958557]
[310.20343018 45.27178192]
[314.23883057 45.81144333]
[317.21435547 47.69654846]
[332.11294556 45.95515442]
[347.01150513 44.21376038]
[361.91009521 42.47236633]
[376.80865479 40.73097229]
[387.84698486 29.08901405]
[403.81832886 30.60397720]
[412.47088623 44.11371231]
[407.16711426 59.25470734]
[391.97564697 64.41208649]
[378.55004883 55.62954712]
[363.65148926 57.37094116]
[348.75289917 59.11233521]
[333.85433960 60.85372925]
[318.95574951 62.59512329]
[304.09872437 64.66110992]
[289.29028320 67.05071259]
[274.48184204 69.44031525]
[259.67340088 71.82991791]
[244.86495972 74.21952820]
[234.64472961 90.80818939]
[215.21864319 94.58468628]
[199.03575134 82.67111969]
[184.34564209 85.70438385]
[169.65553284 88.73764801]
[154.96542358 91.77091217]
[140.27531433 94.80417633]
[132.57720947 120.84939575]
[110.99517059 135.06297302]
[86.64331055 132.15118408]
[78.03966522 144.43846130]
[69.43601990 156.72573853]
[60.83237076 169.01301575]
[63.37096786 184.38160706]
[54.47061157 196.72009277]
[39.80337143 199.04554749]
[31.19972610 211.33282471]
[22.68566322 223.68234253]
[14.26163101 236.09346008]
[12.91332436 251.85710144]
[-0.63623786 258.04244995]
[-9.06026936 270.45358276]
[-17.48430061 282.86468506]
[-25.90833282 295.27578735]
[-34.33236313 307.68692017]
[-42.75639725 320.09802246]
[-41.10292816 332.88729858]
[-48.37175751 343.05035400]
[-60.22389984 345.45785522]
[-68.82754517 357.74514771]
[-77.43119049 370.03240967]
[-86.03484344 382.31970215]
[-94.63848877 394.60699463]
[-103.24213409 406.89425659]
[-104.42261505 425.27230835]
[-120.60775757 432.05935669]
[-129.03178406 444.47045898]
[-137.45582581 456.88159180]
[-145.87985229 469.29269409]
[-154.30387878 481.70379639]
[-162.72792053 494.11492920]
[-171.06146240 506.58694458]
[-179.30410767 519.11926270]
[-176.18742371 528.01123047]
[-177.48995972 537.20428467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[5 38]
[6 37]
[7 36]
[8 35]
[22 34]
[23 33]
[24 32]
[25 31]
[43 213]
[44 212]
[46 211]
[47 210]
[48 209]
[49 208]
[50 207]
[51 206]
[54 204]
[55 203]
[56 202]
[57 201]
[58 200]
[59 199]
[61 196]
[62 195]
[63 194]
[64 193]
[65 192]
[66 191]
[68 189]
[69 188]
[71 187]
[72 186]
[75 183]
[76 182]
[77 181]
[78 180]
[85 112]
[86 111]
[87 110]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
[133 177]
[134 176]
[135 175]
[136 174]
[137 173]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
