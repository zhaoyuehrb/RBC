%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCGGCUUCCGGUGCUAGGUGGAGGGAAGGAAGGAGGGAGCCGGGGAGUGGGCCAGGGCAGCAGCCGGGCUGAAGUCGGCUUGGGGAGCCAGAGGGAGCGGAGCGGAACCUGCGGGGCAGAGGCGGCGGCCGCAGCGGCGCAGCUGAUAGCAGGAACAGGAUCAAGUCUUCCAUACCAGGGACCAGGCCAAAACCAGACUGCCACUGCCCCUACUUGGGCCCCACUGUCCCCAGAAAGCAGCUGCUGUGAUC\
) } def
/len { sequence length } bind def

/coor [
[31.04530144 841.62200928]
[30.67428589 826.62658691]
[30.30326843 811.63116455]
[29.93225288 796.63574219]
[29.56123543 781.64038086]
[29.19021988 766.64495850]
[28.81920242 751.64953613]
[18.64474678 747.18847656]
[10.82485580 739.22540283]
[6.50967932 728.87713623]
[6.35406208 717.61511230]
[10.41845226 707.05596924]
[18.15475845 698.72979736]
[28.47994423 693.85815430]
[28.66546631 678.85931396]
[28.85098839 663.86041260]
[29.03651047 648.86157227]
[17.00527000 640.12158203]
[12.37269211 625.80364990]
[17.11476707 611.33416748]
[29.61209869 602.32733154]
[29.79762077 587.32849121]
[29.98314285 572.32965088]
[18.63688087 582.14099121]
[3.66833401 581.17010498]
[-6.31545401 569.97528076]
[-5.57371712 554.99365234]
[5.46703911 544.83972168]
[20.45828438 545.35217285]
[30.77998543 556.23645020]
[32.07705307 541.29266357]
[33.37412262 526.34881592]
[26.76634598 513.00018311]
[35.66798019 499.92074585]
[36.96504974 484.97692871]
[30.35727310 471.62826538]
[39.25891113 458.54885864]
[40.55597687 443.60504150]
[41.85304642 428.66122437]
[39.30745316 421.74487305]
[43.25968933 413.54098511]
[44.74148560 398.61434937]
[46.22328186 383.68771362]
[39.78110886 370.25836182]
[48.84383392 357.29003906]
[50.32563019 342.36340332]
[51.80742645 327.43676758]
[53.19688416 312.50125122]
[54.49395370 297.55743408]
[51.94836044 290.64111328]
[55.90059662 282.43719482]
[57.38239288 267.51058960]
[58.86418915 252.58395386]
[60.34598541 237.65731812]
[57.88612747 230.71002197]
[61.93953323 222.55563354]
[63.60583115 207.64848328]
[65.17990875 192.73129272]
[66.66170502 177.80467224]
[68.14350128 162.87803650]
[69.62529755 147.95140076]
[71.10709381 133.02478027]
[61.67209244 121.36369324]
[46.76493073 119.69739532]
[31.85777092 118.03109741]
[16.95060921 116.36479950]
[0.53784275 120.61420441]
[-8.08899784 106.01921082]
[3.54747438 93.68920898]
[18.61690712 101.45764160]
[33.52406693 103.12393951]
[48.43122864 104.79023743]
[63.33839035 106.45653534]
[63.76665878 96.04531860]
[67.03118134 86.38039398]
[72.75350952 78.20053864]
[80.37281799 72.09443665]
[89.19889832 68.45875549]
[98.47376251 67.47369385]
[101.24073029 52.73110962]
[104.00769806 37.98852158]
[106.77467346 23.24593544]
[109.54164124 8.50334835]
[112.30860901 -6.23923922]
[115.07557678 -20.98182678]
[106.60364532 -29.27537346]
[103.20944977 -40.50980377]
[105.62225342 -51.87273788]
[113.13244629 -60.57725143]
[123.79490662 -64.54536438]
[126.92568207 -79.21499634]
[113.53260040 -92.92883301]
[111.16295624 -111.79872894]
[120.59859467 -128.13720703]
[137.84915161 -135.39880371]
[140.43357849 -150.17448425]
[143.01799011 -164.95016479]
[145.60241699 -179.72584534]
[148.18682861 -194.50152588]
[136.71704102 -209.60668945]
[139.90441895 -227.97839355]
[155.25572205 -237.98724365]
[157.47389221 -252.82232666]
[143.63026428 -261.02450562]
[134.02177429 -273.88366699]
[130.09860229 -289.40957642]
[132.43382263 -305.21328735]
[140.63990784 -318.87487793]
[153.43266296 -328.31399536]
[168.83212280 -332.10650635]
[170.86662292 -346.96789551]
[172.90113831 -361.82928467]
[174.93563843 -376.69067383]
[176.97015381 -391.55206299]
[166.34889221 -400.31277466]
[161.47537231 -413.07379150]
[163.52030945 -426.47042847]
[171.84507751 -437.02645874]
[184.19567871 -442.05621338]
[186.41383362 -456.89129639]
[188.63200378 -471.72637939]
[179.50355530 -484.34817505]
[181.96441650 -499.36145020]
[194.05361938 -507.98623657]
[196.27177429 -522.82135010]
[198.48994446 -537.65643311]
[192.87843323 -552.44903564]
[202.41275024 -563.89221191]
[204.63090515 -578.72729492]
[194.13511658 -590.31921387]
[193.59765625 -605.94750977]
[203.27232361 -618.23309326]
[218.59101868 -621.37500000]
[232.32072449 -613.88977051]
[237.97869873 -599.31164551]
[232.89341736 -584.52398682]
[219.46598816 -576.50915527]
[217.24783325 -561.67407227]
[223.01799011 -547.94250488]
[213.32502747 -535.43823242]
[211.10685730 -520.60314941]
[208.88870239 -505.76806641]
[217.92639160 -493.98437500]
[215.88819885 -478.90789795]
[203.46708679 -469.50820923]
[201.24891663 -454.67312622]
[199.03076172 -439.83804321]
[211.10629272 -428.69927979]
[214.18411255 -412.39248657]
[206.85398865 -397.31921387]
[191.83154297 -389.51754761]
[189.79702759 -374.65615845]
[187.76252747 -359.79476929]
[185.72801208 -344.93338013]
[183.69351196 -330.07199097]
[196.05989075 -323.46762085]
[205.45248413 -313.01956177]
[210.72994995 -299.96694946]
[211.24063110 -285.86721802]
[206.90295410 -272.41018677]
[198.21765137 -261.21569824]
[186.21003723 -253.63844299]
[172.30897522 -250.60417175]
[170.09080505 -235.76908875]
[178.68171692 -228.31051636]
[182.65827942 -217.52355957]
[180.92864990 -206.03677368]
[173.80668640 -196.70881653]
[162.96250916 -191.91711426]
[160.37809753 -177.14141846]
[157.79367065 -162.36573792]
[155.20925903 -147.59005737]
[152.62483215 -132.81437683]
[161.72363281 -126.44001007]
[167.82531738 -117.09491730]
[170.02174377 -106.10025024]
[167.96012878 -95.02741241]
[161.89907837 -85.47347260]
[152.67677307 -78.83080292]
[141.59532166 -76.08422852]
[138.46453857 -61.41458893]
[149.32533264 -46.65372467]
[145.86059570 -28.33231354]
[129.81816101 -18.21485710]
[127.05119324 -3.47226954]
[124.28422546 11.27031803]
[121.51725769 26.01290512]
[118.75028992 40.75549316]
[115.98331451 55.49808121]
[113.21634674 70.24066925]
[121.99530792 75.36089325]
[128.87913513 83.03240967]
[133.13981628 92.57600403]
[134.28686523 103.10945129]
[132.12223816 113.62900543]
[126.76770020 123.10502625]
[118.66146088 130.58270264]
[108.52325439 135.27804565]
[97.29092407 136.65946960]
[86.03372192 134.50657654]
[84.55192566 149.43319702]
[83.07012939 164.35983276]
[81.58833313 179.28646851]
[80.10653687 194.21308899]
[82.36869812 203.03390503]
[78.51299286 209.31477356]
[76.84669495 224.22193909]
[75.27261353 239.13911438]
[73.79081726 254.06575012]
[72.30902100 268.99237061]
[70.82722473 283.91900635]
[69.43776703 298.85452271]
[68.14070129 313.79833984]
[70.51178741 322.59048462]
[66.73405457 328.91857910]
[65.25225830 343.84518433]
[63.77046204 358.77182007]
[70.10665131 373.26882935]
[61.14991379 385.16952515]
[59.66811752 400.09613037]
[58.18632126 415.02276611]
[56.79685974 429.95828247]
[55.49979401 444.90209961]
[54.20272446 459.84591675]
[60.71772766 474.26345825]
[51.90886307 486.27398682]
[50.61179733 501.21780396]
[57.12679672 515.63531494]
[48.31793594 527.64587402]
[47.02087021 542.58972168]
[45.72380066 557.53350830]
[44.98199463 572.51519775]
[44.79647446 587.51403809]
[44.61095047 602.51287842]
[56.88167953 611.82604980]
[61.26440811 626.40838623]
[56.27910233 640.60736084]
[44.03536224 649.04711914]
[43.84984207 664.04595947]
[43.66431808 679.04479980]
[43.47879791 694.04364014]
[59.30670166 704.85668945]
[65.34003448 722.89239502]
[59.30081177 740.76708984]
[43.81461334 751.27850342]
[44.18563080 766.27392578]
[44.55664825 781.26934814]
[44.92766190 796.26477051]
[45.29867935 811.26013184]
[45.66969681 826.25555420]
[46.04071045 841.25097656]
[52.47697449 856.93572998]
[39.18693924 867.46240234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 251]
[2 250]
[3 249]
[4 248]
[5 247]
[6 246]
[7 245]
[14 241]
[15 240]
[16 239]
[17 238]
[21 234]
[22 233]
[23 232]
[30 231]
[31 230]
[32 229]
[34 227]
[35 226]
[37 224]
[38 223]
[39 222]
[41 221]
[42 220]
[43 219]
[45 217]
[46 216]
[47 215]
[48 213]
[49 212]
[51 211]
[52 210]
[53 209]
[54 208]
[56 207]
[57 206]
[58 204]
[59 203]
[60 202]
[61 201]
[62 200]
[63 73]
[64 72]
[65 71]
[66 70]
[79 190]
[80 189]
[81 188]
[82 187]
[83 186]
[84 185]
[85 184]
[90 181]
[91 180]
[95 173]
[96 172]
[97 171]
[98 170]
[99 169]
[102 164]
[103 163]
[110 155]
[111 154]
[112 153]
[113 152]
[114 151]
[119 147]
[120 146]
[121 145]
[124 142]
[125 141]
[126 140]
[128 138]
[129 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
