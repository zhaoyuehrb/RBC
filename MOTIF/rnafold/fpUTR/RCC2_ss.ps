%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGCCGCGCGCUCGCUUGCCGCGCGGCCGCACAUGUGUUUCUGUUUUGUGUUGUAGCAUUUGUUCUGGAAGCUCGUAUUUACAUUUUAAGUGUAUCUGGUGAGUGGGCUGGAGCCCUCGUCUGGGCCGGAAAAAAAAAAGCCCUCCGAUCCGUCUUUUAGUUGCUUCUCUUCCUUUUUUCUCUCCGGUUUCUCAUCACUCCAACCAGCCGCGACC\
) } def
/len { sequence length } bind def

/coor [
[127.98044586 188.53373718]
[117.93166351 199.67025757]
[103.48446655 203.70489502]
[89.11956787 199.38635254]
[79.29218292 188.05398560]
[77.04991913 173.22477722]
[69.64328766 186.26861572]
[62.23665237 199.31245422]
[54.83002090 212.35629272]
[47.42338562 225.40014648]
[40.01675415 238.44398499]
[32.61011887 251.48782349]
[25.29723358 264.58444214]
[18.07847214 277.73318481]
[22.73652267 292.83544922]
[15.27759075 306.76885986]
[0.12693200 311.26696777]
[-13.72683811 303.66116333]
[-18.06452370 288.46377563]
[-10.31265259 274.69119263]
[4.92972803 270.51443481]
[12.14848900 257.36569214]
[12.61179924 249.99404907]
[19.56627846 244.08119202]
[26.97291183 231.03735352]
[34.37954330 217.99351501]
[41.78617859 204.94966125]
[49.19281006 191.90582275]
[56.59944534 178.86198425]
[64.00608063 165.81814575]
[70.55584717 152.32368469]
[76.22146606 138.43481445]
[81.88708496 124.54593658]
[73.63448334 121.82969666]
[65.79222107 116.44204712]
[59.19037628 108.46554565]
[44.23704147 107.28329468]
[29.28370285 106.10104370]
[14.91663361 112.72659302]
[2.83878231 104.01024628]
[-12.11455441 102.82799530]
[-27.06789207 101.64574432]
[-42.02122879 100.46349335]
[-56.97456741 99.28124237]
[-71.92790222 98.09899902]
[-80.29910278 113.09861755]
[-94.34105682 122.89603424]
[-111.19883728 125.55833435]
[-127.47069550 120.59732819]
[-139.89456177 109.05820465]
[-146.00193787 93.29975891]
[-160.98303223 92.54695892]
[-175.96414185 91.79415131]
[-190.94523621 91.04134369]
[-205.28630066 98.99533844]
[-219.20396423 90.32179260]
[-218.38095093 73.94331360]
[-203.66387939 66.70867157]
[-190.19242859 76.06024933]
[-175.21133423 76.81305695]
[-160.23023987 77.56585693]
[-145.24913025 78.31866455]
[-139.98725891 66.44886017]
[-130.98405457 57.04928589]
[-119.29461670 51.25284576]
[-106.29953766 49.76833725]
[-93.54186249 52.79386520]
[-82.54387665 59.99070740]
[-74.62545013 70.52108765]
[-70.74565125 83.14566040]
[-55.79231644 84.32791138]
[-40.83897781 85.51015472]
[-25.88564301 86.69240570]
[-10.93230534 87.87465668]
[4.02103138 89.05690765]
[17.31853867 82.34679413]
[30.46595192 91.14771271]
[45.41928864 92.32995605]
[60.37262726 93.51220703]
[64.26151276 87.09920502]
[57.04272079 73.95047760]
[72.03927612 74.27320099]
[75.92816162 67.86019897]
[67.96720886 55.14708710]
[60.00625610 42.43397522]
[52.04530716 29.72085953]
[44.08435440 17.00774574]
[36.12340546 4.29463243]
[22.59258080 -5.92070627]
[28.66299629 -21.75062752]
[45.55473709 -20.29960442]
[48.83651733 -3.66631818]
[56.79747009 9.04679585]
[64.75842285 21.75990868]
[72.71936798 34.47302246]
[80.68032074 47.18613815]
[88.64127350 59.89925003]
[113.49837494 66.52731323]
[126.34899902 84.62759399]
[140.76594543 80.48613739]
[155.18289185 76.34468079]
[169.59983826 72.20323181]
[184.01678467 68.06177521]
[198.37284851 63.71393967]
[212.66505432 59.16061783]
[226.95726013 54.60729599]
[241.24946594 50.05397797]
[255.54168701 45.50065613]
[269.83389282 40.94733429]
[283.91696167 35.78334808]
[297.76486206 30.01825523]
[311.61273193 24.25316429]
[325.46060181 18.48807144]
[339.30850220 12.72297955]
[353.15637207 6.95788765]
[363.64825439 -3.76221299]
[369.11404419 -17.73092651]
[374.57986450 -31.69964218]
[380.04565430 -45.66835403]
[373.48199463 -60.04520416]
[379.08493042 -74.82297516]
[393.53036499 -81.23427582]
[408.24807739 -75.47539520]
[414.50628662 -60.96298218]
[408.59213257 -46.30698395]
[394.01437378 -40.20254898]
[388.54855347 -26.23383522]
[383.08276367 -12.26512241]
[377.61694336 1.70359206]
[386.17446899 5.49570179]
[391.09402466 12.09454155]
[405.81362915 9.20776749]
[420.53323364 6.32099390]
[435.25283813 3.43422031]
[449.97241211 0.54744649]
[464.69201660 -2.33932734]
[479.41162109 -5.22610092]
[494.13122559 -8.11287498]
[502.95953369 -20.94635773]
[517.92840576 -23.66427040]
[530.10876465 -15.16871548]
[544.82836914 -18.05548859]
[559.54797363 -20.94226265]
[563.46905518 -35.65235519]
[573.34777832 -47.15439987]
[587.18426514 -53.20193863]
[602.21258545 -52.64455414]
[615.45391846 -45.64632034]
[624.30706787 -33.64266586]
[639.02667236 -36.52943802]
[653.74627686 -39.41621017]
[668.46582031 -42.30298615]
[673.36590576 -56.85924911]
[684.89825439 -67.00325775]
[699.96069336 -70.00633240]
[714.50152588 -65.06065369]
[724.60931396 -53.49658203]
[727.56518555 -38.42480469]
[722.57397461 -23.89954376]
[710.97827148 -13.82802773]
[695.89727783 -10.91944218]
[681.38775635 -15.95618153]
[671.35260010 -27.58338737]
[656.63305664 -24.69661522]
[641.91345215 -21.80984116]
[627.19384766 -18.92306709]
[623.53039551 -4.46469021]
[613.91314697 7.01652050]
[600.20861816 13.20893383]
[585.11285400 12.83550739]
[571.62145996 5.91676426]
[562.43475342 -6.22266579]
[547.71514893 -3.33589196]
[532.99554443 -0.44911832]
[524.92633057 12.01774502]
[510.03967285 15.15503025]
[497.01797485 6.60672235]
[482.29840088 9.49349594]
[467.57879639 12.38027000]
[452.85919189 15.26704311]
[438.13958740 18.15381813]
[423.42001343 21.04059029]
[408.70040894 23.92736435]
[393.98080444 26.81413841]
[375.96054077 39.66210938]
[358.92144775 20.80576515]
[345.07357788 26.57085800]
[331.22570801 32.33594894]
[317.37783813 38.10103989]
[303.52993774 43.86613464]
[289.68206787 49.63122559]
[303.11923218 56.29773331]
[308.03256226 70.47021484]
[301.60516357 84.02339172]
[287.52197266 89.18703461]
[273.85705566 83.00077057]
[268.44470215 69.01125336]
[274.38720703 55.23954391]
[260.09500122 59.79286575]
[245.80279541 64.34618378]
[231.51058960 68.89950562]
[217.21836853 73.45282745]
[202.92616272 78.00614929]
[199.97883606 81.75725555]
[194.64614868 83.70013428]
[188.15824890 82.47872162]
[173.74130249 86.62017822]
[159.32434082 90.76162720]
[144.90739441 94.90308380]
[130.49044800 99.04454041]
[126.02223969 115.91928864]
[113.03294373 127.58120728]
[95.77595520 130.21156311]
[90.11033630 144.10043335]
[84.44471741 157.98930359]
[97.48476410 150.57598877]
[112.46789551 151.28715515]
[124.74716949 159.90222168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[11 25]
[12 24]
[13 22]
[14 21]
[31 215]
[32 214]
[33 213]
[36 79]
[37 78]
[38 77]
[40 75]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[51 62]
[52 61]
[53 60]
[54 59]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[99 210]
[100 209]
[101 208]
[102 207]
[103 206]
[104 203]
[105 202]
[106 201]
[107 200]
[108 199]
[109 198]
[110 191]
[111 190]
[112 189]
[113 188]
[114 187]
[115 186]
[116 129]
[117 128]
[118 127]
[119 126]
[131 184]
[132 183]
[133 182]
[134 181]
[135 180]
[136 179]
[137 178]
[138 177]
[141 174]
[142 173]
[143 172]
[149 166]
[150 165]
[151 164]
[152 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
