%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MUCL1)
} def

/sequence { (\
CAGCGCCUUGCCUUCUCUUAGGCUUUGAAGCAUUUUUGUCUGUGCUCCCUGAUCUUCAGGUCACCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.007208900 ubox
1 27 0.617510940 ubox
1 38 0.023470989 ubox
1 42 0.015886290 ubox
1 51 0.009167269 ubox
2 8 0.040124247 ubox
2 9 0.019935002 ubox
2 13 0.008195154 ubox
2 24 0.015511471 ubox
2 25 0.038698813 ubox
2 26 0.620166855 ubox
2 34 0.032910376 ubox
2 35 0.007201927 ubox
2 36 0.006127241 ubox
2 37 0.023379553 ubox
2 41 0.019046926 ubox
2 46 0.368597307 ubox
2 50 0.009618679 ubox
3 7 0.042028370 ubox
3 8 0.016504939 ubox
3 11 0.016088092 ubox
3 12 0.008566559 ubox
3 23 0.015072957 ubox
3 24 0.047070209 ubox
3 25 0.595885927 ubox
3 31 0.304929173 ubox
3 33 0.038580118 ubox
3 34 0.005625207 ubox
3 35 0.005618361 ubox
3 36 0.011030273 ubox
3 39 0.014876928 ubox
3 40 0.018992875 ubox
3 43 0.003352632 ubox
3 45 0.394014625 ubox
3 49 0.009689115 ubox
3 61 0.019017745 ubox
4 10 0.016547619 ubox
4 22 0.014570035 ubox
4 27 0.107183143 ubox
4 30 0.305209959 ubox
4 38 0.021540055 ubox
4 42 0.003667428 ubox
4 44 0.394118405 ubox
4 60 0.018407135 ubox
5 9 0.011703446 ubox
5 11 0.010729248 ubox
5 23 0.666783313 ubox
5 26 0.098770588 ubox
5 31 0.100965266 ubox
5 37 0.017593343 ubox
5 39 0.007385367 ubox
5 43 0.392502659 ubox
5 45 0.008664241 ubox
5 61 0.034783307 ubox
6 10 0.010704482 ubox
6 22 0.666977643 ubox
6 30 0.098114901 ubox
6 38 0.007535269 ubox
6 42 0.391575648 ubox
6 44 0.008640960 ubox
6 60 0.035798500 ubox
7 21 0.666845593 ubox
7 22 0.011578248 ubox
7 30 0.070874659 ubox
7 59 0.034510610 ubox
7 60 0.003267297 ubox
8 20 0.651053769 ubox
8 21 0.015780666 ubox
8 28 0.083195676 ubox
8 29 0.075833744 ubox
8 58 0.030060003 ubox
9 20 0.095382445 ubox
9 27 0.084420138 ubox
9 28 0.074901508 ubox
9 29 0.006385737 ubox
9 32 0.035514741 ubox
9 38 0.007357599 ubox
9 58 0.003449168 ubox
9 63 0.011623399 ubox
9 66 0.008206020 ubox
10 19 0.131765340 ubox
10 23 0.742073010 ubox
10 26 0.004457032 ubox
10 31 0.036255570 ubox
10 39 0.007911001 ubox
10 57 0.003711525 ubox
10 61 0.013962993 ubox
10 62 0.010116267 ubox
10 65 0.003864723 ubox
11 22 0.743220564 ubox
11 30 0.025910841 ubox
11 38 0.008068877 ubox
11 60 0.017566427 ubox
12 21 0.743265634 ubox
12 30 0.027342942 ubox
12 59 0.017582766 ubox
13 20 0.731195303 ubox
13 21 0.003407277 ubox
13 29 0.037374196 ubox
13 58 0.016953583 ubox
14 20 0.013193639 ubox
14 28 0.037712525 ubox
15 21 0.004622990 ubox
15 27 0.037738015 ubox
16 20 0.004915328 ubox
16 28 0.003960350 ubox
17 27 0.004177846 ubox
18 52 0.017562661 ubox
19 42 0.003275456 ubox
19 51 0.018343120 ubox
20 41 0.011882701 ubox
20 50 0.018663272 ubox
21 40 0.012139866 ubox
21 49 0.018723567 ubox
21 62 0.004275459 ubox
21 65 0.008913626 ubox
21 68 0.005268835 ubox
22 31 0.009073313 ubox
22 39 0.012133298 ubox
22 48 0.018698798 ubox
22 61 0.004255703 ubox
22 64 0.008896904 ubox
22 67 0.005312911 ubox
23 30 0.009522529 ubox
23 38 0.012159960 ubox
23 60 0.004219670 ubox
24 29 0.015495611 ubox
24 30 0.005584913 ubox
24 52 0.005504283 ubox
24 59 0.003405518 ubox
24 60 0.008994258 ubox
25 29 0.009507692 ubox
25 51 0.005857265 ubox
25 52 0.003903220 ubox
25 59 0.011716496 ubox
26 32 0.018651616 ubox
26 38 0.021948374 ubox
26 51 0.004164123 ubox
26 58 0.015102168 ubox
26 63 0.128709766 ubox
26 66 0.047249973 ubox
27 31 0.020410635 ubox
27 34 0.010540579 ubox
27 35 0.014179166 ubox
27 36 0.023448487 ubox
27 37 0.039547393 ubox
27 40 0.069697281 ubox
27 41 0.016393670 ubox
27 43 0.004110829 ubox
27 47 0.317183306 ubox
27 50 0.004063490 ubox
27 54 0.004833404 ubox
27 57 0.016735036 ubox
27 62 0.145381079 ubox
27 65 0.053206509 ubox
28 33 0.010187272 ubox
28 34 0.015230552 ubox
28 35 0.025305096 ubox
28 36 0.041063777 ubox
28 37 0.023819672 ubox
28 39 0.050324215 ubox
28 46 0.226410313 ubox
28 53 0.004827367 ubox
28 56 0.016692556 ubox
28 61 0.136093919 ubox
29 33 0.011855487 ubox
29 34 0.022525234 ubox
29 35 0.039972764 ubox
29 36 0.024467925 ubox
29 37 0.011628954 ubox
29 41 0.233622009 ubox
29 46 0.763097718 ubox
29 55 0.012742023 ubox
30 34 0.027255369 ubox
30 35 0.018502249 ubox
30 36 0.010603077 ubox
30 39 0.320037538 ubox
30 40 0.238599151 ubox
30 43 0.018936065 ubox
30 45 0.835739148 ubox
30 54 0.011151815 ubox
31 38 0.408533319 ubox
31 42 0.019995345 ubox
31 44 0.835948552 ubox
32 37 0.394427106 ubox
32 39 0.053526508 ubox
32 41 0.020780071 ubox
32 43 0.835221884 ubox
32 53 0.009042843 ubox
33 38 0.053792787 ubox
33 42 0.833093958 ubox
33 52 0.009063163 ubox
34 51 0.008914994 ubox
37 63 0.003750545 ubox
37 66 0.059716000 ubox
38 45 0.014838642 ubox
38 53 0.003853900 ubox
38 62 0.004225087 ubox
38 65 0.067263792 ubox
38 67 0.127530480 ubox
39 44 0.013899501 ubox
39 52 0.003927575 ubox
39 60 0.003866116 ubox
39 66 0.124640966 ubox
40 51 0.003940201 ubox
40 59 0.004272987 ubox
41 58 0.004283952 ubox
41 63 0.006359317 ubox
41 66 0.059972205 ubox
42 57 0.004280463 ubox
42 62 0.007027859 ubox
42 64 0.312187515 ubox
42 65 0.050194150 ubox
42 67 0.197679228 ubox
43 63 0.316883269 ubox
43 66 0.198523721 ubox
44 61 0.004336427 ubox
44 62 0.316983814 ubox
44 65 0.198215051 ubox
45 60 0.008972230 ubox
46 52 0.003234572 ubox
46 59 0.003878119 ubox
46 60 0.004611985 ubox
47 51 0.003957566 ubox
47 59 0.003259394 ubox
47 60 0.060307057 ubox
48 59 0.043171371 ubox
48 60 0.976174178 ubox
49 59 0.982004460 ubox
49 60 0.005468895 ubox
50 58 0.982847906 ubox
50 59 0.004594440 ubox
50 63 0.156229966 ubox
51 57 0.982842357 ubox
51 62 0.176274514 ubox
52 56 0.855088624 ubox
52 61 0.176291219 ubox
53 60 0.175744705 ubox
54 59 0.173019425 ubox
54 60 0.009761877 ubox
55 59 0.008886209 ubox
59 65 0.010880385 ubox
59 68 0.022427856 ubox
60 64 0.011030456 ubox
60 67 0.027466782 ubox
61 66 0.027487815 ubox
1 27 0.9500000 lbox
2 26 0.9500000 lbox
3 25 0.9500000 lbox
5 23 0.9500000 lbox
6 22 0.9500000 lbox
7 21 0.9500000 lbox
8 20 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
48 60 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
52 56 0.9500000 lbox
showpage
end
%%EOF
