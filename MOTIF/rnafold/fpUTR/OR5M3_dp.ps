%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR5M3)
} def

/sequence { (\
UCAAAAAGUUUUGUAACUGAUAUUGACUUAGAAUUCAGAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.053174025 ubox
1 26 0.391810602 ubox
1 32 0.136999074 ubox
1 39 0.038288527 ubox
2 13 0.457871895 ubox
2 19 0.058167042 ubox
2 25 0.434920798 ubox
2 31 0.146316235 ubox
2 38 0.040599969 ubox
3 10 0.021659173 ubox
3 11 0.033215379 ubox
3 12 0.460847215 ubox
3 18 0.043213583 ubox
3 24 0.432832927 ubox
3 29 0.010233576 ubox
3 35 0.008107609 ubox
4 9 0.020808386 ubox
4 10 0.037936104 ubox
4 11 0.450419306 ubox
4 12 0.047828995 ubox
4 23 0.405221628 ubox
4 24 0.010346107 ubox
4 28 0.006950413 ubox
4 29 0.018308472 ubox
4 34 0.008403124 ubox
4 35 0.012744977 ubox
5 9 0.031087558 ubox
5 10 0.392351550 ubox
5 11 0.050495495 ubox
5 12 0.036224518 ubox
5 23 0.009974247 ubox
5 24 0.012678196 ubox
5 28 0.010137362 ubox
5 29 0.019130088 ubox
5 34 0.013579315 ubox
5 35 0.015195670 ubox
6 10 0.040133330 ubox
6 11 0.033675102 ubox
6 12 0.021706340 ubox
6 23 0.014758356 ubox
6 24 0.008821938 ubox
6 28 0.014645838 ubox
6 29 0.288530840 ubox
6 34 0.011315242 ubox
6 35 0.006474523 ubox
7 11 0.017594034 ubox
7 18 0.482584551 ubox
7 23 0.009480705 ubox
7 24 0.011001278 ubox
7 28 0.306244199 ubox
7 29 0.006456948 ubox
7 34 0.005739144 ubox
7 35 0.067760748 ubox
8 14 0.009739363 ubox
8 17 0.491397648 ubox
8 21 0.058986561 ubox
8 23 0.012645555 ubox
8 27 0.308870276 ubox
8 34 0.079246626 ubox
9 13 0.005964314 ubox
9 16 0.489714617 ubox
9 20 0.059910852 ubox
9 22 0.012735136 ubox
9 26 0.307220179 ubox
9 31 0.007809431 ubox
9 32 0.005903434 ubox
9 33 0.080318613 ubox
9 39 0.015039864 ubox
9 40 0.251501921 ubox
9 41 0.030200824 ubox
10 15 0.466813506 ubox
10 16 0.017460698 ubox
10 19 0.059812649 ubox
10 20 0.012235748 ubox
10 25 0.300413154 ubox
10 26 0.024670218 ubox
10 30 0.008772509 ubox
10 31 0.006257153 ubox
10 32 0.080667317 ubox
10 33 0.004062819 ubox
10 38 0.014052585 ubox
10 39 0.288934344 ubox
10 40 0.039756052 ubox
10 41 0.029517928 ubox
11 15 0.018281525 ubox
11 19 0.013489178 ubox
11 20 0.028671177 ubox
11 25 0.033530985 ubox
11 26 0.003815488 ubox
11 30 0.006123210 ubox
11 31 0.080342250 ubox
11 32 0.004638282 ubox
11 33 0.010020628 ubox
11 37 0.011795349 ubox
11 38 0.292885438 ubox
11 39 0.040182874 ubox
11 40 0.039963857 ubox
11 41 0.011145623 ubox
12 19 0.028209026 ubox
12 22 0.175734630 ubox
12 25 0.005460876 ubox
12 30 0.078702242 ubox
12 31 0.004348087 ubox
12 32 0.011411746 ubox
12 37 0.294634938 ubox
12 38 0.025749385 ubox
12 39 0.041130592 ubox
12 40 0.013905420 ubox
13 18 0.016207483 ubox
13 21 0.180909356 ubox
13 23 0.196288057 ubox
13 24 0.012522935 ubox
13 27 0.023676026 ubox
13 29 0.075397847 ubox
13 34 0.008362644 ubox
13 36 0.294962470 ubox
14 20 0.178820727 ubox
14 22 0.199425945 ubox
14 25 0.028376345 ubox
14 26 0.021073683 ubox
14 30 0.013252904 ubox
14 33 0.012611435 ubox
15 21 0.192951707 ubox
15 24 0.034192992 ubox
15 29 0.013538113 ubox
15 35 0.086771006 ubox
16 23 0.029699033 ubox
16 28 0.012294965 ubox
16 34 0.076953724 ubox
17 31 0.294972763 ubox
17 38 0.735240751 ubox
18 25 0.011183059 ubox
18 30 0.295817789 ubox
18 37 0.740902964 ubox
19 24 0.010693883 ubox
19 29 0.294730269 ubox
19 35 0.020457804 ubox
19 36 0.745046150 ubox
20 28 0.282782341 ubox
20 34 0.057911521 ubox
20 35 0.730713217 ubox
21 30 0.093806970 ubox
21 33 0.077117331 ubox
22 29 0.094074299 ubox
22 34 0.456421078 ubox
23 31 0.081854073 ubox
23 32 0.414623618 ubox
23 33 0.484640479 ubox
23 38 0.116437103 ubox
23 39 0.014039988 ubox
23 40 0.008316652 ubox
23 41 0.006188198 ubox
24 30 0.094705540 ubox
24 31 0.419708854 ubox
24 32 0.482707399 ubox
24 37 0.173050437 ubox
24 38 0.010195726 ubox
24 39 0.007242041 ubox
24 40 0.007412121 ubox
25 29 0.080696674 ubox
25 35 0.005529222 ubox
25 36 0.181230708 ubox
26 34 0.009159844 ubox
26 35 0.178287588 ubox
27 38 0.077840735 ubox
28 37 0.077200624 ubox
28 38 0.011834274 ubox
28 39 0.034335563 ubox
28 40 0.012566931 ubox
28 41 0.005554150 ubox
29 37 0.013245798 ubox
29 38 0.036206690 ubox
29 39 0.013230562 ubox
29 40 0.007538527 ubox
34 40 0.014717023 ubox
34 41 0.014080252 ubox
35 39 0.014093299 ubox
35 40 0.016096536 ubox
1 26 0.9500000 lbox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
9 16 0.9500000 lbox
10 15 0.9500000 lbox
showpage
end
%%EOF
