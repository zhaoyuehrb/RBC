%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUGGCUGUUCGCGCUCAUCCCCCUCCCCCGGCCCUGGGUGUCCCCGUGACGAGGCAGCGCGGAGCCGCCGCGGGCCGGGCCCAUCCCGCCGCAGCGGCCCGGGGCCGAGCAGGGGCUAGGCGGGGAGGGAGCGGCGCCCAGCGGGGCCCGGAGCGUGGCCAGA\
) } def
/len { sequence length } bind def

/coor [
[98.64746857 335.55615234]
[83.59559631 339.79583740]
[69.36128998 333.32141113]
[62.66555786 319.18981934]
[66.66992188 304.07363892]
[79.48363495 295.11022949]
[80.62493134 280.15371704]
[81.76622009 265.19720459]
[75.01972198 251.91812134]
[83.78459930 238.74665833]
[84.92588806 223.79013062]
[86.06718445 208.83361816]
[87.20847321 193.87709045]
[88.34976959 178.92057800]
[89.49106598 163.96406555]
[90.63235474 149.00753784]
[91.77365112 134.05102539]
[77.94551849 125.42438507]
[70.00462341 111.93753052]
[69.24051666 96.95320129]
[75.23289490 83.90672302]
[86.07783508 75.51890564]
[82.40283966 60.97605896]
[78.72784424 46.43321228]
[75.05284882 31.89036560]
[71.37785339 17.34751892]
[67.70285797 2.80467129]
[64.02785492 -11.73817539]
[60.35286331 -26.28102303]
[52.07149887 -61.45390320]
[44.69550323 -74.51509094]
[37.31951141 -87.57628632]
[29.94351578 -100.63747406]
[22.56752205 -113.69866943]
[15.19152832 -126.75985718]
[7.81553459 -139.82104492]
[0.43954065 -152.88223267]
[-6.93645334 -165.94343567]
[-8.98423672 -151.08386230]
[-20.46771622 -141.43350220]
[-35.45794296 -141.97482300]
[-46.21543503 -152.42835999]
[-47.18606949 -167.39691162]
[-37.86870956 -179.15220642]
[-23.07191849 -181.62452698]
[-36.33841324 -188.62454224]
[-49.60490799 -195.62454224]
[-62.87139893 -202.62455750]
[-76.13789368 -209.62457275]
[-89.52034760 -201.94905090]
[-104.92691040 -202.74992371]
[-117.44140625 -211.77162170]
[-123.07049561 -226.13536072]
[-120.01796722 -241.25770569]
[-109.25786591 -252.31320190]
[-94.22370911 -255.77404785]
[-79.71282959 -250.53593445]
[-70.35559845 -238.27029419]
[-69.13788605 -222.89105225]
[-55.87139130 -215.89105225]
[-42.60489655 -208.89103699]
[-29.33840370 -201.89103699]
[-16.07190895 -194.89102173]
[-3.30043221 -202.75927734]
[9.46991730 -210.62681580]
[9.18433475 -225.62409973]
[8.89875317 -240.62136841]
[8.61317062 -255.61865234]
[8.32758904 -270.61593628]
[0.32895225 -284.26629639]
[7.82253790 -297.13858032]
[7.53695583 -312.13586426]
[7.25137377 -327.13314819]
[6.96579170 -342.13040161]
[3.84988880 -348.04467773]
[4.17417526 -353.77575684]
[6.96579170 -357.70156860]
[7.25137377 -372.69885254]
[7.53695583 -387.69613647]
[7.82253790 -402.69342041]
[-2.22290015 -415.20217896]
[1.43404448 -430.82287598]
[15.98807716 -437.57266235]
[30.27458954 -430.27368164]
[33.33419037 -414.52508545]
[22.81981850 -402.40783691]
[22.53423691 -387.41055298]
[22.24865532 -372.41326904]
[21.96307373 -357.41598511]
[21.96307373 -342.41598511]
[22.24865532 -327.41873169]
[22.53423691 -312.42144775]
[22.81981850 -297.42416382]
[30.79802895 -284.84649658]
[23.32486916 -270.90151978]
[23.61045265 -255.90423584]
[23.89603424 -240.90695190]
[24.18161583 -225.90966797]
[24.46719933 -210.91239929]
[6.12473774 -173.31942749]
[13.50073147 -160.25823975]
[20.87672615 -147.19703674]
[28.25271988 -134.13584900]
[35.62871170 -121.07466125]
[43.00470734 -108.01346588]
[50.38070297 -94.95227814]
[57.75669479 -81.89109039]
[65.13269043 -68.82989502]
[79.30770111 -63.92387772]
[93.17951965 -69.63112640]
[107.05133057 -75.33837891]
[116.63150024 -88.64824677]
[132.91894531 -86.73751068]
[139.15855408 -71.57178497]
[128.93154907 -58.75225830]
[112.75858307 -61.46656799]
[98.88677216 -55.75931549]
[85.01495361 -50.05205917]
[99.88629913 -48.09166336]
[106.90099335 -34.83292770]
[100.15486145 -21.43555069]
[85.32603455 -19.17592049]
[74.89570618 -29.95601845]
[78.57070923 -15.41317177]
[82.24570465 -0.87032473]
[85.92070007 13.67252254]
[89.59569550 28.21537018]
[93.27069092 42.75821686]
[96.94568634 57.30106354]
[100.62068176 71.84391022]
[119.99522400 77.03208160]
[132.32212830 94.77709961]
[130.15232849 117.83206177]
[141.67352295 127.43736267]
[153.19473267 137.04266357]
[161.83213806 140.15454102]
[164.84158325 146.94216919]
[176.17782593 156.76507568]
[187.51406860 166.58799744]
[198.85031128 176.41090393]
[215.04673767 178.98146057]
[220.66534424 194.38806152]
[209.92619324 206.78170776]
[193.87680054 203.41288757]
[189.02740479 187.74714661]
[177.69116211 177.92424011]
[166.35491943 168.10131836]
[155.01867676 158.27841187]
[143.58943176 148.56387329]
[132.06822205 138.95857239]
[120.54701996 129.35325623]
[106.73016357 135.19232178]
[105.58887482 150.14883423]
[104.44757843 165.10534668]
[103.30628967 180.06187439]
[102.16499329 195.01838684]
[101.02370453 209.97491455]
[99.88240814 224.93142700]
[98.74111176 239.88793945]
[105.40598297 254.23681641]
[96.72274017 266.33850098]
[95.58145142 281.29501343]
[94.44015503 296.25152588]
[105.74548340 307.05538940]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 163]
[7 162]
[8 161]
[10 159]
[11 158]
[12 157]
[13 156]
[14 155]
[15 154]
[16 153]
[17 152]
[22 130]
[23 129]
[24 128]
[25 127]
[26 126]
[27 125]
[28 124]
[29 123]
[30 108]
[31 107]
[32 106]
[33 105]
[34 104]
[35 103]
[36 102]
[37 101]
[38 100]
[45 63]
[46 62]
[47 61]
[48 60]
[49 59]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[71 93]
[72 92]
[73 91]
[74 90]
[77 89]
[78 88]
[79 87]
[80 86]
[109 118]
[110 117]
[111 116]
[133 151]
[134 150]
[135 149]
[137 148]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
