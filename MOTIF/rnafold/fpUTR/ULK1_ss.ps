%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUCCGGAUUCGGAUUAGCAGCCCGGGAAGAGUGCCGUGGCACAGGCGCCGGAGGGAGCGCGACCCUCGGACCCCGCCUGGCCCGCGGGGCUGGGACCCGGCCCCGGCCUGCCCGAUGGGGCGCGCGGCCCCGGAGAUGCGCCCUCGCCCGGCCCCGCGCCCCCGGCCCCGCGCCCCCGGCCCGCCCGCCCCGGCCCGCGCCUCCGCCUGAGUCCCCCGCGCCUUGGCCCGCCACCCCCCGCCCCGCGCCCCCG\
GCCCGCCUGCGCC\
) } def
/len { sequence length } bind def

/coor [
[135.18190002 1220.02502441]
[127.84928131 1222.68945312]
[124.54807281 1237.32165527]
[121.24686432 1251.95385742]
[117.94566345 1266.58605957]
[114.64445496 1281.21838379]
[111.34324646 1295.85058594]
[116.73017883 1311.33972168]
[105.80636597 1323.57092285]
[89.80929565 1319.96179199]
[85.19538116 1304.22509766]
[96.71102142 1292.54931641]
[100.01222992 1277.91711426]
[103.31343842 1263.28491211]
[106.61463928 1248.65270996]
[109.91584778 1234.02050781]
[113.21705627 1219.38818359]
[104.86173248 1199.41088867]
[120.44462585 1183.28491211]
[123.05892944 1168.51452637]
[125.67323303 1153.74414062]
[128.20124817 1138.95861816]
[130.64288330 1124.15869141]
[132.82487488 1109.31823730]
[134.74658203 1094.44189453]
[136.66828918 1079.56542969]
[138.58999634 1064.68908691]
[140.51168823 1049.81274414]
[125.84954071 1039.86340332]
[117.97442627 1023.89892578]
[119.01219940 1006.04589844]
[128.77311707 990.96380615]
[144.78019714 982.62878418]
[144.78019714 967.62878418]
[144.78019714 952.62878418]
[137.04290771 939.90155029]
[144.78019714 926.10137939]
[144.78019714 911.10137939]
[141.64863586 904.43609619]
[144.86882019 895.92645264]
[145.04399109 880.92749023]
[145.21917725 865.92846680]
[134.65953064 855.48675537]
[134.62351990 840.27319336]
[145.64733887 829.26806641]
[145.82252502 814.26910400]
[145.99769592 799.27008057]
[146.17288208 784.27111816]
[146.34805298 769.27215576]
[146.52322388 754.27319336]
[143.46972656 747.57177734]
[146.78906250 739.10034180]
[147.13938904 724.10443115]
[144.16435242 717.36779785]
[147.58239746 708.93566895]
[148.10783386 693.94488525]
[148.63327026 678.95410156]
[149.15870667 663.96331787]
[152.59455872 630.56158447]
[151.19512939 615.62701416]
[149.79571533 600.69244385]
[148.39630127 585.75787354]
[146.99688721 570.82330322]
[135.40002441 561.54705811]
[133.76806641 546.42120361]
[143.57644653 534.32025146]
[142.17703247 519.38568115]
[128.84895325 503.60357666]
[138.24241638 484.31820679]
[136.32070923 469.44180298]
[134.39901733 454.56542969]
[121.49172974 450.16000366]
[111.68946075 440.58248901]
[106.94029236 427.65676880]
[108.22217560 413.87960815]
[115.34219360 401.93841553]
[126.96308136 394.18701172]
[125.21524811 379.28918457]
[123.46740723 364.39135742]
[114.29980469 352.65237427]
[120.37636566 338.04461670]
[118.62852478 323.14682007]
[106.81816864 314.14398193]
[104.83338928 299.06036377]
[114.35646820 286.73361206]
[112.60862732 271.83578491]
[110.86079407 256.93795776]
[109.11295319 242.04014587]
[107.36511993 227.14233398]
[105.61727905 212.24450684]
[103.86943817 197.34669495]
[102.12160492 182.44886780]
[100.37376404 167.55104065]
[98.62592316 152.65322876]
[96.87808990 137.75540161]
[95.13024902 122.85758209]
[86.04012299 124.83985901]
[75.55673218 123.07881165]
[65.19428253 117.01087952]
[56.64557266 106.66332245]
[51.56038666 92.69909668]
[42.15920639 81.01073456]
[32.75802612 69.32237244]
[17.28038025 63.90254593]
[14.50155354 47.74054718]
[27.28016472 37.46245956]
[42.47067261 43.64149475]
[44.44638824 59.92119217]
[53.84756851 71.60955811]
[63.24874878 83.29791260]
[69.69224548 79.45977020]
[89.02272797 67.94532776]
[83.22183990 54.11240387]
[77.42095184 40.27948380]
[71.62006378 26.44656372]
[58.24574280 16.95658493]
[60.04633713 0.65658790]
[75.16954803 -5.68538761]
[88.05790710 4.45473909]
[85.45298004 20.64567566]
[91.25386810 34.47859573]
[97.05475616 48.31151581]
[102.85564423 62.14443588]
[117.77286530 60.57070160]
[120.55948639 45.83181763]
[123.34611511 31.09293365]
[126.13273621 16.35404778]
[128.91935730 1.61516356]
[131.70599365 -13.12372112]
[123.06934357 -26.08697891]
[126.10533905 -40.99460983]
[138.51704407 -49.14844513]
[141.30366516 -63.88732910]
[144.09030151 -78.62621307]
[146.87692261 -93.36509705]
[145.33158875 -97.33853912]
[145.13009644 -101.21160126]
[146.07978821 -104.57965088]
[147.87782288 -107.14028168]
[150.15322876 -108.72011566]
[153.62509155 -123.31278992]
[157.09695435 -137.90547180]
[151.89128113 -153.45645142]
[162.95719910 -165.55924988]
[178.91102600 -161.76353455]
[183.34083557 -145.97402954]
[171.68963623 -134.43360901]
[168.21777344 -119.84092712]
[164.74591064 -105.24825287]
[161.61579895 -90.57847595]
[158.82917786 -75.83958435]
[156.04255676 -61.10070419]
[153.25593567 -46.36182022]
[161.83410645 -34.23950577]
[159.21803284 -19.25248337]
[146.44487000 -10.33709621]
[143.65824890 4.40178871]
[140.87162781 19.14067268]
[138.08499146 33.87955856]
[135.29837036 48.61844254]
[132.51174927 63.35732651]
[135.81896973 105.08877563]
[110.02806854 121.10974884]
[111.77590942 136.00756836]
[113.52375031 150.90539551]
[115.27158356 165.80320740]
[117.01942444 180.70103455]
[118.76725769 195.59884644]
[120.51509857 210.49667358]
[122.26293945 225.39448547]
[124.01077271 240.29231262]
[125.75861359 255.19013977]
[127.50645447 270.08795166]
[129.25428772 284.98577881]
[141.37188721 294.77359009]
[142.93222046 309.90701294]
[133.52635193 321.39895630]
[135.27418518 336.29678345]
[144.56680298 349.10137939]
[138.36523438 362.64352417]
[140.11306763 377.54135132]
[141.86090088 392.43917847]
[157.12577820 398.83636475]
[167.01663208 411.98959351]
[168.90350342 428.24353027]
[162.36450195 443.14065552]
[149.27540588 452.64370728]
[151.19711304 467.52011108]
[153.11880493 482.39651489]
[161.23179626 487.07781982]
[166.22477722 494.84011841]
[167.09396362 503.89077759]
[163.77124023 512.20660400]
[157.11160278 517.98626709]
[158.51101685 532.92083740]
[170.39671326 542.98901367]
[171.60317993 558.15472412]
[161.93147278 569.42388916]
[163.33088684 584.35845947]
[164.73030090 599.29302979]
[166.12971497 614.22760010]
[167.52912903 629.16217041]
[177.85339355 640.04382324]
[192.69383240 642.22583008]
[207.53428650 644.40783691]
[221.21417236 636.02685547]
[236.24620056 641.63201904]
[241.09907532 656.92352295]
[232.05009460 670.17095947]
[216.04086304 671.21209717]
[205.35227966 659.24829102]
[190.51184082 657.06628418]
[175.67138672 654.88427734]
[164.14950562 664.48876953]
[163.62406921 679.47955322]
[163.09863281 694.47033691]
[162.57319641 709.46112061]
[162.13529968 724.45471191]
[161.78497314 739.45062256]
[161.52220154 754.44836426]
[161.34703064 769.44732666]
[161.17184448 784.44628906]
[160.99667358 799.44525146]
[160.82150269 814.44427490]
[160.64631653 829.44323730]
[171.41011047 840.70281982]
[171.01878357 855.91143799]
[160.21815491 866.10369873]
[160.04296875 881.10266113]
[159.86779785 896.10162354]
[159.78019714 911.10137939]
[159.78019714 926.10137939]
[167.51750183 939.90155029]
[159.78019714 952.62878418]
[159.78019714 967.62878418]
[159.78019714 982.62878418]
[173.43052673 989.03289795]
[183.12528992 1000.49121094]
[187.14363098 1014.88165283]
[184.80923462 1029.56970215]
[176.60336304 1041.89111328]
[184.57853699 1054.59533691]
[192.55372620 1067.29956055]
[206.09597778 1077.49975586]
[200.04328918 1093.33642578]
[183.14993286 1091.90429688]
[179.84953308 1075.27478027]
[171.87434387 1062.57055664]
[163.89916992 1049.86633301]
[161.11793518 1050.72717285]
[158.27420044 1051.35131836]
[155.38809204 1051.73437500]
[153.46638489 1066.61083984]
[151.54467773 1081.48718262]
[149.62297058 1096.36352539]
[147.70127869 1111.23999023]
[149.68214417 1115.99414062]
[149.66612244 1120.57958984]
[148.04579163 1124.27099609]
[145.44282532 1126.60034180]
[143.00119019 1141.40026855]
[144.68896484 1150.34094238]
[140.44366455 1156.35839844]
[137.82934570 1171.12878418]
[135.21504211 1185.89929199]
[141.12664795 1191.68237305]
[144.25535583 1199.23632812]
[144.16603088 1207.31848145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[7 12]
[19 265]
[20 264]
[21 263]
[22 261]
[23 260]
[24 256]
[25 255]
[26 254]
[27 253]
[28 252]
[33 236]
[34 235]
[35 234]
[37 232]
[38 231]
[40 230]
[41 229]
[42 228]
[45 225]
[46 224]
[47 223]
[48 222]
[49 221]
[50 220]
[52 219]
[53 218]
[55 217]
[56 216]
[57 215]
[58 214]
[59 202]
[60 201]
[61 200]
[62 199]
[63 198]
[66 195]
[67 194]
[69 189]
[70 188]
[71 187]
[77 182]
[78 181]
[79 180]
[81 178]
[82 177]
[85 174]
[86 173]
[87 172]
[88 171]
[89 170]
[90 169]
[91 168]
[92 167]
[93 166]
[94 165]
[95 164]
[96 163]
[101 110]
[102 109]
[103 108]
[112 123]
[113 122]
[114 121]
[115 120]
[124 161]
[125 160]
[126 159]
[127 158]
[128 157]
[129 156]
[132 153]
[133 152]
[134 151]
[135 150]
[140 149]
[141 148]
[142 147]
[203 213]
[204 212]
[205 211]
[241 249]
[242 248]
[243 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
