%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGGAAGAAAGGCGAAGGCAAGGCGAAGGGGUGGAGAGUGAUAUGAAGAGCGAGAGAAAAGAGAGGACAGCGGACGAGCAGAUCCGGUAUCUGGAAUCCCGGCGCCUAGAACGUGUUUUUCGGGAGAGCAAAGGCUGUGUCUACGGCAGCCUGGGGAUAUAGCCUCUCCUUCCGAUGAAAAGAGAAAGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[111.65287018 211.26420593]
[124.40379333 203.19721985]
[119.92807770 188.88052368]
[115.45235443 174.56382751]
[110.97663879 160.24711609]
[106.50091553 145.93041992]
[102.02519989 131.61372375]
[97.54947662 117.29701996]
[80.00312042 102.12337494]
[92.15003204 78.64845276]
[79.49024200 70.60297394]
[66.83045197 62.55749893]
[54.17066574 54.51202011]
[41.51087570 46.46654129]
[28.85108566 38.42106247]
[16.19129562 30.37558174]
[3.53150678 22.33010292]
[-8.92716789 30.99365234]
[-23.71374893 34.21856308]
[-38.56835938 31.54383087]
[-51.23291016 23.40769196]
[-59.79435349 11.07616711]
[-62.97364044 -3.55385494]
[-60.31672668 -18.24637222]
[-72.97651672 -26.29185104]
[-85.63630676 -34.33732986]
[-98.29609680 -42.38280869]
[-110.95588684 -50.42828751]
[-126.19554901 -47.20486069]
[-138.91975403 -55.54446411]
[-141.89889526 -70.09301758]
[-154.55868530 -78.13849640]
[-167.21847534 -86.18397522]
[-179.87826538 -94.22945404]
[-192.53805542 -102.27493286]
[-185.28524780 -89.14493561]
[-174.05760193 -79.19807434]
[-164.46691895 -67.66470337]
[-156.73469543 -54.81118393]
[-151.03953552 -40.93439865]
[-147.51298523 -26.35484695]
[-146.23646545 -11.40926266]
[-147.23947144 3.55716538]
[-150.49884033 18.19876671]
[-155.93930054 32.17737198]
[-163.43518066 45.17013168]
[-172.81336975 56.87695312]
[-183.85723877 67.02745819]
[-196.31175232 75.38719940]
[-209.88922119 81.76309967]
[-224.27607727 86.00790405]
[-239.14002991 88.02356720]
[-254.13778687 87.76354218]
[-268.92291260 85.23381805]
[-283.15399170 80.49284363]
[-296.50228882 73.65010071]
[-308.65951538 64.86364746]
[-319.34487915 54.33640289]
[-328.31161499 42.31151962]
[-335.35256958 29.06672096]
[-340.30520630 14.90792084]
[-343.05505371 0.16213180]
[-343.53863525 -14.83007050]
[-341.74478149 -29.72242165]
[-337.71493530 -44.17096329]
[-331.54217529 -57.84198380]
[-323.36901855 -70.41973114]
[-313.38430786 -81.61370850]
[-301.81857300 -91.16538239]
[-288.93902588 -98.85412598]
[-275.04309082 -104.50237274]
[-260.44546509 -107.98065186]
[-246.63549805 -102.12535095]
[-255.94772339 -113.88471985]
[-271.67343140 -115.45870209]
[-281.61541748 -127.74417114]
[-279.87524414 -143.45236206]
[-267.48535156 -153.26390076]
[-251.79643250 -151.35775757]
[-242.11645508 -138.86482239]
[-244.18835449 -123.19693756]
[-234.87614441 -111.43756866]
[-228.08586121 -114.62225342]
[-226.81166077 -129.56803894]
[-214.50532532 -120.99162292]
[-207.71505737 -124.17630768]
[-210.80252075 -138.85511780]
[-213.88999939 -153.53393555]
[-216.97746277 -168.21273804]
[-220.06494141 -182.89155579]
[-229.24200439 -197.14700317]
[-218.08412170 -209.91172791]
[-202.72944641 -202.72352600]
[-205.38612366 -185.97903442]
[-202.29866028 -171.30021667]
[-199.21118164 -156.62139893]
[-196.12371826 -141.94259644]
[-193.03623962 -127.26377869]
[-184.49256897 -114.93472290]
[-171.83277893 -106.88924408]
[-159.17298889 -98.84376526]
[-146.51319885 -90.79828644]
[-133.85340881 -82.75280762]
[-119.41658020 -86.23326874]
[-106.46315002 -78.25434875]
[-102.91040802 -63.08807755]
[-90.25061798 -55.04259872]
[-77.59082794 -46.99711990]
[-64.93103790 -38.95164108]
[-52.27124786 -30.90616226]
[-40.09728241 -39.55045700]
[-25.50170326 -42.88429260]
[-10.70171547 -40.36929321]
[2.04217601 -32.35799789]
[10.77142906 -20.04484367]
[14.13044071 -5.28814793]
[11.57698631 9.67031288]
[24.23677444 17.71579170]
[36.89656448 25.76127052]
[49.55635452 33.80675125]
[62.21614456 41.85223007]
[74.87593079 49.89770889]
[87.53572083 57.94318771]
[100.19551086 65.98867035]
[91.78288269 53.56982422]
[90.38114929 38.63545990]
[96.33593750 24.86809349]
[108.17893219 15.66246986]
[122.98988342 13.28851032]
[137.11671448 18.33158493]
[147.07604980 29.54817390]
[150.41209412 44.17249298]
[146.30226135 58.59848785]
[135.75996399 69.26899719]
[121.38591003 73.55284882]
[136.27874756 75.34263611]
[151.17160034 77.13241577]
[166.06443787 78.92219543]
[180.95727539 80.71198273]
[195.85011292 82.50176239]
[210.74295044 84.29154205]
[225.63578796 86.08132935]
[240.52862549 87.87110901]
[255.42147827 89.66088867]
[270.31430054 91.45067596]
[284.93908691 85.41526794]
[296.65225220 94.61589813]
[311.54507446 96.40567780]
[326.43792725 98.19546509]
[341.29598999 91.25502777]
[354.57873535 100.87274933]
[352.62200928 117.15473938]
[337.43872070 123.35148621]
[324.64813232 113.08830261]
[309.75531006 111.29852295]
[294.86245728 109.50873566]
[281.30291748 115.67215729]
[268.52453613 106.34351349]
[253.63168335 104.55373383]
[238.73884583 102.76394653]
[223.84600830 100.97416687]
[208.95317078 99.18438721]
[194.06033325 97.39459991]
[179.16749573 95.60482025]
[164.27464294 93.81504059]
[149.38180542 92.02525330]
[134.48896790 90.23547363]
[119.59613037 88.44568634]
[119.89635468 102.91870880]
[111.86618042 112.82129669]
[116.34189606 127.13800049]
[120.81761932 141.45469666]
[125.29333496 155.77140808]
[129.76905823 170.08810425]
[134.24478149 184.40480042]
[138.72048950 198.72151184]
[153.79573059 198.08941650]
[168.52069092 201.38156128]
[181.89137268 208.37348938]
[192.99617004 218.58848572]
[201.07791138 231.33006287]
[205.58560181 245.72947693]
[206.21186829 260.80496216]
[202.91403198 275.52862549]
[195.91694641 288.89663696]
[185.69766235 299.99746704]
[172.95297241 308.07431030]
[158.55181885 312.57641602]
[143.47608948 313.19686890]
[128.75367737 309.89334106]
[115.38839722 302.89111328]
[104.29150391 292.66754150]
[96.21958923 279.91973877]
[91.72303009 265.51684570]
[91.10839844 250.44087219]
[94.41760254 235.71974182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[8 170]
[10 124]
[11 123]
[12 122]
[13 121]
[14 120]
[15 119]
[16 118]
[17 117]
[24 110]
[25 109]
[26 108]
[27 107]
[28 106]
[31 103]
[32 102]
[33 101]
[34 100]
[35 99]
[73 82]
[74 81]
[86 98]
[87 97]
[88 96]
[89 95]
[90 94]
[135 168]
[136 167]
[137 166]
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[145 158]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
