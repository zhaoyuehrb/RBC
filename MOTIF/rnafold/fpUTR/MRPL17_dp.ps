%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPL17)
} def

/sequence { (\
ACCACGCUCCGAGCUAAGGCGCAUGCGUUCCCUGAAAUUGCCGCCACCGGCUCUACCUUCCAGUUUCCAGUUCCGGCCUCCAAGGGGCGGGCAGAAGUUGGAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.039771547 ubox
1 64 0.003566434 ubox
2 27 0.045986196 ubox
2 50 0.006532821 ubox
2 63 0.004893119 ubox
2 101 0.005678535 ubox
3 25 0.052400734 ubox
3 34 0.012173987 ubox
3 49 0.006555173 ubox
3 100 0.005698740 ubox
4 24 0.052262771 ubox
4 28 0.116251414 ubox
4 33 0.008317838 ubox
4 64 0.003281898 ubox
4 99 0.005285786 ubox
5 11 0.013178191 ubox
5 21 0.008223396 ubox
5 27 0.124895223 ubox
5 63 0.003877648 ubox
6 10 0.043577614 ubox
6 14 0.024403179 ubox
6 20 0.008397048 ubox
6 22 0.057583629 ubox
6 26 0.125196660 ubox
6 51 0.003324743 ubox
6 64 0.005101266 ubox
6 98 0.004651667 ubox
7 13 0.024427434 ubox
7 19 0.008305572 ubox
7 21 0.057632969 ubox
7 25 0.125098517 ubox
7 63 0.005690682 ubox
7 97 0.004709611 ubox
8 12 0.022009238 ubox
8 18 0.007150534 ubox
8 35 0.003783597 ubox
8 62 0.005674427 ubox
8 96 0.004014234 ubox
8 102 0.004792518 ubox
9 18 0.004037989 ubox
9 19 0.058264982 ubox
9 34 0.003930924 ubox
9 50 0.005139710 ubox
9 101 0.004919122 ubox
10 18 0.058294344 ubox
10 21 0.017360947 ubox
10 25 0.003199158 ubox
10 34 0.003302566 ubox
10 49 0.005329373 ubox
10 100 0.004815405 ubox
11 20 0.016447939 ubox
11 24 0.009093363 ubox
11 30 0.005087560 ubox
11 39 0.003559230 ubox
11 48 0.005347776 ubox
11 53 0.988297232 ubox
12 29 0.005087571 ubox
12 33 0.007116178 ubox
12 38 0.003626834 ubox
12 52 0.989658888 ubox
13 20 0.121781270 ubox
13 22 0.020905623 ubox
13 28 0.005039712 ubox
13 32 0.007486668 ubox
13 51 0.989980119 ubox
14 19 0.121769546 ubox
14 21 0.020904313 ubox
14 27 0.005038048 ubox
14 50 0.989883391 ubox
15 34 0.003520628 ubox
15 49 0.949166034 ubox
16 29 0.009391802 ubox
16 33 0.003486033 ubox
17 28 0.010017191 ubox
17 33 0.013069660 ubox
18 29 0.004075469 ubox
18 31 0.006551223 ubox
18 32 0.013466580 ubox
18 42 0.018293171 ubox
18 45 0.987692435 ubox
18 48 0.026886711 ubox
19 26 0.011711405 ubox
19 28 0.005133363 ubox
19 30 0.006630448 ubox
19 31 0.013373847 ubox
19 41 0.018298645 ubox
19 44 0.989639435 ubox
19 47 0.026419369 ubox
20 25 0.011706174 ubox
20 27 0.006367742 ubox
20 40 0.018292139 ubox
20 43 0.989476593 ubox
21 26 0.006268489 ubox
21 28 0.014780854 ubox
21 39 0.016502379 ubox
21 41 0.596118919 ubox
21 42 0.788336316 ubox
21 44 0.025158829 ubox
22 27 0.015421076 ubox
22 34 0.008180278 ubox
22 40 0.842992867 ubox
22 43 0.025177194 ubox
23 33 0.007654537 ubox
23 38 0.098632817 ubox
23 39 0.826450310 ubox
24 34 0.010545392 ubox
24 37 0.135104775 ubox
24 40 0.019179538 ubox
25 33 0.008588107 ubox
25 39 0.017306708 ubox
25 41 0.498765763 ubox
25 42 0.004357698 ubox
25 44 0.004485216 ubox
26 34 0.280417920 ubox
26 40 0.499003669 ubox
26 43 0.004584204 ubox
27 33 0.234108790 ubox
27 38 0.223995381 ubox
27 39 0.433536491 ubox
27 41 0.023594982 ubox
27 42 0.004297446 ubox
28 35 0.174205451 ubox
28 36 0.677277711 ubox
28 37 0.263394627 ubox
28 40 0.023364674 ubox
29 34 0.157651906 ubox
29 35 0.702240387 ubox
29 36 0.238891461 ubox
30 34 0.700618366 ubox
32 63 0.012736376 ubox
33 55 0.006442187 ubox
33 62 0.015076007 ubox
34 39 0.003965599 ubox
34 53 0.032853229 ubox
34 54 0.005587182 ubox
34 59 0.003199684 ubox
34 60 0.022976471 ubox
34 61 0.013129371 ubox
35 52 0.032722463 ubox
35 58 0.003697685 ubox
35 59 0.024326708 ubox
36 58 0.022640237 ubox
36 59 0.006343096 ubox
37 58 0.006398069 ubox
39 55 0.007110729 ubox
40 51 0.138322854 ubox
40 54 0.003795336 ubox
41 50 0.138549717 ubox
42 49 0.138540226 ubox
43 48 0.131909498 ubox
43 51 0.016880408 ubox
44 50 0.016902451 ubox
45 49 0.016781682 ubox
49 57 0.013379360 ubox
50 56 0.013359222 ubox
54 62 0.006846926 ubox
55 64 0.009185991 ubox
56 63 0.010951068 ubox
57 63 0.010080931 ubox
57 97 0.003532810 ubox
58 62 0.010764521 ubox
58 96 0.003566935 ubox
58 102 0.017670375 ubox
58 103 0.791967051 ubox
58 104 0.040410955 ubox
59 95 0.003571220 ubox
59 102 0.879274859 ubox
59 103 0.033398825 ubox
60 94 0.003561437 ubox
60 101 0.888810836 ubox
61 100 0.888846948 ubox
62 99 0.887523840 ubox
63 98 0.830728792 ubox
63 105 0.449288421 ubox
64 95 0.010070930 ubox
64 96 0.047599807 ubox
64 97 0.827333684 ubox
64 104 0.454627112 ubox
65 94 0.010650060 ubox
65 95 0.047124852 ubox
65 96 0.882589599 ubox
65 97 0.007942578 ubox
65 103 0.456806829 ubox
66 91 0.003188178 ubox
66 93 0.010375905 ubox
66 94 0.045293057 ubox
66 95 0.886149018 ubox
66 96 0.008113130 ubox
66 102 0.457829406 ubox
67 90 0.004369898 ubox
67 91 0.010993399 ubox
67 94 0.884708158 ubox
67 101 0.458077009 ubox
68 89 0.004552768 ubox
68 90 0.011475125 ubox
68 100 0.458065656 ubox
69 99 0.455612197 ubox
70 88 0.014127361 ubox
70 92 0.705584590 ubox
70 98 0.409158438 ubox
71 87 0.014135881 ubox
71 90 0.005034240 ubox
71 91 0.499526276 ubox
71 94 0.143162919 ubox
71 95 0.097039147 ubox
71 96 0.334604435 ubox
71 97 0.196283948 ubox
72 86 0.014103154 ubox
72 89 0.003741900 ubox
72 90 0.135186761 ubox
72 91 0.610604464 ubox
72 93 0.178875884 ubox
72 94 0.092759929 ubox
72 95 0.336262789 ubox
72 96 0.189619404 ubox
73 85 0.014143021 ubox
73 89 0.122930938 ubox
73 90 0.795127673 ubox
73 91 0.494589470 ubox
73 94 0.309979622 ubox
74 84 0.014124689 ubox
74 89 0.796942465 ubox
74 90 0.506082140 ubox
75 81 0.006716518 ubox
75 88 0.754829000 ubox
76 80 0.006642245 ubox
76 88 0.582738971 ubox
76 92 0.298587578 ubox
77 85 0.031366272 ubox
77 86 0.707888679 ubox
77 87 0.638273809 ubox
77 90 0.028886714 ubox
77 91 0.298198261 ubox
78 84 0.038359757 ubox
78 85 0.707430311 ubox
78 86 0.638185088 ubox
78 87 0.017362677 ubox
78 89 0.033107541 ubox
78 90 0.297686572 ubox
79 83 0.039891737 ubox
79 84 0.650341502 ubox
79 85 0.624987459 ubox
79 86 0.021851546 ubox
79 87 0.031522758 ubox
79 89 0.290443549 ubox
80 84 0.608443159 ubox
80 85 0.121818615 ubox
80 86 0.060929077 ubox
80 87 0.291367938 ubox
80 89 0.013243989 ubox
81 85 0.060941225 ubox
81 86 0.291058646 ubox
91 98 0.012894165 ubox
92 97 0.016670771 ubox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
18 45 0.9500000 lbox
19 44 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
28 36 0.9500000 lbox
29 35 0.9500000 lbox
30 34 0.9500000 lbox
58 103 0.9500000 lbox
59 102 0.9500000 lbox
60 101 0.9500000 lbox
61 100 0.9500000 lbox
62 99 0.9500000 lbox
63 98 0.9500000 lbox
64 97 0.9500000 lbox
65 96 0.9500000 lbox
66 95 0.9500000 lbox
67 94 0.9500000 lbox
70 92 0.9500000 lbox
71 91 0.9500000 lbox
73 90 0.9500000 lbox
74 89 0.9500000 lbox
75 88 0.9500000 lbox
77 86 0.9500000 lbox
78 85 0.9500000 lbox
79 84 0.9500000 lbox
showpage
end
%%EOF
