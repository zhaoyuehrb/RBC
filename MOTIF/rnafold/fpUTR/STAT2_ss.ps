%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCAGCCAGUGUCGGGGUGGCGGCUGGGAAUGGGGGCCGCUCCGGACUUCCGCUGCCAACUACAAGGGGGCGGGUCCGAGGGGGGUUAGCCGAAGUUGUAGGCGGGGCGCGAGGUUCUAGUACCCGAGCUCAUACUAGGGACGGGAAGUCGCGACCAGAGCCAUUGGAGGGCGCGGGGACUGCAACCCUAAUCAGAGCCCAA\
) } def
/len { sequence length } bind def

/coor [
[49.94574356 335.47201538]
[35.70629120 330.75631714]
[28.84493446 317.41842651]
[23.21156120 331.32040405]
[25.19971275 347.01620483]
[13.24895859 355.90600586]
[7.61558437 369.80798340]
[1.98220980 383.70996094]
[10.30545902 396.80590820]
[9.30792141 412.29086304]
[-0.62683135 424.21063232]
[-15.67868233 427.98175049]
[-30.05988884 422.15417480]
[-38.24058151 408.96875000]
[-37.07512283 393.49548340]
[-27.01164627 381.68423462]
[-11.91977215 378.07659912]
[-6.28639698 364.17462158]
[-0.65302265 350.27264404]
[-3.04411030 335.57119751]
[9.30957890 325.68704224]
[14.94295406 311.78506470]
[19.92827606 297.63772583]
[24.25490570 283.27526855]
[28.58153725 268.91281128]
[32.90816879 254.55035400]
[25.65731239 241.59039307]
[29.84053230 226.96318054]
[43.48329926 219.44569397]
[47.80992889 205.08322144]
[44.07256699 190.66513062]
[55.46155930 179.68327332]
[59.78819275 165.32081604]
[64.11482239 150.95834351]
[68.44145203 136.59588623]
[72.76808167 122.23342896]
[65.97881317 108.85785675]
[51.83149719 103.87253571]
[37.68418121 98.88721466]
[22.09696007 101.59812927]
[12.66470623 90.07069397]
[-1.48261058 85.08537292]
[-15.62992668 80.10005188]
[-29.81521034 75.22380829]
[-44.03762054 70.45693207]
[-58.26002884 65.69006348]
[-72.48243713 60.92319489]
[-86.70484924 56.15632248]
[-93.25830078 57.09603882]
[-98.51155853 54.90969849]
[-101.28788757 51.01745987]
[-115.35675049 45.81486893]
[-129.42562866 40.61227798]
[-143.49449158 35.40968704]
[-157.56335449 30.20709610]
[-173.19047546 32.67765808]
[-182.44409180 21.00633430]
[-196.51296997 15.80374432]
[-209.34635925 24.52633667]
[-224.85472107 24.00613213]
[-237.07475281 14.44316006]
[-241.30760193 -0.48542005]
[-235.92567444 -15.03926563]
[-222.99841309 -23.62212563]
[-207.49661255 -22.93371582]
[-195.38104248 -13.23874378]
[-191.31037903 1.73487628]
[-177.24151611 6.93746662]
[-162.62068176 4.09478140]
[-152.36076355 16.13822937]
[-138.29190063 21.34081841]
[-124.22303009 26.54340935]
[-110.15415955 31.74600029]
[-96.08529663 36.94858932]
[-81.93798065 41.93391037]
[-67.71556854 46.70078278]
[-53.49316025 51.46765518]
[-39.27074814 56.23452759]
[-25.04833984 61.00139618]
[-17.70313072 60.14588928]
[-10.64460468 65.95272827]
[3.50271130 70.93805695]
[17.65002823 75.92337799]
[32.22533798 72.85587311]
[42.66950607 84.73989868]
[56.81682205 89.72521973]
[70.96413422 94.71054077]
[83.14192963 75.57466888]
[105.41262054 70.65242004]
[124.73319244 83.00923920]
[136.56282043 73.78645325]
[148.39247131 64.56367493]
[144.87374878 50.87248611]
[146.83415222 36.91670227]
[153.94488525 24.79954910]
[165.10348511 16.33443069]
[178.60462952 12.77356815]
[192.40075684 14.62284374]
[204.41253662 21.57021332]
[216.38279724 12.53069496]
[221.34880066 4.85729980]
[228.60771179 3.44582939]
[240.71574402 -5.40828419]
[252.82379150 -14.26239777]
[255.18823242 -31.59258842]
[269.07971191 -41.65502167]
[285.61898804 -38.62076187]
[297.58923340 -47.66027832]
[309.48953247 -56.79170227]
[321.31918335 -66.01448059]
[333.14880371 -75.23726654]
[344.97845459 -84.46004486]
[356.80807495 -93.68283081]
[359.16613770 -106.36733246]
[369.21362305 -113.80514526]
[381.23706055 -112.44562531]
[393.20730591 -121.48514557]
[405.17758179 -130.52467346]
[417.14782715 -139.56419373]
[423.49783325 -154.05514526]
[438.31719971 -155.55053711]
[450.28744507 -164.59005737]
[455.25344849 -172.26345825]
[462.51235962 -173.67492676]
[474.62039185 -182.52903748]
[486.72845459 -191.38314819]
[493.30084229 -205.77461243]
[508.14147949 -207.04162598]
[520.24951172 -215.89573669]
[522.42578125 -231.54946899]
[535.08374023 -241.01269531]
[550.71356201 -238.67103577]
[560.04241943 -225.91377258]
[557.53564453 -210.30955505]
[544.68048096 -201.11608887]
[529.10363770 -203.78768921]
[516.99560547 -194.93357849]
[511.28921509 -181.17543030]
[495.58255005 -179.27511597]
[483.47451782 -170.42100525]
[471.36648560 -161.56687927]
[459.32696533 -152.61979675]
[447.35671997 -143.58029175]
[441.86288452 -129.73588562]
[426.18734741 -127.59392548]
[414.21710205 -118.55440521]
[402.24682617 -109.51489258]
[390.27658081 -100.47537231]
[384.32028198 -83.97063446]
[366.03088379 -81.85319519]
[354.20123291 -72.63040924]
[342.37161255 -63.40763092]
[330.54196167 -54.18484879]
[318.71231079 -44.96206665]
[315.36825562 -38.36652756]
[306.62875366 -35.69002151]
[294.65850830 -26.65050125]
[294.68060303 -13.76203728]
[287.16171265 -3.05530834]
[274.66461182 1.43033564]
[261.67791748 -2.15435553]
[249.56987000 6.69975758]
[237.46182251 15.55387115]
[225.42231750 24.50095367]
[213.45205688 33.54047394]
[216.89506531 49.14221191]
[213.17733765 64.74059296]
[202.99353027 77.20215607]
[188.34246826 84.00087738]
[172.13488770 83.73010254]
[157.61524963 76.39331055]
[145.78561401 85.61608887]
[133.95597839 94.83887482]
[132.91731262 109.80287170]
[143.35931396 120.57154846]
[153.80133057 131.34022522]
[164.24333191 142.10890198]
[179.61022949 149.27095032]
[176.98207092 166.01994324]
[160.16007996 168.13107300]
[153.47465515 152.55091858]
[143.03265381 141.78224182]
[132.59063721 131.01354980]
[122.14862823 120.24488068]
[111.70679474 127.45046234]
[99.28646088 129.66955566]
[87.13054657 126.56005859]
[82.80390930 140.92251587]
[78.47727966 155.28497314]
[74.15065002 169.64744568]
[69.82402039 184.00990295]
[73.25191498 199.45529175]
[62.17238998 209.40985107]
[57.84576035 223.77232361]
[65.06600189 237.57470703]
[60.47358704 252.07864380]
[47.27062607 258.87698364]
[42.94399643 273.23944092]
[38.61736679 287.60189819]
[34.29073715 301.96435547]
[47.99893951 295.87460327]
[62.04879761 301.12832642]
[68.39810944 314.71826172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 22]
[4 21]
[6 19]
[7 18]
[8 17]
[23 200]
[24 199]
[25 198]
[26 197]
[29 194]
[30 193]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[37 87]
[38 86]
[39 85]
[41 83]
[42 82]
[43 81]
[44 79]
[45 78]
[46 77]
[47 76]
[48 75]
[51 74]
[52 73]
[53 72]
[54 71]
[55 70]
[57 68]
[58 67]
[90 173]
[91 172]
[92 171]
[99 165]
[100 164]
[102 163]
[103 162]
[104 161]
[107 157]
[108 156]
[109 154]
[110 153]
[111 152]
[112 151]
[113 150]
[116 148]
[117 147]
[118 146]
[119 145]
[121 143]
[122 142]
[124 141]
[125 140]
[126 139]
[128 137]
[129 136]
[174 184]
[175 183]
[176 182]
[177 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
