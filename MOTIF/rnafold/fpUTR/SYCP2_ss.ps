%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCGCUGCGGCGGUCCCUGAGGCGCAGAGUUGCGACGCUCGGCGGCAUAGGGGGCGGCUCCACCGACACUACGCGGACGCCUCCUGCCGCAGAUACACAAUCAUCAUCUUACUAGUUCUCUGUGUUGCUCGCUAACCAGUCCCCCAGUUCAGUAGACUGGAGCCCAGAGCCUGCUUACUUGUCAGGUGUUUAUUUUGUCUUGCUUUUUUUUUUUUUUUAAAUGAAGUCAAA\
) } def
/len { sequence length } bind def

/coor [
[57.39283752 143.05741882]
[43.54425812 148.82081604]
[29.69567490 154.58422852]
[15.84709358 160.34762573]
[1.99851263 166.11102295]
[-11.85006905 171.87442017]
[-25.69865036 177.63783264]
[-39.50839996 183.49366760]
[-53.27869797 189.44168091]
[-67.04899597 195.38969421]
[-80.81929016 201.33770752]
[-94.58959198 207.28572083]
[-107.79173279 214.40637207]
[-120.32608795 222.64590454]
[-127.60772705 236.69183350]
[-142.49305725 237.21748352]
[-155.02740479 245.45701599]
[-167.56176758 253.69654846]
[-180.09613037 261.93606567]
[-192.63047791 270.17559814]
[-205.16484070 278.41513062]
[-206.01664734 293.79632568]
[-215.64945984 305.58877563]
[-230.20683289 309.40280151]
[-244.05291748 303.97845459]
[-256.58728027 312.21798706]
[-269.06628418 320.54110718]
[-281.48937988 328.94744873]
[-288.58258057 343.08947754]
[-303.45956421 343.81408691]
[-315.88265991 352.22042847]
[-328.30575562 360.62677002]
[-340.72882080 369.03314209]
[-343.47491455 384.59701538]
[-356.46975708 393.59201050]
[-372.00372314 390.68154907]
[-380.86083984 377.59234619]
[-377.78628540 362.08999634]
[-364.60415649 353.37176514]
[-349.13519287 356.61004639]
[-336.71209717 348.20370483]
[-324.28900146 339.79733276]
[-311.86590576 331.39099121]
[-305.66128540 317.85025024]
[-289.89572144 316.52438354]
[-277.47262573 308.11801147]
[-273.70068359 301.77691650]
[-264.82681274 299.68362427]
[-252.29244995 291.44409180]
[-251.78167725 276.58215332]
[-242.50782776 264.73059082]
[-227.86236572 260.56359863]
[-213.40437317 265.88076782]
[-200.87001038 257.64123535]
[-188.33566284 249.40171814]
[-175.80130005 241.16218567]
[-163.26693726 232.92265320]
[-150.73258972 224.68312073]
[-144.34748840 211.22653198]
[-128.56561279 210.11154175]
[-116.03126526 201.87200928]
[-131.01672363 202.53227234]
[-145.00180054 197.10847473]
[-155.62353516 186.51701355]
[-161.08723450 172.54748535]
[-160.46975708 157.56019592]
[-153.87541199 144.08746338]
[-142.41841125 134.40567017]
[-128.03456116 130.15068054]
[-113.15420532 132.04142761]
[-100.29156494 139.75846863]
[-91.61995697 151.99787903]
[-88.60456085 166.69166565]
[-91.75486755 181.35711670]
[-100.53760529 193.51542664]
[-86.76731110 187.56741333]
[-72.99700928 181.61940002]
[-59.22671127 175.67138672]
[-45.45641327 169.72337341]
[-40.57046127 164.19485474]
[-31.46205139 163.78924561]
[-17.61347008 158.02584839]
[-3.76488876 152.26243591]
[10.08369255 146.49903870]
[23.93227386 140.73564148]
[37.78085709 134.97224426]
[51.62943649 129.20883179]
[52.81989288 126.16369629]
[55.02643204 123.39073181]
[58.17282104 121.22451019]
[62.07503128 119.97341919]
[66.45122528 119.88581085]
[77.64301300 109.89862823]
[88.83480835 99.91144562]
[99.95958710 89.84967041]
[111.01686096 79.71376801]
[122.07414246 69.57785797]
[133.13142395 59.44195175]
[132.97364807 48.58704758]
[138.69013977 39.61705017]
[148.19589233 35.35544205]
[158.26275635 36.98549271]
[169.58705139 27.14881134]
[180.91134644 17.31212997]
[179.70544434 1.95465696]
[187.68052673 -11.01652527]
[201.59965515 -16.73682594]
[216.04519653 -13.20636082]
[227.36949158 -23.04304123]
[238.69378662 -32.87972260]
[250.01809692 -42.71640396]
[261.34237671 -52.55308533]
[266.68692017 -67.44424438]
[281.36935425 -69.94921875]
[292.69366455 -79.78589630]
[298.03817749 -94.67705536]
[312.72064209 -97.18202972]
[324.04495239 -107.01871490]
[335.36923218 -116.85539246]
[333.44400024 -127.31961060]
[336.00769043 -137.56283569]
[342.53472900 -145.76022339]
[351.79965210 -150.48001099]
[362.10687256 -150.93339539]
[371.60083008 -147.10565186]
[383.31039429 -156.48037720]
[395.01998901 -165.85510254]
[397.20870972 -178.55519104]
[407.14068604 -186.12312317]
[419.16885376 -184.94087219]
[431.00271606 -194.15823364]
[442.83657837 -203.37559509]
[454.67044067 -212.59294128]
[466.31710815 -222.04573059]
[477.77191162 -231.73014832]
[489.22668457 -241.41456604]
[491.80993652 -247.47137451]
[496.37371826 -250.82281494]
[501.11959839 -251.19979858]
[512.82916260 -260.57452393]
[524.53875732 -269.94924927]
[536.24835205 -279.32397461]
[547.95794678 -288.69869995]
[559.66754150 -298.07342529]
[555.76721191 -312.79440308]
[558.19805908 -327.82806396]
[566.53887939 -340.56973267]
[579.34466553 -348.81185913]
[594.39666748 -351.12640381]
[609.08703613 -347.11236572]
[620.87060547 -337.46524048]
[627.70581055 -323.85641479]
[628.40838623 -308.64373779]
[622.85656738 -294.46282959]
[612.01232910 -283.77069092]
[597.75445557 -278.41973877]
[582.55322266 -279.33712769]
[569.04229736 -286.36383057]
[557.33270264 -276.98910522]
[545.62310791 -267.61437988]
[533.91351318 -258.23965454]
[522.20391846 -248.86492920]
[510.49432373 -239.49020386]
[498.91110229 -229.95977783]
[487.45632935 -220.27536011]
[476.00152588 -210.59094238]
[475.34054565 -207.14340210]
[472.98675537 -203.84159851]
[469.02523804 -201.47325134]
[463.88781738 -200.75907898]
[452.05395508 -191.54171753]
[440.22006226 -182.32437134]
[428.38619995 -173.10700989]
[422.66421509 -156.50962830]
[404.39471436 -154.14550781]
[392.68511963 -144.77078247]
[380.97555542 -135.39605713]
[380.23901367 -115.91500092]
[365.16278076 -103.07804871]
[345.20590210 -105.53109741]
[333.88162231 -95.69441223]
[322.55731201 -85.85773468]
[318.02279663 -71.67015839]
[302.53033447 -68.46160126]
[291.20605469 -58.62491989]
[286.67150879 -44.43734741]
[271.17907715 -41.22878647]
[259.85476685 -31.39210701]
[248.53047180 -21.55542564]
[237.20617676 -11.71874428]
[225.88188171 -1.88206351]
[227.35656738 12.91534519]
[219.74511719 25.89725304]
[205.78573608 31.97910881]
[190.74803162 28.63642693]
[179.42373657 38.47311020]
[168.09944153 48.30978775]
[163.13189697 67.00684357]
[143.26733398 70.49922943]
[132.21005249 80.63513947]
[121.15277100 90.77104187]
[110.09548950 100.90695190]
[106.76115417 108.22966003]
[98.82199097 111.10323334]
[87.63020325 121.09041595]
[76.43841553 131.07760620]
[90.71489716 126.47521210]
[105.62023163 124.79260254]
[120.56345367 126.09648132]
[134.95211792 130.33514404]
[148.21575928 137.34056091]
[159.82852173 146.83497620]
[169.32997131 158.44197083]
[176.34344482 171.70135498]
[180.59085083 186.08744812]
[181.90379333 201.02987671]
[180.23023987 215.93621826]
[175.63652039 230.21549988]
[168.30476379 243.30157471]
[158.52566528 254.67562866]
[146.68692017 263.88671875]
[133.25790405 270.56964111]
[118.77104187 274.45947266]
[103.80067444 275.40194702]
[88.94034576 273.35974121]
[74.77922058 268.41378784]
[61.87873459 260.76019287]
[50.75035477 250.70239258]
[41.83528900 238.63916016]
[35.48698807 225.04876709]
[31.95714569 210.47000122]
[31.38570786 195.48089600]
[33.79533005 180.67570496]
[39.09047699 166.64140320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 87]
[2 86]
[3 85]
[4 84]
[5 83]
[6 82]
[7 81]
[8 79]
[9 78]
[10 77]
[11 76]
[12 75]
[13 61]
[14 60]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[25 49]
[26 48]
[27 46]
[28 45]
[30 43]
[31 42]
[32 41]
[33 40]
[92 206]
[93 205]
[94 204]
[95 202]
[96 201]
[97 200]
[98 199]
[102 197]
[103 196]
[104 195]
[108 191]
[109 190]
[110 189]
[111 188]
[112 187]
[114 185]
[115 184]
[117 182]
[118 181]
[119 180]
[125 177]
[126 176]
[127 175]
[130 173]
[131 172]
[132 171]
[133 170]
[134 166]
[135 165]
[136 164]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[144 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
