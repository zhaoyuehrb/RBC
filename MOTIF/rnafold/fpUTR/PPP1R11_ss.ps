%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUUGGUGCCGUGGAAGGGAAAAAGGGGGACUGCAGUAUGCGUCACACCCGGAAGCGGCGAGCCGGAAGUGGGGUUAGCCAGGUUAUCCCCAGGGGUGGAGAAGCGGAGGCCCAGGAGGAGGGGGAAUAAAGAAGGUGGAGGAUCCUGGCUACCACUCUGAAUCCGAUACCGCUUCUCUUAGACCUCAGCGACAGAAAAAGGGAAGGGUGUCUCAUCCCCCUUCCUCCUCUCCUCCCUGUCCUGAGCCUUAGC\
C\
) } def
/len { sequence length } bind def

/coor [
[76.23634338 122.88879395]
[64.55802917 132.30245972]
[58.66959763 146.98703003]
[43.90497208 148.95046997]
[32.22665787 158.36413574]
[20.54833984 167.77778625]
[8.87002468 177.19143677]
[-2.80829048 186.60510254]
[-14.48660564 196.01875305]
[-26.04897881 205.57446289]
[-37.49367905 215.27079773]
[-48.93838120 224.96713257]
[-60.38308334 234.66345215]
[-71.82778168 244.35978699]
[-69.20129395 259.42791748]
[-74.43508911 273.69342041]
[-86.02956390 283.35955811]
[-100.80673981 285.90734863]
[-114.78097534 280.75115967]
[-126.22567749 290.44747925]
[-137.67037964 300.14379883]
[-134.69029236 308.84301758]
[-134.19261169 318.00161743]
[-136.20223999 326.92694092]
[-140.55493164 334.94732666]
[-146.91058350 341.46286011]
[-154.77987671 345.99008179]
[-163.56182861 348.19799805]
[-172.58979797 347.93206787]
[-181.18199158 345.22512817]
[-188.69299316 340.29385376]
[-200.81745911 349.12545776]
[-212.94192505 357.95709229]
[-218.01679993 365.51620483]
[-225.26901245 366.82147217]
[-237.50053406 375.50421143]
[-249.73205566 384.18695068]
[-259.14791870 398.28579712]
[-275.30236816 393.14086914]
[-274.83047485 376.19351196]
[-258.41479492 371.95541382]
[-246.18327332 363.27267456]
[-233.95175171 354.58993530]
[-221.77354431 345.83261108]
[-209.64906311 337.00100708]
[-197.52459717 328.16940308]
[-199.22363281 307.23861694]
[-187.78739929 289.46392822]
[-167.77842712 282.24255371]
[-147.36671448 288.69909668]
[-135.92201233 279.00277710]
[-124.47730255 269.30645752]
[-127.26779175 254.67501831]
[-122.32708740 240.51713562]
[-110.88754272 230.66812134]
[-95.95606995 227.84892273]
[-81.52411652 232.91508484]
[-70.07941437 223.21875000]
[-58.63471222 213.52243042]
[-47.19001007 203.82609558]
[-35.74530792 194.12976074]
[-34.46602249 189.55580139]
[-30.31698990 185.72584534]
[-23.90026283 184.34043884]
[-12.22194767 174.92678833]
[-0.54363239 165.51312256]
[11.13468266 156.09947205]
[22.81299782 146.68582153]
[34.49131393 137.27215576]
[39.54443359 123.26090240]
[55.14437103 120.62413788]
[66.82268524 111.21047974]
[65.17575836 96.30117035]
[51.72436142 89.66341400]
[38.27296066 83.02565765]
[24.82155800 76.38790131]
[9.02222729 77.21958923]
[1.03280509 64.64904785]
[-12.41859627 58.01129532]
[-25.86999702 51.37353897]
[-39.32139969 44.73578262]
[-56.20090866 43.14881134]
[-59.34867096 26.48964310]
[-44.21193695 18.85317802]
[-32.68364334 31.28438187]
[-19.23224068 37.92213821]
[-5.78083992 44.55989456]
[7.67056131 51.19765091]
[22.50775909 49.89118195]
[31.45931435 62.93649673]
[44.91071701 69.57425690]
[58.36211777 76.21201324]
[71.81351471 82.84976959]
[96.82656860 70.60725403]
[118.91130066 81.96393585]
[132.28056335 75.16224670]
[145.64982605 68.36056519]
[159.01907349 61.55887604]
[172.38833618 54.75718689]
[185.63063049 47.71151733]
[198.74153137 40.42422867]
[211.85241699 33.13694382]
[216.12727356 20.98797607]
[227.17349243 15.18288517]
[238.83073425 18.34420586]
[252.02972412 11.21772957]
[258.07214355 4.40717697]
[265.43389893 4.08593225]
[278.71902466 -2.87866974]
[292.00411987 -9.84327221]
[305.28924561 -16.80787468]
[318.57437134 -23.77247620]
[321.07421875 -36.98972702]
[330.58456421 -46.22583771]
[343.48529053 -48.27682877]
[355.04183960 -42.61642075]
[368.41107178 -49.41810989]
[381.78033447 -56.21979523]
[395.14959717 -63.02148438]
[408.51885986 -69.82317352]
[421.88812256 -76.62486267]
[435.25738525 -83.42654419]
[448.58480835 -90.30982208]
[461.86993408 -97.27442169]
[475.15502930 -104.23902130]
[488.44015503 -111.20362854]
[501.72528076 -118.16822815]
[515.01037598 -125.13282776]
[512.52868652 -134.43672180]
[512.41491699 -144.29682922]
[514.78924561 -154.10594177]
[519.61529541 -163.23257446]
[526.69580078 -171.06140137]
[535.67877197 -177.03445435]
[546.07409668 -180.68983459]
[557.28015137 -181.69590759]
[568.61834717 -179.87799072]
[575.50158691 -193.20542908]
[582.38488770 -206.53286743]
[589.26812744 -219.86030579]
[596.15142822 -233.18774414]
[602.95312500 -246.55699158]
[609.67297363 -259.96759033]
[602.41625977 -273.68325806]
[604.64068604 -289.04006958]
[615.49084473 -300.13299561]
[630.79467773 -302.69659424]
[644.66754150 -295.74511719]
[651.77502441 -281.95150757]
[649.38415527 -266.61975098]
[638.41430664 -255.64515686]
[623.08355713 -253.24772644]
[616.36370850 -239.83714294]
[616.17749023 -232.47076416]
[609.47888184 -226.30445862]
[602.59558105 -212.97703552]
[595.71234131 -199.64959717]
[588.82904053 -186.32215881]
[581.94573975 -172.99472046]
[585.98303223 -166.67407227]
[598.41320801 -175.06999207]
[605.58435059 -188.24473572]
[620.57519531 -188.76901245]
[628.64929199 -176.12742615]
[621.86956787 -162.74702454]
[606.90167236 -161.78062439]
[594.05755615 -154.03279114]
[598.09478760 -147.71215820]
[613.08111572 -148.35372925]
[628.06738281 -148.99528503]
[643.05364990 -149.63685608]
[658.03991699 -150.27842712]
[673.02618408 -150.91999817]
[681.43743896 -154.40502930]
[688.19934082 -151.47668457]
[703.19232178 -151.93501282]
[718.18530273 -152.39334106]
[733.17834473 -152.85168457]
[748.17132568 -153.31001282]
[763.16430664 -153.76834106]
[778.15728760 -154.22666931]
[793.15032959 -154.68501282]
[797.36578369 -169.21377563]
[805.86627197 -181.72766113]
[817.81890869 -191.00067139]
[832.05279541 -196.12435913]
[847.17340088 -196.59672546]
[861.69927979 -192.37152100]
[874.20751953 -183.86267090]
[883.47247314 -171.90379333]
[888.58660889 -157.66648865]
[889.04888916 -142.54559326]
[884.81396484 -128.02249146]
[876.29669189 -115.52000427]
[864.33160400 -106.26301575]
[850.09088135 -101.15841675]
[834.96966553 -100.70630646]
[820.44946289 -104.95098114]
[807.95263672 -113.47658539]
[798.70367432 -125.44786835]
[793.60864258 -139.69201660]
[778.61566162 -139.23367310]
[763.62261963 -138.77534485]
[748.62963867 -138.31701660]
[733.63665771 -137.85868835]
[718.64367676 -137.40034485]
[703.65063477 -136.94201660]
[688.65765381 -136.48368835]
[673.66772461 -135.93373108]
[658.68145752 -135.29216003]
[643.69519043 -134.65058899]
[628.70892334 -134.00901794]
[613.72265625 -133.36744690]
[598.73638916 -132.72587585]
[587.09002686 -108.23365784]
[564.70507812 -95.26354980]
[540.15582275 -97.15784454]
[521.97497559 -111.84771729]
[508.68988037 -104.88311005]
[495.40475464 -97.91851044]
[482.11965942 -90.95391083]
[468.83453369 -83.98930359]
[455.54940796 -77.02470398]
[451.09756470 -71.15278625]
[442.05905151 -70.05728912]
[428.68981934 -63.25559998]
[415.32055664 -56.45391464]
[401.95129395 -49.65222549]
[388.58203125 -42.85054016]
[375.21276855 -36.04885101]
[361.84350586 -29.24716377]
[357.31289673 -13.03751659]
[342.15533447 -4.97365093]
[325.53897095 -10.48736000]
[312.25384521 -3.52275801]
[298.96871948 3.44184422]
[285.68362427 10.40644646]
[272.39849854 17.37104797]
[259.15618896 24.41671944]
[245.95719910 31.54319572]
[237.55339050 46.96319580]
[219.13970947 46.24783707]
[206.02880859 53.53512192]
[192.91792297 60.82240677]
[191.60247803 64.06429291]
[188.66728210 66.83879089]
[184.34492493 68.39856720]
[179.19001770 68.12644196]
[165.82077026 74.92813110]
[152.45150757 81.72982025]
[139.08224487 88.53150940]
[125.71298981 95.33319092]
[126.45401001 106.64801788]
[122.24173737 117.69195557]
[113.47043610 126.31637573]
[101.45333862 130.67265320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 72]
[2 71]
[4 69]
[5 68]
[6 67]
[7 66]
[8 65]
[9 64]
[10 61]
[11 60]
[12 59]
[13 58]
[14 57]
[19 52]
[20 51]
[21 50]
[31 46]
[32 45]
[33 44]
[35 43]
[36 42]
[37 41]
[73 93]
[74 92]
[75 91]
[76 90]
[78 88]
[79 87]
[80 86]
[81 85]
[95 252]
[96 251]
[97 250]
[98 249]
[99 248]
[100 244]
[101 243]
[102 242]
[105 240]
[106 239]
[108 238]
[109 237]
[110 236]
[111 235]
[112 234]
[116 231]
[117 230]
[118 229]
[119 228]
[120 227]
[121 226]
[122 225]
[123 223]
[124 222]
[125 221]
[126 220]
[127 219]
[128 218]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 153]
[143 152]
[168 214]
[169 213]
[170 212]
[171 211]
[172 210]
[173 209]
[175 208]
[176 207]
[177 206]
[178 205]
[179 204]
[180 203]
[181 202]
[182 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
