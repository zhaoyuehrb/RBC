%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AMELY)
} def

/sequence { (\
AGAGGACCAAGCCUCCCUGUGUAGCACAAAGAAAGUUUCUCUGAAUAUAUUUAAAGAACCAUCAAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.051821761 ubox
1 40 0.003240488 ubox
1 42 0.117272890 ubox
1 52 0.003377117 ubox
2 15 0.984153783 ubox
2 17 0.058093222 ubox
2 39 0.004171041 ubox
2 41 0.125210071 ubox
2 63 0.026276103 ubox
3 14 0.987077576 ubox
3 18 0.028315541 ubox
3 38 0.003971280 ubox
3 40 0.125165100 ubox
3 42 0.008712947 ubox
3 62 0.025292588 ubox
4 13 0.987828328 ubox
4 14 0.004134751 ubox
4 15 0.005312337 ubox
4 16 0.072941078 ubox
4 17 0.030557252 ubox
4 38 0.003368391 ubox
4 39 0.124878627 ubox
4 40 0.005984503 ubox
4 41 0.008928677 ubox
4 42 0.009892984 ubox
4 60 0.025720014 ubox
5 12 0.985109146 ubox
5 13 0.005289388 ubox
5 14 0.004931067 ubox
5 15 0.073205090 ubox
5 16 0.030076692 ubox
5 37 0.021355958 ubox
5 38 0.115025679 ubox
5 39 0.010866338 ubox
5 40 0.007562864 ubox
5 41 0.010829315 ubox
5 59 0.025596830 ubox
5 63 0.004576979 ubox
6 14 0.070370276 ubox
6 22 0.004799897 ubox
6 36 0.030207572 ubox
6 37 0.100825501 ubox
6 38 0.012343325 ubox
6 40 0.010657732 ubox
6 62 0.004348266 ubox
7 21 0.005000458 ubox
7 35 0.036665387 ubox
8 19 0.005166370 ubox
9 18 0.004981530 ubox
9 37 0.018395387 ubox
9 38 0.044117764 ubox
10 18 0.004218749 ubox
10 36 0.029430049 ubox
10 37 0.064808922 ubox
11 17 0.004762013 ubox
11 25 0.004152816 ubox
11 36 0.102552481 ubox
11 37 0.003748669 ubox
12 24 0.004009275 ubox
12 35 0.102123828 ubox
13 31 0.043778254 ubox
13 35 0.018231689 ubox
13 56 0.009174117 ubox
14 30 0.043381553 ubox
14 32 0.113793092 ubox
14 34 0.020810247 ubox
14 55 0.008919989 ubox
14 57 0.005542581 ubox
14 67 0.003575633 ubox
15 31 0.117787008 ubox
15 56 0.006862171 ubox
15 66 0.004504341 ubox
17 24 0.033932243 ubox
17 31 0.210675784 ubox
17 35 0.023220217 ubox
17 56 0.119562220 ubox
17 66 0.070411325 ubox
18 23 0.032123094 ubox
18 26 0.105870928 ubox
18 28 0.814997393 ubox
18 30 0.192028290 ubox
18 34 0.020649945 ubox
18 47 0.014787718 ubox
18 49 0.051653953 ubox
18 53 0.037732178 ubox
18 55 0.118819421 ubox
18 61 0.014271436 ubox
18 64 0.017430909 ubox
18 65 0.062143274 ubox
19 25 0.119960753 ubox
19 27 0.884668947 ubox
19 46 0.016179224 ubox
19 48 0.056663609 ubox
19 50 0.277210956 ubox
19 52 0.035640137 ubox
19 59 0.007757060 ubox
19 60 0.015482353 ubox
19 62 0.018744773 ubox
19 63 0.019452188 ubox
20 24 0.112251186 ubox
20 26 0.883849994 ubox
20 28 0.194735524 ubox
20 45 0.016145630 ubox
20 47 0.056945739 ubox
20 49 0.291945629 ubox
20 53 0.011403788 ubox
20 58 0.007365552 ubox
20 61 0.023858256 ubox
20 64 0.010192187 ubox
21 25 0.869811170 ubox
21 27 0.205619823 ubox
21 46 0.056412110 ubox
21 48 0.295908925 ubox
21 50 0.065682542 ubox
21 52 0.009794810 ubox
21 59 0.012988956 ubox
21 60 0.023857818 ubox
21 62 0.004251431 ubox
21 63 0.010903081 ubox
22 26 0.185284338 ubox
22 43 0.018183230 ubox
22 45 0.053976756 ubox
22 47 0.296101969 ubox
22 49 0.067345834 ubox
22 58 0.012373557 ubox
22 61 0.004475647 ubox
23 37 0.017637470 ubox
23 40 0.004127113 ubox
23 42 0.022283556 ubox
23 46 0.293760603 ubox
23 48 0.067056783 ubox
24 36 0.026673516 ubox
24 39 0.004394389 ubox
24 41 0.022605078 ubox
25 35 0.027240380 ubox
25 43 0.089101744 ubox
26 36 0.021458746 ubox
26 42 0.087895388 ubox
27 35 0.023087357 ubox
27 43 0.288160941 ubox
28 37 0.006663924 ubox
28 38 0.015872576 ubox
28 42 0.284624532 ubox
28 52 0.007246578 ubox
29 36 0.010149055 ubox
29 37 0.023034689 ubox
29 38 0.013925759 ubox
29 51 0.009129083 ubox
29 52 0.008829699 ubox
30 36 0.025611785 ubox
30 37 0.016451175 ubox
30 38 0.011747395 ubox
30 40 0.321391510 ubox
30 42 0.076398345 ubox
30 50 0.009252657 ubox
30 51 0.009195358 ubox
30 52 0.011357069 ubox
31 36 0.014384403 ubox
31 37 0.014882521 ubox
31 38 0.011610194 ubox
31 39 0.331085901 ubox
31 41 0.079058965 ubox
31 50 0.008378958 ubox
31 51 0.012458169 ubox
31 52 0.017307910 ubox
31 63 0.732447184 ubox
32 36 0.013584756 ubox
32 37 0.016126555 ubox
32 38 0.326590629 ubox
32 40 0.076872680 ubox
32 50 0.012073800 ubox
32 51 0.017975755 ubox
32 52 0.013692131 ubox
32 62 0.726212489 ubox
33 37 0.248930895 ubox
33 50 0.017198747 ubox
33 51 0.014410992 ubox
33 52 0.015351983 ubox
34 40 0.009751957 ubox
34 42 0.028989303 ubox
34 50 0.014299726 ubox
34 51 0.016362389 ubox
35 39 0.012068331 ubox
35 41 0.029982417 ubox
35 46 0.033550033 ubox
35 48 0.015906531 ubox
35 50 0.016575984 ubox
35 59 0.760155938 ubox
35 62 0.060814964 ubox
36 44 0.008367556 ubox
36 45 0.034194570 ubox
36 47 0.015827769 ubox
36 49 0.016448141 ubox
36 56 0.003707167 ubox
36 57 0.011736641 ubox
36 58 0.628242925 ubox
36 61 0.061561930 ubox
36 65 0.006875202 ubox
36 66 0.005773122 ubox
36 67 0.008001312 ubox
36 68 0.008108391 ubox
37 43 0.008847316 ubox
37 44 0.033714896 ubox
37 45 0.032225271 ubox
37 54 0.003442401 ubox
37 55 0.004862274 ubox
37 56 0.013138211 ubox
37 57 0.456206972 ubox
37 58 0.601262402 ubox
37 64 0.005639669 ubox
37 65 0.005016587 ubox
37 66 0.007559284 ubox
37 67 0.008676283 ubox
37 68 0.093769886 ubox
38 43 0.030222917 ubox
38 44 0.035392224 ubox
38 54 0.005298666 ubox
38 55 0.013647542 ubox
38 56 0.157417560 ubox
38 57 0.775433018 ubox
38 65 0.004930630 ubox
38 66 0.005745823 ubox
38 67 0.127828157 ubox
39 43 0.035617068 ubox
39 56 0.889079677 ubox
39 66 0.131021719 ubox
40 55 0.874097359 ubox
40 57 0.107989882 ubox
40 65 0.128421617 ubox
40 67 0.081829103 ubox
41 56 0.118157213 ubox
41 66 0.089196930 ubox
42 49 0.007903936 ubox
42 53 0.850715006 ubox
42 55 0.116314581 ubox
42 61 0.024958378 ubox
42 64 0.136405095 ubox
42 65 0.076404083 ubox
43 48 0.006962893 ubox
43 51 0.064523467 ubox
43 52 0.892037560 ubox
43 60 0.026190999 ubox
43 63 0.146664178 ubox
44 50 0.064842953 ubox
44 51 0.875353401 ubox
44 52 0.092815018 ubox
44 62 0.137920804 ubox
45 50 0.689511499 ubox
45 51 0.100844228 ubox
45 62 0.036317154 ubox
46 53 0.039691315 ubox
46 61 0.040450196 ubox
47 52 0.041387228 ubox
47 62 0.008349925 ubox
48 61 0.011772452 ubox
49 62 0.003772216 ubox
50 56 0.024689879 ubox
50 57 0.042658459 ubox
50 58 0.041496589 ubox
50 61 0.004970356 ubox
50 65 0.003719127 ubox
50 66 0.005304501 ubox
50 67 0.015425094 ubox
50 68 0.010826190 ubox
51 55 0.021660872 ubox
51 56 0.041507275 ubox
51 57 0.045897301 ubox
51 58 0.021231550 ubox
51 64 0.004586177 ubox
51 65 0.009929007 ubox
51 66 0.017969360 ubox
51 67 0.017335925 ubox
51 68 0.012364062 ubox
52 56 0.041815515 ubox
52 57 0.021716922 ubox
52 64 0.010240903 ubox
52 65 0.017890640 ubox
52 66 0.017238750 ubox
52 67 0.016468786 ubox
56 63 0.120666122 ubox
57 62 0.110438368 ubox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
31 63 0.9500000 lbox
32 62 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
37 57 0.9500000 lbox
39 56 0.9500000 lbox
40 55 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
showpage
end
%%EOF
