%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IFITM2)
} def

/sequence { (\
GAGGAAACUGUUGAGAAAACGGAACUACUGGGGAAAGGGAGGGCUCACUGAGAACCAUCCCGGUAACCCGAUCACCGCUGGUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.005293138 ubox
1 73 0.017631541 ubox
1 83 0.024591527 ubox
2 9 0.067441255 ubox
2 11 0.005461381 ubox
2 26 0.390261748 ubox
2 29 0.494868967 ubox
2 72 0.016043665 ubox
2 79 0.008086711 ubox
2 82 0.018246555 ubox
3 8 0.070407492 ubox
3 9 0.006160703 ubox
3 25 0.402117138 ubox
3 26 0.261818354 ubox
3 28 0.507584976 ubox
3 29 0.083210487 ubox
3 68 0.025829645 ubox
3 69 0.049416332 ubox
3 73 0.006041433 ubox
3 76 0.028476883 ubox
3 78 0.008255206 ubox
3 79 0.006681612 ubox
3 83 0.012054488 ubox
3 86 0.264852058 ubox
4 8 0.006869268 ubox
4 25 0.272536524 ubox
4 28 0.089935303 ubox
4 67 0.025824677 ubox
4 68 0.049274767 ubox
4 72 0.003902963 ubox
4 73 0.011992613 ubox
4 75 0.028377290 ubox
4 78 0.007092107 ubox
4 82 0.006140903 ubox
4 83 0.015208126 ubox
4 85 0.265923122 ubox
5 12 0.003407908 ubox
5 72 0.011297015 ubox
5 82 0.011903888 ubox
7 82 0.021875732 ubox
8 15 0.025304773 ubox
8 22 0.987242051 ubox
8 81 0.022096254 ubox
9 14 0.025228747 ubox
9 21 0.991504103 ubox
9 80 0.021101775 ubox
9 84 0.005091995 ubox
10 20 0.995510005 ubox
10 25 0.030165760 ubox
10 28 0.007011086 ubox
10 76 0.003627877 ubox
10 78 0.014752887 ubox
10 79 0.011192627 ubox
10 83 0.005744125 ubox
10 85 0.022077506 ubox
11 17 0.004305170 ubox
11 18 0.050621340 ubox
11 19 0.993321439 ubox
11 22 0.011249038 ubox
11 23 0.003427284 ubox
11 24 0.030106114 ubox
11 27 0.006833959 ubox
11 77 0.013986784 ubox
11 84 0.016135606 ubox
12 16 0.006852427 ubox
12 17 0.070210247 ubox
12 18 0.984094610 ubox
12 21 0.014127388 ubox
12 22 0.003759646 ubox
12 23 0.029519214 ubox
12 74 0.007710798 ubox
12 77 0.010464620 ubox
12 84 0.037352966 ubox
13 20 0.015803417 ubox
13 73 0.008189952 ubox
13 76 0.011043989 ubox
13 83 0.044010722 ubox
14 26 0.006852832 ubox
14 29 0.005187253 ubox
14 72 0.008012346 ubox
14 79 0.008831324 ubox
14 82 0.043776830 ubox
15 25 0.007097968 ubox
15 28 0.005310918 ubox
15 73 0.015905476 ubox
15 78 0.009064487 ubox
15 83 0.020566901 ubox
16 72 0.015815632 ubox
16 82 0.020424552 ubox
20 30 0.026230420 ubox
20 70 0.020183394 ubox
20 77 0.052071742 ubox
20 80 0.014000499 ubox
21 29 0.030838112 ubox
21 68 0.018916948 ubox
21 69 0.029032445 ubox
21 76 0.052854844 ubox
21 79 0.014355855 ubox
21 86 0.018420578 ubox
22 28 0.031609501 ubox
22 67 0.019063539 ubox
22 68 0.028957331 ubox
22 75 0.052761018 ubox
22 78 0.014406346 ubox
22 83 0.004799486 ubox
22 85 0.018573928 ubox
23 82 0.003591672 ubox
24 82 0.023179222 ubox
25 31 0.005806766 ubox
25 32 0.009812495 ubox
25 33 0.005892938 ubox
25 81 0.024798049 ubox
26 30 0.006189140 ubox
26 31 0.009446406 ubox
26 32 0.005811344 ubox
26 65 0.095446071 ubox
26 80 0.024718120 ubox
27 64 0.100483972 ubox
27 79 0.023932533 ubox
27 82 0.013036865 ubox
28 63 0.100990316 ubox
28 81 0.014118468 ubox
29 62 0.100767620 ubox
29 70 0.123300140 ubox
29 77 0.019811004 ubox
29 80 0.013696253 ubox
29 84 0.006216978 ubox
30 61 0.100092692 ubox
30 68 0.054879770 ubox
30 69 0.944073235 ubox
30 73 0.003559581 ubox
30 76 0.020269218 ubox
30 79 0.012630641 ubox
30 86 0.009179638 ubox
31 60 0.099479900 ubox
31 61 0.013672954 ubox
31 67 0.055237742 ubox
31 68 0.944954702 ubox
31 69 0.302321392 ubox
31 75 0.019529600 ubox
31 76 0.003871808 ubox
31 78 0.012576805 ubox
31 85 0.007934596 ubox
31 86 0.006536646 ubox
32 59 0.098830643 ubox
32 60 0.017312386 ubox
32 67 0.944567615 ubox
32 68 0.302910046 ubox
32 69 0.012966842 ubox
32 73 0.006439980 ubox
32 75 0.003959974 ubox
32 76 0.012313114 ubox
32 85 0.006598236 ubox
32 86 0.004329614 ubox
33 58 0.093246224 ubox
33 59 0.020295534 ubox
33 67 0.302671007 ubox
33 68 0.012926542 ubox
33 72 0.004544131 ubox
33 73 0.014848440 ubox
33 75 0.012278499 ubox
33 85 0.004367133 ubox
34 58 0.022381414 ubox
34 72 0.014587225 ubox
36 49 0.003362332 ubox
37 48 0.003363978 ubox
37 56 0.093147023 ubox
37 60 0.017515253 ubox
37 61 0.994281392 ubox
37 69 0.005534402 ubox
37 73 0.005908787 ubox
38 55 0.093128249 ubox
38 56 0.026848434 ubox
38 58 0.003602003 ubox
38 59 0.017943364 ubox
38 60 0.994627768 ubox
38 61 0.010588149 ubox
38 68 0.005515592 ubox
38 72 0.005789859 ubox
39 46 0.004440675 ubox
39 55 0.026985333 ubox
39 58 0.019024200 ubox
39 59 0.994614014 ubox
39 60 0.009488450 ubox
39 67 0.005475110 ubox
40 45 0.004216507 ubox
40 49 0.013337517 ubox
40 58 0.971775867 ubox
41 48 0.014072442 ubox
41 49 0.044754785 ubox
41 56 0.778829908 ubox
41 61 0.003172318 ubox
41 69 0.006639870 ubox
42 48 0.045025700 ubox
42 49 0.022000254 ubox
42 55 0.779790774 ubox
42 56 0.610063531 ubox
42 60 0.003175532 ubox
42 68 0.006643491 ubox
43 48 0.022159044 ubox
43 55 0.611948740 ubox
43 59 0.003168257 ubox
43 67 0.006630766 ubox
44 52 0.808690531 ubox
45 51 0.811609000 ubox
45 53 0.553284011 ubox
46 50 0.804901243 ubox
46 52 0.562331360 ubox
47 64 0.006734499 ubox
48 63 0.006980362 ubox
49 62 0.006978186 ubox
50 56 0.003358791 ubox
50 61 0.006958623 ubox
52 59 0.006829049 ubox
53 58 0.006253720 ubox
55 63 0.003216545 ubox
56 62 0.003215634 ubox
61 70 0.007702199 ubox
62 68 0.008793081 ubox
62 69 0.024238158 ubox
62 73 0.005844492 ubox
62 86 0.028383162 ubox
63 67 0.008703769 ubox
63 68 0.024077946 ubox
63 72 0.005858832 ubox
63 85 0.028592633 ubox
64 71 0.005739404 ubox
64 84 0.027800090 ubox
66 82 0.028846978 ubox
67 81 0.029313796 ubox
68 80 0.029038406 ubox
68 81 0.008836515 ubox
69 77 0.026834609 ubox
69 80 0.009355938 ubox
70 76 0.028060022 ubox
70 79 0.009385074 ubox
70 83 0.985957645 ubox
71 82 0.988579174 ubox
72 81 0.988288819 ubox
73 80 0.987910989 ubox
74 79 0.841710947 ubox
74 82 0.090621608 ubox
75 81 0.098100951 ubox
76 80 0.097474463 ubox
80 86 0.015013142 ubox
81 85 0.014955480 ubox
8 22 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
30 69 0.9500000 lbox
31 68 0.9500000 lbox
32 67 0.9500000 lbox
37 61 0.9500000 lbox
38 60 0.9500000 lbox
39 59 0.9500000 lbox
40 58 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
46 50 0.9500000 lbox
70 83 0.9500000 lbox
71 82 0.9500000 lbox
72 81 0.9500000 lbox
73 80 0.9500000 lbox
74 79 0.9500000 lbox
showpage
end
%%EOF
