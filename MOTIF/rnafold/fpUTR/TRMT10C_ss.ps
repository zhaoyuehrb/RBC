%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAACUUCCGGCUGAGCCCCAGCGACCGCUCUGGUCGGCUGUGUAGACUGUUGGGUAGGCUGCGUGCUAGCUUCGGCGCGGAUCCCUGGGCGUCCGUACGUCGGAGUCCUUCGUCCUCCAGGGUCCCUGUUCUUUGCGCCAGCGGGAACCACUAUCUCUGCACUCCUGGGGUUUUGUUAC\
) } def
/len { sequence length } bind def

/coor [
[79.71309662 323.74749756]
[77.12261200 338.52212524]
[74.53213501 353.29672241]
[77.75223541 369.94207764]
[62.64881516 377.64422607]
[51.06663132 365.26321411]
[59.75751877 350.70626831]
[62.34799576 335.93164062]
[64.93846893 321.15701294]
[67.14345551 306.31997681]
[68.96144104 291.43054199]
[70.77943420 276.54110718]
[64.64170837 262.96990967]
[73.99454498 250.20922852]
[75.81253052 235.31980896]
[77.63052368 220.43038940]
[79.44851685 205.54095459]
[81.26650238 190.65153503]
[83.08449554 175.76211548]
[84.90248871 160.87269592]
[86.72047424 145.98326111]
[88.53846741 131.09384155]
[76.00350189 122.85523987]
[63.05672836 130.43026733]
[50.10995483 138.00529480]
[37.16318512 145.58033752]
[24.21641350 153.15536499]
[18.77923393 168.24896240]
[3.54283094 173.27206421]
[-9.80473137 164.37138367]
[-11.02434540 148.37475586]
[0.81957221 137.55342102]
[16.64138222 140.20858765]
[29.58815384 132.63356018]
[42.53492355 125.05853271]
[55.48169708 117.48349762]
[68.42846680 109.90847015]
[69.34022522 94.09876251]
[77.25575256 81.44126892]
[89.49521637 74.59859467]
[102.61189270 74.51296997]
[108.44222260 60.69243240]
[114.27255249 46.87189484]
[120.10288239 33.05135727]
[125.93321228 19.23081970]
[131.76354980 5.41028166]
[137.59387207 -8.41025543]
[127.48291016 -21.47693062]
[125.34552765 -37.76528168]
[131.67033386 -52.82524109]
[144.64700317 -62.59029770]
[160.68315125 -64.47547150]
[166.27273560 -78.39511871]
[171.86231995 -92.31476593]
[161.52609253 -105.20398712]
[159.10632324 -121.45278931]
[165.16880798 -136.62025452]
[177.97402954 -146.60905457]
[193.97505188 -148.77227783]
[199.32220459 -162.78683472]
[204.66935730 -176.80139160]
[210.01651001 -190.81596375]
[210.15509033 -199.97694397]
[215.57998657 -205.02601624]
[221.16957092 -218.94566345]
[226.75915527 -232.86531067]
[232.34873962 -246.78495789]
[229.31561279 -264.93496704]
[243.50634766 -275.23971558]
[248.85350037 -289.25427246]
[247.99664307 -293.57348633]
[248.52204895 -297.53601074]
[250.14387512 -300.74722290]
[252.47660828 -302.94772339]
[255.08853149 -304.03414917]
[261.39501953 -317.64398193]
[267.70150757 -331.25384521]
[274.00799561 -344.86370850]
[272.78979492 -360.63793945]
[285.16098022 -368.93270874]
[291.46746826 -382.54254150]
[297.77395630 -396.15240479]
[298.54769897 -405.28170776]
[304.30981445 -409.94229126]
[310.85156250 -423.44064331]
[317.39331055 -436.93899536]
[323.93502808 -450.43734741]
[330.47677612 -463.93569946]
[337.01852417 -477.43405151]
[343.20666504 -491.09814453]
[349.03698730 -504.91867065]
[354.86734009 -518.73919678]
[359.97042847 -532.84448242]
[364.33248901 -547.19622803]
[368.69454956 -561.54797363]
[373.05661011 -575.89971924]
[366.80050659 -590.67266846]
[374.57620239 -604.70544434]
[390.41885376 -607.23321533]
[402.17532349 -596.31695557]
[400.82708740 -580.33068848]
[387.40835571 -571.53765869]
[383.04629517 -557.18591309]
[378.68423462 -542.83416748]
[374.32217407 -528.48242188]
[388.10205078 -534.40820312]
[402.09478760 -529.00421143]
[408.31460571 -515.35455322]
[403.21179199 -501.24917603]
[389.69854736 -494.73822021]
[375.48706055 -499.53753662]
[368.68786621 -512.90887451]
[362.85754395 -499.08834839]
[357.02719116 -485.26782227]
[358.02767944 -481.86026001]
[357.41058350 -477.79605103]
[354.88421631 -473.84854126]
[350.51687622 -470.89233398]
[343.97512817 -457.39395142]
[337.43338013 -443.89559937]
[330.89166260 -430.39724731]
[324.34991455 -416.89889526]
[317.80816650 -403.40054321]
[311.38378906 -389.84594727]
[305.07733154 -376.23608398]
[298.77084351 -362.62622070]
[300.44012451 -347.82543945]
[287.61782837 -338.55722046]
[281.31137085 -324.94735718]
[275.00488281 -311.33752441]
[268.69839478 -297.72766113]
[262.86807251 -283.90710449]
[257.52090454 -269.89254761]
[262.17764282 -258.70996094]
[257.81643677 -246.97987366]
[246.26838684 -241.19538879]
[240.67880249 -227.27574158]
[235.08921814 -213.35609436]
[229.49963379 -199.43644714]
[224.03106689 -185.46881104]
[218.68391418 -171.45425415]
[213.33676147 -157.43968201]
[207.98960876 -143.42512512]
[217.29341125 -133.40766907]
[221.38758850 -120.29419708]
[219.41716003 -106.63160706]
[211.71086121 -95.09928894]
[199.72789001 -87.98371124]
[185.78196716 -86.72518158]
[180.19238281 -72.80553436]
[174.60279846 -58.88588715]
[183.73133850 -48.70846176]
[187.59730530 -35.52591705]
[185.39004517 -21.89958191]
[177.48474121 -10.50275040]
[165.38008118 -3.59622240]
[151.41441345 -2.57992578]
[145.58407593 11.24061203]
[139.75375366 25.06114960]
[133.92341614 38.88168716]
[128.09309387 52.70222473]
[122.26276398 66.52275848]
[116.43243408 80.34329987]
[127.98620605 97.36161804]
[123.66802216 119.39560699]
[103.42788696 132.91183472]
[101.60990143 147.80125427]
[99.79190826 162.69067383]
[97.97391510 177.58010864]
[96.15592957 192.46952820]
[94.33793640 207.35894775]
[92.51994324 222.24836731]
[90.70195770 237.13780212]
[88.88396454 252.02722168]
[94.89165497 266.66342163]
[85.66885376 278.35910034]
[83.85086823 293.24853516]
[82.03287506 308.13793945]
[84.10100555 312.98928833]
[84.08473206 317.67599487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[3 7]
[10 178]
[11 177]
[12 176]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[20 168]
[21 167]
[22 166]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[41 163]
[42 162]
[43 161]
[44 160]
[45 159]
[46 158]
[47 157]
[52 151]
[53 150]
[54 149]
[59 143]
[60 142]
[61 141]
[62 140]
[64 139]
[65 138]
[66 137]
[67 136]
[69 133]
[70 132]
[75 131]
[76 130]
[77 129]
[78 128]
[80 126]
[81 125]
[82 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 114]
[91 113]
[92 112]
[93 105]
[94 104]
[95 103]
[96 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
