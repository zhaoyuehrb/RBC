%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MCTP2)
} def

/sequence { (\
GAGUCAUUGCAGUUUUCAGUAGAGGUGUACUUCUGAGAAGUGGCUUCUUGGGUCUUCAUGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.026389759 ubox
1 17 0.012312839 ubox
1 32 0.013093638 ubox
1 46 0.147332540 ubox
1 47 0.085904139 ubox
1 49 0.034579251 ubox
1 54 0.433439262 ubox
1 56 0.016503612 ubox
1 57 0.029676098 ubox
2 7 0.032216200 ubox
2 8 0.009549437 ubox
2 16 0.012252444 ubox
2 31 0.016708659 ubox
2 34 0.003294236 ubox
2 45 0.179507258 ubox
2 46 0.061778392 ubox
2 48 0.037413275 ubox
2 49 0.003225413 ubox
2 53 0.433958845 ubox
2 55 0.021468332 ubox
2 56 0.027237060 ubox
3 7 0.008662628 ubox
3 10 0.024991749 ubox
3 15 0.011515456 ubox
3 30 0.017176748 ubox
3 33 0.003397757 ubox
3 44 0.191520978 ubox
3 45 0.014714457 ubox
3 47 0.037822591 ubox
3 54 0.023878355 ubox
3 55 0.023079698 ubox
3 61 0.072858383 ubox
3 64 0.213108467 ubox
4 9 0.023453379 ubox
4 23 0.004956710 ubox
4 25 0.005232842 ubox
4 29 0.015733687 ubox
4 43 0.191457693 ubox
4 51 0.430192962 ubox
4 52 0.017002416 ubox
4 60 0.037568282 ubox
4 63 0.202638566 ubox
5 22 0.005290912 ubox
5 24 0.010417124 ubox
5 27 0.010752990 ubox
5 42 0.188219953 ubox
5 50 0.435793837 ubox
5 51 0.017447709 ubox
5 60 0.079286759 ubox
6 13 0.004397458 ubox
6 20 0.011143726 ubox
6 26 0.010730464 ubox
6 41 0.186121412 ubox
6 49 0.430381146 ubox
6 59 0.079188758 ubox
7 12 0.004322017 ubox
7 19 0.012035212 ubox
7 22 0.012127804 ubox
7 25 0.009936768 ubox
7 40 0.184750686 ubox
7 43 0.006989302 ubox
7 58 0.058319683 ubox
7 63 0.613551427 ubox
8 18 0.012688211 ubox
8 21 0.022180299 ubox
8 24 0.006459656 ubox
8 29 0.025508909 ubox
8 39 0.115536242 ubox
8 42 0.006717566 ubox
8 58 0.077867265 ubox
8 62 0.826916010 ubox
9 17 0.012741003 ubox
9 20 0.027437632 ubox
9 28 0.032611208 ubox
9 41 0.027433861 ubox
9 44 0.378755126 ubox
9 57 0.095698454 ubox
9 61 0.854936687 ubox
9 64 0.020672619 ubox
10 19 0.027751095 ubox
10 27 0.032909575 ubox
10 35 0.011757701 ubox
10 40 0.029895668 ubox
10 42 0.362604783 ubox
10 43 0.280879678 ubox
10 60 0.854960600 ubox
10 63 0.020686107 ubox
11 26 0.032858677 ubox
11 34 0.011783378 ubox
11 41 0.448236819 ubox
11 45 0.028397091 ubox
11 55 0.133733257 ubox
11 56 0.026880290 ubox
11 59 0.841601993 ubox
12 30 0.003967920 ubox
12 33 0.011732784 ubox
12 41 0.032788965 ubox
12 44 0.029372324 ubox
12 53 0.014893953 ubox
12 54 0.165251725 ubox
12 55 0.042823902 ubox
12 59 0.021668276 ubox
12 61 0.017918828 ubox
12 64 0.005951823 ubox
13 23 0.003200324 ubox
13 24 0.031721024 ubox
13 29 0.003917271 ubox
13 36 0.007686193 ubox
13 38 0.015096005 ubox
13 39 0.482467448 ubox
13 40 0.019716976 ubox
13 43 0.028796066 ubox
13 52 0.015019183 ubox
13 58 0.035220728 ubox
13 60 0.017648896 ubox
13 63 0.005912012 ubox
14 22 0.003427058 ubox
14 23 0.031915013 ubox
14 25 0.009231796 ubox
14 35 0.007292590 ubox
14 37 0.013075822 ubox
14 38 0.500725518 ubox
14 39 0.019408453 ubox
14 40 0.041767852 ubox
14 42 0.019285984 ubox
14 51 0.009982168 ubox
14 52 0.034439807 ubox
14 62 0.005471461 ubox
15 21 0.003806879 ubox
15 22 0.031228292 ubox
15 23 0.003244720 ubox
15 24 0.013747190 ubox
15 36 0.010594070 ubox
15 37 0.501028315 ubox
15 38 0.016942470 ubox
15 39 0.055949429 ubox
15 40 0.003641295 ubox
15 50 0.005449620 ubox
15 51 0.028681098 ubox
15 52 0.569953701 ubox
16 21 0.023834761 ubox
16 23 0.015749999 ubox
16 35 0.006007062 ubox
16 36 0.501867829 ubox
16 37 0.013303244 ubox
16 38 0.060383355 ubox
16 39 0.003679123 ubox
16 50 0.012672327 ubox
16 51 0.602672445 ubox
16 52 0.254424813 ubox
17 22 0.016004614 ubox
17 24 0.003275711 ubox
17 27 0.005174900 ubox
17 35 0.502047252 ubox
17 37 0.060722178 ubox
17 50 0.611773929 ubox
17 51 0.260599705 ubox
18 26 0.005102398 ubox
18 31 0.033771894 ubox
18 34 0.496045043 ubox
18 48 0.007116053 ubox
18 49 0.585412999 ubox
18 55 0.031100193 ubox
19 30 0.042019486 ubox
19 33 0.487231385 ubox
19 47 0.006612063 ubox
19 48 0.227990991 ubox
19 53 0.006128566 ubox
19 54 0.032111657 ubox
19 61 0.013301984 ubox
19 64 0.004351535 ubox
20 27 0.007564178 ubox
20 29 0.047014327 ubox
20 35 0.067406046 ubox
20 50 0.193991168 ubox
20 52 0.018243479 ubox
20 58 0.003822446 ubox
20 60 0.013302077 ubox
20 63 0.004285415 ubox
21 26 0.007421140 ubox
21 28 0.046527421 ubox
21 31 0.187835780 ubox
21 32 0.089703757 ubox
21 34 0.099561886 ubox
21 46 0.004228373 ubox
21 48 0.787255172 ubox
21 49 0.139550094 ubox
21 55 0.003526132 ubox
21 59 0.012863866 ubox
22 30 0.199859533 ubox
22 31 0.067031779 ubox
22 32 0.389415604 ubox
22 33 0.123298588 ubox
22 46 0.009416765 ubox
22 47 0.858489534 ubox
22 48 0.018245726 ubox
22 49 0.042759199 ubox
22 54 0.003569066 ubox
22 56 0.004281617 ubox
22 57 0.014806869 ubox
23 31 0.429737504 ubox
23 32 0.134988614 ubox
23 45 0.010771799 ubox
23 46 0.858576768 ubox
23 48 0.043975692 ubox
23 49 0.004205198 ubox
23 53 0.003457957 ubox
23 55 0.004584797 ubox
23 56 0.014812612 ubox
24 30 0.434920866 ubox
24 31 0.135754091 ubox
24 32 0.003956379 ubox
24 33 0.003521139 ubox
24 44 0.011290975 ubox
24 45 0.858244239 ubox
24 47 0.044313071 ubox
24 48 0.004523232 ubox
24 54 0.004710138 ubox
24 55 0.014773891 ubox
24 65 0.008902355 ubox
25 30 0.135312994 ubox
25 31 0.003483529 ubox
25 32 0.004787596 ubox
25 44 0.858860104 ubox
25 45 0.003585974 ubox
25 46 0.037967065 ubox
25 47 0.004599917 ubox
25 53 0.004484694 ubox
25 54 0.014742591 ubox
25 59 0.014330861 ubox
25 61 0.003864958 ubox
25 64 0.009063406 ubox
26 42 0.011195896 ubox
26 43 0.816956476 ubox
26 58 0.017132774 ubox
26 60 0.003818317 ubox
26 62 0.007997143 ubox
26 63 0.005556769 ubox
27 44 0.042225544 ubox
27 57 0.017717333 ubox
27 59 0.003675084 ubox
27 61 0.009696069 ubox
28 42 0.692212750 ubox
28 43 0.030896126 ubox
28 58 0.003573240 ubox
28 60 0.009686796 ubox
29 41 0.855864446 ubox
29 53 0.011875058 ubox
29 59 0.008986097 ubox
30 37 0.004182455 ubox
30 40 0.860368328 ubox
30 43 0.003258218 ubox
30 52 0.012031825 ubox
31 36 0.003920810 ubox
31 38 0.008910916 ubox
31 39 0.859851601 ubox
31 42 0.003683433 ubox
31 51 0.009079044 ubox
32 37 0.011318895 ubox
32 38 0.858971761 ubox
32 39 0.003472532 ubox
32 50 0.006759873 ubox
32 52 0.034163393 ubox
33 37 0.851933005 ubox
33 40 0.007776887 ubox
33 50 0.004024191 ubox
33 51 0.045647075 ubox
33 63 0.004760889 ubox
34 39 0.007868875 ubox
34 50 0.045759674 ubox
34 62 0.004858548 ubox
35 49 0.047383235 ubox
35 61 0.004875512 ubox
36 48 0.048463468 ubox
37 47 0.048697789 ubox
37 57 0.017889128 ubox
38 46 0.048672760 ubox
38 56 0.017882747 ubox
39 45 0.048513704 ubox
39 55 0.017326892 ubox
39 56 0.004452754 ubox
40 44 0.047466586 ubox
40 54 0.015583514 ubox
40 55 0.006291081 ubox
41 58 0.003440705 ubox
42 54 0.052780738 ubox
42 55 0.003175114 ubox
42 57 0.003395297 ubox
42 65 0.083709989 ubox
43 53 0.056686332 ubox
43 54 0.004445445 ubox
43 61 0.018232888 ubox
43 64 0.152309059 ubox
44 51 0.012105648 ubox
44 52 0.057067037 ubox
44 60 0.018238220 ubox
44 63 0.152533395 ubox
45 50 0.012345876 ubox
45 51 0.055959066 ubox
45 62 0.147012338 ubox
46 50 0.041192877 ubox
46 62 0.004134310 ubox
47 51 0.004366416 ubox
47 63 0.028350364 ubox
48 62 0.021457198 ubox
48 63 0.106440645 ubox
49 58 0.156246138 ubox
49 60 0.005701653 ubox
49 62 0.138084835 ubox
50 56 0.003191217 ubox
50 57 0.159804866 ubox
50 59 0.006564083 ubox
50 61 0.144912565 ubox
50 65 0.037055676 ubox
51 55 0.003961450 ubox
51 56 0.125779027 ubox
51 57 0.024633164 ubox
51 64 0.037174214 ubox
51 65 0.098413762 ubox
52 56 0.016346252 ubox
52 59 0.140077964 ubox
52 61 0.032262165 ubox
52 64 0.099770019 ubox
53 58 0.131568539 ubox
53 60 0.031019762 ubox
53 63 0.065337914 ubox
54 63 0.075573034 ubox
55 62 0.072619105 ubox
55 63 0.010435160 ubox
56 62 0.012933326 ubox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
showpage
end
%%EOF
