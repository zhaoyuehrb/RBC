%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:35:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DUSP23)
} def

/sequence { (\
GAGUUACUUGGCUCGGAGCGGGCGAGGGGACGCGUGGGCGGAGCGGGGCUGGCCAGCCUCGGCCCCCAUGACCCGCUGUCCUGUGCCCUUUCCCAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.073377440 ubox
1 14 0.510438234 ubox
2 8 0.076713355 ubox
2 9 0.043691438 ubox
2 13 0.510816492 ubox
3 7 0.062609428 ubox
3 8 0.035970421 ubox
3 12 0.510930685 ubox
3 97 0.003429760 ubox
4 11 0.505290739 ubox
4 96 0.003178589 ubox
5 10 0.410093157 ubox
7 96 0.003480935 ubox
8 96 0.007170643 ubox
9 95 0.009612139 ubox
9 98 0.037127611 ubox
10 94 0.010201683 ubox
10 97 0.045277378 ubox
11 93 0.008460108 ubox
11 97 0.857398100 ubox
12 96 0.859299431 ubox
13 95 0.849218309 ubox
15 87 0.004463445 ubox
15 92 0.029583962 ubox
15 93 0.995979123 ubox
15 94 0.062149497 ubox
16 86 0.004458913 ubox
16 91 0.029897230 ubox
16 92 0.997922020 ubox
16 93 0.046412927 ubox
17 90 0.039496706 ubox
17 91 0.997260304 ubox
18 84 0.005287574 ubox
18 89 0.046281655 ubox
18 90 0.956436128 ubox
18 97 0.030197726 ubox
19 83 0.005492987 ubox
19 96 0.030215636 ubox
20 82 0.005274683 ubox
20 88 0.999130318 ubox
20 89 0.005273877 ubox
20 94 0.029756957 ubox
21 81 0.005280216 ubox
21 87 0.999493769 ubox
21 88 0.004571438 ubox
21 93 0.029866640 ubox
21 94 0.007237095 ubox
22 80 0.005272250 ubox
22 86 0.999499017 ubox
22 87 0.003526638 ubox
22 92 0.029841649 ubox
22 93 0.007258923 ubox
23 78 0.003210036 ubox
23 85 0.999223020 ubox
24 84 0.947359218 ubox
24 90 0.023194584 ubox
24 91 0.018388215 ubox
24 92 0.003242325 ubox
25 77 0.009377818 ubox
25 82 0.031289645 ubox
25 89 0.024027212 ubox
25 90 0.018801776 ubox
26 76 0.009525915 ubox
26 81 0.027749651 ubox
26 82 0.169100751 ubox
26 88 0.024017169 ubox
26 89 0.018923115 ubox
27 74 0.010709513 ubox
27 80 0.026092740 ubox
27 81 0.144926748 ubox
27 82 0.978188405 ubox
27 87 0.023957709 ubox
27 88 0.019026422 ubox
28 73 0.011288111 ubox
28 74 0.005737675 ubox
28 77 0.009202016 ubox
28 79 0.019452906 ubox
28 80 0.112138584 ubox
28 81 0.988431716 ubox
28 86 0.023514020 ubox
28 87 0.019066736 ubox
29 72 0.011291215 ubox
29 73 0.005730652 ubox
29 76 0.011822088 ubox
29 79 0.062801339 ubox
29 80 0.992811983 ubox
29 86 0.019104568 ubox
30 79 0.996977739 ubox
30 84 0.022727717 ubox
31 75 0.024047664 ubox
31 78 0.998486208 ubox
31 83 0.022769804 ubox
31 85 0.019556111 ubox
32 74 0.026607542 ubox
32 76 0.233203887 ubox
32 77 0.952213946 ubox
32 79 0.011788137 ubox
32 82 0.019489050 ubox
32 84 0.019591066 ubox
33 70 0.126507159 ubox
33 75 0.237121881 ubox
33 78 0.013558593 ubox
33 83 0.019600549 ubox
34 69 0.153579620 ubox
34 72 0.009233332 ubox
34 74 0.218610608 ubox
34 76 0.961763353 ubox
34 82 0.018279431 ubox
35 68 0.248295637 ubox
35 70 0.007449374 ubox
35 71 0.008924821 ubox
35 75 0.961758178 ubox
36 65 0.004862969 ubox
36 67 0.249455709 ubox
36 69 0.004839345 ubox
36 73 0.094126769 ubox
36 74 0.962559765 ubox
36 80 0.003709297 ubox
36 81 0.018920652 ubox
37 64 0.004921995 ubox
37 66 0.249444777 ubox
37 67 0.021884788 ubox
37 72 0.093110016 ubox
37 73 0.962656732 ubox
37 77 0.033704537 ubox
37 80 0.018867214 ubox
38 44 0.013751168 ubox
38 63 0.004974642 ubox
38 65 0.249189613 ubox
38 66 0.025008193 ubox
38 72 0.962345983 ubox
38 76 0.037642574 ubox
38 79 0.017914687 ubox
39 43 0.014116406 ubox
39 45 0.003283584 ubox
39 62 0.005005982 ubox
39 70 0.910768360 ubox
39 75 0.037711499 ubox
39 78 0.017855896 ubox
40 44 0.007596347 ubox
40 64 0.251103098 ubox
40 65 0.184061500 ubox
40 66 0.137680066 ubox
40 67 0.061495192 ubox
40 69 0.869281440 ubox
40 74 0.037727861 ubox
40 77 0.009910796 ubox
41 63 0.250978774 ubox
41 64 0.186429285 ubox
41 65 0.138531654 ubox
41 66 0.058183355 ubox
41 73 0.037702663 ubox
41 76 0.006144426 ubox
42 77 0.014027394 ubox
43 63 0.162524382 ubox
43 76 0.016991661 ubox
44 61 0.326909208 ubox
44 62 0.119263105 ubox
44 70 0.037477166 ubox
44 75 0.017479994 ubox
45 60 0.345276079 ubox
45 65 0.008013213 ubox
45 66 0.934471197 ubox
45 67 0.036834881 ubox
45 69 0.019212242 ubox
45 74 0.017397229 ubox
46 59 0.345795312 ubox
46 60 0.038829132 ubox
46 64 0.006581590 ubox
46 65 0.936201532 ubox
46 66 0.033596879 ubox
46 67 0.027071575 ubox
46 73 0.017344345 ubox
47 58 0.348177059 ubox
47 59 0.004829451 ubox
47 63 0.004703408 ubox
47 64 0.936346680 ubox
47 65 0.029733302 ubox
47 66 0.027146911 ubox
47 67 0.003929010 ubox
47 72 0.017173843 ubox
48 57 0.348197890 ubox
48 58 0.003439027 ubox
48 63 0.936487255 ubox
48 64 0.021040492 ubox
48 65 0.027035829 ubox
48 66 0.004391963 ubox
49 56 0.348126394 ubox
49 62 0.936618072 ubox
50 55 0.325668552 ubox
50 61 0.934547289 ubox
50 68 0.009290670 ubox
51 58 0.130725251 ubox
51 59 0.017476911 ubox
51 60 0.926558285 ubox
51 64 0.033976535 ubox
51 67 0.009067141 ubox
52 57 0.135961458 ubox
52 58 0.167449086 ubox
52 59 0.716840072 ubox
52 63 0.036995718 ubox
52 66 0.008869919 ubox
53 62 0.037095919 ubox
54 61 0.037112775 ubox
56 63 0.008984554 ubox
57 62 0.008999897 ubox
70 74 0.003177636 ubox
11 97 0.9500000 lbox
12 96 0.9500000 lbox
13 95 0.9500000 lbox
15 93 0.9500000 lbox
16 92 0.9500000 lbox
17 91 0.9500000 lbox
18 90 0.9500000 lbox
20 88 0.9500000 lbox
21 87 0.9500000 lbox
22 86 0.9500000 lbox
23 85 0.9500000 lbox
24 84 0.9500000 lbox
27 82 0.9500000 lbox
28 81 0.9500000 lbox
29 80 0.9500000 lbox
30 79 0.9500000 lbox
31 78 0.9500000 lbox
32 77 0.9500000 lbox
34 76 0.9500000 lbox
35 75 0.9500000 lbox
36 74 0.9500000 lbox
37 73 0.9500000 lbox
38 72 0.9500000 lbox
39 70 0.9500000 lbox
40 69 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
47 64 0.9500000 lbox
48 63 0.9500000 lbox
49 62 0.9500000 lbox
50 61 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
showpage
end
%%EOF
