%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EMC10)
} def

/sequence { (\
UGUUCCUCCCGGCGUGCUCCGCGGCUCUUGGCUCACAGCCGUCCCUUCGCUGGUGGGAAGAAGCCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.007413424 ubox
1 66 0.072994762 ubox
2 13 0.010548736 ubox
2 17 0.009511361 ubox
2 64 0.135610365 ubox
2 65 0.094038782 ubox
3 12 0.010069209 ubox
3 16 0.009458787 ubox
3 58 0.080929533 ubox
3 59 0.843619442 ubox
3 60 0.046004148 ubox
3 61 0.023869213 ubox
3 62 0.063785608 ubox
3 63 0.126356601 ubox
3 67 0.004781540 ubox
3 68 0.004949129 ubox
4 11 0.008263759 ubox
4 57 0.085275569 ubox
4 58 0.975073480 ubox
4 59 0.042105346 ubox
4 60 0.014435445 ubox
4 61 0.073865193 ubox
4 62 0.051105254 ubox
4 67 0.006775708 ubox
5 12 0.013297228 ubox
5 56 0.088318496 ubox
5 57 0.988864892 ubox
5 60 0.077369006 ubox
5 66 0.006833998 ubox
6 11 0.013524578 ubox
6 55 0.088541187 ubox
6 56 0.988736105 ubox
6 57 0.082349877 ubox
6 60 0.022535794 ubox
6 68 0.012726874 ubox
7 55 0.946369306 ubox
7 56 0.084683538 ubox
7 58 0.062299031 ubox
7 59 0.016204388 ubox
7 67 0.012941991 ubox
8 24 0.003732352 ubox
8 53 0.033875397 ubox
8 55 0.219536161 ubox
8 57 0.065119510 ubox
8 66 0.012494170 ubox
9 23 0.003797615 ubox
9 24 0.003840626 ubox
9 52 0.024189914 ubox
9 53 0.995106406 ubox
9 56 0.064607540 ubox
10 21 0.037045287 ubox
10 23 0.003887146 ubox
10 52 0.996220869 ubox
10 55 0.064080810 ubox
10 66 0.020464949 ubox
11 20 0.038410281 ubox
11 26 0.003420744 ubox
11 43 0.003504442 ubox
11 51 0.996110475 ubox
11 54 0.058054665 ubox
11 65 0.021130262 ubox
12 19 0.038026230 ubox
12 22 0.019546897 ubox
12 25 0.003837764 ubox
12 42 0.003602932 ubox
12 50 0.996978875 ubox
12 54 0.004395496 ubox
12 64 0.021132458 ubox
13 21 0.020417197 ubox
13 24 0.003451808 ubox
13 41 0.003659431 ubox
13 49 0.996959206 ubox
13 52 0.055817435 ubox
13 53 0.005920231 ubox
13 63 0.021118265 ubox
14 20 0.020375980 ubox
14 22 0.010000894 ubox
14 25 0.003980471 ubox
14 40 0.003764719 ubox
14 48 0.994032968 ubox
14 50 0.045787497 ubox
14 51 0.030504378 ubox
15 21 0.010256968 ubox
15 23 0.010182648 ubox
15 24 0.003275510 ubox
15 49 0.045811657 ubox
16 20 0.011505135 ubox
16 22 0.023713253 ubox
16 25 0.034397579 ubox
16 39 0.006160490 ubox
16 48 0.046549862 ubox
16 50 0.031502795 ubox
17 21 0.023598388 ubox
17 24 0.034441740 ubox
17 38 0.006261532 ubox
17 49 0.031449304 ubox
17 56 0.003740115 ubox
17 57 0.008318328 ubox
17 60 0.006998863 ubox
17 68 0.003453802 ubox
18 23 0.031250978 ubox
18 37 0.006071236 ubox
18 55 0.003538676 ubox
18 56 0.005951698 ubox
18 57 0.013100963 ubox
18 58 0.009621636 ubox
18 59 0.005410713 ubox
18 67 0.003557861 ubox
19 23 0.004215296 ubox
19 53 0.005999562 ubox
19 55 0.005423224 ubox
19 56 0.016115974 ubox
19 57 0.010086163 ubox
20 41 0.005273136 ubox
20 52 0.006065606 ubox
20 55 0.016322304 ubox
20 56 0.009753279 ubox
21 39 0.004677399 ubox
21 42 0.978087646 ubox
21 50 0.011997305 ubox
21 54 0.015908874 ubox
22 38 0.005312284 ubox
22 41 0.996960999 ubox
22 49 0.012078785 ubox
22 52 0.012756417 ubox
22 53 0.012404053 ubox
22 66 0.042591827 ubox
23 33 0.009299384 ubox
23 40 0.997304084 ubox
23 43 0.013694220 ubox
23 44 0.010434962 ubox
23 45 0.025712338 ubox
23 46 0.005740276 ubox
23 48 0.012156494 ubox
23 51 0.016235916 ubox
23 65 0.047588259 ubox
24 32 0.010116893 ubox
24 39 0.997315678 ubox
24 42 0.013864834 ubox
24 43 0.010427355 ubox
24 44 0.025727618 ubox
24 45 0.006350958 ubox
24 47 0.011076145 ubox
24 50 0.017064942 ubox
24 64 0.047611923 ubox
25 31 0.010249866 ubox
25 38 0.995887585 ubox
25 41 0.014282700 ubox
25 49 0.017041321 ubox
25 63 0.047608512 ubox
26 30 0.009642290 ubox
26 37 0.867668774 ubox
26 61 0.023546890 ubox
26 62 0.040942419 ubox
27 38 0.022804047 ubox
27 60 0.033299485 ubox
27 68 0.006277502 ubox
28 37 0.038206329 ubox
28 38 0.043901347 ubox
28 59 0.032775245 ubox
28 60 0.005774756 ubox
28 61 0.031991830 ubox
28 67 0.006476792 ubox
29 35 0.410199753 ubox
29 37 0.427083134 ubox
29 41 0.043856956 ubox
29 58 0.027480935 ubox
29 59 0.006498421 ubox
29 60 0.032502936 ubox
29 66 0.006497604 ubox
30 34 0.416444888 ubox
30 36 0.606870223 ubox
30 40 0.055117359 ubox
30 65 0.006538436 ubox
31 39 0.055168854 ubox
31 64 0.006538836 ubox
32 38 0.055178121 ubox
32 56 0.007155194 ubox
32 57 0.045314095 ubox
32 63 0.006498200 ubox
33 37 0.049786532 ubox
33 55 0.006420186 ubox
33 56 0.045441468 ubox
33 62 0.005749145 ubox
34 55 0.045685964 ubox
34 60 0.003245835 ubox
35 54 0.044910940 ubox
36 52 0.033033705 ubox
36 53 0.032772330 ubox
37 51 0.045101302 ubox
38 50 0.046010487 ubox
39 49 0.036954161 ubox
39 56 0.005088213 ubox
40 49 0.028229957 ubox
40 55 0.005090757 ubox
41 48 0.039208444 ubox
41 54 0.004530613 ubox
42 58 0.010128848 ubox
43 53 0.003544740 ubox
43 55 0.004528791 ubox
43 57 0.012856864 ubox
44 52 0.003465848 ubox
44 53 0.009031226 ubox
44 56 0.012867749 ubox
45 52 0.009106009 ubox
45 55 0.012861681 ubox
47 53 0.006172955 ubox
48 52 0.006992957 ubox
54 66 0.008595886 ubox
55 65 0.012104460 ubox
56 64 0.012104621 ubox
56 65 0.010240510 ubox
57 64 0.010420183 ubox
3 59 0.9500000 lbox
4 58 0.9500000 lbox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
9 53 0.9500000 lbox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
12 50 0.9500000 lbox
13 49 0.9500000 lbox
14 48 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
showpage
end
%%EOF
