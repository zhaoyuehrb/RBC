%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUUUUUUCCCUGGCUCUGCCCUGGGUUUCCCCUUGAAGGGAUUUCCCUCCGCCUCUGCAACAAGACCCUUUAUAAAGCACAGACUUUCUAUUUCACUCCGCGGUAUCUGCAUCGGGCCUCACUGGCUUCAGGAGCUGAAUACCCUCCCAGGCACACACAGGUGGGACACAAAUAAGGGUUUUGGAACCACUAUUUUCUCAUCACGACAGCAACUUAAA\
) } def
/len { sequence length } bind def

/coor [
[135.82705688 383.34664917]
[137.40957642 368.43035889]
[141.83496094 354.09802246]
[148.93754578 340.88616943]
[158.45146179 329.28936768]
[170.02052307 319.74179077]
[183.21166992 312.60079956]
[197.53106689 308.13372803]
[212.44268799 306.50781250]
[227.38830566 307.78393555]
[241.80844116 311.91427612]
[255.16242981 318.74374390]
[246.07316589 306.81121826]
[236.98390198 294.87869263]
[227.89463806 282.94616699]
[213.13810730 284.97348022]
[199.25573730 279.30462646]
[190.01371765 267.36932373]
[187.97329712 252.31166077]
[193.78166199 238.16209412]
[184.69239807 226.22956848]
[175.60313416 214.29702759]
[166.51387024 202.36450195]
[159.96559143 198.95098877]
[157.38185120 190.19819641]
[148.46234131 178.13824463]
[139.54284668 166.07827759]
[130.62335205 154.01832581]
[118.09949493 159.39846802]
[104.70349884 161.91644287]
[91.08086395 161.45094299]
[77.88800049 158.02438354]
[65.76062775 151.80187988]
[55.28309250 143.08325195]
[46.96027756 132.28865051]
[41.19321823 119.93818665]
[38.25980377 106.62699127]
[23.26130486 106.41472626]
[8.26280594 106.20246124]
[-6.73569155 105.99019623]
[-21.73418999 105.77793884]
[-36.73268890 105.56567383]
[-51.73118591 105.35340881]
[-39.01101685 113.30308533]
[-30.55993843 125.69579315]
[-27.80395699 140.44044495]
[-31.20810509 155.04905701]
[-40.19797897 167.05664062]
[-53.25666428 174.43708801]
[-68.18067169 175.94502258]
[-82.45178986 171.32600403]
[-93.66195679 161.35945129]
[-99.91960144 147.72706604]
[-100.16883087 132.72914124]
[-94.36759949 118.89636230]
[-83.49478149 108.56283569]
[-69.38689423 103.47245789]
[-84.09347534 100.52008057]
[-98.80004883 97.56771088]
[-111.81581879 106.53237915]
[-127.34297943 103.58570099]
[-136.16954041 90.47588348]
[-133.05885315 74.98074341]
[-119.85645294 66.29328156]
[-104.39507294 69.56761169]
[-95.84767914 82.86112976]
[-81.14109802 85.81349945]
[-66.43451691 88.76587677]
[-51.51892471 90.35491180]
[-36.52042389 90.56717682]
[-21.52192688 90.77944183]
[-6.52342892 90.99169922]
[8.47506905 91.20396423]
[23.47356796 91.41622925]
[38.47206497 91.62848663]
[42.88727951 75.62980652]
[51.38256836 61.37210464]
[40.85128021 50.69072342]
[30.31999016 40.00933838]
[19.78870201 29.32795334]
[3.98502374 29.46676826]
[-7.22930956 18.33059883]
[-7.20103168 2.52633548]
[4.05308056 -8.56963253]
[19.85616112 -8.37426376]
[30.83252525 2.99653268]
[30.47008705 18.79666519]
[41.00137711 29.47805023]
[51.53266525 40.15943527]
[62.06395340 50.84081650]
[69.81920624 45.73317337]
[78.24942780 41.83917618]
[87.16609192 39.24590683]
[96.36978149 38.01136780]
[105.65465546 38.16316605]
[108.81484222 23.49983978]
[111.97503662 8.83651066]
[115.13522339 -5.82681799]
[118.19158173 -20.51214027]
[121.14395905 -35.21871948]
[124.09632874 -49.92530060]
[127.04870605 -64.63188171]
[127.89733124 -79.60785675]
[126.62524414 -94.55381775]
[125.35314941 -109.49977875]
[124.08106232 -124.44573975]
[116.71324921 -139.71504211]
[129.34622192 -151.02188110]
[143.70832825 -142.01266479]
[139.02702332 -125.71782684]
[140.29911804 -110.77186584]
[141.57119751 -95.82590485]
[142.84329224 -80.87994385]
[150.26832581 -79.82213593]
[159.52549744 -91.62487030]
[165.11837769 -77.70651245]
[172.54339600 -76.64870453]
[177.93873596 -90.64479065]
[183.33406067 -104.64087677]
[188.72940063 -118.63695526]
[194.12472534 -132.63304138]
[188.96073914 -147.82228088]
[197.73744202 -161.25169373]
[213.72207642 -162.61938477]
[224.65263367 -150.87619019]
[222.14408875 -135.03047180]
[208.12081909 -127.23771667]
[202.72547913 -113.24163055]
[197.33015442 -99.24554443]
[191.93481445 -85.24945831]
[186.53948975 -71.25337219]
[170.86050415 -58.40044785]
[154.26736450 -55.77967834]
[141.75527954 -61.67950439]
[138.80290222 -46.97292328]
[135.85054016 -32.26634598]
[132.89816284 -17.55976486]
[134.66201782 -10.38892841]
[129.79855347 -2.66662884]
[126.63835907 11.99669933]
[123.47817230 26.66002846]
[120.31798553 41.32335663]
[136.39476013 49.68906403]
[149.37130737 62.34043121]
[158.14222717 78.19976807]
[161.96040344 95.91613007]
[160.50056458 113.98036957]
[153.88708496 130.85371399]
[142.68330383 145.09883118]
[151.60281372 157.15878296]
[160.52230835 169.21873474]
[169.44180298 181.27870178]
[178.44641113 193.27523804]
[187.53567505 205.20777893]
[196.62493896 217.14030457]
[205.71420288 229.07283020]
[220.89834595 227.23194885]
[234.87297058 233.19908142]
[243.92433167 245.27961731]
[245.70169067 260.16909790]
[239.82717896 273.85690308]
[248.91644287 285.78942871]
[258.00570679 297.72195435]
[267.09497070 309.65447998]
[278.49417114 319.40429688]
[291.69158936 326.53366089]
[304.88900757 333.66305542]
[318.08642578 340.79241943]
[331.28384399 347.92181396]
[336.48556519 347.77362061]
[340.79605103 349.46209717]
[343.66598511 352.34213257]
[344.88064575 355.64419556]
[357.76361084 363.32727051]
[370.64654541 371.01034546]
[383.52951050 378.69342041]
[396.41244507 386.37649536]
[411.55453491 382.72198486]
[424.51022339 390.69723511]
[427.90090942 405.15542603]
[440.78384399 412.83850098]
[453.66680908 420.52157593]
[466.54974365 428.20465088]
[482.94598389 427.89553833]
[491.17889404 442.07830811]
[482.77917480 456.16293335]
[466.38772583 455.66036987]
[458.86666870 441.08758545]
[445.98373413 433.40451050]
[433.10076904 425.72143555]
[420.21783447 418.03836060]
[405.88555908 421.92700195]
[392.71096802 414.31881714]
[388.72937012 399.25942993]
[375.84643555 391.57635498]
[362.96347046 383.89328003]
[350.08053589 376.21020508]
[337.19757080 368.52713013]
[324.15444946 361.11923218]
[310.95703125 353.98986816]
[297.75961304 346.86047363]
[284.56219482 339.73107910]
[271.36477661 332.60171509]
[280.18252563 344.73626709]
[286.49841309 358.34173584]
[290.07604980 372.90884399]
[290.78143311 387.89227295]
[288.58822632 402.73104858]
[283.57852173 416.86975098]
[275.93981934 429.77905273]
[265.95812988 440.97573853]
[254.00704956 450.04061890]
[240.53402710 456.63436890]
[226.04339600 460.51013184]
[211.07762146 461.52285767]
[196.19694519 459.63458252]
[181.95843506 454.91604614]
[168.89509583 447.54385376]
[157.49595642 437.79397583]
[148.18775940 426.03143311]
[141.31893921 412.69656372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 164]
[13 163]
[14 162]
[15 161]
[20 156]
[21 155]
[22 154]
[23 153]
[25 152]
[26 151]
[27 150]
[28 149]
[37 75]
[38 74]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[57 68]
[58 67]
[59 66]
[77 90]
[78 89]
[79 88]
[80 87]
[95 142]
[96 141]
[97 140]
[98 139]
[99 137]
[100 136]
[101 135]
[102 134]
[103 113]
[104 112]
[105 111]
[106 110]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[165 203]
[166 202]
[167 201]
[168 200]
[169 199]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[180 191]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
