%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:21:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAUCCAAGCGGGCUCGCGGCGGACACCAGGUGUCACCUGGCCGUGGCGUCCGGCGCGGCGUGGGCGUCCGGGGGCGCGGCGUGGAGGAGCGCGCGGGAUGGGGCGUGGGCGCGGGGAGCGCCGGGCGGAGCCUUAACAAGUGGUCGGGCGGGCGGACGAGGCGGGCGAUGGCCCCGCGGCCGGGACGCGCACAGGGACC\
) } def
/len { sequence length } bind def

/coor [
[-105.59600067 315.73468018]
[-107.67848969 330.58941650]
[-101.03176117 345.58117676]
[-110.90898895 358.67211914]
[-127.14933014 356.39538574]
[-133.04611206 341.09307861]
[-122.53322601 328.50692749]
[-120.45073700 313.65219116]
[-126.35047913 309.02154541]
[-128.47138977 323.87081909]
[-142.39175415 329.45861816]
[-154.19104004 320.19705200]
[-152.06980896 305.34777832]
[-138.14996338 299.76022339]
[-144.04971313 295.12954712]
[-157.98435974 300.68161011]
[-164.80354309 306.76904297]
[-172.17787170 306.20996094]
[-186.19676208 311.54571533]
[-200.21566772 316.88146973]
[-214.23457336 322.21725464]
[-224.37982178 334.35745239]
[-239.02694702 331.65353394]
[-253.04585266 336.98928833]
[-267.06475830 342.32507324]
[-281.08364868 347.66082764]
[-295.10253906 352.99658203]
[-305.24780273 365.13677979]
[-319.89492798 362.43289185]
[-333.91381836 367.76864624]
[-347.93273926 373.10440063]
[-361.90991211 378.54849243]
[-375.84457397 384.10055542]
[-389.77923584 389.65264893]
[-393.47494507 404.72317505]
[-405.34478760 414.71749878]
[-420.82458496 415.79254150]
[-433.96200562 407.53497314]
[-439.70547485 393.11996460]
[-435.84649658 378.09039307]
[-423.86892700 368.22546387]
[-408.37838745 367.31838989]
[-395.33129883 375.71798706]
[-381.39663696 370.16592407]
[-367.46200562 364.61383057]
[-362.40856934 359.21420288]
[-353.26849365 359.08551025]
[-339.24960327 353.74975586]
[-325.23068237 348.41397095]
[-316.08816528 336.65542603]
[-300.43832397 338.97769165]
[-286.41940308 333.64193726]
[-272.40051270 328.30615234]
[-258.38162231 322.97039795]
[-244.36271667 317.63464355]
[-235.22018433 305.87609863]
[-219.57034302 308.19836426]
[-205.55143738 302.86257935]
[-191.53253174 297.52682495]
[-177.51362610 292.19104004]
[-163.53643799 286.74697876]
[-149.60179138 281.19488525]
[-104.78985596 284.65701294]
[-93.50907135 274.77047729]
[-82.22828674 264.88391113]
[-77.75639343 250.67646790]
[-62.27825928 247.39958191]
[-50.99747467 237.51304626]
[-39.71668625 227.62649536]
[-28.43590355 217.73994446]
[-17.15511703 207.85339355]
[-5.87433243 197.96684265]
[-4.76518106 185.91720581]
[4.55772781 177.58836365]
[17.45734215 177.85461426]
[28.88977432 168.14381409]
[33.58099365 154.00727844]
[49.10798645 150.97030640]
[60.54041672 141.25952148]
[71.97284698 131.54872131]
[83.40528107 121.83792877]
[45.56875610 60.95304489]
[40.12467194 46.97584915]
[34.68059158 32.99865723]
[29.23650932 19.02146149]
[23.79242706 5.04426622]
[9.22416210 -1.08282387]
[3.33279419 -15.74799824]
[9.61356640 -30.25066757]
[24.34020805 -35.98666000]
[38.77566528 -29.55290604]
[44.35563278 -14.76644325]
[37.76962280 -0.39981601]
[43.21370316 13.57737827]
[48.65778351 27.55457306]
[54.10186768 41.53176880]
[59.54594803 55.50896072]
[67.02350616 56.08872604]
[68.18303680 41.13360977]
[69.34256744 26.17849541]
[65.82398224 11.59701443]
[78.60450745 3.74473858]
[90.02184296 13.47326946]
[84.29768372 27.33802414]
[83.13815308 42.29314041]
[81.97862244 57.24825668]
[89.45618439 57.82802200]
[96.98966217 44.85702896]
[104.52313995 31.88603401]
[104.14060974 13.47880173]
[119.68447113 5.33879995]
[127.01631927 -7.74722195]
[134.34817505 -20.83324432]
[141.68002319 -33.91926575]
[149.01187134 -47.00528717]
[146.06159973 -62.77473450]
[156.65979004 -74.81874084]
[172.67640686 -73.89817047]
[181.82487488 -60.71921158]
[177.08728027 -45.39163208]
[162.09788513 -39.67343903]
[154.76603699 -26.58741570]
[147.43418884 -13.50139332]
[140.10234070 -0.41537163]
[132.77049255 12.67065048]
[135.74871826 24.39898872]
[129.74220276 35.36293411]
[117.49413300 39.41951752]
[109.96065521 52.39051056]
[102.42717743 65.36150360]
[106.49085236 71.66519165]
[114.61820984 84.27257538]
[118.68189240 90.57626343]
[133.60606384 89.06991577]
[148.53022766 87.56356812]
[163.45440674 86.05721283]
[178.37857056 84.55086517]
[168.61683655 73.16190338]
[171.27844238 58.39992905]
[184.40306091 51.13739777]
[198.32418823 56.72329712]
[202.78866577 71.04351044]
[194.50802612 83.55112457]
[209.50398254 83.20294952]
[225.00270081 73.26502228]
[240.06135559 82.27103424]
[255.05012512 81.69083405]
[270.03890991 81.11063385]
[281.94720459 70.36020660]
[297.75289917 73.10978699]
[305.33117676 87.25012970]
[298.86865234 101.93397522]
[283.32281494 105.89713287]
[270.61911011 96.09941101]
[255.63032532 96.67961121]
[240.64155579 97.25981140]
[232.19425964 105.92394257]
[219.70733643 106.52635193]
[209.85215759 98.19890594]
[194.85620117 98.54708099]
[179.88493347 99.47503662]
[164.96075439 100.98138428]
[150.03659058 102.48773956]
[135.11241150 103.99408722]
[120.18824005 105.50043488]
[116.51187897 120.04293823]
[128.92721558 128.46073914]
[141.34254456 136.87855530]
[153.75788879 145.29635620]
[170.14442444 145.93936157]
[177.54032898 160.57604980]
[168.33734131 174.14944458]
[152.00270081 172.69639587]
[145.34007263 157.71168518]
[132.92474365 149.29388428]
[120.50940704 140.87608337]
[108.09407043 132.45826721]
[93.11607361 133.27035522]
[81.68363953 142.98115540]
[70.25121307 152.69194031]
[58.81877899 162.40274048]
[53.30983353 177.23385620]
[38.60056686 179.57624817]
[27.16813660 189.28703308]
[21.38201714 206.76541138]
[4.01221848 209.24761963]
[-7.26856709 219.13417053]
[-18.54935265 229.02072144]
[-29.83013725 238.90727234]
[-41.11092377 248.79382324]
[-52.39170837 258.68038940]
[-57.67047882 273.59497070]
[-72.34173584 276.16470337]
[-83.62252045 286.05123901]
[-94.90330505 295.93780518]
[-80.66782379 291.21011353]
[-66.23561096 295.29800415]
[-56.59402466 306.78887939]
[-55.07494354 321.71176147]
[-62.20331573 334.90972900]
[-75.51576996 341.82192993]
[-90.41189575 340.05969238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 8]
[2 7]
[15 62]
[16 61]
[18 60]
[19 59]
[20 58]
[21 57]
[23 55]
[24 54]
[25 53]
[26 52]
[27 51]
[29 49]
[30 48]
[31 47]
[32 45]
[33 44]
[34 43]
[63 195]
[64 194]
[65 193]
[67 191]
[68 190]
[69 189]
[70 188]
[71 187]
[72 186]
[75 184]
[76 183]
[78 181]
[79 180]
[80 179]
[81 178]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[107 130]
[108 129]
[109 128]
[111 125]
[112 124]
[113 123]
[114 122]
[115 121]
[133 165]
[134 164]
[135 163]
[136 162]
[137 161]
[143 160]
[144 159]
[146 156]
[147 155]
[148 154]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
