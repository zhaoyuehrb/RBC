%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCGAGAGUGAGUGGGACCGGAGGGGCGGGGCAUCAUAUGGGCGGGGCUGAGGCGAGGCCCCGGCGGCCAUCUUGAGCCCCGCCUUUUACUUCGGCCCGCUUCUUCUGGUCACUCCGCCACCGUAGAAUCGCCUACCAUUUGGUGCAAGCAAAAAGCAAUCAGCAAUUGGACAGGAAAAGA\
) } def
/len { sequence length } bind def

/coor [
[202.54360962 222.76554871]
[198.88650513 206.56359863]
[199.51132202 189.95542908]
[204.38146973 174.05427551]
[191.56517029 166.26052856]
[178.74888611 158.46676636]
[171.38256836 157.67584229]
[165.78192139 150.42895508]
[153.10055542 142.41751099]
[140.41918945 134.40608215]
[127.73783875 126.39463806]
[115.05647278 118.38320160]
[102.37511444 110.37176514]
[89.11623383 103.35734558]
[75.35806274 97.38133240]
[61.59989548 91.40531158]
[47.84172821 85.42929840]
[34.08355713 79.45327759]
[24.94137764 78.90069580]
[20.14288330 73.25599670]
[6.48874760 67.04595947]
[-7.16538763 60.83591843]
[-20.81952286 54.62587738]
[-34.47365952 48.41584015]
[-48.12779236 42.20579910]
[-61.98598862 36.46554947]
[-76.03208160 31.20177841]
[-90.07817078 25.93800735]
[-104.12426758 20.67423630]
[-118.17035675 15.41046524]
[-132.21644592 10.14669418]
[-146.26254272 4.88292360]
[-160.30863953 -0.38084745]
[-174.35472107 -5.64461851]
[-183.51321411 -5.72840691]
[-188.59442139 -11.12002277]
[-202.54858398 -16.62283516]
[-216.50276184 -22.12564850]
[-234.63517761 -18.98064232]
[-245.02601624 -33.11008835]
[-259.07211304 -38.37385941]
[-273.11819458 -43.63763046]
[-287.16427612 -48.90140152]
[-301.29818726 -53.92459488]
[-315.51580811 -58.70574570]
[-329.77374268 -63.36535263]
[-344.07089233 -67.90306854]
[-358.36807251 -72.44078827]
[-372.66525269 -76.97850800]
[-386.96240234 -81.51622772]
[-401.25958252 -86.05394745]
[-414.36630249 -77.52468872]
[-429.88278198 -79.46704102]
[-440.48263550 -90.96388245]
[-441.16091919 -106.58674622]
[-431.59738159 -118.95899963]
[-416.30761719 -122.23884583]
[-402.51101685 -114.87763977]
[-396.72186279 -100.35111237]
[-382.42468262 -95.81340027]
[-368.12753296 -91.27568054]
[-353.83035278 -86.73796082]
[-339.53317261 -82.20024109]
[-325.23602295 -77.66252136]
[-317.89187622 -78.63817596]
[-310.73464966 -72.92336273]
[-296.51705933 -68.14221191]
[-291.89785767 -69.43831635]
[-286.41595459 -67.82949829]
[-281.90051270 -62.94749069]
[-267.85443115 -57.68371964]
[-253.80833435 -52.41994858]
[-239.76223755 -47.15618134]
[-228.60952759 -51.87904358]
[-216.85493469 -47.59002686]
[-210.99995422 -36.07982635]
[-197.04577637 -30.57701302]
[-183.09159851 -25.07419968]
[-169.09095764 -19.69071007]
[-155.04486084 -14.42693996]
[-140.99876404 -9.16316891]
[-126.95268250 -3.89939809]
[-112.90658569 1.36437285]
[-98.86049652 6.62814379]
[-84.81439972 11.89191437]
[-70.76831055 17.15568542]
[-56.72221756 22.41945648]
[-54.10160065 21.36203575]
[-50.89945221 21.29162979]
[-47.49426651 22.43681526]
[-44.34081268 24.88333893]
[-41.91775513 28.55166435]
[-28.26362038 34.76170349]
[-14.60948372 40.97174454]
[-0.95534873 47.18178177]
[12.69878674 53.39182281]
[26.35292244 59.60186005]
[40.05957413 65.69511414]
[53.81774521 71.67112732]
[67.57591248 77.64714050]
[81.33408356 83.62316132]
[95.09225464 89.59917450]
[88.21331787 76.26950073]
[89.51158905 61.32579041]
[98.58620453 49.38211441]
[112.63525391 44.12624359]
[127.32090759 47.18099976]
[138.10877991 57.60318375]
[141.66795349 72.17480469]
[136.89950562 86.39669037]
[125.27574921 95.87763214]
[110.38655090 97.69040680]
[123.06790924 105.70184326]
[135.74926758 113.71327972]
[148.43063354 121.72471619]
[161.11199951 129.73614502]
[173.79335022 137.74758911]
[186.54264832 145.65046692]
[199.35893250 153.44422913]
[212.17521667 161.23799133]
[221.61978149 151.52310181]
[232.88621521 144.00865173]
[245.47189331 139.02656555]
[258.81600952 136.79586792]
[272.32458496 137.41302490]
[285.39691162 140.84780884]
[297.45227051 146.94477844]
[307.95571899 155.43026733]
[316.44183350 165.92469788]
[322.53530884 177.95957947]
[325.96765137 190.99835205]
[326.58880615 204.46037292]
[324.37396240 217.74678040]
[319.42437744 230.26704407]
[331.82482910 238.70675659]
[344.22528076 247.14648438]
[362.60519409 248.07034302]
[369.63064575 264.14062500]
[382.17337036 272.36740112]
[394.71609497 280.59417725]
[410.49908447 281.69311523]
[416.89788818 295.14321899]
[429.44061279 303.36999512]
[441.98333740 311.59677124]
[457.76632690 312.69570923]
[464.16513062 326.14578247]
[476.70785522 334.37255859]
[491.16043091 329.04067993]
[505.81011963 333.19274902]
[515.09600830 345.03488159]
[515.62188721 359.89630127]
[528.16467285 368.12307739]
[544.10150146 366.27996826]
[555.37689209 377.69244385]
[553.34136963 393.60583496]
[539.55639648 401.81274414]
[524.59655762 396.01754761]
[519.93786621 380.66580200]
[507.39514160 372.43902588]
[493.55456543 377.87747192]
[478.99331665 374.07827759]
[469.34851074 362.29559326]
[468.48107910 346.91528320]
[455.93832397 338.68850708]
[441.05249023 338.17800903]
[433.75656128 324.13949585]
[421.21383667 315.91271973]
[408.67111206 307.68594360]
[393.78524780 307.17544556]
[386.48931885 293.13690186]
[373.94659424 284.91012573]
[361.40386963 276.68334961]
[349.48504639 278.83517456]
[338.96301270 272.06369019]
[335.78555298 259.54693604]
[323.38510132 251.10720825]
[310.98464966 242.66749573]
[298.64743042 253.66435242]
[283.89154053 261.13049316]
[267.70343018 264.56079102]
[251.16688538 263.72024536]
[235.39036560 258.65982056]
[221.43278503 249.71360779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 120]
[5 119]
[6 118]
[8 117]
[9 116]
[10 115]
[11 114]
[12 113]
[13 112]
[14 102]
[15 101]
[16 100]
[17 99]
[18 98]
[20 97]
[21 96]
[22 95]
[23 94]
[24 93]
[25 92]
[26 87]
[27 86]
[28 85]
[29 84]
[30 83]
[31 82]
[32 81]
[33 80]
[34 79]
[36 78]
[37 77]
[38 76]
[40 73]
[41 72]
[42 71]
[43 70]
[44 67]
[45 66]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[134 177]
[135 176]
[136 175]
[138 172]
[139 171]
[140 170]
[142 168]
[143 167]
[144 166]
[146 164]
[147 163]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
