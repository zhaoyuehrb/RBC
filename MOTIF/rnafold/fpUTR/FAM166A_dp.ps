%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM166A)
} def

/sequence { (\
GGUGACAGGACUCCCCUCAGGGAAGGGAGCUGGAUGCCGGGAGGGACUGGAGCCAGCAAGGCCAGAGUGAAAGCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.064015990 ubox
1 13 0.017304050 ubox
1 14 0.006673899 ubox
1 15 0.022847709 ubox
1 16 0.010150365 ubox
1 38 0.176503726 ubox
1 54 0.862654307 ubox
1 63 0.246937652 ubox
2 11 0.099009183 ubox
2 12 0.003229180 ubox
2 13 0.007007263 ubox
2 14 0.022939124 ubox
2 15 0.010269582 ubox
2 35 0.013874617 ubox
2 37 0.176719688 ubox
2 53 0.863316082 ubox
2 62 0.246902062 ubox
2 74 0.182241318 ubox
3 10 0.098817355 ubox
3 19 0.008002605 ubox
3 34 0.014079718 ubox
3 36 0.174993637 ubox
3 52 0.863108726 ubox
3 58 0.005985437 ubox
3 61 0.239336398 ubox
3 64 0.015070072 ubox
3 67 0.004386396 ubox
3 69 0.005507258 ubox
3 73 0.181598843 ubox
3 75 0.208152031 ubox
4 13 0.056259811 ubox
4 18 0.009416583 ubox
4 35 0.120719636 ubox
4 57 0.009199559 ubox
4 63 0.016610462 ubox
4 68 0.006069752 ubox
4 74 0.230803546 ubox
5 12 0.052841889 ubox
5 17 0.008719319 ubox
5 68 0.046951693 ubox
6 32 0.153374450 ubox
6 36 0.008729319 ubox
6 49 0.863629991 ubox
6 67 0.048499014 ubox
6 69 0.043151654 ubox
7 17 0.009061456 ubox
7 31 0.151353177 ubox
7 35 0.008721039 ubox
7 48 0.863400516 ubox
7 68 0.036164983 ubox
8 14 0.012441886 ubox
8 15 0.018645888 ubox
8 16 0.011153405 ubox
8 30 0.143446246 ubox
8 31 0.108294196 ubox
8 47 0.863162106 ubox
8 48 0.008499550 ubox
8 54 0.025194191 ubox
8 63 0.111690713 ubox
9 13 0.014307151 ubox
9 14 0.018727982 ubox
9 15 0.011186079 ubox
9 30 0.119953622 ubox
9 47 0.015919058 ubox
9 53 0.025234234 ubox
9 62 0.111039612 ubox
10 68 0.331880973 ubox
11 22 0.003527740 ubox
11 25 0.103069663 ubox
11 26 0.027206590 ubox
11 27 0.042834704 ubox
11 29 0.213988126 ubox
11 43 0.689296434 ubox
11 44 0.478430698 ubox
11 45 0.097094954 ubox
11 52 0.025139217 ubox
11 60 0.062363744 ubox
11 61 0.066038248 ubox
11 65 0.009085193 ubox
11 67 0.336258424 ubox
11 73 0.006459017 ubox
12 21 0.003283688 ubox
12 22 0.004654650 ubox
12 23 0.166020870 ubox
12 24 0.078615710 ubox
12 25 0.018728266 ubox
12 26 0.040760517 ubox
12 27 0.012434671 ubox
12 28 0.277168097 ubox
12 41 0.004361910 ubox
12 42 0.754347874 ubox
12 43 0.348538137 ubox
12 44 0.096277707 ubox
12 45 0.013680614 ubox
12 46 0.145221467 ubox
12 51 0.025135919 ubox
12 59 0.054470047 ubox
12 60 0.055969852 ubox
12 61 0.006449256 ubox
12 64 0.007167132 ubox
12 66 0.335448519 ubox
12 70 0.009664009 ubox
12 72 0.005665624 ubox
13 20 0.003279740 ubox
13 21 0.006593663 ubox
13 22 0.192205464 ubox
13 25 0.038723829 ubox
13 26 0.017764218 ubox
13 27 0.286353901 ubox
13 40 0.008513708 ubox
13 41 0.768542938 ubox
13 43 0.118263538 ubox
13 44 0.020124203 ubox
13 45 0.143744220 ubox
13 50 0.025098018 ubox
13 60 0.014364160 ubox
13 61 0.005204040 ubox
13 65 0.333986405 ubox
13 69 0.010484011 ubox
14 20 0.006698659 ubox
14 21 0.192872562 ubox
14 22 0.136554347 ubox
14 25 0.017606177 ubox
14 26 0.284768677 ubox
14 27 0.397516626 ubox
14 39 0.008100666 ubox
14 40 0.752936100 ubox
14 41 0.322279658 ubox
14 43 0.020233060 ubox
14 44 0.140870033 ubox
14 45 0.065227274 ubox
14 49 0.017780601 ubox
14 60 0.004610026 ubox
14 61 0.014551774 ubox
15 20 0.192199940 ubox
15 21 0.137233480 ubox
15 22 0.055815320 ubox
15 25 0.281243775 ubox
15 26 0.401193809 ubox
15 27 0.028908669 ubox
15 33 0.004700829 ubox
15 39 0.749943532 ubox
15 40 0.323703909 ubox
15 41 0.033294354 ubox
15 43 0.137869089 ubox
15 44 0.073775357 ubox
15 60 0.014376116 ubox
15 61 0.012901012 ubox
16 20 0.136571062 ubox
16 21 0.067416991 ubox
16 22 0.047828603 ubox
16 25 0.404066859 ubox
16 26 0.036052586 ubox
16 27 0.289624853 ubox
16 29 0.152636345 ubox
16 32 0.006313150 ubox
16 33 0.121704947 ubox
16 39 0.324463855 ubox
16 40 0.033410867 ubox
16 41 0.131029168 ubox
16 43 0.079266065 ubox
16 60 0.012749593 ubox
16 67 0.031745563 ubox
17 21 0.043545306 ubox
17 23 0.274709522 ubox
17 24 0.375193407 ubox
17 25 0.030516399 ubox
17 26 0.290686056 ubox
17 27 0.016025729 ubox
17 28 0.160357076 ubox
17 32 0.026687050 ubox
17 33 0.321171504 ubox
17 34 0.174615886 ubox
17 39 0.028555157 ubox
17 40 0.130455261 ubox
17 41 0.028036062 ubox
17 42 0.084272732 ubox
17 59 0.011204097 ubox
17 66 0.032286893 ubox
17 70 0.011227834 ubox
18 22 0.293074894 ubox
18 25 0.290831232 ubox
18 26 0.020663860 ubox
18 27 0.161056356 ubox
18 32 0.362034988 ubox
18 33 0.169755745 ubox
18 36 0.555115145 ubox
18 39 0.128831799 ubox
18 40 0.031101537 ubox
18 41 0.084053466 ubox
18 65 0.032316417 ubox
18 69 0.012076475 ubox
19 31 0.365347636 ubox
19 35 0.552221890 ubox
19 68 0.011965233 ubox
20 30 0.363934248 ubox
20 31 0.196406116 ubox
20 38 0.263748737 ubox
20 63 0.020529585 ubox
21 30 0.209256690 ubox
21 31 0.067864925 ubox
21 37 0.263734937 ubox
21 38 0.067690413 ubox
21 62 0.020508040 ubox
21 63 0.026129420 ubox
22 30 0.070395014 ubox
22 37 0.067314947 ubox
22 62 0.026165779 ubox
24 31 0.598068170 ubox
25 30 0.601155949 ubox
25 31 0.092795555 ubox
25 38 0.055825551 ubox
25 63 0.156383833 ubox
26 30 0.091571430 ubox
26 37 0.055288878 ubox
26 38 0.035972984 ubox
26 62 0.156540862 ubox
26 63 0.044649425 ubox
27 37 0.033867306 ubox
27 62 0.044667342 ubox
29 37 0.285769469 ubox
29 57 0.459881867 ubox
29 74 0.004733206 ubox
30 36 0.287475353 ubox
30 40 0.212728395 ubox
30 41 0.011498988 ubox
30 43 0.003538193 ubox
30 50 0.004770327 ubox
30 56 0.465232590 ubox
30 65 0.026710625 ubox
30 73 0.004829730 ubox
31 39 0.214548029 ubox
31 40 0.009519471 ubox
31 42 0.003431416 ubox
31 49 0.004770875 ubox
31 55 0.465237058 ubox
31 64 0.026924990 ubox
31 72 0.004687900 ubox
32 38 0.249714621 ubox
32 48 0.004879856 ubox
32 54 0.465376637 ubox
32 63 0.027010237 ubox
33 37 0.245826266 ubox
33 47 0.004956797 ubox
33 53 0.462035052 ubox
33 62 0.024003283 ubox
35 58 0.019876563 ubox
35 75 0.008604556 ubox
36 53 0.003341501 ubox
36 57 0.020774247 ubox
36 62 0.006035497 ubox
36 63 0.003301431 ubox
36 74 0.009602792 ubox
37 44 0.035838091 ubox
37 45 0.034115204 ubox
37 50 0.465618290 ubox
37 52 0.003267190 ubox
37 56 0.020511425 ubox
37 61 0.006712057 ubox
37 73 0.008625507 ubox
38 43 0.036565078 ubox
38 44 0.034268241 ubox
38 49 0.469027135 ubox
38 60 0.006711811 ubox
39 48 0.468975251 ubox
39 54 0.019355529 ubox
39 63 0.012567255 ubox
40 47 0.469084779 ubox
40 48 0.007293338 ubox
40 53 0.019353442 ubox
40 54 0.006428363 ubox
40 62 0.012529529 ubox
40 63 0.016959809 ubox
41 47 0.009302956 ubox
41 53 0.006430352 ubox
41 62 0.016984036 ubox
42 48 0.003797862 ubox
43 47 0.003963269 ubox
43 54 0.010226563 ubox
43 63 0.009128221 ubox
44 53 0.010240303 ubox
44 54 0.005542430 ubox
44 62 0.009095073 ubox
44 63 0.006801064 ubox
45 53 0.005539214 ubox
45 62 0.006683736 ubox
46 68 0.131220987 ubox
47 56 0.022740324 ubox
47 60 0.006748290 ubox
47 65 0.111728234 ubox
47 67 0.134778610 ubox
48 55 0.022833123 ubox
48 58 0.005616070 ubox
48 59 0.005932008 ubox
48 64 0.112728158 ubox
48 66 0.133889349 ubox
49 54 0.022779250 ubox
49 57 0.006699098 ubox
49 63 0.112411283 ubox
50 62 0.077682880 ubox
52 62 0.172440552 ubox
52 74 0.003952345 ubox
53 61 0.188558936 ubox
53 73 0.003951110 ubox
54 60 0.188622561 ubox
54 69 0.004173810 ubox
55 68 0.007739952 ubox
56 62 0.215196848 ubox
56 68 0.057848231 ubox
56 74 0.626053947 ubox
57 61 0.214145592 ubox
57 67 0.060935007 ubox
57 69 0.050611531 ubox
57 73 0.625983204 ubox
58 68 0.046374924 ubox
61 68 0.568199424 ubox
61 74 0.249810781 ubox
62 67 0.569024159 ubox
62 73 0.249720343 ubox
63 69 0.141388786 ubox
64 68 0.114915475 ubox
67 74 0.302895792 ubox
68 73 0.298271596 ubox
68 75 0.113937083 ubox
69 74 0.128323909 ubox
1 54 0.9500000 lbox
2 53 0.9500000 lbox
3 52 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
11 43 0.9500000 lbox
12 42 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
15 39 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
56 74 0.9500000 lbox
57 73 0.9500000 lbox
61 68 0.9500000 lbox
62 67 0.9500000 lbox
showpage
end
%%EOF
