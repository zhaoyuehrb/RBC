%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUUCCCUGUCAGGCCCCCCCAACCCCCCGCCGGUCGGGGCCAGGCCAGGCCAGGCCAGCUCCUCUGGCAGCAGAGCCUGGGCAGGUGACGGGCGGGCGCGGGCGUCGCAGCUGAGGGAGUAAGGAGGCUCCCAGGAACCGGAGCUGGAAACCCGGCCGAGGUCCAGCCAGAGCCCAAGAGCCAGAGUGACCCCUCGACCUGUCAGCC\
) } def
/len { sequence length } bind def

/coor [
[-198.23425293 222.60363770]
[-188.27963257 211.38137817]
[-203.15966797 213.27467346]
[-218.03970337 215.16796875]
[-230.75291443 224.58523560]
[-244.35499573 218.51623535]
[-259.23501587 220.40953064]
[-274.10055542 222.41354370]
[-288.95074463 224.52816772]
[-303.80096436 226.64279175]
[-318.65115356 228.75741577]
[-333.50134277 230.87203979]
[-330.04129028 242.45033264]
[-333.80941772 256.61712646]
[-345.86929321 269.29205322]
[-358.09576416 277.98187256]
[-370.32226562 286.67169189]
[-382.54873657 295.36151123]
[-390.10357666 314.05075073]
[-409.41473389 315.03378296]
[-421.37707520 324.08377075]
[-433.33941650 333.13378906]
[-445.30175781 342.18377686]
[-451.63906860 356.68029785]
[-466.45709229 358.18865967]
[-478.41943359 367.23867798]
[-490.38177490 376.28866577]
[-490.98971558 391.91442871]
[-501.53768921 403.45886230]
[-517.04528809 405.47106934]
[-530.19024658 397.00091553]
[-534.76599121 382.04776001]
[-528.61193848 367.67202759]
[-514.63385010 360.66149902]
[-499.43176270 364.32632446]
[-487.46945190 355.27633667]
[-475.50711060 346.22631836]
[-470.02542114 332.37713623]
[-454.35174561 330.22143555]
[-442.38940430 321.17144775]
[-430.42709351 312.12142944]
[-418.46475220 303.07144165]
[-417.97799683 292.86477661]
[-411.82431030 284.43383789]
[-401.84057617 280.70480347]
[-391.23858643 283.13504028]
[-379.01208496 274.44522095]
[-366.78561401 265.75537109]
[-354.55911255 257.06555176]
[-355.17260742 249.59069824]
[-368.73306274 243.17869568]
[-356.39956665 234.64096069]
[-357.01306152 227.16609192]
[-370.49279785 220.58605957]
[-383.97253418 214.00604248]
[-397.45227051 207.42601013]
[-410.93200684 200.84597778]
[-424.41174316 194.26596069]
[-440.84698486 200.25775146]
[-456.22787476 192.65881348]
[-461.25292969 176.60926819]
[-474.82913208 170.23066711]
[-488.40533447 163.85206604]
[-502.02865601 157.57470703]
[-515.69830322 151.39894104]
[-532.62207031 150.38778687]
[-536.33544922 133.84548950]
[-521.46752930 125.69791412]
[-509.52255249 137.72926331]
[-495.85290527 143.90502930]
[-488.46307373 143.79423523]
[-482.02673340 150.27586365]
[-468.45053101 156.65446472]
[-454.87432861 163.03306580]
[-443.48437500 157.00827026]
[-430.51031494 158.66851807]
[-420.71728516 167.62992859]
[-417.83169556 180.78622437]
[-404.35198975 187.36625671]
[-390.87225342 193.94627380]
[-377.39251709 200.52630615]
[-363.91278076 207.10633850]
[-350.43304443 213.68635559]
[-335.61596680 216.02185059]
[-320.76577759 213.90722656]
[-305.91558838 211.79260254]
[-291.06536865 209.67797852]
[-276.21517944 207.56335449]
[-270.03631592 203.50828552]
[-261.12832642 205.52949524]
[-246.24829102 203.63619995]
[-234.59939575 194.35435486]
[-219.93299866 200.28793335]
[-205.05296326 198.39463806]
[-190.17292786 196.50134277]
[-175.43196106 193.72573853]
[-160.88233948 190.07763672]
[-146.33271790 186.42955017]
[-131.78311157 182.78146362]
[-117.26104736 179.02516174]
[-102.76734924 175.16085815]
[-92.46295929 164.40591431]
[-77.13530731 168.32685852]
[-62.64161682 164.46253967]
[-48.14792252 160.59823608]
[-42.49471283 155.83767700]
[-33.40964508 156.78601074]
[-18.86002541 153.13792419]
[-4.31040430 149.48983765]
[10.23921585 145.84175110]
[24.78883743 142.19366455]
[31.27219391 131.98129272]
[43.36386490 128.82292175]
[54.71952438 134.93945312]
[69.32184601 131.50839233]
[83.92417145 128.07733154]
[60.82077789 95.54180908]
[86.54924011 55.47713470]
[95.32984161 43.31568146]
[104.11044312 31.15422440]
[112.89104462 18.99276924]
[121.67165375 6.83131266]
[130.45225525 -5.33014297]
[127.68633270 -20.89051628]
[136.80175781 -33.80115509]
[152.39050293 -36.40240860]
[165.20404053 -27.15099525]
[167.64033508 -11.53561783]
[158.25396729 1.17939901]
[142.61370850 3.45046020]
[133.83309937 15.61191559]
[125.05250549 27.77337265]
[116.27189636 39.93482590]
[107.49129486 52.09628296]
[98.71069336 64.25773621]
[102.73127747 70.58900452]
[114.79303741 89.58278656]
[129.53399658 86.80717468]
[144.27496338 84.03157043]
[152.12934875 79.36824799]
[159.25596619 81.32608032]
[174.03662109 78.77024841]
[180.95309448 65.00549316]
[194.49026489 58.03422165]
[209.36073303 60.34354019]
[219.89387512 70.84072876]
[234.67453003 68.28489685]
[249.45518494 65.72906494]
[264.23583984 63.17323303]
[279.01647949 60.61740112]
[291.26049805 49.70792770]
[306.74328613 55.11299896]
[309.53753662 71.27233887]
[296.76870728 81.56260681]
[281.57232666 75.39805603]
[266.79165649 77.95388794]
[252.01101685 80.50971985]
[237.23036194 83.06555176]
[222.44970703 85.62138367]
[216.05307007 99.04602814]
[202.82150269 106.21467590]
[187.72946167 104.19389343]
[176.59245300 93.55090332]
[161.81179810 96.10673523]
[147.05056763 98.77252960]
[132.30961609 101.54814148]
[117.56864929 104.32375336]
[115.90751648 111.63748169]
[130.53497314 114.95973969]
[145.47317505 113.59944916]
[151.38287354 127.38623810]
[140.09692383 137.26690674]
[127.21272278 129.58720398]
[112.58525848 126.26493835]
[110.92413330 133.57867432]
[123.01988220 142.44956970]
[138.60041809 139.79956055]
[151.44284058 149.01084900]
[153.92796326 164.61853027]
[144.58142090 177.36283875]
[128.94833374 179.68281555]
[116.30355072 170.20205688]
[114.14898682 154.54531860]
[102.05323792 145.67442322]
[87.35523224 142.67965698]
[72.75290680 146.11071777]
[58.15058517 149.54177856]
[45.02851105 162.46046448]
[28.43692398 156.74328613]
[13.88730335 160.39137268]
[-0.66231674 164.03945923]
[-15.21193695 167.68754578]
[-29.76155853 171.33563232]
[-44.28361511 175.09193420]
[-58.77730942 178.95623779]
[-73.27100372 182.82054138]
[-84.61208344 193.85188293]
[-98.90304565 189.65455627]
[-113.39673615 193.51885986]
[-120.88252258 198.75344849]
[-128.13500977 197.33108521]
[-142.68463135 200.97917175]
[-157.23425293 204.62725830]
[-171.78387451 208.27534485]
[-158.43035889 215.10787964]
[-151.54055786 228.43194580]
[-153.68417358 243.27798462]
[-164.06172180 254.10879517]
[-178.80262756 256.88476562]
[-192.40887451 250.57051086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 95]
[3 94]
[4 93]
[6 91]
[7 90]
[8 88]
[9 87]
[10 86]
[11 85]
[12 84]
[15 49]
[16 48]
[17 47]
[18 46]
[20 42]
[21 41]
[22 40]
[23 39]
[25 37]
[26 36]
[27 35]
[53 83]
[54 82]
[55 81]
[56 80]
[57 79]
[58 78]
[61 74]
[62 73]
[63 72]
[64 70]
[65 69]
[96 204]
[97 203]
[98 202]
[99 201]
[100 199]
[101 198]
[103 196]
[104 195]
[105 194]
[107 193]
[108 192]
[109 191]
[110 190]
[111 189]
[114 187]
[115 186]
[116 185]
[118 135]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
[137 167]
[138 166]
[139 165]
[141 164]
[142 163]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
[175 184]
[176 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
