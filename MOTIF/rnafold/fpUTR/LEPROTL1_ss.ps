%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCACUUCCGGGUGUUGUCUGGCCGCCGUAGCGCGUCUUGGGUCUCCCGGCUGCCGCUGCUGCCGCCGCCGCCUCGGGUCGUGGAGCCAGGAGCGACGUCACCGCC\
) } def
/len { sequence length } bind def

/coor [
[218.30856323 289.84686279]
[210.43391418 277.08010864]
[194.59019470 269.69009399]
[194.01504517 251.35717773]
[185.77241516 238.82485962]
[177.52976990 226.29254150]
[161.47782898 219.36647034]
[160.36970520 201.05802917]
[151.76606750 188.77075195]
[143.16241455 176.48347473]
[134.55877686 164.19619751]
[125.95512390 151.90892029]
[117.35147858 139.62162781]
[110.83622742 135.89007568]
[108.68241119 126.84951019]
[100.43977356 114.31719208]
[88.03251648 107.87113953]
[87.02790833 93.92544556]
[78.78527069 81.39312744]
[72.83872986 77.96414185]
[70.05307007 72.78572083]
[70.45256042 67.88374329]
[62.95256042 54.89336014]
[55.45256042 41.90297699]
[41.85177612 33.82032776]
[42.18883896 18.92953682]
[34.68883896 5.93915653]
[21.08805466 -2.14349294]
[21.42511749 -17.03428459]
[13.92511749 -30.02466583]
[6.42511749 -43.01504517]
[-1.07488251 -56.00542831]
[-8.57488251 -68.99581146]
[-16.07488251 -81.98619080]
[-23.18720245 -87.96830750]
[-23.59779739 -95.46527100]
[-30.71680450 -108.66828918]
[-46.58049774 -117.87535095]
[-45.56575775 -135.32830811]
[-53.06575775 -148.31869507]
[-60.56575775 -161.30906677]
[-68.06575775 -174.29945374]
[-75.56575775 -187.28984070]
[-88.72161102 -197.98376465]
[-82.08750916 -213.58584595]
[-65.25865936 -211.53009033]
[-62.57537842 -194.78984070]
[-55.07537842 -181.79945374]
[-47.57537842 -168.80906677]
[-40.07537842 -155.81869507]
[-32.57537842 -142.82830811]
[-20.89089966 -139.34179688]
[-14.56641197 -128.44813538]
[-17.51378250 -115.78730011]
[-10.39477730 -102.58427429]
[-3.08450150 -89.48619080]
[4.41549826 -76.49581146]
[11.91549873 -63.50542831]
[19.41549873 -50.51504517]
[26.91549873 -37.52466583]
[34.41549683 -24.53428459]
[47.47983170 -17.38079262]
[47.67922211 -1.56084335]
[55.17922211 11.42953777]
[68.24355316 18.58302879]
[68.44293976 34.40297699]
[75.94293976 47.39336014]
[83.44293976 60.38373947]
[91.31758881 73.15048981]
[99.56022644 85.68280792]
[111.96748352 92.12886047]
[112.97209167 106.07455444]
[121.21472931 118.60687256]
[129.63876343 131.01799011]
[138.24240112 143.30526733]
[146.84605408 155.59254456]
[155.44969177 167.87982178]
[164.05334473 180.16711426]
[172.65699768 192.45439148]
[185.29391479 195.50270081]
[192.19041443 206.04353333]
[190.06208801 218.04991150]
[198.30473328 230.58222961]
[206.54736328 243.11454773]
[219.09028625 246.52909851]
[225.67727661 257.26605225]
[223.20066833 269.20544434]
[231.07531738 281.97219849]
[242.01258850 281.77416992]
[251.93608093 286.17965698]
[259.01776123 294.30172729]
[261.98504639 304.57601929]
[260.34918213 315.06176758]
[254.48417664 323.80834961]
[261.21618652 337.21286011]
[267.94815063 350.61734009]
[283.20492554 354.04730225]
[292.64639282 366.51296997]
[291.81457520 382.12841797]
[281.10223389 393.52050781]
[265.56741333 395.31024170]
[252.54516602 386.65258789]
[248.18421936 371.63537598]
[254.54367065 357.34933472]
[247.81167603 343.94482422]
[241.07969666 330.54034424]
[222.27783203 325.98596191]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 88]
[2 87]
[4 84]
[5 83]
[6 82]
[8 79]
[9 78]
[10 77]
[11 76]
[12 75]
[13 74]
[15 73]
[16 72]
[18 70]
[19 69]
[22 68]
[23 67]
[24 66]
[26 64]
[27 63]
[29 61]
[30 60]
[31 59]
[32 58]
[33 57]
[34 56]
[36 55]
[37 54]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[94 106]
[95 105]
[96 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
