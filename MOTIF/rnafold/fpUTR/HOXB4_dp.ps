%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HOXB4)
} def

/sequence { (\
GGAAAACGAGUCAGGGGUCGGAAUAAAUUUUAGUAUAUUUUGUGGGCAAUUCCCAGAAAUUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.045027735 ubox
1 19 0.015778931 ubox
1 29 0.010634501 ubox
1 30 0.019179211 ubox
1 31 0.050497332 ubox
1 41 0.003495221 ubox
1 53 0.036136049 ubox
1 54 0.015706542 ubox
1 61 0.010897271 ubox
2 11 0.042617361 ubox
2 12 0.047744897 ubox
2 18 0.012210261 ubox
2 19 0.026511925 ubox
2 28 0.013630608 ubox
2 29 0.027881629 ubox
2 30 0.060349400 ubox
2 31 0.093688006 ubox
2 39 0.004844697 ubox
2 40 0.005959860 ubox
2 41 0.004521917 ubox
2 52 0.036414674 ubox
2 53 0.015265846 ubox
2 60 0.008300614 ubox
2 61 0.029603559 ubox
3 11 0.046208274 ubox
3 18 0.024170077 ubox
3 28 0.027641238 ubox
3 29 0.061026601 ubox
3 30 0.096295963 ubox
3 31 0.069193435 ubox
3 38 0.005254696 ubox
3 39 0.006844410 ubox
3 40 0.005416049 ubox
3 41 0.004672163 ubox
3 51 0.036276108 ubox
3 60 0.028100399 ubox
3 61 0.023051198 ubox
4 28 0.056689932 ubox
4 29 0.094948430 ubox
4 30 0.073085856 ubox
4 31 0.025721425 ubox
4 38 0.006727218 ubox
4 39 0.006007511 ubox
4 40 0.005556549 ubox
4 50 0.033272523 ubox
4 51 0.006944627 ubox
4 60 0.021125014 ubox
4 61 0.022040816 ubox
5 28 0.083116463 ubox
5 29 0.072908797 ubox
5 30 0.026945850 ubox
5 31 0.010921507 ubox
5 38 0.005581228 ubox
5 39 0.006172747 ubox
5 50 0.007308923 ubox
5 60 0.020513864 ubox
5 61 0.022245441 ubox
6 18 0.054297967 ubox
6 28 0.070445029 ubox
6 29 0.026440641 ubox
6 30 0.011211945 ubox
6 34 0.031131530 ubox
6 38 0.006000677 ubox
6 43 0.008115813 ubox
6 50 0.003295275 ubox
6 60 0.020429251 ubox
7 17 0.058187839 ubox
7 20 0.947980002 ubox
7 33 0.031945562 ubox
7 42 0.009298798 ubox
8 19 0.956330366 ubox
8 29 0.005374002 ubox
8 30 0.015404563 ubox
8 31 0.012486463 ubox
8 41 0.009179756 ubox
8 52 0.012615951 ubox
8 61 0.037601135 ubox
9 18 0.952639785 ubox
9 28 0.005604363 ubox
9 29 0.016566312 ubox
9 30 0.013470313 ubox
9 31 0.008952653 ubox
9 39 0.003249219 ubox
9 40 0.009049514 ubox
9 51 0.012614817 ubox
9 60 0.039223953 ubox
9 61 0.017290832 ubox
10 18 0.013761890 ubox
10 24 0.018711442 ubox
10 28 0.016772050 ubox
10 29 0.012881189 ubox
10 30 0.010024354 ubox
10 36 0.006094252 ubox
10 38 0.003911814 ubox
10 39 0.008358902 ubox
10 47 0.030434982 ubox
10 50 0.012134514 ubox
10 60 0.017463917 ubox
11 17 0.206854259 ubox
11 21 0.029856818 ubox
11 22 0.107520024 ubox
11 23 0.014251584 ubox
11 27 0.015665116 ubox
11 35 0.006085893 ubox
11 37 0.003858095 ubox
11 45 0.016845826 ubox
11 46 0.030215968 ubox
11 49 0.011605031 ubox
11 57 0.108293108 ubox
11 59 0.013460700 ubox
12 16 0.218431539 ubox
12 20 0.034426796 ubox
12 21 0.110729347 ubox
12 42 0.013648564 ubox
12 44 0.017701974 ubox
12 45 0.029853041 ubox
12 56 0.114759416 ubox
13 29 0.004368905 ubox
13 30 0.005707985 ubox
13 31 0.010628338 ubox
13 39 0.003900322 ubox
13 41 0.013693503 ubox
13 43 0.018030154 ubox
14 28 0.004877483 ubox
14 29 0.006593190 ubox
14 30 0.011895871 ubox
14 31 0.038300836 ubox
14 38 0.005959189 ubox
14 39 0.004137648 ubox
14 40 0.013583603 ubox
14 53 0.023963843 ubox
14 54 0.137250445 ubox
15 28 0.006495551 ubox
15 29 0.012034153 ubox
15 30 0.043138177 ubox
15 31 0.008280124 ubox
15 38 0.005615195 ubox
15 39 0.013510423 ubox
15 40 0.004199748 ubox
15 41 0.012208450 ubox
15 52 0.024129544 ubox
15 53 0.137420373 ubox
15 54 0.029831583 ubox
16 28 0.011412663 ubox
16 29 0.045119602 ubox
16 30 0.008740921 ubox
16 31 0.004891031 ubox
16 38 0.012962891 ubox
16 39 0.005536913 ubox
16 40 0.011579483 ubox
16 51 0.023990708 ubox
16 52 0.137321085 ubox
16 53 0.029856471 ubox
16 61 0.004253559 ubox
17 24 0.015958009 ubox
17 28 0.045985958 ubox
17 29 0.008399673 ubox
17 30 0.004924996 ubox
17 34 0.006062989 ubox
17 36 0.013142609 ubox
17 38 0.006951214 ubox
17 39 0.010741161 ubox
17 43 0.013752579 ubox
17 47 0.096266567 ubox
17 50 0.029905326 ubox
17 51 0.088897207 ubox
17 52 0.029464851 ubox
17 60 0.004521717 ubox
18 23 0.015349529 ubox
18 27 0.045798101 ubox
18 33 0.007981202 ubox
18 35 0.013046689 ubox
18 37 0.006965358 ubox
18 45 0.039568776 ubox
18 46 0.097444151 ubox
18 49 0.035623335 ubox
18 57 0.005732574 ubox
18 59 0.004209040 ubox
19 42 0.106315039 ubox
19 44 0.041288553 ubox
19 45 0.088625700 ubox
19 56 0.006010936 ubox
20 29 0.005775181 ubox
20 30 0.013745895 ubox
20 31 0.038301687 ubox
20 39 0.003867151 ubox
20 40 0.004038418 ubox
20 41 0.116296132 ubox
20 43 0.040388713 ubox
20 53 0.013520320 ubox
21 28 0.011935671 ubox
21 29 0.042017095 ubox
21 30 0.101228702 ubox
21 31 0.230325719 ubox
21 38 0.019001078 ubox
21 39 0.016616376 ubox
21 40 0.154295197 ubox
21 41 0.013028082 ubox
21 52 0.014396804 ubox
21 60 0.003248721 ubox
21 61 0.013984755 ubox
22 28 0.042170149 ubox
22 29 0.104404850 ubox
22 30 0.236924326 ubox
22 31 0.103326859 ubox
22 38 0.018369453 ubox
22 39 0.170849025 ubox
22 40 0.014017302 ubox
22 41 0.035476972 ubox
22 51 0.014574946 ubox
22 60 0.013817028 ubox
22 61 0.016376439 ubox
23 28 0.083279946 ubox
23 29 0.233446771 ubox
23 30 0.106253767 ubox
23 34 0.073605786 ubox
23 36 0.122426094 ubox
23 38 0.182628448 ubox
23 39 0.013829749 ubox
23 40 0.031407524 ubox
23 43 0.082697879 ubox
23 50 0.014456970 ubox
23 60 0.016909694 ubox
24 32 0.076538418 ubox
24 33 0.074507953 ubox
24 35 0.129126952 ubox
24 37 0.184018040 ubox
24 42 0.085217685 ubox
24 44 0.007930363 ubox
24 49 0.013711233 ubox
24 59 0.014015005 ubox
24 62 0.019467679 ubox
25 31 0.080674985 ubox
25 34 0.128665251 ubox
25 36 0.179178824 ubox
25 39 0.011636442 ubox
25 40 0.074897775 ubox
25 41 0.083923218 ubox
25 43 0.006888306 ubox
25 61 0.021381016 ubox
26 30 0.062245800 ubox
26 38 0.013164895 ubox
26 39 0.095532879 ubox
26 40 0.082071229 ubox
26 41 0.006980746 ubox
26 60 0.020412098 ubox
26 61 0.050911820 ubox
27 34 0.155002069 ubox
27 36 0.079067249 ubox
27 38 0.108223103 ubox
27 39 0.078380438 ubox
27 40 0.007419720 ubox
27 43 0.004460532 ubox
27 50 0.003820217 ubox
27 60 0.054397987 ubox
28 33 0.147968304 ubox
28 35 0.084475313 ubox
28 37 0.110710447 ubox
28 42 0.004489791 ubox
28 45 0.009071518 ubox
28 49 0.003849652 ubox
28 58 0.005649835 ubox
28 59 0.053678138 ubox
29 44 0.009102359 ubox
29 48 0.003628892 ubox
29 57 0.005951220 ubox
29 58 0.051299724 ubox
29 59 0.004582138 ubox
30 45 0.003475762 ubox
30 56 0.006002318 ubox
30 57 0.048449395 ubox
30 58 0.004103140 ubox
30 59 0.004362053 ubox
31 37 0.026756228 ubox
31 42 0.016411752 ubox
31 44 0.003665808 ubox
31 56 0.047588853 ubox
31 58 0.003622083 ubox
31 62 0.069474190 ubox
32 36 0.025395584 ubox
32 39 0.010905433 ubox
32 40 0.007967368 ubox
32 41 0.017955598 ubox
32 43 0.003762198 ubox
32 61 0.080615046 ubox
33 38 0.012692306 ubox
33 39 0.012984097 ubox
33 40 0.018136668 ubox
33 47 0.007340320 ubox
33 60 0.082442821 ubox
34 42 0.007603920 ubox
34 44 0.006469802 ubox
34 46 0.007187695 ubox
34 59 0.074082042 ubox
34 62 0.087837802 ubox
35 41 0.008419395 ubox
35 43 0.008156088 ubox
35 60 0.038763677 ubox
35 61 0.097593616 ubox
36 42 0.008564137 ubox
36 44 0.006457975 ubox
36 59 0.037828622 ubox
36 62 0.482732295 ubox
37 41 0.007232218 ubox
37 43 0.006732393 ubox
37 60 0.216265017 ubox
37 61 0.533264436 ubox
38 42 0.006331466 ubox
38 57 0.012683652 ubox
38 58 0.165983073 ubox
38 59 0.228463656 ubox
39 56 0.012658606 ubox
39 57 0.187525519 ubox
39 58 0.226362313 ubox
39 59 0.808025289 ubox
40 49 0.007736027 ubox
40 55 0.006630836 ubox
40 56 0.190327123 ubox
40 57 0.217172323 ubox
40 58 0.908205028 ubox
40 59 0.026769302 ubox
41 48 0.009722149 ubox
41 55 0.190007647 ubox
41 56 0.194729086 ubox
41 57 0.920994095 ubox
41 58 0.026122878 ubox
42 47 0.010102855 ubox
42 54 0.190279133 ubox
43 49 0.004399859 ubox
43 55 0.961746898 ubox
44 52 0.014338671 ubox
44 53 0.194482681 ubox
44 54 0.969205196 ubox
45 50 0.003686441 ubox
45 51 0.013456523 ubox
45 52 0.194701259 ubox
45 53 0.969150583 ubox
45 54 0.009072406 ubox
46 50 0.010083861 ubox
46 51 0.137926179 ubox
46 52 0.962061217 ubox
46 53 0.010110074 ubox
51 57 0.003353927 ubox
52 56 0.003439959 ubox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
39 59 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
43 55 0.9500000 lbox
44 54 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
showpage
end
%%EOF
