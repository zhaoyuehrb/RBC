%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:28:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGACAAUAUGGCGGCGCUUAGUUGCAUGAAGGCGGAAACUCUGUGACUUCCGGUCCGUAGUGGGGCCUGCGGUGGGAGUGGGAAGGAAGGCGGAGGGAACCAUGCGAGGUUCUGAGAAUUGCGGCGAGGGUCGCCUCGAGAGACGGUUUCUGAGCAGGAAUUCUGAAAUCCCCACCACUUCCUCCCUCCGGGGGAUUUGAUCCCCU\
) } def
/len { sequence length } bind def

/coor [
[97.27070618 167.77824402]
[95.01374054 182.60746765]
[92.75677490 197.43670654]
[90.49980927 212.26593018]
[88.24259186 227.09512329]
[73.41343689 224.83766174]
[75.67057800 210.00897217]
[77.92754364 195.17973328]
[80.18450928 180.35050964]
[82.44147491 165.52127075]
[84.69844818 150.69204712]
[77.28382874 149.56355286]
[69.13959503 162.16004944]
[60.99536133 174.75653076]
[52.85112381 187.35301208]
[44.70689011 199.94949341]
[46.65462875 215.87388611]
[35.31644440 227.22399902]
[19.39002609 225.29301453]
[11.09275436 211.56221008]
[16.78958893 196.56469727]
[32.11040497 191.80526733]
[40.25463867 179.20878601]
[48.39887619 166.61228943]
[56.54310989 154.01580811]
[64.68734741 141.41932678]
[62.22527695 135.30772400]
[60.66628647 129.19371033]
[59.97691345 123.20000458]
[45.95166779 128.51907349]
[31.92642593 133.83815002]
[17.90118217 139.15722656]
[3.95787358 144.68751526]
[-9.90031910 150.42776489]
[-23.75851250 156.16801453]
[-37.61670685 161.90827942]
[-51.47489929 167.64852905]
[-63.79451370 179.29598999]
[-78.39720154 170.68215942]
[-74.16243744 154.26560974]
[-57.21514893 153.79032898]
[-43.35695648 148.05007935]
[-29.49876404 142.30982971]
[-15.64057064 136.56958008]
[-1.78237796 130.82933044]
[0.84113806 126.83601379]
[6.00213528 124.44966125]
[12.58210850 125.13198090]
[26.60735321 119.81291199]
[40.63259506 114.49383545]
[54.65784073 109.17475891]
[53.80354309 102.44437408]
[53.94281387 95.66141510]
[39.43456268 91.85212708]
[24.92631340 88.04283905]
[10.41806507 84.23354340]
[-4.09018469 80.42425537]
[-17.60901833 88.61062622]
[-32.93676758 84.75891876]
[-40.97975159 71.15428925]
[-36.96620941 55.86812210]
[-23.27730560 47.96942139]
[-8.03442287 52.14435577]
[-0.28089371 65.91600800]
[14.22735596 69.72529602]
[28.73560524 73.53458405]
[43.24385452 77.34387970]
[57.75210571 81.15316772]
[69.65977478 65.07781982]
[87.24125671 55.53313446]
[107.20869446 54.30401993]
[125.82807159 61.62033463]
[136.10948181 50.69822311]
[139.93464661 35.34639359]
[154.29211426 31.38250351]
[164.57353210 20.46038818]
[174.85493469 9.53827381]
[185.13635254 -1.38384008]
[195.41777039 -12.30595398]
[205.69917297 -23.22806931]
[215.98059082 -34.15018463]
[226.26199341 -45.07229614]
[223.52297974 -60.23158646]
[230.15788269 -73.93674469]
[243.43362427 -81.02326965]
[258.16027832 -78.95836639]
[268.44168091 -89.88047791]
[278.72308350 -100.80259705]
[275.98410034 -115.96188354]
[282.61898804 -129.66703796]
[295.89471436 -136.75357056]
[310.62136841 -134.68865967]
[320.90277100 -145.61077881]
[331.18420410 -156.53289795]
[341.46560669 -167.45500183]
[351.74700928 -178.37712097]
[349.08148193 -189.96582031]
[352.30908203 -201.28611755]
[360.51638794 -209.55645752]
[371.58160400 -212.80300903]
[382.72219849 -210.32995605]
[393.32879639 -220.93655396]
[397.18533325 -229.21958923]
[404.17657471 -231.62173462]
[414.94216919 -242.06694031]
[425.70776367 -252.51213074]
[426.11169434 -268.08374023]
[437.17831421 -278.52328491]
[452.02096558 -278.04223633]
[462.78656006 -288.48742676]
[462.72976685 -305.97964478]
[475.09713745 -317.86767578]
[491.89849854 -317.14840698]
[502.50509644 -327.75503540]
[513.11169434 -338.36163330]
[509.25225830 -353.16201782]
[513.29248047 -367.81033325]
[524.05084229 -378.39923096]
[538.56774902 -382.15625000]
[552.91943359 -378.16934204]
[563.52600098 -388.77593994]
[574.13262939 -399.38253784]
[578.41973877 -414.61184692]
[592.89038086 -418.14028931]
[603.49694824 -428.74688721]
[614.10357666 -439.35348511]
[624.71014404 -449.96008301]
[635.31677246 -460.56668091]
[642.24133301 -476.04205322]
[659.02880859 -473.67211914]
[661.39874268 -456.88464355]
[645.92333984 -449.96008301]
[635.31677246 -439.35348511]
[624.71014404 -428.74688721]
[614.10357666 -418.14028931]
[603.49694824 -407.53366089]
[599.96850586 -393.06304932]
[584.73919678 -388.77593994]
[574.13262939 -378.16934204]
[563.52600098 -367.56274414]
[567.51293945 -353.21105957]
[563.75592041 -338.69415283]
[553.16699219 -327.93582153]
[538.51867676 -323.89556885]
[523.71832275 -327.75503540]
[513.11169434 -317.14840698]
[502.50509644 -306.54180908]
[504.30776978 -293.78192139]
[498.34237671 -282.14010620]
[486.58770752 -275.96957397]
[473.23175049 -277.72186279]
[462.46615601 -267.27667236]
[462.49868774 -252.42625427]
[451.72964478 -241.67997742]
[436.15295410 -241.74655151]
[425.38735962 -231.30134583]
[414.62179565 -220.85615540]
[403.93539429 -210.32995605]
[393.32879639 -199.72334290]
[394.43215942 -181.45216370]
[381.61172485 -167.94349670]
[362.66912842 -168.09570312]
[352.38772583 -157.17359924]
[342.10632324 -146.25148010]
[331.82489014 -135.32936096]
[321.54348755 -124.40724945]
[324.49380493 -109.83214569]
[318.22177124 -96.15275574]
[304.94223022 -88.70246887]
[289.64520264 -90.52118683]
[279.36380005 -79.59906769]
[269.08239746 -68.67695618]
[272.03268433 -54.10185242]
[265.76068115 -40.42246246]
[252.48112488 -32.97216797]
[237.18411255 -34.79088593]
[226.90269470 -23.86877251]
[216.62129211 -12.94665718]
[206.33987427 -2.02454305]
[196.05847168 8.89757156]
[185.77705383 19.81968498]
[175.49563599 30.74180031]
[165.21423340 41.66391373]
[162.12445068 56.23451996]
[147.03160095 60.97963333]
[136.75018311 71.90174866]
[145.91078186 86.35797882]
[149.38874817 103.71600342]
[146.31002808 121.74697113]
[136.67079163 137.98197937]
[121.39135742 150.04951477]
[125.41933441 164.49858093]
[129.44731140 178.94763184]
[133.47528076 193.39669800]
[137.50326538 207.84576416]
[141.53125000 222.29483032]
[145.55921936 236.74388123]
[155.63679504 250.37762451]
[145.32562256 263.83557129]
[129.53921509 257.65286255]
[131.11015320 240.77186584]
[127.08218384 226.32279968]
[123.05420685 211.87373352]
[119.02622223 197.42468262]
[114.99824524 182.97561646]
[110.97026825 168.52655029]
[106.94229126 154.07749939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[29 51]
[30 50]
[31 49]
[32 48]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[72 186]
[73 185]
[75 183]
[76 182]
[77 181]
[78 180]
[79 179]
[80 178]
[81 177]
[82 176]
[86 172]
[87 171]
[88 170]
[92 166]
[93 165]
[94 164]
[95 163]
[96 162]
[101 159]
[102 158]
[104 157]
[105 156]
[106 155]
[109 152]
[110 151]
[113 147]
[114 146]
[115 145]
[120 140]
[121 139]
[122 138]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
