%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MIS18A)
} def

/sequence { (\
GCGGCGGUUUUUUUUCCCAUGGCGCUCUGGGGCGCGGGCGAUUUGUAGGUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.171989798 ubox
1 23 0.050939627 ubox
1 25 0.099299618 ubox
1 33 0.004372874 ubox
1 35 0.042423457 ubox
1 39 0.285534973 ubox
1 46 0.142118936 ubox
1 50 0.405726572 ubox
2 7 0.188435031 ubox
2 21 0.057171816 ubox
2 22 0.051998391 ubox
2 24 0.099485798 ubox
2 32 0.004354012 ubox
2 34 0.042441900 ubox
2 36 0.021077177 ubox
2 38 0.285428257 ubox
2 40 0.063947115 ubox
2 45 0.147276744 ubox
2 49 0.420304217 ubox
3 9 0.009054355 ubox
3 10 0.012406044 ubox
3 11 0.009645166 ubox
3 12 0.012855312 ubox
3 13 0.006149815 ubox
3 14 0.007833135 ubox
3 15 0.004650501 ubox
3 16 0.011830301 ubox
3 17 0.050028343 ubox
3 18 0.154306128 ubox
3 20 0.053167719 ubox
3 23 0.098799654 ubox
3 26 0.010957336 ubox
3 33 0.040215573 ubox
3 35 0.016391099 ubox
3 39 0.062151504 ubox
3 43 0.024545007 ubox
3 44 0.137347336 ubox
4 8 0.007374526 ubox
4 9 0.011018865 ubox
4 10 0.010092631 ubox
4 11 0.012739348 ubox
4 12 0.007026440 ubox
4 13 0.009457363 ubox
4 14 0.005232668 ubox
4 15 0.011352574 ubox
4 16 0.050207259 ubox
4 17 0.153778673 ubox
4 23 0.022866489 ubox
4 25 0.012615267 ubox
4 33 0.016663831 ubox
4 35 0.261021083 ubox
4 39 0.071995326 ubox
4 42 0.032949566 ubox
4 43 0.102549571 ubox
4 46 0.518772776 ubox
4 50 0.560348476 ubox
5 21 0.097248140 ubox
5 22 0.026655954 ubox
5 24 0.012625923 ubox
5 32 0.020881721 ubox
5 34 0.261464821 ubox
5 36 0.043333669 ubox
5 38 0.073180096 ubox
5 40 0.124314024 ubox
5 45 0.525404352 ubox
5 49 0.570890656 ubox
6 12 0.011825238 ubox
6 13 0.025755171 ubox
6 14 0.047056149 ubox
6 15 0.062721634 ubox
6 16 0.137237871 ubox
6 17 0.174675350 ubox
6 18 0.068918030 ubox
6 20 0.048065602 ubox
6 23 0.012138686 ubox
6 33 0.259063316 ubox
6 35 0.034472558 ubox
6 39 0.124728967 ubox
6 43 0.077740815 ubox
6 44 0.509435934 ubox
7 11 0.010188916 ubox
7 12 0.030279321 ubox
7 13 0.049282641 ubox
7 14 0.065360574 ubox
7 15 0.130767470 ubox
7 16 0.176529616 ubox
7 17 0.068143456 ubox
7 20 0.021570493 ubox
7 23 0.004053401 ubox
7 33 0.043238368 ubox
7 35 0.011107033 ubox
7 39 0.054056213 ubox
7 42 0.110970513 ubox
7 43 0.456023303 ubox
7 46 0.047499900 ubox
7 50 0.020662822 ubox
8 19 0.021300828 ubox
8 22 0.005070330 ubox
8 31 0.028589777 ubox
8 32 0.047581367 ubox
8 34 0.011167445 ubox
8 37 0.030455286 ubox
8 38 0.045694158 ubox
8 41 0.123963852 ubox
8 45 0.050848840 ubox
8 48 0.046911844 ubox
8 49 0.038412973 ubox
9 21 0.005156647 ubox
9 30 0.023681288 ubox
9 31 0.007457365 ubox
9 32 0.007464098 ubox
9 36 0.027496664 ubox
9 37 0.041778220 ubox
9 38 0.005865091 ubox
9 40 0.115327099 ubox
9 41 0.290249321 ubox
9 47 0.056374983 ubox
9 48 0.052434870 ubox
9 49 0.022072856 ubox
10 29 0.022394924 ubox
10 30 0.005466351 ubox
10 32 0.007096851 ubox
10 36 0.037552647 ubox
10 37 0.007915093 ubox
10 38 0.006495453 ubox
10 40 0.273138700 ubox
10 41 0.122093774 ubox
10 47 0.053911260 ubox
10 48 0.029912958 ubox
10 49 0.016686872 ubox
11 29 0.005228405 ubox
11 32 0.006544244 ubox
11 36 0.008536003 ubox
11 37 0.007367596 ubox
11 38 0.017834068 ubox
11 40 0.118387598 ubox
11 41 0.229455523 ubox
11 47 0.030522257 ubox
11 48 0.022506106 ubox
11 49 0.009351924 ubox
12 21 0.004485923 ubox
12 32 0.006610953 ubox
12 36 0.007202011 ubox
12 37 0.016498705 ubox
12 38 0.021585593 ubox
12 40 0.234910647 ubox
12 41 0.139650978 ubox
12 47 0.023429949 ubox
12 48 0.012397719 ubox
12 49 0.009244682 ubox
13 32 0.006680582 ubox
13 36 0.015884679 ubox
13 37 0.016780194 ubox
13 38 0.009780292 ubox
13 40 0.142265506 ubox
13 41 0.549887317 ubox
13 47 0.011210875 ubox
13 48 0.012004546 ubox
13 49 0.009428941 ubox
14 21 0.004845785 ubox
14 32 0.013280803 ubox
14 36 0.016190968 ubox
14 37 0.006111422 ubox
14 38 0.018194250 ubox
14 40 0.554594059 ubox
14 41 0.169117179 ubox
14 47 0.012125073 ubox
14 48 0.012475355 ubox
14 49 0.008320197 ubox
15 22 0.004458662 ubox
15 31 0.004500344 ubox
15 32 0.248740832 ubox
15 36 0.005489535 ubox
15 37 0.016125392 ubox
15 38 0.103489823 ubox
15 40 0.174228988 ubox
15 41 0.208659668 ubox
15 47 0.012221174 ubox
15 48 0.010519918 ubox
15 49 0.011059661 ubox
16 21 0.009100756 ubox
16 22 0.024396871 ubox
16 30 0.005026860 ubox
16 31 0.265389759 ubox
16 32 0.071448383 ubox
16 36 0.016464859 ubox
16 37 0.117713190 ubox
16 38 0.874141033 ubox
16 40 0.218132305 ubox
16 48 0.014559972 ubox
16 49 0.069557765 ubox
17 21 0.024775086 ubox
17 29 0.004722922 ubox
17 30 0.266059828 ubox
17 31 0.071428672 ubox
17 32 0.003290431 ubox
17 36 0.117482113 ubox
17 37 0.877046100 ubox
17 38 0.241081844 ubox
17 48 0.069938430 ubox
17 49 0.044098904 ubox
18 29 0.266098554 ubox
18 30 0.071266099 ubox
18 31 0.003309028 ubox
18 36 0.876276754 ubox
18 37 0.241379189 ubox
18 45 0.093558025 ubox
18 48 0.044738387 ubox
19 28 0.259733485 ubox
19 42 0.008399533 ubox
19 44 0.093696574 ubox
19 46 0.056534345 ubox
19 50 0.003653180 ubox
20 29 0.018141775 ubox
20 34 0.018022684 ubox
20 36 0.077487731 ubox
20 40 0.007331176 ubox
20 41 0.008338084 ubox
20 45 0.056018213 ubox
20 47 0.005955971 ubox
20 49 0.003715900 ubox
21 27 0.170849870 ubox
21 28 0.030571129 ubox
21 33 0.013185358 ubox
21 35 0.084572755 ubox
21 39 0.011362180 ubox
21 43 0.027851634 ubox
21 44 0.044675996 ubox
21 46 0.005223982 ubox
22 26 0.110846893 ubox
22 27 0.034428190 ubox
22 33 0.035128998 ubox
22 35 0.937335159 ubox
22 39 0.005593403 ubox
22 42 0.033471542 ubox
22 43 0.034198281 ubox
23 32 0.037098110 ubox
23 34 0.941783624 ubox
23 36 0.006792611 ubox
23 38 0.005322911 ubox
23 40 0.146450477 ubox
24 33 0.941859378 ubox
24 35 0.007989754 ubox
24 39 0.156379759 ubox
24 46 0.003181342 ubox
24 50 0.010154917 ubox
25 31 0.032805144 ubox
25 32 0.941064796 ubox
25 34 0.007992182 ubox
25 38 0.155988606 ubox
25 45 0.003305149 ubox
25 49 0.010552552 ubox
26 30 0.039660462 ubox
26 31 0.865052284 ubox
26 32 0.012437408 ubox
26 37 0.118504200 ubox
26 38 0.037323433 ubox
26 41 0.005272010 ubox
26 48 0.003307833 ubox
26 49 0.058162599 ubox
27 31 0.105663358 ubox
27 36 0.117933387 ubox
27 37 0.114344552 ubox
27 40 0.005603461 ubox
27 48 0.074808199 ubox
27 49 0.004154979 ubox
28 34 0.029119672 ubox
28 36 0.114796684 ubox
28 45 0.003663914 ubox
28 47 0.074820311 ubox
28 48 0.003995815 ubox
29 33 0.028282612 ubox
29 35 0.126416591 ubox
29 43 0.005356872 ubox
29 44 0.006702560 ubox
29 46 0.073723395 ubox
30 42 0.007725146 ubox
30 43 0.008988312 ubox
30 44 0.009750585 ubox
31 42 0.007461754 ubox
31 43 0.012874539 ubox
31 44 0.054319502 ubox
32 39 0.085328063 ubox
32 42 0.012317972 ubox
32 43 0.023459653 ubox
32 46 0.004389966 ubox
32 50 0.011291435 ubox
33 38 0.085490446 ubox
33 40 0.035370049 ubox
33 45 0.004570191 ubox
33 49 0.011589752 ubox
34 39 0.034721900 ubox
34 44 0.003679879 ubox
34 46 0.016084044 ubox
34 50 0.009246270 ubox
35 45 0.016735571 ubox
35 49 0.009550003 ubox
36 43 0.007072847 ubox
36 44 0.017407899 ubox
37 42 0.007855004 ubox
37 43 0.016556679 ubox
37 44 0.005286668 ubox
38 42 0.010913463 ubox
38 43 0.004530352 ubox
38 46 0.080734583 ubox
38 50 0.069300297 ubox
39 45 0.086974249 ubox
39 49 0.075014060 ubox
40 44 0.053877985 ubox
41 50 0.056689116 ubox
42 48 0.011543937 ubox
42 49 0.057674985 ubox
43 47 0.011575970 ubox
43 48 0.046695230 ubox
43 49 0.010557250 ubox
44 48 0.010720515 ubox
44 51 0.013484551 ubox
45 50 0.014178551 ubox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
showpage
end
%%EOF
