%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCUUGGCCCCGCCCUCGCGCCAUCUUGGGGGCCCUGGAGGCGGCGCCGCGGAGGACGGAGCGGAAGUGCUCGCUGCAGCUUCCCGGAGCCGGAGCGCAGCGCCUGCGGCCGCCCGUGCCCCGCCGUCCUCCUUCCCGCGGCCGUGAGGGAGACCGCGGCUCGGCCGUAGCGGAGCUGCGAGUUACAGA\
) } def
/len { sequence length } bind def

/coor [
[155.99351501 249.15969849]
[148.74906921 251.10084534]
[145.82270813 265.81262207]
[142.89636230 280.52438354]
[145.73646545 297.23876953]
[130.46151733 304.59487915]
[119.16436005 291.95324707]
[128.18458557 277.59805298]
[131.11093140 262.88626099]
[134.03729248 248.17448425]
[127.25472260 237.44297791]
[124.98242950 225.83349609]
[126.93879700 215.04222107]
[132.26368713 206.45030212]
[139.70330811 200.94718933]
[133.73707581 187.18478394]
[127.77085876 173.42236328]
[121.80462646 159.65994263]
[115.83840179 145.89752197]
[109.87217712 132.13511658]
[103.90594482 118.37268829]
[89.86735535 113.08894348]
[76.30751801 119.50226593]
[62.74768066 125.91559601]
[53.58059311 138.81036377]
[38.76715469 137.25753784]
[25.20731354 143.67086792]
[11.64747429 150.08419800]
[-1.91236484 156.49751282]
[-11.07945061 169.39228821]
[-25.89289093 167.83946228]
[-39.45272827 174.25279236]
[-48.33548737 188.03787231]
[-64.69966888 186.96757507]
[-71.71121216 172.14292908]
[-62.15723419 158.81423950]
[-45.86605453 160.69294739]
[-32.30621719 154.27961731]
[-24.10902214 141.84358215]
[-8.32569122 142.93768311]
[5.23414803 136.52435303]
[18.79398727 130.11102295]
[32.35382843 123.69770050]
[40.55102158 111.26165009]
[56.33435059 112.35575104]
[69.89419556 105.94242859]
[83.45403290 99.52909851]
[91.47899628 86.85630035]
[91.47899628 71.85630035]
[91.47899628 56.85630035]
[91.47899628 41.85630035]
[91.47899628 26.85629845]
[90.86557770 11.86884689]
[89.63975525 -3.08098197]
[88.41394043 -18.03081131]
[87.18812561 -32.98064041]
[85.96231079 -47.93046951]
[84.73649597 -62.88029480]
[83.51068115 -77.83012390]
[82.28485870 -92.77995300]
[81.05904388 -107.72978210]
[75.38619232 -106.91883850]
[69.07324982 -108.03673553]
[62.75069046 -111.31189728]
[57.11261749 -116.77504730]
[47.78770828 -128.52435303]
[38.46279907 -140.27365112]
[29.13788986 -152.02294922]
[19.81298256 -163.77224731]
[10.39226246 -175.44487000]
[0.87636352 -187.04002380]
[-8.63953590 -198.63517761]
[-24.40014648 -201.63229370]
[-31.75573730 -215.88973999]
[-25.06372643 -230.47044373]
[-9.45765209 -234.18931580]
[3.09083962 -224.19357300]
[2.95562100 -208.15107727]
[12.47152042 -196.55592346]
[21.98741913 -184.96076965]
[28.67182732 -181.77957153]
[31.56228256 -173.09715271]
[40.88719177 -161.34785461]
[50.21210098 -149.59855652]
[59.53701019 -137.84925842]
[68.86191559 -126.09995270]
[83.64108276 -128.66438293]
[88.46267700 -142.86833191]
[93.28426361 -157.07228088]
[90.39350128 -172.62716675]
[101.81123352 -182.19192505]
[106.63282776 -196.39587402]
[111.33805084 -210.63879395]
[115.92659760 -224.91973877]
[120.51514435 -239.20068359]
[120.16195679 -248.34477234]
[125.29735565 -253.67665100]
[130.11894226 -267.88058472]
[134.82417297 -282.12353516]
[139.41271973 -296.40444946]
[136.26783752 -311.90994263]
[147.52754211 -321.66024780]
[152.11608887 -335.94119263]
[148.12702942 -351.84777832]
[160.09463501 -363.05975342]
[175.70765686 -358.04321289]
[178.90475464 -341.95874023]
[166.39703369 -331.35266113]
[161.80848694 -317.07171631]
[165.28157043 -302.58767700]
[153.69366455 -291.81591797]
[149.10511780 -277.53497314]
[150.05371094 -270.19320679]
[144.32290649 -263.05902100]
[139.50131226 -248.85505676]
[134.79608154 -234.61213684]
[130.20753479 -220.33119202]
[125.61899567 -206.05024719]
[126.56758881 -198.70849609]
[120.83677673 -191.57427979]
[116.01518250 -177.37033081]
[119.25082397 -162.83142090]
[107.48822021 -152.25070190]
[102.66662598 -138.04673767]
[97.84503174 -123.84278870]
[96.00887299 -108.95559692]
[97.23468781 -94.00576782]
[98.46050262 -79.05593872]
[99.68632507 -64.10610962]
[100.91213989 -49.15628433]
[102.13795471 -34.20645523]
[103.36376953 -19.25662613]
[104.58958435 -4.30679798]
[105.81539917 10.64303017]
[117.42124176 1.14015901]
[132.12133789 4.12463617]
[139.10241699 17.40110207]
[133.22924805 31.20348740]
[118.82208252 35.37886047]
[106.47899628 26.85629845]
[106.47899628 41.85630035]
[106.47899628 56.85630035]
[106.47899628 71.85630035]
[106.47899628 86.85630035]
[117.55672455 95.51118469]
[117.66836548 112.40646362]
[123.63459015 126.16888428]
[129.60081482 139.93130493]
[135.56704712 153.69371033]
[141.53327942 167.45613098]
[147.49949646 181.21855164]
[153.46572876 194.98097229]
[180.12826538 201.18675232]
[189.00444031 233.44607544]
[198.89462280 244.72367859]
[208.78482056 256.00128174]
[218.76693726 267.19757080]
[228.84031677 278.31185913]
[238.91371155 289.42611694]
[248.98709106 300.54037476]
[259.06048584 311.65466309]
[269.13385010 322.76892090]
[279.20724487 333.88317871]
[289.28063965 344.99743652]
[304.28121948 350.02664185]
[307.09536743 364.65298462]
[317.16876221 375.76724243]
[332.93878174 380.26593018]
[336.66485596 396.23617554]
[324.51388550 407.24914551]
[308.98574829 401.97567749]
[306.05447388 385.84063721]
[295.98110962 374.72637939]
[281.70101929 370.49212646]
[278.16635132 355.07083130]
[268.09298706 343.95657349]
[258.01959229 332.84228516]
[247.94621277 321.72802734]
[237.87281799 310.61376953]
[227.79943848 299.49951172]
[217.72605896 288.38522339]
[207.65266418 277.27096558]
[200.82022095 274.42160034]
[197.50721741 265.89144897]
[187.61703491 254.61386108]
[177.72685242 243.33627319]
[170.48240662 245.27740479]
[174.36468506 259.76629639]
[182.53411865 272.34646606]
[173.09402466 284.00341797]
[159.09051514 278.62738037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 10]
[3 9]
[4 8]
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[20 147]
[21 146]
[22 47]
[23 46]
[24 45]
[26 43]
[27 42]
[28 41]
[29 40]
[31 38]
[32 37]
[48 144]
[49 143]
[50 142]
[51 141]
[52 140]
[53 134]
[54 133]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[60 127]
[61 126]
[65 86]
[66 85]
[67 84]
[68 83]
[69 82]
[70 80]
[71 79]
[72 78]
[87 125]
[88 124]
[89 123]
[91 121]
[92 120]
[93 118]
[94 117]
[95 116]
[97 115]
[98 114]
[99 112]
[100 111]
[102 109]
[103 108]
[154 186]
[155 185]
[156 184]
[157 182]
[158 181]
[159 180]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
