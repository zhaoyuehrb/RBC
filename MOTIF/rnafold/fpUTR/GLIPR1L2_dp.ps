%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GLIPR1L2)
} def

/sequence { (\
UGGGACGGCCAGCGCGUGCGCACUGGCCUGUCAGCGGCCGGUGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.161188497 ubox
1 20 0.018794135 ubox
1 33 0.062309026 ubox
1 36 0.180120661 ubox
1 40 0.196253816 ubox
1 43 0.004015030 ubox
2 6 0.014643230 ubox
2 10 0.178876133 ubox
2 13 0.003419140 ubox
2 19 0.027579740 ubox
2 29 0.006408983 ubox
2 32 0.064426608 ubox
2 35 0.383432256 ubox
2 39 0.269952638 ubox
2 47 0.083809663 ubox
3 9 0.178779224 ubox
3 10 0.037915527 ubox
3 28 0.004171929 ubox
3 29 0.007937826 ubox
3 31 0.058991493 ubox
3 32 0.049927168 ubox
3 38 0.269978277 ubox
3 39 0.020174806 ubox
3 46 0.084491934 ubox
3 47 0.016615932 ubox
4 9 0.038045057 ubox
4 28 0.004119787 ubox
4 31 0.032872303 ubox
4 32 0.911131929 ubox
4 38 0.017501686 ubox
4 46 0.015348387 ubox
5 17 0.054861261 ubox
5 31 0.913291573 ubox
5 42 0.008987774 ubox
6 14 0.015091553 ubox
6 16 0.056118843 ubox
6 18 0.011259921 ubox
6 20 0.013428801 ubox
6 30 0.913086427 ubox
6 36 0.008872892 ubox
6 40 0.045289479 ubox
6 41 0.007059040 ubox
6 43 0.048011112 ubox
7 13 0.015426671 ubox
7 15 0.052437703 ubox
7 17 0.010102710 ubox
7 19 0.013039818 ubox
7 28 0.954372434 ubox
7 29 0.210827931 ubox
7 35 0.003864586 ubox
7 39 0.047514431 ubox
7 42 0.015524168 ubox
7 47 0.037604314 ubox
8 15 0.032461769 ubox
8 17 0.008797053 ubox
8 19 0.017555849 ubox
8 21 0.011437601 ubox
8 27 0.966593742 ubox
8 28 0.149183307 ubox
8 38 0.047548010 ubox
8 42 0.013246704 ubox
8 46 0.037868221 ubox
9 14 0.038009097 ubox
9 16 0.009298740 ubox
9 18 0.017331400 ubox
9 20 0.011906629 ubox
9 26 0.978049131 ubox
9 37 0.047544310 ubox
9 41 0.018291842 ubox
9 44 0.038393710 ubox
10 18 0.011710197 ubox
10 25 0.978044743 ubox
10 36 0.047337360 ubox
10 40 0.018268063 ubox
10 43 0.038233162 ubox
11 17 0.012433690 ubox
11 24 0.977644390 ubox
11 42 0.022906492 ubox
12 19 0.143342374 ubox
12 21 0.090362982 ubox
12 23 0.976552124 ubox
12 35 0.046110927 ubox
12 38 0.013446574 ubox
13 18 0.143332809 ubox
13 20 0.100583752 ubox
13 34 0.045999196 ubox
13 36 0.003772702 ubox
13 37 0.013062582 ubox
13 40 0.011776014 ubox
14 19 0.098364380 ubox
14 21 0.976278920 ubox
14 31 0.043542431 ubox
14 35 0.005758842 ubox
14 39 0.011183120 ubox
15 20 0.975092766 ubox
15 30 0.045360151 ubox
15 34 0.005760237 ubox
15 36 0.012654973 ubox
15 37 0.003859573 ubox
16 29 0.044412503 ubox
16 35 0.012727731 ubox
16 38 0.008723321 ubox
16 46 0.042628870 ubox
17 33 0.004702423 ubox
17 34 0.012493093 ubox
17 36 0.007382115 ubox
17 37 0.007854908 ubox
17 45 0.041273205 ubox
18 27 0.045991299 ubox
18 31 0.004695835 ubox
18 32 0.005044196 ubox
18 35 0.008166784 ubox
19 26 0.045992185 ubox
19 30 0.005231223 ubox
19 34 0.008158885 ubox
19 36 0.007825127 ubox
19 43 0.022800056 ubox
20 27 0.009463806 ubox
20 31 0.012866857 ubox
20 35 0.007988460 ubox
20 42 0.015880885 ubox
21 26 0.009478797 ubox
21 30 0.013059289 ubox
21 34 0.007679441 ubox
21 41 0.013675905 ubox
21 43 0.184275407 ubox
22 29 0.011766824 ubox
22 31 0.009125038 ubox
22 42 0.198433244 ubox
23 30 0.009551699 ubox
23 34 0.007299528 ubox
23 41 0.201141707 ubox
24 33 0.008467360 ubox
24 40 0.201333888 ubox
25 32 0.008634760 ubox
25 39 0.202045092 ubox
26 31 0.005854598 ubox
26 38 0.202053269 ubox
27 37 0.201733961 ubox
28 36 0.201268275 ubox
28 37 0.011710300 ubox
28 41 0.004110416 ubox
29 33 0.005411146 ubox
29 36 0.017626453 ubox
29 40 0.008085298 ubox
30 35 0.068766055 ubox
30 38 0.029200645 ubox
30 39 0.008540942 ubox
30 46 0.331401014 ubox
31 37 0.029581159 ubox
31 41 0.004672151 ubox
31 44 0.020553563 ubox
31 45 0.332946705 ubox
32 36 0.028676162 ubox
32 40 0.006255169 ubox
32 43 0.030816097 ubox
32 44 0.329041461 ubox
33 42 0.033787599 ubox
34 42 0.349799334 ubox
35 41 0.367431864 ubox
35 43 0.070547984 ubox
36 42 0.067370427 ubox
36 47 0.750341775 ubox
37 46 0.756977880 ubox
38 44 0.761510928 ubox
39 43 0.756180530 ubox
40 47 0.179799449 ubox
41 46 0.180371207 ubox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
38 44 0.9500000 lbox
39 43 0.9500000 lbox
showpage
end
%%EOF
