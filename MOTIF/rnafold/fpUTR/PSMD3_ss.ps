%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGACUCGGCCAUCGGCCUGCCGGGCCUGGCGUUUCCCAGAAGGCCCAGCGCCGGGAAGGGGUUUGCAGCUGCUCCGUCAUCGUGCGGCCCGACGCUAUCUCGCGCUCGUGUGCAGGCCCGGCUCGGCUCCUGGUCCCCGGUGCGAGGGUUAACGCGAGGCCCCGGCCUCGGUCCCCGGACUAGGCCGUGACCCCGGGUGCC\
) } def
/len { sequence length } bind def

/coor [
[175.99208069 797.33233643]
[163.60067749 787.99249268]
[159.09786987 773.14312744]
[164.21505737 758.49407959]
[176.98458862 749.67828369]
[177.21557617 734.68005371]
[177.44656372 719.68182373]
[177.67755127 704.68359375]
[177.90853882 689.68536377]
[178.13952637 674.68713379]
[167.51679993 658.53411865]
[178.11370850 641.39001465]
[177.88270569 626.39178467]
[174.63461304 619.74841309]
[177.76542664 611.16125488]
[177.76542664 596.16125488]
[177.76542664 581.16125488]
[177.76542664 566.16125488]
[177.76542664 551.16125488]
[177.76542664 536.16125488]
[176.03678894 521.26116943]
[172.60252380 506.65960693]
[169.16827393 492.05801392]
[165.73400879 477.45645142]
[162.29975891 462.85488892]
[158.86549377 448.25332642]
[155.31890869 433.67861938]
[151.66020203 419.13165283]
[148.00149536 404.58471680]
[137.39352417 394.12908936]
[141.53108215 378.85848999]
[137.87239075 364.31152344]
[134.21368408 349.76455688]
[130.55497742 335.21762085]
[126.89626312 320.67065430]
[120.03217316 334.00799561]
[106.69362640 340.86968994]
[91.85157776 338.69860840]
[81.03731537 328.30380249]
[78.28104401 313.55923462]
[84.60997772 299.95977783]
[97.66545868 292.57369995]
[112.58202362 294.15356445]
[123.80066681 304.11068726]
[121.95734406 289.22436523]
[120.11402130 274.33807373]
[118.27069855 259.45175171]
[116.42737579 244.56546021]
[105.11199188 231.15480042]
[112.42295074 214.25697327]
[110.35060120 199.40080261]
[108.27825928 184.54464722]
[106.20590973 169.68849182]
[104.13356781 154.83233643]
[102.06122589 139.97618103]
[99.98887634 125.12002563]
[97.91653442 110.26387024]
[90.66755676 110.92131805]
[82.89224243 106.37786102]
[78.09839630 96.68997955]
[79.37607574 84.09793854]
[74.39075470 69.95062256]
[69.40543365 55.80330276]
[64.42011261 41.65598679]
[59.43479156 27.50866890]
[54.44947052 13.36135292]
[49.46414566 -0.78596342]
[44.47882462 -14.93327999]
[39.49350357 -29.08059692]
[32.19443512 -42.18493271]
[22.79057884 -53.87113953]
[13.38672161 -65.55735016]
[3.98286438 -77.24356079]
[-5.42099285 -88.92976379]
[-18.14030266 -91.09220886]
[-25.73195839 -101.02396393]
[-24.55775642 -113.06690979]
[-33.78054047 -124.89654541]
[-49.17418289 -130.55055237]
[-51.70750427 -146.75283813]
[-38.77444077 -156.83589172]
[-23.67941856 -150.42712402]
[-21.95090294 -134.11932373]
[-12.72812080 -122.28968811]
[3.86638284 -116.58827209]
[6.26521587 -98.33362579]
[15.66907310 -86.64741516]
[25.07292938 -74.96120453]
[34.47678757 -63.27499771]
[43.88064575 -51.58879089]
[57.95013428 -56.79161835]
[72.01837921 -61.99396896]
[71.55645752 -76.98685455]
[71.09452820 -91.97974396]
[70.51717377 -106.96862793]
[69.82442474 -121.95262146]
[69.13166809 -136.93661499]
[57.28477859 -147.39733887]
[56.38800812 -163.17616272]
[66.97339630 -174.91178894]
[82.76081848 -175.64169312]
[94.38388062 -164.93281555]
[94.94682312 -149.13856506]
[84.11566162 -137.62936401]
[84.80841827 -122.64537048]
[85.50116730 -107.66137695]
[88.95230103 -101.12122345]
[86.08741760 -92.44166565]
[86.54933929 -77.44878387]
[87.01126862 -62.45589447]
[79.47281647 -44.89300537]
[66.82644653 -35.17137146]
[53.64081955 -34.06591797]
[58.62614059 -19.91860199]
[63.61146164 -5.77128553]
[68.59678650 8.37603092]
[73.58210754 22.52334785]
[78.56742859 36.67066574]
[83.55274963 50.81798172]
[88.53807068 64.96529388]
[93.52339172 79.11261749]
[108.04174805 82.88322449]
[119.28118134 72.94969177]
[130.52061462 63.01615524]
[134.88163757 54.98349380]
[142.01046753 53.01782227]
[153.40153503 43.25854874]
[164.79261780 33.49927521]
[172.88706970 18.60242462]
[189.44252014 22.25668907]
[190.51406860 39.17673874]
[174.55189514 44.89034653]
[163.16081238 54.64962387]
[151.76974487 64.40889740]
[140.45414734 74.25559235]
[129.21472168 84.18912506]
[117.97528076 94.12265778]
[112.77268982 108.19152832]
[114.84503174 123.04768372]
[116.91738129 137.90383911]
[118.98972321 152.75999451]
[121.06207275 167.61614990]
[123.13441467 182.47230530]
[125.20675659 197.32846069]
[127.27910614 212.18461609]
[137.08517456 220.56900024]
[138.50277710 232.98928833]
[131.31367493 242.72213745]
[133.15699768 257.60842896]
[135.00033569 272.49475098]
[136.84365845 287.38104248]
[138.68698120 302.26736450]
[141.44322205 317.01196289]
[145.10192871 331.55889893]
[148.76063538 346.10586548]
[152.41934204 360.65283203]
[156.07804871 375.19976807]
[166.94770813 386.69589233]
[162.54844666 400.92599487]
[166.20715332 415.47296143]
[169.86585999 430.01992798]
[174.99665833 437.58410645]
[173.46707153 444.81906128]
[176.90132141 459.42062378]
[180.33558655 474.02218628]
[183.76983643 488.62377930]
[187.20410156 503.22534180]
[190.63835144 517.82690430]
[195.92485046 515.28466797]
[202.41802979 514.45208740]
[209.58929443 515.70922852]
[216.80853271 519.28002930]
[227.73672485 529.55499268]
[238.66493225 539.82995605]
[249.59313965 550.10485840]
[265.67187500 553.33068848]
[270.66052246 568.95263672]
[259.42715454 580.90020752]
[243.52774048 576.88275146]
[239.31819153 561.03308105]
[228.38998413 550.75811768]
[217.46179199 540.48321533]
[206.53358459 530.20825195]
[192.76542664 536.16125488]
[192.76542664 551.16125488]
[192.76542664 566.16125488]
[192.76542664 581.16125488]
[192.76542664 596.16125488]
[192.76542664 611.16125488]
[192.88093567 626.16076660]
[193.11192322 641.15899658]
[201.35014343 648.27191162]
[204.25102234 658.53411865]
[201.08836365 668.48852539]
[193.13775635 674.91815186]
[192.90676880 689.91638184]
[192.67578125 704.91461182]
[192.44477844 719.91284180]
[192.21379089 734.91101074]
[191.98280334 749.90924072]
[204.47479248 759.11413574]
[209.13844299 773.91381836]
[204.18046570 788.61749268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 200]
[6 199]
[7 198]
[8 197]
[9 196]
[10 195]
[12 191]
[13 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[20 184]
[21 168]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 161]
[28 160]
[29 159]
[31 157]
[32 156]
[33 155]
[34 154]
[35 153]
[44 152]
[45 151]
[46 150]
[47 149]
[48 148]
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[61 121]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[69 113]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[77 84]
[78 83]
[92 110]
[93 109]
[94 108]
[95 106]
[96 105]
[97 104]
[122 137]
[123 136]
[124 135]
[126 134]
[127 133]
[128 132]
[172 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
