%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCCUGGAGCUCUCUCGGCCCGGCAGGUUUCGCUCCCGCCCCUCCGGCCUUCCACAGCUGUCCUGGCCGCAGGGUGUUCAAGGCGGGACACACCAGGCUAGAGAUCCGCGAUCGGGCCCCGCCUCAGGCUCUGUGCACACCCCUGCCUGGUGACCUCCAUUGGUGCUCCAGCGUGAAC\
) } def
/len { sequence length } bind def

/coor [
[64.99517822 307.45715332]
[56.94134521 294.53216553]
[54.84730148 279.44790649]
[59.07585907 264.81781006]
[68.89438629 253.17666626]
[82.60177612 246.54135132]
[82.08117676 231.55038452]
[81.56056976 216.55941772]
[81.03997040 201.56846619]
[80.51937103 186.57749939]
[79.99876404 171.58653259]
[79.47816467 156.59556580]
[71.56866455 143.85038757]
[58.36679077 136.72924805]
[45.16491318 129.60812378]
[31.96303749 122.48699951]
[18.76115990 115.36587524]
[9.69567776 114.03927612]
[5.39352131 108.00485992]
[-7.68277216 100.65567780]
[-20.75906563 93.30648804]
[-33.83536148 85.95729828]
[-49.65655899 85.94097900]
[-56.96073532 72.96028900]
[-70.03703308 65.61110687]
[-84.09086609 71.91949463]
[-98.99035645 68.77963257]
[-109.06484985 57.60069656]
[-110.60648346 42.81011581]
[-123.68277740 35.46092987]
[-136.75906372 28.11174202]
[-149.83535767 20.76255608]
[-162.91165161 13.41336918]
[-175.98794556 6.06418276]
[-189.06423950 -1.28500378]
[-202.14053345 -8.63419056]
[-217.40051270 -1.36822057]
[-233.82337952 -4.58780861]
[-244.98660278 -16.83237267]
[-246.64474487 -33.15177917]
[-259.84661865 -40.27290344]
[-273.10980225 -47.27919388]
[-286.43328857 -54.17011642]
[-299.75677490 -61.06103897]
[-313.08026123 -67.95196533]
[-328.89248657 -67.41917419]
[-336.64279175 -80.13853455]
[-349.96627808 -87.02945709]
[-363.28973389 -93.92037964]
[-376.61322021 -100.81130219]
[-389.93670654 -107.70222473]
[-401.77615356 -100.61427307]
[-415.46343994 -100.31140137]
[-427.41415405 -106.76575470]
[-434.55166626 -118.19394684]
[-435.09890747 -131.54837036]
[-448.30078125 -138.66949463]
[-464.66848755 -137.65455627]
[-473.50454712 -151.46961975]
[-465.71920776 -165.90292358]
[-449.32131958 -166.10671997]
[-441.17965698 -151.87136841]
[-427.97778320 -144.75024414]
[-413.42950439 -152.32786560]
[-397.06585693 -149.72436523]
[-385.35525513 -137.76869202]
[-383.04577637 -121.02571106]
[-369.72229004 -114.13478851]
[-356.39883423 -107.24386597]
[-343.07534790 -100.35294342]
[-329.75186157 -93.46202087]
[-314.89260864 -94.48769379]
[-306.18933105 -81.27544403]
[-292.86584473 -74.38452148]
[-279.54235840 -67.49359894]
[-266.21887207 -60.60267639]
[-258.81320190 -60.32186508]
[-252.72549438 -53.47478104]
[-239.52362061 -46.35365295]
[-228.06324768 -53.23114777]
[-214.59291077 -53.54339981]
[-202.63540649 -47.10159683]
[-195.37089539 -35.49727249]
[-194.79135132 -21.71048355]
[-181.71505737 -14.36129761]
[-168.63876343 -7.01211119]
[-155.56246948 0.33707520]
[-142.48617554 7.68626165]
[-129.40988159 15.03544807]
[-116.33358765 22.38463402]
[-103.25729370 29.73381996]
[-89.82132721 23.36100197]
[-75.03423309 26.15487480]
[-64.60575104 37.24992371]
[-62.68784332 52.53481293]
[-49.61154938 59.88399887]
[-34.72565842 59.37465668]
[-26.48617363 72.88100433]
[-13.40987968 80.23019409]
[-0.33358592 87.57938385]
[12.74270821 94.92856598]
[25.88228798 102.16399384]
[39.08416367 109.28512573]
[52.28604126 116.40625000]
[65.48791504 123.52738190]
[78.68979645 130.64849854]
[66.34136200 104.05088043]
[77.16341400 79.82186127]
[99.90064240 72.95363617]
[117.58423615 84.23120880]
[131.35365295 78.28115845]
[138.01193237 71.98750305]
[145.41406250 72.34963989]
[159.28468323 66.63946533]
[169.10038757 54.23130417]
[183.81481934 56.54104996]
[197.68542480 50.83087921]
[211.55604553 45.12070847]
[225.42665100 39.41053772]
[239.29727173 33.70036697]
[242.82138062 18.58876991]
[254.57681274 8.46012878]
[270.04336548 7.20911217]
[283.27386475 15.31676102]
[289.18087769 29.66551971]
[285.49304199 44.73799515]
[273.62841797 54.73851776]
[258.14920044 55.82167816]
[245.00744629 47.57098007]
[231.13682556 53.28115082]
[217.26622009 58.99132156]
[203.39559937 64.70149231]
[189.52497864 70.41166687]
[180.70140076 82.41139984]
[164.99485779 80.51007843]
[151.12423706 86.22025299]
[137.30371094 92.05058289]
[123.53428650 98.00063324]
[130.07954407 104.88757324]
[134.28099060 114.77394104]
[148.15161133 120.48411560]
[162.02221680 126.19428253]
[175.89283752 131.90444946]
[189.66302490 124.49392700]
[204.96441650 127.71903992]
[214.57217407 140.05699158]
[213.94978333 155.68218994]
[203.39114380 167.21687317]
[187.88171387 169.21473694]
[174.74456787 160.73243713]
[170.18266296 145.77507019]
[156.31205750 140.06489563]
[142.44143677 134.35472107]
[128.57081604 128.64456177]
[119.79621887 140.81034851]
[129.59226990 152.16979980]
[139.38832092 163.52926636]
[155.16612244 164.44393921]
[165.61338806 176.30270386]
[164.53195190 192.06994629]
[152.56341553 202.39125061]
[136.80848694 201.14317322]
[126.61428833 189.06617737]
[128.02886963 173.32531738]
[118.23281097 161.96585083]
[108.43675995 150.60639954]
[94.46913147 156.07496643]
[94.98973083 171.06593323]
[95.51033020 186.05690002]
[96.03093719 201.04785156]
[96.55153656 216.03881836]
[97.07213593 231.02978516]
[97.59273529 246.02075195]
[111.72740173 251.68917847]
[122.32984924 262.62115479]
[127.56312561 276.92263794]
[126.52055359 292.11584473]
[119.38275146 305.56838989]
[107.38639069 314.94961548]
[92.60990906 318.63412476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 173]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[13 106]
[14 105]
[15 104]
[16 103]
[17 102]
[19 101]
[20 100]
[21 99]
[22 98]
[24 96]
[25 95]
[29 91]
[30 90]
[31 89]
[32 88]
[33 87]
[34 86]
[35 85]
[36 84]
[40 79]
[41 78]
[42 76]
[43 75]
[44 74]
[45 73]
[47 71]
[48 70]
[49 69]
[50 68]
[51 67]
[56 63]
[57 62]
[110 138]
[111 137]
[113 136]
[114 135]
[116 133]
[117 132]
[118 131]
[119 130]
[120 129]
[140 154]
[141 153]
[142 152]
[143 151]
[155 166]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
