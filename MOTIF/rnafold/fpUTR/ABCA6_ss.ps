%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCUGGAGUAGGCACCCAUUUAAAGAAAAAAUGAAGAAGCAGCAAUAAAGAAGUUGUAAUCGUUACCUAGACAAACAGAGAACUGGUUUUGACAGUGUUUCUAGAGUGCUUUUUAUUAUUUUCCUGACAGUUGUGUUCCACCAUGAUUACUUUCUCCUUCAGCGAAUAGGCUAA\
) } def
/len { sequence length } bind def

/coor [
[239.30325317 589.29913330]
[251.84788513 580.60455322]
[249.44848633 565.79772949]
[247.04908752 550.99084473]
[244.64970398 536.18402100]
[242.25030518 521.37713623]
[239.85092163 506.57031250]
[237.45152283 491.76345825]
[235.05213928 476.95660400]
[225.37861633 465.63085938]
[230.80882263 450.77072144]
[228.40942383 435.96386719]
[226.01002502 421.15701294]
[213.99681091 420.43096924]
[202.35816956 417.33944702]
[191.55545044 412.00207520]
[182.01741028 404.62759399]
[174.12326050 395.50564575]
[168.18751526 384.99536133]
[164.44754028 373.51132202]
[163.05403137 361.50717163]
[164.06489563 349.45764160]
[167.44294739 337.83984375]
[173.05718994 327.11431885]
[180.68791199 317.70690918]
[190.03530884 309.99160767]
[183.32104492 296.57821655]
[176.60678101 283.16485596]
[169.89253235 269.75146484]
[163.17826843 256.33807373]
[148.30197144 255.58871460]
[135.71441650 247.43951416]
[128.85058594 233.99504089]
[129.64302063 218.82043457]
[137.97894287 205.99623108]
[131.26467896 192.58285522]
[124.55042267 179.16947937]
[117.83616638 165.75610352]
[111.12190247 152.34272766]
[104.40764618 138.92933655]
[97.69338989 125.51596069]
[90.97913361 112.10258484]
[79.21597290 102.79516602]
[64.61801910 99.34557343]
[50.02005768 95.89598846]
[35.42210007 92.44639587]
[20.82414436 88.99681091]
[7.51174784 97.51477051]
[-7.90650797 94.04303741]
[-16.28324318 80.64132690]
[-12.64869118 65.26063538]
[0.84083378 57.02605820]
[16.18223572 60.82302094]
[24.27373314 74.39885712]
[38.87168884 77.84844208]
[53.46964645 81.29802704]
[68.06760406 84.74761963]
[82.66555786 88.19720459]
[86.55000305 81.78150940]
[73.71874237 74.01242065]
[81.48804474 61.18128967]
[94.31887817 68.95012665]
[98.20331573 62.53442764]
[88.38040924 51.19818497]
[78.55749512 39.86194229]
[62.72229385 37.28784180]
[54.98764420 23.23242569]
[61.28690720 8.47780418]
[76.78782654 4.34246111]
[89.59942627 13.99867725]
[89.89373779 30.03903008]
[99.71665192 41.37527466]
[109.53955841 52.71151733]
[116.67661285 50.40662766]
[112.06704712 36.13245773]
[126.34128571 31.52311516]
[130.95071411 45.79684448]
[138.08775330 43.49195099]
[139.42472839 28.55165291]
[140.76170349 13.61135578]
[142.09866333 -1.32894254]
[143.43563843 -16.26924133]
[144.63922119 -31.22087669]
[145.70930481 -46.18265915]
[146.77938843 -61.14443970]
[147.84947205 -76.10622406]
[136.49285889 -86.85615540]
[134.75445557 -102.39681244]
[143.45512390 -115.39036560]
[158.48664856 -119.70166779]
[172.75160217 -113.29504395]
[179.51452637 -99.19551086]
[175.58216858 -84.06043243]
[162.81126404 -75.03613281]
[161.74118042 -60.07435226]
[160.67108154 -45.11257172]
[159.60099792 -30.15078926]
[162.26876831 -23.23225975]
[158.37593079 -14.93227005]
[157.03897095 0.00802770]
[155.70199585 14.94832611]
[154.36502075 29.88862419]
[153.02806091 44.82892227]
[155.91099548 71.82459259]
[148.29403687 93.76589203]
[134.01609802 107.25155640]
[117.80580139 110.87886047]
[104.39250946 105.38832855]
[111.10676575 118.80170441]
[117.82102966 132.21508789]
[124.53528595 145.62846375]
[131.24954224 159.04183960]
[137.96380615 172.45521545]
[144.67805481 185.86860657]
[151.39231873 199.28198242]
[166.65412903 200.29399109]
[179.27693176 208.75340271]
[185.92645264 222.30517578]
[184.90676880 237.26565552]
[176.59164429 249.62382507]
[183.30590820 263.03720093]
[190.02015686 276.45059204]
[196.73442078 289.86395264]
[203.44868469 303.27734375]
[223.92149353 299.85128784]
[244.32992554 303.49511719]
[262.30645752 313.76818848]
[275.77169800 329.46182251]
[283.17492676 348.74151611]
[283.67269897 369.36145020]
[298.13821411 373.32986450]
[312.60375977 377.29830933]
[327.06927490 381.26672363]
[341.53482056 385.23513794]
[356.00033569 389.20358276]
[370.46588135 393.17199707]
[384.07382202 385.13461304]
[399.35833740 389.15444946]
[407.25140381 402.84661865]
[403.07019043 418.08776855]
[389.29534912 425.83563232]
[374.09924316 421.49353027]
[366.49743652 407.63754272]
[352.03192139 403.66909790]
[337.56637573 399.70068359]
[323.10086060 395.73226929]
[308.63531494 391.76382446]
[294.16979980 387.79541016]
[279.70425415 383.82696533]
[274.70486450 393.39596558]
[268.08380127 401.92361450]
[260.05200195 409.13818359]
[250.86546326 414.80975342]
[240.81687927 418.75762939]
[243.21627808 433.56448364]
[245.61567688 448.37133789]
[255.46081543 460.75616455]
[249.85899353 474.55718994]
[252.25837708 489.36404419]
[254.65777588 504.17089844]
[257.05715942 518.97778320]
[259.45654297 533.78460693]
[261.85595703 548.59149170]
[264.25534058 563.39831543]
[266.65472412 578.20520020]
[281.30313110 582.49322510]
[292.63461304 592.71868896]
[298.39935303 606.85125732]
[297.45269775 622.08502197]
[289.98263550 635.39520264]
[277.47235107 644.13909912]
[262.40576172 646.58056641]
[247.77435303 642.23486328]
[236.48321533 631.96490479]
[230.77420044 617.80969238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 165]
[3 164]
[4 163]
[5 162]
[6 161]
[7 160]
[8 159]
[9 158]
[11 156]
[12 155]
[13 154]
[26 124]
[27 123]
[28 122]
[29 121]
[30 120]
[35 115]
[36 114]
[37 113]
[38 112]
[39 111]
[40 110]
[41 109]
[42 108]
[43 58]
[44 57]
[45 56]
[46 55]
[47 54]
[63 73]
[64 72]
[65 71]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 97]
[84 96]
[85 95]
[86 94]
[130 149]
[131 148]
[132 147]
[133 146]
[134 145]
[135 144]
[136 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
