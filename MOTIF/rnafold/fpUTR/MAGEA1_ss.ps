%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAGAAGCGAGGUUUCCAUUCUGAGGGACGGCGUAGAGUUCGGCCGAAGGAACCUGACCCAGGCUCUGUGAGGAGGCAAGGUUUUCAGGGGACAGGCCAACCCAGAGGACAGGAUUCCCUGGAGGCCACAGAGGAGCACCAAGGAGAAGAUCUGCCUGUGGGUCUUCAUUGCCCAGCUCCUGCCCACACUCCUGCCUGCUGCCCUGACGAGAGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[-192.73493958 415.52673340]
[-197.06880188 424.43099976]
[-202.97581482 432.37161255]
[-210.24900818 439.07418823]
[-218.63426208 444.30767822]
[-227.83917236 447.89227295]
[-237.54327393 449.70565796]
[-247.40916443 449.68707275]
[-257.09423828 447.83947754]
[-266.26260376 444.22927856]
[-274.59674072 438.98394775]
[-281.80844116 432.28762817]
[-294.27307129 440.63226318]
[-306.73770142 448.97686768]
[-319.20233154 457.32150269]
[-331.66699219 465.66613770]
[-337.05212402 473.03503418]
[-344.36865234 474.03933716]
[-356.95062256 482.20593262]
[-362.44000244 489.49752808]
[-369.77001953 490.39770508]
[-382.46682739 498.38464355]
[-395.16363525 506.37158203]
[-394.68658447 521.65948486]
[-401.87829590 535.04516602]
[-414.71914673 542.98107910]
[-429.70788574 543.42120361]
[-442.81613159 536.34735107]
[-455.51293945 544.33428955]
[-468.20974731 552.32122803]
[-480.90655518 560.30816650]
[-481.80810547 575.79901123]
[-491.66882324 587.78009033]
[-506.69699097 591.64447021]
[-521.11407471 585.90612793]
[-529.37628174 572.77160645]
[-528.30676270 557.29144287]
[-518.31665039 545.41802979]
[-503.24743652 541.71697998]
[-488.89349365 547.61132812]
[-476.19668579 539.62438965]
[-463.49987793 531.63751221]
[-450.80307007 523.65057373]
[-451.50402832 508.77191162]
[-444.61764526 495.45147705]
[-431.90441895 487.31265259]
[-416.72467041 486.62557983]
[-403.15057373 493.67477417]
[-390.45376587 485.68783569]
[-377.75695801 477.70089722]
[-365.11724854 469.62393188]
[-352.53524780 461.45733643]
[-340.01162720 453.20150757]
[-327.54696655 444.85687256]
[-315.08233643 436.51223755]
[-302.61770630 428.16760254]
[-290.15307617 419.82299805]
[-295.33792114 400.01593018]
[-292.59899902 379.69595337]
[-282.32559204 361.91772461]
[-266.04122925 349.36251831]
[-246.17797852 343.93353271]
[-225.71315002 346.46771240]
[-207.72299194 356.60656738]
[-196.42491150 346.73977661]
[-185.12684631 336.87298584]
[-173.82876587 327.00622559]
[-162.53068542 317.13943481]
[-151.23262024 307.27264404]
[-140.00495911 297.32580566]
[-128.84828186 287.29940796]
[-124.55381775 273.03732300]
[-109.11772919 269.56777954]
[-97.96105194 259.54138184]
[-86.80436707 249.51499939]
[-82.26844025 232.55911255]
[-64.21679688 228.90606689]
[-53.20376968 218.72210693]
[-42.19074249 208.53813171]
[-31.17771339 198.35415649]
[-28.40292549 191.51016235]
[-19.93500137 188.10507202]
[-8.77832222 178.07868958]
[-8.49108124 175.29721069]
[-7.08883905 172.46142578]
[-4.54524136 169.99508667]
[-0.98715317 168.32373047]
[3.30911422 167.82171631]
[15.01756954 158.44557190]
[26.72602463 149.06942749]
[38.43448257 139.69329834]
[50.14293671 130.31715393]
[61.85139084 120.94100189]
[56.48360825 100.40691376]
[61.46646500 79.77603912]
[75.61475372 63.95555878]
[95.56323242 56.70846558]
[96.62848663 41.74633789]
[97.69374084 26.78421211]
[98.75898743 11.82208538]
[91.17631531 4.03683662]
[89.16729736 -6.42014933]
[93.15752411 -16.05533791]
[101.60832214 -21.78363800]
[103.09847260 -36.70943451]
[104.58862305 -51.63523483]
[106.07877350 -66.56103516]
[103.81848907 -75.40362549]
[107.69766235 -81.68788147]
[109.39982605 -96.59098816]
[111.10199738 -111.49409485]
[101.07205963 -123.70785522]
[102.69938660 -139.42814636]
[115.01850128 -149.32838440]
[130.72070312 -147.53494263]
[140.49014282 -135.11184692]
[138.53080750 -119.42948151]
[126.00510406 -109.79193115]
[124.30293274 -94.88881683]
[122.60076904 -79.98571014]
[121.00457001 -65.07088470]
[119.51441956 -50.14508438]
[118.02426910 -35.21928787]
[116.53411865 -20.29348755]
[125.75373077 -3.29202676]
[113.72111511 12.88733959]
[112.65586090 27.84946632]
[111.59060669 42.81159210]
[110.52535248 57.77371979]
[118.28852081 60.51111603]
[125.39733887 64.66139221]
[131.59745789 70.07605743]
[136.66705322 76.56137848]
[140.42472839 83.88530731]
[155.10720825 80.81531525]
[169.78968811 77.74532318]
[184.47216797 74.67533112]
[199.15463257 71.60533905]
[213.83711243 68.53534698]
[217.57452393 53.77753448]
[227.30917358 42.15326691]
[241.06919861 35.93376541]
[256.10330200 36.30381775]
[269.43084717 43.13648605]
[278.43289185 55.02887726]
[293.11535645 51.95888519]
[305.03985596 41.56094360]
[319.08126831 46.52961731]
[333.76373291 43.45962524]
[348.44622803 40.38963318]
[363.12869263 37.31964111]
[377.81118774 34.24964905]
[392.49365234 31.17965889]
[407.17614746 28.10966682]
[421.85861206 25.03967476]
[430.29931641 11.67816925]
[445.73400879 8.28019238]
[459.00552368 16.86170387]
[462.24011230 32.33144379]
[453.51876831 45.51149368]
[438.01571655 48.58235931]
[424.92858887 39.72215271]
[410.24612427 42.79214478]
[395.56365967 45.86213684]
[380.88116455 48.93212891]
[366.19869995 52.00212097]
[351.51620483 55.07211304]
[336.83374023 58.14210510]
[322.15124512 61.21209717]
[311.27697754 71.39044952]
[296.18536377 66.64136505]
[281.50286865 69.71135712]
[278.01989746 84.21426392]
[268.54650879 95.81443787]
[254.92016602 102.17716217]
[239.82096863 101.99189758]
[226.24438477 95.24182892]
[216.90710449 83.21782684]
[202.22462463 86.28781891]
[187.54216003 89.35781097]
[172.85968018 92.42780304]
[158.17720032 95.49779510]
[143.49472046 98.56778717]
[142.07968140 111.09695435]
[137.13217163 122.69456482]
[129.06753540 132.38703918]
[118.56276703 139.36071777]
[106.49970245 143.03016663]
[93.89101410 143.08737183]
[81.79515076 139.52752686]
[71.22753906 132.64945984]
[59.51908112 142.02560425]
[47.81062317 151.40174866]
[36.10216904 160.77789307]
[24.39371300 170.15403748]
[12.68525791 179.53018188]
[1.24806809 189.23536682]
[-9.90861130 199.26174927]
[-20.99374580 209.36718750]
[-32.00677490 219.55116272]
[-43.01980209 229.73512268]
[-54.03282928 239.91909790]
[-55.31436920 252.74861145]
[-64.69061279 261.00402832]
[-76.77797699 260.67166138]
[-87.93466187 270.69805908]
[-99.09133911 280.72445679]
[-104.18379974 295.70367432]
[-118.82188416 298.45608521]
[-129.97856140 308.48248291]
[-134.26541138 316.53997803]
[-141.36582947 318.57070923]
[-152.66390991 328.43750000]
[-163.96197510 338.30429077]
[-175.26005554 348.17108154]
[-186.55813599 358.03787231]
[-197.85620117 367.90463257]
[-193.26783752 376.71530151]
[-190.39561462 386.21835327]
[-189.33711243 396.08319092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 57]
[13 56]
[14 55]
[15 54]
[16 53]
[18 52]
[19 51]
[21 50]
[22 49]
[23 48]
[28 43]
[29 42]
[30 41]
[31 40]
[64 217]
[65 216]
[66 215]
[67 214]
[68 213]
[69 212]
[70 210]
[71 209]
[73 207]
[74 206]
[75 205]
[77 202]
[78 201]
[79 200]
[80 199]
[82 198]
[83 197]
[88 196]
[89 195]
[90 194]
[91 193]
[92 192]
[93 191]
[97 129]
[98 128]
[99 127]
[100 126]
[104 124]
[105 123]
[106 122]
[107 121]
[109 120]
[110 119]
[111 118]
[134 183]
[135 182]
[136 181]
[137 180]
[138 179]
[139 178]
[145 172]
[146 171]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
