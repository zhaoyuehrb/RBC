%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C11orf98)
} def

/sequence { (\
GGCGCUGAGCGGAAGUACGGACCGUGAACUGGAGUGGAAUCGCGACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.217085758 ubox
1 30 0.025808187 ubox
1 41 0.043513819 ubox
1 47 0.255668074 ubox
2 10 0.260042201 ubox
2 16 0.028363808 ubox
2 22 0.222390292 ubox
2 25 0.101522800 ubox
2 29 0.027070251 ubox
2 35 0.033492350 ubox
2 40 0.041926078 ubox
2 43 0.452736326 ubox
2 46 0.299954144 ubox
3 9 0.260982189 ubox
3 11 0.295069083 ubox
3 15 0.028484309 ubox
3 19 0.036762529 ubox
3 24 0.104766415 ubox
3 26 0.087870092 ubox
3 31 0.059270591 ubox
3 34 0.034600612 ubox
3 36 0.167160156 ubox
3 42 0.453081639 ubox
3 44 0.404644140 ubox
4 10 0.299119334 ubox
4 16 0.084670747 ubox
4 18 0.033980003 ubox
4 23 0.103040889 ubox
4 25 0.088762945 ubox
4 30 0.053999531 ubox
4 35 0.169618868 ubox
4 41 0.448297219 ubox
4 43 0.406662566 ubox
5 9 0.296987725 ubox
5 12 0.022794363 ubox
5 15 0.089880671 ubox
5 20 0.480005429 ubox
5 24 0.088575450 ubox
5 32 0.048304752 ubox
5 34 0.171633122 ubox
5 37 0.114212602 ubox
5 42 0.400683803 ubox
6 11 0.021539142 ubox
6 14 0.089679667 ubox
6 17 0.016226681 ubox
6 19 0.482033624 ubox
6 24 0.007100430 ubox
6 26 0.009018014 ubox
6 31 0.047425284 ubox
6 33 0.167875930 ubox
6 36 0.110634243 ubox
6 42 0.066645741 ubox
6 44 0.014462201 ubox
7 16 0.013342471 ubox
7 18 0.477076144 ubox
7 23 0.019770404 ubox
7 30 0.017873263 ubox
7 35 0.052770618 ubox
7 41 0.316013434 ubox
7 43 0.005617873 ubox
8 30 0.041588054 ubox
8 40 0.313142593 ubox
8 47 0.037137960 ubox
9 16 0.481003270 ubox
9 25 0.234330737 ubox
9 29 0.037042016 ubox
9 35 0.517460446 ubox
9 43 0.401420608 ubox
9 46 0.040101803 ubox
10 15 0.488780476 ubox
10 19 0.170851652 ubox
10 24 0.240648223 ubox
10 26 0.004483961 ubox
10 31 0.133527507 ubox
10 34 0.519648116 ubox
10 36 0.132665455 ubox
10 42 0.402068424 ubox
10 44 0.048277608 ubox
11 18 0.185626976 ubox
11 23 0.242061528 ubox
11 25 0.003958868 ubox
11 30 0.136236444 ubox
11 35 0.131131317 ubox
11 41 0.401537170 ubox
11 43 0.051400809 ubox
11 47 0.011524192 ubox
12 22 0.241316915 ubox
12 29 0.134668121 ubox
12 40 0.369868515 ubox
12 41 0.065808750 ubox
12 46 0.014170701 ubox
13 40 0.069208135 ubox
14 30 0.536064519 ubox
14 47 0.134646494 ubox
15 22 0.074116652 ubox
15 29 0.539177343 ubox
15 35 0.015527114 ubox
15 40 0.018078021 ubox
15 43 0.014818457 ubox
15 46 0.149454978 ubox
16 21 0.072196705 ubox
16 26 0.243092055 ubox
16 28 0.495493187 ubox
16 31 0.004671083 ubox
16 34 0.008757054 ubox
16 36 0.384684656 ubox
16 39 0.021275755 ubox
16 42 0.013232202 ubox
16 45 0.148844068 ubox
17 25 0.411322000 ubox
17 30 0.003667335 ubox
17 35 0.389465863 ubox
18 24 0.423773626 ubox
18 26 0.367085382 ubox
18 31 0.136107735 ubox
18 34 0.389280657 ubox
18 36 0.149246683 ubox
18 42 0.071189010 ubox
18 44 0.118928517 ubox
19 23 0.396561545 ubox
19 25 0.347956977 ubox
19 30 0.139251538 ubox
19 35 0.147949420 ubox
19 41 0.071624242 ubox
19 43 0.118854676 ubox
19 47 0.073756384 ubox
20 29 0.139355252 ubox
20 40 0.066061951 ubox
20 41 0.121536928 ubox
20 46 0.082653543 ubox
21 35 0.009528908 ubox
21 40 0.116385277 ubox
22 32 0.423396229 ubox
22 34 0.008505376 ubox
22 37 0.152282727 ubox
23 31 0.424520428 ubox
23 36 0.152735488 ubox
23 42 0.010306906 ubox
23 44 0.556488766 ubox
24 30 0.353254285 ubox
24 35 0.132339639 ubox
24 40 0.010112249 ubox
24 41 0.011102776 ubox
24 43 0.590470038 ubox
24 46 0.019848616 ubox
25 31 0.008862006 ubox
25 34 0.116088149 ubox
25 36 0.007302392 ubox
25 39 0.012072660 ubox
25 42 0.590306915 ubox
25 45 0.019505631 ubox
26 30 0.007905947 ubox
26 35 0.008294696 ubox
26 41 0.590788886 ubox
26 43 0.004436115 ubox
27 40 0.574696452 ubox
28 35 0.214045124 ubox
29 34 0.214984674 ubox
29 37 0.428033959 ubox
30 36 0.418821125 ubox
30 42 0.007975461 ubox
30 44 0.043196026 ubox
31 35 0.195584051 ubox
31 41 0.016153559 ubox
31 43 0.053833395 ubox
31 47 0.084250345 ubox
32 40 0.011706907 ubox
32 41 0.141326637 ubox
32 46 0.096494049 ubox
33 40 0.139874416 ubox
33 47 0.062903676 ubox
34 40 0.010918047 ubox
34 43 0.210272102 ubox
34 46 0.068762666 ubox
35 39 0.012403558 ubox
35 42 0.210308036 ubox
35 44 0.038042781 ubox
35 45 0.060979165 ubox
36 41 0.209832698 ubox
36 43 0.061238756 ubox
36 47 0.009959122 ubox
37 46 0.015377773 ubox
9 43 0.9500000 lbox
10 42 0.9500000 lbox
11 41 0.9500000 lbox
12 40 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
showpage
end
%%EOF
