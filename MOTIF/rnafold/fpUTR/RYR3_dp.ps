%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RYR3)
} def

/sequence { (\
GCAGCAGCAGUCAGCGCACGCCGAGCGGCUGCCGGGGGAAGCAGAGGCGCCGGAGGCUGGGGCACCGCCGACGCCUCGGGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.179216472 ubox
1 11 0.007654325 ubox
1 15 0.037778643 ubox
1 17 0.133534977 ubox
1 21 0.074161680 ubox
1 26 0.064163928 ubox
1 29 0.006139168 ubox
1 32 0.839086324 ubox
1 42 0.153512427 ubox
1 48 0.007131294 ubox
1 83 0.026713630 ubox
2 7 0.179096463 ubox
2 10 0.009094478 ubox
2 14 0.037777800 ubox
2 16 0.133214902 ubox
2 20 0.074423260 ubox
2 25 0.064172031 ubox
2 28 0.006964115 ubox
2 31 0.842609306 ubox
2 41 0.153389460 ubox
2 47 0.007137646 ubox
2 82 0.026771186 ubox
3 30 0.842494313 ubox
4 11 0.036737066 ubox
4 15 0.140083276 ubox
4 17 0.124892460 ubox
4 21 0.058834832 ubox
4 26 0.030354914 ubox
4 29 0.842669608 ubox
4 32 0.390279732 ubox
4 42 0.086014177 ubox
4 83 0.009801389 ubox
5 10 0.037891614 ubox
5 14 0.140138566 ubox
5 16 0.124636375 ubox
5 20 0.058748906 ubox
5 25 0.030381947 ubox
5 28 0.839599077 ubox
5 31 0.391625173 ubox
5 41 0.085976372 ubox
5 82 0.009813318 ubox
6 30 0.391568133 ubox
7 15 0.147218170 ubox
7 17 0.070381766 ubox
7 21 0.031968472 ubox
7 26 0.824111895 ubox
7 29 0.391654850 ubox
7 32 0.167277099 ubox
7 42 0.123829555 ubox
7 48 0.005548070 ubox
7 83 0.003479849 ubox
8 14 0.147288107 ubox
8 16 0.070423102 ubox
8 20 0.031927874 ubox
8 25 0.824819337 ubox
8 28 0.390592192 ubox
8 31 0.167877317 ubox
8 41 0.123721803 ubox
8 47 0.005554175 ubox
8 82 0.003484420 ubox
9 30 0.167899977 ubox
10 17 0.023369225 ubox
10 19 0.028693043 ubox
10 21 0.062811315 ubox
10 26 0.303804487 ubox
10 29 0.167955060 ubox
10 32 0.014078331 ubox
10 42 0.014141882 ubox
10 48 0.003979511 ubox
11 16 0.022100971 ubox
11 18 0.027147205 ubox
11 20 0.062299526 ubox
11 24 0.859272170 ubox
11 25 0.181475195 ubox
11 28 0.167727152 ubox
11 35 0.059110788 ubox
11 36 0.038617394 ubox
11 37 0.059249791 ubox
11 38 0.102847657 ubox
11 39 0.037348466 ubox
11 41 0.012775212 ubox
11 45 0.122187429 ubox
11 47 0.003977842 ubox
12 23 0.906136275 ubox
12 27 0.160795819 ubox
12 31 0.023977465 ubox
12 34 0.061750146 ubox
12 35 0.040735200 ubox
12 36 0.063604739 ubox
12 37 0.108403708 ubox
12 38 0.038513734 ubox
12 44 0.130269293 ubox
12 46 0.004455803 ubox
13 30 0.024393864 ubox
14 21 0.924038111 ubox
14 26 0.162069821 ubox
14 29 0.024456461 ubox
14 32 0.066268262 ubox
14 42 0.161638922 ubox
14 83 0.003777950 ubox
15 20 0.923105421 ubox
15 23 0.034929391 ubox
15 25 0.162070936 ubox
15 27 0.067584083 ubox
15 28 0.019396242 ubox
15 31 0.066277533 ubox
15 34 0.112967855 ubox
15 41 0.161800867 ubox
15 82 0.003781944 ubox
16 22 0.035382294 ubox
16 26 0.080954717 ubox
16 29 0.061753765 ubox
16 30 0.030922947 ubox
16 32 0.134281228 ubox
16 33 0.080906065 ubox
16 42 0.036863649 ubox
16 83 0.006249926 ubox
17 25 0.080945686 ubox
17 28 0.063618410 ubox
17 31 0.156100070 ubox
17 41 0.036847778 ubox
17 82 0.006255368 ubox
18 30 0.155145118 ubox
19 27 0.144203795 ubox
19 31 0.005929954 ubox
19 49 0.043686181 ubox
20 26 0.155829615 ubox
20 29 0.164131269 ubox
20 42 0.004444683 ubox
20 48 0.044542397 ubox
21 25 0.154721256 ubox
21 28 0.165392114 ubox
21 35 0.170995238 ubox
21 36 0.041015313 ubox
21 37 0.012798119 ubox
21 38 0.014484904 ubox
21 41 0.003998904 ubox
21 47 0.044545721 ubox
21 79 0.003312136 ubox
22 27 0.165205522 ubox
22 34 0.171265926 ubox
22 35 0.040648087 ubox
22 36 0.012610378 ubox
22 37 0.014534537 ubox
22 46 0.044532621 ubox
22 78 0.003328920 ubox
23 33 0.171299458 ubox
25 32 0.175862945 ubox
25 42 0.027611630 ubox
25 48 0.005963854 ubox
26 31 0.175628803 ubox
26 34 0.018903459 ubox
26 41 0.027644609 ubox
26 47 0.005976934 ubox
26 52 0.004235776 ubox
27 33 0.019051523 ubox
27 51 0.004586746 ubox
27 84 0.167327104 ubox
28 32 0.018747248 ubox
28 42 0.064615255 ubox
28 50 0.004598025 ubox
28 83 0.176928980 ubox
29 36 0.005865458 ubox
29 37 0.007236208 ubox
29 38 0.025873641 ubox
29 41 0.064678736 ubox
29 44 0.090696343 ubox
29 49 0.004498605 ubox
29 82 0.176974875 ubox
30 35 0.005837238 ubox
30 36 0.007275467 ubox
30 37 0.025583327 ubox
30 40 0.057828498 ubox
30 43 0.100586391 ubox
30 49 0.005276386 ubox
30 81 0.176419519 ubox
31 42 0.102705838 ubox
31 48 0.009146155 ubox
32 38 0.076443445 ubox
32 41 0.102710866 ubox
32 47 0.009209525 ubox
32 79 0.177039791 ubox
32 80 0.007790793 ubox
33 37 0.087340184 ubox
33 46 0.014700678 ubox
33 78 0.177260732 ubox
33 79 0.008382837 ubox
34 77 0.176039363 ubox
34 84 0.031967728 ubox
35 75 0.008617199 ubox
35 76 0.175123935 ubox
35 77 0.010762072 ubox
35 83 0.032047982 ubox
35 84 0.044490811 ubox
36 74 0.008622464 ubox
36 75 0.174918117 ubox
36 76 0.012712947 ubox
36 83 0.044899852 ubox
36 84 0.078366975 ubox
37 51 0.008892780 ubox
37 74 0.173967573 ubox
37 75 0.014464703 ubox
37 83 0.079137282 ubox
37 84 0.117272994 ubox
38 50 0.017880724 ubox
38 74 0.015894443 ubox
38 83 0.118698633 ubox
41 48 0.089803210 ubox
41 50 0.078518760 ubox
41 68 0.107032682 ubox
41 74 0.006580111 ubox
41 83 0.023216441 ubox
42 47 0.089764918 ubox
42 49 0.078643452 ubox
42 67 0.107058409 ubox
42 73 0.008930432 ubox
42 82 0.023095274 ubox
44 77 0.163002055 ubox
45 76 0.163584046 ubox
46 66 0.049359621 ubox
46 69 0.022133823 ubox
46 75 0.163817791 ubox
46 84 0.960922644 ubox
47 63 0.114880151 ubox
47 65 0.048691353 ubox
47 68 0.022125397 ubox
47 74 0.163879485 ubox
47 83 0.969271181 ubox
48 62 0.115159706 ubox
48 67 0.022066687 ubox
48 73 0.163788220 ubox
48 82 0.967385377 ubox
49 57 0.010910590 ubox
49 63 0.049266492 ubox
49 66 0.016581066 ubox
49 72 0.162676302 ubox
49 74 0.009081397 ubox
50 56 0.010937681 ubox
50 60 0.116122176 ubox
50 61 0.009902489 ubox
50 62 0.049254988 ubox
50 73 0.008523516 ubox
50 79 0.052590698 ubox
50 80 0.967468337 ubox
51 55 0.010858721 ubox
51 59 0.116159596 ubox
51 60 0.010884155 ubox
51 61 0.048984261 ubox
51 67 0.004165182 ubox
51 70 0.159040220 ubox
51 73 0.116557914 ubox
51 78 0.053022290 ubox
51 79 0.968647582 ubox
52 58 0.115438620 ubox
52 66 0.005053363 ubox
52 69 0.158330348 ubox
52 72 0.122082946 ubox
52 77 0.039762924 ubox
53 57 0.112994369 ubox
53 65 0.005220460 ubox
53 68 0.157844644 ubox
53 76 0.017218623 ubox
53 77 0.968853760 ubox
54 76 0.970381378 ubox
55 66 0.150230440 ubox
55 69 0.128415597 ubox
55 75 0.970679546 ubox
56 63 0.031506061 ubox
56 65 0.150007795 ubox
56 68 0.128718058 ubox
56 74 0.970682186 ubox
57 62 0.033250920 ubox
57 67 0.126070158 ubox
57 73 0.967763183 ubox
58 64 0.083855255 ubox
58 67 0.080851997 ubox
58 70 0.101923727 ubox
58 73 0.057943843 ubox
59 63 0.082942738 ubox
59 66 0.150727415 ubox
59 69 0.124667317 ubox
59 72 0.275443755 ubox
60 65 0.150701968 ubox
60 66 0.010125647 ubox
60 68 0.124182588 ubox
60 69 0.168401482 ubox
61 65 0.010644424 ubox
61 68 0.167456606 ubox
61 69 0.944894493 ubox
62 68 0.945441308 ubox
63 67 0.938787244 ubox
66 73 0.003639513 ubox
67 72 0.005256589 ubox
68 79 0.003527388 ubox
69 78 0.003624579 ubox
70 77 0.003626731 ubox
71 76 0.003267868 ubox
78 84 0.010773780 ubox
79 83 0.010680009 ubox
1 32 0.9500000 lbox
2 31 0.9500000 lbox
3 30 0.9500000 lbox
4 29 0.9500000 lbox
5 28 0.9500000 lbox
7 26 0.9500000 lbox
8 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
46 84 0.9500000 lbox
47 83 0.9500000 lbox
48 82 0.9500000 lbox
50 80 0.9500000 lbox
51 79 0.9500000 lbox
53 77 0.9500000 lbox
54 76 0.9500000 lbox
55 75 0.9500000 lbox
56 74 0.9500000 lbox
57 73 0.9500000 lbox
61 69 0.9500000 lbox
62 68 0.9500000 lbox
63 67 0.9500000 lbox
showpage
end
%%EOF
