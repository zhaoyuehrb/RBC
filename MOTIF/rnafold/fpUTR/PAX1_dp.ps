%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PAX1)
} def

/sequence { (\
AAAUUGAUUCCCGCACGCUGCAGCCUCCCGGUCAGACGAAUUUCUCCCAAUCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.014382060 ubox
1 42 0.010120116 ubox
1 43 0.071726976 ubox
2 8 0.016695654 ubox
2 9 0.025037105 ubox
2 41 0.012159907 ubox
2 42 0.091004441 ubox
2 43 0.012360816 ubox
3 8 0.021884075 ubox
3 32 0.010291027 ubox
3 41 0.094831487 ubox
3 42 0.010180962 ubox
3 51 0.445493093 ubox
4 23 0.010364510 ubox
4 31 0.010699803 ubox
4 35 0.115325136 ubox
4 36 0.014832474 ubox
4 39 0.039805977 ubox
4 40 0.094098185 ubox
4 50 0.475729637 ubox
4 54 0.217331099 ubox
5 13 0.069175690 ubox
5 15 0.081112333 ubox
5 17 0.010611003 ubox
5 22 0.014009309 ubox
5 30 0.010962445 ubox
5 34 0.173587601 ubox
5 35 0.013213351 ubox
5 38 0.044106696 ubox
5 39 0.091402261 ubox
5 49 0.488414350 ubox
5 53 0.334402180 ubox
6 12 0.101730927 ubox
6 14 0.091622512 ubox
6 16 0.015699346 ubox
6 21 0.014102722 ubox
6 27 0.059074618 ubox
6 29 0.011395265 ubox
6 33 0.183026808 ubox
6 37 0.047913361 ubox
6 42 0.190282001 ubox
6 43 0.015294697 ubox
6 44 0.080845462 ubox
6 46 0.064289217 ubox
6 48 0.488609433 ubox
6 52 0.382118667 ubox
7 26 0.057982551 ubox
7 32 0.180289349 ubox
7 41 0.209117918 ubox
7 42 0.014243300 ubox
7 43 0.079202161 ubox
7 45 0.063338982 ubox
7 51 0.381624305 ubox
8 23 0.009213655 ubox
8 31 0.091542709 ubox
8 35 0.014610174 ubox
8 36 0.062751996 ubox
8 39 0.006801739 ubox
8 40 0.213008638 ubox
8 50 0.376999472 ubox
9 22 0.011820137 ubox
9 30 0.073376310 ubox
9 31 0.013827128 ubox
9 34 0.015984816 ubox
9 35 0.061741954 ubox
9 36 0.036281414 ubox
9 38 0.004257275 ubox
9 39 0.213955856 ubox
9 49 0.341822574 ubox
9 54 0.005681008 ubox
10 30 0.019117323 ubox
10 31 0.046356025 ubox
10 35 0.039102046 ubox
10 38 0.203234606 ubox
10 53 0.008888184 ubox
10 54 0.034524330 ubox
11 30 0.045840986 ubox
11 31 0.216132400 ubox
11 53 0.034217750 ubox
11 54 0.198175363 ubox
12 20 0.010586734 ubox
12 30 0.219157996 ubox
12 38 0.071179345 ubox
12 53 0.201532901 ubox
13 19 0.008793496 ubox
13 21 0.386564995 ubox
13 24 0.167847773 ubox
13 29 0.217031309 ubox
13 32 0.010618255 ubox
13 37 0.073780662 ubox
13 52 0.195639661 ubox
14 20 0.386985167 ubox
14 23 0.168325157 ubox
14 31 0.010801238 ubox
15 19 0.313633888 ubox
15 32 0.005694743 ubox
16 30 0.011084661 ubox
16 31 0.005820511 ubox
16 38 0.800530669 ubox
16 53 0.013769683 ubox
17 24 0.241193068 ubox
17 29 0.010590440 ubox
17 32 0.080755627 ubox
17 37 0.818189107 ubox
17 52 0.013419107 ubox
18 23 0.240744940 ubox
18 31 0.082713362 ubox
18 35 0.860477850 ubox
19 30 0.082653436 ubox
19 34 0.860608447 ubox
19 38 0.008997100 ubox
19 49 0.006626332 ubox
20 29 0.082320464 ubox
20 32 0.008563527 ubox
20 33 0.854015178 ubox
20 37 0.010536783 ubox
20 48 0.006885034 ubox
21 31 0.041854354 ubox
22 45 0.015309644 ubox
23 32 0.857859750 ubox
23 44 0.016177156 ubox
24 31 0.893993633 ubox
24 54 0.032547233 ubox
25 30 0.892567440 ubox
25 31 0.011509896 ubox
25 35 0.007609371 ubox
25 53 0.033293305 ubox
25 54 0.006933618 ubox
26 30 0.011163312 ubox
26 34 0.007369922 ubox
26 36 0.006800050 ubox
26 39 0.006108022 ubox
26 53 0.006586893 ubox
27 35 0.007332789 ubox
27 38 0.005919118 ubox
27 53 0.004820229 ubox
27 54 0.021757488 ubox
28 53 0.017917809 ubox
28 54 0.335616557 ubox
29 38 0.070130493 ubox
29 53 0.341374872 ubox
30 37 0.071411879 ubox
30 44 0.004528666 ubox
30 45 0.003519661 ubox
30 46 0.003528635 ubox
30 47 0.056318125 ubox
30 48 0.080392891 ubox
30 52 0.341343977 ubox
31 37 0.009921442 ubox
31 41 0.003922652 ubox
31 43 0.004314139 ubox
31 44 0.004001206 ubox
31 46 0.056577380 ubox
31 47 0.080529193 ubox
31 51 0.338471965 ubox
32 36 0.009231479 ubox
32 39 0.036605566 ubox
32 40 0.003622275 ubox
32 50 0.325034127 ubox
33 38 0.046249291 ubox
33 53 0.005325190 ubox
34 42 0.005037429 ubox
34 43 0.032687425 ubox
34 45 0.255534279 ubox
35 41 0.004644497 ubox
35 42 0.034284737 ubox
35 43 0.012837135 ubox
35 44 0.269263383 ubox
35 46 0.241563609 ubox
35 52 0.012877420 ubox
36 41 0.030325393 ubox
36 42 0.015964392 ubox
36 43 0.251838924 ubox
36 45 0.240166895 ubox
36 51 0.012150659 ubox
37 53 0.219199630 ubox
38 44 0.229973212 ubox
38 46 0.121081767 ubox
38 52 0.221786381 ubox
39 43 0.200472170 ubox
39 45 0.118755033 ubox
39 51 0.192839096 ubox
40 51 0.110094353 ubox
41 50 0.146969551 ubox
41 54 0.003861382 ubox
42 49 0.134464023 ubox
42 50 0.036396087 ubox
42 53 0.004885758 ubox
42 54 0.004262460 ubox
43 49 0.038689745 ubox
43 53 0.005329743 ubox
43 54 0.045061834 ubox
44 53 0.073314012 ubox
44 54 0.026787410 ubox
45 53 0.024452870 ubox
45 54 0.036344736 ubox
46 53 0.062592148 ubox
46 54 0.184086574 ubox
47 53 0.187696007 ubox
47 54 0.328087498 ubox
48 53 0.333258481 ubox
3 51 0.9500000 lbox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
6 48 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
