%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CFAP44)
} def

/sequence { (\
GAGUAAACGGAGGCCUCCGGCAGACGCUGUGAAGAGAGGAGCCGCGGCGGUCAGUACCUUCGAGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.011510636 ubox
1 52 0.018747632 ubox
1 60 0.028482280 ubox
1 61 0.089741633 ubox
2 16 0.011547342 ubox
2 28 0.007770998 ubox
2 51 0.017912766 ubox
2 59 0.037120662 ubox
2 60 0.086450145 ubox
3 14 0.011794751 ubox
3 15 0.010193874 ubox
3 21 0.072800967 ubox
3 25 0.037400067 ubox
3 27 0.007966495 ubox
3 48 0.008037112 ubox
3 57 0.049680836 ubox
3 58 0.039460068 ubox
3 59 0.065631512 ubox
4 13 0.013875356 ubox
4 20 0.072338654 ubox
4 24 0.037732553 ubox
4 26 0.007614366 ubox
4 47 0.007973047 ubox
4 50 0.003662089 ubox
4 56 0.051152154 ubox
5 55 0.044176030 ubox
5 60 0.003618932 ubox
6 59 0.004000207 ubox
6 60 0.004797971 ubox
7 30 0.012871056 ubox
7 51 0.004059189 ubox
7 55 0.052806302 ubox
7 59 0.005074800 ubox
8 19 0.421664768 ubox
8 26 0.017399301 ubox
8 29 0.013362101 ubox
8 44 0.056967430 ubox
8 46 0.014481786 ubox
8 49 0.006086378 ubox
8 50 0.004113453 ubox
8 54 0.054710513 ubox
8 62 0.844537015 ubox
9 15 0.010932663 ubox
9 18 0.425978903 ubox
9 25 0.018212391 ubox
9 28 0.013333743 ubox
9 43 0.058043385 ubox
9 45 0.014560662 ubox
9 48 0.006189788 ubox
9 52 0.016230154 ubox
9 58 0.019462885 ubox
9 61 0.860702045 ubox
10 14 0.010803987 ubox
10 15 0.003641880 ubox
10 17 0.425888555 ubox
10 27 0.013330803 ubox
10 42 0.057646403 ubox
10 51 0.014510459 ubox
10 52 0.047024838 ubox
10 57 0.019434946 ubox
10 60 0.860248607 ubox
10 61 0.024232608 ubox
11 16 0.398413190 ubox
11 51 0.046671680 ubox
11 59 0.860622714 ubox
11 60 0.023922837 ubox
12 18 0.007355507 ubox
12 43 0.028287751 ubox
12 52 0.061609276 ubox
12 58 0.860071420 ubox
12 59 0.022453368 ubox
13 17 0.007494886 ubox
13 21 0.297816703 ubox
13 42 0.028351420 ubox
13 48 0.066072273 ubox
13 51 0.070625849 ubox
13 55 0.013024240 ubox
13 57 0.805591335 ubox
13 58 0.021177002 ubox
14 20 0.338220237 ubox
14 39 0.335550373 ubox
14 41 0.023044912 ubox
14 47 0.069963064 ubox
14 50 0.119466025 ubox
14 54 0.036542210 ubox
14 65 0.234764959 ubox
15 19 0.336965098 ubox
15 23 0.026295503 ubox
15 34 0.049631904 ubox
15 36 0.069857953 ubox
15 38 0.337398060 ubox
15 39 0.008540923 ubox
15 41 0.019398260 ubox
15 46 0.069905091 ubox
15 47 0.010405571 ubox
15 49 0.119419588 ubox
15 54 0.391976346 ubox
15 64 0.235608542 ubox
15 65 0.003912680 ubox
16 22 0.025809159 ubox
16 24 0.023481965 ubox
16 32 0.076644656 ubox
16 33 0.036682372 ubox
16 35 0.070329128 ubox
16 37 0.335707098 ubox
16 38 0.005372057 ubox
16 40 0.024084221 ubox
16 46 0.011393683 ubox
16 47 0.101953328 ubox
16 53 0.367945680 ubox
16 63 0.235543509 ubox
16 64 0.003658146 ubox
16 66 0.008149737 ubox
17 23 0.025603748 ubox
17 31 0.090090537 ubox
17 34 0.070408841 ubox
17 36 0.334398014 ubox
17 39 0.024190233 ubox
17 46 0.103950012 ubox
17 47 0.057473790 ubox
17 50 0.031012685 ubox
17 62 0.232581012 ubox
17 65 0.008571604 ubox
18 26 0.013029128 ubox
18 29 0.307583822 ubox
18 31 0.037828449 ubox
18 38 0.023475870 ubox
18 44 0.128145008 ubox
18 46 0.054263554 ubox
18 49 0.030434189 ubox
18 62 0.036244939 ubox
18 64 0.008527487 ubox
19 25 0.016317185 ubox
19 28 0.309318488 ubox
19 30 0.025620947 ubox
19 43 0.134115552 ubox
19 45 0.035084885 ubox
19 48 0.021149769 ubox
19 52 0.617394763 ubox
19 58 0.207026392 ubox
19 59 0.028962616 ubox
19 60 0.023901682 ubox
19 61 0.050437908 ubox
20 27 0.309978204 ubox
20 30 0.175102396 ubox
20 42 0.135462493 ubox
20 45 0.015483386 ubox
20 48 0.017605012 ubox
20 51 0.624896971 ubox
20 55 0.457890266 ubox
20 57 0.203136077 ubox
20 58 0.028267678 ubox
20 59 0.009117399 ubox
20 60 0.024914435 ubox
21 26 0.309539420 ubox
21 29 0.177657907 ubox
21 31 0.024070094 ubox
21 41 0.135282892 ubox
21 44 0.021093785 ubox
21 47 0.023901808 ubox
21 50 0.624675500 ubox
21 54 0.482057519 ubox
22 28 0.177246346 ubox
22 30 0.023650721 ubox
22 59 0.009244087 ubox
23 27 0.173366502 ubox
23 52 0.640764477 ubox
23 58 0.008361906 ubox
23 61 0.004439192 ubox
24 30 0.008899087 ubox
24 51 0.635263641 ubox
24 55 0.005141797 ubox
24 60 0.004290688 ubox
25 29 0.008944773 ubox
25 31 0.004758642 ubox
25 44 0.007683469 ubox
25 46 0.063276875 ubox
25 49 0.798751268 ubox
25 50 0.449796802 ubox
25 54 0.004147079 ubox
26 42 0.028061409 ubox
26 43 0.005633449 ubox
26 45 0.063385002 ubox
26 48 0.918940415 ubox
26 55 0.004792245 ubox
27 34 0.072927403 ubox
27 36 0.100519686 ubox
27 38 0.056335526 ubox
27 39 0.006461603 ubox
27 41 0.028779621 ubox
27 44 0.063334717 ubox
27 47 0.919699899 ubox
27 54 0.004885154 ubox
27 64 0.014904209 ubox
27 65 0.024006236 ubox
28 33 0.072295608 ubox
28 35 0.100017003 ubox
28 37 0.056314343 ubox
28 38 0.006330252 ubox
28 40 0.028645038 ubox
28 46 0.919013188 ubox
28 53 0.004883080 ubox
28 63 0.014895140 ubox
28 64 0.023809458 ubox
29 42 0.062134769 ubox
29 43 0.003727235 ubox
29 45 0.919666490 ubox
29 52 0.004862323 ubox
30 41 0.061658442 ubox
30 44 0.919082680 ubox
30 62 0.026611934 ubox
31 43 0.914597347 ubox
31 61 0.045417770 ubox
32 60 0.045422204 ubox
33 59 0.045348793 ubox
34 52 0.009635095 ubox
34 58 0.045185211 ubox
34 61 0.007462973 ubox
35 51 0.009305295 ubox
35 60 0.006607763 ubox
36 52 0.028830749 ubox
36 59 0.004077405 ubox
36 60 0.009168270 ubox
36 61 0.004777982 ubox
37 51 0.028096855 ubox
37 59 0.011385328 ubox
37 60 0.004083916 ubox
38 52 0.021936342 ubox
38 58 0.012457269 ubox
38 59 0.003233621 ubox
38 61 0.003419078 ubox
39 51 0.014506076 ubox
39 52 0.067949987 ubox
39 57 0.012445289 ubox
39 58 0.003181905 ubox
39 60 0.003438443 ubox
40 51 0.059085190 ubox
40 59 0.003449237 ubox
41 48 0.075988910 ubox
41 51 0.315115462 ubox
41 55 0.016753716 ubox
41 58 0.003396781 ubox
42 47 0.076033479 ubox
42 50 0.331884273 ubox
42 54 0.016962628 ubox
42 65 0.092077172 ubox
43 49 0.331972532 ubox
43 64 0.092243387 ubox
44 48 0.310562661 ubox
44 51 0.022717566 ubox
44 55 0.019264148 ubox
45 50 0.023440206 ubox
45 54 0.019908428 ubox
45 62 0.110487968 ubox
46 52 0.005855183 ubox
46 61 0.111300143 ubox
47 51 0.003834481 ubox
47 55 0.023049299 ubox
47 59 0.003221042 ubox
47 60 0.107357170 ubox
48 54 0.024206433 ubox
49 58 0.119950489 ubox
49 61 0.003375219 ubox
50 57 0.125957140 ubox
50 60 0.003190896 ubox
51 56 0.113569973 ubox
51 63 0.007517804 ubox
51 66 0.005099984 ubox
52 62 0.008052975 ubox
52 64 0.003616156 ubox
52 65 0.005351040 ubox
53 59 0.010768016 ubox
53 60 0.004875575 ubox
54 58 0.011509945 ubox
54 59 0.004327553 ubox
57 65 0.361604719 ubox
58 64 0.363183921 ubox
58 65 0.051063113 ubox
59 63 0.327200370 ubox
59 64 0.047399404 ubox
59 65 0.005297897 ubox
59 66 0.012153290 ubox
59 67 0.027573641 ubox
60 64 0.004924728 ubox
60 65 0.011849277 ubox
60 66 0.039022133 ubox
61 65 0.039731108 ubox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
showpage
end
%%EOF
