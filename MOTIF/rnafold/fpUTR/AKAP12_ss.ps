%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:47:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACUCGGACUCGCUCCUGGGCGAGCUGAAAGUCGGCUGCAGCAGAAGCUCCUGCCUUGGGAGUUUGCCGCGAGCGCGUCUCCUUCAUUCGCAGGCUGGGCGCGUUCGCAGUCGGCUGGCGGCGAAGGAAGGCGCUCUCGGGACCUCGCGGGCGCGCGUCUUUUGGCUCUUGCCCCUGUCCCUGCGGCUUGGGGAAGGCGUAACCCGGCGGCUAGGCGCGGGAGAAGUGCGGAGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[64.39207458 297.68746948]
[61.66975403 312.43838501]
[58.94743729 327.18927002]
[69.04219055 339.13204956]
[69.04685974 354.76965332]
[58.95923615 366.71844482]
[43.54238510 369.33660889]
[30.07567596 361.38790894]
[24.91767693 346.62548828]
[30.50383568 332.01971436]
[44.19654083 324.46694946]
[46.91885757 309.71606445]
[49.64117432 294.96517944]
[52.17097473 280.18002319]
[54.50783539 265.36318970]
[56.84469604 250.54634094]
[59.18155670 235.72947693]
[61.51841736 220.91262817]
[63.85527802 206.09577942]
[54.91221619 194.24009705]
[57.07105255 179.18040466]
[69.56702423 169.88049316]
[71.90388489 155.06364441]
[74.24073792 140.24679565]
[63.49389267 105.54173279]
[80.06748962 83.20581818]
[66.16299438 77.57866669]
[52.25849152 71.95150757]
[38.35399246 66.32435608]
[23.94693565 72.24671936]
[9.92595577 66.34191132]
[4.36867046 52.57048035]
[-9.53582954 46.94332504]
[-23.44032860 41.31616974]
[-37.34482956 35.68901443]
[-51.24932861 30.06185913]
[-65.15383148 24.43470383]
[-79.05832672 18.80754852]
[-92.96282959 13.18039322]
[-106.86733246 7.55323744]
[-120.77182770 1.92608166]
[-127.14012146 13.21496296]
[-142.46641541 19.29844666]
[-157.42788696 20.37296677]
[-168.64619446 33.80824661]
[-185.77378845 34.94075012]
[-198.16528320 23.55673409]
[-213.11146545 24.82618904]
[-228.05764771 26.09564590]
[-243.00384521 27.36510086]
[-257.95001221 28.63455772]
[-272.89620972 29.90401268]
[-287.84240723 31.17346954]
[-302.78857422 32.44292450]
[-314.18948364 43.73004913]
[-330.10494995 41.71085739]
[-338.32601929 27.93429756]
[-332.54617310 12.96856976]
[-317.19924927 8.29409885]
[-304.05804443 17.49673843]
[-289.11184692 16.22728348]
[-274.16567993 14.95782661]
[-259.21948242 13.68837070]
[-244.27330017 12.41891479]
[-229.32710266 11.14945889]
[-214.38092041 9.88000298]
[-199.43473816 8.61054707]
[-192.59568787 -2.29605436]
[-180.54605103 -7.35349751]
[-167.59162903 -4.51190042]
[-158.50239563 5.41150236]
[-143.54093933 4.33698177]
[-138.27816772 -9.70948315]
[-148.85014343 -20.35059547]
[-159.42211914 -30.99170685]
[-169.99409485 -41.63281631]
[-180.56608582 -52.27392960]
[-191.13806152 -62.91503906]
[-201.71003723 -73.55615234]
[-212.28201294 -84.19726562]
[-222.85400391 -94.83837128]
[-233.42597961 -105.47948456]
[-244.13577271 -115.98188019]
[-254.98155212 -126.34378815]
[-265.82733154 -136.70568848]
[-281.06933594 -133.79693604]
[-295.09573364 -140.43316650]
[-302.51309204 -154.06263733]
[-300.46929932 -169.44453430]
[-289.75018311 -180.66418457]
[-274.47753906 -183.40742493]
[-260.52395630 -176.61941528]
[-253.25488281 -162.91027832]
[-255.46543884 -147.55146790]
[-244.61964417 -137.18957520]
[-233.77386475 -126.82766724]
[-229.08247375 -126.03716278]
[-224.83145142 -122.30387115]
[-222.78486633 -116.05146790]
[-212.21289062 -105.41035461]
[-201.64089966 -94.76924133]
[-191.06892395 -84.12812805]
[-180.49694824 -73.48702240]
[-169.92497253 -62.84590912]
[-159.35298157 -52.20479584]
[-148.78100586 -41.56368637]
[-138.20903015 -30.92257500]
[-127.63704681 -20.28146362]
[-115.14467621 -11.97841835]
[-101.24017334 -6.35126257]
[-87.33567047 -0.72410715]
[-73.43117523 4.90304852]
[-59.52667236 10.53020382]
[-45.62217331 16.15736008]
[-31.71767426 21.78451538]
[-17.81317329 27.41167068]
[-3.90867376 33.03882599]
[9.99582577 38.66598129]
[23.56683540 32.63578415]
[37.74813461 38.14444351]
[43.98114777 52.41985321]
[57.88565063 58.04700851]
[71.79014587 63.67416382]
[85.69464874 69.30132294]
[100.13611603 65.24618530]
[109.07896423 53.20353317]
[118.02181244 41.16088104]
[126.96466064 29.11823082]
[135.90751648 17.07558060]
[144.85035706 5.03292894]
[143.73954773 -7.80402613]
[151.41929626 -17.64685440]
[163.35025024 -19.56303978]
[172.44932556 -31.48809433]
[181.54840088 -43.41315079]
[190.64746094 -55.33820343]
[192.86752319 -71.00287628]
[206.73913574 -76.42761993]
[215.83819580 -88.35267639]
[224.93727112 -100.27773285]
[234.03634644 -112.20278168]
[229.46002197 -127.02968597]
[234.50457764 -141.70387268]
[247.23027039 -150.58285522]
[262.74383545 -150.25244141]
[275.07995605 -140.83972168]
[279.49517822 -125.96405029]
[274.29171753 -111.34543610]
[261.47045898 -102.60504150]
[245.96139526 -103.10371399]
[236.86231995 -91.17865753]
[227.76325989 -79.25360870]
[218.66418457 -67.32855225]
[217.09495544 -52.51684189]
[202.57252502 -46.23913574]
[193.47344971 -34.31407928]
[184.37437439 -22.38902664]
[175.27531433 -10.46397114]
[173.96295166 7.04449177]
[156.89300537 13.97577858]
[147.95016479 26.01842880]
[139.00730896 38.06108093]
[130.06446838 50.10372925]
[121.12161255 62.14638138]
[112.17876434 74.18903351]
[120.64394379 86.57211304]
[135.11152649 82.61119080]
[149.57911682 78.65026093]
[160.72096252 66.61733246]
[176.65058899 70.51334381]
[180.98097229 86.33041382]
[169.25738525 97.79730225]
[153.54003906 93.11785126]
[139.07244873 97.07877350]
[124.60486603 101.03970337]
[122.94622040 115.94771576]
[136.18942261 122.99170685]
[149.43260193 130.03570557]
[162.67579651 137.07969666]
[175.91899109 144.12368774]
[191.73631287 143.77313232]
[199.33953857 156.58094788]
[212.58273315 163.62495422]
[225.82592773 170.66894531]
[239.11474609 177.62646484]
[252.44863892 184.49722290]
[268.26004028 183.94052124]
[276.02957153 196.64814758]
[289.36346436 203.51892090]
[302.69735718 210.38967896]
[311.73895264 211.53398132]
[316.15939331 217.43789673]
[329.40258789 224.48188782]
[342.64578247 231.52587891]
[355.62936401 223.32086182]
[370.97659302 222.72291565]
[384.55920410 229.89289856]
[392.72348022 242.90213013]
[393.27331543 258.25119019]
[386.06079102 271.81121826]
[373.02603149 279.93469238]
[357.67535400 280.43643188]
[344.13796997 273.18142700]
[336.05538940 260.12127686]
[335.60180664 244.76907349]
[322.35861206 237.72508240]
[309.11541748 230.68109131]
[295.82656860 223.72357178]
[282.49270630 216.85279846]
[269.15881348 209.98204041]
[254.30113220 211.03018188]
[245.57786560 197.83111572]
[232.24398804 190.96035767]
[224.87348938 190.69097900]
[218.78193665 183.91213989]
[205.53874207 176.86813354]
[192.29554749 169.82414246]
[177.42546082 170.67852783]
[168.87500000 157.36688232]
[155.63180542 150.32289124]
[142.38861084 143.27890015]
[129.14541626 136.23489380]
[115.90222931 129.19090271]
[109.19107056 132.53909302]
[119.70740509 143.23519897]
[112.78450012 156.54209900]
[97.98960114 154.07006836]
[95.76875305 139.23545837]
[89.05759430 142.58364868]
[86.72073364 157.40049744]
[84.38387299 172.21734619]
[93.41096497 184.91180420]
[90.82998657 199.90492249]
[78.67212677 208.43263245]
[76.33526611 223.24949646]
[73.99840546 238.06634521]
[71.66154480 252.88319397]
[69.32469177 267.70004272]
[66.98783112 282.51690674]
[68.99084473 288.78338623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[14 239]
[15 238]
[16 237]
[17 236]
[18 235]
[19 234]
[22 231]
[23 230]
[24 229]
[26 124]
[27 123]
[28 122]
[29 121]
[32 118]
[33 117]
[34 116]
[35 115]
[36 114]
[37 113]
[38 112]
[39 111]
[40 110]
[41 109]
[43 72]
[44 71]
[47 67]
[48 66]
[49 65]
[50 64]
[51 63]
[52 62]
[53 61]
[54 60]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 96]
[84 95]
[85 94]
[125 165]
[126 164]
[127 163]
[128 162]
[129 161]
[130 160]
[133 158]
[134 157]
[135 156]
[136 155]
[138 153]
[139 152]
[140 151]
[141 150]
[166 175]
[167 174]
[168 173]
[176 223]
[177 222]
[178 221]
[179 220]
[180 219]
[182 217]
[183 216]
[184 215]
[185 213]
[186 212]
[188 210]
[189 209]
[190 208]
[192 207]
[193 206]
[194 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
