%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCAGCCCUUGCCGUGGCCGGAGCCGAGCGGCGCAUCCGGGCCGGAGAAGAGGACGACGACGAGGUCCUCGAAGUGGACCCGUUUGCGAAGCGCCAGGGAGAAGGAGGAGCGGACGCAUCGUAGAAAGGGGUGGUGGCGCCCGACCCCGCGCCCCGGCCCGAAGCUCUGAGGGCUUCCCGGCCCCCACUGCCUGCGGC\
) } def
/len { sequence length } bind def

/coor [
[-160.46667480 207.98150635]
[-167.07493591 216.07531738]
[-176.83882141 219.12538147]
[-182.57907104 232.98358154]
[-180.71183777 248.69421387]
[-192.73068237 257.49172974]
[-198.47093201 271.34994507]
[-204.21118164 285.20812988]
[-195.98902893 298.36773682]
[-197.10575867 313.84457397]
[-207.13200378 325.68746948]
[-222.21244812 329.34259033]
[-236.54835510 323.40447998]
[-244.62727356 310.15643311]
[-243.34271240 294.69262695]
[-233.18858337 282.95919800]
[-218.06938171 279.46786499]
[-212.32913208 265.60968018]
[-206.58888245 251.75149536]
[-208.86669922 237.03208923]
[-196.43727112 227.24333191]
[-190.69700623 213.38513184]
[-194.62474060 194.45736694]
[-178.46426392 182.41717529]
[-173.16213989 168.38551331]
[-167.86001587 154.35385132]
[-162.55789185 140.32218933]
[-177.59507751 131.79721069]
[-181.79963684 117.02826691]
[-195.91285706 111.94719696]
[-210.07818604 118.42646027]
[-224.31861877 113.07248688]
[-230.40830994 99.52806854]
[-244.52151489 94.44700623]
[-258.63473511 89.36593628]
[-272.74792480 84.28486633]
[-286.91326904 90.76412964]
[-301.15371704 85.41015625]
[-307.24340820 71.86573792]
[-321.35659790 66.78466797]
[-335.46981812 61.70360184]
[-349.58303833 56.62253189]
[-363.73571777 51.65246201]
[-377.92700195 46.79370117]
[-392.11828613 41.93494034]
[-402.17172241 51.66770935]
[-415.37545776 56.09637070]
[-429.13296509 54.41021729]
[-440.76473999 46.99512100]
[-448.03005981 35.34715271]
[-449.55862427 21.77103043]
[-463.67184448 16.68996239]
[-477.78503418 11.60889339]
[-491.89825439 6.52782440]
[-506.01147461 1.44675541]
[-520.12469482 -3.63431334]
[-532.30566406 5.83284378]
[-547.67333984 7.18882275]
[-561.32391357 0.00093564]
[-568.90148926 -13.43718910]
[-567.98822021 -28.83749390]
[-558.87536621 -41.28580093]
[-544.47094727 -46.80989456]
[-529.37127686 -43.64706039]
[-518.39465332 -32.80654907]
[-515.04364014 -17.74752426]
[-500.93038940 -12.66645622]
[-486.81719971 -7.58538723]
[-472.70397949 -2.50431848]
[-458.59075928 2.57675028]
[-444.47756958 7.65781927]
[-432.39810181 -3.06909800]
[-416.46606445 -6.26148462]
[-401.00872803 -0.95574027]
[-390.27319336 11.49036694]
[-387.25952148 27.74365997]
[-373.06823730 32.60242081]
[-358.87695312 37.46118164]
[-351.52383423 36.65284729]
[-344.50195312 42.50931931]
[-330.38873291 47.59038925]
[-316.27554321 52.67145920]
[-302.16232300 57.75252533]
[-288.83660889 51.19808960]
[-274.45141602 56.14996719]
[-267.66687012 70.17165375]
[-253.55366516 75.25272369]
[-239.44044495 80.33379364]
[-225.32723999 85.41486359]
[-212.00151062 78.86042023]
[-197.61633301 83.81230164]
[-190.83178711 97.83399200]
[-176.71856689 102.91505432]
[-161.64584351 95.07714081]
[-144.64421082 102.28527069]
[-138.93330383 121.39532471]
[-124.08294678 119.28180695]
[-109.23258972 117.16828918]
[-94.38223267 115.05477142]
[-82.87213135 105.60137177]
[-68.11943817 111.31701660]
[-53.26908493 109.20349884]
[-45.75304413 99.71817780]
[-33.39179993 97.84025574]
[-22.73507881 105.11679840]
[-7.85335732 103.23679352]
[-1.60568762 99.27597046]
[7.27665329 101.44604492]
[22.18606758 99.80002594]
[31.26938248 88.05145264]
[46.36619949 86.16976929]
[58.62759781 95.77684784]
[73.53701019 94.13082886]
[88.44642639 92.48481750]
[101.29718781 84.74802399]
[109.72843933 72.34181976]
[118.15969086 59.93561172]
[122.06179047 43.43682480]
[138.99601746 42.61911392]
[144.46961975 58.66516876]
[130.56590271 68.36685944]
[122.13465118 80.77307129]
[113.70339966 93.17927551]
[117.72209930 99.51173401]
[127.28359985 87.95415497]
[141.23011780 93.47637177]
[140.28768921 108.44673920]
[125.75949860 112.17665863]
[129.77819824 118.50911713]
[144.59352112 116.16259766]
[159.40885925 113.81608582]
[171.82873535 104.01522064]
[185.60969543 109.66627502]
[200.42501831 107.31975555]
[215.24035645 104.97324371]
[223.23526001 100.53627777]
[230.30664062 102.70812225]
[245.15699768 100.59460449]
[260.00735474 98.48108673]
[274.85769653 96.36756897]
[289.70806885 94.25405121]
[296.84967041 80.47809601]
[310.73971558 73.56097412]
[326.03717041 76.16245270]
[336.85983276 87.28221893]
[339.04623413 102.64448547]
[331.75558472 116.34216309]
[317.79132080 123.10820007]
[302.52301025 120.34091949]
[291.82159424 109.10440826]
[276.97122192 111.21792603]
[262.12088013 113.33144379]
[247.27052307 115.44496155]
[232.42016602 117.55847931]
[217.58686829 119.78856659]
[202.77154541 122.13508606]
[187.95622253 124.48159790]
[176.59602356 134.11462402]
[161.75537109 128.63140869]
[146.94004822 130.97792053]
[132.12472534 133.32444763]
[128.62303162 147.90998840]
[140.75830078 156.72677612]
[152.89355469 165.54354858]
[165.02880859 174.36032104]
[177.16406250 183.17710876]
[189.29931641 191.99388123]
[201.43457031 200.81066895]
[217.80264282 205.22908020]
[218.08802795 222.18061829]
[201.87796021 227.14752197]
[192.61778259 212.94592285]
[180.48252869 204.12913513]
[168.34727478 195.31236267]
[156.21202087 186.49557495]
[144.07676697 177.67880249]
[131.94151306 168.86203003]
[119.80625916 160.04524231]
[90.09243774 107.39423370]
[75.18302917 109.04024506]
[60.27361298 110.68625641]
[50.40322876 122.73670959]
[35.25951385 124.19361115]
[23.83208275 114.70944214]
[8.92266750 116.35545349]
[-5.97335911 118.11851501]
[-20.85507965 119.99851990]
[-35.25457764 131.46951294]
[-51.15556335 124.05385590]
[-66.00592041 126.16737366]
[-78.57822418 135.77194214]
[-92.26871490 129.90512085]
[-107.11907196 132.01864624]
[-121.96942902 134.13215637]
[-136.81977844 136.24568176]
[-148.52624512 145.62431335]
[-153.82835388 159.65597534]
[-159.13047791 173.68763733]
[-164.43260193 187.71929932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 22]
[4 21]
[6 19]
[7 18]
[8 17]
[24 199]
[25 198]
[26 197]
[27 196]
[29 93]
[30 92]
[33 89]
[34 88]
[35 87]
[36 86]
[39 83]
[40 82]
[41 81]
[42 80]
[43 78]
[44 77]
[45 76]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[96 195]
[97 194]
[98 193]
[99 192]
[101 190]
[102 189]
[105 187]
[106 186]
[108 185]
[109 184]
[112 181]
[113 180]
[114 179]
[115 123]
[116 122]
[117 121]
[129 161]
[130 160]
[131 159]
[133 157]
[134 156]
[135 155]
[137 154]
[138 153]
[139 152]
[140 151]
[141 150]
[162 178]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
[168 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
