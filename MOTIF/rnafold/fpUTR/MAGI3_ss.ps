%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCUCGCGUCUGGGAACGGCCGGGCCCCCAGCGGGCUGUGGUCGCGGGGUGGGGGCCGGAGCGGCGAGGCCCCCCUUACCGGGCUGCGCGGGCCGCCCAGGGCCCCCGGGCUGAGACGGGGCCGGAGCGGCGCCCCGGCCGCCCGCGCGGGGUCUCCCCCAUGGUGCAGCGGGGUUCGGG\
) } def
/len { sequence length } bind def

/coor [
[82.48724365 216.75306702]
[66.11008453 215.90422058]
[58.89865112 201.17576599]
[68.27145386 187.71907043]
[69.04787445 172.73918152]
[69.82429504 157.75929260]
[70.60071564 142.77940369]
[64.09246063 129.26486206]
[51.89661789 120.53208160]
[39.70077515 111.79930115]
[27.50493622 103.06652069]
[15.30909348 94.33374786]
[-0.41576320 92.59034729]
[-6.25920630 78.88985443]
[-18.45504761 70.15707397]
[-33.84955215 72.53341675]
[-46.09346771 63.50339890]
[-48.26407623 48.81244659]
[-60.45991516 40.07966995]
[-72.65575409 31.34688759]
[-79.22876740 30.31594658]
[-83.61967468 26.65684700]
[-85.11479950 22.09621239]
[-97.00195312 12.94768143]
[-108.88910675 3.79915166]
[-120.77625275 -5.34937859]
[-132.66340637 -14.49790859]
[-144.55056763 -23.64643860]
[-159.36383057 -19.41876411]
[-173.65899658 -24.66295624]
[-182.02615356 -37.17114639]
[-181.43067932 -52.02993011]
[-193.31784058 -61.17845917]
[-205.20498657 -70.32698822]
[-217.09213257 -79.47551727]
[-232.74745178 -81.76064301]
[-238.11451721 -95.65466309]
[-250.00167847 -104.80319214]
[-261.88882446 -113.95172119]
[-273.77597046 -123.10025024]
[-285.66314697 -132.24877930]
[-297.70642090 -141.19076538]
[-309.90225220 -149.92355347]
[-322.09811401 -158.65632629]
[-330.92218018 -161.11779785]
[-334.42733765 -167.64659119]
[-346.47061157 -176.58857727]
[-358.51391602 -185.53056335]
[-370.70974731 -194.26335144]
[-383.05450439 -202.78431702]
[-391.91976929 -205.09312439]
[-395.53707886 -211.56042480]
[-407.73291016 -220.29321289]
[-419.92877197 -229.02598572]
[-432.12460327 -237.75877380]
[-444.32043457 -246.49154663]
[-456.51629639 -255.22433472]
[-468.71212769 -263.95712280]
[-482.66638184 -257.54037476]
[-497.95797729 -258.97640991]
[-510.47360229 -267.87893677]
[-516.84655762 -281.85324097]
[-515.36260986 -297.14028931]
[-506.42086792 -309.62792969]
[-492.42666626 -315.95706177]
[-477.14437866 -314.42517090]
[-464.68481445 -305.44436646]
[-458.39956665 -291.43038940]
[-459.97933960 -276.15295410]
[-447.78350830 -267.42016602]
[-435.58767700 -258.68737793]
[-423.39181519 -249.95462036]
[-411.19598389 -241.22183228]
[-399.00015259 -232.48905945]
[-386.80429077 -223.75627136]
[-374.53353882 -215.12907410]
[-362.18878174 -206.60810852]
[-357.38940430 -206.57890320]
[-352.56307983 -203.51693726]
[-349.57192993 -197.57385254]
[-337.52862549 -188.63186646]
[-325.48535156 -179.68988037]
[-313.36532593 -170.85217285]
[-301.16949463 -162.11938477]
[-288.97363281 -153.38661194]
[-284.17550659 -153.27456665]
[-279.40274048 -150.12976074]
[-276.51461792 -144.13594055]
[-264.62744141 -134.98739624]
[-252.74029541 -125.83887482]
[-240.85314941 -116.69034576]
[-228.96598816 -107.54180908]
[-214.16093445 -105.91105652]
[-207.94360352 -91.36267090]
[-196.05645752 -82.21414185]
[-184.16929626 -73.06561279]
[-172.28215027 -63.91707993]
[-158.07112122 -68.29712677]
[-143.83757019 -63.41147232]
[-135.10806274 -50.93553162]
[-135.40203857 -35.53359222]
[-123.51487732 -26.38506126]
[-111.62772369 -17.23653030]
[-99.74057007 -8.08800125]
[-87.85342407 1.06052911]
[-75.96627045 10.20905876]
[-63.92297745 19.15104675]
[-51.72713470 27.88382721]
[-39.53129578 36.61660767]
[-24.92419243 33.93926239]
[-12.43147373 42.62180710]
[-9.72226810 57.96123123]
[2.47357392 66.69401550]
[17.32610321 67.81278229]
[24.04187393 82.13790131]
[36.23771667 90.87068176]
[48.43355560 99.60346222]
[60.62939835 108.33624268]
[72.82524109 117.06902313]
[86.02453613 78.38510132]
[116.14179230 89.26042175]
[130.87220764 86.42935944]
[145.60261536 83.59828949]
[160.33303833 80.76722717]
[175.06344604 77.93616486]
[189.79385376 75.10510254]
[201.88569641 64.90224457]
[215.84454346 70.09837341]
[230.57495117 67.26731110]
[244.98825073 58.34019852]
[257.55648804 69.71894073]
[250.10165405 84.94595337]
[233.40602112 81.99772644]
[218.67561340 84.82878876]
[207.63739014 94.82914734]
[192.62492371 89.83551025]
[177.89451599 92.66658020]
[163.16409302 95.49764252]
[148.43368530 98.32870483]
[133.70327759 101.15976715]
[118.97285461 103.99083710]
[122.92562103 111.70186615]
[123.77174377 121.55744171]
[134.64938354 131.88589478]
[145.52703857 142.21434021]
[156.40467834 152.54278564]
[167.28231812 162.87123108]
[178.24870300 173.10542297]
[189.30300903 183.24456787]
[200.78442383 192.89739990]
[212.67156982 202.04592896]
[224.55871582 211.19445801]
[236.44587708 220.34298706]
[252.76417542 221.96936035]
[259.26733398 237.02395630]
[249.26547241 250.01991272]
[233.04762268 247.58808899]
[227.29734802 232.23014832]
[215.41018677 223.08161926]
[203.52304077 213.93309021]
[191.63589478 204.78456116]
[190.80485535 219.76152039]
[178.68066406 228.59349060]
[164.17034912 224.79206848]
[157.93392944 211.14996338]
[164.55297852 197.68936157]
[179.16384888 194.29887390]
[168.10954285 184.15971375]
[161.03654480 181.94979858]
[156.95387268 173.74888611]
[146.07623291 163.42042542]
[135.19857788 153.09197998]
[124.32093811 142.76353455]
[113.44329834 132.43508911]
[106.47762299 135.21527100]
[104.32767487 150.06039429]
[92.54627991 140.77563477]
[85.58060455 143.55581665]
[84.80419159 158.53570557]
[84.02777100 173.51560974]
[83.25135040 188.49549866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 181]
[5 180]
[6 179]
[7 178]
[8 119]
[9 118]
[10 117]
[11 116]
[12 115]
[14 113]
[15 112]
[18 109]
[19 108]
[20 107]
[23 106]
[24 105]
[25 104]
[26 103]
[27 102]
[28 101]
[32 97]
[33 96]
[34 95]
[35 94]
[37 92]
[38 91]
[39 90]
[40 89]
[41 88]
[42 85]
[43 84]
[44 83]
[46 82]
[47 81]
[48 80]
[49 77]
[50 76]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[121 141]
[122 140]
[123 139]
[124 138]
[125 137]
[126 136]
[128 134]
[129 133]
[143 174]
[144 173]
[145 172]
[146 171]
[147 170]
[148 168]
[149 167]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
