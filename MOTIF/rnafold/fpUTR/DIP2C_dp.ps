%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DIP2C)
} def

/sequence { (\
CUCGGUGCGGUUCCGCCGGGCGCGAGGAGCCGCCGAGACCUCCGCCUGCGAACAAAGAGGAGGCCGUGCGGGGCGCGGCGCCCGCGGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.015991041 ubox
1 20 0.006613931 ubox
1 26 0.004254081 ubox
1 37 0.826681643 ubox
1 89 0.008902671 ubox
2 9 0.016032913 ubox
2 10 0.039241642 ubox
2 19 0.006739129 ubox
2 25 0.004284371 ubox
2 36 0.831713119 ubox
2 38 0.028741474 ubox
2 88 0.008976108 ubox
3 9 0.170732118 ubox
3 18 0.006984425 ubox
3 24 0.004288514 ubox
3 35 0.832330498 ubox
3 37 0.031039357 ubox
3 87 0.008905009 ubox
4 8 0.161258989 ubox
4 17 0.007070721 ubox
4 23 0.004271823 ubox
4 34 0.824494483 ubox
4 40 0.012566923 ubox
5 16 0.007063459 ubox
5 21 0.004583318 ubox
5 33 0.627198240 ubox
5 39 0.013082375 ubox
5 85 0.007390485 ubox
5 90 0.005805710 ubox
6 15 0.007050011 ubox
6 20 0.004584567 ubox
6 32 0.375435199 ubox
6 35 0.003761272 ubox
6 38 0.012960398 ubox
6 84 0.007158160 ubox
6 89 0.005565779 ubox
7 14 0.006892437 ubox
7 16 0.003972353 ubox
7 30 0.015115894 ubox
7 31 0.116529269 ubox
7 33 0.546126289 ubox
7 34 0.004074736 ubox
7 83 0.005961002 ubox
7 85 0.003330214 ubox
7 90 0.033153425 ubox
8 15 0.004012413 ubox
8 18 0.009803909 ubox
8 29 0.021255042 ubox
8 32 0.736328489 ubox
8 84 0.003341341 ubox
8 89 0.033345536 ubox
9 14 0.003966536 ubox
9 17 0.009931625 ubox
9 31 0.824225945 ubox
9 82 0.005332014 ubox
10 16 0.009928744 ubox
10 30 0.832683791 ubox
10 53 0.004277087 ubox
10 81 0.005293922 ubox
10 90 0.540607174 ubox
11 15 0.009288201 ubox
11 26 0.019119477 ubox
11 28 0.019731682 ubox
11 29 0.832224398 ubox
11 52 0.004305204 ubox
11 80 0.004798068 ubox
11 88 0.003537574 ubox
11 89 0.546600136 ubox
12 25 0.021506656 ubox
12 27 0.022711149 ubox
12 28 0.832071259 ubox
12 51 0.004386415 ubox
12 88 0.552027921 ubox
13 24 0.021501882 ubox
13 26 0.033491980 ubox
13 27 0.832116494 ubox
13 50 0.003259182 ubox
13 87 0.552815354 ubox
14 22 0.031117209 ubox
14 24 0.088883749 ubox
14 26 0.827458779 ubox
14 50 0.005284338 ubox
14 86 0.552810502 ubox
15 21 0.055989219 ubox
15 23 0.192019997 ubox
15 49 0.006258215 ubox
15 79 0.003172530 ubox
15 85 0.552687222 ubox
16 20 0.055606976 ubox
16 22 0.192456720 ubox
16 48 0.004468006 ubox
16 78 0.003172639 ubox
16 84 0.390875888 ubox
17 24 0.793513670 ubox
17 48 0.008048930 ubox
17 77 0.003168643 ubox
17 84 0.390753915 ubox
18 23 0.794141194 ubox
18 47 0.009292934 ubox
18 82 0.005643491 ubox
18 83 0.552604417 ubox
19 31 0.008818527 ubox
19 46 0.009372478 ubox
19 81 0.005027077 ubox
19 82 0.552760228 ubox
20 30 0.008949942 ubox
20 45 0.009375514 ubox
20 79 0.004240097 ubox
20 81 0.552766779 ubox
21 29 0.008951589 ubox
21 44 0.009377581 ubox
21 77 0.005432406 ubox
21 80 0.552746102 ubox
21 86 0.006728466 ubox
22 30 0.004700997 ubox
22 33 0.015462732 ubox
22 43 0.009381252 ubox
22 76 0.011808107 ubox
22 79 0.552371361 ubox
22 85 0.006835305 ubox
23 29 0.005183927 ubox
23 32 0.015656649 ubox
23 75 0.012632480 ubox
23 77 0.091803627 ubox
23 78 0.544554200 ubox
23 84 0.006835525 ubox
24 31 0.015556333 ubox
24 42 0.009710931 ubox
24 74 0.016113647 ubox
24 76 0.129204391 ubox
24 83 0.006830640 ubox
25 41 0.009731599 ubox
26 34 0.008916304 ubox
26 40 0.009733000 ubox
26 82 0.006827091 ubox
27 33 0.008912370 ubox
27 39 0.009701501 ubox
27 81 0.006816376 ubox
29 74 0.336646031 ubox
29 79 0.006875960 ubox
30 71 0.437982140 ubox
30 72 0.021922422 ubox
30 73 0.335819778 ubox
30 78 0.006904200 ubox
31 70 0.439080602 ubox
31 71 0.017498449 ubox
31 72 0.334507627 ubox
31 75 0.003205972 ubox
31 77 0.006917488 ubox
32 69 0.442375015 ubox
32 74 0.003710239 ubox
32 76 0.006900783 ubox
33 68 0.441946492 ubox
33 71 0.330425644 ubox
33 73 0.003704033 ubox
33 75 0.006490349 ubox
34 66 0.438197415 ubox
34 68 0.020571111 ubox
34 70 0.330703448 ubox
34 72 0.003683658 ubox
35 65 0.437419066 ubox
35 67 0.027986166 ubox
35 69 0.329963359 ubox
38 67 0.050605513 ubox
39 60 0.004602113 ubox
39 63 0.600964658 ubox
39 66 0.040034175 ubox
40 59 0.004618648 ubox
40 62 0.603063815 ubox
40 73 0.003491552 ubox
40 89 0.784772371 ubox
41 58 0.004618451 ubox
41 61 0.602996554 ubox
41 72 0.003524606 ubox
41 88 0.794073003 ubox
42 57 0.004590559 ubox
42 60 0.603067942 ubox
42 63 0.037137665 ubox
42 71 0.004395228 ubox
42 87 0.795147576 ubox
43 59 0.602933733 ubox
43 62 0.037112578 ubox
43 70 0.004402403 ubox
43 86 0.795138056 ubox
44 49 0.004468820 ubox
44 64 0.015686671 ubox
44 69 0.004397905 ubox
44 85 0.794866649 ubox
44 90 0.047532788 ubox
45 60 0.039527096 ubox
45 63 0.015781500 ubox
45 68 0.004384065 ubox
45 84 0.793409441 ubox
45 89 0.047874489 ubox
46 57 0.871007804 ubox
46 59 0.045250700 ubox
46 60 0.009002650 ubox
46 62 0.019896716 ubox
46 87 0.049350172 ubox
47 54 0.240046381 ubox
47 56 0.871335565 ubox
47 58 0.051125506 ubox
47 59 0.008883709 ubox
47 61 0.019784799 ubox
47 70 0.003371673 ubox
47 86 0.049363541 ubox
48 53 0.257434742 ubox
48 64 0.003732025 ubox
48 67 0.003436896 ubox
48 69 0.004049923 ubox
48 81 0.084776931 ubox
48 83 0.017160723 ubox
48 85 0.050725636 ubox
49 63 0.003975180 ubox
49 66 0.003546888 ubox
49 68 0.004046527 ubox
49 80 0.084806903 ubox
49 84 0.050964141 ubox
50 65 0.003524783 ubox
50 79 0.034574098 ubox
50 83 0.048816878 ubox
59 82 0.191272085 ubox
59 83 0.765954005 ubox
60 81 0.192068957 ubox
60 82 0.766749005 ubox
62 82 0.005225723 ubox
62 83 0.004032093 ubox
63 69 0.003347526 ubox
63 74 0.006276990 ubox
63 79 0.795953704 ubox
63 81 0.004405271 ubox
63 90 0.027536870 ubox
64 68 0.004494807 ubox
64 71 0.004823749 ubox
64 72 0.004375140 ubox
64 73 0.007622568 ubox
64 78 0.796790249 ubox
64 80 0.003420234 ubox
64 87 0.228541299 ubox
64 89 0.051849123 ubox
65 70 0.004905540 ubox
65 71 0.004435920 ubox
65 72 0.007627555 ubox
65 77 0.796835992 ubox
65 86 0.229110921 ubox
66 76 0.796825333 ubox
66 85 0.223217383 ubox
66 90 0.010068750 ubox
67 75 0.796523896 ubox
67 84 0.221672033 ubox
67 86 0.070267892 ubox
67 89 0.009773901 ubox
68 74 0.796716674 ubox
68 76 0.004288755 ubox
68 83 0.203022390 ubox
68 85 0.097568038 ubox
69 73 0.790940910 ubox
69 75 0.004604512 ubox
69 80 0.003200238 ubox
69 84 0.100304441 ubox
69 86 0.014097715 ubox
70 74 0.004459871 ubox
70 79 0.003202042 ubox
70 82 0.201182134 ubox
70 83 0.095845044 ubox
70 85 0.014265103 ubox
71 81 0.201174847 ubox
71 82 0.089663839 ubox
71 83 0.095628281 ubox
72 81 0.082841679 ubox
72 82 0.105415393 ubox
73 79 0.211953208 ubox
73 81 0.110848603 ubox
74 78 0.210446767 ubox
74 80 0.116009911 ubox
74 86 0.007847973 ubox
75 79 0.108558151 ubox
75 85 0.008174643 ubox
76 84 0.008178779 ubox
77 83 0.008180261 ubox
78 82 0.008048243 ubox
81 87 0.004202801 ubox
82 86 0.004189275 ubox
1 37 0.9500000 lbox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
7 33 0.9500000 lbox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
40 89 0.9500000 lbox
41 88 0.9500000 lbox
42 87 0.9500000 lbox
43 86 0.9500000 lbox
44 85 0.9500000 lbox
45 84 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
59 83 0.9500000 lbox
60 82 0.9500000 lbox
63 79 0.9500000 lbox
64 78 0.9500000 lbox
65 77 0.9500000 lbox
66 76 0.9500000 lbox
67 75 0.9500000 lbox
68 74 0.9500000 lbox
69 73 0.9500000 lbox
showpage
end
%%EOF
