%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUGGGGCAGCCCACAGGGUUCCGAGCAUGUGCUGGCAGUUGCUCUUUGGAGCACCCACUUCACUUCUCCCAUGUAGUUCCUGAGUGCAGGACUCUCCUGAAGAAGGGGCGUCUAAAAGGCCAGCCCAUGCAUCUUGUUCAGACCAGGCUGCUCCAUCUCCGCUAAGCCCAGGGAUCCACUUGUGUGUCUUUCUGGGAUAAUUGUCUUUAGUGGCAGCCUGGGCCUCGGGGAAGGAAGGGCAUGAGGA\
) } def
/len { sequence length } bind def

/coor [
[133.41886902 138.36734009]
[143.80996704 127.54951477]
[158.19177246 123.29652405]
[143.98529053 118.48237610]
[129.77880859 113.66822052]
[115.57234192 108.85406494]
[101.92075348 115.06969452]
[96.22406769 128.94586182]
[95.86357880 138.04719543]
[90.36762238 142.95986938]
[84.49701691 156.76333618]
[78.62641144 170.56681824]
[72.75581360 184.37030029]
[66.88520813 198.17378235]
[66.25022125 215.11582947]
[49.79448700 219.19567871]
[41.31867218 204.51246643]
[53.08172607 192.30317688]
[58.95233154 178.49969482]
[64.82293701 164.69621277]
[70.69354248 150.89274597]
[76.56414795 137.08926392]
[82.34790802 123.24916840]
[88.04459381 109.37300873]
[82.61046600 95.39194489]
[69.03805542 89.00525665]
[55.42579269 82.70397186]
[41.77420044 76.48833466]
[28.12261200 70.27270508]
[14.47102261 64.05706787]
[0.81943285 57.84143448]
[-14.94633484 59.16474152]
[-23.32335281 46.84910965]
[-36.97494125 40.63347626]
[-50.62653351 34.41784286]
[-64.27812195 28.20220757]
[-77.92971039 21.98657417]
[-91.58129883 15.77094078]
[-107.51158142 28.36239243]
[-128.59776306 29.46062469]
[-147.11904907 17.72928047]
[-155.75546265 -3.29970860]
[-170.69746399 -4.61747646]
[-185.63946533 -5.93524456]
[-200.06602478 0.55977881]
[-212.06434631 -8.26571178]
[-227.00634766 -9.58347988]
[-241.94836426 -10.90124798]
[-256.37490845 -4.40622473]
[-268.37322998 -13.23171616]
[-283.31524658 -14.54948330]
[-298.25723267 -15.86725140]
[-313.19924927 -17.18502045]
[-328.14126587 -18.50278664]
[-343.09124756 -19.72664642]
[-358.04861450 -20.85654831]
[-363.77703857 -6.85509825]
[-373.55328369 4.68958998]
[-386.41964722 12.64648438]
[-401.11557007 16.23604965]
[-416.20132446 15.10661697]
[-430.19891357 9.36883640]
[-441.73706055 -0.41516238]
[-449.68533325 -13.28684330]
[-453.26504517 -27.98517036]
[-452.12548828 -43.07015228]
[-446.37835693 -57.06391144]
[-436.58660889 -68.59548950]
[-423.70962524 -76.53513336]
[-409.00888062 -80.10500336]
[-393.92468262 -78.95535278]
[-379.93475342 -73.19881439]
[-368.40975952 -63.39936447]
[-360.47872925 -50.51704407]
[-356.91873169 -35.81393051]
[-341.96133423 -34.68402863]
[-335.07238770 -37.30741882]
[-326.82348633 -33.44478989]
[-311.88146973 -32.12702560]
[-296.93948364 -30.80925560]
[-281.99746704 -29.49148750]
[-267.05548096 -28.17371941]
[-253.69767761 -34.76300049]
[-240.63058472 -25.84325218]
[-225.68858337 -24.52548409]
[-210.74658203 -23.20771599]
[-197.38879395 -29.79699516]
[-184.32170105 -20.87724876]
[-169.37969971 -19.55948067]
[-154.43769836 -18.24171257]
[-146.56007385 -31.00662994]
[-154.43769836 -43.77154541]
[-162.31532288 -56.53646469]
[-170.19293213 -69.30138397]
[-184.02484131 -76.98181915]
[-184.12448120 -91.87609100]
[-192.00209045 -104.64100647]
[-199.87971497 -117.40592194]
[-207.75733948 -130.17083740]
[-215.63494873 -142.93576050]
[-230.85232544 -148.01622009]
[-236.23260498 -163.13018799]
[-227.64851379 -176.68353271]
[-211.68501282 -178.27926636]
[-200.58795166 -166.69329834]
[-202.87004089 -150.81338501]
[-194.99241638 -138.04846191]
[-187.11479187 -125.28354645]
[-179.23718262 -112.51862335]
[-171.35955811 -99.75370789]
[-158.09112549 -92.98630524]
[-157.42802429 -77.17900085]
[-149.55039978 -64.41408539]
[-141.67277527 -51.64916611]
[-133.79516602 -38.88425064]
[-120.21519470 -41.51408386]
[-106.92234039 -39.12305450]
[-95.66741943 -32.26427460]
[-87.84663391 -22.06310272]
[-84.32939148 -10.03880024]
[-85.36566925 2.11935139]
[-71.71408081 8.33498478]
[-58.06248856 14.55061913]
[-44.41089630 20.76625252]
[-30.75930786 26.98188591]
[-17.10771942 33.19752121]
[-2.31840444 31.42962837]
[7.03506660 44.18984604]
[20.68665695 50.40547943]
[34.33824539 56.62111282]
[47.98983383 62.83674622]
[61.64142609 69.05238342]
[69.01245117 68.96394348]
[75.42474365 75.43284607]
[88.99715424 81.81954193]
[84.20110321 67.60694122]
[86.91811371 52.85506821]
[96.46306610 41.28381348]
[110.42905426 35.81104279]
[125.29434967 37.81679153]
[137.31045532 46.79528046]
[143.44732666 60.48245621]
[142.15747070 75.42689514]
[133.76614380 87.86013794]
[120.38649750 94.64759064]
[134.59297180 99.46174622]
[148.79943848 104.27589417]
[163.00592041 109.09004974]
[177.48664856 113.00267792]
[192.18446350 115.99832153]
[206.88229370 118.99397278]
[219.96688843 110.54228973]
[234.82991028 113.78968048]
[242.80665588 126.31592560]
[257.50448608 129.31158447]
[272.20230103 132.30723572]
[287.26968384 127.48182678]
[298.19537354 137.60502625]
[312.89318848 140.60067749]
[327.59100342 143.59632874]
[342.28884888 146.59197998]
[356.98666382 149.58761597]
[371.68447876 152.58326721]
[380.11065674 144.23956299]
[391.39926147 141.02079773]
[402.72534180 143.61259460]
[411.31188965 151.26118469]
[415.11080933 161.98776245]
[429.72869873 165.35182190]
[444.34661865 168.71589661]
[458.96450806 172.07995605]
[473.58242798 175.44401550]
[488.20031738 178.80807495]
[502.81823730 182.17213440]
[514.52319336 172.15711975]
[529.70343018 170.96858215]
[542.52117920 178.85339355]
[548.17053223 192.60920715]
[562.78845215 195.97326660]
[577.40637207 199.33732605]
[592.02429199 202.70138550]
[606.64215088 206.06544495]
[619.50335693 190.81774902]
[638.26672363 184.28529358]
[657.66064453 188.21763611]
[672.27984619 201.43614197]
[678.09197998 220.18562317]
[692.89227295 222.62518311]
[707.69256592 225.06474304]
[722.49285889 227.50428772]
[737.29315186 229.94384766]
[752.09344482 232.38340759]
[768.70507812 228.99360657]
[776.56097412 244.01763916]
[764.29876709 255.72557068]
[749.65386963 247.18370056]
[734.85363770 244.74414062]
[720.05334473 242.30458069]
[705.25305176 239.86502075]
[690.45275879 237.42547607]
[675.65246582 234.98591614]
[670.68762207 244.07307434]
[663.38934326 251.44844055]
[654.31817627 256.52896118]
[644.17565918 258.90850830]
[633.74963379 258.39035034]
[623.85327148 255.00323486]
[615.26184082 249.00022888]
[608.65161133 240.83973694]
[604.54681396 231.15054321]
[603.27807617 220.68334961]
[588.66021729 217.31929016]
[574.04229736 213.95523071]
[559.42437744 210.59117126]
[544.80651855 207.22711182]
[533.71252441 217.12971497]
[518.73760986 218.61853027]
[505.60394287 210.91401672]
[499.45416260 196.79003906]
[484.83627319 193.42597961]
[470.21835327 190.06192017]
[455.60046387 186.69786072]
[440.98254395 183.33380127]
[426.36465454 179.96972656]
[411.74673462 176.60566711]
[396.81686401 187.23023987]
[378.55380249 183.47807312]
[368.68884277 167.28109741]
[353.99102783 164.28544617]
[339.29318237 161.28979492]
[324.59536743 158.29414368]
[309.89755249 155.29849243]
[295.19970703 152.30285645]
[281.18362427 157.34251404]
[269.20666504 147.00505066]
[254.50883484 144.00939941]
[239.81100464 141.01374817]
[227.56809998 149.41891479]
[212.61973572 146.59028625]
[203.88664246 133.69180298]
[189.18882751 130.69615173]
[174.49099731 127.70050049]
[184.77511597 138.62007141]
[188.30281067 153.19934082]
[184.14839172 167.61254883]
[173.40200806 178.07751465]
[158.88363647 181.84806824]
[144.40309143 177.93479919]
[133.76022339 167.36459351]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 148]
[4 147]
[5 146]
[6 145]
[7 24]
[8 23]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[25 135]
[26 134]
[27 132]
[28 131]
[29 130]
[30 129]
[31 128]
[33 126]
[34 125]
[35 124]
[36 123]
[37 122]
[38 121]
[42 90]
[43 89]
[44 88]
[46 86]
[47 85]
[48 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 76]
[56 75]
[91 115]
[92 114]
[93 113]
[94 112]
[96 110]
[97 109]
[98 108]
[99 107]
[100 106]
[149 242]
[150 241]
[151 240]
[154 237]
[155 236]
[156 235]
[158 233]
[159 232]
[160 231]
[161 230]
[162 229]
[163 228]
[168 225]
[169 224]
[170 223]
[171 222]
[172 221]
[173 220]
[174 219]
[178 215]
[179 214]
[180 213]
[181 212]
[182 211]
[187 201]
[188 200]
[189 199]
[190 198]
[191 197]
[192 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
