%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGCGGUAGUGGCCAGCGAGAGUGUCAGGCCUGGGGUUUUCUGUGUCCUUCCCUGGGUCAGGGACGAGCCAGUGACUUGACUCUUGGGCGCUAAGCUUGGGAGGGAGCGCAGGAGGCCGCUGUCCUUCCUUUCCGGUUCACGUCACCCUUCUCUCCCUCUGUUGCUCCACCUGCAGCCACUUGGACGGCUCCGGGACUGAUUGCCUGGGGCAGGGGUGGCAGUCGAGGCCGCCGGGGCCGAGGUGAGGCUGCA\
GCUCUCCGGGCGGCGGUAGCGCUGGGGAGGAGGAGGAGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[360.21151733 84.62927246]
[345.25805664 85.81008911]
[330.30459595 86.99090576]
[315.35116577 88.17171478]
[308.96130371 91.81324005]
[300.23452759 89.28553772]
[285.26950073 90.30917358]
[270.30447388 91.33280945]
[256.25979614 101.88867950]
[239.79678345 93.59033966]
[224.84333801 94.77114868]
[209.70161438 106.84066772]
[191.66989136 97.75948334]
[176.74455261 99.25424957]
[164.85166931 108.22132111]
[150.34915161 101.89772797]
[135.42381287 103.39249420]
[120.49848175 104.88725281]
[105.57314301 106.38201904]
[112.95384216 122.74452972]
[113.70189667 141.68222046]
[105.50809479 154.24652100]
[103.45755005 163.09757996]
[97.16161346 166.89915466]
[88.83625031 179.37667847]
[90.55373383 195.32752991]
[79.05276489 206.51266479]
[63.15589905 204.35179138]
[55.05785751 190.50256348]
[60.97076416 175.58891296]
[76.35873413 171.05131531]
[84.68409729 158.57379150]
[92.94379425 146.05271912]
[101.13759613 133.48841858]
[97.82779694 126.75824738]
[91.20819855 113.29790497]
[87.89839172 106.56773376]
[72.94494629 105.38691711]
[57.99149323 104.20610046]
[43.03804398 103.02529144]
[28.08459282 101.84447479]
[13.13114262 100.66365814]
[-1.82230794 99.48284912]
[-16.77575874 98.30203247]
[-31.72920799 97.12121582]
[-46.68265915 95.94039917]
[-61.63610840 94.75959015]
[-76.59555817 93.65734863]
[-91.56058502 92.63371277]
[-106.52561951 91.61007690]
[-121.49065399 90.58644104]
[-136.45568848 89.56280518]
[-151.42071533 88.53916931]
[-166.38574219 87.51553345]
[-181.35078430 86.49189758]
[-181.84626770 108.02420044]
[-204.49694824 126.35955048]
[-219.45040894 127.54036713]
[-234.40385437 128.72117615]
[-249.35729980 129.90199280]
[-264.31076050 131.08280945]
[-279.26419067 132.26362610]
[-294.21765137 133.44444275]
[-309.17111206 134.62524414]
[-324.12762451 145.40466309]
[-339.65499878 137.18399048]
[-354.59521484 138.52185059]
[-364.53567505 150.80854797]
[-380.26119995 152.38449097]
[-392.44210815 142.31469727]
[-393.85171509 126.57340240]
[-383.65368652 114.49962616]
[-367.89837646 113.25653839]
[-355.93307495 123.58163452]
[-340.99285889 122.24376678]
[-333.02441406 113.18258667]
[-320.62182617 111.92035675]
[-310.35192871 119.67179871]
[-295.39846802 118.49098206]
[-280.44500732 117.31017303]
[-265.49157715 116.12935638]
[-250.53811646 114.94853973]
[-235.58467102 113.76773071]
[-220.63121033 112.58691406]
[-205.67776489 111.40609741]
[-204.46171570 104.00534058]
[-202.02963257 89.20381927]
[-200.81358337 81.80306244]
[-214.60295105 75.89940643]
[-228.39233398 69.99575043]
[-242.18170166 64.09209442]
[-257.54965210 68.69705200]
[-270.64904785 59.43502045]
[-271.43118286 43.41104507]
[-259.29602051 32.91734314]
[-243.55265808 36.00378799]
[-236.27804565 50.30272293]
[-222.48867798 56.20637894]
[-208.69929504 62.11003494]
[-194.90992737 68.01368713]
[-180.32714844 71.52686310]
[-165.36210632 72.55049896]
[-150.39707947 73.57413483]
[-135.43205261 74.59777069]
[-120.46701813 75.62140656]
[-105.50198364 76.64504242]
[-90.53694916 77.66867828]
[-75.57192230 78.69231415]
[-68.71734619 76.02666473]
[-60.45529556 79.80613708]
[-45.50184631 80.98695374]
[-30.54839516 82.16776276]
[-15.59494400 83.34857941]
[-0.64149356 84.52939606]
[14.31195641 85.71021271]
[29.26540756 86.89102173]
[44.21885681 88.07183838]
[59.17230606 89.25265503]
[74.12575531 90.43346405]
[89.07920837 91.61428070]
[104.07837677 91.45668030]
[119.00371552 89.96191406]
[133.92906189 88.46715546]
[148.85438538 86.97238922]
[161.81484985 77.89840698]
[175.24980164 84.32891083]
[190.17512512 82.83415222]
[196.52420044 74.07688904]
[206.43054199 70.31186676]
[216.56561279 72.54754639]
[223.66252136 79.81770325]
[238.61596680 78.63688660]
[247.54196167 69.36962128]
[259.98898315 68.66957092]
[269.28082275 76.36778259]
[284.24584961 75.34414673]
[299.21090698 74.32050323]
[314.17034912 73.21826935]
[329.12377930 72.03745270]
[344.07723999 70.85663605]
[359.03070068 69.67582703]
[347.68362427 59.86542130]
[343.80950928 45.37434387]
[348.74713135 31.21031380]
[360.79022217 22.26802635]
[375.77694702 21.63768768]
[388.52838135 29.53712845]
[394.63793945 43.23651886]
[391.99435425 58.00172806]
[381.51083374 68.73046875]
[396.51062012 68.65167236]
[411.51040649 68.57286835]
[426.51019287 68.49406433]
[441.51000977 68.41526031]
[456.50979614 68.33646393]
[471.50958252 68.25765991]
[486.50936890 68.17885590]
[501.50915527 68.10005188]
[510.02661133 64.93791962]
[516.66674805 68.10005188]
[531.66656494 68.17885590]
[546.66638184 68.25765991]
[553.29095459 58.45477676]
[563.70782471 53.10174942]
[575.29583740 53.41629791]
[585.20056152 59.20592117]
[591.03753662 68.94366455]
[606.03234863 69.33763123]
[621.02716064 69.73159790]
[636.02197266 70.12556458]
[644.63488770 67.23342896]
[651.17205811 70.60326385]
[666.16192627 71.15476227]
[680.23724365 63.93007278]
[692.67144775 72.13007355]
[707.66131592 72.68156433]
[710.11279297 50.53804779]
[729.95843506 48.87984085]
[743.05261230 41.56255722]
[756.14678955 34.24527740]
[769.24096680 26.92799187]
[782.33514404 19.61070824]
[795.42932129 12.29342556]
[808.52349854 4.97614193]
[808.77166748 -5.60625744]
[813.33197021 -15.06961727]
[821.33081055 -21.75433159]
[831.29840088 -24.51868439]
[841.43859863 -22.93347740]
[849.95233154 -17.34720039]
[863.27062988 -24.24817657]
[876.58892822 -31.14915276]
[889.90716553 -38.05012894]
[903.22546387 -44.95110321]
[916.54376221 -51.85207748]
[929.86199951 -58.75305557]
[943.18029785 -65.65402985]
[945.36975098 -81.01586151]
[956.19464111 -92.13346863]
[971.49261475 -94.73188782]
[985.38128662 -87.81198883]
[992.52014160 -74.03460693]
[990.16418457 -58.69742966]
[979.21929932 -47.69791031]
[963.89404297 -45.26559448]
[950.08129883 -52.33575058]
[936.76300049 -45.43477631]
[923.44470215 -38.53380203]
[910.12646484 -31.63282585]
[896.80816650 -24.73184967]
[883.48986816 -17.83087349]
[870.17163086 -10.92989826]
[856.85333252 -4.02892256]
[852.27722168 14.94780159]
[834.91430664 24.52293777]
[815.84075928 18.07031441]
[802.74658203 25.38759804]
[789.65240479 32.70487976]
[776.55822754 40.02216339]
[763.46405029 47.33944702]
[750.36987305 54.65673065]
[737.27575684 61.97401428]
[736.10339355 71.23294830]
[729.10107422 78.93238068]
[742.03857422 86.52319336]
[755.38836670 79.05794525]
[770.58209229 79.27568817]
[783.54071045 87.01781464]
[790.83538818 100.11910248]
[790.59448242 115.01230621]
[803.53204346 122.60311890]
[816.46954346 130.19392395]
[829.40710449 137.78472900]
[842.34460449 145.37554932]
[855.28216553 152.96635437]
[871.10028076 153.27655029]
[878.16210938 166.39067078]
[891.09960938 173.98147583]
[904.03717041 181.57228088]
[910.55792236 181.99552917]
[915.21325684 185.14936829]
[917.16442871 189.46096802]
[929.93957520 197.32194519]
[942.71472168 205.18292236]
[958.52288818 205.82543945]
[965.30755615 219.08505249]
[978.08276367 226.94602966]
[993.39715576 223.04150391]
[1006.94409180 231.18121338]
[1010.68652344 246.53601074]
[1002.40405273 259.99618530]
[987.01049805 263.57601929]
[973.63867188 255.15170288]
[970.22174072 239.72119141]
[957.44659424 231.86021423]
[942.55218506 231.77998352]
[934.85375977 217.95809937]
[922.07861328 210.09712219]
[909.30340576 202.23612976]
[896.44635010 194.50981140]
[883.50885010 186.91900635]
[870.57128906 179.32820129]
[855.67852783 179.56094360]
[847.69134521 165.90388489]
[834.75378418 158.31306458]
[821.81628418 150.72225952]
[808.87872314 143.13145447]
[795.94122314 135.54064941]
[783.00372314 127.94983673]
[770.12023926 135.42530823]
[755.12506104 135.44853210]
[742.04516602 127.91312408]
[734.44329834 114.75605011]
[734.44775391 99.46071625]
[721.51025391 91.86991119]
[707.10980225 87.67142487]
[692.11993408 87.11993408]
[679.11682129 94.38407135]
[665.61041260 86.14461517]
[650.62054443 85.59312439]
[635.62805176 85.12039185]
[620.63317871 84.72642517]
[605.63836670 84.33245087]
[590.64355469 83.93848419]
[578.09887695 97.31770325]
[559.43792725 97.22830200]
[546.58758545 83.25745392]
[531.58776855 83.17864990]
[516.58795166 83.09984589]
[501.58798218 83.09984589]
[486.58816528 83.17864990]
[471.58837891 83.25745392]
[456.58859253 83.33625031]
[441.58880615 83.41505432]
[426.58901978 83.49385834]
[411.58920288 83.57266235]
[396.58941650 83.65146637]
[381.58963013 83.73026276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 141]
[2 140]
[3 139]
[4 138]
[6 137]
[7 136]
[8 135]
[10 132]
[11 131]
[13 127]
[14 126]
[16 124]
[17 123]
[18 122]
[19 121]
[21 34]
[22 33]
[24 32]
[25 31]
[37 120]
[38 119]
[39 118]
[40 117]
[41 116]
[42 115]
[43 114]
[44 113]
[45 112]
[46 111]
[47 110]
[48 108]
[49 107]
[50 106]
[51 105]
[52 104]
[53 103]
[54 102]
[55 101]
[57 85]
[58 84]
[59 83]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[66 75]
[67 74]
[88 100]
[89 99]
[90 98]
[91 97]
[150 298]
[151 297]
[152 296]
[153 295]
[154 294]
[155 293]
[156 292]
[157 291]
[158 290]
[160 289]
[161 288]
[162 287]
[167 284]
[168 283]
[169 282]
[170 281]
[172 280]
[173 279]
[175 277]
[176 276]
[178 222]
[179 221]
[180 220]
[181 219]
[182 218]
[183 217]
[184 216]
[190 213]
[191 212]
[192 211]
[193 210]
[194 209]
[195 208]
[196 207]
[197 206]
[224 275]
[225 274]
[230 269]
[231 268]
[232 267]
[233 266]
[234 265]
[235 264]
[237 262]
[238 261]
[239 260]
[242 259]
[243 258]
[244 257]
[246 255]
[247 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
