%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OPN1MW)
} def

/sequence { (\
CCCACUGGCCGGUAUAAAGCACCGUGACCCUCAGGUGACGCACCAGGGCCGGCUGCCGUCGGGGACAGGGCUUUCCAUAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008669363 ubox
1 48 0.004040299 ubox
1 52 0.011137751 ubox
1 62 0.083970440 ubox
1 63 0.799703515 ubox
1 64 0.250822369 ubox
1 69 0.009516402 ubox
1 70 0.014648653 ubox
2 7 0.009000444 ubox
2 8 0.006824239 ubox
2 47 0.004067612 ubox
2 48 0.012884654 ubox
2 51 0.011150801 ubox
2 52 0.019580320 ubox
2 61 0.084233997 ubox
2 62 0.802963892 ubox
2 63 0.249795547 ubox
2 64 0.283698235 ubox
2 68 0.010195619 ubox
2 69 0.019027703 ubox
2 70 0.013070422 ubox
3 7 0.006981993 ubox
3 26 0.007811160 ubox
3 46 0.003738425 ubox
3 47 0.013010870 ubox
3 51 0.019547354 ubox
3 55 0.035783202 ubox
3 61 0.803296452 ubox
3 62 0.245007205 ubox
3 63 0.284269352 ubox
3 68 0.019293103 ubox
3 69 0.015588459 ubox
4 13 0.005055312 ubox
4 25 0.007862945 ubox
4 54 0.037086947 ubox
4 59 0.810221706 ubox
5 12 0.005312941 ubox
5 24 0.007485463 ubox
5 46 0.013893855 ubox
5 52 0.424593538 ubox
5 58 0.814799027 ubox
5 62 0.286947568 ubox
5 63 0.003502343 ubox
5 64 0.003615039 ubox
5 68 0.083803595 ubox
5 80 0.004762518 ubox
6 11 0.004976317 ubox
6 45 0.014199398 ubox
6 51 0.427000557 ubox
6 55 0.445223113 ubox
6 58 0.067659381 ubox
6 61 0.292628905 ubox
6 67 0.084038057 ubox
6 77 0.003614612 ubox
6 79 0.004731060 ubox
7 23 0.006967171 ubox
7 44 0.014243576 ubox
7 50 0.429761360 ubox
7 54 0.829698292 ubox
7 57 0.100477943 ubox
7 60 0.295814565 ubox
7 66 0.083103352 ubox
7 76 0.004033491 ubox
7 78 0.004370293 ubox
7 82 0.075361681 ubox
8 20 0.003317321 ubox
8 22 0.006937434 ubox
8 25 0.008532212 ubox
8 43 0.014149602 ubox
8 49 0.429790588 ubox
8 53 0.840988621 ubox
8 56 0.087346914 ubox
8 59 0.293608209 ubox
8 75 0.003990092 ubox
8 81 0.076239208 ubox
9 19 0.003378965 ubox
9 24 0.006270880 ubox
9 47 0.050759980 ubox
9 48 0.426633629 ubox
9 52 0.842465695 ubox
9 55 0.070946721 ubox
9 58 0.210436146 ubox
9 62 0.028253216 ubox
9 63 0.014573791 ubox
9 64 0.065518390 ubox
9 80 0.076198860 ubox
10 24 0.057402960 ubox
10 46 0.071644842 ubox
10 47 0.421683356 ubox
10 51 0.843913981 ubox
10 55 0.023060579 ubox
10 58 0.206723263 ubox
10 61 0.028563342 ubox
10 62 0.012551901 ubox
10 63 0.065777293 ubox
11 23 0.099855637 ubox
11 29 0.014342122 ubox
11 30 0.003199703 ubox
11 44 0.358750464 ubox
11 50 0.843795422 ubox
11 54 0.031743051 ubox
11 57 0.291028835 ubox
11 60 0.028709518 ubox
11 76 0.056727881 ubox
11 82 0.008273780 ubox
12 20 0.028256679 ubox
12 22 0.100319533 ubox
12 28 0.014406583 ubox
12 39 0.007850159 ubox
12 41 0.006126604 ubox
12 43 0.360567685 ubox
12 49 0.843677058 ubox
12 53 0.031972702 ubox
12 56 0.287833773 ubox
12 59 0.024789811 ubox
12 75 0.056718740 ubox
12 78 0.043859508 ubox
12 81 0.008330986 ubox
13 19 0.028365242 ubox
13 21 0.097756573 ubox
13 26 0.035818117 ubox
13 27 0.012540161 ubox
13 38 0.007877320 ubox
13 40 0.006007055 ubox
13 42 0.350270355 ubox
13 48 0.828113808 ubox
13 52 0.017694797 ubox
13 55 0.284149902 ubox
13 58 0.010175273 ubox
13 77 0.043525551 ubox
13 79 0.010606971 ubox
13 80 0.006824760 ubox
14 25 0.040472826 ubox
14 54 0.193802144 ubox
14 59 0.023560542 ubox
14 78 0.011699686 ubox
15 24 0.040533703 ubox
15 26 0.010239395 ubox
15 55 0.005137627 ubox
15 58 0.025209220 ubox
15 77 0.010910885 ubox
16 25 0.011668055 ubox
16 54 0.008775191 ubox
16 73 0.003441015 ubox
16 74 0.072899471 ubox
17 73 0.075445409 ubox
18 54 0.198383272 ubox
18 72 0.076375637 ubox
19 25 0.028386795 ubox
19 41 0.333227147 ubox
19 49 0.030388977 ubox
19 53 0.232761440 ubox
19 56 0.077491967 ubox
19 71 0.076517808 ubox
20 24 0.029651079 ubox
20 26 0.047939446 ubox
20 37 0.430208203 ubox
20 40 0.304372270 ubox
20 48 0.030507438 ubox
20 52 0.188598840 ubox
20 55 0.087333996 ubox
20 70 0.076157755 ubox
21 25 0.038986040 ubox
21 36 0.437723001 ubox
21 54 0.090355411 ubox
22 35 0.438008626 ubox
22 47 0.035609239 ubox
22 48 0.007717723 ubox
22 52 0.228978617 ubox
22 69 0.074593255 ubox
22 70 0.006976172 ubox
23 34 0.437384062 ubox
23 37 0.016523617 ubox
23 40 0.764575589 ubox
23 46 0.032978111 ubox
23 47 0.007657120 ubox
23 51 0.272849882 ubox
23 68 0.074560633 ubox
23 69 0.010149851 ubox
24 36 0.009932603 ubox
24 39 0.826609611 ubox
24 41 0.015538410 ubox
24 43 0.013660535 ubox
24 49 0.020063040 ubox
24 50 0.273408956 ubox
24 53 0.025001262 ubox
24 66 0.032599823 ubox
25 33 0.398039451 ubox
25 37 0.004907160 ubox
25 38 0.824577615 ubox
25 40 0.015496923 ubox
25 42 0.013756576 ubox
25 45 0.006346825 ubox
25 48 0.007084370 ubox
25 51 0.104494429 ubox
25 52 0.021301273 ubox
25 65 0.031858060 ubox
25 67 0.056838823 ubox
26 32 0.414987862 ubox
26 36 0.003720480 ubox
26 39 0.015204141 ubox
26 41 0.013756708 ubox
26 44 0.005853029 ubox
26 50 0.111707022 ubox
26 66 0.059027124 ubox
27 31 0.361094941 ubox
27 36 0.825108559 ubox
28 35 0.827184323 ubox
28 47 0.009019410 ubox
28 48 0.340170298 ubox
28 52 0.003983713 ubox
28 63 0.014179878 ubox
28 64 0.052272514 ubox
29 34 0.824266948 ubox
29 35 0.020912728 ubox
29 46 0.008439692 ubox
29 47 0.344307566 ubox
29 48 0.017095408 ubox
29 51 0.003988667 ubox
29 62 0.013866384 ubox
29 63 0.052277776 ubox
29 64 0.007784260 ubox
30 34 0.028655258 ubox
30 46 0.344374837 ubox
30 47 0.018052550 ubox
30 48 0.024263896 ubox
30 61 0.013660877 ubox
30 62 0.048830974 ubox
30 63 0.007851119 ubox
31 38 0.004379351 ubox
31 45 0.318855414 ubox
31 46 0.014775995 ubox
31 47 0.025897295 ubox
31 48 0.003304598 ubox
31 61 0.041337055 ubox
31 62 0.007636062 ubox
32 37 0.004493110 ubox
32 46 0.029970457 ubox
32 47 0.005509258 ubox
32 61 0.012788592 ubox
34 44 0.346358793 ubox
34 57 0.009647613 ubox
34 60 0.003276407 ubox
35 41 0.011416887 ubox
35 43 0.347509685 ubox
35 56 0.009631949 ubox
36 40 0.010696251 ubox
36 42 0.347093180 ubox
36 55 0.009494046 ubox
36 61 0.022301398 ubox
37 41 0.341554741 ubox
37 54 0.006323528 ubox
37 60 0.047681868 ubox
38 59 0.047705044 ubox
39 51 0.008674230 ubox
39 58 0.047692817 ubox
40 49 0.010999863 ubox
40 50 0.006313697 ubox
40 53 0.003808803 ubox
40 56 0.032118189 ubox
40 57 0.035694045 ubox
41 48 0.013992027 ubox
41 52 0.003705848 ubox
41 55 0.045077583 ubox
42 54 0.044829161 ubox
43 52 0.045753336 ubox
44 51 0.045766422 ubox
44 55 0.016618334 ubox
45 54 0.016732013 ubox
46 53 0.016766129 ubox
47 57 0.013864598 ubox
47 60 0.006709668 ubox
48 56 0.013906060 ubox
48 59 0.006724691 ubox
49 55 0.013894745 ubox
49 58 0.004998347 ubox
49 62 0.088405995 ubox
49 63 0.004101707 ubox
50 58 0.006296862 ubox
50 61 0.089435963 ubox
51 57 0.012294144 ubox
51 60 0.091319354 ubox
51 82 0.008499374 ubox
52 56 0.012113457 ubox
52 59 0.091261428 ubox
52 81 0.008677509 ubox
53 58 0.091373375 ubox
53 62 0.007363366 ubox
53 64 0.004738948 ubox
53 68 0.423861296 ubox
53 69 0.003936154 ubox
53 80 0.008718768 ubox
54 61 0.008501415 ubox
54 63 0.004083915 ubox
54 67 0.425974688 ubox
54 79 0.008607909 ubox
55 60 0.011758454 ubox
55 66 0.427064188 ubox
55 71 0.015979657 ubox
55 78 0.005532414 ubox
55 81 0.012643172 ubox
56 62 0.015202412 ubox
56 63 0.089470987 ubox
56 64 0.425023691 ubox
56 69 0.019785716 ubox
56 70 0.015926383 ubox
56 80 0.012701422 ubox
57 61 0.015897643 ubox
57 62 0.092353432 ubox
57 63 0.424501947 ubox
57 68 0.022015408 ubox
57 69 0.015753920 ubox
58 66 0.039109643 ubox
58 71 0.003533610 ubox
58 78 0.011845249 ubox
58 81 0.004012073 ubox
59 65 0.039322493 ubox
59 70 0.003535866 ubox
59 77 0.012125512 ubox
59 80 0.003963464 ubox
60 64 0.039007383 ubox
60 68 0.003217944 ubox
60 69 0.003611103 ubox
61 76 0.014696327 ubox
62 75 0.014701996 ubox
62 76 0.003714099 ubox
63 74 0.014599602 ubox
63 75 0.003813841 ubox
63 76 0.017626233 ubox
63 82 0.009317606 ubox
64 73 0.014579105 ubox
64 74 0.003824811 ubox
64 75 0.018384142 ubox
64 81 0.013769836 ubox
65 72 0.013522253 ubox
65 73 0.003692580 ubox
65 74 0.018079928 ubox
68 75 0.004097421 ubox
68 76 0.057077599 ubox
68 82 0.067589384 ubox
69 74 0.003279931 ubox
69 75 0.057094449 ubox
69 76 0.023533827 ubox
69 81 0.049170197 ubox
69 82 0.979991690 ubox
70 74 0.036985509 ubox
70 75 0.023201078 ubox
70 81 0.992790339 ubox
71 80 0.993964219 ubox
72 79 0.977288183 ubox
72 80 0.005516836 ubox
73 79 0.035551011 ubox
74 79 0.005167598 ubox
1 63 0.9500000 lbox
2 62 0.9500000 lbox
3 61 0.9500000 lbox
4 59 0.9500000 lbox
5 58 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
69 82 0.9500000 lbox
70 81 0.9500000 lbox
71 80 0.9500000 lbox
72 79 0.9500000 lbox
showpage
end
%%EOF
