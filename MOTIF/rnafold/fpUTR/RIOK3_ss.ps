%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUAGGGGCGUGCGGCCAAUUGCAAGCGACUGUCCUAGCGAAGAGGGCGGAAGAGGAGAGAUCCAGUUCCGGACGCGGCCGCCGCCGUCGCCGCCAUCUGUCACCUCCACUCCGGCAUCAGCAGCCAGUCGCCCGUGUCCCGCCUGUCUCCUCGGCGGAGCCUGCUGCCCGUCCUGCCACCUCUCUGCUCUGUUCUUGUCUCUGCCUUCAUUCCCGA\
) } def
/len { sequence length } bind def

/coor [
[-36.59859085 445.27066040]
[-47.74830246 435.23651123]
[-49.95893478 420.40032959]
[-58.77571106 432.53558350]
[-67.59249115 444.67083740]
[-76.40927124 456.80609131]
[-85.22605133 468.94134521]
[-94.04282379 481.07659912]
[-102.85960388 493.21185303]
[-100.58961487 508.62240601]
[-109.70395660 520.80364990]
[-124.40953827 522.87280273]
[-133.22631836 535.00805664]
[-141.95622253 547.20593262]
[-150.59883118 559.46588135]
[-151.83894348 577.84130859]
[-168.04792786 584.57440186]
[-176.51458740 596.95648193]
[-174.97851562 612.92584229]
[-186.60588074 623.97955322]
[-202.47715759 621.63812256]
[-210.41725159 607.69769287]
[-204.33522034 592.85223389]
[-188.89666748 588.48986816]
[-180.43000793 576.10778809]
[-182.35429382 564.16949463]
[-175.40760803 553.78582764]
[-162.85873413 550.82324219]
[-154.21614075 538.56335449]
[-152.93222046 531.29016113]
[-145.36157227 526.19128418]
[-136.54479980 514.05603027]
[-139.12121582 499.43078613]
[-130.35263062 486.99829102]
[-114.99485779 484.39508057]
[-106.17808533 472.25982666]
[-97.36130524 460.12457275]
[-88.54452515 447.98931885]
[-79.72774506 435.85406494]
[-70.91096497 423.71881104]
[-62.09418869 411.58355713]
[-53.89468384 399.02297974]
[-46.33293533 386.06842041]
[-38.77118683 373.11389160]
[-31.30212593 360.10571289]
[-23.92613220 347.04452515]
[-16.55013847 333.98333740]
[-9.17414474 320.92211914]
[-1.79815066 307.86093140]
[5.57784319 294.79974365]
[12.95383739 281.73855591]
[20.32983017 268.67736816]
[27.70582390 255.61618042]
[34.22786331 242.10829163]
[39.86902237 228.20945740]
[45.51018143 214.31063843]
[51.15133667 200.41181946]
[48.76848221 185.70904541]
[61.12770844 175.83178711]
[66.76886749 161.93296814]
[72.41002655 148.03414917]
[78.05118561 134.13531494]
[83.69234467 120.23649597]
[72.44526672 106.63176727]
[71.97563171 87.48079681]
[84.32099915 70.91081238]
[74.17837524 59.85969543]
[64.03575134 48.80857849]
[47.25609589 50.96415710]
[32.64425659 42.77268219]
[25.86439705 27.63671303]
[29.40880394 11.60503960]
[19.10940933 0.69988042]
[8.81001568 -10.20527840]
[0.64829534 -14.29181671]
[-1.55721128 -21.34046555]
[-11.69983482 -32.39158249]
[-21.92110443 -43.37000275]
[-32.22049713 -54.27516174]
[-42.51988983 -65.18032074]
[-52.81928635 -76.08547974]
[-68.67833710 -80.25950623]
[-72.73141479 -96.14989471]
[-60.80906296 -107.40998077]
[-45.17597198 -102.45635223]
[-41.91412735 -86.38487244]
[-31.61473274 -75.47971344]
[-21.31533813 -64.57455444]
[-11.01594543 -53.66939545]
[-4.14259291 -50.96666336]
[-0.64871776 -42.53420639]
[9.49390602 -31.48308945]
[19.71517563 -20.50467300]
[30.01456833 -9.59951305]
[40.31396103 1.30564570]
[53.33493423 -1.62662160]
[66.20824432 2.28777313]
[75.54183960 12.12914276]
[78.82138062 25.40169907]
[75.08686829 38.66595459]
[85.22949219 49.71707153]
[95.37211609 60.76818848]
[91.76931000 46.20728683]
[82.58734894 34.34594345]
[79.28129578 19.71480942]
[82.47121429 5.05791855]
[91.55882263 -6.87586880]
[104.83978271 -13.84840202]
[119.82327271 -14.55200100]
[133.69917297 -8.85470772]
[143.86511230 2.17496634]
[148.41448975 16.46843338]
[146.49407959 31.34499168]
[138.46403503 44.01458359]
[125.82903290 52.10155487]
[117.54257202 64.60493469]
[130.80906677 57.60492706]
[144.07556152 50.60491562]
[157.34205627 43.60490799]
[159.26464844 24.55476379]
[172.18426514 10.62800026]
[190.74081421 7.33600616]
[207.39479065 15.83223152]
[220.34931946 8.27048302]
[233.30384827 0.70873368]
[246.25839233 -6.85301495]
[259.21292114 -14.41476440]
[265.04187012 -21.43878937]
[272.40686035 -21.99048233]
[285.46804810 -29.36647606]
[270.76959229 -32.35896683]
[260.55593872 -43.34448242]
[258.64031982 -58.22165680]
[265.73791504 -71.43621063]
[279.19885254 -78.05457306]
[293.99761963 -75.60583496]
[304.60922241 -65.00421906]
[307.07183838 -50.20774841]
[300.46597290 -36.74045563]
[314.28283691 -42.57950974]
[323.98260498 -55.07851410]
[338.71789551 -52.90584946]
[352.53475952 -58.74489975]
[366.35159302 -64.58395386]
[380.16845703 -70.42300415]
[393.98532104 -76.26205444]
[396.51464844 -91.48066711]
[406.88717651 -102.90056610]
[421.79306030 -106.87770844]
[436.47592163 -102.14299774]
[446.25048828 -90.20726776]
[447.99771118 -74.87916565]
[441.16009521 -61.04983521]
[427.91946411 -53.13216019]
[412.50088501 -53.65264130]
[399.82437134 -62.44520187]
[386.00750732 -56.60614777]
[372.19064331 -50.76709747]
[358.37380981 -44.92804718]
[344.55694580 -39.08899307]
[335.84545898 -27.00763702]
[320.12188721 -28.76265335]
[306.30502319 -22.92360115]
[292.84405518 -16.30528641]
[279.78286743 -8.92929173]
[266.77465820 -1.46022987]
[253.82012939 6.10151911]
[240.86560059 13.66326809]
[227.91107178 21.22501755]
[214.95652771 28.78676605]
[215.95985413 39.88608170]
[212.73704529 50.60805893]
[205.71641541 59.39492798]
[195.88088989 64.95522308]
[184.63049316 66.45352173]
[173.58319092 63.63577271]
[164.34207153 56.87140274]
[151.07557678 63.87141037]
[137.80908203 70.87142181]
[124.54258728 77.87142944]
[130.99954224 95.80881500]
[126.38414001 113.23495483]
[113.46417236 124.26881409]
[97.59116364 125.87765503]
[91.95000458 139.77647400]
[86.30884552 153.67530823]
[80.66768646 167.57412720]
[75.02653503 181.47294617]
[77.00588989 197.16986084]
[65.05016327 206.05297852]
[59.40900421 219.95179749]
[53.76784515 233.85061646]
[48.12668610 247.74945068]
[61.15039825 240.30747986]
[76.13504028 240.98605347]
[88.43280792 249.57469177]
[94.22929382 263.40945435]
[91.72658539 278.19918823]
[81.70095825 289.35656738]
[67.26206207 293.42086792]
[52.88844299 289.13143921]
[43.03837585 277.81878662]
[40.76701736 262.99215698]
[33.39102173 276.05337524]
[26.01502800 289.11456299]
[18.63903427 302.17575073]
[11.26304054 315.23693848]
[3.88704658 328.29812622]
[-3.48894715 341.35931396]
[-10.86494064 354.42050171]
[-18.24093437 367.48168945]
[-19.73408699 376.48635864]
[-25.81665421 380.67565918]
[-33.37840271 393.63018799]
[-40.94015121 406.58471680]
[-26.46850586 402.63864136]
[-12.79608440 408.80831909]
[-6.17981768 422.27029419]
[-9.64751816 436.86395264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[12 32]
[13 31]
[14 29]
[15 28]
[17 25]
[18 24]
[42 215]
[43 214]
[44 213]
[45 211]
[46 210]
[47 209]
[48 208]
[49 207]
[50 206]
[51 205]
[52 204]
[53 203]
[54 193]
[55 192]
[56 191]
[57 190]
[59 188]
[60 187]
[61 186]
[62 185]
[63 184]
[66 102]
[67 101]
[68 100]
[72 95]
[73 94]
[74 93]
[76 92]
[77 91]
[78 89]
[79 88]
[80 87]
[81 86]
[116 180]
[117 179]
[118 178]
[119 177]
[123 170]
[124 169]
[125 168]
[126 167]
[127 166]
[129 165]
[130 164]
[139 163]
[140 162]
[142 160]
[143 159]
[144 158]
[145 157]
[146 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
