%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C16orf97)
} def

/sequence { (\
CAAGCCUCAUGCUAAGAUGUUGAAAAACAUACUCUUAUCCCCAAUUUACAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.042238643 ubox
1 19 0.005846101 ubox
1 22 0.018744686 ubox
2 10 0.040448792 ubox
2 18 0.005983461 ubox
2 21 0.016848427 ubox
2 36 0.033263416 ubox
2 46 0.030636362 ubox
2 47 0.038162297 ubox
3 13 0.749949175 ubox
3 20 0.014004258 ubox
3 21 0.023486129 ubox
3 33 0.004578809 ubox
3 35 0.035764728 ubox
3 45 0.033218624 ubox
3 46 0.039998378 ubox
3 47 0.029399899 ubox
4 12 0.830770980 ubox
4 20 0.026851228 ubox
4 32 0.004681326 ubox
4 34 0.035911545 ubox
4 45 0.035835697 ubox
4 46 0.028214073 ubox
5 11 0.829477142 ubox
5 19 0.028183608 ubox
6 16 0.027561552 ubox
7 15 0.026835428 ubox
7 17 0.030449270 ubox
7 23 0.039983791 ubox
8 16 0.033742201 ubox
8 19 0.018737249 ubox
8 22 0.041983810 ubox
9 18 0.019255519 ubox
9 21 0.039174777 ubox
9 38 0.067904810 ubox
9 45 0.018476908 ubox
10 17 0.019313905 ubox
10 19 0.003532739 ubox
10 37 0.071513375 ubox
10 43 0.067578264 ubox
10 44 0.018510156 ubox
10 48 0.003820177 ubox
10 50 0.022783670 ubox
11 20 0.039588567 ubox
11 36 0.067189059 ubox
11 42 0.074936710 ubox
11 47 0.004012171 ubox
11 49 0.025234678 ubox
12 19 0.041096722 ubox
13 22 0.003648303 ubox
13 31 0.006755295 ubox
13 37 0.536262899 ubox
13 48 0.020599862 ubox
14 21 0.004772441 ubox
14 30 0.006727906 ubox
14 36 0.679072661 ubox
14 46 0.007881664 ubox
14 47 0.022607217 ubox
15 20 0.004722201 ubox
15 33 0.525024201 ubox
15 35 0.702313676 ubox
15 36 0.019873440 ubox
15 45 0.005594257 ubox
15 46 0.020537574 ubox
15 47 0.012805070 ubox
16 32 0.555050610 ubox
16 34 0.705054011 ubox
16 35 0.016796760 ubox
16 36 0.010602446 ubox
16 39 0.051806656 ubox
16 45 0.018669181 ubox
16 46 0.014034930 ubox
16 47 0.006519304 ubox
17 30 0.752194928 ubox
17 33 0.631240163 ubox
17 35 0.008652751 ubox
17 38 0.051234099 ubox
17 45 0.013516293 ubox
17 46 0.006046687 ubox
18 29 0.961665862 ubox
18 31 0.090367563 ubox
18 37 0.048432173 ubox
18 43 0.012371887 ubox
18 44 0.011908279 ubox
18 50 0.013493907 ubox
19 28 0.968236633 ubox
19 30 0.087899594 ubox
19 32 0.187916175 ubox
19 36 0.045666336 ubox
19 42 0.013238442 ubox
19 45 0.016160869 ubox
19 49 0.014970151 ubox
20 26 0.012480388 ubox
20 27 0.965960609 ubox
20 29 0.079943876 ubox
20 31 0.182395086 ubox
20 44 0.017422667 ubox
20 48 0.013701627 ubox
20 51 0.004689397 ubox
21 25 0.014745731 ubox
21 26 0.948171218 ubox
21 29 0.175147046 ubox
21 31 0.010031617 ubox
21 37 0.003442999 ubox
21 43 0.018161409 ubox
21 48 0.006369422 ubox
21 50 0.006485074 ubox
22 28 0.183989180 ubox
22 30 0.011671824 ubox
22 34 0.038358638 ubox
22 36 0.003885895 ubox
22 39 0.016518809 ubox
22 42 0.018194923 ubox
22 46 0.005343859 ubox
22 47 0.008554633 ubox
22 49 0.006779910 ubox
23 33 0.037041948 ubox
23 35 0.003857793 ubox
23 38 0.016210756 ubox
23 45 0.005578666 ubox
23 46 0.008634029 ubox
23 47 0.004333819 ubox
24 36 0.003731164 ubox
24 45 0.007729123 ubox
24 46 0.004424970 ubox
24 47 0.005045171 ubox
25 35 0.003634428 ubox
25 36 0.014017869 ubox
25 45 0.003975142 ubox
25 46 0.005195063 ubox
26 35 0.014548073 ubox
26 36 0.003292023 ubox
26 45 0.004638954 ubox
27 35 0.003268312 ubox
29 38 0.012386475 ubox
30 37 0.014049552 ubox
31 36 0.014593149 ubox
31 47 0.003273900 ubox
35 44 0.032016312 ubox
35 51 0.005993370 ubox
36 43 0.034337860 ubox
36 48 0.036360542 ubox
36 50 0.007871378 ubox
37 45 0.024620111 ubox
37 47 0.039264345 ubox
38 44 0.026710445 ubox
45 51 0.017612365 ubox
46 50 0.019242202 ubox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
15 33 0.9500000 lbox
16 32 0.9500000 lbox
17 30 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
21 26 0.9500000 lbox
showpage
end
%%EOF
