%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TAS2R19)
} def

/sequence { (\
GGACUCAGAACAAGUGUUACUAAGCCUGCAUUUUUUUAUCUGUUCAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.125490300 ubox
1 27 0.019114148 ubox
1 33 0.003213883 ubox
1 40 0.005763821 ubox
1 41 0.056264854 ubox
1 44 0.006113211 ubox
1 45 0.908244110 ubox
2 18 0.003295962 ubox
2 25 0.125693032 ubox
2 26 0.020210340 ubox
2 32 0.004728070 ubox
2 39 0.005218595 ubox
2 40 0.059603789 ubox
2 43 0.008549660 ubox
2 44 0.910086011 ubox
2 45 0.285825493 ubox
3 17 0.003440463 ubox
3 31 0.004834723 ubox
3 39 0.058861579 ubox
3 43 0.906674154 ubox
3 44 0.283312796 ubox
4 16 0.003451465 ubox
4 24 0.125296413 ubox
4 42 0.882664660 ubox
5 23 0.123326087 ubox
6 28 0.011222100 ubox
6 42 0.387837343 ubox
7 21 0.120982573 ubox
7 27 0.011324424 ubox
7 33 0.007671064 ubox
7 34 0.014248020 ubox
7 35 0.020644392 ubox
7 36 0.068964801 ubox
7 37 0.318575639 ubox
7 41 0.447869622 ubox
8 20 0.124402447 ubox
8 26 0.011296745 ubox
8 32 0.008689566 ubox
8 33 0.016107222 ubox
8 34 0.023164929 ubox
8 35 0.076547449 ubox
8 36 0.352219624 ubox
8 37 0.675087126 ubox
8 40 0.455879308 ubox
8 45 0.208045141 ubox
9 18 0.126464976 ubox
9 31 0.008612680 ubox
9 32 0.016405177 ubox
9 33 0.022375166 ubox
9 34 0.075723539 ubox
9 35 0.355087432 ubox
9 36 0.704054367 ubox
9 37 0.164187900 ubox
9 39 0.437825763 ubox
9 44 0.208228536 ubox
10 17 0.127591742 ubox
10 31 0.015841439 ubox
10 32 0.019909014 ubox
10 33 0.057651152 ubox
10 34 0.349306945 ubox
10 35 0.712511270 ubox
10 36 0.168975860 ubox
10 43 0.208253053 ubox
11 16 0.127466017 ubox
11 28 0.025606453 ubox
11 42 0.208301543 ubox
12 27 0.023051982 ubox
12 32 0.032165958 ubox
12 33 0.890552350 ubox
12 34 0.084301798 ubox
12 35 0.047003161 ubox
12 36 0.076210785 ubox
12 37 0.027484329 ubox
12 41 0.185942930 ubox
13 21 0.014939885 ubox
13 27 0.057234316 ubox
13 31 0.027267981 ubox
13 32 0.965779334 ubox
13 33 0.074358210 ubox
13 34 0.041158809 ubox
13 35 0.065363908 ubox
13 36 0.025080997 ubox
13 37 0.010342453 ubox
13 41 0.028199243 ubox
14 20 0.015352922 ubox
14 25 0.021976077 ubox
14 26 0.058840382 ubox
14 29 0.021513894 ubox
14 31 0.979609869 ubox
14 32 0.053675449 ubox
14 33 0.020664763 ubox
14 34 0.032801499 ubox
14 35 0.013447637 ubox
14 36 0.005924494 ubox
14 39 0.084842797 ubox
14 40 0.039383932 ubox
15 19 0.013836047 ubox
15 24 0.022176580 ubox
15 28 0.020816588 ubox
15 30 0.983519500 ubox
15 38 0.087182800 ubox
16 25 0.066565564 ubox
16 27 0.006350422 ubox
16 29 0.983743707 ubox
16 31 0.007171181 ubox
16 37 0.084154497 ubox
16 39 0.018595105 ubox
17 23 0.010252401 ubox
17 24 0.067338915 ubox
17 28 0.971066535 ubox
17 30 0.007124544 ubox
17 38 0.018900107 ubox
18 22 0.015770725 ubox
18 23 0.068190192 ubox
18 28 0.089904635 ubox
18 38 0.009369557 ubox
19 27 0.120310395 ubox
19 37 0.009863647 ubox
21 28 0.018220224 ubox
21 38 0.004525401 ubox
22 27 0.038756174 ubox
22 32 0.038600582 ubox
22 33 0.037177729 ubox
22 34 0.018011400 ubox
22 35 0.010200179 ubox
22 36 0.005710955 ubox
22 37 0.005080516 ubox
23 31 0.039110729 ubox
23 32 0.038017419 ubox
23 33 0.018003148 ubox
23 34 0.010745135 ubox
23 35 0.005689466 ubox
23 36 0.005229499 ubox
24 31 0.030267118 ubox
24 32 0.015779556 ubox
24 33 0.010358768 ubox
24 34 0.004772810 ubox
24 35 0.004371835 ubox
27 38 0.005423499 ubox
27 46 0.014297231 ubox
28 37 0.006010829 ubox
28 43 0.036209929 ubox
28 45 0.015199677 ubox
29 42 0.038276865 ubox
30 39 0.012255253 ubox
30 41 0.035242708 ubox
30 43 0.014044863 ubox
31 38 0.014625535 ubox
31 42 0.014097634 ubox
32 47 0.003493947 ubox
32 48 0.003492172 ubox
33 46 0.003303671 ubox
33 47 0.004027068 ubox
33 48 0.003799928 ubox
34 46 0.003799108 ubox
34 47 0.004405186 ubox
34 48 0.004210718 ubox
35 46 0.004154226 ubox
35 47 0.004849863 ubox
35 48 0.009387492 ubox
36 46 0.004559062 ubox
36 47 0.010991596 ubox
37 46 0.011158717 ubox
42 49 0.012146246 ubox
43 48 0.011568008 ubox
1 45 0.9500000 lbox
2 44 0.9500000 lbox
3 43 0.9500000 lbox
4 42 0.9500000 lbox
8 37 0.9500000 lbox
9 36 0.9500000 lbox
10 35 0.9500000 lbox
12 33 0.9500000 lbox
13 32 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
showpage
end
%%EOF
