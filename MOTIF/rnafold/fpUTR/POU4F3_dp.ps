%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POU4F3)
} def

/sequence { (\
CGCUGAGCAGCGCUCACUUGGAGAGCGGCAAGCAAGCUAGACAAGCCUGAUUCCAUGUCACCCGCUGCCACCCUGCCAGGAGCGCGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.005975209 ubox
1 84 0.104030879 ubox
1 86 0.107250471 ubox
2 8 0.537444742 ubox
2 11 0.034378092 ubox
2 33 0.018613972 ubox
2 37 0.015175670 ubox
2 76 0.006716718 ubox
2 83 0.110186284 ubox
2 85 0.106220182 ubox
3 7 0.534092507 ubox
3 10 0.035326787 ubox
3 32 0.018642953 ubox
3 36 0.015194540 ubox
3 75 0.006727711 ubox
3 79 0.020036431 ubox
3 80 0.003468483 ubox
3 82 0.110063062 ubox
3 84 0.105765301 ubox
3 89 0.203401487 ubox
4 9 0.036855283 ubox
4 16 0.065229690 ubox
4 31 0.018533988 ubox
4 34 0.003466177 ubox
4 35 0.014775889 ubox
4 70 0.073014991 ubox
4 78 0.023413610 ubox
4 79 0.004379233 ubox
4 81 0.101171944 ubox
4 86 0.010503564 ubox
4 88 0.207521425 ubox
5 11 0.003218027 ubox
5 15 0.092206876 ubox
5 33 0.004748167 ubox
5 69 0.099341148 ubox
5 77 0.025142122 ubox
5 83 0.009443884 ubox
5 85 0.003900581 ubox
6 14 0.092251615 ubox
7 13 0.092266535 ubox
7 29 0.018916194 ubox
7 33 0.013973693 ubox
7 68 0.120750710 ubox
7 76 0.036255136 ubox
7 83 0.003669493 ubox
7 85 0.022479006 ubox
8 12 0.091595830 ubox
8 28 0.018864820 ubox
8 32 0.013974587 ubox
8 67 0.120857554 ubox
8 75 0.036278760 ubox
8 82 0.003665338 ubox
8 84 0.020626053 ubox
9 66 0.120832134 ubox
9 74 0.036112738 ubox
10 26 0.016593773 ubox
10 29 0.010410569 ubox
10 65 0.120860776 ubox
10 73 0.035173038 ubox
10 83 0.004590499 ubox
10 85 0.985088060 ubox
11 25 0.016720003 ubox
11 27 0.023073343 ubox
11 28 0.007386660 ubox
11 64 0.120838959 ubox
11 82 0.004548547 ubox
11 84 0.986341087 ubox
11 86 0.008971914 ubox
12 26 0.046824406 ubox
12 37 0.009406690 ubox
12 63 0.117602682 ubox
12 83 0.987260314 ubox
12 85 0.010453149 ubox
13 23 0.019300982 ubox
13 25 0.047011656 ubox
13 36 0.009570212 ubox
13 82 0.987273505 ubox
13 84 0.010456514 ubox
14 22 0.019374396 ubox
14 24 0.047000632 ubox
14 35 0.009528446 ubox
14 80 0.004022473 ubox
14 81 0.979767081 ubox
15 21 0.019345243 ubox
15 23 0.046964257 ubox
15 57 0.010521333 ubox
15 79 0.008741014 ubox
15 80 0.933590749 ubox
16 56 0.009997374 ubox
16 58 0.109706440 ubox
17 25 0.003696470 ubox
17 32 0.010806241 ubox
17 45 0.015430443 ubox
17 57 0.112104083 ubox
17 79 0.798908183 ubox
17 80 0.328725832 ubox
18 24 0.003703231 ubox
18 31 0.010829512 ubox
18 44 0.015543790 ubox
18 78 0.567441166 ubox
18 79 0.498494445 ubox
19 23 0.003348008 ubox
19 30 0.010839498 ubox
19 43 0.015669304 ubox
19 55 0.115813143 ubox
19 70 0.062504276 ubox
19 75 0.010417780 ubox
19 78 0.804257509 ubox
19 79 0.004625223 ubox
20 29 0.010845054 ubox
20 42 0.015687005 ubox
20 54 0.117745656 ubox
20 62 0.004544353 ubox
20 69 0.063563427 ubox
20 72 0.013305998 ubox
20 73 0.034799937 ubox
20 74 0.012916665 ubox
20 77 0.986300538 ubox
21 53 0.117741341 ubox
21 61 0.004542912 ubox
21 68 0.063518470 ubox
21 71 0.013398966 ubox
21 72 0.034783043 ubox
21 73 0.013033296 ubox
21 76 0.985366231 ubox
22 48 0.004096522 ubox
22 51 0.003874394 ubox
22 52 0.116528638 ubox
22 74 0.809936993 ubox
23 47 0.006644046 ubox
23 51 0.103469159 ubox
23 52 0.008019628 ubox
23 59 0.004542423 ubox
23 73 0.810357239 ubox
24 38 0.020477323 ubox
24 48 0.008652973 ubox
24 51 0.013957463 ubox
24 58 0.004432541 ubox
24 66 0.108822650 ubox
24 74 0.448199019 ubox
25 33 0.023488155 ubox
25 37 0.020887445 ubox
25 46 0.013214118 ubox
25 47 0.006508997 ubox
25 51 0.004553724 ubox
25 65 0.109625041 ubox
25 68 0.121262160 ubox
25 73 0.450076735 ubox
25 76 0.017620188 ubox
26 32 0.023619775 ubox
26 36 0.020884632 ubox
26 45 0.014154164 ubox
26 49 0.035502477 ubox
26 64 0.109631714 ubox
26 67 0.121516927 ubox
26 75 0.023009146 ubox
27 38 0.023503599 ubox
27 47 0.112840424 ubox
27 48 0.020995464 ubox
27 54 0.011845833 ubox
27 59 0.010785000 ubox
27 62 0.005725888 ubox
27 63 0.109126106 ubox
27 66 0.121228904 ubox
27 69 0.960942059 ubox
27 72 0.172778831 ubox
27 73 0.029835714 ubox
27 74 0.019647743 ubox
27 77 0.007786910 ubox
28 37 0.027005338 ubox
28 46 0.113124233 ubox
28 47 0.020400801 ubox
28 53 0.011928752 ubox
28 58 0.013656348 ubox
28 61 0.007937983 ubox
28 62 0.107726631 ubox
28 65 0.121311880 ubox
28 68 0.962288287 ubox
28 71 0.172210847 ubox
28 72 0.030108666 ubox
28 73 0.019515876 ubox
28 76 0.007804773 ubox
29 36 0.027518891 ubox
29 45 0.113139660 ubox
29 49 0.008688844 ubox
29 57 0.027513754 ubox
29 64 0.121179412 ubox
29 67 0.961634561 ubox
29 75 0.007809391 ubox
30 48 0.008783938 ubox
30 52 0.030037077 ubox
30 56 0.026369948 ubox
30 66 0.679678095 ubox
30 74 0.007454151 ubox
31 38 0.033726316 ubox
31 48 0.021359351 ubox
31 51 0.026850288 ubox
31 52 0.021037871 ubox
31 66 0.674201044 ubox
32 37 0.034649980 ubox
32 46 0.031099798 ubox
32 47 0.023930151 ubox
32 51 0.022159252 ubox
32 58 0.064277746 ubox
32 65 0.955189642 ubox
32 68 0.172674487 ubox
33 45 0.031270836 ubox
33 49 0.068562798 ubox
33 57 0.065214204 ubox
33 64 0.954135141 ubox
33 67 0.172859052 ubox
34 48 0.109027049 ubox
34 52 0.012247069 ubox
34 56 0.062364368 ubox
34 66 0.122870466 ubox
35 48 0.102268256 ubox
35 51 0.014694831 ubox
35 52 0.027142035 ubox
35 66 0.132212518 ubox
36 46 0.839246813 ubox
36 47 0.082311034 ubox
36 51 0.026886538 ubox
36 58 0.023367023 ubox
36 65 0.186748060 ubox
36 68 0.004541323 ubox
37 45 0.845070935 ubox
37 57 0.023739128 ubox
37 64 0.186555740 ubox
37 67 0.004535297 ubox
38 44 0.826386841 ubox
38 49 0.042308904 ubox
38 57 0.005524568 ubox
39 48 0.059673776 ubox
39 52 0.006259676 ubox
39 56 0.006970288 ubox
40 47 0.065741727 ubox
40 51 0.006047778 ubox
40 52 0.008745556 ubox
40 53 0.014204279 ubox
40 59 0.505790735 ubox
41 51 0.009206755 ubox
41 52 0.013387502 ubox
41 58 0.506850520 ubox
42 49 0.022692535 ubox
42 57 0.506877772 ubox
42 67 0.008521384 ubox
43 48 0.020903932 ubox
43 52 0.031638706 ubox
43 56 0.482115923 ubox
43 66 0.006283544 ubox
44 51 0.060554125 ubox
44 52 0.045414527 ubox
44 66 0.040848086 ubox
45 51 0.039285721 ubox
45 58 0.024451630 ubox
45 65 0.053452178 ubox
46 57 0.025724807 ubox
46 64 0.053480983 ubox
48 55 0.319341899 ubox
48 57 0.005601813 ubox
48 60 0.736440392 ubox
49 54 0.322489482 ubox
49 56 0.005217091 ubox
49 59 0.841144389 ubox
49 63 0.012526919 ubox
50 56 0.013731422 ubox
50 58 0.840600777 ubox
51 55 0.014763436 ubox
51 57 0.833554695 ubox
56 64 0.005672187 ubox
57 63 0.025993553 ubox
57 65 0.014720682 ubox
58 64 0.014365816 ubox
63 79 0.003309675 ubox
63 84 0.009267721 ubox
63 86 0.022469352 ubox
64 76 0.003838865 ubox
64 83 0.012455495 ubox
64 85 0.022698881 ubox
65 75 0.003866384 ubox
65 79 0.011055736 ubox
65 82 0.012460861 ubox
65 84 0.022189152 ubox
66 78 0.011112118 ubox
66 81 0.012405762 ubox
66 84 0.004827864 ubox
67 76 0.007549585 ubox
67 77 0.010304283 ubox
67 83 0.023098578 ubox
68 75 0.009135212 ubox
68 80 0.011897551 ubox
68 82 0.023093528 ubox
69 75 0.011609572 ubox
69 79 0.012005297 ubox
70 74 0.009567248 ubox
71 80 0.043579182 ubox
72 79 0.043626536 ubox
72 80 0.106213580 ubox
73 79 0.106613232 ubox
73 80 0.017578537 ubox
73 82 0.011410397 ubox
74 78 0.096104103 ubox
74 79 0.017227433 ubox
74 81 0.011499255 ubox
74 84 0.008547894 ubox
74 86 0.009082577 ubox
75 83 0.033483168 ubox
75 85 0.011251482 ubox
76 82 0.033468449 ubox
76 84 0.011244157 ubox
10 85 0.9500000 lbox
11 84 0.9500000 lbox
12 83 0.9500000 lbox
13 82 0.9500000 lbox
14 81 0.9500000 lbox
15 80 0.9500000 lbox
17 79 0.9500000 lbox
18 78 0.9500000 lbox
20 77 0.9500000 lbox
21 76 0.9500000 lbox
22 74 0.9500000 lbox
23 73 0.9500000 lbox
27 69 0.9500000 lbox
28 68 0.9500000 lbox
29 67 0.9500000 lbox
30 66 0.9500000 lbox
32 65 0.9500000 lbox
33 64 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
48 60 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
showpage
end
%%EOF
