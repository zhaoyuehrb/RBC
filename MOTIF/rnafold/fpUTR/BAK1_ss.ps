%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUGCAUCCGGUGGCCACAGAGCAACUUCCUCUAGAGGGAGCUGAUUGGAGCCGGGUGCCGCUGGCACCUCUAUGAUCACUGGAGUCUCGCGGGUCCCUCGGGCUGCACAGGGACAAGUAAAGGCUACAUCCAGAUGCCGGGAAUGCACUGACGCCCAUUCCUGGAAACUGGGCUCCCACUCAGCCCCUGGGAGCAGCAGCCGCCAGCCCCUCGGGACCUCCAUCUCCACCCUGCUGAGCCACCCGGGUUGGGC\
CAGGAUCCCGGCAGGCUGAUCCCGUCCUCCACUGAGACCUGAAAA\
) } def
/len { sequence length } bind def

/coor [
[227.84153748 400.52267456]
[221.05261230 387.14694214]
[214.26368713 373.77117920]
[207.47476196 360.39544678]
[200.68583679 347.01971436]
[194.88493347 342.49954224]
[193.89668274 333.46875000]
[187.24772644 320.02285767]
[180.59877014 306.57699585]
[173.94982910 293.13113403]
[167.30087280 279.68527222]
[160.65191650 266.23937988]
[153.93289185 252.82839966]
[147.14396667 239.45265198]
[140.35504150 226.07691956]
[133.56611633 212.70117188]
[126.70748138 199.36103821]
[119.77931976 186.05688477]
[112.78182983 172.78906250]
[105.71519470 159.55793762]
[98.64855957 146.32681274]
[83.72222900 144.84194946]
[74.18743896 156.42156982]
[64.65264130 168.00119019]
[65.98615265 183.52084351]
[56.15156174 195.12840271]
[41.34772873 196.30406189]
[31.81293297 207.88368225]
[22.27813721 219.46330261]
[12.74334145 231.04292297]
[12.85239792 247.08561707]
[0.28762108 257.06088257]
[-15.31236649 253.31655884]
[-21.98059082 238.72497559]
[-14.60175991 224.47953796]
[1.16371846 221.50813293]
[10.69851494 209.92851257]
[20.23331070 198.34889221]
[29.76810646 186.76925659]
[28.08120728 172.01493835]
[37.58589172 160.13572693]
[53.07301712 158.46640015]
[62.60781479 146.88677979]
[72.14260864 135.30714417]
[63.93148804 122.75416565]
[49.50158691 126.85025024]
[35.07168579 130.94633484]
[20.64178276 135.04241943]
[12.90679169 148.56306458]
[-1.78553116 152.51152039]
[-14.62772560 145.05406189]
[-29.05762672 149.15014648]
[-33.87176132 153.56684875]
[-39.36818314 154.74891663]
[-43.83158112 153.17776489]
[-58.34383392 156.97175598]
[-72.85609436 160.76576233]
[-87.36834717 164.55975342]
[-101.88059998 168.35375977]
[-116.39286041 172.14776611]
[-130.90510559 175.94175720]
[-144.69989014 185.79774475]
[-157.98947144 175.27047729]
[-151.55253601 159.58601379]
[-134.69911194 161.42950439]
[-120.18685913 157.63551331]
[-105.67460632 153.84150696]
[-91.16234589 150.04750061]
[-76.65009308 146.25350952]
[-62.13783646 142.45950317]
[-47.62557983 138.66549683]
[-33.15371323 134.72024536]
[-18.72381210 130.62416077]
[-11.71492100 117.53175354]
[2.86070156 113.17218018]
[16.54569626 120.61251831]
[30.97559929 116.51643372]
[45.40550232 112.42034912]
[59.83540344 108.32425690]
[65.45144653 88.00542450]
[79.35099792 75.39062500]
[95.60147095 72.67360687]
[97.31982422 57.77235794]
[99.03818512 42.87110901]
[100.75653839 27.96985817]
[102.47489166 13.06860733]
[91.46304321 6.42541981]
[83.79583740 -3.84153986]
[80.57648468 -16.19630051]
[82.24600983 -28.80698586]
[88.52324677 -39.81742096]
[98.45143127 -47.62034225]
[110.54387665 -51.09200287]
[112.57289124 -65.95413971]
[114.60189819 -80.81627655]
[116.63091278 -95.67841339]
[118.65992737 -110.54055023]
[120.68893433 -125.40268707]
[122.71794891 -140.26481628]
[111.87825775 -154.02459717]
[114.32006836 -171.02828979]
[128.04235840 -180.78903198]
[129.91615295 -195.67153931]
[131.78993225 -210.55404663]
[133.66372681 -225.43655396]
[135.53750610 -240.31904602]
[137.41128540 -255.20155334]
[128.64454651 -243.03010559]
[116.32526398 -234.47233582]
[101.85945129 -230.50495911]
[86.89807892 -231.58074951]
[73.14868927 -237.57695007]
[62.18050003 -247.80918884]
[55.24530792 -261.10968018]
[53.13462830 -275.96044922]
[56.08935165 -290.66653442]
[63.77225113 -303.54959106]
[75.30648041 -313.13925171]
[89.37564850 -318.34103394]
[104.37403107 -318.56127930]
[118.58986664 -313.77487183]
[130.40071106 -304.52801514]
[138.45858765 -291.87612915]
[141.84399414 -277.26058960]
[145.86473083 -291.71166992]
[149.88545227 -306.16275024]
[153.90618896 -320.61383057]
[141.76919556 -330.32907104]
[135.31759644 -345.08840942]
[136.50706482 -361.71514893]
[145.58332825 -376.36169434]
[160.90933228 -385.39956665]
[161.53538513 -400.38650513]
[162.16143799 -415.37344360]
[162.78747559 -430.36038208]
[150.79563904 -440.02999878]
[146.84317017 -454.73480225]
[152.24343872 -468.78118896]
[164.72981262 -476.85760498]
[165.35586548 -491.84454346]
[165.98191833 -506.83145142]
[166.60795593 -521.81842041]
[167.23400879 -536.80529785]
[167.86006165 -551.79223633]
[168.48611450 -566.77917480]
[169.11215210 -581.76611328]
[169.73820496 -596.75305176]
[156.72631836 -604.91308594]
[149.55187988 -618.49334717]
[150.14480591 -633.84075928]
[158.34559631 -646.82702637]
[171.94825745 -653.95886230]
[187.29377747 -653.31781006]
[200.25425720 -645.07635498]
[207.34339905 -631.45141602]
[206.65428162 -616.10797119]
[198.37225342 -603.17340088]
[184.72512817 -596.12701416]
[184.09909058 -581.14007568]
[183.47303772 -566.15313721]
[182.84698486 -551.16619873]
[182.22093201 -536.17926025]
[181.59489441 -521.19232178]
[180.96884155 -506.20541382]
[180.34278870 -491.21847534]
[179.71673584 -476.23156738]
[191.48603821 -467.14190674]
[195.69601440 -452.69409180]
[190.53092957 -438.37014771]
[177.77441406 -429.73431396]
[177.14836121 -414.74737549]
[176.52230835 -399.76046753]
[175.89627075 -384.77352905]
[189.82090759 -379.19638062]
[199.71354675 -390.47183228]
[209.60618591 -401.74728394]
[219.49882507 -413.02273560]
[229.39146423 -424.29818726]
[239.28410339 -435.57360840]
[249.17674255 -446.84906006]
[244.82298279 -461.64935303]
[249.18391418 -476.44750977]
[260.86801147 -486.52151489]
[276.14688110 -488.65679932]
[290.14511108 -482.17196655]
[298.39593506 -469.13635254]
[298.26651001 -453.70953369]
[289.79815674 -440.81414795]
[275.69308472 -434.56512451]
[260.45217896 -436.95642090]
[250.55953979 -425.68096924]
[240.66690063 -414.40554810]
[230.77426147 -403.13009644]
[220.88162231 -391.85464478]
[210.98898315 -380.57919312]
[201.09634399 -369.30374146]
[205.81236267 -349.77929688]
[199.88148499 -331.42266846]
[185.83700562 -319.38684082]
[168.35726929 -316.59310913]
[164.33653259 -302.14202881]
[160.31581116 -287.69094849]
[156.29508972 -273.23986816]
[159.15489197 -267.14096069]
[158.00166321 -259.61657715]
[152.29379272 -253.32777405]
[150.42001343 -238.44526672]
[148.54621887 -223.56275940]
[146.67243958 -208.68025208]
[144.79866028 -193.79776001]
[142.92486572 -178.91525269]
[152.15725708 -169.96734619]
[154.60156250 -157.14700317]
[149.14930725 -145.07562256]
[137.58007812 -138.23580933]
[135.55107117 -123.37367249]
[133.52206421 -108.51153564]
[131.49304199 -93.64939880]
[129.46403503 -78.78726196]
[127.43502808 -63.92512512]
[125.40601349 -49.06298828]
[139.41059875 -38.97945404]
[146.38810730 -23.09817886]
[144.32107544 -5.78523684]
[133.69233704 8.14912796]
[117.37614441 14.78696251]
[115.65778351 29.68821335]
[113.93943024 44.58946228]
[112.22107697 59.49071121]
[110.50272369 74.39196014]
[130.04203796 88.62112427]
[132.81126404 116.15219879]
[111.87968445 139.26017761]
[118.94631958 152.49130249]
[126.01295471 165.72242737]
[132.78257751 171.78080750]
[133.08348083 179.12872314]
[140.01164246 192.43287659]
[146.71766663 198.56158447]
[146.94186401 205.91224670]
[153.73078918 219.28799438]
[160.51969910 232.66372681]
[167.30862427 246.03947449]
[173.95031738 252.23783875]
[174.09779358 259.59042358]
[180.74674988 273.03631592]
[187.39569092 286.48217773]
[194.04464722 299.92803955]
[200.69360352 313.37393188]
[207.34255981 326.81979370]
[214.06158447 340.23077393]
[220.85050964 353.60650635]
[227.63943481 366.98226929]
[234.42835999 380.35800171]
[241.21728516 393.73373413]
[248.35287476 406.92782593]
[255.83026123 419.93121338]
[263.30764771 432.93463135]
[270.78503418 445.93804932]
[277.74102783 451.78152466]
[278.27182007 459.11642456]
[285.61306763 472.19714355]
[299.11444092 480.44482422]
[298.59606934 495.33038330]
[305.93734741 508.41113281]
[313.27862549 521.49188232]
[331.06369019 531.04809570]
[329.86715698 550.37506104]
[337.47985840 563.29968262]
[345.09255981 576.22436523]
[358.76312256 584.18841553]
[358.55560303 599.08154297]
[366.16830444 612.00622559]
[380.69982910 619.60662842]
[381.11300659 636.00061035]
[366.98278809 644.32336426]
[352.84512329 636.01324463]
[353.24362183 619.61889648]
[345.63092041 606.69427490]
[332.50488281 599.65466309]
[332.16790771 583.83703613]
[324.55520630 570.91241455]
[316.94250488 557.98773193]
[306.91705322 556.34692383]
[299.27111816 549.32989502]
[296.67007446 539.05731201]
[300.19787598 528.83312988]
[292.85659790 515.75238037]
[285.51535034 502.67166138]
[272.53909302 495.35961914]
[272.53234863 479.53842163]
[265.19107056 466.45767212]
[257.78164673 453.41543579]
[250.30424500 440.41201782]
[242.82685852 427.40859985]
[235.34945679 414.40521240]
[229.23674011 428.10317993]
[214.74328613 431.96838379]
[202.62133789 423.13330078]
[201.86380005 408.15243530]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 255]
[2 254]
[3 253]
[4 252]
[5 251]
[7 250]
[8 249]
[9 248]
[10 247]
[11 246]
[12 245]
[13 243]
[14 242]
[15 241]
[16 240]
[17 238]
[18 237]
[19 235]
[20 234]
[21 233]
[22 44]
[23 43]
[24 42]
[27 39]
[28 38]
[29 37]
[30 36]
[45 79]
[46 78]
[47 77]
[48 76]
[51 73]
[52 72]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[60 66]
[61 65]
[82 230]
[83 229]
[84 228]
[85 227]
[86 226]
[93 221]
[94 220]
[95 219]
[96 218]
[97 217]
[98 216]
[99 215]
[102 211]
[103 210]
[104 209]
[105 208]
[106 207]
[107 206]
[124 203]
[125 202]
[126 201]
[127 200]
[132 173]
[133 172]
[134 171]
[135 170]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[174 196]
[175 195]
[176 194]
[177 193]
[178 192]
[179 191]
[180 190]
[256 296]
[257 295]
[258 294]
[259 293]
[261 292]
[262 291]
[264 289]
[265 288]
[266 287]
[268 283]
[269 282]
[270 281]
[272 279]
[273 278]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
