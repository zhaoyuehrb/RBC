%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUAAAUCUUCCCAAAUCUGGUGCCCAUACCUUCUAUGGCAGGGGCUUUUAGCACCAUUCUUUAACGUUAGACACAUAACCACAGCCUAAUCACUUGAACCAUUUAAUCCUUACCAGCCUCUAGCAUUAUCCUAAAACCCUGAACCUCUUCCAGCUUUCUUAAACUUUCAGCUUUUCUUGAAACGACUUUUUCUGAUUCUAAGAUUAUUUUAACUGUAAGUAGGAGAAGACAUCUGAAAUUUAACU\
) } def
/len { sequence length } bind def

/coor [
[230.21786499 251.40069580]
[221.09837341 263.31015015]
[208.67802429 271.72052002]
[194.23411560 275.76693726]
[179.25205994 275.03323364]
[165.27264404 269.59484863]
[153.73352051 260.01107788]
[145.82136536 247.26754761]
[142.34986877 232.67478943]
[143.67604065 217.73353577]
[149.66351318 203.98034668]
[159.69651794 192.82960510]
[172.74327087 185.42808533]
[187.46200562 182.53694153]
[202.33843994 184.45333862]
[190.24801636 175.57518005]
[178.15759277 166.69702148]
[163.31951904 165.40052795]
[156.77572632 150.99603271]
[144.68530273 142.11787415]
[132.59486389 133.23971558]
[120.50444794 124.36156464]
[108.52095795 131.97236633]
[93.89610291 133.78770447]
[79.38682556 129.00166321]
[67.92610168 118.09709167]
[56.79589462 128.15286255]
[45.66569138 138.20863342]
[34.53548813 148.26440430]
[23.40528488 158.32017517]
[21.15996170 174.20533752]
[7.26788473 182.22966003]
[-7.61413479 176.23757935]
[-12.06988430 160.82569885]
[-2.68129492 147.81671143]
[13.34951210 147.18997192]
[24.47971535 137.13420105]
[35.60992050 127.07843018]
[46.74012375 117.02265930]
[57.87032700 106.96688843]
[58.06033707 91.96809387]
[47.18844604 81.63358307]
[36.31655502 71.29907990]
[25.44466209 60.96458054]
[14.57277012 50.63007355]
[8.28290272 48.72386551]
[4.45816517 44.56176376]
[3.56056404 39.89339066]
[-7.04603767 29.28679085]
[-17.65263939 18.68018913]
[-28.25924110 8.07358646]
[-38.86584473 -2.53301477]
[-49.47244644 -13.13961697]
[-56.10651398 -10.41401291]
[-63.18369293 -9.39453697]
[-70.27371216 -10.13234997]
[-76.94815826 -12.57210255]
[-82.80636597 -16.55593300]
[-87.49945831 -21.83364105]
[-90.75112915 -28.07838058]
[-92.37387848 -34.90689087]
[-92.27982330 -41.90301132]
[-90.48536682 -48.64305115]
[-87.10957336 -54.72144699]
[-96.58869934 -66.34667969]
[-106.06783295 -77.97191620]
[-120.78527069 -83.77774048]
[-122.83163452 -98.53109741]
[-132.31077576 -110.15633392]
[-141.78990173 -121.78157043]
[-151.26902771 -133.40679932]
[-160.74815369 -145.03204346]
[-170.22729492 -156.65727234]
[-182.98634338 -148.73043823]
[-196.65432739 -142.50030518]
[-211.00682068 -138.06921387]
[-225.80810547 -135.50990295]
[-240.81515503 -134.86441040]
[-255.78153992 -136.14332581]
[-270.46151733 -139.32565308]
[-284.61398315 -144.35914612]
[-298.00656128 -151.16113281]
[-310.41934204 -159.61991882]
[-321.64846802 -169.59661865]
[-331.50961304 -180.92739868]
[-339.84078979 -193.42620850]
[-346.50518799 -206.88777161]
[-351.39340210 -221.09106445]
[-354.42517090 -235.80285645]
[-355.55065918 -250.78157043]
[-354.75143433 -265.78121948]
[-352.04061890 -280.55551147]
[-347.46270752 -294.86184692]
[-341.09286499 -308.46527100]
[-333.03570557 -321.14245605]
[-323.42355347 -332.68518066]
[-312.41421509 -342.90390015]
[-300.18847656 -351.63088989]
[-286.94711304 -358.72274780]
[-272.90756226 -364.06307983]
[-258.30032349 -367.56417847]
[-243.36534119 -369.16854858]
[-228.34777832 -368.84982300]
[-213.49429321 -366.61328125]
[-199.04876709 -362.49563599]
[-185.24841309 -356.56448364]
[-172.31985474 -348.91720581]
[-160.47537231 -339.67941284]
[-149.90948486 -329.00280762]
[-140.79566956 -317.06268311]
[-133.28361511 -304.05508423]
[-127.49664307 -290.19366455]
[-123.52980042 -275.70599365]
[-121.44821930 -260.82998657]
[-121.28607941 -245.80993652]
[-123.04605865 -230.89247131]
[-126.69923401 -216.32254028]
[-132.18563843 -202.33941650]
[-139.41516113 -189.17271423]
[-148.26910400 -177.03862000]
[-158.60205078 -166.13639832]
[-149.12292480 -154.51116943]
[-139.64379883 -142.88594055]
[-130.16465759 -131.26069641]
[-120.68553162 -119.63546753]
[-111.20640564 -108.01023102]
[-97.16697693 -103.03591919]
[-94.44259644 -87.45104980]
[-84.96346283 -75.82581329]
[-75.48433685 -64.20057678]
[-52.42320251 -64.41564178]
[-36.64377594 -47.23455048]
[-38.86584473 -23.74621773]
[-28.25924110 -13.13961697]
[-17.65263939 -2.53301477]
[-7.04603767 8.07358646]
[3.56056404 18.68018913]
[14.16716576 29.28679085]
[24.90727425 39.75818253]
[35.77916718 50.09268570]
[46.65105820 60.42719269]
[57.52294922 70.76169586]
[68.39484406 81.09619904]
[76.67021942 72.22463226]
[87.23338318 66.64004517]
[98.86196136 64.85295105]
[110.25360107 66.94210052]
[120.17183685 72.55875397]
[127.58024597 80.97808838]
[131.75045776 91.19074249]
[132.33276367 102.02292633]
[129.38259888 112.27114105]
[141.47302246 121.14929962]
[153.56344604 130.02745056]
[165.65386963 138.90560913]
[181.35673523 140.83712769]
[187.03575134 154.60659790]
[199.12617493 163.48475647]
[211.21659851 172.36289978]
[222.40228271 173.91490173]
[227.99093628 182.23739624]
[241.62103271 188.50003052]
[255.25112915 194.76266479]
[268.88122559 201.02529907]
[282.51132202 207.28793335]
[291.59124756 208.02268982]
[296.27362061 213.71719360]
[309.82327271 220.15199280]
[323.37295532 226.58677673]
[336.92260742 233.02156067]
[350.47229004 239.45635986]
[364.02194214 245.89114380]
[377.73028564 251.98062134]
[391.58847046 257.72088623]
[405.44665527 263.46112061]
[419.30487061 269.20138550]
[433.16305542 274.94161987]
[447.02124023 280.68188477]
[460.87942505 286.42211914]
[474.73764038 292.16238403]
[488.59582520 297.90264893]
[497.13995361 285.51004028]
[508.06985474 275.16882324]
[520.90606689 267.32931519]
[535.08624268 262.33203125]
[549.98980713 260.39315796]
[564.96496582 261.59500122]
[579.35729980 265.88262939]
[592.53845215 273.06631470]
[603.93347168 282.82986450]
[613.04571533 294.74468994]
[619.47894287 308.28851318]
[622.95410156 322.86828613]
[623.32165527 337.84613037]
[620.56799316 352.56729126]
[634.42620850 358.30755615]
[648.28442383 364.04782104]
[662.14257812 369.78805542]
[676.00079346 375.52832031]
[692.18017578 372.85250854]
[702.37664795 385.69631958]
[696.10095215 400.84716797]
[679.80902100 402.71911621]
[670.26055908 389.38650513]
[656.40234375 383.64624023]
[642.54412842 377.90600586]
[628.68597412 372.16574097]
[614.82775879 366.42550659]
[606.36547852 378.78207397]
[595.51458740 389.11309814]
[582.74786377 396.96524048]
[568.62194824 401.99319458]
[553.75354004 403.97491455]
[538.79217529 402.82131958]
[524.39208984 398.58044434]
[511.18334961 391.43533325]
[499.74447632 381.69613647]
[490.57705688 369.78674316]
[484.08374023 356.22622681]
[480.55056763 341.60626221]
[480.13430786 326.56533813]
[482.85556030 311.76083374]
[468.99737549 306.02056885]
[455.13919067 300.28033447]
[441.28100586 294.54006958]
[427.42279053 288.79983521]
[413.56460571 283.05957031]
[399.70642090 277.31930542]
[385.84823608 271.57907104]
[371.99002075 265.83880615]
[369.36868286 266.76535034]
[366.22662354 266.72213745]
[362.92681885 265.50729370]
[359.89797974 263.05230713]
[357.58715820 259.44082642]
[344.03750610 253.00602722]
[330.48782349 246.57122803]
[316.93817139 240.13644409]
[303.38848877 233.70166016]
[289.83883667 227.26686096]
[276.24868774 220.91802979]
[262.61859131 214.65539551]
[248.98849487 208.39276123]
[235.35839844 202.13012695]
[221.72830200 195.86749268]
[230.62374878 207.94519043]
[235.23872375 222.21762085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 159]
[16 158]
[17 157]
[19 155]
[20 154]
[21 153]
[22 152]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[41 143]
[42 142]
[43 141]
[44 140]
[45 139]
[48 138]
[49 137]
[50 136]
[51 135]
[52 134]
[53 133]
[64 130]
[65 129]
[66 128]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[161 245]
[162 244]
[163 243]
[164 242]
[165 241]
[167 240]
[168 239]
[169 238]
[170 237]
[171 236]
[172 235]
[173 230]
[174 229]
[175 228]
[176 227]
[177 226]
[178 225]
[179 224]
[180 223]
[181 222]
[195 208]
[196 207]
[197 206]
[198 205]
[199 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
