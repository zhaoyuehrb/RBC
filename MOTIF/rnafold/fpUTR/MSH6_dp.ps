%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MSH6)
} def

/sequence { (\
GGCGAGGCGCCUGUUGAUUGGCCACUGGGGCCCGGGUUCCUCCGGCGGAGCGCGCCUCCCCCCAGAUUUCCCGCCAGCAGGAGCCGCGCGGUAGAUGCGGUGCUUUUAGGAGCUCCGUCCGACAGAACGGUUGGGCCUUGCCGGCUGUCGGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 119 0.004331156 ubox
1 142 0.012063557 ubox
2 87 0.015574776 ubox
2 89 0.998776641 ubox
2 92 0.006938038 ubox
2 141 0.012081040 ubox
3 86 0.015532823 ubox
3 88 0.999649195 ubox
3 90 0.007972081 ubox
3 91 0.006769766 ubox
3 140 0.012085153 ubox
4 85 0.006749953 ubox
4 87 0.996468328 ubox
4 89 0.008058789 ubox
4 139 0.012072598 ubox
5 138 0.012077005 ubox
6 85 0.997554859 ubox
6 137 0.012056899 ubox
7 84 0.999913957 ubox
7 136 0.012043511 ubox
8 83 0.997922468 ubox
8 135 0.012030300 ubox
9 22 0.008635447 ubox
10 21 0.008652819 ubox
10 81 0.998254982 ubox
11 20 0.008652582 ubox
11 80 0.999941467 ubox
12 79 0.999709176 ubox
13 78 0.999933211 ubox
14 77 0.998883578 ubox
15 73 0.004003078 ubox
15 76 0.992413893 ubox
15 79 0.003211851 ubox
16 72 0.005131420 ubox
16 75 0.988982724 ubox
16 78 0.004330242 ubox
17 67 0.004747570 ubox
18 65 0.007644851 ubox
18 66 0.004005477 ubox
18 77 0.032505431 ubox
19 64 0.008905936 ubox
19 73 0.556515944 ubox
19 76 0.105632223 ubox
20 32 0.070183652 ubox
20 63 0.009213603 ubox
20 68 0.010119480 ubox
20 69 0.009608241 ubox
20 70 0.108578794 ubox
20 71 0.764633120 ubox
20 72 0.606703846 ubox
20 75 0.115294534 ubox
21 31 0.070433622 ubox
21 62 0.009205885 ubox
21 67 0.010772555 ubox
21 68 0.010357137 ubox
21 69 0.101761366 ubox
21 70 0.766408636 ubox
21 71 0.603548487 ubox
21 74 0.118035215 ubox
22 29 0.003581358 ubox
22 30 0.070365637 ubox
22 73 0.117866990 ubox
23 28 0.004997330 ubox
23 29 0.070225758 ubox
25 65 0.993320749 ubox
26 64 0.996445448 ubox
27 58 0.003755207 ubox
27 59 0.003171612 ubox
27 60 0.009040319 ubox
27 61 0.039344521 ubox
27 62 0.074494655 ubox
27 63 0.993864819 ubox
28 57 0.005221831 ubox
28 58 0.003456212 ubox
28 59 0.010048803 ubox
28 60 0.043493135 ubox
28 61 0.102829069 ubox
28 62 0.991152546 ubox
28 63 0.004062163 ubox
29 56 0.015412243 ubox
29 57 0.003922762 ubox
29 58 0.010954001 ubox
29 59 0.047496559 ubox
29 60 0.124650948 ubox
29 61 0.988298740 ubox
29 62 0.004659975 ubox
30 46 0.116532442 ubox
30 55 0.021042561 ubox
30 56 0.012425029 ubox
30 57 0.015444432 ubox
30 58 0.051342950 ubox
30 59 0.142315859 ubox
30 60 0.976227298 ubox
30 61 0.005100353 ubox
31 45 0.102515272 ubox
31 54 0.022834536 ubox
32 44 0.077675075 ubox
32 45 0.329412116 ubox
33 44 0.339978071 ubox
33 52 0.003365785 ubox
33 54 0.858244690 ubox
33 73 0.067641257 ubox
34 40 0.015444128 ubox
34 41 0.006593546 ubox
34 42 0.039324651 ubox
34 43 0.354394778 ubox
34 53 0.863672263 ubox
34 56 0.250339070 ubox
34 57 0.208992940 ubox
34 58 0.061078167 ubox
34 59 0.058598337 ubox
34 60 0.010186123 ubox
34 72 0.070149783 ubox
35 39 0.015219212 ubox
35 40 0.008113802 ubox
35 41 0.039248733 ubox
35 42 0.353950612 ubox
35 43 0.051252635 ubox
35 55 0.250448138 ubox
35 56 0.225116563 ubox
35 57 0.018236171 ubox
35 58 0.058113396 ubox
35 59 0.014311492 ubox
35 71 0.070153490 ubox
36 40 0.060680404 ubox
36 41 0.257924561 ubox
36 42 0.052240017 ubox
36 51 0.870561822 ubox
36 53 0.218453632 ubox
36 55 0.224978293 ubox
36 56 0.014755594 ubox
36 57 0.053939910 ubox
36 58 0.014269857 ubox
36 70 0.070102584 ubox
37 50 0.870327976 ubox
37 52 0.217887925 ubox
37 54 0.219788174 ubox
38 49 0.871699580 ubox
38 66 0.018848184 ubox
39 48 0.872205017 ubox
39 65 0.018162099 ubox
40 47 0.871275605 ubox
40 48 0.004627851 ubox
40 50 0.316336294 ubox
40 65 0.039569147 ubox
41 47 0.005933203 ubox
41 49 0.317161741 ubox
41 64 0.039193519 ubox
41 66 0.039867023 ubox
42 47 0.005167293 ubox
42 48 0.317233065 ubox
42 65 0.040586015 ubox
43 47 0.314929436 ubox
43 52 0.003984326 ubox
44 51 0.003975728 ubox
44 56 0.108261120 ubox
44 59 0.005975088 ubox
44 61 0.048207458 ubox
44 62 0.043928053 ubox
44 63 0.025311120 ubox
45 53 0.014589407 ubox
45 55 0.111541364 ubox
45 58 0.006335000 ubox
45 60 0.048426928 ubox
45 61 0.044181957 ubox
45 62 0.024855817 ubox
46 52 0.014971412 ubox
46 54 0.112394488 ubox
47 51 0.014024212 ubox
47 53 0.112208520 ubox
47 56 0.024589610 ubox
47 59 0.352606051 ubox
47 60 0.011573685 ubox
48 55 0.024551458 ubox
48 58 0.353380156 ubox
48 59 0.008814094 ubox
49 57 0.353282778 ubox
50 56 0.350765501 ubox
66 96 0.008188069 ubox
67 95 0.008436050 ubox
68 94 0.008474277 ubox
69 93 0.008050295 ubox
70 91 0.004621956 ubox
71 90 0.004615649 ubox
71 91 0.007571376 ubox
72 88 0.004613559 ubox
72 90 0.007589271 ubox
73 87 0.004617634 ubox
73 89 0.007593636 ubox
74 86 0.004611844 ubox
74 88 0.007574612 ubox
77 84 0.007868102 ubox
77 87 0.003949232 ubox
78 83 0.007868894 ubox
78 86 0.003964600 ubox
83 92 0.007562179 ubox
84 91 0.007734465 ubox
85 90 0.007725013 ubox
86 98 0.003187226 ubox
87 97 0.003190951 ubox
88 98 0.005236613 ubox
89 97 0.005835914 ubox
90 96 0.028640811 ubox
90 98 0.009526507 ubox
90 119 0.006305300 ubox
90 120 0.024013552 ubox
90 137 0.004534504 ubox
91 98 0.024270103 ubox
91 118 0.003767794 ubox
91 119 0.025098076 ubox
91 123 0.005830485 ubox
91 136 0.004537749 ubox
91 152 0.004734501 ubox
92 97 0.023736678 ubox
92 122 0.005801061 ubox
92 135 0.004442492 ubox
94 119 0.032003383 ubox
95 118 0.028470826 ubox
95 152 0.005240756 ubox
96 117 0.019545745 ubox
97 116 0.017383547 ubox
97 118 0.949583290 ubox
98 117 0.997534066 ubox
99 114 0.004899754 ubox
99 115 0.016525930 ubox
99 116 0.999789842 ubox
100 113 0.005103920 ubox
100 114 0.015787757 ubox
100 115 0.998372393 ubox
101 112 0.004929048 ubox
102 113 0.998726958 ubox
103 110 0.006984972 ubox
103 112 0.999925968 ubox
104 108 0.003242597 ubox
104 109 0.007616503 ubox
104 110 0.019922411 ubox
104 111 0.991671150 ubox
104 112 0.004656479 ubox
105 109 0.031792481 ubox
105 110 0.917181286 ubox
105 111 0.031440441 ubox
106 110 0.039980910 ubox
106 111 0.004055840 ubox
117 152 0.010955744 ubox
119 134 0.013093877 ubox
119 150 0.006313484 ubox
119 151 0.990282738 ubox
120 133 0.013127288 ubox
120 150 0.999355973 ubox
121 132 0.013116373 ubox
121 149 0.999806773 ubox
122 131 0.013124199 ubox
122 148 0.999649344 ubox
122 152 0.006766869 ubox
123 130 0.013108593 ubox
123 147 0.999671316 ubox
123 151 0.007349028 ubox
124 146 0.998939011 ubox
125 145 0.995629505 ubox
125 149 0.009877487 ubox
126 148 0.007047455 ubox
127 148 0.014367804 ubox
128 143 0.997814920 ubox
128 147 0.020654563 ubox
129 137 0.005698819 ubox
129 142 0.998660681 ubox
129 146 0.032066199 ubox
130 136 0.005800106 ubox
130 141 0.998667545 ubox
130 145 0.040468715 ubox
131 135 0.005555220 ubox
131 140 0.995677756 ubox
131 144 0.044156805 ubox
132 140 0.034528765 ubox
132 143 0.043916776 ubox
133 139 0.041823379 ubox
133 142 0.043993340 ubox
134 138 0.040974024 ubox
134 141 0.043674489 ubox
134 142 0.021074008 ubox
135 141 0.021930047 ubox
135 145 0.003285013 ubox
136 140 0.022555281 ubox
136 144 0.003468416 ubox
137 143 0.003466443 ubox
140 152 0.004920071 ubox
141 151 0.005327604 ubox
142 150 0.005350519 ubox
143 149 0.005581033 ubox
144 148 0.003617212 ubox
144 152 0.004013096 ubox
145 151 0.004248549 ubox
146 150 0.003830071 ubox
2 89 0.9500000 lbox
3 88 0.9500000 lbox
4 87 0.9500000 lbox
6 85 0.9500000 lbox
7 84 0.9500000 lbox
8 83 0.9500000 lbox
10 81 0.9500000 lbox
11 80 0.9500000 lbox
12 79 0.9500000 lbox
13 78 0.9500000 lbox
14 77 0.9500000 lbox
15 76 0.9500000 lbox
16 75 0.9500000 lbox
20 71 0.9500000 lbox
21 70 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
97 118 0.9500000 lbox
98 117 0.9500000 lbox
99 116 0.9500000 lbox
100 115 0.9500000 lbox
102 113 0.9500000 lbox
103 112 0.9500000 lbox
104 111 0.9500000 lbox
105 110 0.9500000 lbox
119 151 0.9500000 lbox
120 150 0.9500000 lbox
121 149 0.9500000 lbox
122 148 0.9500000 lbox
123 147 0.9500000 lbox
124 146 0.9500000 lbox
125 145 0.9500000 lbox
128 143 0.9500000 lbox
129 142 0.9500000 lbox
130 141 0.9500000 lbox
131 140 0.9500000 lbox
showpage
end
%%EOF
