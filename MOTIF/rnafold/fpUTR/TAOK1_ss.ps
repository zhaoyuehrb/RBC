%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUCCUCCUCCUCACUCCUCACCCUCCAGGGUAGCGGCUACCGGAGCGCUGCAGGGGGCUGCGCCUGCCUGCUCCGCCCCAGACCUGUCGGCGAAAGGUAGUUUAUGCCAACGUGACUUCAUUCAUACAGAUGAACCAAGGAUCGGGAUAGCAGUAUAAAAUUAGAAUCAAGACAGCUGACUGCUCAGCAGG\
) } def
/len { sequence length } bind def

/coor [
[169.66670227 314.69674683]
[165.21961975 292.71954346]
[167.31715393 270.38330078]
[175.78704834 249.59619141]
[189.91230774 232.13610840]
[180.90116882 220.14445496]
[171.89002991 208.15281677]
[162.87890625 196.16117859]
[148.14189148 194.32923889]
[138.83248901 182.29637146]
[140.85392761 166.85125732]
[131.84278870 154.85961914]
[122.83165741 142.86798096]
[113.82052612 130.87632751]
[102.45935059 133.73880005]
[90.80316925 132.55415344]
[80.25019073 127.46451569]
[72.06627655 119.08039856]
[67.23311615 108.40750885]
[66.33048248 96.72611237]
[69.46663666 85.43742371]
[57.69624329 76.13916016]
[45.92584610 66.84088898]
[34.15544891 57.54262543]
[24.72620010 62.47031784]
[14.23156643 63.96788788]
[3.87542295 61.88930511]
[-5.16281080 56.49731064]
[-11.86249352 48.43048859]
[-15.47699642 38.62775421]
[-15.61685753 28.21907806]
[-12.29158401 18.39525604]
[-23.43875694 8.35829735]
[-34.58592987 -1.67866194]
[-45.73310089 -11.71562099]
[-61.29650497 -11.06890488]
[-72.45834351 -21.40660477]
[-72.97897339 -36.24791718]
[-84.12614441 -46.28487396]
[-95.27332306 -56.32183456]
[-106.42049408 -66.35879517]
[-117.56766510 -76.39575195]
[-128.71484375 -86.43270874]
[-139.86201477 -96.46967316]
[-153.10153198 -92.60780334]
[-166.41400146 -95.77040863]
[-176.34361267 -105.02648163]
[-180.36726379 -117.87771606]
[-177.53507996 -130.93212891]
[-188.51911926 -141.14736938]
[-199.50314331 -151.36260986]
[-210.48718262 -161.57785034]
[-221.47120667 -171.79309082]
[-232.53717041 -181.91950989]
[-243.68434143 -191.95646667]
[-254.83151245 -201.99342346]
[-265.97866821 -212.03039551]
[-277.44342041 -221.70301819]
[-289.21380615 -231.00128174]
[-300.98422241 -240.29956055]
[-312.75460815 -249.59782410]
[-332.80529785 -251.59303284]
[-339.19409180 -269.83508301]
[-351.25793457 -278.74932861]
[-363.32174683 -287.66357422]
[-378.91171265 -285.06948853]
[-391.72097778 -294.32681274]
[-394.15008545 -309.94329834]
[-384.75787354 -322.65399170]
[-369.11657715 -324.91784668]
[-356.50588989 -315.39178467]
[-354.40750122 -299.72741699]
[-342.34368896 -290.81317139]
[-330.27984619 -281.89892578]
[-320.33587646 -284.32049561]
[-310.49645996 -280.78802490]
[-304.09979248 -272.24298096]
[-303.45635986 -261.36822510]
[-291.68594360 -252.06994629]
[-279.91555786 -242.77168274]
[-268.14514160 -233.47341919]
[-265.33642578 -233.67416382]
[-262.27853394 -232.76690674]
[-259.39596558 -230.65098572]
[-257.14163208 -227.38206482]
[-255.94172668 -223.17756653]
[-244.79455566 -213.14059448]
[-233.64738464 -203.10363770]
[-222.50021362 -193.06668091]
[-215.41632080 -190.92445374]
[-211.25596619 -182.77711487]
[-200.27194214 -172.56187439]
[-189.28790283 -162.34663391]
[-178.30387878 -152.13139343]
[-167.31985474 -141.91616821]
[-151.32577515 -145.58589172]
[-136.14193726 -138.93704224]
[-127.82635498 -124.40630341]
[-129.82505798 -107.61684418]
[-118.67787933 -97.57988739]
[-107.53070831 -87.54292297]
[-96.38352966 -77.50596619]
[-85.23635864 -67.46900940]
[-74.08918762 -57.43204880]
[-62.94201660 -47.39508820]
[-48.12758636 -48.42864609]
[-36.67978668 -38.40853882]
[-35.69614410 -22.86279297]
[-24.54896927 -12.82583427]
[-13.40179729 -2.78887510]
[-2.25462532 7.24808407]
[16.54310226 1.89256930]
[34.90125656 9.01034832]
[45.32721329 25.88263321]
[43.45371246 45.77222824]
[55.22410965 55.07049561]
[66.99450684 64.36875916]
[78.76490784 73.66703033]
[101.63436127 66.21118927]
[123.67745972 75.83943939]
[136.29031372 67.72058868]
[148.90318298 59.60173798]
[161.51603699 51.48288727]
[174.12890625 43.36403656]
[186.74176025 35.24518585]
[189.84452820 19.74846458]
[203.04251099 11.05426407]
[218.50555420 14.32069969]
[227.05973816 27.60985374]
[223.62998962 43.03750610]
[210.25114441 51.45070267]
[194.86061096 47.85804749]
[182.24775696 55.97689819]
[169.63488770 64.09574890]
[157.02203369 72.21459961]
[144.40917969 80.33345032]
[131.79631042 88.45230103]
[133.70452881 97.10871887]
[133.29849243 105.96365356]
[130.60607910 114.40911102]
[125.81216431 121.86519623]
[134.82330322 133.85684204]
[143.83442688 145.84848022]
[152.84556580 157.84011841]
[168.24327087 160.19560242]
[177.21102905 172.48519897]
[174.87054443 187.15003967]
[183.88168335 199.14167786]
[192.89280701 211.13333130]
[201.90394592 223.12496948]
[209.78758240 218.94851685]
[218.10063171 215.71424866]
[226.73098755 213.46542358]
[235.56227112 212.23200989]
[244.47547913 212.03024292]
[253.35050964 212.86250305]
[262.06784058 214.71723938]
[270.51007080 217.56910706]
[278.56362915 221.37936401]
[286.12011719 226.09634399]
[293.07794189 231.65620422]
[299.34359741 237.98376465]
[304.83288574 244.99353027]
[309.47216797 252.59085083]
[313.19921875 260.67318726]
[315.96414185 269.13150024]
[317.73007202 277.85174561]
[318.47351074 286.71633911]
[318.18478394 295.60586548]
[316.86819458 304.40054321]
[314.54177856 312.98196411]
[311.23724365 321.23458862]
[306.99938965 329.04736328]
[301.88568115 336.31521606]
[295.96527100 342.94042969]
[289.31820679 348.83398438]
[282.03424072 353.91674805]
[274.21170044 358.12051392]
[279.19030762 372.27020264]
[284.16894531 386.41986084]
[289.14755249 400.56954956]
[294.12615967 414.71923828]
[306.92016602 424.97814941]
[304.16555786 441.14431763]
[288.69604492 446.58731079]
[276.42535400 435.70788574]
[279.97650146 419.69784546]
[274.99786377 405.54815674]
[270.01925659 391.39849854]
[265.04064941 377.24880981]
[260.06201172 363.09912109]
[237.80039978 365.22695923]
[215.86254883 360.82571411]
[196.12336731 350.26455688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 150]
[6 149]
[7 148]
[8 147]
[11 144]
[12 143]
[13 142]
[14 141]
[21 118]
[22 117]
[23 116]
[24 115]
[32 111]
[33 110]
[34 109]
[35 108]
[38 105]
[39 104]
[40 103]
[41 102]
[42 101]
[43 100]
[44 99]
[49 95]
[50 94]
[51 93]
[52 92]
[53 91]
[54 89]
[55 88]
[56 87]
[57 86]
[58 81]
[59 80]
[60 79]
[61 78]
[63 74]
[64 73]
[65 72]
[120 137]
[121 136]
[122 135]
[123 134]
[124 133]
[125 132]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
