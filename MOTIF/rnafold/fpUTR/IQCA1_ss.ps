%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGAGGUUCGCGAGUCUCUGGGUCGCGACGGGAAGGAGUGAAACACCUCUCUGCGCCUGCGCGCUCCGUGCCUGCGAAGCAAACCCGGCCUCACCUUUUCCUGCCCGAAGCAGAAGAUUCUCGCAGUCCUGGUUUCUCCCUCCAGAAGACCCCCCACCCAAAUCCUCUGUAGCUCCUGGUAGUGCCCUGACCCCUGCUGCCACCGUCCUUCAGAGAGCAACGGAAGAGCUUCCCGGAGGGCGAGGAAAAGAGGG\
AAAGUAGCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[84.08727264 132.89433289]
[70.79281616 121.95886230]
[57.20849609 128.32017517]
[43.62417984 134.68150330]
[30.03986359 141.04281616]
[16.45554733 147.40412903]
[2.87123156 153.76544189]
[-10.71308517 160.12677002]
[-21.35060883 170.70234680]
[-27.79114151 184.24929810]
[-34.23167419 197.79623413]
[-40.67220688 211.34317017]
[-47.11273575 224.89010620]
[-53.55326843 238.43704224]
[-52.49085236 254.22254944]
[-64.94332886 262.39474487]
[-71.38385773 275.94171143]
[-72.72406006 292.84259033]
[-89.33546448 296.23339844]
[-97.19225311 281.20983887]
[-84.93079376 269.50115967]
[-78.49026489 255.95422363]
[-80.01335144 241.13769531]
[-67.10020447 231.99652100]
[-60.65967560 218.44956970]
[-54.21914291 204.90263367]
[-47.77861023 191.35569763]
[-41.33808136 177.80876160]
[-34.89754868 164.26182556]
[-44.09253693 152.41056824]
[-58.81489944 155.28321838]
[-73.53726196 158.15585327]
[-88.25962067 161.02850342]
[-94.54770660 180.02867126]
[-112.94892883 191.24511719]
[-135.75881958 187.67266846]
[-148.50936890 195.57353210]
[-161.25991821 203.47439575]
[-174.01045227 211.37525940]
[-175.01676941 226.85966492]
[-184.95828247 238.77377319]
[-200.01226807 242.53637695]
[-214.39016724 236.70065308]
[-222.56338501 223.51057434]
[-221.38914490 208.03799438]
[-211.31898499 196.23243713]
[-196.22506714 192.63336182]
[-181.91131592 198.62471008]
[-169.16076660 190.72384644]
[-156.41023254 182.82298279]
[-143.65968323 174.92211914]
[-147.97726440 160.55694580]
[-162.97087097 160.99484253]
[-176.53929138 169.13169861]
[-189.48701477 161.76924133]
[-204.48062134 162.20713806]
[-219.47422791 162.64503479]
[-230.28456116 173.85995483]
[-245.49645996 174.09043884]
[-256.12155151 163.71533203]
[-271.11514282 164.15321350]
[-286.10876465 164.59111023]
[-301.10235596 165.02900696]
[-316.09597778 165.46688843]
[-331.75183105 171.97305298]
[-342.33770752 158.73008728]
[-332.54275513 144.89190674]
[-316.53387451 150.47328186]
[-301.54025269 150.03540039]
[-286.54666138 149.59750366]
[-271.55303955 149.15960693]
[-256.55944824 148.72172546]
[-246.55795288 137.74420166]
[-231.35855103 137.08651733]
[-219.91212463 147.65142822]
[-204.91851807 147.21353149]
[-189.92491150 146.77563477]
[-177.42893982 138.67008972]
[-163.40876770 146.00123596]
[-148.41516113 145.56333923]
[-138.34281921 133.72660828]
[-124.62105560 127.84669495]
[-110.32881927 128.65330505]
[-98.42419434 135.43685913]
[-91.13226318 146.30613708]
[-76.40990448 143.43350220]
[-61.68754196 140.56085205]
[-46.96517944 137.68820190]
[-17.07440186 146.54244995]
[-3.49008512 140.18113708]
[10.09423065 133.81980896]
[23.67854691 127.45849609]
[37.26286316 121.09718323]
[50.84717941 114.73586273]
[64.43149567 108.37454987]
[63.54857635 102.55835724]
[63.61042023 96.67586517]
[64.61542511 90.87951660]
[66.53753662 85.31956482]
[69.32695007 80.14010620]
[72.91135406 75.47538757]
[77.19785309 71.44630432]
[70.44268036 58.05348206]
[63.68751526 44.66065979]
[56.93234253 31.26783562]
[42.19134521 26.23387718]
[35.53142929 12.55541992]
[40.42138672 -1.46684504]
[33.66621399 -14.85966682]
[26.91104507 -28.25248909]
[11.57402802 -30.60950661]
[0.57526290 -41.55513382]
[-1.85600066 -56.88055801]
[5.21510792 -70.69283295]
[19.06960297 -77.68087006]
[34.38014984 -75.15761566]
[45.25952911 -64.09331512]
[47.52439499 -48.74241638]
[40.30386734 -35.00765991]
[47.05903625 -21.61483765]
[53.81420517 -8.22201538]
[67.99718475 -3.81989741]
[75.03867340 9.66609859]
[70.32516479 24.51266670]
[77.08033752 37.90548706]
[83.83550262 51.29830933]
[90.59067535 64.69113159]
[109.10672760 64.61187744]
[125.28445435 73.61917877]
[134.96994019 89.40023041]
[149.91242981 88.08805084]
[164.85493469 86.77586365]
[179.79742432 85.46368408]
[194.73991394 84.15149689]
[209.68241882 82.83931732]
[221.32749939 67.86150360]
[239.90658569 66.21697998]
[253.52528381 78.48761749]
[268.43304443 76.82680511]
[283.34082031 75.16599274]
[298.24859619 73.50517273]
[313.15637207 71.84436035]
[328.06414795 70.18354797]
[340.62667847 61.98704529]
[348.15194702 49.01128769]
[355.67721558 36.03553009]
[363.20248413 23.05977058]
[363.43267822 7.24023867]
[376.51089478 0.11219068]
[384.03619385 -12.86356735]
[375.07467651 -25.17663383]
[371.90249634 -40.07149887]
[375.06918335 -54.96753693]
[384.02609253 -67.28392029]
[397.22143555 -74.88676453]
[412.36898804 -76.45882416]
[426.84436035 -71.72772980]
[438.13961792 -61.51317978]
[444.29779053 -47.58489990]
[444.25192261 -32.35605240]
[438.00994873 -18.46512794]
[426.65338135 -8.31880951]
[412.14974976 -3.67501020]
[397.01193237 -5.33829641]
[389.48666382 7.63746166]
[389.79473877 22.52888107]
[376.17825317 30.58504105]
[368.65298462 43.56079865]
[361.12771606 56.53655624]
[353.60244751 69.51231384]
[356.62359619 76.37690735]
[370.35287476 70.33480835]
[376.39477539 84.06417084]
[362.66592407 90.10608673]
[365.68707275 96.97068024]
[380.33831787 100.18638611]
[394.98956299 103.40209198]
[409.64083862 106.61779785]
[424.63674927 106.26747131]
[439.12182617 102.37108612]
[453.60693359 98.47470093]
[468.09204102 94.57831573]
[482.57714844 90.68193054]
[497.06225586 86.78554535]
[499.83459473 71.77632141]
[508.85159302 59.46142197]
[522.32287598 52.28598404]
[537.57373047 51.67469406]
[551.57611084 57.74892426]
[561.54980469 69.30262756]
[565.51452637 84.04181671]
[562.68310547 99.04000854]
[553.61773682 111.31930542]
[540.11828613 118.44163513]
[524.86511230 118.99286652]
[510.88674927 112.86354065]
[500.95861816 101.27064514]
[486.47354126 105.16703033]
[471.98843384 109.06341553]
[457.50332642 112.95980072]
[443.01821899 116.85618591]
[428.53311157 120.75257111]
[427.57226562 128.19076538]
[425.65057373 143.06715393]
[424.68972778 150.50535583]
[437.70919800 157.95472717]
[450.72866821 165.40409851]
[463.74813843 172.85346985]
[476.76763916 180.30284119]
[489.78710938 187.75221252]
[502.80657959 195.20159912]
[515.82604980 202.65097046]
[529.92791748 196.45066833]
[544.80285645 199.70484924]
[554.79125977 210.96080017]
[556.21923828 225.76278687]
[569.23870850 233.21215820]
[582.25823975 240.66152954]
[595.27770996 248.11090088]
[608.91467285 240.89729309]
[624.28485107 242.22430420]
[636.48370361 251.66847229]
[641.61853027 266.21621704]
[638.05090332 281.22540283]
[626.91918945 291.90664673]
[611.77551270 294.85159302]
[597.45214844 289.12054443]
[588.51965332 276.54223633]
[587.82830811 261.13037109]
[574.80883789 253.68101501]
[561.78936768 246.23164368]
[548.76989746 238.78227234]
[535.28540039 245.05172729]
[520.52014160 242.14440918]
[510.17718506 230.96960449]
[508.37670898 215.67044067]
[495.35720825 208.22106934]
[482.33773804 200.77169800]
[469.31826782 193.32232666]
[456.29876709 185.87295532]
[443.27929688 178.42358398]
[430.25982666 170.97421265]
[417.24035645 163.52484131]
[406.42510986 121.26905060]
[391.77386475 118.05334473]
[377.12261963 114.83763885]
[362.47137451 111.62193298]
[348.48599243 109.83976746]
[337.71096802 103.43852997]
[331.37982178 94.44784546]
[329.72494507 85.09131622]
[314.81719971 86.75213623]
[299.90942383 88.41294861]
[285.00164795 90.07376099]
[270.09387207 91.73457336]
[255.18609619 93.39539337]
[250.18525696 103.60447693]
[240.78889465 110.21330261]
[229.25247192 111.49471283]
[218.41369629 107.01763153]
[210.99459839 97.78180695]
[196.05210876 99.09399414]
[181.10960388 100.40617371]
[166.16711426 101.71836090]
[151.22460938 103.03054047]
[136.28211975 104.34272766]
[130.26789856 120.47208405]
[117.53643036 132.05815125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 95]
[3 94]
[4 93]
[5 92]
[6 91]
[7 90]
[8 89]
[9 29]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[16 22]
[17 21]
[30 88]
[31 87]
[32 86]
[33 85]
[36 51]
[37 50]
[38 49]
[39 48]
[52 80]
[53 79]
[55 77]
[56 76]
[57 75]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[102 127]
[103 126]
[104 125]
[105 124]
[108 121]
[109 120]
[110 119]
[130 266]
[131 265]
[132 264]
[133 263]
[134 262]
[135 261]
[138 256]
[139 255]
[140 254]
[141 253]
[142 252]
[143 251]
[144 170]
[145 169]
[146 168]
[147 167]
[149 165]
[150 164]
[175 247]
[176 246]
[177 245]
[178 244]
[179 202]
[180 201]
[181 200]
[182 199]
[183 198]
[184 197]
[205 243]
[206 242]
[207 241]
[208 240]
[209 239]
[210 238]
[211 237]
[212 236]
[216 232]
[217 231]
[218 230]
[219 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
