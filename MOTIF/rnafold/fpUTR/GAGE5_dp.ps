%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GAGE5)
} def

/sequence { (\
AGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.633045672 ubox
1 42 0.066535704 ubox
1 43 0.011870304 ubox
1 44 0.007880797 ubox
1 45 0.005707258 ubox
1 46 0.004707539 ubox
1 49 0.005061320 ubox
1 51 0.004470910 ubox
1 54 0.005906384 ubox
1 65 0.008662233 ubox
2 11 0.035932247 ubox
2 14 0.021640095 ubox
2 16 0.003299111 ubox
2 33 0.006426543 ubox
2 39 0.729973896 ubox
2 41 0.075863750 ubox
2 42 0.013574616 ubox
2 43 0.009419014 ubox
2 44 0.006695398 ubox
2 45 0.005773909 ubox
2 48 0.006551640 ubox
2 50 0.005006492 ubox
2 53 0.006230536 ubox
2 64 0.009035893 ubox
2 67 0.014224325 ubox
2 69 0.005763689 ubox
3 10 0.035960903 ubox
3 13 0.022760266 ubox
3 15 0.003208716 ubox
3 32 0.006663207 ubox
3 37 0.988848587 ubox
3 57 0.009639724 ubox
3 66 0.014914316 ubox
3 68 0.005972464 ubox
4 9 0.035025404 ubox
4 12 0.022841031 ubox
4 36 0.990215956 ubox
4 52 0.005161834 ubox
4 56 0.009173228 ubox
5 11 0.022880237 ubox
5 35 0.991214636 ubox
5 39 0.020402178 ubox
5 51 0.005192311 ubox
5 53 0.017999217 ubox
5 63 0.018696117 ubox
5 74 0.003804854 ubox
6 10 0.021404382 ubox
6 32 0.004236805 ubox
6 36 0.010118955 ubox
6 38 0.020188995 ubox
6 52 0.017733505 ubox
6 62 0.019442563 ubox
6 73 0.004070322 ubox
7 34 0.933557390 ubox
7 35 0.013381944 ubox
7 41 0.003627489 ubox
7 43 0.006418923 ubox
7 44 0.036504007 ubox
7 45 0.007527650 ubox
7 47 0.009209566 ubox
7 50 0.025977332 ubox
7 51 0.004366806 ubox
7 61 0.019599046 ubox
7 64 0.003440096 ubox
8 33 0.909640645 ubox
8 40 0.003578361 ubox
8 42 0.006909198 ubox
8 43 0.039613017 ubox
8 44 0.007929368 ubox
8 46 0.009125201 ubox
8 49 0.026134738 ubox
8 60 0.018605043 ubox
8 63 0.003212033 ubox
9 31 0.996310371 ubox
9 41 0.006837936 ubox
9 42 0.041025039 ubox
9 43 0.007937298 ubox
9 45 0.008168861 ubox
9 48 0.025857550 ubox
9 59 0.003362619 ubox
10 30 0.997772000 ubox
10 40 0.003534574 ubox
10 41 0.041323696 ubox
10 42 0.007741542 ubox
10 44 0.007619497 ubox
10 47 0.025767297 ubox
11 29 0.997768087 ubox
12 28 0.997323836 ubox
12 40 0.057109946 ubox
12 42 0.005907869 ubox
12 43 0.003179709 ubox
12 45 0.010733392 ubox
12 46 0.005391123 ubox
13 27 0.996056350 ubox
13 39 0.059139108 ubox
13 41 0.006111811 ubox
13 44 0.010160087 ubox
13 45 0.004704690 ubox
14 22 0.026480815 ubox
14 23 0.013792069 ubox
14 38 0.058980016 ubox
15 21 0.030192142 ubox
15 24 0.988730257 ubox
16 20 0.030216656 ubox
16 23 0.992996787 ubox
16 37 0.064016089 ubox
17 22 0.928978850 ubox
17 36 0.064115939 ubox
18 24 0.007386942 ubox
18 35 0.063826294 ubox
18 39 0.015229166 ubox
19 23 0.003353414 ubox
19 38 0.015232453 ubox
20 33 0.039345658 ubox
21 32 0.060548817 ubox
21 36 0.015145939 ubox
22 31 0.064682909 ubox
22 35 0.015139898 ubox
23 30 0.064687746 ubox
23 34 0.015110659 ubox
24 29 0.063645644 ubox
25 38 0.003465945 ubox
26 37 0.003977606 ubox
27 36 0.003979371 ubox
32 39 0.009874238 ubox
32 53 0.005399004 ubox
32 59 0.006258672 ubox
33 38 0.009153940 ubox
33 52 0.005221437 ubox
33 58 0.007034185 ubox
33 71 0.006824948 ubox
34 57 0.007173359 ubox
34 70 0.006125920 ubox
35 55 0.007634314 ubox
35 66 0.016092920 ubox
35 70 0.045980190 ubox
36 42 0.005195469 ubox
36 45 0.004513466 ubox
36 46 0.003753399 ubox
36 47 0.024510250 ubox
36 48 0.063321842 ubox
36 54 0.007501853 ubox
36 61 0.016617805 ubox
36 65 0.016561782 ubox
36 69 0.046549396 ubox
37 41 0.005700112 ubox
37 43 0.004283265 ubox
37 44 0.006074441 ubox
37 45 0.005249812 ubox
37 46 0.024760825 ubox
37 47 0.064609814 ubox
37 50 0.003664168 ubox
37 53 0.007466760 ubox
37 60 0.016807197 ubox
37 61 0.014481975 ubox
37 64 0.016648947 ubox
38 42 0.007259298 ubox
38 43 0.010846591 ubox
38 44 0.009820499 ubox
38 45 0.025668593 ubox
38 46 0.062120854 ubox
38 49 0.003607881 ubox
38 59 0.021040279 ubox
38 60 0.015599720 ubox
38 63 0.016336413 ubox
38 67 0.075171200 ubox
38 69 0.022675155 ubox
39 57 0.155949202 ubox
39 66 0.076331281 ubox
39 68 0.023231236 ubox
40 56 0.157178806 ubox
40 58 0.121269018 ubox
40 71 0.009896614 ubox
41 55 0.157370774 ubox
41 57 0.135366290 ubox
41 70 0.010656703 ubox
42 56 0.134879506 ubox
42 57 0.008725791 ubox
42 58 0.024601834 ubox
42 71 0.003688557 ubox
42 72 0.009545021 ubox
42 73 0.022647287 ubox
43 55 0.132781621 ubox
43 56 0.012130700 ubox
43 57 0.024895341 ubox
43 58 0.027042687 ubox
43 70 0.003343977 ubox
43 71 0.009026491 ubox
43 72 0.024168477 ubox
43 73 0.031587772 ubox
44 55 0.013800650 ubox
44 56 0.025223061 ubox
44 57 0.025946306 ubox
44 58 0.072134514 ubox
44 70 0.007804590 ubox
44 71 0.021564709 ubox
44 72 0.033475368 ubox
44 73 0.220585978 ubox
45 55 0.025070500 ubox
45 56 0.025933174 ubox
45 57 0.075954344 ubox
45 58 0.024687100 ubox
45 70 0.019044113 ubox
45 71 0.029594034 ubox
45 72 0.253397417 ubox
45 73 0.023012923 ubox
46 55 0.025420559 ubox
46 56 0.077915005 ubox
46 57 0.009218592 ubox
46 58 0.149647823 ubox
46 70 0.023717884 ubox
46 71 0.260462236 ubox
46 72 0.022723900 ubox
47 55 0.078124538 ubox
47 57 0.113772425 ubox
47 70 0.260958935 ubox
48 57 0.874919445 ubox
49 56 0.884970264 ubox
49 58 0.095433171 ubox
49 71 0.202851873 ubox
50 55 0.884918739 ubox
50 57 0.102047551 ubox
50 70 0.212277948 ubox
51 56 0.097206434 ubox
51 66 0.008760165 ubox
51 68 0.308260146 ubox
51 70 0.130833630 ubox
52 65 0.008328671 ubox
52 67 0.318643759 ubox
52 69 0.186362901 ubox
53 66 0.317377261 ubox
53 68 0.188153103 ubox
54 62 0.040769813 ubox
54 66 0.013537682 ubox
54 68 0.003801201 ubox
55 61 0.042020457 ubox
55 64 0.308409805 ubox
55 65 0.008263303 ubox
55 67 0.008092745 ubox
56 60 0.036570307 ubox
56 63 0.306006523 ubox
56 65 0.197869726 ubox
57 64 0.200891828 ubox
58 63 0.178089071 ubox
58 67 0.031398903 ubox
58 69 0.028583615 ubox
58 74 0.105906351 ubox
59 66 0.031664688 ubox
59 68 0.029010181 ubox
59 71 0.019941871 ubox
59 72 0.761085169 ubox
59 73 0.096778035 ubox
60 70 0.010978373 ubox
60 71 0.876658265 ubox
60 72 0.072275593 ubox
61 68 0.032101007 ubox
61 70 0.890624933 ubox
62 67 0.027159623 ubox
62 69 0.873546381 ubox
62 74 0.004564078 ubox
63 68 0.808544618 ubox
63 71 0.101326595 ubox
63 73 0.003609624 ubox
64 70 0.108186132 ubox
66 74 0.016876311 ubox
67 73 0.018428951 ubox
68 74 0.004900792 ubox
69 73 0.005022385 ubox
3 37 0.9500000 lbox
4 36 0.9500000 lbox
5 35 0.9500000 lbox
7 34 0.9500000 lbox
8 33 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
59 72 0.9500000 lbox
60 71 0.9500000 lbox
61 70 0.9500000 lbox
62 69 0.9500000 lbox
63 68 0.9500000 lbox
showpage
end
%%EOF
