%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL10RA)
} def

/sequence { (\
GUCAGUCCCAGCCCAAGGGUAGCUGGAGGCGCGCAGGCCGGCUCCGCUCCGGCCCCGGACGAUGCGGCGCGCCCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.005471065 ubox
1 20 0.004093326 ubox
1 23 0.020189496 ubox
1 30 0.034647707 ubox
1 32 0.018287263 ubox
1 34 0.036634071 ubox
1 63 0.007142724 ubox
2 11 0.005515120 ubox
2 22 0.022281194 ubox
2 26 0.462536189 ubox
2 27 0.064392708 ubox
2 29 0.034524996 ubox
2 31 0.017559685 ubox
2 33 0.035845854 ubox
2 62 0.007542128 ubox
2 77 0.030363969 ubox
3 25 0.589495145 ubox
3 26 0.049802158 ubox
3 28 0.033640393 ubox
3 61 0.007590627 ubox
3 76 0.048818895 ubox
4 24 0.592078391 ubox
5 12 0.006232406 ubox
5 20 0.069821404 ubox
5 23 0.592492755 ubox
5 30 0.282964290 ubox
5 60 0.008528599 ubox
6 11 0.006000211 ubox
6 19 0.038259975 ubox
6 22 0.569383335 ubox
6 27 0.143860200 ubox
6 29 0.283166423 ubox
6 59 0.008537423 ubox
6 77 0.018194669 ubox
7 18 0.055847697 ubox
7 19 0.610467055 ubox
7 25 0.003383030 ubox
7 26 0.129148696 ubox
7 28 0.285093379 ubox
7 58 0.008524741 ubox
7 76 0.029032600 ubox
7 77 0.012023230 ubox
8 17 0.055844533 ubox
8 18 0.613039054 ubox
8 19 0.072030571 ubox
8 25 0.098627860 ubox
8 26 0.701644844 ubox
8 57 0.008492678 ubox
8 76 0.009170668 ubox
8 77 0.009894366 ubox
9 17 0.612720476 ubox
9 18 0.072143138 ubox
9 25 0.707998215 ubox
9 76 0.009300497 ubox
10 24 0.712629087 ubox
11 20 0.329958324 ubox
11 23 0.707581196 ubox
11 53 0.008241312 ubox
12 18 0.030621063 ubox
12 19 0.364882192 ubox
12 22 0.690937185 ubox
12 52 0.008239160 ubox
13 17 0.036586529 ubox
13 18 0.395122067 ubox
13 19 0.562501748 ubox
13 26 0.009434977 ubox
13 51 0.008217679 ubox
14 18 0.561354292 ubox
14 25 0.009466879 ubox
15 24 0.007809618 ubox
16 24 0.005410663 ubox
17 23 0.007394091 ubox
18 23 0.003387147 ubox
18 50 0.007634379 ubox
19 49 0.007653375 ubox
21 48 0.007978744 ubox
22 47 0.008255100 ubox
23 46 0.008070175 ubox
23 76 0.367820600 ubox
23 77 0.010895343 ubox
24 75 0.369961467 ubox
24 76 0.009097732 ubox
25 45 0.008329924 ubox
25 73 0.007461530 ubox
25 74 0.370697613 ubox
26 44 0.008343213 ubox
26 72 0.010282316 ubox
26 73 0.363897478 ubox
27 43 0.008341272 ubox
28 39 0.008381903 ubox
28 42 0.008325180 ubox
28 73 0.815832785 ubox
28 74 0.337687646 ubox
29 38 0.008405764 ubox
29 68 0.005079895 ubox
29 70 0.358484180 ubox
29 72 0.823168080 ubox
29 73 0.333415411 ubox
30 37 0.008410269 ubox
30 40 0.008298956 ubox
30 67 0.005082102 ubox
30 69 0.358503571 ubox
30 71 0.825091763 ubox
31 38 0.007435721 ubox
31 39 0.005960780 ubox
31 68 0.357959988 ubox
31 70 0.825109462 ubox
31 72 0.433170249 ubox
32 37 0.009426160 ubox
32 66 0.254254660 ubox
32 67 0.253595852 ubox
32 69 0.824820782 ubox
32 71 0.433563558 ubox
33 42 0.003838710 ubox
33 65 0.361457039 ubox
33 68 0.804078733 ubox
33 70 0.433567459 ubox
33 72 0.027320969 ubox
34 41 0.003925325 ubox
34 64 0.362625001 ubox
34 67 0.760084659 ubox
34 69 0.431681049 ubox
34 71 0.027364037 ubox
35 43 0.010662635 ubox
35 63 0.362373222 ubox
36 42 0.011396901 ubox
36 43 0.005184019 ubox
36 44 0.003287189 ubox
36 45 0.004318801 ubox
36 54 0.779179653 ubox
36 55 0.047447577 ubox
36 56 0.004420393 ubox
36 73 0.036898207 ubox
36 74 0.012496243 ubox
37 42 0.005567648 ubox
37 44 0.004450235 ubox
37 47 0.003646816 ubox
37 53 0.781915191 ubox
37 54 0.033657726 ubox
37 55 0.003271853 ubox
37 65 0.098017078 ubox
37 68 0.460661709 ubox
37 72 0.037070478 ubox
37 73 0.012218895 ubox
38 46 0.003225526 ubox
38 52 0.782653083 ubox
38 58 0.386177821 ubox
38 64 0.084866279 ubox
38 67 0.468640490 ubox
38 71 0.036312210 ubox
39 46 0.004530513 ubox
39 51 0.782627341 ubox
39 57 0.389756458 ubox
39 61 0.031861671 ubox
39 64 0.012638101 ubox
39 66 0.475146676 ubox
39 69 0.008450358 ubox
39 71 0.012200975 ubox
40 45 0.005089538 ubox
40 48 0.049229470 ubox
40 49 0.030840317 ubox
40 50 0.780166294 ubox
40 54 0.009652824 ubox
40 55 0.007243224 ubox
40 56 0.389630272 ubox
40 60 0.032068989 ubox
40 63 0.015563279 ubox
40 65 0.379707688 ubox
40 68 0.008347377 ubox
40 70 0.010301687 ubox
40 73 0.008736999 ubox
41 47 0.111292461 ubox
41 48 0.015342012 ubox
41 49 0.769693851 ubox
41 53 0.010500551 ubox
41 54 0.009983133 ubox
41 55 0.389365129 ubox
41 65 0.290183535 ubox
41 68 0.005137286 ubox
41 70 0.036757259 ubox
41 72 0.008781570 ubox
42 46 0.140095130 ubox
42 52 0.011031841 ubox
42 58 0.011945764 ubox
42 64 0.407148926 ubox
42 67 0.004490999 ubox
42 69 0.038153292 ubox
42 71 0.008793687 ubox
43 51 0.009619695 ubox
43 52 0.006171234 ubox
43 57 0.011374537 ubox
43 58 0.004692208 ubox
43 59 0.051485868 ubox
43 62 0.228465678 ubox
44 51 0.007820870 ubox
44 52 0.385971330 ubox
44 57 0.005848559 ubox
44 58 0.052981728 ubox
44 61 0.187362849 ubox
44 67 0.041411887 ubox
45 51 0.386119880 ubox
45 57 0.052960518 ubox
45 61 0.439956326 ubox
45 64 0.003211540 ubox
45 66 0.044206253 ubox
46 50 0.361220473 ubox
46 53 0.069064499 ubox
46 56 0.029789107 ubox
46 60 0.459792931 ubox
46 63 0.003214920 ubox
46 65 0.044413638 ubox
47 52 0.071787136 ubox
47 58 0.004431989 ubox
47 64 0.044400638 ubox
48 57 0.004016512 ubox
48 59 0.479772233 ubox
48 62 0.003897798 ubox
49 58 0.481577594 ubox
50 57 0.481570090 ubox
50 61 0.020288693 ubox
51 56 0.474940275 ubox
51 60 0.020425526 ubox
54 66 0.007121303 ubox
55 66 0.107422135 ubox
55 67 0.259975048 ubox
55 77 0.003695526 ubox
56 64 0.127160248 ubox
56 66 0.706480012 ubox
56 76 0.003752823 ubox
57 63 0.120291796 ubox
57 65 0.712083794 ubox
57 74 0.004296666 ubox
58 73 0.004299798 ubox
60 66 0.216092038 ubox
60 71 0.004372748 ubox
61 65 0.203900042 ubox
61 70 0.004364369 ubox
64 72 0.006805365 ubox
65 71 0.006827152 ubox
66 70 0.006387972 ubox
66 73 0.003826957 ubox
67 72 0.003813892 ubox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 19 0.9500000 lbox
14 18 0.9500000 lbox
28 73 0.9500000 lbox
29 72 0.9500000 lbox
30 71 0.9500000 lbox
31 70 0.9500000 lbox
32 69 0.9500000 lbox
33 68 0.9500000 lbox
34 67 0.9500000 lbox
36 54 0.9500000 lbox
37 53 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
56 66 0.9500000 lbox
57 65 0.9500000 lbox
showpage
end
%%EOF
