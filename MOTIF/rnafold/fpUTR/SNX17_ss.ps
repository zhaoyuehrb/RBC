%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAGGGCCAACUCCACUUUGGGCUCCCUAUCCGGACAGGUGGCUCUUGCCCUUUAGACUACAGUUCCCAGCAUGCCCAGGCGAUUGCGUCCCAGAACCGACGUCCCACCGCCUUCCCACAUCGGAUCGCAGGGCUCCCAAAAUGGCGAGUGAGGCUGCGGGGACUCGCUGAGCAGCGGAGGGGGAGCGUGCAGAGCCGCUGCGGCCCUCACAGUCCGGAGCCCGGCCGUGCCGUGCCGUAGGGAAC\
) } def
/len { sequence length } bind def

/coor [
[134.64897156 237.88394165]
[137.20491028 225.74996948]
[144.71276855 215.79048157]
[138.47370911 202.14958191]
[132.23466492 188.50866699]
[125.99561310 174.86776733]
[119.75656891 161.22686768]
[113.51751709 147.58596802]
[107.27846527 133.94505310]
[101.03942108 120.30415344]
[93.54180908 120.11492157]
[93.16310883 135.11013794]
[78.16790009 134.73121643]
[78.54658508 119.73645782]
[71.04897308 119.54722595]
[64.12973785 132.85601807]
[57.21050262 146.16482544]
[55.26882553 163.00721741]
[38.54713058 165.80386353]
[31.23075485 150.50984192]
[43.90169907 139.24559021]
[50.82093430 125.93679047]
[57.74016953 112.62799072]
[57.92941666 97.62918091]
[51.34817886 84.15003967]
[44.76694107 70.67089844]
[38.18570709 57.19175339]
[31.60446930 43.71260834]
[25.02323151 30.23346329]
[18.44199562 16.75432014]
[5.43437004 7.74808598]
[6.80310345 -7.08349657]
[0.22186671 -20.56264114]
[-6.35936975 -34.04178619]
[-12.94060612 -47.52092743]
[-32.27446747 -53.07045746]
[-41.12070465 -70.79353333]
[-34.15282822 -89.00802612]
[-41.23942184 -102.22846985]
[-48.32601547 -115.44892120]
[-62.08254623 -121.42871094]
[-76.58361053 -117.59214020]
[-91.08467102 -113.75557709]
[-105.58573151 -109.91901398]
[-113.05918884 -104.71113586]
[-120.29396057 -106.12675476]
[-134.84226990 -102.47344208]
[-149.39057922 -98.82013702]
[-155.05400085 -84.37350464]
[-168.14543152 -76.04319000]
[-183.63095093 -77.03237915]
[-195.55606079 -86.96070099]
[-199.33529663 -102.01052094]
[-193.51548767 -116.39486694]
[-180.33445740 -124.58267212]
[-164.86058044 -123.42555237]
[-153.04388428 -113.36844635]
[-138.49557495 -117.02175140]
[-123.94726562 -120.67506409]
[-109.42229462 -124.42007446]
[-94.92123413 -128.25663757]
[-80.42017365 -132.09320068]
[-65.91911316 -135.92976379]
[-58.17462158 -148.77589417]
[-61.55196381 -163.39073181]
[-64.92929840 -178.00556946]
[-68.30664062 -192.62042236]
[-71.68398285 -207.23526001]
[-75.06131744 -221.85009766]
[-78.43865967 -236.46493530]
[-83.40825653 -244.09892273]
[-81.76518250 -251.28544617]
[-84.95786285 -265.94174194]
[-88.15054321 -280.59802246]
[-93.02342987 -288.29409790]
[-91.28981781 -295.45932007]
[-94.29734039 -310.15472412]
[-97.30485535 -324.85012817]
[-126.11943817 -331.80496216]
[-137.06768799 -370.23446655]
[-146.51484680 -381.88571167]
[-155.96199036 -393.53692627]
[-165.40914917 -405.18817139]
[-174.85630798 -416.83938599]
[-192.94718933 -415.34967041]
[-208.16685486 -424.94989014]
[-214.50288391 -441.62353516]
[-209.58723450 -458.60574341]
[-219.32534790 -470.01489258]
[-229.06347656 -481.42407227]
[-238.80158997 -492.83322144]
[-248.53971863 -504.24240112]
[-263.99822998 -502.89559937]
[-277.27868652 -510.92114258]
[-283.27444458 -525.23303223]
[-279.68005371 -540.32806396]
[-267.87759399 -550.40191650]
[-252.40536499 -551.58093262]
[-239.21276855 -543.41174316]
[-233.37260437 -529.03564453]
[-237.13055420 -513.98052979]
[-227.39244080 -502.57135010]
[-217.65431213 -491.16220093]
[-207.91618347 -479.75302124]
[-198.17807007 -468.34387207]
[-186.37776184 -471.07357788]
[-174.46403503 -468.52151489]
[-164.70251465 -461.11041260]
[-158.97601318 -450.19296265]
[-158.42153931 -437.80511475]
[-163.20507812 -426.28656006]
[-153.75791931 -414.63531494]
[-144.31076050 -402.98410034]
[-134.86360168 -391.33285522]
[-125.41645050 -379.68161011]
[-111.47817993 -385.22460938]
[-112.61260986 -400.18164062]
[-113.74703979 -415.13867188]
[-125.89733887 -425.24542236]
[-127.25914001 -440.99090576]
[-117.02452087 -453.03369141]
[-101.26549530 -454.22894287]
[-89.33161163 -443.86755371]
[-88.30303955 -428.09677124]
[-98.79000092 -416.27310181]
[-97.65557098 -401.31607056]
[-96.52114105 -386.35903931]
[-89.17343903 -384.85528564]
[-86.16592407 -399.55068970]
[-83.15840149 -414.24609375]
[-73.20613861 -425.46893311]
[-68.46300507 -411.23855591]
[-71.47052002 -396.54315186]
[-74.47803497 -381.84774780]
[-67.13033295 -380.34399414]
[-60.21110153 -393.65280151]
[-53.29186630 -406.96160889]
[-46.37263489 -420.27041626]
[-39.53749466 -433.62258911]
[-32.78672028 -447.01763916]
[-26.03594971 -460.41265869]
[-24.30692101 -477.27822876]
[-7.62183952 -480.28561401]
[-0.11308772 -465.08511353]
[-12.64091015 -453.66189575]
[-19.39168167 -440.26684570]
[-26.14245415 -426.87182617]
[-26.34565544 -419.50265503]
[-33.06383133 -413.35116577]
[-39.98306656 -400.04235840]
[-46.90229797 -386.73358154]
[-53.82153320 -373.42477417]
[-54.79464340 -349.28350830]
[-66.84203339 -332.93920898]
[-82.60945129 -327.85766602]
[-79.60193634 -313.16226196]
[-76.59442139 -298.46685791]
[-73.49425507 -283.79071045]
[-70.30157471 -269.13442993]
[-67.10889435 -254.47813416]
[-63.82381821 -239.84228516]
[-60.44647598 -225.22743225]
[-57.06913757 -210.61259460]
[-53.69179916 -195.99775696]
[-50.31446075 -181.38291931]
[-46.93712234 -166.76806641]
[-43.55978012 -152.15322876]
[-34.52849960 -145.26589966]
[-31.13384438 -134.01460266]
[-35.10557175 -122.53551483]
[-28.01897621 -109.31506348]
[-20.93238258 -96.09461975]
[-10.71205521 -95.88729858]
[-1.42159867 -91.43305969]
[5.24347305 -83.47081757]
[8.03632259 -73.38610840]
[6.39163256 -62.97025681]
[0.53853762 -54.10216522]
[7.11977434 -40.62302017]
[13.70101070 -27.14387703]
[20.28224754 -13.66473293]
[32.81913757 -5.62261772]
[31.92114067 10.17308331]
[38.50237656 23.65222740]
[45.08361435 37.13137054]
[51.66484833 50.61051559]
[58.24608612 64.08966064]
[64.82732391 77.56880188]
[71.40856171 91.04795074]
[86.81532288 72.71942139]
[110.99286652 71.40089417]
[128.69145203 88.31795502]
[143.09109497 92.51918030]
[157.49073792 96.72039795]
[171.89038086 100.92161560]
[186.59243774 94.50062561]
[200.71128845 102.11885071]
[203.41618347 117.93223572]
[192.63212585 129.81010437]
[176.63174438 128.64077759]
[167.68916321 115.32126617]
[153.28952026 111.12004089]
[138.88986206 106.91882324]
[124.49022675 102.71759796]
[114.68032074 114.06510162]
[120.91937256 127.70600891]
[127.15842438 141.34690857]
[133.39747620 154.98782349]
[139.63652039 168.62872314]
[145.87556458 182.26962280]
[152.11462402 195.91052246]
[158.35366821 209.55143738]
[176.24356079 212.62559509]
[188.58439636 225.72164917]
[190.55690002 243.44917297]
[181.55702209 258.66629028]
[188.13825989 272.14544678]
[194.71948242 285.62457275]
[212.68125916 288.24636841]
[225.34858704 301.02688599]
[227.76774597 318.69900513]
[219.15466309 334.13836670]
[226.07389832 347.44714355]
[239.30462646 356.12231445]
[238.31054688 370.98373413]
[245.22978210 384.29251099]
[252.14900208 397.60131836]
[259.06823730 410.91012573]
[271.73919678 422.17437744]
[264.42282104 437.46838379]
[247.70111084 434.67175293]
[245.75944519 417.82934570]
[238.84020996 404.52056885]
[231.92097473 391.21176147]
[225.00173950 377.90295410]
[212.26593018 370.17971802]
[212.76510620 354.36639404]
[205.84587097 341.05758667]
[193.73394775 341.06030273]
[182.70074463 335.89129639]
[174.85852051 326.47265625]
[171.73719788 314.54617310]
[173.98617554 302.35156250]
[181.24034119 292.20581055]
[174.65910339 278.72665405]
[168.07786560 265.24752808]
[155.96974182 264.94464111]
[145.07048035 259.49890137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 212]
[4 211]
[5 210]
[6 209]
[7 208]
[8 207]
[9 206]
[10 205]
[15 23]
[16 22]
[17 21]
[24 189]
[25 188]
[26 187]
[27 186]
[28 185]
[29 184]
[30 183]
[32 181]
[33 180]
[34 179]
[35 178]
[38 172]
[39 171]
[40 170]
[41 63]
[42 62]
[43 61]
[44 60]
[46 59]
[47 58]
[48 57]
[64 167]
[65 166]
[66 165]
[67 164]
[68 163]
[69 162]
[70 161]
[72 160]
[73 159]
[74 158]
[76 157]
[77 156]
[78 155]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[116 127]
[117 126]
[118 125]
[135 152]
[136 151]
[137 150]
[138 149]
[139 147]
[140 146]
[141 145]
[192 204]
[193 203]
[194 202]
[195 201]
[216 246]
[217 245]
[218 244]
[222 238]
[223 237]
[225 235]
[226 234]
[227 233]
[228 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
