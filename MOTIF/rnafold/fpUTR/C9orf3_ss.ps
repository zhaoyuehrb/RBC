%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGUCACCCGGCGCGUGCCGGGGUAGCCCGUAGUAACCCCGAGUCUGCGGAAGUGGUGACCCGUGGGACGCGGCUGAGACAGGAGACUGAAAGGAACCAUAAUUUGUGACAUCAGUUGUUUUCUUUGAUAAGCAGCUAUUUAUGAUUCUGGAAGAUUAAGGCAGAUAGGAAACCCCAUCUGAGAUUUUAAUAAAUCCCUCAAACAAUAAACCACAUC\
) } def
/len { sequence length } bind def

/coor [
[-74.83404541 285.32083130]
[-83.39443970 286.78784180]
[-91.92504120 285.40612793]
[-99.50811768 281.35290527]
[-111.55422211 290.29110718]
[-123.60033417 299.22927856]
[-135.64643860 308.16748047]
[-147.69255066 317.10568237]
[-159.73866272 326.04385376]
[-159.01870728 344.16613770]
[-169.23548889 358.96041870]
[-186.13960266 364.60583496]
[-202.89753723 359.01940918]
[-214.68229675 368.29949951]
[-226.46704102 377.57955933]
[-238.25178528 386.85961914]
[-244.30705261 401.47622681]
[-259.09307861 403.27139282]
[-270.87780762 412.55148315]
[-282.59570312 421.91583252]
[-294.24612427 431.36401367]
[-305.89654541 440.81216431]
[-317.54693604 450.26031494]
[-329.19735718 459.70849609]
[-340.84777832 469.15664673]
[-346.69274902 483.85858154]
[-361.45150757 485.86569214]
[-373.10189819 495.31387329]
[-376.19082642 511.05673218]
[-390.49090576 518.32910156]
[-405.03234863 511.55224609]
[-408.66021729 495.92477417]
[-398.59149170 483.43475342]
[-382.55007935 483.66345215]
[-370.89965820 474.21527100]
[-365.88800049 460.18914795]
[-350.29595947 457.50625610]
[-338.64553833 448.05807495]
[-326.99511719 438.60992432]
[-315.34469604 429.16174316]
[-303.69427490 419.71359253]
[-292.04385376 410.26541138]
[-288.83056641 403.61483765]
[-280.15789795 400.76672363]
[-268.37313843 391.48666382]
[-263.16079712 377.53384399]
[-247.53186035 375.07489014]
[-235.74711609 365.79479980]
[-223.96235657 356.51473999]
[-212.17761230 347.23468018]
[-214.44055176 335.31442261]
[-211.40492249 323.49264526]
[-203.58692932 314.02615356]
[-192.42163086 308.74890137]
[-179.99990845 308.71697998]
[-168.67684937 313.99774170]
[-156.63073730 305.05957031]
[-144.58464050 296.12136841]
[-132.53852844 287.18316650]
[-120.49241638 278.24499512]
[-108.44630432 269.30679321]
[-107.28948975 248.09054565]
[-90.59175873 234.49493408]
[-69.01795197 237.74703979]
[-57.64336777 227.96855164]
[-46.26877975 218.19007874]
[-34.89419174 208.41159058]
[-41.08711624 194.02203369]
[-42.53110504 178.40359497]
[-39.07279587 163.08462524]
[-31.03912163 149.56788635]
[-19.20647240 139.18319702]
[-4.72564983 132.95651245]
[10.99003220 131.50862122]
[26.40269089 134.99328613]
[40.00037003 143.08097839]
[51.23351669 133.14033508]
[62.46666336 123.19969177]
[73.69981384 113.25904083]
[66.31916046 87.16542816]
[84.35734558 60.34005737]
[74.82585907 48.75770950]
[65.29438019 37.17535782]
[49.75700760 31.92919922]
[46.79736328 15.79933453]
[59.46007538 5.37878656]
[74.71882629 11.38732243]
[76.87672424 27.64387512]
[86.40821075 39.22622299]
[95.93969727 50.80857086]
[103.43024445 50.43217087]
[100.61845398 35.69806671]
[96.97638702 21.14693642]
[109.01811981 12.20284843]
[121.89643860 19.89367867]
[119.73191071 34.73760605]
[118.41133881 49.67936325]
[125.90189362 49.30296326]
[134.22425842 36.82345200]
[135.44375610 21.04931450]
[148.94233704 14.75348282]
[157.26470947 2.27397203]
[165.58706665 -10.20553875]
[173.90943909 -22.68504906]
[182.23181152 -35.16456223]
[190.55416870 -47.64406967]
[186.13816833 -66.07198334]
[196.42297363 -81.60585022]
[214.48193359 -84.63016510]
[222.44288635 -97.34327698]
[224.34324646 -106.27162170]
[230.61032104 -110.18051147]
[238.75282288 -122.77811432]
[246.89530945 -135.37573242]
[255.03781128 -147.97332764]
[262.63079834 -160.90959167]
[269.66018677 -174.16052246]
[276.68960571 -187.41146851]
[283.71899414 -200.66241455]
[290.74841309 -213.91336060]
[297.77780151 -227.16430664]
[304.80722046 -240.41523743]
[297.87091064 -254.29571533]
[300.45129395 -269.59674072]
[311.55609131 -280.43475342]
[326.91534424 -282.64233398]
[340.62304688 -275.37063599]
[347.40835571 -261.41574097]
[344.66217041 -246.14360046]
[333.44042969 -235.42666626]
[318.05816650 -233.38583374]
[311.02874756 -220.13490295]
[303.99935913 -206.88395691]
[296.96994019 -193.63301086]
[289.94055176 -180.38206482]
[282.91113281 -167.13111877]
[275.88174438 -153.88018799]
[290.49346924 -157.27101135]
[303.29296875 -149.44972229]
[306.94213867 -134.90037537]
[299.34884644 -121.96430206]
[284.86642456 -118.05793762]
[271.79785156 -125.42085266]
[267.63540649 -139.83084106]
[259.49291992 -127.23323059]
[251.35043335 -114.63562012]
[243.20793152 -102.03800964]
[235.15600586 -89.38232422]
[227.19505310 -76.66921234]
[232.09799194 -66.37507629]
[231.41847229 -54.87319183]
[225.20976257 -45.02521515]
[214.91510010 -39.33706665]
[203.03369141 -39.32170486]
[194.71131897 -26.84219170]
[186.38894653 -14.36268139]
[178.06658936 -1.88317084]
[169.74421692 10.59634018]
[161.42184448 23.07585144]
[160.79762268 37.95737076]
[146.70376587 45.14582062]
[138.38140869 57.62533188]
[143.84721375 71.59404755]
[158.42898560 75.11141205]
[173.01075745 78.62878418]
[187.59252930 82.14615631]
[202.17430115 85.66352844]
[217.40402222 81.37797546]
[227.96211243 91.88398743]
[242.54388428 95.40135193]
[258.11102295 90.24422455]
[270.17926025 101.34783173]
[266.33380127 117.28974152]
[250.53053284 121.67028046]
[239.02650452 109.98313141]
[224.44473267 106.46575928]
[210.25799561 111.00289154]
[198.65692139 100.24530029]
[184.07514954 96.72792816]
[169.49337769 93.21055603]
[154.91160583 89.69319153]
[140.32983398 86.17581940]
[135.92016602 102.97774506]
[125.90901184 114.00804901]
[136.85237122 124.26683807]
[147.79573059 134.52563477]
[158.73910522 144.78442383]
[169.68246460 155.04321289]
[185.76596069 158.24530029]
[190.77764893 173.85987854]
[179.56196594 185.82398987]
[163.65661621 181.83000183]
[159.42367554 165.98657227]
[148.48031616 155.72778320]
[137.53694153 145.46899414]
[126.59358215 135.21020508]
[115.65022278 124.95140839]
[99.57749939 129.45036316]
[83.64045715 124.49219513]
[72.40731049 134.43283081]
[61.17416000 144.37347412]
[49.94101334 154.31411743]
[55.92799759 167.40463257]
[57.98116684 181.63598633]
[55.94298172 195.85343933]
[49.98751831 208.90585327]
[40.60565948 219.73899841]
[28.56461525 227.48069763]
[14.84521389 231.51098633]
[0.56199598 231.51181030]
[-13.12732697 227.49206543]
[-25.11570740 219.78617859]
[-36.49029541 229.56465149]
[-47.86487961 239.34313965]
[-59.23946762 249.12162781]
[-57.03358078 257.74627686]
[-57.74060822 266.57684326]
[-61.25605011 274.66101074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 61]
[5 60]
[6 59]
[7 58]
[8 57]
[9 56]
[13 50]
[14 49]
[15 48]
[16 47]
[18 45]
[19 44]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[25 37]
[27 35]
[28 34]
[64 215]
[65 214]
[66 213]
[67 212]
[76 202]
[77 201]
[78 200]
[79 199]
[81 90]
[82 89]
[83 88]
[98 162]
[99 161]
[101 159]
[102 158]
[103 157]
[104 156]
[105 155]
[106 154]
[109 149]
[110 148]
[112 147]
[113 146]
[114 145]
[115 144]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[121 132]
[122 131]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
[169 176]
[170 175]
[184 197]
[185 196]
[186 195]
[187 194]
[188 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
