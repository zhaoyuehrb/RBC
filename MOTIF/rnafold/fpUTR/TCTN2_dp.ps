%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TCTN2)
} def

/sequence { (\
AUAGCUCCGGGCGUUCGCUUGCAAGAUGGCGGCGGCGGGGCAGUGGCUGCUGCGUUUUCGUGUCUGAGUCCUUCCUGGGUUCUAAUGAGGGCGCGGUUCUGCUGUGCCCGGCCCGCGAGGUCUAAGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 121 0.039925243 ubox
2 120 0.041069092 ubox
2 124 0.538991288 ubox
3 123 0.569716861 ubox
4 12 0.019130468 ubox
4 22 0.016059475 ubox
4 41 0.005856516 ubox
4 116 0.006685651 ubox
4 121 0.155293661 ubox
4 122 0.566045607 ubox
4 128 0.174719550 ubox
5 11 0.019149053 ubox
5 21 0.015543116 ubox
5 40 0.006280208 ubox
5 115 0.006294433 ubox
5 119 0.947336536 ubox
5 120 0.234455286 ubox
5 126 0.015618313 ubox
5 127 0.176030205 ubox
6 10 0.017251676 ubox
6 39 0.006380612 ubox
6 118 0.973330988 ubox
6 119 0.124967701 ubox
6 120 0.019883914 ubox
6 125 0.015550671 ubox
6 126 0.171176978 ubox
6 127 0.006251641 ubox
7 38 0.006457557 ubox
7 111 0.004371335 ubox
7 117 0.978417367 ubox
7 119 0.022468972 ubox
7 120 0.028377621 ubox
7 126 0.020002495 ubox
7 127 0.026156570 ubox
8 17 0.004800790 ubox
8 21 0.034619373 ubox
8 37 0.006468534 ubox
8 110 0.004427637 ubox
8 115 0.981889736 ubox
8 117 0.008199041 ubox
8 119 0.028173810 ubox
8 126 0.026476773 ubox
9 16 0.005197495 ubox
9 20 0.038609568 ubox
9 36 0.006422881 ubox
9 109 0.004460009 ubox
9 114 0.982500320 ubox
9 116 0.005121244 ubox
9 123 0.173992626 ubox
10 15 0.004097457 ubox
10 19 0.039568794 ubox
10 108 0.004454709 ubox
10 113 0.982513090 ubox
10 114 0.004838326 ubox
10 122 0.177732426 ubox
10 123 0.006615476 ubox
11 18 0.039764475 ubox
11 22 0.006654533 ubox
11 36 0.003636631 ubox
11 107 0.004437698 ubox
11 112 0.982348976 ubox
11 113 0.004476477 ubox
11 116 0.027359396 ubox
11 121 0.177737770 ubox
11 122 0.006749367 ubox
12 17 0.039716717 ubox
12 21 0.006663261 ubox
12 34 0.053346112 ubox
12 35 0.007430655 ubox
12 37 0.026889644 ubox
12 106 0.004387591 ubox
12 110 0.030249002 ubox
12 111 0.979284445 ubox
12 115 0.027372748 ubox
12 120 0.177718665 ubox
13 20 0.006119546 ubox
13 22 0.007389915 ubox
13 30 0.003765653 ubox
13 33 0.192445087 ubox
13 36 0.232370708 ubox
13 109 0.038060857 ubox
13 114 0.026246961 ubox
14 21 0.007322865 ubox
14 29 0.003607420 ubox
14 32 0.137125908 ubox
14 35 0.170389600 ubox
14 39 0.003203885 ubox
14 118 0.133760233 ubox
14 119 0.095158942 ubox
15 26 0.005234496 ubox
15 31 0.026577664 ubox
15 32 0.191508869 ubox
15 34 0.038431262 ubox
15 35 0.712811526 ubox
15 38 0.005499943 ubox
15 110 0.003210682 ubox
15 117 0.121429098 ubox
15 118 0.107148608 ubox
16 25 0.005752101 ubox
16 28 0.003322010 ubox
16 31 0.294913841 ubox
16 34 0.940232776 ubox
16 37 0.055438572 ubox
16 115 0.003913184 ubox
16 117 0.112144173 ubox
17 27 0.003263704 ubox
17 30 0.298133929 ubox
17 33 0.944968989 ubox
17 36 0.058546852 ubox
17 116 0.109647416 ubox
17 128 0.019360589 ubox
18 25 0.004825833 ubox
18 29 0.298136828 ubox
18 32 0.941198999 ubox
18 35 0.058597725 ubox
18 115 0.109446626 ubox
18 127 0.019497901 ubox
19 24 0.004617538 ubox
19 26 0.010669113 ubox
19 28 0.296549908 ubox
19 31 0.686948208 ubox
19 32 0.112061365 ubox
19 34 0.051019388 ubox
19 35 0.004120195 ubox
19 125 0.003185227 ubox
19 126 0.019394491 ubox
20 24 0.003940685 ubox
20 25 0.017092874 ubox
20 28 0.008824726 ubox
20 31 0.644777055 ubox
20 34 0.018758328 ubox
20 124 0.003207114 ubox
20 125 0.018646541 ubox
21 27 0.008619974 ubox
21 30 0.911964421 ubox
21 33 0.032857282 ubox
21 112 0.005419820 ubox
21 128 0.008176277 ubox
22 28 0.278457581 ubox
22 29 0.909379259 ubox
22 32 0.032845012 ubox
22 111 0.005417423 ubox
22 127 0.009231288 ubox
23 27 0.230978693 ubox
24 57 0.003185825 ubox
24 65 0.007882643 ubox
24 123 0.042814281 ubox
25 56 0.003399748 ubox
25 64 0.008168539 ubox
25 122 0.044581179 ubox
26 55 0.003426498 ubox
26 63 0.008139206 ubox
26 121 0.044567626 ubox
27 54 0.003257588 ubox
27 62 0.006517972 ubox
27 120 0.044102963 ubox
28 33 0.005030822 ubox
28 61 0.004513551 ubox
28 122 0.004442725 ubox
29 36 0.005823596 ubox
29 53 0.004005761 ubox
29 61 0.006884884 ubox
29 116 0.014215124 ubox
29 121 0.004482087 ubox
30 35 0.005938324 ubox
30 52 0.004552032 ubox
30 60 0.008366535 ubox
30 115 0.014275014 ubox
30 117 0.036768545 ubox
30 120 0.004539250 ubox
31 51 0.004556521 ubox
31 59 0.008387651 ubox
31 113 0.019425775 ubox
31 114 0.017129641 ubox
31 116 0.034814112 ubox
32 50 0.004575384 ubox
32 53 0.010293969 ubox
32 58 0.007980679 ubox
32 112 0.019675681 ubox
32 113 0.012739081 ubox
32 116 0.141259115 ubox
33 49 0.004575470 ubox
33 52 0.010391373 ubox
33 60 0.003200858 ubox
33 110 0.037387701 ubox
33 111 0.019645674 ubox
33 115 0.141993651 ubox
34 48 0.004572017 ubox
34 51 0.010388176 ubox
34 56 0.014336220 ubox
34 59 0.003175531 ubox
34 108 0.044633573 ubox
34 109 0.036398545 ubox
34 113 0.140493815 ubox
34 114 0.118788182 ubox
35 47 0.004575238 ubox
35 50 0.010399069 ubox
35 55 0.025728756 ubox
35 107 0.046586702 ubox
35 108 0.026126017 ubox
35 112 0.162606609 ubox
35 113 0.088832922 ubox
36 46 0.004541572 ubox
36 49 0.010397892 ubox
36 54 0.027137242 ubox
36 106 0.047969699 ubox
36 110 0.926187965 ubox
36 111 0.178461996 ubox
37 48 0.010217357 ubox
37 53 0.027243370 ubox
37 105 0.046651788 ubox
37 108 0.209228471 ubox
37 109 0.948132431 ubox
38 47 0.010170790 ubox
38 107 0.218327497 ubox
38 108 0.946177316 ubox
38 109 0.230177744 ubox
39 51 0.027174184 ubox
39 103 0.046527546 ubox
39 107 0.942028394 ubox
39 108 0.231769938 ubox
40 47 0.003199919 ubox
40 50 0.027269692 ubox
40 53 0.003738598 ubox
40 102 0.046638790 ubox
40 105 0.919525191 ubox
40 107 0.232882836 ubox
41 46 0.003244316 ubox
41 49 0.027271866 ubox
41 52 0.003748440 ubox
41 101 0.046638371 ubox
41 104 0.970934681 ubox
41 106 0.231920005 ubox
42 48 0.027205199 ubox
42 51 0.003925882 ubox
42 100 0.046404170 ubox
42 103 0.972893682 ubox
42 105 0.220334293 ubox
43 47 0.026609184 ubox
43 50 0.003945419 ubox
43 99 0.045640701 ubox
43 102 0.975481213 ubox
43 105 0.011557064 ubox
44 49 0.003784398 ubox
44 101 0.973349818 ubox
44 104 0.143004062 ubox
45 98 0.018583353 ubox
45 99 0.036426836 ubox
45 100 0.967873115 ubox
45 103 0.209941357 ubox
46 97 0.016956133 ubox
46 98 0.033153776 ubox
46 99 0.970229035 ubox
46 102 0.212217044 ubox
47 96 0.016493116 ubox
47 101 0.211969237 ubox
48 95 0.015086310 ubox
49 94 0.010030094 ubox
49 97 0.994210531 ubox
50 93 0.009375347 ubox
50 96 0.999345357 ubox
51 95 0.998663934 ubox
52 92 0.005687955 ubox
52 94 0.999467231 ubox
53 91 0.005675743 ubox
53 93 0.999485599 ubox
54 92 0.999505487 ubox
55 89 0.003268707 ubox
55 91 0.998922393 ubox
56 90 0.994434725 ubox
57 89 0.995048723 ubox
58 88 0.999158982 ubox
58 90 0.007903747 ubox
59 87 0.999732459 ubox
59 89 0.010227488 ubox
60 86 0.993887369 ubox
61 84 0.034863420 ubox
61 85 0.986451638 ubox
61 87 0.012224122 ubox
62 80 0.006062113 ubox
62 83 0.047824331 ubox
62 86 0.081248755 ubox
62 128 0.003540638 ubox
63 85 0.101860983 ubox
63 127 0.003580199 ubox
64 79 0.061488632 ubox
64 126 0.003623772 ubox
65 78 0.061379988 ubox
65 84 0.056483204 ubox
65 125 0.003423246 ubox
66 81 0.049101479 ubox
66 82 0.993859392 ubox
66 83 0.016242456 ubox
67 76 0.061470804 ubox
67 80 0.051211831 ubox
67 81 0.993264552 ubox
67 83 0.016502312 ubox
67 123 0.003476535 ubox
68 75 0.061219768 ubox
68 80 0.935916453 ubox
68 82 0.018865305 ubox
68 122 0.003710863 ubox
69 78 0.017548576 ubox
69 79 0.800667136 ubox
70 77 0.017552898 ubox
70 78 0.841946193 ubox
70 79 0.535379405 ubox
70 120 0.003672523 ubox
71 77 0.841854970 ubox
71 78 0.535338934 ubox
71 79 0.007313814 ubox
71 119 0.003668905 ubox
72 77 0.521435710 ubox
72 78 0.007321810 ubox
73 77 0.010535381 ubox
76 115 0.003645202 ubox
77 114 0.003946805 ubox
78 113 0.003947849 ubox
79 112 0.003947491 ubox
80 111 0.003843796 ubox
81 88 0.003631166 ubox
81 110 0.003332379 ubox
82 87 0.003877753 ubox
89 109 0.029914530 ubox
90 108 0.030037122 ubox
91 107 0.030039234 ubox
92 106 0.030039222 ubox
93 105 0.030028138 ubox
94 104 0.030038820 ubox
95 103 0.030013439 ubox
96 102 0.030021489 ubox
97 101 0.028084891 ubox
106 128 0.005631096 ubox
107 127 0.005694803 ubox
108 126 0.005690292 ubox
110 122 0.005731735 ubox
111 121 0.005774612 ubox
112 120 0.005781216 ubox
113 119 0.005719703 ubox
114 119 0.004810874 ubox
115 128 0.003319265 ubox
116 127 0.003633844 ubox
120 128 0.249964674 ubox
121 127 0.251955594 ubox
122 126 0.245229217 ubox
5 119 0.9500000 lbox
6 118 0.9500000 lbox
7 117 0.9500000 lbox
8 115 0.9500000 lbox
9 114 0.9500000 lbox
10 113 0.9500000 lbox
11 112 0.9500000 lbox
12 111 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
36 110 0.9500000 lbox
37 109 0.9500000 lbox
38 108 0.9500000 lbox
39 107 0.9500000 lbox
40 105 0.9500000 lbox
41 104 0.9500000 lbox
42 103 0.9500000 lbox
43 102 0.9500000 lbox
44 101 0.9500000 lbox
45 100 0.9500000 lbox
46 99 0.9500000 lbox
49 97 0.9500000 lbox
50 96 0.9500000 lbox
51 95 0.9500000 lbox
52 94 0.9500000 lbox
53 93 0.9500000 lbox
54 92 0.9500000 lbox
55 91 0.9500000 lbox
56 90 0.9500000 lbox
57 89 0.9500000 lbox
58 88 0.9500000 lbox
59 87 0.9500000 lbox
60 86 0.9500000 lbox
61 85 0.9500000 lbox
66 82 0.9500000 lbox
67 81 0.9500000 lbox
68 80 0.9500000 lbox
69 79 0.9500000 lbox
70 78 0.9500000 lbox
71 77 0.9500000 lbox
showpage
end
%%EOF
