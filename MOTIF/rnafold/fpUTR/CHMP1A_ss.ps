%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCGCGCCCCGCCCCUCUGGCGGGACCGGCCACCAUCCUCUCGCGAGAGCAUCCCGUGCGACCGGAAGUGGGGCGGCGACCCCGGAAGUCCCCGCCGGGUGCAGCUUGGUCGGUUCGAUCGCCGCCGGGACCUGACACCGCCCGGAGUUGGCGUCCCUUCUCCCUCUCCGAGUGCUGCUCCUGUCAUUGUGGCC\
) } def
/len { sequence length } bind def

/coor [
[95.66057587 236.70092773]
[81.46786499 229.22119141]
[78.60839844 213.43502808]
[89.27573395 201.45222473]
[89.75164795 186.45977783]
[90.22756958 171.46733093]
[90.70349121 156.47488403]
[91.17940521 141.48243713]
[91.65532684 126.48998260]
[77.98784637 123.80602264]
[65.61898041 113.86937714]
[57.11307907 126.22453308]
[48.60718155 138.57968140]
[40.10128403 150.93482971]
[31.59538651 163.28997803]
[23.08948898 175.64512634]
[24.57487106 191.61926270]
[12.91249084 202.63600159]
[-2.95127320 200.24423218]
[-10.84709740 186.27871704]
[-4.71798229 171.45260620]
[10.73434067 167.13922119]
[19.24023819 154.78407288]
[27.74613571 142.42892456]
[36.25203323 130.07377625]
[44.75793076 117.71862793]
[53.26382828 105.36347961]
[50.20243835 98.51673889]
[39.07107925 108.57123566]
[26.06900215 101.09152985]
[29.16494179 86.41450500]
[44.07965469 84.82325745]
[41.01826096 77.97651672]
[26.13893890 76.07762909]
[11.25961685 74.17874146]
[-3.61970520 72.27985382]
[-14.28672218 79.54330444]
[-26.64652634 77.64859009]
[-34.14992523 68.15187836]
[-48.99724579 66.01715851]
[-63.84457016 63.88243484]
[-78.72389221 61.98354721]
[-93.63146973 60.32097626]
[-108.20420074 66.48101807]
[-119.99546051 57.38072205]
[-134.90304565 55.71814728]
[-149.81062317 54.05557632]
[-164.71820068 52.39300156]
[-179.29092407 58.55304337]
[-191.08218384 49.45274734]
[-205.98976135 47.79017639]
[-222.40147400 52.04367828]
[-231.03195190 37.45083618]
[-219.39855957 25.11793327]
[-204.32719421 32.88259888]
[-189.41961670 34.54516983]
[-175.91317749 28.26621246]
[-163.05561829 37.48542404]
[-148.14804077 39.14799881]
[-133.24046326 40.81056976]
[-118.33288574 42.47314453]
[-104.82644653 36.19418716]
[-91.96889496 45.41339874]
[-77.06131744 47.07597351]
[-72.83031464 44.83980179]
[-67.14827728 45.24521255]
[-61.70984650 49.03511429]
[-46.86252594 51.16983795]
[-32.01520157 53.30455780]
[-16.10465431 45.91118240]
[-1.72081828 57.40053177]
[13.15850353 59.29941940]
[28.03782654 61.19830322]
[42.91714859 63.09719086]
[52.09570312 51.23320770]
[46.52076721 37.30768585]
[40.94582748 23.38216782]
[35.37089157 9.45664978]
[29.79595566 -4.46886969]
[17.48388672 -14.40484333]
[19.93669891 -29.09609795]
[14.36176300 -43.02161789]
[8.78682613 -56.94713593]
[-6.12545252 -61.65436172]
[-14.47951984 -74.87342072]
[-12.33084106 -90.36267853]
[-0.69395673 -100.80858612]
[14.93655300 -101.27890015]
[27.18043900 -91.55155182]
[30.25651169 -76.21950531]
[22.71234512 -62.52207184]
[28.28728104 -48.59655380]
[33.86221695 -34.67103577]
[45.77552795 -25.73110771]
[43.72147369 -10.04380608]
[49.29640961 3.88171268]
[54.87134933 17.80723190]
[60.44628525 31.73274994]
[66.02121735 45.65826797]
[79.18640900 52.84700394]
[93.91533661 50.00823593]
[108.64426422 47.16946793]
[120.73075867 36.96028900]
[134.69232178 42.14911652]
[149.42124939 39.31034851]
[164.15019226 36.47157669]
[178.87911987 33.63280869]
[193.60804749 30.79404068]
[196.05563354 10.26844597]
[214.62380981 -6.31355143]
[243.78681946 -6.94258690]
[253.05920410 -18.73338318]
[255.90861511 -27.42352104]
[262.57342529 -30.63615417]
[272.03173828 -42.27835083]
[281.49002075 -53.92054749]
[290.94830322 -65.56274414]
[289.07214355 -81.25527954]
[298.90734863 -93.62639618]
[314.61883545 -95.33653259]
[326.88528442 -85.37109375]
[328.42919922 -69.64240265]
[318.33465576 -57.48200607]
[302.59051514 -56.10445404]
[293.13220215 -44.46225739]
[283.67391968 -32.82006073]
[274.21563721 -21.17786407]
[264.85000610 -9.46099854]
[255.57762146 2.32979774]
[262.87057495 15.43753815]
[277.77813721 13.77496529]
[292.68572998 12.11239243]
[307.59329224 10.44981956]
[322.50088501 8.78724670]
[337.39480591 7.00646067]
[352.27410889 5.10757351]
[367.15344238 3.20868683]
[382.03277588 1.30980015]
[396.91207886 -0.58908671]
[409.62173462 -10.01113701]
[423.22610474 -3.94726086]
[438.10543823 -5.84614754]
[450.82046509 -16.20279694]
[466.04876709 -10.11749935]
[468.12475586 6.14971352]
[454.91287231 15.86452770]
[440.00430298 9.03317451]
[425.12500000 10.93206120]
[413.47961426 20.21829033]
[398.81097412 14.29023552]
[383.93164062 16.18912315]
[369.05233765 18.08800888]
[354.17300415 19.98689651]
[339.29367065 21.88578224]
[333.04995728 25.85526657]
[324.16345215 23.69482422]
[309.25585938 25.35739708]
[294.34829712 27.01996994]
[279.44070435 28.68254280]
[264.53314209 30.34511566]
[262.53457642 37.57393265]
[258.53747559 52.03156281]
[256.53894043 59.26037979]
[268.47534180 68.34452820]
[280.41177368 77.42867279]
[295.62426758 73.80728912]
[309.58224487 80.85772705]
[315.69519043 95.25098419]
[311.07678223 110.19100189]
[297.90765381 118.62356567]
[282.40588379 116.56707001]
[271.89093018 104.99253082]
[271.32763672 89.36509705]
[259.39120483 80.28095245]
[247.45478821 71.19680786]
[211.58081055 68.98638916]
[196.44682312 45.52297211]
[181.71788025 48.36174011]
[166.98895264 51.20050812]
[152.26002502 54.03927612]
[137.53109741 56.87804413]
[126.49811554 66.88417816]
[111.48303223 61.89839935]
[96.75410461 64.73716736]
[82.02517700 67.57593536]
[102.18292999 64.54401398]
[119.99228668 72.53215027]
[130.18247986 88.15604401]
[130.29563904 105.94377899]
[121.22599030 120.23136902]
[106.64777374 126.96590424]
[106.17185211 141.95834351]
[105.69593811 156.95079041]
[105.22001648 171.94325256]
[104.74409485 186.93569946]
[104.26818085 201.92814636]
[114.15403748 214.56338501]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 196]
[5 195]
[6 194]
[7 193]
[8 192]
[9 191]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[33 74]
[34 73]
[35 72]
[36 71]
[39 69]
[40 68]
[41 67]
[42 64]
[43 63]
[45 61]
[46 60]
[47 59]
[48 58]
[50 56]
[51 55]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[81 93]
[82 92]
[83 91]
[100 185]
[101 184]
[102 183]
[104 181]
[105 180]
[106 179]
[107 178]
[108 177]
[111 129]
[112 128]
[114 127]
[115 126]
[116 125]
[117 124]
[130 160]
[131 159]
[132 158]
[133 157]
[134 156]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[141 148]
[142 147]
[163 175]
[164 174]
[165 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
