%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGAGACGAAGAGGUGGCGGCGGCCGGAGCGCCCCCGGCCUCUGUCGGCUCCGUAGGCUCAGGUAGACCUGGCGACGACGGGGCUGCAGCUGCAGGGGCUGAGCUGGCUGGGCAAGCGCGGGCCGCGGAGGAGGUCUCAGGGGUGAAUCAUUUGAUGUAAAAGACUUGACUCCAUAAUCUGCAUCUGUCCUA\
) } def
/len { sequence length } bind def

/coor [
[63.39419937 338.81311035]
[65.89659882 319.59365845]
[66.13949585 304.59561157]
[66.38238525 289.59759521]
[63.34290695 282.84909058]
[66.75260925 274.35919189]
[67.23834229 259.36703491]
[67.72406769 244.37490845]
[65.15977478 240.33049011]
[65.11868286 234.62965393]
[68.47609711 228.90739441]
[69.44704437 213.93884277]
[70.41799164 198.97030640]
[63.52074814 185.76889038]
[72.13510132 172.49848938]
[73.10604858 157.52995300]
[74.07699585 142.56141663]
[75.04794312 127.59286499]
[75.67845917 112.81077576]
[82.38278198 102.37463379]
[92.12490082 98.26515198]
[81.95627594 87.23795319]
[71.78765106 76.21075439]
[61.61902618 65.18356323]
[51.45040131 54.15636444]
[41.28177261 43.12916946]
[30.38845825 43.31666565]
[21.37994385 37.58901215]
[17.10808945 28.04610443]
[18.76615715 17.94561577]
[8.95994473 6.59492302]
[-0.84626663 -4.75576925]
[-10.65247822 -16.10646057]
[-29.96709251 -21.84519196]
[-32.80408096 -40.96376801]
[-42.97270966 -51.99096298]
[-53.14133453 -63.01816177]
[-63.30995941 -74.04535675]
[-73.47858429 -85.07255554]
[-83.64720917 -96.09974670]
[-93.81583405 -107.12694550]
[-107.35689545 -104.50915527]
[-120.31919861 -108.89282227]
[-129.34783936 -119.03035736]
[-132.16203308 -132.19993591]
[-128.13066101 -144.93572998]
[-138.11938477 -156.12614441]
[-148.10812378 -167.31654358]
[-158.09684753 -178.50695801]
[-168.08557129 -189.69737244]
[-178.07429504 -200.88778687]
[-188.06303406 -212.07820129]
[-198.05175781 -223.26860046]
[-213.39154053 -221.85540771]
[-226.46925354 -229.65455627]
[-232.37702942 -243.49516296]
[-229.04197693 -257.98706055]
[-239.03071594 -269.17749023]
[-249.01943970 -280.36788940]
[-259.00817871 -291.55831909]
[-263.99359131 -293.19857788]
[-267.49331665 -296.28439331]
[-269.20501709 -300.00387573]
[-269.19403076 -303.54324341]
[-278.62753296 -315.20553589]
[-288.06103516 -326.86779785]
[-297.49456787 -338.53009033]
[-312.18914795 -344.39352417]
[-314.17770386 -359.15478516]
[-323.61120605 -370.81707764]
[-333.04470825 -382.47937012]
[-342.47824097 -394.14163208]
[-358.11547852 -394.24206543]
[-369.99621582 -404.40979004]
[-372.51071167 -419.84387207]
[-364.47167969 -433.25686646]
[-349.67492676 -438.31552124]
[-335.10702515 -432.63134766]
[-327.64648438 -418.88818359]
[-330.81594849 -403.57516479]
[-321.38244629 -391.91287231]
[-311.94891357 -380.25057983]
[-302.51541138 -368.58831787]
[-288.49557495 -363.55902100]
[-285.83227539 -347.96359253]
[-276.39877319 -336.30133057]
[-266.96524048 -324.63903809]
[-257.53173828 -312.97674561]
[-247.81774902 -301.54702759]
[-237.82902527 -290.35662842]
[-227.84030151 -279.16619873]
[-217.85156250 -267.97579956]
[-203.07542419 -269.65020752]
[-189.99189758 -262.21478271]
[-183.72207642 -248.33882141]
[-186.86134338 -233.25733948]
[-176.87261963 -222.06692505]
[-166.88389587 -210.87651062]
[-156.89515686 -199.68609619]
[-146.90643311 -188.49569702]
[-136.91770935 -177.30528259]
[-126.92897797 -166.11486816]
[-116.94024658 -154.92445374]
[-100.67510223 -157.09434509]
[-86.17385101 -149.06587219]
[-79.24189758 -133.82695007]
[-82.78864288 -117.29557037]
[-72.62001801 -106.26837158]
[-62.45138931 -95.24118042]
[-52.28276443 -84.21398163]
[-42.11413574 -73.18678284]
[-31.94551277 -62.15959167]
[-21.77688599 -51.13239288]
[-11.55367184 -51.63731384]
[-2.55521441 -46.31344223]
[2.11668897 -36.71486664]
[0.69821399 -25.91267204]
[10.50442600 -14.56198025]
[20.31063652 -3.21128845]
[30.11684799 8.13940334]
[48.79182053 13.12076187]
[52.30897141 32.96054459]
[62.47759628 43.98773956]
[72.64622498 55.01493454]
[82.81484985 66.04212952]
[92.98347473 77.06932831]
[103.15209961 88.09652710]
[116.30137634 95.31431580]
[131.06402588 97.97217560]
[145.82667542 100.63004303]
[160.58932495 103.28791046]
[177.75781250 96.64846802]
[190.71470642 108.47526550]
[205.51844788 110.89373016]
[220.32220459 113.31219482]
[235.12594604 115.73065948]
[249.92970276 118.14912415]
[264.73345947 120.56758881]
[273.53051758 108.14289093]
[286.79568481 100.79972076]
[301.87197876 99.94770050]
[315.76605225 105.70233154]
[325.74258423 116.87274170]
[329.86276245 131.20765686]
[344.66650391 133.62611389]
[359.53363037 128.21505737]
[370.84689331 137.90315247]
[385.65063477 140.32162476]
[400.78912354 134.01622009]
[413.65295410 144.18746948]
[411.00891113 160.37205505]
[395.57696533 165.92066956]
[383.23217773 155.12536621]
[368.42843628 152.70690918]
[354.62017822 158.29095459]
[342.24804688 148.42987061]
[327.44430542 146.01139832]
[318.97634888 158.28981018]
[305.96359253 165.70449829]
[290.96051025 166.73825073]
[276.93920898 161.13259888]
[266.70062256 149.94966125]
[262.31500244 135.37133789]
[247.51124573 132.95286560]
[232.70748901 130.53440857]
[217.90373230 128.11595154]
[203.09999084 125.69747925]
[188.29623413 123.27901459]
[178.28692627 130.08757019]
[165.92616272 128.18406677]
[157.93145752 118.05055237]
[143.16880798 115.39269257]
[128.40615845 112.73482513]
[113.64350891 110.07695770]
[107.73675537 114.69867706]
[120.17824554 123.07777405]
[116.05371094 137.49955750]
[101.06320953 138.03327942]
[95.92324829 123.94210052]
[90.01648712 128.56381226]
[89.04553986 143.53236389]
[88.07459259 158.50090027]
[87.10364532 173.46943665]
[93.93143463 187.74150085]
[85.38652802 199.94125366]
[84.41558075 214.90979004]
[83.44463348 229.87834167]
[82.71620178 244.86064148]
[82.23047638 259.85278320]
[81.74474335 274.84490967]
[81.38042450 289.84048462]
[81.13752747 304.83850098]
[80.89463043 319.83654785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[4 191]
[6 190]
[7 189]
[8 188]
[11 187]
[12 186]
[13 185]
[15 183]
[16 182]
[17 181]
[18 180]
[21 127]
[22 126]
[23 125]
[24 124]
[25 123]
[26 122]
[30 120]
[31 119]
[32 118]
[33 117]
[35 113]
[36 112]
[37 111]
[38 110]
[39 109]
[40 108]
[41 107]
[46 103]
[47 102]
[48 101]
[49 100]
[50 99]
[51 98]
[52 97]
[53 96]
[57 92]
[58 91]
[59 90]
[60 89]
[64 88]
[65 87]
[66 86]
[67 85]
[69 83]
[70 82]
[71 81]
[72 80]
[128 174]
[129 173]
[130 172]
[131 171]
[133 168]
[134 167]
[135 166]
[136 165]
[137 164]
[138 163]
[144 157]
[145 156]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
