%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCUGAGGUUGUAACUUUAACAGGUGUAAGUAUUUCUUUCCUCUGUUUCAGCUGGAAGUUUUGAGAGUGAAAUAUUCACAGCCAUUAAGAGACCUCCAAAUUAAUUUCUCAACAUGCUUAUUCUAUAGUUCACAUUCAAUCCAGAGCACUGAAGGAACUGAACAACUGGACACUGUAGACAUCAGAUAGCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[77.34814453 609.30096436]
[84.85147858 595.96087646]
[97.70111084 587.64550781]
[96.27527618 572.71343994]
[94.84943390 557.78137207]
[93.42359161 542.84924316]
[91.99774933 527.91717529]
[90.57190704 512.98510742]
[81.65984344 501.05093384]
[88.05031586 486.57778931]
[86.62447357 471.64572144]
[85.19863892 456.71362305]
[77.57576752 455.00817871]
[70.49773407 451.67272949]
[64.30903625 446.86322021]
[59.31229401 440.80749512]
[55.75343323 433.79452515]
[53.80959702 426.16055298]
[53.58032227 418.27310181]
[55.08248138 410.51309204]
[58.24916458 403.25668335]
[62.93265152 396.85678101]
[68.91129303 391.62612915]
[75.89997864 387.82183838]
[83.56376648 385.63281250]
[84.27749634 370.64978027]
[84.99122620 355.66677856]
[85.70495605 340.68377686]
[86.41868591 325.70074463]
[77.54638672 310.56503296]
[87.61644745 295.15420532]
[88.09236145 280.16174316]
[88.56828308 265.16931152]
[78.22014618 254.51794434]
[78.48921967 239.30668640]
[89.73152161 228.52482605]
[90.20744324 213.53237915]
[90.68335724 198.53993225]
[81.57203674 183.54689026]
[91.39631653 167.97821045]
[91.63430786 152.98010254]
[91.87229919 137.98199463]
[92.11029053 122.98387909]
[92.34827423 107.98577118]
[79.88848114 116.33762360]
[65.54174805 111.95912170]
[59.86869431 98.07328796]
[67.04525757 84.90145874]
[81.78876495 82.13941956]
[93.24687958 91.82103729]
[94.67272186 76.88896179]
[96.09856415 61.95688248]
[97.52440643 47.02480316]
[98.47576141 32.05500412]
[98.95168304 17.06255531]
[99.42759705 2.07010698]
[99.90351868 -12.92234135]
[100.37944031 -27.91478920]
[98.17995453 -31.68665695]
[97.38214111 -35.57130814]
[97.84836578 -39.11232758]
[99.30635834 -41.94542694]
[101.39116669 -43.83451080]
[102.81700897 -58.76659012]
[104.24284363 -73.69866943]
[105.66868591 -88.63074493]
[107.09452820 -103.56282806]
[100.70405579 -118.03598785]
[109.61611938 -129.97015381]
[111.04196167 -144.90223694]
[112.46780396 -159.83430481]
[113.89364624 -174.76638794]
[115.31948853 -189.69847107]
[108.92900848 -204.17163086]
[117.84107971 -216.10578918]
[119.26692200 -231.03787231]
[120.69275665 -245.96995544]
[106.14810181 -255.81715393]
[98.62659454 -271.59127808]
[100.11615753 -288.91394043]
[110.11726379 -303.02725220]
[125.80500793 -310.10052490]
[126.75636292 -325.07034302]
[127.70772552 -340.04013062]
[115.12857056 -346.49542236]
[105.98911285 -357.22637939]
[101.64505005 -370.59020996]
[102.72130585 -384.55764771]
[109.02231598 -397.02087402]
[119.56660461 -406.11181641]
[132.73947144 -410.48193359]
[133.92822266 -425.43475342]
[135.11697388 -440.38757324]
[136.30572510 -455.34039307]
[122.75119019 -462.22103882]
[112.86534119 -473.76824951]
[108.15569305 -488.22119141]
[109.34043121 -503.37588501]
[116.23889923 -516.92138672]
[127.79911804 -526.79199219]
[142.25823975 -531.48266602]
[157.41137695 -530.27795410]
[170.94775391 -523.36169434]
[180.80319214 -511.78851318]
[185.47479248 -497.32321167]
[184.25018311 -482.17169189]
[177.31611633 -468.64440918]
[165.72996521 -458.80419922]
[151.25854492 -454.15164185]
[150.06979370 -439.19882202]
[148.88104248 -424.24600220]
[147.69229126 -409.29318237]
[161.64286804 -401.51016235]
[170.83824158 -388.37619019]
[173.39724731 -372.48986816]
[168.75782776 -357.02133179]
[157.79960632 -345.07986450]
[142.67752075 -339.08877563]
[141.72616577 -324.11895752]
[140.77481079 -309.14916992]
[151.99520874 -303.31692505]
[160.20379639 -293.63623047]
[164.15234375 -281.52450562]
[163.21975708 -268.77267456]
[157.50947571 -257.28054810]
[147.83940125 -248.77362061]
[135.62483215 -244.54411316]
[134.19900513 -229.61203003]
[132.77316284 -214.67994690]
[139.26562500 -201.27484131]
[130.25155640 -188.27262878]
[128.82572937 -173.34054565]
[127.39987946 -158.40846252]
[125.97404480 -143.47639465]
[124.54820251 -128.54431152]
[131.04066467 -115.13919067]
[122.02660370 -102.13698578]
[120.60076904 -87.20491028]
[119.17492676 -72.27282715]
[117.74908447 -57.34074783]
[116.32324219 -42.40867233]
[115.37188721 -27.43886948]
[114.89596558 -12.44642258]
[114.42005157 2.54602599]
[113.94412994 17.53847313]
[113.46820831 32.53092194]
[115.29709625 34.66872787]
[116.38471222 37.66360474]
[116.39891815 41.23515701]
[115.11576080 44.98756027]
[112.45648193 48.45064545]
[111.03063965 63.38272095]
[109.60479736 78.31480408]
[108.17896271 93.24687958]
[107.34638977 108.22375488]
[107.10839844 123.22187042]
[106.87040710 138.21998596]
[106.63242340 153.21809387]
[106.39443207 168.21620178]
[114.79544067 178.01243591]
[114.28234100 190.50608826]
[105.67581177 199.01585388]
[105.19989014 214.00830078]
[104.72396851 229.00074768]
[115.25980377 240.47392273]
[114.56358337 255.67161560]
[103.56072998 265.64523315]
[103.08480835 280.63766479]
[102.60889435 295.63012695]
[110.85341644 305.55841064]
[110.14215851 318.04235840]
[101.40169525 326.41448975]
[100.68796539 341.39749146]
[99.97423553 356.38052368]
[99.26050568 371.36352539]
[98.54677582 386.34652710]
[117.64302063 399.02508545]
[125.25017548 420.51629639]
[118.45688629 442.14849854]
[100.13071442 455.28778076]
[101.55655670 470.21987915]
[102.98239899 485.15194702]
[111.99645233 498.15414429]
[105.50399017 511.55926514]
[106.92983246 526.49133301]
[108.35567474 541.42340088]
[109.78150940 556.35552979]
[111.20735168 571.28759766]
[112.63319397 586.21966553]
[126.82431030 591.95294189]
[136.71669006 603.63195801]
[140.03710938 618.57299805]
[136.02258301 633.34259033]
[125.59561920 644.54693604]
[111.15224457 649.61126709]
[96.01144409 647.37188721]
[83.65247345 638.34338379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[5 187]
[6 186]
[7 185]
[8 184]
[10 182]
[11 181]
[12 180]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[31 169]
[32 168]
[33 167]
[36 164]
[37 163]
[38 162]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[50 154]
[51 153]
[52 152]
[53 151]
[54 146]
[55 145]
[56 144]
[57 143]
[58 142]
[63 141]
[64 140]
[65 139]
[66 138]
[67 137]
[69 135]
[70 134]
[71 133]
[72 132]
[73 131]
[75 129]
[76 128]
[77 127]
[82 120]
[83 119]
[84 118]
[91 112]
[92 111]
[93 110]
[94 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
