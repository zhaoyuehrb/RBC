%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUGUAGUCUUCUCACUUUCUUCUUGCCAUGAGACUGAGAGAGUGCUCCUUGGGACGGAGUUUCAGAGUCAUCAACUGGGCUCAUGAGAACCACAAGAAACCUACGAAGGCACUGGGACAGAGCCUGGCUGCUGGUCAAAGGCAACAGAACUGGACCAAGAAAAUUCAUAACUUUUUGCUUUUGUUUCUACUAAG\
) } def
/len { sequence length } bind def

/coor [
[46.57978821 186.17790222]
[40.62395477 194.85850525]
[31.66831398 200.23681641]
[21.36778641 201.39730835]
[11.59358025 198.19676208]
[0.53217614 208.32817078]
[-10.52922821 218.45956421]
[-15.47986603 233.48626709]
[-30.09127998 236.37692261]
[-41.15268326 246.50833130]
[-52.21408844 256.63973999]
[-56.43527603 264.75363159]
[-63.53360367 266.84277344]
[-74.75516510 276.79647827]
[-85.97672272 286.75021362]
[-97.19828033 296.70394897]
[-102.38790894 311.64978027]
[-117.04356384 314.30706787]
[-128.26512146 324.26077271]
[-139.48667908 334.21450806]
[-150.70823669 344.16824341]
[-147.54826355 359.19854736]
[-152.34205627 373.79016113]
[-163.80010986 384.01800537]
[-178.84024048 387.13082886]
[-193.41676331 382.29132080]
[-203.60864258 370.80130005]
[-206.67431641 355.75146484]
[-201.78913879 341.19018555]
[-190.26721191 331.03436279]
[-175.20785522 328.01589966]
[-160.66195679 332.94668579]
[-149.44039917 322.99295044]
[-138.21884155 313.03921509]
[-126.99728394 303.08551025]
[-122.61029816 288.85162354]
[-107.15200043 285.48239136]
[-95.93044281 275.52865601]
[-84.70888519 265.57492065]
[-73.48732758 255.62120056]
[-62.34549332 245.57832336]
[-51.28408813 235.44691467]
[-40.22268295 225.31552124]
[-36.06323242 211.01347351]
[-20.66063118 207.39816284]
[-9.59922695 197.26676941]
[1.46217704 187.13536072]
[0.87301755 167.67286682]
[14.99205303 153.82537842]
[35.04835510 154.82247925]
[45.61258698 144.17367554]
[56.17681503 133.52487183]
[66.74105072 122.87606812]
[77.30528259 112.22726440]
[74.93034363 106.00572205]
[74.22838593 99.38340759]
[75.24624634 92.80223846]
[77.91599274 86.70139313]
[67.87310791 75.55955505]
[55.04895401 74.11081696]
[46.91357422 64.61427307]
[47.41794968 52.52098846]
[37.55401611 41.22042084]
[27.69008446 29.91985321]
[17.82615089 18.61928558]
[7.96221781 7.31871843]
[-1.99150658 -3.90283990]
[-12.03438950 -15.04467487]
[-22.07727242 -26.18651009]
[-32.12015533 -37.32834625]
[-42.16304016 -48.47018051]
[-57.57951736 -46.70614243]
[-71.07199097 -54.36987686]
[-77.45232391 -68.51451874]
[-74.26715851 -83.70117188]
[-62.74124146 -94.09024811]
[-47.30653381 -95.68694305]
[-33.89799118 -87.87729645]
[-27.67147446 -73.66426849]
[-31.02120399 -58.51306534]
[-20.97832108 -47.37123108]
[-10.93543720 -36.22939301]
[-0.89255440 -25.08755875]
[9.15032864 -13.94572258]
[15.97174931 -11.07886505]
[19.26278496 -2.54521465]
[29.12671852 8.75535297]
[38.99065018 20.05591965]
[48.85458374 31.35648727]
[58.71851730 42.65705490]
[75.60169220 47.42704391]
[79.01494598 65.51667023]
[89.05783081 76.65850830]
[98.87216187 74.24569702]
[108.85984039 75.79133606]
[117.48576355 81.05786896]
[123.42410278 89.23581696]
[138.28651428 87.20877075]
[153.14891052 85.18173218]
[168.01132202 83.15468597]
[182.87371826 81.12763977]
[197.73612976 79.10060120]
[201.09054565 76.30238342]
[204.78984070 74.86860657]
[208.36048889 74.73944092]
[211.39752197 75.70676422]
[213.60714722 77.44954681]
[228.56854248 76.37403107]
[243.52993774 75.29852295]
[258.49133301 74.22301483]
[273.45272827 73.14750671]
[288.41412354 72.07199097]
[303.37551880 70.99648285]
[306.02230835 49.45672226]
[331.81317139 34.21477509]
[345.94009399 29.17198753]
[360.06704712 24.12919807]
[366.88955688 10.12595558]
[381.28811646 5.21309376]
[394.59603882 11.80363274]
[408.72296143 6.76084423]
[422.84991455 1.71805525]
[427.18179321 -11.04266167]
[437.91769409 -18.86140823]
[451.00274658 -19.06250381]
[461.65216064 -11.79666615]
[475.85772705 -16.61353874]
[490.06329346 -21.43041229]
[496.46630859 -32.63572311]
[508.40625000 -36.35142899]
[519.31384277 -31.10483742]
[533.59442139 -35.69456863]
[547.87493896 -40.28429794]
[562.15551758 -44.87403107]
[567.89172363 -59.42153168]
[581.66143799 -66.83291626]
[596.96307373 -63.60874557]
[606.57159424 -51.27138519]
[605.95013428 -35.64615250]
[595.39221191 -24.11080742]
[579.88293457 -22.11198616]
[566.74523926 -30.59347153]
[552.46466064 -26.00374031]
[538.18414307 -21.41400909]
[523.90356445 -16.82427788]
[512.84466553 -3.20463586]
[494.88015747 -7.22485876]
[480.67459106 -2.40798593]
[466.46905518 2.40888691]
[459.68215942 17.79075241]
[443.55471802 23.62487984]
[427.89270020 15.84498978]
[413.76574707 20.88777924]
[399.63882446 25.93056679]
[393.51242065 39.45842743]
[379.25753784 44.77377319]
[365.10983276 38.25613403]
[350.98287964 43.29891968]
[336.85595703 48.34170914]
[336.13943481 55.80740356]
[333.98983765 78.20448303]
[346.89974976 85.84216309]
[363.29479980 85.47535706]
[371.57757568 99.62907410]
[363.22747803 113.74317932]
[346.83438110 113.29829407]
[339.26208496 98.75208282]
[326.35217285 91.11439514]
[335.44494629 103.04424286]
[337.03305054 117.95993805]
[330.65600586 131.53688049]
[318.16275024 139.83860779]
[303.17553711 140.45814514]
[290.03973389 133.21586609]
[282.56387329 120.21157837]
[282.91546631 105.21569824]
[290.99261475 92.57608795]
[304.45101929 85.95787811]
[289.48962402 87.03338623]
[274.52822876 88.10889435]
[259.56683350 89.18441010]
[244.60545349 90.25991821]
[229.64405823 91.33542633]
[214.68266296 92.41093445]
[199.76316833 93.96300507]
[184.90077209 95.99004364]
[170.03836060 98.01708984]
[155.17596436 100.04413605]
[140.31355286 102.07117462]
[125.45114899 104.09822083]
[111.50150299 123.07101440]
[87.95408630 122.79149628]
[77.38985443 133.44029236]
[66.82562256 144.08909607]
[56.26139069 154.73789978]
[45.69715881 165.38670349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 47]
[6 46]
[7 45]
[9 43]
[10 42]
[11 41]
[13 40]
[14 39]
[15 38]
[16 37]
[18 35]
[19 34]
[20 33]
[21 32]
[50 196]
[51 195]
[52 194]
[53 193]
[54 192]
[58 93]
[59 92]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[97 190]
[98 189]
[99 188]
[100 187]
[101 186]
[102 185]
[107 184]
[108 183]
[109 182]
[110 181]
[111 180]
[112 179]
[113 178]
[115 159]
[116 158]
[117 157]
[120 154]
[121 153]
[122 152]
[126 149]
[127 148]
[128 147]
[131 145]
[132 144]
[133 143]
[134 142]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
