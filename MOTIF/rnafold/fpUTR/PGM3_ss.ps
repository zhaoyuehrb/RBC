%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCGCGGACCGCCCCCCCCCAACACCGCGGUGGCCUUUUCGCUUGGGCCGCAUUCCAGGGCUCCGGACGUUUACGAUUCACUGGCCUCUGCCCCGAGGGACCCAGGAUAAGGUUGAGAGUGGACCAAUUUAAGUGUGCCCGGCGUCCAGGAUAGUCCUGGAGCUAAA\
) } def
/len { sequence length } bind def

/coor [
[125.68777466 158.13090515]
[111.04362488 154.88299561]
[99.76725006 144.99142456]
[94.63917542 130.89521790]
[96.92340088 116.07135773]
[87.66422272 127.87253571]
[78.40505219 139.67370605]
[69.14588165 151.47488403]
[59.88670731 163.27606201]
[68.13697815 175.97297668]
[71.81511688 190.66140747]
[70.52216339 205.74804688]
[64.39835358 219.59643555]
[54.10795212 230.70437622]
[40.76719284 237.86698914]
[25.82317924 240.30729675]
[10.89692307 237.76060486]
[-2.39248586 230.50317383]
[-12.60351086 219.32221985]
[-18.62853813 205.43058777]
[-19.81401443 190.33511353]
[-16.03135300 175.67324829]
[-7.69086409 163.03540039]
[4.30273581 153.79244995]
[18.64847183 148.94697571]
[33.79022598 149.02459717]
[48.08553314 154.01687622]
[57.34470367 142.21571350]
[66.60388184 130.41453552]
[75.86305237 118.61335754]
[85.12222290 106.81218719]
[78.56050110 93.32353210]
[63.56050110 93.32353210]
[48.56050110 93.32353210]
[33.56050110 93.32353210]
[18.56050301 93.32353210]
[3.56050301 93.32353210]
[-11.43949699 93.32353210]
[-20.45091438 105.95578766]
[-35.17700577 110.84678650]
[-49.95529175 106.11582947]
[-59.10321426 93.58206940]
[-59.10321426 78.06499481]
[-49.95529175 65.53123474]
[-35.17700577 60.80027771]
[-20.45091438 65.69126892]
[-11.43949699 78.32353210]
[3.56050301 78.32353210]
[18.56050301 78.32353210]
[33.56050110 78.32353210]
[48.56050110 78.32353210]
[63.56050110 78.32353210]
[78.56050110 78.32353210]
[94.90882111 79.28437042]
[103.57412720 88.36028290]
[115.37530518 79.10111237]
[127.17647552 69.84193420]
[138.97764587 60.58276367]
[150.77882385 51.32358932]
[162.58000183 42.06441498]
[174.38117981 32.80524445]
[186.18234253 23.54607010]
[197.98352051 14.28689575]
[209.61158752 4.81123066]
[221.06256104 -4.87769032]
[232.51353455 -14.56661129]
[243.87449646 -24.36092377]
[255.14447021 -34.25979233]
[266.41445923 -44.15866089]
[277.68441772 -54.05752945]
[288.95440674 -63.95639420]
[300.22439575 -73.85526276]
[311.49435425 -83.75413513]
[322.48565674 -93.96156311]
[333.18978882 -104.46970367]
[343.89395142 -114.97785187]
[354.59811401 -125.48600006]
[350.27532959 -150.42276001]
[364.04171753 -171.41952515]
[388.24276733 -177.30313110]
[393.40200806 -191.38795471]
[393.41937256 -200.56254578]
[398.78890991 -205.68389893]
[404.20751953 -219.67097473]
[409.62615967 -233.65806580]
[415.04476929 -247.64514160]
[420.07363892 -261.77703857]
[424.70889282 -276.04287720]
[429.34414673 -290.30874634]
[433.97943115 -304.57458496]
[426.58200073 -318.54074097]
[431.30661011 -333.62231445]
[445.35021973 -340.87167358]
[460.38098145 -335.98785400]
[467.48144531 -321.86840820]
[462.43899536 -306.89010620]
[448.24526978 -299.93933105]
[443.61001587 -285.67349243]
[438.97476196 -271.40762329]
[434.33950806 -257.14178467]
[435.63500977 -253.82264709]
[435.36306763 -249.70498657]
[433.16348267 -245.54362488]
[429.03186035 -242.22651672]
[423.61325073 -228.23944092]
[418.19461060 -214.25234985]
[412.77600098 -200.26527405]
[407.48684692 -186.22871399]
[402.32760620 -172.14389038]
[405.68399048 -169.66130066]
[408.70846558 -166.78364563]
[411.35491943 -163.55488586]
[413.58285522 -160.02432251]
[428.01022339 -164.12927246]
[442.43762207 -168.23420715]
[456.86499023 -172.33915710]
[463.08914185 -186.68469238]
[477.10125732 -193.62692261]
[492.28524780 -189.88793945]
[501.47174072 -177.23320007]
[500.32308960 -161.63784790]
[489.38171387 -150.46556091]
[473.81375122 -148.99154663]
[460.96994019 -157.91177368]
[446.54257202 -153.80682373]
[432.11517334 -149.70188904]
[417.68780518 -145.59693909]
[417.21011353 -137.36174011]
[414.74652100 -129.46582031]
[410.43319702 -122.38208008]
[404.51754761 -116.53749084]
[397.34381104 -112.28739166]
[389.33328247 -109.89385986]
[380.95932007 -109.50962830]
[372.71957397 -111.16831970]
[365.10626221 -114.78184509]
[354.40209961 -104.27369690]
[343.69793701 -93.76555634]
[332.99380493 -83.25740814]
[332.60848999 -79.71529388]
[330.46414185 -76.18955994]
[326.59020996 -73.51602936]
[321.39321899 -72.48415375]
[310.12326050 -62.58528519]
[298.85327148 -52.68641663]
[287.58328247 -42.78754807]
[276.31332397 -32.88867950]
[265.04333496 -22.98981285]
[253.77336121 -13.09094524]
[250.81130981 -6.28753328]
[242.20245361 -3.11563683]
[230.75148010 6.57328415]
[219.30050659 16.26220512]
[218.01806641 20.89975166]
[213.78533936 24.76568604]
[207.24269104 26.08806992]
[195.44151306 35.34724426]
[183.64035034 44.60641479]
[171.83917236 53.86558914]
[160.03799438 63.12476349]
[148.23683167 72.38393402]
[136.43565369 81.64311218]
[124.63447571 90.90228271]
[112.83330536 100.16145325]
[127.65837860 97.87734985]
[141.75436401 103.00599670]
[151.64549255 114.28277588]
[154.89280701 128.92704773]
[150.69557190 143.32786560]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[37 48]
[38 47]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 153]
[65 152]
[66 151]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 139]
[75 138]
[76 137]
[77 136]
[80 109]
[81 108]
[83 107]
[84 106]
[85 105]
[86 104]
[87 100]
[88 99]
[89 98]
[90 97]
[113 127]
[114 126]
[115 125]
[116 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
