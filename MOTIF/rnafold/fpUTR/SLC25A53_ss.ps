%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCAAAGAGGAUUGUGGGAGCUCCGUUGUGCGUCGCUUAAGUGAGGGCGGCGGAUGGGCGAAGGUCCGGUGACUGCGACUGUCGCUGCUUUCUGAGGCCACAGGAAAGGGGCCGUCGGUCGCCGCCAUGACAGCGAGCGAGGCGGAGUUUCUUCCAUCUGCACCCAGUUGUCUUCAGC\
) } def
/len { sequence length } bind def

/coor [
[200.01330566 842.47015381]
[196.67549133 827.84625244]
[183.96652222 820.16400146]
[180.37316895 805.38079834]
[188.51722717 792.10253906]
[185.17941284 777.47863770]
[181.84159851 762.85467529]
[178.32441711 759.58905029]
[176.83735657 754.07025146]
[178.65020752 747.66857910]
[175.81913757 732.93817139]
[172.86105347 718.23272705]
[169.77615356 703.55340576]
[166.69125366 688.87402344]
[164.39164734 687.22827148]
[162.61422729 684.56066895]
[161.75592041 681.06872559]
[162.13362122 677.09143066]
[163.93701172 673.07684326]
[161.87220764 658.21966553]
[159.80740356 643.36242676]
[157.74259949 628.50524902]
[155.67779541 613.64801025]
[153.61299133 598.79083252]
[151.54820251 583.93359375]
[149.48339844 569.07641602]
[147.41859436 554.21923828]
[145.35379028 539.36199951]
[143.28898621 524.50482178]
[141.22418213 509.64758301]
[131.80857849 498.10653687]
[137.57258606 483.37268066]
[135.50778198 468.51547241]
[133.44297791 453.65826416]
[129.39750671 447.44976807]
[131.47305298 438.52703857]
[129.66500854 423.63641357]
[127.85695648 408.74575806]
[126.04890442 393.85513306]
[124.24085236 378.96450806]
[111.15547180 371.89974976]
[104.66242218 358.32388306]
[107.44087219 343.35278320]
[118.63134766 332.76602173]
[116.82329559 317.87539673]
[115.01524353 302.98477173]
[103.16858673 294.02975464]
[101.12284851 278.95428467]
[110.59601593 266.58914185]
[108.78796387 251.69850159]
[106.97991180 236.80787659]
[105.17186737 221.91723633]
[103.36381531 207.02661133]
[101.55576324 192.13597107]
[92.34077454 180.43412781]
[98.35823059 165.80194092]
[96.55018616 150.91131592]
[94.74213409 136.02067566]
[92.93408203 121.13004303]
[91.12602997 106.23941040]
[86.04983521 92.12444305]
[77.96003723 79.49292755]
[69.87023926 66.86141968]
[61.78043365 54.22990417]
[47.82213974 46.78164673]
[47.47365189 31.89112091]
[39.38385391 19.25960732]
[31.29405212 6.62809372]
[23.20425224 -6.00341940]
[15.00573444 -18.56464195]
[6.69911098 -31.05463791]
[-1.60751259 -43.54463577]
[-15.41341019 -53.38503647]
[-9.77942753 -69.37548828]
[7.14575386 -68.38828278]
[10.88248348 -51.85125732]
[19.18910789 -39.36126328]
[27.49573135 -26.87126541]
[33.83433533 -23.03288269]
[35.83576584 -14.09321976]
[43.92556381 -1.46170676]
[52.01536560 11.16980648]
[60.10516739 23.80131912]
[73.48482513 30.34608650]
[74.41194916 46.14010239]
[82.50174713 58.77161789]
[90.59155273 71.40312958]
[98.68135071 84.03464508]
[106.13419342 83.19490814]
[121.03987122 81.51544189]
[128.49272156 80.67571259]
[133.56890869 66.56074524]
[138.64511108 52.44578171]
[143.72129822 38.33081436]
[148.79750061 24.21585083]
[153.87370300 10.10088539]
[144.40232849 -2.07683396]
[143.04104614 -17.44402122]
[150.22422791 -31.09706306]
[163.65972900 -38.67932510]
[179.06034851 -37.77133179]
[191.51181030 -28.66282082]
[197.04087830 -14.26028919]
[193.88325500 0.84047216]
[183.04652405 11.82086372]
[167.98866272 15.17708206]
[162.91246033 29.29204559]
[157.83627319 43.40701294]
[152.76007080 57.52197647]
[147.68388367 71.63694000]
[142.60768127 85.75190735]
[135.43984985 97.03992462]
[125.88128662 104.07190704]
[115.53680420 106.48536682]
[106.01666260 104.43135834]
[107.82471466 119.32199097]
[109.63276672 134.21263123]
[111.44081879 149.10325623]
[113.24886322 163.99389648]
[122.59317780 176.76081848]
[116.44639587 190.32792664]
[118.25444794 205.21855164]
[120.06250000 220.10919189]
[121.87054443 234.99981689]
[123.67859650 249.89045715]
[125.48664856 264.78109741]
[137.64372253 274.51983643]
[139.26521301 289.64682007]
[129.90588379 301.17669678]
[131.71392822 316.06735229]
[133.52197266 330.95797729]
[146.92085266 338.55905151]
[153.20138550 352.43017578]
[150.14593506 367.16546631]
[139.13148499 377.15646362]
[140.93954468 392.04708862]
[142.74758911 406.93771362]
[144.55563354 421.82833862]
[146.36369324 436.71899414]
[148.30018616 451.59344482]
[150.36499023 466.45065308]
[152.42979431 481.30786133]
[161.99307251 493.91162109]
[156.08139038 507.58279419]
[158.14619446 522.44000244]
[160.21099854 537.29718018]
[162.27580261 552.15441895]
[164.34060669 567.01159668]
[166.40539551 581.86883545]
[168.47019958 596.72601318]
[170.53500366 611.58325195]
[172.59980774 626.44042969]
[174.66461182 641.29766846]
[176.72941589 656.15484619]
[178.79421997 671.01208496]
[181.37060547 685.78912354]
[184.45550537 700.46850586]
[187.54040527 715.14782715]
[192.37951660 722.92645264]
[190.54956055 730.10711670]
[193.38061523 744.83752441]
[196.46551514 759.51690674]
[199.80332947 774.14080811]
[203.14114380 788.76470947]
[216.23989868 797.19445801]
[219.41659546 812.07275391]
[211.29940796 824.50842285]
[214.63722229 839.13238525]
[225.25137329 850.86480713]
[220.54014587 864.99468994]
[223.87796021 879.61865234]
[227.21577454 894.24255371]
[230.55358887 908.86645508]
[242.09840393 920.51330566]
[237.52389526 936.26153564]
[221.53590393 939.91064453]
[210.58151245 927.70684814]
[215.92965698 912.20428467]
[212.59184265 897.58038330]
[209.25404358 882.95642090]
[205.91622925 868.33251953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[5 164]
[6 163]
[7 162]
[10 161]
[11 160]
[12 158]
[13 157]
[14 156]
[19 155]
[20 154]
[21 153]
[22 152]
[23 151]
[24 150]
[25 149]
[26 148]
[27 147]
[28 146]
[29 145]
[30 144]
[32 142]
[33 141]
[34 140]
[36 139]
[37 138]
[38 137]
[39 136]
[40 135]
[44 131]
[45 130]
[46 129]
[49 126]
[50 125]
[51 124]
[52 123]
[53 122]
[54 121]
[56 119]
[57 118]
[58 117]
[59 116]
[60 115]
[61 88]
[62 87]
[63 86]
[64 85]
[66 83]
[67 82]
[68 81]
[69 80]
[70 78]
[71 77]
[72 76]
[91 111]
[92 110]
[93 109]
[94 108]
[95 107]
[96 106]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
