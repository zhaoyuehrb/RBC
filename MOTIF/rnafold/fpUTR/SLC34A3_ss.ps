%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAGACAAGGCCUAGGGGCCUUGGGGCCAGGAGGGUACCCCCGUGAGGGCCUGGGCUCCUGGGUAAACAUUAAUGGGCUCAGUACCCAGCAGGUCAUGUGCGCGAUCAGGGGAUCUUUGACCUGCAACUGCUCCCGCCCCGUGUCUCCUCCCUGCAGGUGCCCCCUCACCACCCACACAGCAGAUCUAGACCUGGGCCUGGGUCUGUCCCUGCCCGAAAUCC\
) } def
/len { sequence length } bind def

/coor [
[186.80451965 185.55065918]
[187.84953308 175.77348328]
[191.10711670 166.70114136]
[178.44219971 158.66374207]
[165.77728271 150.62634277]
[153.11236572 142.58894348]
[140.44744873 134.55152893]
[127.78252411 126.51412964]
[115.11760712 118.47673035]
[99.94207001 126.21957397]
[81.81318665 122.02857971]
[69.65968323 105.91975403]
[56.36662674 112.86919403]
[43.07357407 119.81863403]
[29.78051949 126.76807404]
[16.48746490 133.71751404]
[3.19441128 140.66696167]
[-10.09864235 147.61639404]
[-23.39169693 154.56584167]
[-36.68474960 161.51527405]
[-49.97780228 168.46472168]
[-63.27085876 175.41415405]
[-76.56391144 182.36360168]
[-80.41348267 187.71867371]
[-85.60811615 189.99208069]
[-90.32656860 189.31561279]
[-103.80847931 195.89118958]
[-117.29039001 202.46675110]
[-130.77230835 209.04232788]
[-144.25421143 215.61788940]
[-145.23944092 232.12786865]
[-154.36647034 245.80812073]
[-169.06369019 252.97491455]
[-185.27548218 251.75601196]
[-198.58119202 242.57881165]
[-211.96998596 249.34197998]
[-225.35876465 256.10513306]
[-233.88069153 270.11618042]
[-250.26713562 269.47103882]
[-257.66113281 254.83338928]
[-248.45639038 241.26118469]
[-232.12193298 242.71635437]
[-218.73313904 235.95320129]
[-205.34436035 229.19003296]
[-205.48345947 215.53901672]
[-199.70152283 203.09919739]
[-189.07444763 194.32055664]
[-175.63842773 190.95901489]
[-161.99984741 193.72535706]
[-150.82978821 202.13597107]
[-137.34786987 195.56040955]
[-123.86595917 188.98484802]
[-110.38404846 182.40927124]
[-96.90213776 175.83370972]
[-83.51335144 169.07054138]
[-70.22029877 162.12110901]
[-56.92724228 155.17166138]
[-43.63418961 148.22222900]
[-30.34113693 141.27278137]
[-17.04808235 134.32334900]
[-3.75502944 127.37390137]
[9.53802395 120.42446136]
[22.83107758 113.47502136]
[36.12413025 106.52558136]
[49.41718674 99.57614136]
[62.71023941 92.62670135]
[49.15557480 99.05095673]
[34.18187332 98.16312408]
[21.48134232 90.18211365]
[14.18567467 77.07588959]
[14.09383202 62.07616806]
[21.22846031 48.88158417]
[33.83031082 40.74564743]
[48.79201508 39.67451859]
[62.42433167 45.93231583]
[71.36579895 57.97599030]
[73.41178131 72.83460999]
[71.94804382 57.90619659]
[70.48429871 42.97778320]
[69.02055359 28.04937363]
[55.29972839 17.18994141]
[53.71427155 0.10304057]
[64.75929260 -12.58551598]
[63.08726120 -27.49203491]
[61.41522598 -42.39855194]
[59.74319077 -57.30507278]
[47.28970337 -63.19944382]
[39.43510437 -74.38729095]
[38.14204407 -87.88706970]
[43.64163971 -100.16498566]
[54.40087891 -108.06001282]
[52.93713760 -122.98842621]
[51.47339249 -137.91683960]
[50.00964737 -152.84524536]
[48.54590607 -167.77366638]
[47.08216095 -182.70207214]
[45.61841965 -197.63047791]
[44.15467453 -212.55889893]
[35.83983612 -215.70730591]
[29.02739906 -221.35266113]
[24.43467712 -228.86399841]
[22.53336525 -237.41595459]
[23.50121689 -246.07940674]
[27.20582771 -253.92245483]
[33.22192383 -260.11059570]
[40.88002396 -263.99554443]
[40.46119690 -278.98971558]
[40.04237366 -293.98385620]
[39.62355042 -308.97802734]
[30.57444954 -322.65447998]
[38.13520432 -337.20669556]
[54.52795792 -337.66458130]
[62.88925171 -323.55712891]
[54.61770248 -309.39685059]
[55.03652573 -294.40267944]
[55.45534897 -279.40853882]
[55.87417603 -264.41436768]
[72.59249115 -251.29606628]
[74.14076996 -229.81588745]
[59.08308792 -214.02262878]
[60.54682922 -199.09422302]
[62.01057434 -184.16581726]
[63.47431564 -169.23739624]
[64.93805695 -154.30899048]
[66.40180206 -139.38058472]
[67.86554718 -124.45217133]
[69.32929230 -109.52375793]
[83.74993896 -101.67046356]
[90.71450043 -86.61681366]
[87.29645538 -70.21627808]
[74.64971161 -58.97710419]
[76.32174683 -44.07058716]
[77.99378204 -29.16406822]
[79.66580963 -14.25754929]
[90.75722504 -7.71090269]
[96.13601685 4.20528078]
[93.63587952 17.23603249]
[83.94896698 26.58563042]
[85.41270447 41.51404190]
[86.87644958 56.44245148]
[88.34019470 71.37086487]
[109.73433685 73.14369965]
[123.15201569 87.69335175]
[123.15501404 105.81181335]
[135.81993103 113.84921265]
[148.48484802 121.88661194]
[161.14976501 129.92401123]
[173.81468201 137.96142578]
[186.47959900 145.99882507]
[199.14451599 154.03622437]
[218.45634460 140.45648193]
[243.21939087 139.67803955]
[265.34072876 153.23019409]
[276.89715576 177.75375366]
[291.89385986 178.06788635]
[306.89056396 178.38203430]
[321.88729858 178.69616699]
[331.71386719 170.35166931]
[344.19195557 170.91624451]
[352.66262817 179.54299927]
[367.65350342 180.06648254]
[382.64434814 180.58998108]
[388.59082031 166.62559509]
[399.18301392 155.75502014]
[412.98849487 149.44842529]
[428.14016724 148.55871582]
[442.58886719 153.20622253]
[454.38055420 162.76240540]
[461.92047119 175.93487549]
[464.18893433 190.94215393]
[460.87915039 205.75463867]
[452.43872070 218.36904907]
[440.00915527 227.07942200]
[425.27145386 230.70771790]
[410.21878052 228.76324463]
[396.88684082 221.50898743]
[387.07873535 209.92601013]
[382.12084961 195.58084106]
[367.13000488 195.05734253]
[352.13912964 194.53385925]
[337.10461426 203.59371948]
[321.57315063 193.69287109]
[306.57644653 193.37873840]
[291.57971191 193.06460571]
[276.58300781 192.75045776]
[272.74270630 199.19265747]
[285.75292969 206.65815735]
[298.76318359 214.12364197]
[313.28829956 217.86807251]
[314.50393677 232.81874084]
[300.77450562 238.86051941]
[290.57205200 227.86442566]
[277.81704712 219.97074890]
[265.06204224 212.07705688]
[261.22174072 218.51925659]
[268.63085938 231.56169128]
[276.03997803 244.60411072]
[283.44912720 257.64654541]
[290.85824585 270.68896484]
[303.05746460 274.85684204]
[308.96182251 285.86413574]
[305.88916016 297.55737305]
[313.11544800 310.70196533]
[320.34176636 323.84655762]
[335.28463745 329.68518066]
[339.89874268 345.05041504]
[330.64450073 358.15530396]
[314.62100220 358.94696045]
[304.12008667 346.81805420]
[307.19714355 331.07287598]
[299.97085571 317.92825317]
[292.74453735 304.78366089]
[277.26416016 296.50866699]
[277.81582642 278.09808350]
[270.40667725 265.05566406]
[262.99755859 252.01324463]
[255.58843994 238.97080994]
[248.17930603 225.92839050]
[237.08952332 228.48640442]
[225.90280151 228.36193848]
[215.24801636 225.65272522]
[205.70289612 220.59930420]
[197.76286316 213.56657410]
[191.81532288 205.01890564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[12 66]
[13 65]
[14 64]
[15 63]
[16 62]
[17 61]
[18 60]
[19 59]
[20 58]
[21 57]
[22 56]
[23 55]
[26 54]
[27 53]
[28 52]
[29 51]
[30 50]
[35 44]
[36 43]
[37 42]
[77 141]
[78 140]
[79 139]
[80 138]
[83 134]
[84 133]
[85 132]
[86 131]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[106 117]
[107 116]
[108 115]
[109 114]
[154 185]
[155 184]
[156 183]
[157 182]
[160 180]
[161 179]
[162 178]
[195 218]
[196 217]
[197 216]
[198 215]
[199 214]
[202 212]
[203 211]
[204 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
