%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC152)
} def

/sequence { (\
AUUCAGGGGUGUACCAGGCCCCAGAGGCAGCGGAAAGGGAGACUGUGGGGAACUAGGAGCAACAGCAGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.031469692 ubox
1 12 0.019713610 ubox
2 8 0.016230045 ubox
2 9 0.035482118 ubox
2 11 0.020289310 ubox
2 17 0.007126781 ubox
2 18 0.009530840 ubox
2 25 0.003657943 ubox
2 26 0.056301441 ubox
2 51 0.003195150 ubox
2 52 0.005563310 ubox
2 56 0.003791453 ubox
2 57 0.003867540 ubox
2 58 0.061429753 ubox
2 59 0.022544636 ubox
2 62 0.006444003 ubox
2 65 0.015224046 ubox
2 68 0.047496615 ubox
2 69 0.067307389 ubox
3 7 0.016254087 ubox
3 8 0.032358798 ubox
3 9 0.032155723 ubox
3 16 0.007982042 ubox
3 17 0.010248031 ubox
3 18 0.096001418 ubox
3 24 0.003290355 ubox
3 25 0.074006867 ubox
3 27 0.004891504 ubox
3 51 0.006492790 ubox
3 55 0.004353205 ubox
3 56 0.005321865 ubox
3 57 0.066254871 ubox
3 58 0.048562174 ubox
3 61 0.004410303 ubox
3 64 0.018250959 ubox
3 67 0.055207754 ubox
3 68 0.078513073 ubox
3 69 0.258107479 ubox
4 8 0.048471789 ubox
4 11 0.057674967 ubox
4 17 0.125571961 ubox
4 24 0.075436888 ubox
4 26 0.006925163 ubox
4 50 0.005880879 ubox
4 56 0.068081502 ubox
4 57 0.050325971 ubox
4 68 0.335575685 ubox
5 10 0.056547646 ubox
5 54 0.039302844 ubox
6 15 0.238995116 ubox
6 22 0.083526620 ubox
6 53 0.039573369 ubox
6 54 0.015674598 ubox
7 14 0.239079935 ubox
7 15 0.173961497 ubox
7 21 0.083664724 ubox
7 53 0.016088606 ubox
7 54 0.013154597 ubox
8 14 0.174332257 ubox
8 15 0.058141587 ubox
8 20 0.083671469 ubox
8 53 0.013261184 ubox
8 54 0.008142732 ubox
9 14 0.057939943 ubox
9 19 0.083673798 ubox
9 53 0.008392034 ubox
9 60 0.085954987 ubox
9 63 0.616199983 ubox
9 66 0.096083581 ubox
9 70 0.015002897 ubox
10 16 0.004643980 ubox
10 18 0.083246617 ubox
10 52 0.007735043 ubox
10 59 0.085503656 ubox
10 61 0.745284515 ubox
10 62 0.443101026 ubox
10 64 0.054651698 ubox
10 65 0.076044131 ubox
10 67 0.016705138 ubox
10 69 0.013269119 ubox
11 15 0.006502273 ubox
11 60 0.906777064 ubox
11 63 0.062050043 ubox
11 66 0.018374741 ubox
11 70 0.011410272 ubox
12 18 0.003164347 ubox
12 55 0.003180409 ubox
12 59 0.892692575 ubox
12 62 0.059733613 ubox
12 65 0.017943999 ubox
12 69 0.011274934 ubox
14 48 0.003365130 ubox
14 57 0.944286041 ubox
14 69 0.022181778 ubox
15 47 0.003346179 ubox
15 56 0.946451872 ubox
15 68 0.022263033 ubox
16 54 0.927547107 ubox
17 53 0.934522861 ubox
17 54 0.165540380 ubox
18 53 0.178259159 ubox
18 60 0.003620996 ubox
18 70 0.003976510 ubox
19 49 0.004756960 ubox
19 50 0.994363516 ubox
19 69 0.003489743 ubox
20 48 0.004550478 ubox
20 49 0.996003330 ubox
20 50 0.029771200 ubox
21 47 0.004315221 ubox
21 48 0.996107842 ubox
21 49 0.026388073 ubox
22 45 0.003879461 ubox
22 47 0.996194124 ubox
22 48 0.022401329 ubox
23 44 0.004444063 ubox
23 46 0.992602104 ubox
23 54 0.005382677 ubox
24 43 0.004953635 ubox
24 53 0.005608194 ubox
25 44 0.988456831 ubox
25 54 0.007218245 ubox
26 43 0.991536415 ubox
26 44 0.025032692 ubox
26 53 0.007792091 ubox
26 54 0.004315340 ubox
27 43 0.029809426 ubox
27 46 0.073332391 ubox
27 53 0.004581297 ubox
27 60 0.006977093 ubox
27 66 0.012230949 ubox
27 70 0.024821819 ubox
28 45 0.087693207 ubox
28 47 0.014061326 ubox
28 59 0.006970441 ubox
28 65 0.012215866 ubox
28 69 0.025100890 ubox
29 44 0.087614099 ubox
29 46 0.011505052 ubox
30 43 0.087250028 ubox
30 46 0.031971114 ubox
30 60 0.017316836 ubox
30 66 0.025503926 ubox
30 70 0.016003959 ubox
31 45 0.038571346 ubox
31 47 0.003464217 ubox
31 59 0.017330720 ubox
31 65 0.025463197 ubox
31 69 0.016131980 ubox
32 44 0.038496517 ubox
33 43 0.038373532 ubox
36 44 0.018940340 ubox
36 54 0.010272449 ubox
37 43 0.020768768 ubox
37 44 0.013782992 ubox
37 53 0.010617902 ubox
37 54 0.008561561 ubox
38 43 0.016340595 ubox
38 53 0.008887594 ubox
38 54 0.006579399 ubox
39 53 0.006648700 ubox
40 54 0.006008844 ubox
41 53 0.006059927 ubox
43 49 0.009303442 ubox
43 50 0.010107085 ubox
43 56 0.021923822 ubox
43 57 0.016321409 ubox
43 59 0.009779666 ubox
43 65 0.030011166 ubox
43 68 0.039792982 ubox
44 48 0.008389289 ubox
44 49 0.009955013 ubox
44 55 0.021189408 ubox
44 56 0.015129703 ubox
44 58 0.009858932 ubox
44 61 0.005382225 ubox
44 64 0.030381796 ubox
44 67 0.039912929 ubox
45 53 0.020096722 ubox
45 54 0.011861438 ubox
45 60 0.006366795 ubox
45 63 0.030522605 ubox
45 66 0.039897846 ubox
46 52 0.020325088 ubox
46 55 0.032573807 ubox
46 59 0.006007609 ubox
46 61 0.012501645 ubox
46 62 0.027445310 ubox
46 64 0.019792229 ubox
46 65 0.033931727 ubox
47 54 0.044414168 ubox
47 60 0.017787890 ubox
47 63 0.024479244 ubox
48 53 0.045443494 ubox
48 54 0.005541570 ubox
49 53 0.005629065 ubox
53 59 0.021648219 ubox
53 65 0.009600226 ubox
53 68 0.041288765 ubox
53 69 0.021383707 ubox
54 58 0.019776383 ubox
54 64 0.009329112 ubox
54 67 0.040942837 ubox
54 68 0.020639498 ubox
59 66 0.325691669 ubox
59 70 0.110812936 ubox
60 65 0.325571112 ubox
60 69 0.111769491 ubox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
12 59 0.9500000 lbox
14 57 0.9500000 lbox
15 56 0.9500000 lbox
16 54 0.9500000 lbox
17 53 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
showpage
end
%%EOF
