%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCCUAGGGCUGCGGCGCCUUUGUGAGCGCGGCCGCCGGCCAGGAUCGAGCCCUGGCCCGGGCCCUGGCCCAGCCCCGGCCUCCAAGGACCGCGCCGAAGGAGGUGCCCACUGGAGGGAGGAGGCGCUCGACUUUCUCAGGAUACUGUCCCUCUCCCACAGAGGAGCUGAAGGAGUAGGACAGAAGAACUGUCAAAUUCUGGAAUCCUUAAAGCC\
) } def
/len { sequence length } bind def

/coor [
[516.78045654 245.30877686]
[520.29974365 230.72747803]
[530.12487793 219.39311218]
[544.06121826 213.83949280]
[529.41027832 210.62222290]
[514.75939941 207.40493774]
[500.10845947 204.18766785]
[487.74002075 212.40698242]
[472.83609009 209.35290527]
[464.29876709 196.32400513]
[449.64785767 193.10673523]
[442.44430542 194.74143982]
[434.80972290 189.73609924]
[420.20669556 186.30802917]
[412.98031616 187.83876038]
[405.41867065 182.72390747]
[390.86657715 179.08575439]
[376.31445312 175.44760132]
[361.76235962 171.80946350]
[347.21023560 168.17131042]
[332.65814209 164.53315735]
[318.10601807 160.89500427]
[303.55392456 157.25686646]
[289.00180054 153.61871338]
[272.41122437 159.34561157]
[259.28320312 146.42951965]
[244.68019104 143.00144958]
[237.45381165 144.53218079]
[229.89216614 139.41732788]
[215.34005737 135.77919006]
[200.78794861 132.14103699]
[186.23583984 128.50288391]
[171.68373108 124.86473083]
[157.13162231 121.22658539]
[142.55366516 117.69338226]
[127.95064545 114.26531219]
[115.70720673 127.16654968]
[98.41788483 131.34062195]
[81.63681030 125.44663239]
[70.75484467 111.37799835]
[55.88083267 113.31803131]
[41.00682068 115.25806427]
[26.13280678 117.19809723]
[11.25879288 119.13813019]
[-3.61522079 121.07816315]
[-18.48923492 123.01818848]
[-26.75409126 136.29321289]
[-41.63433075 141.10075378]
[-56.10396194 135.17083740]
[-63.33086395 121.30339813]
[-59.90271378 106.04621124]
[-47.43818283 96.60325623]
[-31.82263947 97.43319702]
[-20.42926598 108.14418030]
[-5.55525255 106.20414734]
[9.31876087 104.26411438]
[24.19277382 102.32408142]
[39.06678772 100.38404846]
[53.94079971 98.44401550]
[68.81481171 96.50399017]
[69.25596619 93.71172333]
[69.94661713 90.97049713]
[57.02888870 83.34603882]
[44.11116028 75.72158813]
[31.19343185 68.09712982]
[18.27570343 60.47267914]
[3.15039039 64.19593811]
[-9.84140968 56.27963638]
[-13.29775429 41.83701706]
[-26.21548271 34.21256256]
[-39.13320923 26.58810616]
[-55.84692001 23.74412155]
[-57.74089432 6.89629698]
[-42.07579422 0.41239807]
[-31.50875473 13.67037868]
[-18.59102821 21.29483414]
[-5.67329979 28.91928864]
[8.64115524 24.96556091]
[21.85018158 32.51382446]
[25.90015793 47.55495071]
[38.81788635 55.17940521]
[51.73561478 62.80385971]
[64.65334320 70.42831421]
[77.57106781 78.05276489]
[89.98006439 70.26216888]
[104.57344055 68.95452118]
[118.16978455 74.41490936]
[127.80505371 85.45294189]
[131.37872314 99.66229248]
[145.98173523 103.09035492]
[155.04609680 102.00508881]
[160.76976013 106.67447662]
[175.32186890 110.31262207]
[189.87397766 113.95077515]
[204.42608643 117.58892822]
[218.97819519 121.22707367]
[233.53030396 124.86522675]
[248.10826111 128.39842224]
[262.71127319 131.82649231]
[274.06234741 125.70864868]
[286.15216064 128.86093140]
[292.63995361 139.06660461]
[307.19204712 142.70475769]
[321.74417114 146.34289551]
[336.29626465 149.98104858]
[350.84838867 153.61920166]
[365.40048218 157.25735474]
[379.95260620 160.89549255]
[394.50469971 164.53364563]
[409.05682373 168.17179871]
[423.63476562 171.70500183]
[438.23779297 175.13307190]
[452.86514282 178.45582581]
[467.51605225 181.67311096]
[480.72680664 173.41998291]
[495.53906250 176.89146423]
[503.32574463 189.53675842]
[517.97662354 192.75402832]
[532.62756348 195.97131348]
[547.27844238 199.18858337]
[562.13812256 201.23574829]
[577.11322021 202.09991455]
[592.08825684 202.96409607]
[607.06335449 203.82827759]
[614.22686768 194.34814453]
[624.96618652 189.54997253]
[636.56835938 190.51924133]
[646.16308594 196.90014648]
[651.43261719 207.01248169]
[666.37658691 208.30786133]
[680.79333496 201.79122925]
[692.80487061 210.59872437]
[707.74884033 211.89408875]
[722.16564941 205.37745667]
[734.17718506 214.18495178]
[749.12115479 215.48033142]
[764.06512451 216.77569580]
[776.09747314 206.88328552]
[791.23437500 208.40985107]
[800.59112549 219.94184875]
[815.53503418 221.23721313]
[830.47900391 222.53259277]
[839.81390381 208.88218689]
[854.67449951 201.84376526]
[870.96282959 203.25338745]
[884.23980713 212.63183594]
[890.93511963 227.34111023]
[905.89624023 228.42100525]
[920.85729980 229.50088501]
[935.81835938 230.58078003]
[950.77947998 231.66065979]
[965.74053955 232.74055481]
[977.62908936 222.67576599]
[992.78637695 223.98405457]
[1002.30834961 235.38000488]
[1017.26940918 236.45989990]
[1032.23046875 237.53979492]
[1047.19152832 238.61967468]
[1059.08007812 228.55490112]
[1074.23742676 229.86317444]
[1083.75939941 241.25914001]
[1098.72045898 242.33901978]
[1113.68151855 243.41891479]
[1126.70495605 234.05043030]
[1142.10998535 238.52996826]
[1148.07910156 253.42123413]
[1140.03332520 267.30090332]
[1124.14465332 269.52169800]
[1112.60168457 258.37997437]
[1097.64062500 257.30010986]
[1082.67944336 256.22021484]
[1071.61962891 266.13058472]
[1056.43164062 265.24853516]
[1046.11169434 253.58074951]
[1031.15063477 252.50086975]
[1016.18951416 251.42097473]
[1001.22845459 250.34109497]
[990.16857910 260.25146484]
[974.98052979 259.36941528]
[964.66064453 247.70162964]
[949.69958496 246.62174988]
[934.73846436 245.54185486]
[919.77740479 244.46195984]
[904.81634521 243.38208008]
[889.85528564 242.30218506]
[882.95666504 254.08567810]
[871.60015869 261.78515625]
[857.96923828 263.85144043]
[844.71453857 259.82504272]
[834.43823242 250.43696594]
[829.18365479 237.47654724]
[814.23968506 236.18118286]
[799.29571533 234.88580322]
[788.09423828 244.63575745]
[772.92047119 243.53495789]
[762.76977539 231.71966553]
[747.82580566 230.42428589]
[732.88183594 229.12892151]
[719.53393555 235.73820496]
[706.45349121 226.83805847]
[691.50952148 225.54267883]
[678.16162109 232.15197754]
[665.08117676 223.25181580]
[650.13720703 221.95645142]
[636.85247803 234.55682373]
[618.25769043 233.42050171]
[606.19921875 218.80335999]
[591.22412109 217.93919373]
[576.24902344 217.07501221]
[561.27392578 216.21083069]
[573.18804932 225.32424927]
[579.58325195 238.89263916]
[579.02972412 253.88241577]
[571.65130615 266.94223022]
[559.09753418 275.15216064]
[544.17517090 276.67666626]
[530.22058105 271.17489624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 120]
[5 119]
[6 118]
[7 117]
[10 114]
[11 113]
[13 112]
[14 111]
[16 110]
[17 109]
[18 108]
[19 107]
[20 106]
[21 105]
[22 104]
[23 103]
[24 102]
[26 99]
[27 98]
[29 97]
[30 96]
[31 95]
[32 94]
[33 93]
[34 92]
[35 90]
[36 89]
[40 60]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[62 84]
[63 83]
[64 82]
[65 81]
[66 80]
[69 77]
[70 76]
[71 75]
[121 210]
[122 209]
[123 208]
[124 207]
[129 204]
[130 203]
[132 201]
[133 200]
[135 198]
[136 197]
[137 196]
[140 193]
[141 192]
[142 191]
[147 185]
[148 184]
[149 183]
[150 182]
[151 181]
[152 180]
[155 177]
[156 176]
[157 175]
[158 174]
[161 171]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
