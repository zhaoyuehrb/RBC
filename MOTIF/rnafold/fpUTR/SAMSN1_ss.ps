%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCUCAGCAGUGUCCACUGUCGCCAUUCCUUGGCCAUAGAAAACAAUGUAUUUGAAUUUUGAUGUAAGCAUAACAAAUUGAAGAUGAAGAUGACACGUUGAUUUCUUGUUUGAAAUUAACCAAGUCCCGAGAAAAGAAAGUGAAUAGUGUUAGCACGAGGAGGAAGGAAGAA\
) } def
/len { sequence length } bind def

/coor [
[122.19310760 447.68908691]
[126.88066864 433.35458374]
[134.98649597 420.63662720]
[146.00106812 410.33468628]
[159.23196411 403.09631348]
[155.52236938 388.56225586]
[151.81277466 374.02819824]
[147.09664917 368.30618286]
[148.16914368 359.20159912]
[144.71955872 344.60363770]
[141.26995850 330.00567627]
[137.82037354 315.40771484]
[127.36353302 304.80093384]
[131.71978760 289.59127808]
[128.27020264 274.99331665]
[124.82061768 260.39538574]
[114.36377716 249.78860474]
[118.72003174 234.57894897]
[115.27044678 219.98098755]
[111.82085419 205.38302612]
[108.37126923 190.78506470]
[97.91442871 180.17829895]
[102.27068329 164.96864319]
[98.82109833 150.37068176]
[85.23277283 144.01792908]
[71.81939697 150.73219299]
[58.40601349 157.44644165]
[44.99263763 164.16070557]
[38.58234787 178.86743164]
[23.05069923 182.88581848]
[10.31224537 173.13331604]
[10.13883591 157.09120178]
[22.66349602 147.06561279]
[38.27837753 150.74732971]
[51.69175720 144.03306580]
[65.10513306 137.31881714]
[78.51851654 130.60455322]
[77.85002899 123.13439941]
[62.90973282 124.47137451]
[47.96943283 125.80834198]
[34.17343903 131.69651794]
[24.31040192 120.39516449]
[32.01094055 107.52264404]
[46.63246155 110.86804199]
[61.57276154 109.53107452]
[76.51306152 108.19410706]
[75.84457397 100.72395325]
[61.45217896 96.49797058]
[47.05978394 92.27198029]
[32.34670258 98.66766357]
[18.24097061 91.02516174]
[15.56329632 75.20714569]
[26.36776352 63.34784698]
[42.36611176 64.54470062]
[51.28577423 77.87958527]
[65.67816925 82.10557556]
[80.07056427 86.33155823]
[85.03240967 80.70749664]
[99.91795349 63.83531189]
[93.93125916 50.08178711]
[87.94456482 36.32825851]
[81.95787811 22.57472992]
[75.97118378 8.82120323]
[63.36901093 -0.74414474]
[65.38374329 -15.50185966]
[59.39704895 -29.25538635]
[46.90560150 -30.33064842]
[36.12568283 -36.58987808]
[29.08166122 -46.78639984]
[27.06587982 -58.94111633]
[30.40189362 -70.72649384]
[38.39436722 -79.91226959]
[32.90238571 -93.87071228]
[17.84790611 -97.63133240]
[7.90483189 -109.54413605]
[6.89648056 -125.02841187]
[15.21058273 -138.13014221]
[29.65019608 -143.81144714]
[44.66299820 -139.88774109]
[54.47625351 -127.86776733]
[55.31657028 -112.37346649]
[46.86082840 -99.36269379]
[52.35281372 -85.40425110]
[69.61411285 -81.79608154]
[81.37592316 -68.44739532]
[82.80744171 -50.55651855]
[73.15057373 -35.24208069]
[79.13726807 -21.48855209]
[91.31123352 -12.90694809]
[89.72470856 2.83451080]
[95.71140289 16.58803749]
[101.69809723 30.34156609]
[107.68478394 44.09509277]
[113.67147827 57.84862137]
[128.29963684 61.16778564]
[139.63587952 51.34487534]
[150.97212219 41.52196503]
[151.89047241 24.06816673]
[164.88151550 12.88638210]
[181.60597229 14.51148987]
[192.76509094 4.48780298]
[203.92419434 -5.53588390]
[215.08329773 -15.55957127]
[226.24241638 -25.58325768]
[237.40151978 -35.60694504]
[248.56062317 -45.63063049]
[259.71972656 -55.65431976]
[270.87884521 -65.67800903]
[271.47436523 -81.47106934]
[283.11950684 -92.15593719]
[298.90539551 -91.39346313]
[309.46655273 -79.63600922]
[308.53723145 -63.85906982]
[296.66876221 -53.42281723]
[280.90252686 -54.51889801]
[269.74340820 -44.49520874]
[258.58432007 -34.47152328]
[247.42520142 -24.44783592]
[236.26609802 -14.42414951]
[225.10699463 -4.40046263]
[213.94787598 5.62322426]
[202.78877258 15.64691162]
[191.62966919 25.67059898]
[192.74418640 38.52639008]
[186.14355469 49.84054947]
[174.04954529 55.35913086]
[160.79504395 52.85820770]
[149.45880127 62.68111801]
[138.12255859 72.50402832]
[152.73889160 75.87488556]
[165.14772034 84.30228424]
[173.67015076 96.64603424]
[177.15313721 111.23605347]
[175.12544250 126.09837341]
[167.86138916 139.22215271]
[156.34381104 148.83180237]
[142.13096619 153.62715149]
[127.14584351 152.95939636]
[113.41905212 146.92109680]
[116.86864471 161.51905823]
[127.57221985 173.16996765]
[122.96922302 187.33547974]
[126.41881561 201.93344116]
[129.86840820 216.53140259]
[133.31799316 231.12934875]
[144.02156067 242.78027344]
[139.41857910 256.94580078]
[142.86816406 271.54373169]
[146.31774902 286.14169312]
[157.02133179 297.79263306]
[152.41833496 311.95812988]
[155.86791992 326.55609131]
[159.31750488 341.15405273]
[162.76708984 355.75201416]
[166.34683228 370.31860352]
[170.05642700 384.85266113]
[173.76602173 399.38671875]
[188.84748840 399.39877319]
[203.45195007 403.16186523]
[216.66133118 410.43942261]
[227.64529419 420.77401733]
[235.71337891 433.51593018]
[240.35841370 447.86425781]
[241.28840637 462.91702271]
[238.44491577 477.72802734]
[232.00666809 491.36618042]
[222.37837219 502.97424316]
[210.16528320 511.82247925]
[196.13511658 517.35467529]
[181.16983032 519.22314453]
[166.21015930 517.31030273]
[152.19645691 511.73654175]
[140.00965881 502.85211182]
[130.41583252 491.21557617]
[124.01804352 477.55838013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 157]
[6 156]
[7 155]
[9 154]
[10 153]
[11 152]
[12 151]
[14 149]
[15 148]
[16 147]
[18 145]
[19 144]
[20 143]
[21 142]
[23 140]
[24 139]
[25 37]
[26 36]
[27 35]
[28 34]
[47 57]
[48 56]
[49 55]
[59 94]
[60 93]
[61 92]
[62 91]
[63 90]
[65 88]
[66 87]
[72 83]
[73 82]
[95 129]
[96 128]
[97 127]
[100 123]
[101 122]
[102 121]
[103 120]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
