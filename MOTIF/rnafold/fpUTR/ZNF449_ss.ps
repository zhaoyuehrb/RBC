%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCCCGCGCCUGCGCCCUGGGCAGUUGCCGGUGAGCUUGGGAGAACCGUGGGCGCUGAGGCGCUGUAGGUGGCUCCCUCCCACCCCAACGAUUUCAGAGAGAAACAAGUCGGAAUCUGAGAAGUGAGGCUCCAGAUAAACUGUAAACUGCUGGAAGGGGGCG\
) } def
/len { sequence length } bind def

/coor [
[82.44743347 230.54461670]
[68.30074310 222.97819519]
[65.53790283 207.17483521]
[76.27833557 195.25750732]
[76.84595490 180.26824951]
[77.41358185 165.27899170]
[77.98120117 150.28973389]
[78.54882050 135.30047607]
[67.35743713 125.31284332]
[52.52902985 127.57521057]
[37.70061874 129.83757019]
[22.87220955 132.09994507]
[8.04380131 134.36230469]
[-6.78460693 136.62466431]
[-21.56754684 139.16723633]
[-36.29972458 141.98912048]
[-51.03190231 144.81098938]
[-65.76407623 147.63285828]
[-80.49625397 150.45472717]
[-95.22843170 153.27661133]
[-109.93324280 156.23776245]
[-124.60938263 159.33792114]
[-139.28552246 162.43807983]
[-143.73428345 173.51947021]
[-152.89949036 180.98489380]
[-164.41523743 183.05728149]
[-175.38055420 179.33274841]
[-183.09005737 170.85305786]
[-197.87300110 173.39564514]
[-210.16197205 183.36016846]
[-224.01657104 177.89216614]
[-238.79951477 180.43473816]
[-253.58245850 182.97732544]
[-268.36538696 185.51989746]
[-278.75961304 197.74037170]
[-294.78942871 197.08920288]
[-304.15817261 184.06590271]
[-299.67892456 168.66084290]
[-284.78781128 162.69145203]
[-270.90795898 170.73695374]
[-256.12503052 168.19438171]
[-241.34208679 165.65180969]
[-226.55915833 163.10923767]
[-215.32756042 153.32655334]
[-200.41557312 158.61270142]
[-185.63262939 156.07012939]
[-176.03103638 140.52163696]
[-157.81048584 136.82182312]
[-142.38568115 147.76194763]
[-127.70954132 144.66177368]
[-113.03340912 141.56161499]
[-107.11276245 137.08270264]
[-98.05030060 138.54443359]
[-83.31813049 135.72256470]
[-68.58595276 132.90068054]
[-53.85377502 130.07881165]
[-39.12159729 127.25694275]
[-24.38941956 124.43506622]
[-20.99378395 121.01982117]
[-15.40212440 119.72930908]
[-9.04697132 121.79625702]
[5.78143740 119.53389740]
[20.60984612 117.27153015]
[35.43825531 115.00917053]
[50.26666260 112.74680328]
[65.09506989 110.48443604]
[63.49480820 98.13072205]
[66.15007782 85.92253113]
[72.77568054 75.28723145]
[82.62074280 67.47676086]
[94.55376434 63.42026901]
[92.29139709 48.59186172]
[90.02903748 33.76345444]
[87.76667023 18.93504333]
[85.50430298 4.10663509]
[72.05305481 -3.86818671]
[66.92371368 -18.64059258]
[72.53821564 -33.23550034]
[86.24555969 -40.76164627]
[101.57354736 -37.66540909]
[111.28478241 -25.40874290]
[110.79391479 -9.77886486]
[100.33271027 1.84427071]
[102.59507751 16.67267990]
[104.85744476 31.50108910]
[107.11980438 46.32949829]
[109.38217163 61.15790558]
[123.04268646 67.35389709]
[135.68931580 59.28775406]
[143.77607727 42.76700592]
[161.30570984 42.62697601]
[173.79743958 34.32295227]
[177.11720276 21.82950783]
[187.72926331 15.17564583]
[199.63278198 17.47820854]
[212.27941895 9.41206551]
[224.92605591 1.34592164]
[237.57267761 -6.72022200]
[250.21931458 -14.78636551]
[262.86593628 -22.85250854]
[275.51257324 -30.91865349]
[278.85998535 -49.53062057]
[294.45651245 -59.65120697]
[312.19970703 -55.27803421]
[324.53204346 -63.81696701]
[327.11126709 -79.40937805]
[340.00903320 -88.54303741]
[355.57327271 -85.79910278]
[364.57006836 -72.80551147]
[361.66174316 -57.27112961]
[348.57376099 -48.41222382]
[333.07098389 -51.48462677]
[320.73864746 -42.94569397]
[321.17489624 -31.49355698]
[315.95681763 -21.15518570]
[306.28579712 -14.56893539]
[294.51531982 -13.47834492]
[283.57873535 -18.27202034]
[270.93209839 -10.20587635]
[258.28546143 -2.13973260]
[245.63882446 5.92641115]
[232.99218750 13.99255466]
[220.34556580 22.05869865]
[207.69892883 30.12484169]
[200.48135376 46.10027313]
[182.10145569 46.81467438]
[169.60974121 55.11870193]
[166.90144348 66.93651581]
[156.52418518 73.95095825]
[143.75546265 71.93438721]
[131.10882568 80.00053406]
[134.01667786 99.33193970]
[126.76903534 115.75951385]
[137.47552490 126.26527405]
[148.18202209 136.77104187]
[158.88850403 147.27679443]
[169.59500122 157.78256226]
[183.40876770 151.49412537]
[198.56158447 150.62434387]
[213.00416565 155.29086304]
[224.78326416 164.86254883]
[232.30586243 178.04492188]
[234.55459595 193.05516052]
[231.22531128 207.86328125]
[222.76831055 220.46659851]
[210.32730103 229.16059875]
[195.58483887 232.76950073]
[180.53471375 230.80523682]
[167.21234131 223.53346252]
[157.41946411 211.93759155]
[152.48046875 197.58590698]
[153.06333923 182.41934204]
[159.08923340 168.48905945]
[148.38275146 157.98329163]
[137.67625427 147.47752380]
[126.96976471 136.97177124]
[116.26327515 126.46600342]
[109.95853424 131.31207275]
[102.24522400 134.57872009]
[93.53807831 135.86810303]
[92.97045898 150.85736084]
[92.40283203 165.84661865]
[91.83521271 180.83587646]
[91.26759338 195.82513428]
[101.07596588 208.52061462]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 164]
[5 163]
[6 162]
[7 161]
[8 160]
[9 66]
[10 65]
[11 64]
[12 63]
[13 62]
[14 61]
[15 58]
[16 57]
[17 56]
[18 55]
[19 54]
[20 53]
[21 51]
[22 50]
[23 49]
[28 46]
[29 45]
[31 43]
[32 42]
[33 41]
[34 40]
[71 87]
[72 86]
[73 85]
[74 84]
[75 83]
[88 131]
[89 130]
[91 127]
[92 126]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[101 118]
[104 113]
[105 112]
[133 157]
[134 156]
[135 155]
[136 154]
[137 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
