%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCCGGGCCCCUGCUGGGCGGGAAGGCGGCGCCCCGGCCGAGGUGGCGGCGGCUCCUCAGGACGGAAGCUCCUGUUUUCUUGUCAGCCGCCAGCUGAGGGCCAUUCGCAGCUUCUCCAGGCCACCUGCAUUCCUUGUCUCAGAGCCUCCCUCCUGCAUCCUCCAAGCCAGCAGUUGUGGGAUGGGAGAAGAAGUUGUCCAUGUUCACACUGGGUGAAGGAAGCUGAAACCACAGAC\
) } def
/len { sequence length } bind def

/coor [
[293.11190796 432.85952759]
[297.47055054 423.24545288]
[305.48089600 416.24740601]
[302.72467041 401.50280762]
[299.96841431 386.75820923]
[285.69619751 377.84631348]
[282.22586060 361.03665161]
[292.18643188 346.64517212]
[289.23580933 331.93823242]
[286.28518677 317.23132324]
[283.33453369 302.52438354]
[276.91561890 288.96719360]
[267.40930176 277.36419678]
[257.90295410 265.76116943]
[248.39663696 254.15817261]
[238.89030457 242.55517578]
[229.38397217 230.95217896]
[219.87765503 219.34916687]
[209.62677002 208.39839172]
[198.67599487 198.14752197]
[187.72521973 187.89663696]
[176.77442932 177.64576721]
[165.82365417 167.39489746]
[154.87287903 157.14402771]
[143.72128296 147.11196899]
[132.37326050 137.30267334]
[121.02523804 127.49337006]
[109.67721558 117.68406677]
[94.68244171 117.28811646]
[82.83254242 126.48484802]
[70.98265076 135.68157959]
[69.25489807 151.39114380]
[56.87276077 161.21246338]
[41.18234253 159.31872559]
[31.49248505 146.83343506]
[33.55201340 131.16392517]
[46.13904190 121.60660553]
[61.78591156 123.83168793]
[73.63581085 114.63494873]
[85.48571014 105.43821716]
[80.24040222 101.45882416]
[76.40849304 94.94449615]
[64.55859375 85.74776459]
[52.70869827 76.55103302]
[40.85880280 67.35429382]
[29.00890350 58.15756226]
[17.15900612 48.96082687]
[5.30910873 39.76409149]
[-27.26689720 42.03500748]
[-41.63884354 37.73998642]
[-56.01078796 33.44496155]
[-70.38272858 29.14994049]
[-84.75467682 24.85491753]
[-99.12661743 20.55989456]
[-113.49856567 16.26487160]
[-124.52529907 23.98030853]
[-137.78872681 23.94279480]
[-148.45414734 16.38979149]
[-152.76254272 4.25755310]
[-167.07653809 -0.22679923]
[-181.39053345 -4.71115160]
[-195.70454407 -9.19550419]
[-210.01853943 -13.67985630]
[-215.07682800 -12.54885006]
[-219.61439514 -13.37681389]
[-222.97532654 -15.64118671]
[-224.80412292 -18.63548279]
[-238.92936707 -23.68300438]
[-253.05461121 -28.73052597]
[-267.17984009 -33.77804565]
[-283.20700073 -30.30496597]
[-294.02648926 -42.62854385]
[-288.50817871 -58.07134247]
[-272.32879639 -60.74713135]
[-262.13232422 -47.90328979]
[-248.00708008 -42.85577011]
[-233.88183594 -37.80825043]
[-219.75659180 -32.76072693]
[-205.53417969 -27.99385643]
[-191.22018433 -23.50950432]
[-176.90618896 -19.02515030]
[-162.59219360 -14.54079914]
[-148.27818298 -10.05644703]
[-133.71151733 -18.47845078]
[-117.23881531 -13.65576077]
[-109.20353699 1.89292800]
[-94.83159637 6.18795061]
[-80.45964813 10.48297310]
[-66.08770752 14.77799606]
[-51.71576309 19.07301903]
[-37.34381866 23.36804199]
[-22.97187424 27.66306496]
[-13.08789253 16.38002968]
[-19.23713875 2.69840813]
[-25.38638496 -10.98321342]
[-31.53563309 -24.66483498]
[-37.68487930 -38.34645462]
[-50.39951324 -47.76179886]
[-48.55979919 -62.54235077]
[-54.70904541 -76.22397614]
[-69.13575745 -83.24178314]
[-72.50317383 -98.92744446]
[-62.22811127 -111.24826813]
[-46.19271469 -110.75276184]
[-36.69796371 -97.82104492]
[-41.02742386 -82.37322235]
[-34.87817764 -68.69159698]
[-22.60338211 -60.25485611]
[-24.00325775 -44.49570465]
[-17.85401154 -30.81408119]
[-11.70476437 -17.13245964]
[-5.55551767 -3.45083880]
[0.59372926 10.23078251]
[3.12174416 -4.55465412]
[14.17138290 -14.69888783]
[29.11855125 -15.95672035]
[41.70810318 -7.80177069]
[46.67151260 6.35324860]
[41.93167496 20.58469009]
[29.47213554 28.93692780]
[14.50584316 27.91419601]
[26.35574150 37.11093140]
[38.20563889 46.30766296]
[50.05553818 55.50439835]
[61.90543365 64.70113373]
[73.75533295 73.89786530]
[85.60523224 83.09460449]
[100.05939484 79.08496857]
[105.47801971 65.09788513]
[110.89664459 51.11079788]
[105.75794983 35.91299057]
[114.55699158 22.49820709]
[130.54389954 21.15712166]
[141.45487976 32.91850281]
[138.91996765 48.76002121]
[124.88372803 56.52942276]
[119.46510315 70.51651001]
[114.04647827 84.50359344]
[123.62255859 72.95809174]
[138.46859741 70.81448364]
[150.91955566 79.17951965]
[154.54696655 93.73430634]
[147.47799683 106.96417999]
[133.36236572 112.03852844]
[119.48651886 106.33604431]
[130.83453369 116.14534760]
[142.18255615 125.95464325]
[153.53057861 135.76394653]
[158.62126160 136.73887634]
[162.45477295 139.30386353]
[164.63729858 142.71852112]
[165.12374878 146.19323730]
[176.07452393 156.44410706]
[187.02529907 166.69499207]
[197.97608948 176.94586182]
[208.92686462 187.19673157]
[219.87765503 197.44760132]
[216.90417480 182.74528503]
[221.59690857 168.49822998]
[232.72578430 158.44097900]
[247.37362671 155.20977783]
[261.70086670 159.65159607]
[271.95202637 170.60212708]
[275.43997192 185.19096375]
[271.25045776 199.59400940]
[260.48162842 210.03587341]
[245.95629883 213.77949524]
[231.48065186 209.84283447]
[240.98698425 221.44584656]
[250.49331665 233.04884338]
[259.99963379 244.65185547]
[269.50598145 256.25485229]
[279.01229858 267.85784912]
[288.51864624 279.46084595]
[301.88165283 266.35510254]
[326.41311646 266.26934814]
[340.40020752 271.68798828]
[354.38729858 277.10659790]
[368.37438965 282.52523804]
[382.36145020 287.94384766]
[396.34854126 293.36248779]
[409.36462402 285.12307739]
[424.55892944 286.11621094]
[436.11822510 295.75189209]
[439.74374390 310.17385864]
[453.73083496 315.59249878]
[467.71789551 321.01110840]
[483.38122559 318.78149414]
[492.45401001 330.59393311]
[506.44110107 336.01257324]
[522.55432129 332.96377563]
[533.04473877 345.56863403]
[527.12072754 360.86038208]
[510.87634277 363.10818481]
[501.02246094 349.99966431]
[487.03540039 344.58102417]
[472.37252808 347.19821167]
[462.29928589 334.99819946]
[448.31219482 329.57958984]
[434.32510376 324.16094971]
[421.92980957 332.37643433]
[406.89584351 331.70983887]
[394.99804688 322.20745850]
[390.92993164 307.34957886]
[376.94284058 301.93093872]
[362.95574951 296.51232910]
[348.96865845 291.09368896]
[334.98159790 285.67507935]
[320.99450684 280.25643921]
[315.25625610 285.08578491]
[303.77972412 294.74441528]
[298.04147339 299.57376099]
[300.99209595 314.28070068]
[303.94271851 328.98760986]
[306.89334106 343.69454956]
[318.88061523 349.81192017]
[325.07086182 361.54226685]
[323.40527344 374.50469971]
[314.71301270 384.00198364]
[317.46926880 398.74658203]
[320.22549438 413.49118042]
[337.38360596 423.97738647]
[341.20935059 443.40695190]
[329.66970825 459.12158203]
[333.00750732 473.74551392]
[336.34533691 488.36941528]
[349.85885620 496.56454468]
[353.53836060 511.93453979]
[345.20083618 525.36065674]
[329.79278564 528.87744141]
[316.45556641 520.39843750]
[313.10186768 504.95407104]
[321.72140503 491.70724487]
[318.38360596 477.08331299]
[315.04577637 462.45941162]
[305.23394775 459.55255127]
[297.44677734 452.78948975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 221]
[4 220]
[5 219]
[8 215]
[9 214]
[10 213]
[11 212]
[12 174]
[13 173]
[14 172]
[15 171]
[16 170]
[17 169]
[18 168]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[24 152]
[25 148]
[26 147]
[27 146]
[28 145]
[29 40]
[30 39]
[31 38]
[42 127]
[43 126]
[44 125]
[45 124]
[46 123]
[47 122]
[48 121]
[49 92]
[50 91]
[51 90]
[52 89]
[53 88]
[54 87]
[55 86]
[59 83]
[60 82]
[61 81]
[62 80]
[63 79]
[67 78]
[68 77]
[69 76]
[70 75]
[93 113]
[94 112]
[95 111]
[96 110]
[97 109]
[99 107]
[100 106]
[128 138]
[129 137]
[130 136]
[176 209]
[177 208]
[178 207]
[179 206]
[180 205]
[181 204]
[185 200]
[186 199]
[187 198]
[189 196]
[190 195]
[224 235]
[225 234]
[226 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
