%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGAGGGCAGCCGGCGGCGCGGCCUCCUCAGCGGGCUCGGCUGGACGUCCGCUCCGGAUCUUCGCGAUGGGGCGCGGGGGUCGGCGCGGCUAGGAGUGCGGCGAGUGGAGCGGUGGGUGCGGAGCGGCGGGGCCCAGCGGCCCGCAGGGAGGCGGGAGCGGCGGCUGCGGCCUCAGGGCCUGUGAGCUGGAGGCACUCGCC\
) } def
/len { sequence length } bind def

/coor [
[314.50164795 723.22503662]
[312.85311890 708.31585693]
[318.06961060 694.25213623]
[329.04190063 684.02429199]
[343.43688965 679.80718994]
[358.19369507 682.49743652]
[370.17440796 691.52307129]
[376.83114624 704.96313477]
[370.95712280 691.16113281]
[365.08309937 677.35913086]
[359.20907593 663.55706787]
[353.33505249 649.75506592]
[347.46102905 635.95300293]
[341.58700562 622.15100098]
[329.48364258 613.47015381]
[331.19882202 597.74218750]
[325.32479858 583.94018555]
[310.42111206 583.35198975]
[297.19638062 576.32238770]
[288.29876709 564.19830322]
[285.53625488 549.35278320]
[289.50946045 534.72058105]
[299.48196411 523.21795654]
[293.60794067 509.41592407]
[287.73391724 495.61392212]
[281.85989380 481.81188965]
[275.98587036 468.00985718]
[270.11184692 454.20785522]
[264.23782349 440.40582275]
[253.13552856 435.59301758]
[248.13069153 424.13711548]
[252.40780640 411.96429443]
[246.74807739 398.07302856]
[241.08834839 384.18176270]
[235.42861938 370.29049683]
[229.76889038 356.39923096]
[224.10916138 342.50793457]
[218.44943237 328.61666870]
[214.46777344 325.96881104]
[212.11071777 320.78875732]
[212.83685303 314.20687866]
[207.60972595 300.14709473]
[202.38258362 286.08734131]
[197.15545654 272.02755737]
[191.92832947 257.96780396]
[174.93786621 246.25669861]
[178.82814026 225.18771362]
[172.95411682 211.38568115]
[167.43861389 206.45896912]
[167.09780884 197.32434082]
[161.43807983 183.43305969]
[155.77835083 169.54179382]
[150.11862183 155.65051270]
[144.45889282 141.75924683]
[138.79916382 127.86797333]
[133.13943481 113.97669983]
[98.45079803 141.25936890]
[55.81538391 114.84156799]
[43.53180313 106.23263550]
[31.24822426 97.62371063]
[18.96464348 89.01477814]
[6.68106174 80.40585327]
[-5.60251904 71.79692841]
[-17.88610077 63.18799973]
[-30.16968155 54.57907104]
[-42.45326233 45.97014236]
[-54.73684311 37.36121368]
[-70.25683594 40.34540939]
[-83.29422760 31.41221619]
[-86.11416626 15.86154270]
[-77.04364014 2.91932511]
[-61.46401596 0.26395270]
[-48.61842346 9.47081089]
[-46.12791443 25.07763290]
[-33.84433365 33.68656158]
[-21.56075287 42.29549026]
[-9.27717209 50.90441895]
[3.00640869 59.51334381]
[15.28998947 68.12227631]
[27.57357025 76.73120117]
[39.85715103 85.34012604]
[52.14073181 93.94905853]
[64.42431641 102.55798340]
[70.69637299 98.44564819]
[83.24048615 90.22098541]
[89.51254272 86.10865021]
[86.51507568 71.41119385]
[83.51760864 56.71373749]
[73.17865753 44.73806763]
[78.21659088 30.72134399]
[75.21912384 16.02388954]
[61.38768387 8.72832489]
[55.52958298 -5.77052641]
[60.41083908 -20.62674904]
[73.72666931 -28.82568932]
[89.18975067 -26.49605751]
[99.49888611 -14.73783684]
[99.78641510 0.89710325]
[89.91658020 13.02642059]
[92.91404724 27.72387505]
[103.03859711 38.64828873]
[98.21505737 53.71627045]
[101.21253204 68.41372681]
[104.20999908 83.11117554]
[111.65259552 84.03736115]
[113.50495148 69.15216827]
[115.35753632 54.26701355]
[130.24267578 56.11983109]
[128.39013672 71.00453186]
[126.53778076 85.88971710]
[133.98037720 86.81589508]
[140.48863220 73.30136108]
[146.99688721 59.78683090]
[143.07670593 44.23010254]
[152.90950012 31.55352402]
[168.95239258 31.48147964]
[178.89865112 44.06923676]
[175.11834717 59.66054535]
[160.51141357 66.29508972]
[154.00315857 79.80961609]
[147.49490356 93.32415009]
[147.03070068 108.31697083]
[152.69042969 122.20823669]
[158.35015869 136.09951782]
[164.00988770 149.99078369]
[169.66963196 163.88206482]
[175.32936096 177.77333069]
[180.98908997 191.66459656]
[186.75613403 205.51167297]
[192.63015747 219.31369019]
[201.77818298 221.64520264]
[208.72225952 227.83569336]
[211.98658752 236.39985657]
[210.95608521 245.36842346]
[205.98809814 252.74067688]
[211.21522522 266.80044556]
[216.44235229 280.86019897]
[221.66949463 294.91998291]
[226.89662170 308.97973633]
[232.34069824 322.95693970]
[238.00042725 336.84820557]
[243.66015625 350.73947144]
[249.31988525 364.63076782]
[254.97961426 378.52203369]
[260.63934326 392.41329956]
[266.29907227 406.30456543]
[281.10015869 417.25448608]
[278.03985596 434.53179932]
[283.91384888 448.33383179]
[289.78787231 462.13583374]
[295.66189575 475.93786621]
[301.53591919 489.73989868]
[307.40994263 503.54193115]
[313.28396606 517.34393311]
[328.48727417 518.13195801]
[341.78659058 525.41314697]
[350.56979370 537.69622803]
[353.13836670 552.51391602]
[349.03561401 566.91796875]
[339.12683105 578.06616211]
[345.00085449 591.86816406]
[357.52438354 601.53625488]
[355.38903809 616.27697754]
[361.26306152 630.07904053]
[367.13708496 643.88104248]
[373.01110840 657.68304443]
[378.88513184 671.48510742]
[384.75915527 685.28710938]
[390.63317871 699.08911133]
[399.43115234 711.23803711]
[410.71194458 721.12457275]
[421.99273682 731.01110840]
[433.27349854 740.89764404]
[449.45523071 743.55932617]
[454.98703003 758.99731445]
[444.17828369 771.33032227]
[428.14810181 767.87121582]
[423.38696289 752.17846680]
[412.10617065 742.29187012]
[400.82537842 732.40533447]
[389.54461670 722.51879883]
[383.33694458 726.72772217]
[364.71392822 739.35443115]
[369.72286987 753.49340820]
[374.73178101 767.63238525]
[379.74072266 781.77136230]
[384.74963379 795.91033936]
[390.56872559 802.95983887]
[389.72482300 810.30700684]
[394.51434326 824.52185059]
[407.17044067 834.95043945]
[404.20053101 851.07843018]
[388.65982056 856.31469727]
[376.53527832 845.27264404]
[380.29956055 829.31134033]
[375.51004028 815.09655762]
[370.61065674 800.91925049]
[365.60174561 786.78027344]
[360.59280396 772.64129639]
[355.58389282 758.50231934]
[350.57495117 744.36334229]
[335.60638428 743.39294434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[16 161]
[17 160]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[28 149]
[29 148]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[37 141]
[38 140]
[41 139]
[42 138]
[43 137]
[44 136]
[45 135]
[47 130]
[48 129]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[58 83]
[59 82]
[60 81]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[86 104]
[87 103]
[88 102]
[90 100]
[91 99]
[111 121]
[112 120]
[113 119]
[170 181]
[171 180]
[172 179]
[173 178]
[183 201]
[184 200]
[185 199]
[186 198]
[187 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
