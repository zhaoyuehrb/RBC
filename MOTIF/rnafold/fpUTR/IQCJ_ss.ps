%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUCUUUCCCCUCUUUGAGGCUUUCUGAUGCCUAGAGUGAGCUCAACUCAAAGGUUUCCAGCCUCACACUCGCCUCACAUUCCCCCACAGUCACAUUGCGCUCUGUGAUUCUGAGGAAUACAGUGUGCCAGCAUCCGAUCCAGUCUCCUUUCACCUGCAGGUGUUCCAGAAACUUCAAA\
) } def
/len { sequence length } bind def

/coor [
[119.26576233 214.29121399]
[108.61979675 224.85830688]
[95.65815735 232.40786743]
[81.21429443 236.45445251]
[66.21697235 236.73785400]
[51.63054276 233.23985291]
[38.39292908 226.18537903]
[27.35534096 216.02803040]
[19.22750282 203.42095947]
[14.53205299 189.17481995]
[13.57091331 174.20564270]
[16.40588760 159.47598267]
[22.85468292 145.93296814]
[32.50262833 134.44744873]
[44.72935104 125.75795746]
[58.74865341 120.42324066]
[73.65827179 118.78631592]
[86.15311432 110.48698425]
[71.20894623 111.77999115]
[56.26477814 113.07299042]
[41.32061386 114.36599731]
[26.37644577 115.65900421]
[11.43227768 116.95201111]
[-3.51188970 118.24501801]
[-8.59042168 126.24422455]
[-16.66871262 130.92686462]
[-25.85869217 131.34544373]
[-34.07909393 127.53244019]
[-39.52679825 120.46437836]
[-54.51786041 120.98211670]
[-68.04274750 129.19113159]
[-81.02950287 121.89774323]
[-96.02056122 122.41548157]
[-111.01162720 122.93322754]
[-126.00268555 123.45096588]
[-141.37590027 133.56555176]
[-156.53939819 124.75373077]
[-171.51928711 125.53015137]
[-186.49917603 126.30657196]
[-201.47906494 127.08299255]
[-210.75212097 139.67443848]
[-225.96141052 143.30918884]
[-239.92558289 136.27101135]
[-246.05117798 121.88313293]
[-241.44589233 106.93906403]
[-228.28417969 98.49493408]
[-212.78060913 100.53780365]
[-202.25549316 112.10309601]
[-187.27558899 111.32667542]
[-172.29570007 110.55025482]
[-157.31581116 109.77384186]
[-148.97180176 100.99333954]
[-136.48065186 100.23834991]
[-126.52043152 108.45990753]
[-111.52936554 107.94216156]
[-96.53830719 107.42442322]
[-81.54724121 106.90667725]
[-69.09461212 98.73469543]
[-55.03560257 105.99105835]
[-40.04454041 105.47331238]
[-23.59436798 93.03191376]
[-4.80489540 103.30084991]
[10.13927174 102.00784302]
[25.08343887 100.71483612]
[40.02760696 99.42182922]
[54.97177505 98.12882996]
[69.91593933 96.83582306]
[84.86010742 95.54281616]
[87.11561584 88.86698914]
[92.35082245 83.40443420]
[99.89068604 80.48115540]
[105.45104980 66.54981232]
[103.38058472 50.86466980]
[115.28453827 41.91228485]
[120.84490204 27.98094177]
[116.47911072 15.82610798]
[121.41671753 4.32746744]
[132.50286865 -0.55279058]
[138.30287170 -14.38608360]
[144.10287476 -28.21937561]
[149.54278564 -42.19818878]
[154.61898804 -56.31315613]
[159.69519043 -70.42812347]
[164.77137756 -84.54308319]
[169.84757996 -98.65805054]
[165.06484985 -110.65495300]
[169.60263062 -122.31716919]
[180.51371765 -127.57717133]
[185.83279419 -141.60241699]
[183.49189758 -157.24948120]
[195.23956299 -166.40600586]
[200.55862427 -180.43124390]
[205.87770081 -194.45649719]
[211.19677734 -208.48173523]
[216.51585388 -222.50697327]
[221.83493042 -236.53222656]
[227.15399170 -250.55746460]
[218.53811646 -263.46273804]
[219.18690491 -278.96624756]
[228.85087585 -291.10656738]
[243.81404114 -295.21548462]
[258.32275391 -289.71307373]
[266.79812622 -276.71508789]
[265.98120117 -261.21951294]
[256.18609619 -249.18475342]
[241.17924500 -245.23838806]
[235.86016846 -231.21315002]
[230.54109192 -217.18789673]
[225.22201538 -203.16265869]
[219.90295410 -189.13742065]
[214.58387756 -175.11216736]
[209.26480103 -161.08692932]
[211.98614502 -146.44303894]
[199.85804749 -136.28334045]
[194.53897095 -122.25809479]
[198.29290771 -105.12660217]
[183.96253967 -93.58185577]
[178.88635254 -79.46688843]
[173.81015015 -65.35192108]
[168.73394775 -51.23695755]
[163.65776062 -37.12199402]
[164.83987427 -33.77415848]
[164.44316101 -29.68390083]
[162.13499451 -25.60692787]
[157.93615723 -22.41937447]
[152.13616943 -8.58608246]
[146.33616638 5.24721050]
[149.49655151 22.49806213]
[134.77624512 33.54130554]
[129.21588135 47.47265244]
[131.68406677 62.16133118]
[119.38239288 72.11018372]
[113.82202911 86.04152679]
[120.24710846 72.48725128]
[132.39990234 63.69466400]
[147.28378296 61.83184052]
[161.22868347 67.35810852]
[170.79608154 78.91081238]
[173.62684631 93.64128113]
[169.02297974 107.91728973]
[158.11968994 118.21865845]
[143.60549927 122.00527954]
[129.05932617 118.34346008]
[118.06862640 108.13714600]
[128.39707947 119.01478577]
[138.72552490 129.89242554]
[153.83871460 134.57237244]
[156.99134827 149.12950134]
[167.31979370 160.00715637]
[183.34278870 155.97607422]
[199.12402344 160.54199219]
[210.38986206 172.37002563]
[214.13916016 188.17219543]
[209.44229126 203.62104797]
[219.95695496 214.31878662]
[230.47161865 225.01654053]
[240.98629761 235.71429443]
[256.92538452 239.57144165]
[261.29431152 255.37791443]
[249.59870911 266.87335205]
[233.87001038 262.23223877]
[230.28854370 246.22895813]
[219.77388000 235.53120422]
[209.25921631 224.83345032]
[198.74455261 214.13571167]
[185.76309204 218.42251587]
[172.13635254 216.68409729]
[160.53562927 209.20367432]
[153.25982666 197.39569092]
[151.77996826 183.53866577]
[156.44215393 170.33560181]
[146.11369324 159.45796204]
[131.73925781 155.55606079]
[127.84787750 140.22088623]
[117.51942444 129.34323120]
[107.19097900 118.46559143]
[111.04002380 132.96334839]
[121.11500549 144.07615662]
[128.07086182 157.36585999]
[131.46029663 171.97790527]
[131.06538391 186.97270203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 68]
[19 67]
[20 66]
[21 65]
[22 64]
[23 63]
[24 62]
[29 60]
[30 59]
[32 57]
[33 56]
[34 55]
[35 54]
[37 51]
[38 50]
[39 49]
[40 48]
[71 133]
[72 132]
[74 130]
[75 129]
[78 127]
[79 126]
[80 125]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[88 115]
[89 114]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[144 176]
[145 175]
[146 174]
[148 172]
[149 171]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
