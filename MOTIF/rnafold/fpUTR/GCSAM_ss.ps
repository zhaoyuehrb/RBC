%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUAACACUCCUCCCCCAGCCUCUUCCUUCCCUCUGCAGAGACACCCUUCUCCUUUCUGCUGUCUCUGCACGGGUGGCCAGAGCCACACAGCCCUUUCUUUAAGUCAGGAGUUGCCCUGUCAGAGCACAAGGCAAGAAGGAAGUGGUAAAGGGACGGAGGGGAAGCCCUGAGAGGACUGAGAGG\
) } def
/len { sequence length } bind def

/coor [
[141.92318726 547.33099365]
[141.66984558 532.33312988]
[141.41650391 517.33526611]
[141.16316223 502.33740234]
[138.39720154 498.41964722]
[138.07775879 492.71801758]
[141.16316223 486.83071899]
[141.41650391 471.83285522]
[133.89526367 458.97671509]
[141.86454773 445.30920410]
[142.11788940 430.31134033]
[142.37123108 415.31347656]
[142.62457275 400.31561279]
[142.87791443 385.31774902]
[132.24255371 354.84503174]
[149.11248779 334.81692505]
[145.10797119 320.36132812]
[141.10346985 305.90573120]
[126.35561371 293.41979980]
[131.64735413 273.98315430]
[127.15691376 259.67105103]
[122.66646576 245.35896301]
[111.47393036 235.53164673]
[114.72512817 220.04809570]
[110.23468018 205.73600769]
[105.74423218 191.42391968]
[101.25378418 177.11183167]
[96.76333618 162.79974365]
[92.27288818 148.48765564]
[87.78244781 134.17556763]
[83.29199982 119.86347198]
[72.24711609 109.71406555]
[57.60725784 106.44686127]
[46.30692673 112.69459534]
[34.16993713 109.65695953]
[27.58217239 99.49529266]
[12.99958611 95.98129272]
[-1.58300030 92.46729279]
[-16.16558647 88.95330048]
[-30.74817276 85.43930054]
[-45.33076096 81.92530823]
[-59.91334534 78.41130829]
[-74.49593353 74.89730835]
[-89.07852173 71.38331604]
[-103.66110229 67.86931610]
[-112.01753235 80.51629639]
[-124.19736481 89.54000092]
[-138.72984314 93.85079193]
[-153.86009216 92.92810822]
[-167.76106262 86.88337708]
[-178.75415039 76.44651794]
[-185.51187134 62.87784195]
[-187.21821594 47.81583023]
[-183.66711426 33.07929230]
[-175.28739929 20.44773865]
[-163.09095764 11.44648933]
[-148.55055237 7.16249037]
[-133.42202759 8.11305428]
[-119.53222656 14.18339729]
[-108.55839539 24.64049339]
[-101.82568359 38.22159958]
[-100.14710999 53.28673172]
[-85.56452179 56.80072784]
[-70.98193359 60.31472397]
[-56.39934921 63.82872391]
[-41.81676102 67.34272003]
[-27.23417664 70.85671997]
[-12.65158939 74.37071228]
[1.93099666 77.88471222]
[16.51358223 81.39870453]
[31.09616852 84.91270447]
[47.62220764 79.03643799]
[60.87446213 91.80700684]
[75.51431274 95.07420349]
[85.18843842 83.61072540]
[79.50675201 69.72841644]
[73.82507324 55.84611130]
[68.14338684 41.96380234]
[62.46170425 28.08149529]
[49.16951752 18.47682190]
[51.11025620 2.19291687]
[66.28746033 -4.01873398]
[79.08811951 6.23188353]
[76.34401703 22.39981270]
[82.02569580 36.28211975]
[87.70738220 50.16442871]
[93.38906097 64.04673767]
[99.07074738 77.92904663]
[106.56646729 77.67573547]
[113.62317657 64.43931580]
[121.55790710 77.16912842]
[129.05363464 76.91581726]
[133.78515625 62.68161392]
[138.39631653 48.40795898]
[142.88676453 34.09586716]
[147.37721252 19.78378105]
[140.31513977 5.89980125]
[145.07296753 -8.55072403]
[158.35273743 -15.19777012]
[162.84318542 -29.50985909]
[161.81579590 -46.43264771]
[177.79281616 -52.10458755]
[187.66598511 -38.32209778]
[177.15527344 -25.01941109]
[172.66482544 -10.70732307]
[179.76713562 2.33464146]
[175.41706848 16.91310310]
[161.68930054 24.27422714]
[157.19885254 38.58631516]
[152.70840454 52.89840317]
[153.70806885 60.23777771]
[148.01936340 67.41314697]
[143.28784180 81.64735413]
[154.83261108 91.22431946]
[167.94779968 83.94478607]
[181.06300354 76.66526031]
[194.17820740 69.38572693]
[202.48941040 55.92339706]
[217.37239075 56.51190948]
[230.48757935 49.23237991]
[243.60278320 41.95285034]
[247.70896912 26.69130516]
[261.44552612 18.87578583]
[276.66281128 23.14309883]
[284.33267212 36.96152496]
[279.90469360 52.13283539]
[266.00595093 59.65616608]
[250.88230896 55.06805038]
[237.76712036 62.34757996]
[224.65191650 69.62710571]
[217.27879333 82.56876373]
[201.45773315 82.50093079]
[188.34252930 89.78045654]
[175.22734070 97.05998993]
[162.11213684 104.33951569]
[124.26125336 130.42143250]
[97.60408783 115.37302399]
[102.09453583 129.68511963]
[106.58498383 143.99720764]
[111.07542419 158.30929565]
[115.56587219 172.62138367]
[120.05632019 186.93347168]
[124.54676819 201.24555969]
[129.03721619 215.55764771]
[140.55093384 226.40867615]
[136.97854614 240.86853027]
[141.46899414 255.18061829]
[145.95944214 269.49270630]
[155.89949036 273.97644043]
[161.60313416 283.01138306]
[161.38484192 293.47390747]
[155.55905151 301.90124512]
[159.56355286 316.35681152]
[163.56806946 330.81240845]
[172.90599060 330.41992188]
[182.55091858 333.90676880]
[190.86265564 341.37048340]
[196.20318604 352.21743774]
[197.22306824 365.19052124]
[207.18447876 376.40524292]
[217.14590454 387.61996460]
[227.10733032 398.83468628]
[242.83145142 403.49130249]
[246.39717102 419.49810791]
[234.13636780 430.38867188]
[218.66191101 424.95974731]
[215.89259338 408.79611206]
[205.93118286 397.58139038]
[195.96975708 386.36666870]
[186.00833130 375.15194702]
[178.97518921 377.75671387]
[164.90892029 382.96630859]
[157.87577820 385.57110596]
[157.62243652 400.56893921]
[157.36909485 415.56680298]
[157.11575317 430.56466675]
[156.86241150 445.56253052]
[164.36552429 459.49142456]
[156.41436768 472.08618164]
[156.16102600 487.08404541]
[156.16102600 502.08404541]
[156.41436768 517.08190918]
[156.66770935 532.07977295]
[156.92105103 547.07763672]
[159.43682861 566.29534912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 184]
[2 183]
[3 182]
[4 181]
[7 180]
[8 179]
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[16 154]
[17 153]
[18 152]
[20 148]
[21 147]
[22 146]
[24 144]
[25 143]
[26 142]
[27 141]
[28 140]
[29 139]
[30 138]
[31 137]
[32 74]
[33 73]
[36 71]
[37 70]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[92 113]
[93 112]
[94 110]
[95 109]
[96 108]
[99 105]
[100 104]
[114 135]
[115 134]
[116 133]
[117 132]
[119 130]
[120 129]
[121 128]
[159 170]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
