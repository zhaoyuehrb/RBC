%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUUCUGAGGCGCGUGGUAGUGAUGGCGGCGCUCAGUGAGACUUUCCUGUCACUGGCUACUACUACUCCCAACCCUCCUCAAAGCCGCCGGAGCAACCCCCAGGUCUUUACUUUACAAUCGGCAAUUUGACUUGCUCUGCUGCAUGUCUGGAGGGACCAAGGAAAGUGUGGAGACGCUCCAAGGAUUAGGUGAUCGGAGCUUGAAAAGAAAAAAAGCCAAACAAAUAAACAAAACCCACCCACCCUAACAAAU\
) } def
/len { sequence length } bind def

/coor [
[46.03334808 263.67697144]
[46.74480820 248.67108154]
[49.45007706 233.89390564]
[54.10087204 219.60917664]
[60.61419678 206.07180786]
[68.87381744 193.52342224]
[78.73232269 182.18794250]
[90.01378632 172.26765442]
[102.51686859 163.93960571]
[116.01844025 157.35241699]
[111.29539490 143.11538696]
[106.57234955 128.87837219]
[91.68604279 127.03504181]
[83.63304138 139.69004822]
[75.58004761 152.34506226]
[67.52704620 165.00006104]
[66.64590454 180.79672241]
[53.28534698 187.38040161]
[45.23234940 200.03540039]
[50.11452866 214.89132690]
[44.25733185 229.39053345]
[30.42634773 236.68696594]
[15.15214062 233.33544922]
[5.64672709 220.91848755]
[6.39827251 205.29896545]
[17.05191994 193.85197449]
[32.57734299 191.98240662]
[40.63034058 179.32739258]
[40.93548203 164.43591309]
[54.87203979 156.94706726]
[62.92503738 144.29205322]
[70.97803497 131.63705444]
[79.03103638 118.98204803]
[69.06293488 107.77325439]
[55.55413437 114.29340363]
[42.04533386 120.81355286]
[28.53653145 127.33369446]
[15.02773190 133.85383606]
[1.51893103 140.37399292]
[-11.98986912 146.89413452]
[-13.04412842 162.21679688]
[-21.63178635 174.95053101]
[-35.44280624 181.66999817]
[-50.76209259 180.56771851]
[-63.46883392 171.94018555]
[-70.14498138 158.10816956]
[-68.99468994 142.79241943]
[-60.32736969 130.11277771]
[-46.47449875 123.48001862]
[-31.16242218 124.67831421]
[-18.51001549 133.38533020]
[-5.00121546 126.86518860]
[8.50758553 120.34503937]
[22.01638603 113.82489777]
[35.52518463 107.30474854]
[49.03398514 100.78459930]
[62.54278564 94.26445770]
[68.47455597 80.48715210]
[63.92726517 66.19302368]
[59.37997437 51.89889145]
[54.83268356 37.60476303]
[49.26420975 30.40015984]
[50.31859589 23.10644722]
[45.94775009 8.75738144]
[41.57690430 -5.59168482]
[30.59635735 -12.32348156]
[27.24133492 -24.34340286]
[32.78184128 -35.07670975]
[28.58810234 -49.47853470]
[24.39436340 -63.88035965]
[7.13780022 -69.52009583]
[-3.17039037 -84.27265167]
[-2.54318428 -102.10112000]
[8.57796669 -115.84769440]
[4.03067684 -130.14183044]
[-0.51661325 -144.43595886]
[-5.06390333 -158.73008728]
[-9.61119366 -173.02421570]
[-14.15848351 -187.31834412]
[-30.29851532 -189.47756958]
[-43.82893372 -198.43284607]
[-52.06401443 -212.34562683]
[-53.39581299 -228.39955139]
[-47.60788727 -243.37048340]
[-35.90854263 -254.27404785]
[-40.63158417 -268.51107788]
[-52.32058334 -279.17306519]
[-48.98427200 -293.68920898]
[-53.70731354 -307.92620850]
[-59.36412430 -315.06167603]
[-58.39967728 -322.36782837]
[-62.94696808 -336.66195679]
[-67.49425507 -350.95608521]
[-72.04154968 -365.25021362]
[-76.58883667 -379.54434204]
[-81.13612366 -393.83847046]
[-85.68341827 -408.13259888]
[-101.61848450 -408.70596313]
[-116.36709595 -414.69573975]
[-128.14978027 -425.35937500]
[-135.55169678 -439.39157104]
[-137.69259644 -455.08413696]
[-134.33140564 -470.53381348]
[-125.89323425 -483.87313843]
[-113.41571045 -493.49630737]
[-118.13875580 -507.73333740]
[-122.86179352 -521.97033691]
[-138.02542114 -523.03472900]
[-151.62522888 -529.82543945]
[-161.58735657 -541.30688477]
[-166.39265442 -555.72833252]
[-165.30831909 -570.89056396]
[-158.49974060 -584.48144531]
[-147.00515747 -594.42840576]
[-132.57742310 -599.21472168]
[-117.41665649 -598.11047363]
[-103.83475494 -591.28399658]
[-93.90287018 -579.77636719]
[-89.13554382 -565.34234619]
[-90.25975037 -550.18304443]
[-97.10406494 -536.61010742]
[-108.62477112 -526.69342041]
[-103.90172577 -512.45635986]
[-99.17868805 -498.21936035]
[-85.03604889 -498.24359131]
[-71.55563354 -493.89620972]
[-60.05706024 -485.58889771]
[-51.67023468 -474.12161255]
[-47.22431183 -460.60565186]
[-47.16574097 -446.35595703]
[-51.51346207 -432.76309204]
[-59.85577774 -421.15762329]
[-71.38928986 -412.67990112]
[-66.84199524 -398.38577271]
[-62.29470825 -384.09164429]
[-57.74741745 -369.79751587]
[-53.20012665 -355.50338745]
[-48.65283585 -341.20922852]
[-44.10554504 -326.91510010]
[-39.47029114 -312.64926147]
[-34.74724579 -298.41223145]
[-23.39607430 -288.76858521]
[-26.39456177 -273.23413086]
[-21.67151833 -258.99710083]
[-7.85617018 -257.90200806]
[4.53979254 -251.60877991]
[13.63344288 -241.03639221]
[18.02943039 -227.75657654]
[17.03401375 -213.76013184]
[10.76431942 -201.15859985]
[0.13564645 -191.86563110]
[4.68293667 -177.57150269]
[9.23022652 -163.27737427]
[13.77751637 -148.98324585]
[18.32480621 -134.68911743]
[22.87209702 -120.39498138]
[34.80340195 -118.33242035]
[44.79101562 -111.36045837]
[50.91223526 -100.74667358]
[51.95714951 -88.46656799]
[47.66733170 -76.83591461]
[38.79618835 -68.07409668]
[42.98992920 -53.67227554]
[47.18366623 -39.27045059]
[60.49338531 -27.81460953]
[55.92596817 -9.96253109]
[60.29681778 4.38653517]
[64.66766357 18.73560143]
[69.12681580 33.05747223]
[73.67410278 47.35160065]
[78.22139740 61.64573288]
[82.76868439 75.93985748]
[91.75645447 69.40988159]
[103.20452118 66.38365173]
[115.70290375 67.76527405]
[127.52320099 73.88148499]
[136.85598755 84.37634277]
[151.83294678 83.54517365]
[166.80989075 82.71399689]
[181.78684998 81.88282776]
[196.76380920 81.05165863]
[201.08673096 78.22663879]
[205.60964966 77.40533447]
[209.54220581 78.33214569]
[212.30754089 80.47689819]
[227.30499268 80.19971466]
[242.30242920 79.92253113]
[257.29986572 79.64534760]
[271.06118774 70.72583008]
[285.54135132 78.42369080]
[285.84439087 94.82004547]
[271.65856934 103.04771423]
[257.57705688 94.64278412]
[242.57960510 94.91996765]
[227.58216858 95.19715118]
[212.58473206 95.47433472]
[197.59497070 96.02861023]
[182.61802673 96.85977936]
[167.64106750 97.69095612]
[152.66410828 98.52212524]
[137.68716431 99.35330200]
[133.46771240 105.55380249]
[147.00970459 112.00471497]
[160.55171204 118.45562744]
[174.09370422 124.90653992]
[189.08796692 124.49180603]
[201.47000122 132.95852661]
[206.52339172 147.08166504]
[202.32328796 161.48162842]
[190.46951294 170.67338562]
[175.47726440 171.15570068]
[163.05720520 162.74488831]
[157.94018555 148.64427185]
[146.96972656 138.41444397]
[135.99926758 128.18463135]
[125.02882385 117.95481873]
[120.80937195 124.15532684]
[125.53241730 138.39234924]
[130.25546265 152.62937927]
[145.01707458 149.84042358]
[160.01870728 149.04394531]
[174.99264526 150.25418091]
[189.67166138 153.44949341]
[203.79377747 158.57287598]
[217.10699463 165.53291321]
[229.37368774 174.20536804]
[240.37496948 184.43548584]
[249.91450500 196.04069519]
[257.82202148 208.81387329]
[263.95645142 222.52708435]
[268.20828247 236.93560791]
[270.50164795 251.78228760]
[270.79562378 266.80218506]
[269.08496094 281.72723389]
[265.40017700 296.29107666]
[259.80703735 310.23382568]
[252.40534973 323.30664062]
[243.32722473 335.27624512]
[232.73466492 345.92898560]
[220.81669617 355.07476807]
[207.78602600 362.55041504]
[193.87518311 368.22247314]
[179.33244324 371.98971558]
[164.41732788 373.78491211]
[149.39602661 373.57604980]
[134.53659058 371.36685181]
[120.10420990 367.19671631]
[106.35646057 361.14007568]
[93.53867340 353.30505371]
[81.87960052 343.83142090]
[71.58731842 332.88827515]
[62.84550095 320.67092896]
[55.81015015 307.39736938]
[50.60683060 293.30450439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 219]
[11 218]
[12 217]
[13 33]
[14 32]
[15 31]
[16 30]
[18 28]
[19 27]
[34 57]
[35 56]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[58 172]
[59 171]
[60 170]
[61 169]
[63 168]
[64 167]
[65 166]
[68 164]
[69 163]
[70 162]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[85 144]
[86 143]
[88 141]
[89 140]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
[96 134]
[97 133]
[105 124]
[106 123]
[107 122]
[177 201]
[178 200]
[179 199]
[180 198]
[181 197]
[185 196]
[186 195]
[187 194]
[188 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
