%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCCACUUACCGCGAGAACGCGGAGUCCUGCGGAUGGCGCACGCGCAAACCUCCUGUGAUGCCUGCGCCUCCUGGCCCCGCCUUCCGCUCGUGGGAGUUCCGGAUGUUUAGCGUUACCAUGGAUCCUGGAGGUGCCCGCGAACACUGCUUGUCGCCUGGGCAACCGGAGAGGACGAAGCAGGACCUAGGUGGCGGCGGUGGUACCGGCUGCA\
) } def
/len { sequence length } bind def

/coor [
[93.90343475 196.54086304]
[93.68527985 181.54244995]
[93.46711731 166.54403687]
[93.24896240 151.54562378]
[93.03079987 136.54721069]
[92.81264496 121.54879761]
[87.39491272 116.36244965]
[80.39574432 129.62939453]
[73.92098999 143.16000366]
[59.16450882 145.85189819]
[48.32925797 135.47897339]
[50.37550735 120.61920166]
[63.61044312 113.56095886]
[76.55945587 105.98975372]
[71.14172363 100.80340576]
[56.14807129 101.23967743]
[41.15441513 101.67594910]
[32.67114639 105.05257416]
[25.93987274 102.00792694]
[10.94145966 102.22608948]
[-4.05695391 102.44424438]
[-17.74313545 110.38143921]
[-30.58159256 102.83006287]
[-45.58000565 103.04821777]
[-60.57841873 103.26638031]
[-75.57683563 103.48453522]
[-89.26301575 111.42172241]
[-102.10147095 103.87034607]
[-117.09988403 104.08850861]
[-132.09829712 104.30666351]
[-137.70524597 111.87918091]
[-146.04312134 115.96426392]
[-155.18815613 115.76011658]
[-163.09400940 111.43883514]
[-168.04974365 104.07965088]
[-183.04339600 103.64337921]
[-198.03706360 103.20710754]
[-206.70230103 106.08476257]
[-213.24516296 102.65388489]
[-228.23088074 101.99959564]
[-243.21661377 101.34529877]
[-258.20233154 100.69100952]
[-273.18804932 100.03672028]
[-288.17376709 99.38243103]
[-302.29830933 106.51040649]
[-314.67596436 98.22531891]
[-329.66171265 97.57102966]
[-344.64743042 96.91674042]
[-359.63751221 96.37144470]
[-374.63116455 95.93517303]
[-383.26071167 108.72322083]
[-397.44311523 114.79472351]
[-412.65280151 112.21228027]
[-424.03640747 101.79993439]
[-427.96148682 86.88024139]
[-423.17556763 72.21401215]
[-411.20578003 62.48118591]
[-395.87167358 60.78747559]
[-382.06628418 67.67333984]
[-374.19488525 80.94151306]
[-359.20123291 81.37778473]
[-352.42639160 78.43136597]
[-343.99313354 81.93101501]
[-329.00741577 82.58530426]
[-314.02169800 83.23959351]
[-300.96902466 76.06481171]
[-287.51950073 84.39670563]
[-272.53375244 85.05099487]
[-257.54803467 85.70528412]
[-242.56231689 86.35958099]
[-227.57659912 87.01387024]
[-212.59086609 87.66815948]
[-197.60078430 88.21345520]
[-182.60713196 88.64972687]
[-167.61347961 89.08599854]
[-150.36416626 77.74987793]
[-132.31645203 89.30825043]
[-117.31804657 89.09009552]
[-102.31962585 88.87193298]
[-89.70623779 80.95034790]
[-75.79499054 88.48612213]
[-60.79657745 88.26795959]
[-45.79816437 88.04980469]
[-30.79975128 87.83164978]
[-18.18635559 79.91005707]
[-4.27511215 87.44583130]
[10.72330093 87.22767639]
[25.72171402 87.00951385]
[40.71814346 86.68229675]
[55.71179962 86.24602509]
[70.70545197 85.80975342]
[82.60575104 76.67832947]
[86.90779877 62.30848694]
[91.20985413 47.93864441]
[95.51190186 33.56880188]
[99.81394958 19.19895935]
[104.11599731 4.82911730]
[108.41804504 -9.54072571]
[99.83513641 -24.78591919]
[104.83689880 -41.19802475]
[119.86011505 -48.76100540]
[123.95271301 -63.19189835]
[128.04531860 -77.62278748]
[132.13790894 -92.05368042]
[136.12545776 -106.51395416]
[140.00775146 -121.00283813]
[143.89002991 -135.49172974]
[147.77232361 -149.98060608]
[135.19947815 -158.41874695]
[126.04970551 -170.48359680]
[121.31551361 -184.86643982]
[121.51042938 -200.00714111]
[126.61330414 -214.26333618]
[136.07063293 -226.08863831]
[148.85653687 -234.20033264]
[163.58409119 -237.71849060]
[178.65579224 -236.26152039]
[192.43675232 -229.98745728]
[203.43211365 -219.57684326]
[210.44918823 -206.15896606]
[212.72682190 -191.18930054]
[210.01792908 -176.29162598]
[202.61639404 -163.08193970]
[191.32504272 -152.99311829]
[177.36868286 -147.11955261]
[162.26119995 -146.09832764]
[158.37892151 -131.60943604]
[154.49664307 -117.12055206]
[150.61434937 -102.63166809]
[151.91896057 -95.35994720]
[146.56880188 -87.96108246]
[142.47621155 -73.53018951]
[138.38360596 -59.09929657]
[134.29100037 -44.66840363]
[142.08219910 -34.40826797]
[142.54948425 -21.33899117]
[135.29844666 -10.22262192]
[122.78788757 -5.23867702]
[118.48583984 9.13116550]
[114.18379211 23.50100899]
[109.88174438 37.87084961]
[105.57969666 52.24069214]
[101.27764130 66.61053467]
[96.97559357 80.98037720]
[115.92044067 75.60811615]
[137.72038269 90.10406494]
[151.73966980 95.43882751]
[165.75894165 100.77358246]
[179.77822876 106.10834503]
[193.79751587 111.44310760]
[207.81680298 116.77787018]
[221.83609009 122.11263275]
[230.96577454 122.23944855]
[236.01953125 127.62827301]
[249.95974731 133.16636658]
[263.89996338 138.70445251]
[277.84017944 144.24255371]
[291.78039551 149.78063965]
[305.72058105 155.31874084]
[319.66079712 160.85682678]
[333.60101318 166.39491272]
[347.54122925 171.93301392]
[361.48144531 177.47109985]
[371.19876099 172.59471130]
[381.77804565 173.84342957]
[389.75698853 180.56559753]
[392.65826416 190.35853577]
[406.43148804 196.29974365]
[417.05062866 185.45547485]
[430.87173462 179.18313599]
[446.02554321 178.33100891]
[460.46267700 183.01432800]
[472.23062134 192.59973145]
[479.73785400 205.79084778]
[481.96908569 220.80371094]
[478.62258911 235.60794067]
[470.15090942 248.20140076]
[457.69976807 256.88088989]
[442.95312500 260.47262573]
[427.90527344 258.49084473]
[414.59140015 251.20353699]
[404.81204224 239.59628296]
[399.88977051 225.23886108]
[400.49029541 210.07298279]
[386.71707153 204.13179016]
[367.72442627 207.77188110]
[355.94335938 191.41131592]
[342.00314331 185.87322998]
[328.06292725 180.33512878]
[314.12271118 174.79704285]
[300.18249512 169.25894165]
[286.24227905 163.72085571]
[272.30206299 158.18276978]
[258.36187744 152.64466858]
[244.42164612 147.10658264]
[230.48144531 141.56848145]
[216.50132751 136.13191223]
[202.48204041 130.79714966]
[188.46275330 125.46239471]
[174.44346619 120.12763214]
[160.42417908 114.79286957]
[146.40490723 109.45810699]
[132.38562012 104.12334442]
[126.24198151 108.42517090]
[138.22140503 117.45254517]
[133.33752441 131.63520813]
[118.33981323 131.37284851]
[113.95469666 117.02881622]
[107.81105804 121.33064270]
[108.02921295 136.32905579]
[108.24737549 151.32746887]
[108.46553040 166.32588196]
[108.68369293 181.32429504]
[108.90184784 196.32270813]
[111.37254333 215.54627991]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[3 212]
[4 211]
[5 210]
[6 209]
[15 91]
[16 90]
[17 89]
[19 88]
[20 87]
[21 86]
[23 84]
[24 83]
[25 82]
[26 81]
[28 79]
[29 78]
[30 77]
[35 75]
[36 74]
[37 73]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[46 65]
[47 64]
[48 63]
[49 61]
[50 60]
[92 144]
[93 143]
[94 142]
[95 141]
[96 140]
[97 139]
[98 138]
[101 134]
[102 133]
[103 132]
[104 131]
[105 129]
[106 128]
[107 127]
[108 126]
[146 203]
[147 202]
[148 201]
[149 200]
[150 199]
[151 198]
[152 197]
[154 196]
[155 195]
[156 194]
[157 193]
[158 192]
[159 191]
[160 190]
[161 189]
[162 188]
[163 187]
[167 185]
[168 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
