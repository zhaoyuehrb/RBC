%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCGCGGGACGCCGGACGCGGUGCGGGGCGGAGCGGGGCGCCAAGGGGCGCGCCAGGAGCUGCGCGGGCGCUGGGAGGGAGACCAGGGCGCAGUUCCGGGCGCGUCUGAGCGGUUCUCGAGGCGUUCUCGCCUCGGUCUCUGGCGAGUGCACGGAUCAAAAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[168.74520874 543.47906494]
[165.42681885 528.85070801]
[162.10841370 514.22241211]
[158.65420532 499.62551880]
[155.06446838 485.06140137]
[151.47473145 470.49725342]
[147.88499451 455.93313599]
[139.57647705 452.60833740]
[133.65759277 445.71331787]
[131.56703186 436.72827148]
[133.90292358 427.66131592]
[140.25921631 420.59973145]
[137.48684692 405.85815430]
[134.71449280 391.11657715]
[131.94212341 376.37500000]
[129.16975403 361.63342285]
[126.39739990 346.89184570]
[123.62503052 332.15026855]
[113.66872406 321.07232666]
[118.72211456 306.07986450]
[115.94975281 291.33828735]
[113.66953278 289.64245605]
[111.93790436 286.92303467]
[111.15502167 283.38964844]
[111.63581848 279.39508057]
[113.56202698 275.40106201]
[111.89245605 260.49426270]
[110.22288513 245.58746338]
[108.55331421 230.68066406]
[106.88374329 215.77388000]
[105.21417236 200.86708069]
[103.54460144 185.96028137]
[101.73654938 171.06965637]
[99.79017639 156.19647217]
[97.84380341 141.32327271]
[95.89743042 126.45009613]
[93.95105743 111.57691193]
[91.45319366 96.78635406]
[88.40728760 82.09885406]
[85.36138153 67.41136169]
[74.98301697 55.46984100]
[79.97471619 41.43658447]
[76.92881012 26.74909210]
[73.88290405 12.06159878]
[58.38632965 5.33108664]
[50.02489090 -9.15857410]
[51.91382980 -25.61370277]
[63.11447525 -37.58932495]
[59.79608154 -52.21766281]
[56.47768784 -66.84600067]
[53.15929413 -81.47433472]
[49.84090042 -96.10267639]
[46.52250671 -110.73101044]
[43.20411301 -125.35935211]
[39.88571930 -139.98768616]
[36.56732559 -154.61602783]
[25.96877861 -166.36256409]
[30.69876099 -180.48619080]
[27.38036728 -195.11453247]
[24.06197357 -209.74285889]
[20.74358177 -224.37120056]
[17.42518806 -238.99954224]
[14.10679436 -253.62786865]
[10.78840065 -268.25622559]
[7.47000742 -282.88455200]
[4.33899021 -286.02450562]
[2.57305813 -289.63961792]
[2.15215755 -293.23416138]
[2.89469576 -296.37142944]
[4.49154568 -298.72201538]
[2.26904225 -313.55645752]
[-7.42758512 -326.05789185]
[-1.66144657 -339.79110718]
[-3.88395000 -354.62551880]
[-6.10645342 -369.45996094]
[-8.32895660 -384.29440308]
[-22.15697861 -391.33468628]
[-29.17590904 -405.17355347]
[-26.68682289 -420.48968506]
[-15.64682579 -431.39370728]
[-0.30102187 -433.69284058]
[13.44981384 -426.50296021]
[20.31820488 -412.58877563]
[17.66311455 -397.30053711]
[6.50547886 -386.51690674]
[8.72798252 -371.68246460]
[10.95048523 -356.84802246]
[13.17298889 -342.01361084]
[22.71064758 -330.57321167]
[17.10347748 -315.77896118]
[19.32598114 -300.94451904]
[22.09834480 -286.20294189]
[25.41673851 -271.57461548]
[28.73513222 -256.94625854]
[32.05352402 -242.31793213]
[35.37191772 -227.68959045]
[38.69031143 -213.06124878]
[42.00870514 -198.43292236]
[45.32709885 -183.80458069]
[55.68829346 -173.10435486]
[51.19566345 -157.93441772]
[54.51405716 -143.30607605]
[57.83245087 -128.67774963]
[61.15084457 -114.04940796]
[64.46923828 -99.42106628]
[67.78762817 -84.79273224]
[71.10602570 -70.16439056]
[74.42441559 -55.53605652]
[77.74281311 -40.90771866]
[90.46749115 -36.79418564]
[99.56333160 -26.84356117]
[102.56842804 -13.59016609]
[98.59101868 -0.48212630]
[88.57039642 9.01569462]
[91.61630249 23.70318794]
[94.66220856 38.39068222]
[104.82271576 49.28165817]
[100.04887390 64.36545563]
[103.09477997 79.05295563]
[106.14068604 93.74044800]
[108.58267975 95.63840485]
[110.37540436 98.48105621]
[111.16249084 102.02481079]
[110.68443298 105.89605713]
[108.82424164 109.63053894]
[110.77061462 124.50372314]
[112.71698761 139.37690735]
[114.66336823 154.25009155]
[116.60974121 169.12327576]
[120.84155273 177.26499939]
[118.45140076 184.29071045]
[120.12097168 199.19750977]
[121.79054260 214.10430908]
[123.46011353 229.01109314]
[125.12968445 243.91789246]
[126.79925537 258.82467651]
[128.46882629 273.73147583]
[130.69132996 288.56591797]
[133.46368408 303.30749512]
[143.61830139 315.43988037]
[138.36660767 329.37789917]
[141.13897705 344.11947632]
[143.91133118 358.86105347]
[146.68370056 373.60263062]
[149.45606995 388.34420776]
[152.22842407 403.08578491]
[155.00079346 417.82736206]
[169.95388794 433.14050293]
[162.44912720 452.34341431]
[166.03886414 466.90753174]
[169.62860107 481.47164917]
[173.21833801 496.03579712]
[178.33006287 503.65588379]
[176.73675537 510.90399170]
[180.05514526 525.53234863]
[183.37355042 540.16064453]
[198.31959534 543.08215332]
[210.78149414 551.83551025]
[218.60011292 564.90417480]
[220.42083740 580.02386475]
[215.92822266 594.57501221]
[205.90063477 606.03656006]
[192.07542419 612.42272949]
[176.84786987 612.62707520]
[162.85626221 606.61419678]
[152.52471924 595.42584229]
[147.64324951 581.00048828]
[149.05758667 565.83740234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 152]
[5 151]
[6 150]
[7 149]
[12 147]
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[18 141]
[20 139]
[21 138]
[26 137]
[27 136]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[38 120]
[39 119]
[40 118]
[42 116]
[43 115]
[44 114]
[48 109]
[49 108]
[50 107]
[51 106]
[52 105]
[53 104]
[54 103]
[55 102]
[56 101]
[58 99]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[64 93]
[65 92]
[70 91]
[71 90]
[73 88]
[74 87]
[75 86]
[76 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
