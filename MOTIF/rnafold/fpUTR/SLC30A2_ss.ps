%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGCGGGGCGCAGCGGCUGACCCGAGACACGGGAGCGCUUGGCACGCGGAGCCAGAGCCGGAGCUGCAGCCGCAGCGGGAGCCGGGGGAGCUCAGGGGCCGCAGGAGCCGGGCCGGAGUGAGCGCACCUCGCGGGGCCCUCGGGGCAGGUGGGUGAGCGCCACCCGGAGUCCCGCGCGCAACUUUCAGGGCGCACUCGGCGGGGCGGCUGCGCGGCUGCCGGGACUCGGCGCGGGACUGC\
) } def
/len { sequence length } bind def

/coor [
[-155.77702332 187.81433105]
[-170.35002136 191.36784363]
[-184.92303467 194.92135620]
[-199.49604797 198.47486877]
[-205.46195984 212.67747498]
[-218.49455261 220.55181885]
[-233.48750305 219.25750732]
[-244.70907593 209.49972534]
[-259.28207397 213.05323792]
[-273.85510254 216.60675049]
[-288.42810059 220.16026306]
[-292.91000366 236.08631897]
[-304.74847412 247.50898743]
[-320.64190674 251.37442017]
[-336.22390747 246.71826172]
[-347.26263428 234.90400696]
[-361.78848267 238.64562988]
[-376.31433105 242.38723755]
[-390.84017944 246.12886047]
[-405.36602783 249.87048340]
[-406.92245483 265.87545776]
[-419.03564453 279.77282715]
[-439.23831177 284.74560547]
[-449.46118164 295.72250366]
[-459.68408203 306.69943237]
[-469.90695190 317.67636108]
[-470.77593994 333.69583130]
[-483.92538452 342.88668823]
[-499.26815796 338.19848633]
[-505.03457642 323.22756958]
[-496.80114746 309.45840454]
[-480.88388062 307.45346069]
[-470.66098022 296.47656250]
[-460.43811035 285.49963379]
[-450.21524048 274.52270508]
[-453.40682983 267.73568726]
[-459.79000854 254.16163635]
[-462.98159790 247.37460327]
[-477.95620728 248.24678040]
[-492.93081665 249.11894226]
[-507.90545654 249.99111938]
[-522.87414551 250.96006775]
[-537.83624268 252.02575684]
[-552.79833984 253.09146118]
[-567.76043701 254.15715027]
[-576.77209473 263.36535645]
[-589.24176025 263.95596313]
[-598.47094727 256.15698242]
[-613.44555664 257.02914429]
[-628.42016602 257.90130615]
[-643.39477539 258.77349854]
[-653.87561035 270.29693604]
[-669.07446289 270.96813965]
[-679.99572754 260.90524292]
[-694.97033691 261.77743530]
[-705.28839111 273.74874878]
[-721.05535889 274.83444214]
[-732.91693115 264.39038086]
[-733.83587646 248.61283875]
[-723.26696777 236.86235046]
[-707.48059082 236.11027527]
[-695.84246826 246.80281067]
[-680.86785889 245.93063354]
[-671.18865967 234.66790771]
[-656.01470947 233.57008362]
[-644.26696777 243.79887390]
[-629.29235840 242.92669678]
[-614.31768799 242.05451965]
[-599.34307861 241.18235779]
[-585.20874023 230.76570129]
[-568.82611084 239.19505310]
[-553.86401367 238.12936401]
[-538.90191650 237.06367493]
[-523.93981934 235.99797058]
[-517.50506592 232.39550781]
[-508.77761841 235.01649475]
[-493.80300903 234.14431763]
[-478.82836914 233.27215576]
[-463.85375977 232.39997864]
[-443.45361328 218.11564636]
[-421.58947754 220.80113220]
[-409.10763550 235.34463501]
[-394.58178711 231.60301208]
[-380.05593872 227.86138916]
[-365.53009033 224.11978149]
[-351.00424194 220.37815857]
[-348.22143555 207.01924133]
[-339.91802979 196.10743713]
[-327.66680908 189.80354309]
[-313.82904053 189.38659668]
[-301.09948730 194.99473572]
[-291.98159790 205.58726501]
[-277.40859985 202.03373718]
[-262.83560181 198.48022461]
[-248.26258850 194.92671204]
[-242.79222107 181.09873962]
[-230.07792664 173.04823303]
[-214.88349915 174.03962708]
[-203.04956055 183.90187073]
[-188.47654724 180.34835815]
[-173.90354919 176.79484558]
[-159.33053589 173.24133301]
[-144.78080750 169.59368896]
[-130.25495911 165.85206604]
[-115.72910309 162.11044312]
[-101.20325470 158.36883545]
[-96.27712250 146.47587585]
[-85.23926544 139.48167419]
[-71.99312592 140.12451172]
[-61.37751007 148.39360046]
[-46.80450439 144.84008789]
[-32.23149872 141.28657532]
[-21.69949532 130.75442505]
[-6.45918846 135.00219727]
[8.11381912 131.44868469]
[22.68682671 127.89517212]
[37.25983429 124.34165955]
[43.00128937 119.71355438]
[52.04420471 120.83769989]
[66.66193390 117.47287750]
[81.27966309 114.10806274]
[79.08346558 93.96639252]
[92.85799408 81.21424866]
[109.83970642 84.42150116]
[122.31848145 76.09803009]
[134.79725647 67.77455902]
[147.27603149 59.45108414]
[152.66398621 52.10206985]
[159.97036743 51.10188293]
[172.55570984 42.94043350]
[185.14103699 34.77898026]
[197.17289734 25.82160187]
[208.60099792 16.10571289]
[220.02909851 6.38982201]
[231.45719910 -3.32606769]
[242.88529968 -13.04195786]
[254.31340027 -22.75784683]
[265.74148560 -32.47373581]
[277.16958618 -42.18962860]
[278.98181152 -54.94569778]
[288.68231201 -62.80327606]
[300.73742676 -61.98085022]
[312.29016113 -71.54818726]
[323.84292603 -81.11551666]
[335.39566040 -90.68285370]
[346.94842529 -100.25019073]
[347.33572388 -111.09326935]
[353.48980713 -119.76154327]
[363.19015503 -123.54315948]
[373.15832520 -121.41840363]
[384.95455933 -130.68385315]
[396.75079346 -139.94931030]
[408.54702759 -149.21476746]
[410.18344116 -164.93411255]
[422.50830078 -174.82722473]
[438.20947266 -173.02470398]
[447.97171021 -160.59596252]
[446.00329590 -144.91473389]
[433.47204590 -135.28442383]
[417.81250000 -137.41851807]
[406.01626587 -128.15306091]
[394.22000122 -118.88761139]
[382.42376709 -109.62216187]
[376.53323364 -91.19216919]
[356.51574707 -88.69744110]
[344.96301270 -79.13010406]
[333.41024780 -69.56276703]
[321.85751343 -59.99542999]
[310.30474854 -50.42809677]
[305.07919312 -33.66564941]
[286.88549805 -30.76152611]
[275.45739746 -21.04563713]
[264.02929688 -11.32974720]
[252.60118103 -1.61385715]
[241.17308044 8.10203266]
[229.74497986 17.81792259]
[218.31687927 27.53381348]
[206.88877869 37.24970245]
[221.83111572 35.93574905]
[235.46466064 42.19087601]
[244.21414185 54.37474442]
[245.78509521 69.29225159]
[239.76556396 83.03144073]
[227.73410034 91.98933411]
[212.84584045 93.81682587]
[199.00508118 88.03466797]
[189.84141541 76.15917969]
[187.75793457 61.30458069]
[193.30249023 47.36431885]
[180.71716309 55.52576828]
[168.13182068 63.68722153]
[155.59950256 71.92985535]
[143.12072754 80.25332642]
[130.64195251 88.57680511]
[118.16318512 96.90027618]
[118.40128326 109.98013306]
[109.29754639 121.51845551]
[120.34031677 131.67016602]
[131.38308716 141.82188416]
[142.42585754 151.97360229]
[153.46862793 162.12530518]
[164.51139832 172.27702332]
[175.55416870 182.42872620]
[186.59693909 192.58044434]
[204.66435242 196.18785095]
[209.23600769 213.14031982]
[220.40908813 223.14842224]
[231.58218384 233.15652466]
[247.73411560 235.99322510]
[253.09846497 251.49018860]
[242.15684509 263.70544434]
[226.16505432 260.07302856]
[221.57408142 244.32960510]
[210.40098572 234.32150269]
[199.22790527 224.31340027]
[187.14997864 224.66777039]
[177.76147461 216.43995667]
[176.44522095 203.62321472]
[165.40245056 193.47149658]
[154.35968018 183.31979370]
[143.31690979 173.16807556]
[132.27413940 163.01635742]
[121.23137665 152.86465454]
[110.18860626 142.71293640]
[99.14583588 132.56123352]
[84.64447784 128.72578430]
[70.02674866 132.09060669]
[55.40901947 135.45542908]
[40.81334686 138.91465759]
[26.24033928 142.46818542]
[11.66733265 146.02169800]
[-2.90567398 149.57521057]
[-14.48003387 160.36152649]
[-28.67798233 155.85958862]
[-43.25099182 159.41310120]
[-57.82399750 162.96661377]
[-66.64629364 178.08428955]
[-83.34619141 182.05529785]
[-97.46163940 172.89468384]
[-111.98748779 176.63630676]
[-126.51333618 180.37791443]
[-141.03918457 184.11953735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 102]
[2 101]
[3 100]
[4 99]
[8 95]
[9 94]
[10 93]
[11 92]
[16 86]
[17 85]
[18 84]
[19 83]
[20 82]
[23 35]
[24 34]
[25 33]
[26 32]
[38 79]
[39 78]
[40 77]
[41 76]
[42 74]
[43 73]
[44 72]
[45 71]
[48 69]
[49 68]
[50 67]
[51 66]
[54 63]
[55 62]
[103 242]
[104 241]
[105 240]
[106 239]
[110 236]
[111 235]
[112 234]
[114 232]
[115 231]
[116 230]
[117 229]
[119 228]
[120 227]
[121 226]
[124 195]
[125 194]
[126 193]
[127 192]
[129 191]
[130 190]
[131 189]
[132 178]
[133 177]
[134 176]
[135 175]
[136 174]
[137 173]
[138 172]
[139 171]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[150 163]
[151 162]
[152 161]
[153 160]
[197 225]
[198 224]
[199 223]
[200 222]
[201 221]
[202 220]
[203 219]
[204 218]
[206 215]
[207 214]
[208 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
