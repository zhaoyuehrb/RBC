%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LOC100505841)
} def

/sequence { (\
AUCUUUCCUUGGUGCCAACCAUGCCUGCAUAUCAGGGCAGCAUUCUAUGAUCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.028789662 ubox
1 22 0.003802733 ubox
1 43 0.019483306 ubox
1 48 0.013673467 ubox
1 51 0.258210828 ubox
2 12 0.030433955 ubox
2 42 0.022290489 ubox
2 47 0.013428496 ubox
2 50 0.302933191 ubox
3 11 0.036463794 ubox
3 12 0.017139913 ubox
3 40 0.042567430 ubox
3 49 0.310634229 ubox
4 11 0.017758822 ubox
4 39 0.039819468 ubox
4 40 0.032398500 ubox
4 50 0.038931941 ubox
5 11 0.005145271 ubox
5 39 0.038037671 ubox
5 40 0.024818861 ubox
5 49 0.040717489 ubox
5 50 0.040274749 ubox
6 12 0.003196242 ubox
6 37 0.023890480 ubox
6 39 0.030524997 ubox
6 49 0.040778906 ubox
6 50 0.148331830 ubox
7 11 0.006807099 ubox
7 36 0.027117808 ubox
7 37 0.087012080 ubox
7 49 0.158298281 ubox
8 35 0.027112868 ubox
8 36 0.087602822 ubox
8 40 0.022184785 ubox
9 18 0.022503088 ubox
9 34 0.024178657 ubox
9 35 0.087518043 ubox
9 39 0.017032806 ubox
9 40 0.005372785 ubox
9 50 0.021226888 ubox
10 17 0.026408354 ubox
10 21 0.760710455 ubox
10 34 0.088036628 ubox
10 42 0.287170520 ubox
10 47 0.072142596 ubox
10 49 0.021238748 ubox
11 16 0.026949824 ubox
11 20 0.903525005 ubox
11 25 0.004091662 ubox
11 33 0.088426477 ubox
11 41 0.297008384 ubox
11 44 0.194575751 ubox
11 45 0.095768293 ubox
11 46 0.071889507 ubox
11 48 0.009279448 ubox
11 52 0.035951878 ubox
11 53 0.075735579 ubox
11 54 0.022934105 ubox
12 19 0.903753987 ubox
12 22 0.006379182 ubox
12 24 0.004167001 ubox
12 30 0.053222162 ubox
12 32 0.071024348 ubox
12 41 0.010871124 ubox
12 43 0.248828131 ubox
12 44 0.068364266 ubox
12 45 0.068010027 ubox
12 48 0.010566323 ubox
12 51 0.036363130 ubox
12 52 0.075878729 ubox
12 53 0.023047953 ubox
13 18 0.894701879 ubox
13 21 0.007623291 ubox
13 23 0.004080578 ubox
13 29 0.066903737 ubox
13 31 0.060340011 ubox
13 39 0.297262077 ubox
13 40 0.008391303 ubox
13 42 0.268784470 ubox
13 47 0.011255725 ubox
13 50 0.038377732 ubox
14 20 0.008354534 ubox
14 24 0.010822671 ubox
14 28 0.074345615 ubox
14 30 0.047784856 ubox
14 38 0.297766802 ubox
14 41 0.271509938 ubox
14 46 0.010583675 ubox
14 48 0.004193254 ubox
15 23 0.010565539 ubox
15 27 0.069725908 ubox
15 36 0.011633512 ubox
15 37 0.297526285 ubox
15 40 0.271415386 ubox
16 23 0.041298829 ubox
16 27 0.050994063 ubox
16 35 0.016396051 ubox
16 36 0.287562409 ubox
16 49 0.040758164 ubox
17 22 0.036283222 ubox
17 26 0.056424493 ubox
17 44 0.013639662 ubox
17 48 0.039657217 ubox
18 43 0.014028400 ubox
19 36 0.017177649 ubox
19 37 0.006193749 ubox
20 27 0.016638754 ubox
20 35 0.021043170 ubox
20 36 0.005132618 ubox
20 49 0.010788372 ubox
21 26 0.014679718 ubox
21 30 0.244069715 ubox
21 32 0.073955461 ubox
21 43 0.333245235 ubox
21 48 0.011544171 ubox
22 29 0.258359329 ubox
22 31 0.077223026 ubox
22 34 0.012586835 ubox
22 39 0.735730037 ubox
22 42 0.451544290 ubox
22 47 0.008598979 ubox
23 28 0.257933169 ubox
23 30 0.069983238 ubox
23 33 0.012845809 ubox
23 38 0.808269860 ubox
23 41 0.483542203 ubox
23 46 0.006060634 ubox
24 36 0.158952897 ubox
24 37 0.799369796 ubox
24 40 0.342980477 ubox
25 35 0.212744820 ubox
25 36 0.790172702 ubox
25 37 0.003729778 ubox
25 40 0.353436108 ubox
26 34 0.244607586 ubox
26 35 0.777820384 ubox
26 36 0.003958594 ubox
26 39 0.491083330 ubox
26 42 0.005302203 ubox
27 33 0.252570129 ubox
27 38 0.492656923 ubox
27 41 0.005872112 ubox
28 37 0.492545361 ubox
28 40 0.005868711 ubox
31 51 0.010271875 ubox
32 50 0.011240704 ubox
33 49 0.011423561 ubox
34 48 0.011126386 ubox
35 45 0.003430773 ubox
35 46 0.008627953 ubox
35 53 0.020921120 ubox
35 54 0.019056338 ubox
36 44 0.003307359 ubox
36 45 0.009708199 ubox
36 46 0.004410307 ubox
36 52 0.021072540 ubox
36 53 0.019535584 ubox
36 54 0.004030280 ubox
37 44 0.007732135 ubox
37 45 0.005119691 ubox
37 51 0.021192268 ubox
37 52 0.019677956 ubox
37 53 0.007838275 ubox
38 49 0.046899208 ubox
39 46 0.038719862 ubox
39 48 0.048490297 ubox
40 45 0.046681177 ubox
41 49 0.260902841 ubox
42 48 0.256521736 ubox
42 51 0.066888530 ubox
43 47 0.227576044 ubox
43 50 0.071969705 ubox
44 49 0.065872943 ubox
44 50 0.097822172 ubox
45 49 0.104194878 ubox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
22 39 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
showpage
end
%%EOF
