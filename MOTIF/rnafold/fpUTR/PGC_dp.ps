%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PGC)
} def

/sequence { (\
CUUCACUCCACUGCGACUGCAGAACUCAGAGCUGCUCUUCCUCUGUGGCCAGUUGGGGACCAGCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.018452715 ubox
1 29 0.039433396 ubox
1 31 0.014683226 ubox
1 58 0.028794257 ubox
1 63 0.256725070 ubox
2 21 0.018155191 ubox
2 23 0.005573137 ubox
2 24 0.015192583 ubox
2 28 0.038038013 ubox
2 29 0.013164801 ubox
2 30 0.036718249 ubox
2 31 0.024111411 ubox
2 57 0.028569586 ubox
2 58 0.003219829 ubox
2 59 0.025657444 ubox
2 62 0.253479011 ubox
2 63 0.043991877 ubox
3 21 0.003358447 ubox
3 23 0.017742201 ubox
3 28 0.014697629 ubox
3 29 0.034760766 ubox
3 30 0.233953494 ubox
3 56 0.028060174 ubox
3 58 0.020018967 ubox
3 59 0.143059323 ubox
3 62 0.048915106 ubox
4 15 0.003172078 ubox
4 19 0.019391498 ubox
4 22 0.014366458 ubox
4 29 0.245343229 ubox
4 55 0.028169901 ubox
4 57 0.018572789 ubox
4 58 0.151687713 ubox
5 18 0.019228426 ubox
5 53 0.005315803 ubox
5 54 0.027507040 ubox
6 22 0.005489864 ubox
6 29 0.091332529 ubox
6 31 0.033372590 ubox
6 52 0.007325618 ubox
6 56 0.013139264 ubox
6 57 0.172009231 ubox
6 58 0.744807388 ubox
6 63 0.013519896 ubox
7 16 0.019828086 ubox
7 21 0.004731484 ubox
7 23 0.030815776 ubox
7 28 0.089004050 ubox
7 30 0.056752329 ubox
7 51 0.006801402 ubox
7 55 0.009537759 ubox
7 56 0.154963989 ubox
7 57 0.749507226 ubox
7 58 0.017809694 ubox
7 59 0.023008956 ubox
7 62 0.012610778 ubox
8 15 0.020201751 ubox
8 22 0.025511500 ubox
8 29 0.058515779 ubox
8 48 0.010314235 ubox
8 55 0.154762549 ubox
8 56 0.756108561 ubox
8 57 0.021899220 ubox
8 58 0.024790304 ubox
9 19 0.004289542 ubox
9 47 0.010393865 ubox
9 55 0.756069657 ubox
9 56 0.021404951 ubox
9 57 0.024705463 ubox
10 18 0.004022554 ubox
10 46 0.010022434 ubox
10 53 0.555015011 ubox
10 54 0.534354647 ubox
11 22 0.628103727 ubox
11 29 0.005632683 ubox
11 45 0.008803303 ubox
11 52 0.771126696 ubox
11 56 0.009017348 ubox
11 58 0.021131294 ubox
12 21 0.632245575 ubox
12 28 0.005497164 ubox
12 51 0.771102656 ubox
12 55 0.007225326 ubox
12 57 0.021186849 ubox
13 20 0.632981313 ubox
13 27 0.005243533 ubox
13 32 0.004332766 ubox
13 49 0.053568132 ubox
13 50 0.768527388 ubox
13 53 0.047282021 ubox
13 54 0.004514933 ubox
14 19 0.632071850 ubox
14 31 0.004343338 ubox
14 47 0.004935667 ubox
14 48 0.071397086 ubox
14 52 0.048739025 ubox
14 55 0.022050327 ubox
15 39 0.003853890 ubox
15 40 0.006219473 ubox
15 54 0.022444366 ubox
16 38 0.004206138 ubox
16 39 0.005834019 ubox
16 46 0.042908500 ubox
16 53 0.022738021 ubox
17 29 0.011426187 ubox
17 45 0.035515006 ubox
17 48 0.767978826 ubox
17 52 0.022675127 ubox
18 28 0.011510938 ubox
18 47 0.767311535 ubox
18 51 0.022541076 ubox
19 27 0.011460142 ubox
19 35 0.015499278 ubox
19 46 0.770315323 ubox
19 49 0.008637077 ubox
19 50 0.019053436 ubox
20 34 0.015542693 ubox
20 45 0.772595535 ubox
20 48 0.011472219 ubox
21 33 0.015533808 ubox
21 42 0.005382968 ubox
21 44 0.772854865 ubox
22 32 0.015474907 ubox
22 40 0.019458364 ubox
22 41 0.005479169 ubox
22 43 0.772912203 ubox
23 39 0.019973104 ubox
23 42 0.758079678 ubox
23 54 0.004653468 ubox
24 38 0.012233729 ubox
24 53 0.005619942 ubox
25 31 0.007329348 ubox
25 48 0.008769637 ubox
25 52 0.005728946 ubox
25 57 0.006117778 ubox
26 30 0.008992444 ubox
26 47 0.008352713 ubox
26 51 0.005560846 ubox
26 56 0.006191213 ubox
27 34 0.009199414 ubox
27 45 0.019636727 ubox
27 55 0.006261290 ubox
28 33 0.008324724 ubox
28 36 0.033928064 ubox
28 38 0.746708642 ubox
28 39 0.023672663 ubox
28 42 0.003494892 ubox
28 44 0.020233194 ubox
28 54 0.006174872 ubox
29 35 0.035063251 ubox
29 37 0.770551557 ubox
29 38 0.006636221 ubox
29 39 0.024426159 ubox
29 40 0.025902609 ubox
29 41 0.004957448 ubox
29 43 0.020318321 ubox
29 53 0.005692741 ubox
29 67 0.298475344 ubox
30 36 0.769500499 ubox
30 38 0.025584843 ubox
30 39 0.025763455 ubox
30 42 0.020323561 ubox
30 54 0.003592438 ubox
30 66 0.300542018 ubox
31 35 0.752572694 ubox
31 37 0.025640658 ubox
31 38 0.020739023 ubox
31 41 0.020185801 ubox
31 49 0.014954356 ubox
31 53 0.004845194 ubox
31 64 0.629836585 ubox
32 48 0.015003756 ubox
32 52 0.004965112 ubox
32 63 0.631034024 ubox
33 47 0.014945573 ubox
33 51 0.004964894 ubox
33 62 0.630869508 ubox
33 65 0.047653149 ubox
34 46 0.014968499 ubox
34 50 0.004521069 ubox
34 61 0.629962413 ubox
34 64 0.052833449 ubox
35 45 0.014996765 ubox
35 58 0.012089845 ubox
35 63 0.052843628 ubox
36 57 0.012142259 ubox
36 58 0.004299113 ubox
36 59 0.618237339 ubox
36 62 0.051455159 ubox
37 47 0.003655631 ubox
37 56 0.012060714 ubox
37 57 0.004986117 ubox
37 58 0.628265647 ubox
38 55 0.011791248 ubox
38 56 0.004228296 ubox
38 57 0.618663279 ubox
38 58 0.020263831 ubox
38 59 0.051210478 ubox
39 56 0.608724785 ubox
39 57 0.104938383 ubox
39 58 0.051970367 ubox
39 59 0.052485874 ubox
40 48 0.005664582 ubox
40 55 0.609165449 ubox
40 56 0.147922942 ubox
40 57 0.054554285 ubox
40 58 0.053201291 ubox
41 47 0.005879645 ubox
41 52 0.007779749 ubox
41 55 0.148292000 ubox
41 56 0.054697413 ubox
41 57 0.053203194 ubox
42 51 0.007688081 ubox
42 55 0.050603772 ubox
42 56 0.052527379 ubox
43 52 0.630751869 ubox
43 55 0.049148529 ubox
43 56 0.007673980 ubox
44 51 0.630556914 ubox
44 55 0.007657824 ubox
45 50 0.626141055 ubox
45 53 0.007952603 ubox
45 54 0.009933518 ubox
46 52 0.011828185 ubox
46 62 0.005861855 ubox
47 61 0.006753691 ubox
48 60 0.006756505 ubox
49 56 0.003528351 ubox
49 58 0.006769876 ubox
50 55 0.003562971 ubox
50 57 0.006759975 ubox
52 64 0.020971606 ubox
53 63 0.021094765 ubox
54 62 0.021762551 ubox
55 61 0.021895397 ubox
56 60 0.021542583 ubox
58 67 0.013373980 ubox
59 66 0.016805646 ubox
6 58 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
11 52 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
17 48 0.9500000 lbox
18 47 0.9500000 lbox
19 46 0.9500000 lbox
20 45 0.9500000 lbox
21 44 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
31 35 0.9500000 lbox
showpage
end
%%EOF
