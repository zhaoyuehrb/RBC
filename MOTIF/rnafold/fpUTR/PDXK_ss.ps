%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAACUCGCGGGUUCGGAGCCGCCCGCUGAGGUCAGAAGGAGGCGUCUGCGCUGAUCGGGUCCGCCGCGCGCCAGAGCCAGAGUCGCAGCCGAGGGGAGCCGGGGCCGGAGCCCGAGCCCGAGCCGAGCCGGAGCCCGAGCGAGCGGCGGAGACCGUGCCCCCGCCUCGGCCCCGCGCCGCCGCGGCCAGGCCCGGC\
) } def
/len { sequence length } bind def

/coor [
[78.36088562 132.82418823]
[79.85692596 117.89897919]
[72.36066437 117.66221619]
[63.89224243 130.04307556]
[62.48749161 145.80180359]
[48.91586304 151.93858337]
[40.44743729 164.31945801]
[31.97901344 176.70031738]
[23.60857773 189.14764404]
[15.33665562 201.66064453]
[7.06473303 214.17364502]
[-1.20718980 226.68664551]
[-9.47911263 239.19966125]
[-17.75103569 251.71266174]
[-12.18265057 266.19619751]
[-16.22345352 281.17788696]
[-28.31967545 290.89700317]
[-43.82006836 291.61633301]
[-56.76441956 283.05926514]
[-62.17535782 268.51617432]
[-57.97226715 253.57917786]
[-45.77132416 243.99186707]
[-30.26403999 243.44073486]
[-21.99211693 230.92773438]
[-13.72019482 218.41473389]
[-5.44827223 205.90171814]
[2.82365036 193.38871765]
[11.09557343 180.87571716]
[12.16273403 173.55503845]
[19.59815025 168.23188782]
[28.06657410 155.85102844]
[36.53499985 143.47016907]
[37.33403397 128.59700012]
[51.51137924 121.57465363]
[59.97980499 109.19378662]
[64.65503693 99.38445282]
[71.36300659 92.36238098]
[79.04771423 88.44841766]
[86.63739777 87.62397003]
[93.14408112 89.54671478]
[97.75360870 93.59378052]
[100.34537506 78.81938934]
[102.93714142 64.04499054]
[105.52890778 49.27059937]
[108.12066650 34.49620438]
[110.71243286 19.72180748]
[100.09655762 8.55895233]
[98.11248016 -6.53796196]
[105.31327820 -19.75206184]
[118.75344086 -26.11603546]
[121.34520721 -40.89043045]
[123.93697357 -55.66482544]
[126.52873230 -70.43922424]
[112.91342926 -64.14450836]
[99.43116760 -70.71935272]
[96.00747681 -85.32341003]
[105.16284943 -97.20528412]
[120.15718079 -97.61765289]
[129.95181274 -86.25677490]
[133.70050049 -100.78079987]
[128.35784912 -118.39814758]
[141.12057495 -130.43696594]
[144.63952637 -145.01837158]
[148.15847778 -159.59976196]
[151.67742920 -174.18115234]
[155.19636536 -188.76254272]
[158.71531677 -203.34393311]
[162.23426819 -217.92532349]
[165.75320435 -232.50671387]
[161.46931458 -247.73690796]
[171.97645569 -258.29385376]
[175.49540710 -272.87524414]
[179.01435852 -287.45663452]
[171.22932434 -274.63504028]
[158.52291870 -266.66339111]
[143.59126282 -265.23312378]
[129.60263062 -270.64770508]
[119.52517700 -281.75830078]
[115.49720001 -296.20736694]
[118.37337494 -310.92904663]
[127.54341888 -322.79959106]
[141.06158447 -329.30029297]
[156.05952454 -329.05178833]
[169.35490417 -322.10678101]
[178.12657166 -309.93911743]
[173.46879578 -324.19763184]
[168.81103516 -338.45614624]
[156.25199890 -349.00143433]
[159.37103271 -365.10122681]
[174.95953369 -370.19345093]
[186.98138428 -359.03967285]
[183.06953430 -343.11392212]
[187.72731018 -328.85540771]
[192.38508606 -314.59689331]
[203.52264404 -319.86898804]
[214.36395264 -318.57263184]
[222.23674011 -331.34051514]
[230.10952759 -344.10842896]
[226.67939758 -359.30291748]
[234.84539795 -372.13922119]
[249.35214233 -375.31567383]
[257.22491455 -388.08358765]
[265.09771729 -400.85147095]
[272.97048950 -413.61938477]
[280.53875732 -426.57012939]
[287.79821777 -439.69641113]
[295.05770874 -452.82272339]
[302.21334839 -466.00592041]
[309.26473999 -479.24520874]
[316.31610107 -492.48446655]
[317.59060669 -501.53967285]
[323.58471680 -505.87579346]
[330.84417725 -519.00207520]
[330.00134277 -535.37957764]
[343.90850830 -544.06994629]
[358.25918579 -536.13330078]
[358.29061890 -519.73419189]
[343.97048950 -511.74261475]
[336.71099854 -498.61630249]
[329.55535889 -485.43310547]
[322.50399780 -472.19384766]
[315.45263672 -458.95455933]
[315.08264160 -451.56576538]
[308.18402100 -445.56323242]
[300.92453003 -432.43695068]
[293.66503906 -419.31063843]
[294.28936768 -415.83099365]
[293.25311279 -411.87576294]
[290.35110474 -408.23147583]
[285.73840332 -405.74661255]
[277.86560059 -392.97869873]
[269.99282837 -380.21081543]
[262.12005615 -367.44290161]
[265.79626465 -353.05468750]
[257.99404907 -339.99404907]
[242.87742615 -336.23565674]
[235.00463867 -323.46774292]
[227.13185120 -310.69985962]
[230.67262268 -291.97598267]
[215.34327698 -277.89840698]
[193.59574890 -283.93768311]
[190.07679749 -269.35629272]
[186.55784607 -254.77491760]
[191.09344482 -240.58767700]
[180.33460999 -228.98777771]
[176.81565857 -214.40638733]
[173.29670715 -199.82498169]
[169.77775574 -185.24359131]
[166.25881958 -170.66220093]
[162.73986816 -156.08081055]
[159.22091675 -141.49942017]
[155.70196533 -126.91802216]
[161.74209595 -116.43030548]
[158.92260742 -104.24871063]
[148.22453308 -97.03210449]
[144.47583008 -82.50807953]
[141.30313110 -67.84745789]
[138.71136475 -53.07305908]
[136.11959839 -38.29866409]
[133.52783203 -23.52426910]
[143.99937439 -12.96563816]
[146.27253723 1.91040933]
[139.26835632 15.43057919]
[125.48683167 22.31357384]
[122.89506531 37.08797073]
[120.30329895 51.86236572]
[117.71153259 66.63675690]
[115.11976624 81.41115570]
[112.52799988 96.18554688]
[115.23630524 110.93902588]
[122.90654755 123.82962036]
[130.57679749 136.72021484]
[138.24703979 149.61079407]
[146.22035217 162.31616211]
[154.49227905 174.82916260]
[162.76420593 187.34217834]
[171.03613281 199.85517883]
[179.30804443 212.36817932]
[194.21376038 219.20571899]
[195.47550964 235.55625916]
[181.79533386 244.59976196]
[167.24621582 237.03305054]
[166.79504395 220.64010620]
[158.52311707 208.12710571]
[150.25120544 195.61408997]
[141.97927856 183.10108948]
[133.70735168 170.58808899]
[130.33422852 169.52995300]
[127.30857849 166.77983093]
[125.42259216 162.52006531]
[125.35644531 157.28105164]
[117.68620300 144.39045715]
[110.01596069 131.49986267]
[102.34571838 118.60926819]
[94.84944916 118.37250519]
[95.40065002 133.36238098]
[98.72351837 147.98970032]
[86.15221405 156.17274475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 35]
[4 34]
[6 32]
[7 31]
[8 30]
[9 28]
[10 27]
[11 26]
[12 25]
[13 24]
[14 23]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[46 164]
[50 160]
[51 159]
[52 158]
[53 157]
[59 156]
[60 155]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[71 143]
[72 142]
[73 141]
[85 94]
[86 93]
[87 92]
[96 138]
[97 137]
[98 136]
[101 133]
[102 132]
[103 131]
[104 130]
[105 126]
[106 125]
[107 124]
[108 122]
[109 121]
[110 120]
[112 119]
[113 118]
[170 194]
[171 193]
[172 192]
[173 191]
[174 187]
[175 186]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
