%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:58:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SEC61B)
} def

/sequence { (\
GCCAGCUGCCGGUCUUUCGGGGGCUCCGUAACUUUCUAUCCGUCCGCGUCAGCGCCUUGCCACCCUCAUCUCCAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.069978766 ubox
1 13 0.059122210 ubox
1 24 0.009300096 ubox
1 29 0.509679502 ubox
1 43 0.015521041 ubox
1 47 0.025324339 ubox
1 53 0.032770071 ubox
1 55 0.080656342 ubox
1 60 0.223866694 ubox
2 8 0.070072822 ubox
2 12 0.064695751 ubox
2 23 0.009237402 ubox
2 28 0.527504480 ubox
2 42 0.016938729 ubox
2 46 0.025287725 ubox
2 52 0.032714687 ubox
2 54 0.079373848 ubox
2 59 0.222509612 ubox
3 11 0.064712936 ubox
3 22 0.008829362 ubox
3 59 0.040008504 ubox
4 15 0.006951493 ubox
4 25 0.910812796 ubox
4 33 0.003790792 ubox
4 57 0.062781238 ubox
4 58 0.034489429 ubox
4 66 0.032399269 ubox
4 71 0.051540085 ubox
5 13 0.013033921 ubox
5 14 0.007371000 ubox
5 24 0.963522837 ubox
5 32 0.003519493 ubox
5 47 0.005405186 ubox
5 49 0.004111078 ubox
5 53 0.082858481 ubox
5 55 0.023687012 ubox
5 56 0.057415299 ubox
5 57 0.017727514 ubox
5 60 0.115343002 ubox
5 65 0.034391715 ubox
5 70 0.054895039 ubox
6 12 0.015066976 ubox
6 22 0.003423083 ubox
6 23 0.963806521 ubox
6 46 0.005400071 ubox
6 48 0.004138295 ubox
6 52 0.083152440 ubox
6 54 0.026748028 ubox
6 59 0.115542235 ubox
7 11 0.013579905 ubox
7 21 0.004368473 ubox
7 22 0.960685108 ubox
7 30 0.004106276 ubox
7 51 0.083093123 ubox
7 54 0.048577172 ubox
7 59 0.003586182 ubox
7 62 0.035092448 ubox
7 68 0.060196754 ubox
7 74 0.009063062 ubox
8 29 0.004290552 ubox
8 47 0.003874608 ubox
8 49 0.013174464 ubox
8 50 0.081845121 ubox
8 53 0.053806785 ubox
8 55 0.024479007 ubox
8 58 0.012318056 ubox
8 60 0.127045297 ubox
8 61 0.031320128 ubox
8 67 0.061976819 ubox
8 73 0.009533114 ubox
9 20 0.964858731 ubox
9 21 0.004878782 ubox
9 28 0.004242503 ubox
9 46 0.003342578 ubox
9 48 0.066996768 ubox
9 52 0.053552728 ubox
9 54 0.022526330 ubox
9 59 0.129311250 ubox
10 19 0.964978321 ubox
10 20 0.004219795 ubox
10 42 0.004855105 ubox
10 46 0.069985660 ubox
10 48 0.024604148 ubox
10 54 0.014396208 ubox
10 59 0.016051025 ubox
11 17 0.004273115 ubox
11 18 0.963172515 ubox
11 25 0.003490879 ubox
11 41 0.004929696 ubox
11 45 0.070064209 ubox
11 47 0.023798458 ubox
11 50 0.050295797 ubox
11 53 0.016482702 ubox
11 56 0.195963718 ubox
11 57 0.017136406 ubox
11 61 0.020192795 ubox
11 64 0.070357845 ubox
11 65 0.019477337 ubox
11 70 0.011591251 ubox
11 71 0.005823102 ubox
11 72 0.004332497 ubox
11 73 0.090512014 ubox
12 16 0.013957652 ubox
12 17 0.853670922 ubox
12 24 0.004830275 ubox
12 40 0.004928309 ubox
12 44 0.069945454 ubox
12 47 0.006461988 ubox
12 49 0.049718977 ubox
12 53 0.028373765 ubox
12 55 0.196350600 ubox
12 56 0.016529758 ubox
12 60 0.020211933 ubox
12 63 0.070476678 ubox
12 64 0.019307498 ubox
12 69 0.011574614 ubox
12 70 0.006322965 ubox
12 71 0.003787998 ubox
12 72 0.090554160 ubox
13 23 0.004924440 ubox
13 42 0.012458770 ubox
13 46 0.007524702 ubox
13 52 0.012855093 ubox
13 54 0.194665581 ubox
13 59 0.019474079 ubox
13 62 0.068514767 ubox
13 68 0.011274033 ubox
14 22 0.004955803 ubox
14 52 0.191897948 ubox
15 21 0.004865925 ubox
15 31 0.012149053 ubox
15 51 0.190529567 ubox
15 52 0.032783953 ubox
16 20 0.003584865 ubox
16 30 0.010846683 ubox
16 31 0.008959886 ubox
16 51 0.033373255 ubox
16 52 0.003959271 ubox
17 30 0.009465846 ubox
17 51 0.003710825 ubox
18 28 0.030496026 ubox
18 42 0.040577435 ubox
18 46 0.011482501 ubox
18 48 0.208760016 ubox
18 59 0.046076639 ubox
19 27 0.030615800 ubox
19 35 0.006517092 ubox
19 36 0.045003617 ubox
19 37 0.019314015 ubox
19 41 0.041079211 ubox
19 45 0.011550389 ubox
19 47 0.209052806 ubox
19 57 0.057730660 ubox
19 58 0.045119821 ubox
19 64 0.005667996 ubox
19 65 0.115786462 ubox
19 66 0.005129821 ubox
19 67 0.014940447 ubox
20 26 0.030568669 ubox
20 27 0.005380328 ubox
20 33 0.003360790 ubox
20 34 0.007914884 ubox
20 35 0.045338941 ubox
20 36 0.019974014 ubox
20 37 0.009422124 ubox
20 40 0.040992723 ubox
20 41 0.007354855 ubox
20 44 0.011532943 ubox
20 56 0.061156916 ubox
20 57 0.043812242 ubox
20 63 0.005666673 ubox
20 64 0.116016209 ubox
20 65 0.005575772 ubox
20 66 0.015012408 ubox
21 25 0.019801721 ubox
21 26 0.005549229 ubox
21 27 0.005394704 ubox
21 32 0.003745998 ubox
21 33 0.010728480 ubox
21 34 0.046582599 ubox
21 35 0.017668173 ubox
21 36 0.010272761 ubox
21 37 0.011241592 ubox
21 39 0.034260282 ubox
21 40 0.007530517 ubox
21 41 0.005680205 ubox
21 43 0.010112473 ubox
21 45 0.213839394 ubox
21 55 0.061293152 ubox
21 56 0.044222782 ubox
21 57 0.004252440 ubox
21 63 0.115937834 ubox
21 64 0.005572708 ubox
21 65 0.015942450 ubox
22 26 0.005344622 ubox
22 32 0.011782963 ubox
22 33 0.048806457 ubox
22 34 0.015231076 ubox
22 35 0.009494626 ubox
22 36 0.013753796 ubox
22 37 0.014002454 ubox
22 39 0.007005224 ubox
22 40 0.005705830 ubox
22 41 0.011404043 ubox
22 44 0.213886974 ubox
22 55 0.044183687 ubox
22 56 0.004672180 ubox
22 61 0.116206021 ubox
22 63 0.004815602 ubox
22 64 0.015918881 ubox
23 29 0.005460064 ubox
23 32 0.049490884 ubox
23 33 0.010590114 ubox
23 34 0.007560357 ubox
23 35 0.011127393 ubox
23 36 0.015013239 ubox
23 39 0.004398578 ubox
23 40 0.011376082 ubox
23 43 0.213716811 ubox
23 44 0.003182995 ubox
23 53 0.075632789 ubox
23 55 0.004696238 ubox
23 60 0.116348738 ubox
23 63 0.015835622 ubox
24 28 0.006015454 ubox
24 42 0.213319417 ubox
24 52 0.075654261 ubox
24 54 0.004599429 ubox
24 59 0.116215658 ubox
25 51 0.073351911 ubox
27 42 0.137342318 ubox
27 46 0.015763057 ubox
27 48 0.103025753 ubox
27 54 0.044944877 ubox
27 59 0.013558578 ubox
28 39 0.229376151 ubox
28 41 0.137281893 ubox
28 43 0.004079349 ubox
28 45 0.023790424 ubox
28 47 0.104690684 ubox
28 53 0.045578330 ubox
28 55 0.046124624 ubox
28 58 0.012785303 ubox
28 60 0.159414458 ubox
28 63 0.022490958 ubox
28 69 0.014429455 ubox
28 76 0.004675872 ubox
29 38 0.245196637 ubox
29 42 0.005228029 ubox
29 46 0.102556309 ubox
29 52 0.044661091 ubox
29 54 0.028782686 ubox
29 59 0.159502743 ubox
29 62 0.021642687 ubox
29 68 0.014550914 ubox
29 75 0.004878581 ubox
30 37 0.239134792 ubox
30 58 0.157394136 ubox
31 43 0.140826710 ubox
31 49 0.029982540 ubox
31 57 0.144054367 ubox
32 42 0.148067025 ubox
32 48 0.030811216 ubox
32 52 0.007435178 ubox
33 51 0.007140432 ubox
33 75 0.004254201 ubox
34 74 0.004599316 ubox
34 75 0.004519706 ubox
35 74 0.004726020 ubox
36 52 0.030063473 ubox
37 51 0.029182853 ubox
37 59 0.035495523 ubox
38 49 0.012266810 ubox
38 58 0.038542481 ubox
38 69 0.007284018 ubox
38 76 0.003486569 ubox
39 48 0.011741258 ubox
39 68 0.007505201 ubox
39 75 0.003733070 ubox
41 48 0.055597477 ubox
41 54 0.071375047 ubox
41 59 0.217381899 ubox
42 47 0.055330120 ubox
42 53 0.074323774 ubox
42 55 0.129982860 ubox
42 58 0.207070896 ubox
42 60 0.272901732 ubox
42 63 0.072680452 ubox
42 69 0.010045422 ubox
42 76 0.004455296 ubox
43 52 0.073743080 ubox
43 54 0.075461492 ubox
43 59 0.267326515 ubox
43 62 0.070775110 ubox
43 68 0.010146231 ubox
43 75 0.004607748 ubox
45 54 0.800856796 ubox
45 59 0.025926488 ubox
46 53 0.837994727 ubox
46 55 0.447673761 ubox
46 58 0.005013782 ubox
46 60 0.099891068 ubox
47 52 0.837775376 ubox
47 54 0.448548190 ubox
47 59 0.100042649 ubox
48 53 0.436982513 ubox
48 55 0.021422305 ubox
48 58 0.090916188 ubox
48 60 0.022855299 ubox
48 63 0.048547304 ubox
49 54 0.020443964 ubox
49 59 0.016796761 ubox
49 62 0.047414946 ubox
49 68 0.003245664 ubox
50 59 0.024240024 ubox
51 57 0.031324664 ubox
51 58 0.023897993 ubox
51 66 0.005810199 ubox
52 56 0.031958644 ubox
52 57 0.017774082 ubox
52 60 0.111650877 ubox
52 65 0.005903837 ubox
53 59 0.111859821 ubox
54 58 0.069067637 ubox
54 60 0.102350238 ubox
55 59 0.104032584 ubox
57 75 0.086570392 ubox
58 68 0.067753580 ubox
58 74 0.099356766 ubox
59 67 0.074778678 ubox
59 73 0.100673670 ubox
68 76 0.024619878 ubox
69 75 0.026651289 ubox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
