%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DDX27)
} def

/sequence { (\
AUGCGCACUCUUAAGAGGUCGAACGGGGAGGGCGGCAGGGGCUCUGGAACGGAAGUGACGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 21 0.003288342 ubox
2 37 0.018598149 ubox
2 60 0.010954335 ubox
3 20 0.005303542 ubox
3 24 0.003917388 ubox
3 36 0.020665543 ubox
3 56 0.003306669 ubox
3 59 0.015360735 ubox
3 61 0.979185290 ubox
4 21 0.037170780 ubox
4 34 0.021564744 ubox
4 35 0.014761107 ubox
4 51 0.003175513 ubox
4 55 0.003380250 ubox
4 57 0.016002548 ubox
4 60 0.990505986 ubox
5 19 0.011918702 ubox
5 20 0.037575762 ubox
5 33 0.026222780 ubox
5 50 0.003203741 ubox
5 56 0.016051979 ubox
5 59 0.990081414 ubox
5 61 0.035387047 ubox
6 18 0.020231956 ubox
6 32 0.025834548 ubox
6 55 0.016082832 ubox
6 57 0.990847246 ubox
6 60 0.035590850 ubox
7 19 0.006763500 ubox
7 56 0.990838643 ubox
8 15 0.006426939 ubox
8 17 0.124998767 ubox
8 18 0.006210866 ubox
8 30 0.026075368 ubox
8 52 0.011666158 ubox
8 55 0.990622119 ubox
9 14 0.006040005 ubox
9 16 0.125743910 ubox
9 17 0.003996176 ubox
9 18 0.013598255 ubox
9 22 0.006615356 ubox
9 29 0.026345460 ubox
9 47 0.005631494 ubox
9 48 0.076935093 ubox
9 51 0.014827611 ubox
9 52 0.056238434 ubox
9 53 0.677904685 ubox
9 54 0.711037304 ubox
10 15 0.125755649 ubox
10 17 0.036289619 ubox
10 18 0.022397491 ubox
10 21 0.009191985 ubox
10 26 0.003544477 ubox
10 27 0.005261629 ubox
10 28 0.026845705 ubox
10 46 0.010784064 ubox
10 47 0.097983931 ubox
10 51 0.113376520 ubox
10 52 0.959602825 ubox
10 55 0.003186958 ubox
11 16 0.033726955 ubox
11 17 0.022474926 ubox
11 18 0.005952848 ubox
11 22 0.009744546 ubox
11 23 0.003362521 ubox
11 25 0.003347918 ubox
11 26 0.005318756 ubox
11 27 0.026528155 ubox
11 46 0.092498628 ubox
11 47 0.050187187 ubox
11 48 0.201646827 ubox
11 49 0.127116458 ubox
11 51 0.907649965 ubox
11 52 0.056830263 ubox
11 53 0.029146401 ubox
11 54 0.004086061 ubox
12 16 0.017352122 ubox
12 17 0.007085000 ubox
12 21 0.010358938 ubox
12 22 0.003852217 ubox
12 25 0.004864278 ubox
12 26 0.023781186 ubox
12 46 0.110065211 ubox
12 47 0.270511696 ubox
12 48 0.206410756 ubox
12 51 0.039620998 ubox
12 52 0.026933077 ubox
12 53 0.005119686 ubox
13 45 0.079312502 ubox
14 45 0.973791295 ubox
15 44 0.984142458 ubox
16 43 0.983643699 ubox
16 45 0.042877671 ubox
17 42 0.981960241 ubox
17 43 0.031978707 ubox
17 44 0.042907136 ubox
17 45 0.004254286 ubox
18 24 0.016992008 ubox
18 33 0.015510351 ubox
18 36 0.047939932 ubox
18 42 0.078487420 ubox
18 43 0.004620457 ubox
18 44 0.003606750 ubox
18 50 0.008885944 ubox
18 59 0.121624242 ubox
19 23 0.015416552 ubox
19 26 0.011219196 ubox
19 27 0.020509483 ubox
19 28 0.026086386 ubox
19 29 0.008448715 ubox
19 32 0.015498328 ubox
19 35 0.047951438 ubox
19 39 0.115836687 ubox
19 40 0.960581209 ubox
19 41 0.096822989 ubox
19 47 0.005237981 ubox
19 48 0.004856279 ubox
19 49 0.008205350 ubox
19 52 0.012864459 ubox
19 53 0.031462389 ubox
19 58 0.122043809 ubox
20 25 0.014181264 ubox
20 26 0.026278354 ubox
20 27 0.033283328 ubox
20 28 0.015264625 ubox
20 31 0.015504360 ubox
20 34 0.048109256 ubox
20 38 0.143180671 ubox
20 39 0.965583147 ubox
20 40 0.098097107 ubox
20 46 0.005441481 ubox
20 47 0.005361659 ubox
20 51 0.016712838 ubox
20 52 0.031701723 ubox
20 57 0.122182211 ubox
21 33 0.047701684 ubox
21 50 0.017125169 ubox
21 56 0.118998008 ubox
24 34 0.975687902 ubox
24 46 0.012569793 ubox
24 51 0.152088453 ubox
25 33 0.975232401 ubox
25 45 0.010896145 ubox
25 50 0.153636921 ubox
26 44 0.010306345 ubox
27 43 0.008353439 ubox
27 45 0.006362255 ubox
28 42 0.007496475 ubox
28 44 0.006471687 ubox
29 43 0.006218998 ubox
29 45 0.165780855 ubox
30 42 0.005801934 ubox
30 44 0.167523548 ubox
30 45 0.008584158 ubox
31 43 0.167619347 ubox
31 44 0.008624467 ubox
31 45 0.003822497 ubox
32 42 0.167998189 ubox
32 44 0.003882647 ubox
33 41 0.167998245 ubox
34 43 0.009827771 ubox
35 42 0.013584720 ubox
35 61 0.010313038 ubox
36 41 0.013777157 ubox
36 46 0.009680287 ubox
36 60 0.010419410 ubox
37 45 0.009867735 ubox
38 44 0.009937543 ubox
39 43 0.006439023 ubox
41 56 0.018669923 ubox
41 61 0.004050315 ubox
42 55 0.019105071 ubox
42 60 0.004076401 ubox
43 53 0.017300236 ubox
43 54 0.013514941 ubox
44 52 0.022718898 ubox
45 51 0.022790362 ubox
45 60 0.011184891 ubox
46 50 0.025451770 ubox
46 59 0.026097365 ubox
49 56 0.027678676 ubox
50 55 0.027844682 ubox
50 60 0.009353530 ubox
51 59 0.009573846 ubox
3 61 0.9500000 lbox
4 60 0.9500000 lbox
5 59 0.9500000 lbox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
14 45 0.9500000 lbox
15 44 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
showpage
end
%%EOF
