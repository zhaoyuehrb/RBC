%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGAAGUCCCGGCCGGGCCGCUGCACUCCCCGCGCGCAUCCGUGCGCCGCCCGAGGCUGUCUAAGGAGUCGGCGGCCAUUUUGUUCUUCUCGUGGUUCCAGUGGGGAGAGAAGGAGGAAGUAGGGAGCGGGGUGGCAGGGGGGGGACCCGCCGCGGCUGCUGCCACCGCCGCCACCACCGCCUCUGCUCGUGGCGUGGGAAAGGAGGUGUGAGUCCCGGGCGCGAGCCGGCGGCGGCGCCGCUGCGGGAGGGU\
CGGCGGUGGGAAGGCG\
) } def
/len { sequence length } bind def

/coor [
[84.67164612 670.66894531]
[75.88602448 683.10809326]
[62.79718399 690.89282227]
[47.67283249 692.67437744]
[33.13336182 688.14410400]
[21.69781876 678.08685303]
[15.34748459 664.24511719]
[15.18259048 649.01708984]
[21.23170662 635.04113770]
[32.44678497 624.73858643]
[46.88475037 619.89453125]
[48.26877594 604.95849609]
[38.58546066 593.69934082]
[39.77629089 578.53234863]
[51.65160370 568.45196533]
[53.03562927 553.51593018]
[45.56075287 544.03436279]
[46.56795502 531.60113525]
[56.06120300 522.90484619]
[57.61764145 507.98577881]
[59.17408371 493.06677246]
[60.73052216 478.14773560]
[62.28696060 463.22869873]
[63.84340286 448.30966187]
[65.39984131 433.39062500]
[62.97716904 426.43740845]
[67.06138611 418.30862427]
[68.79003143 403.40856934]
[70.51867676 388.50851440]
[72.24732208 373.60845947]
[73.88989258 358.69866943]
[75.44633484 343.77963257]
[77.00277710 328.86059570]
[78.55921173 313.94155884]
[80.11565399 299.02255249]
[81.58590698 284.09475708]
[82.96993256 269.15875244]
[84.35395813 254.22274780]
[73.04779816 264.08026123]
[58.05264282 264.46151733]
[46.26016235 255.19126892]
[43.09008789 240.53007507]
[49.99937057 227.21609497]
[63.81254578 221.36834717]
[78.18119049 225.67442322]
[86.50104523 238.15312195]
[89.08680725 223.37768555]
[91.67256927 208.60223389]
[94.25833130 193.82678223]
[96.84409332 179.05134583]
[99.42985535 164.27589417]
[102.01562500 149.50044250]
[104.60138702 134.72500610]
[91.65986633 134.54795837]
[79.48025513 129.64294434]
[69.75411224 120.54555511]
[63.88414001 108.38279724]
[48.88414001 108.38279724]
[33.88414001 108.38279724]
[18.88414001 108.38279724]
[3.88413978 108.38279724]
[-11.11585999 108.38279724]
[-26.11585999 108.38279724]
[-34.36983109 121.41642761]
[-48.36964417 127.89785004]
[-63.64800262 125.75886536]
[-75.32964325 115.68202209]
[-79.68699646 100.88279724]
[-75.32964325 86.08357239]
[-63.64800262 76.00672913]
[-48.36964417 73.86774445]
[-34.36983109 80.34916687]
[-26.11585999 93.38279724]
[-11.11585999 93.38279724]
[3.88413978 93.38279724]
[18.88414001 93.38279724]
[33.88414001 93.38279724]
[48.88414001 93.38279724]
[63.88414001 93.38279724]
[69.54426575 79.49168396]
[58.81586838 69.00829315]
[48.08747101 58.52490234]
[37.35907364 48.04151154]
[26.63067436 37.55812073]
[11.35288334 33.44720459]
[7.65754414 19.01828384]
[-3.07085347 8.53489304]
[-13.79925060 -1.94849801]
[-24.52764893 -12.43188953]
[-35.25604630 -22.91527939]
[-45.98444366 -33.39867020]
[-56.71284103 -43.88206100]
[-67.44123840 -54.36545181]
[-71.60234833 -55.27906418]
[-74.93669128 -57.25458908]
[-77.21445465 -59.90828323]
[-78.35160828 -62.82129669]
[-78.40892029 -65.58945465]
[-88.64170837 -76.55713654]
[-98.87449646 -87.52481842]
[-109.10729218 -98.49249268]
[-124.94062805 -102.76302338]
[-128.89686584 -118.67781067]
[-116.90615845 -129.86508179]
[-101.30352020 -124.81632996]
[-98.13961029 -108.72528839]
[-87.90682220 -97.75760651]
[-77.67402649 -86.78992462]
[-67.44123840 -75.82225037]
[-56.95784760 -65.09384918]
[-46.22945023 -54.61045837]
[-35.50105286 -44.12706757]
[-24.77265549 -33.64367676]
[-14.04425716 -23.16028595]
[-3.31586003 -12.67689514]
[7.41253757 -2.19350457]
[18.14093590 8.28988647]
[32.65135956 11.65096188]
[37.11406708 26.82972527]
[47.84246445 37.31311417]
[58.57086182 47.79650497]
[69.29925537 58.27989578]
[80.02765656 68.76329041]
[92.30384064 67.21175385]
[103.25753784 69.89293671]
[108.51425934 55.84420013]
[102.21218872 41.59914017]
[107.74337769 27.42661095]
[121.36270142 21.50634003]
[126.61942291 7.45760632]
[131.87612915 -6.59112787]
[137.13285828 -20.63986206]
[142.30834961 -34.71871948]
[147.40246582 -48.82722855]
[152.49656677 -62.93574142]
[157.59066772 -77.04425049]
[162.68478394 -91.15276337]
[167.77888489 -105.26126862]
[172.87300110 -119.36978149]
[177.96710205 -133.47828674]
[175.37628174 -149.08592224]
[186.97601318 -158.42913818]
[192.07011414 -172.53765869]
[183.37953186 -189.40351868]
[189.70420837 -206.95129395]
[206.56700134 -214.14299011]
[211.33386230 -228.36538696]
[205.49876404 -243.30966187]
[213.66888428 -257.11651611]
[229.57678223 -259.19448853]
[241.01930237 -247.94956970]
[239.21871948 -232.00787354]
[225.55627441 -223.59852600]
[220.78939819 -209.37611389]
[227.94522095 -200.54487610]
[229.98677063 -189.24168396]
[226.29641724 -178.23831177]
[217.67663574 -170.28953552]
[206.17863464 -167.44354248]
[201.08451843 -153.33503723]
[204.03970337 -138.73654175]
[192.07560730 -128.38418579]
[186.98150635 -114.27567291]
[181.88740540 -100.16716766]
[176.79328918 -86.05865479]
[171.69918823 -71.95014191]
[166.60507202 -57.84163284]
[161.51097107 -43.73312378]
[156.41685486 -29.62461090]
[157.09860229 -22.29303360]
[151.18157959 -15.38314533]
[145.92486572 -1.33441091]
[140.66815186 12.71432304]
[135.41143799 26.76305771]
[141.79914856 40.16950226]
[136.66821289 54.49180222]
[122.56298828 61.10091782]
[117.30627441 75.14965057]
[125.51305389 81.57730103]
[131.30775452 90.71468353]
[133.80187988 101.64954376]
[132.45330811 113.18259430]
[147.40431213 114.39402008]
[162.35531616 115.60544586]
[170.18576050 108.12244415]
[180.62271118 106.20347595]
[190.19885254 110.24179840]
[195.86564636 118.69114685]
[210.78468323 120.24758911]
[225.70372009 121.80402374]
[240.62274170 123.36046600]
[255.54177856 124.91690826]
[270.46081543 126.47334290]
[279.28372192 124.25665283]
[285.54281616 128.13488770]
[300.44287109 129.86354065]
[315.04275513 123.76815796]
[326.79357910 132.92063904]
[341.69363403 134.64929199]
[356.59368896 136.37792969]
[371.49374390 138.10658264]
[386.39379883 139.83522034]
[394.11364746 126.70800018]
[406.50915527 117.86091614]
[421.43276978 114.82676697]
[436.29885864 118.13125610]
[448.53176880 127.20184326]
[456.01208496 140.46701050]
[457.44381714 155.62847900]
[452.57888794 170.05943298]
[442.26019287 181.25961304]
[428.27548218 187.28854370]
[413.04772949 187.10165405]
[399.21517944 180.73133850]
[389.17446899 169.28128052]
[384.66516113 154.73529053]
[369.76510620 153.00663757]
[354.86505127 151.27798462]
[339.96499634 149.54934692]
[325.06491089 147.82069397]
[311.53079224 154.03971863]
[298.71423340 144.76359558]
[283.81417847 143.03494263]
[268.90435791 141.39237976]
[253.98533630 139.83593750]
[239.06631470 138.27949524]
[224.14727783 136.72305298]
[209.22824097 135.16661072]
[194.30921936 133.61018372]
[177.23760986 142.73460388]
[161.14389038 130.55644226]
[146.19288635 129.34501648]
[131.24188232 128.13359070]
[119.37683105 137.31076050]
[116.79106903 152.08621216]
[114.20530701 166.86166382]
[111.61954498 181.63710022]
[109.03378296 196.41255188]
[106.44801331 211.18800354]
[103.86225128 225.96343994]
[101.27648926 240.73889160]
[99.28997040 255.60676575]
[97.90594482 270.54278564]
[96.52191925 285.47879028]
[98.84037018 294.27551270]
[95.03468323 300.57897949]
[93.47824097 315.49801636]
[91.92180634 330.41705322]
[90.36536407 345.33605957]
[88.80892181 360.25509644]
[91.02561951 369.07803345]
[87.14738464 375.33709717]
[85.41873932 390.23715210]
[83.69009399 405.13723755]
[81.96144104 420.03729248]
[80.31887054 434.94708252]
[78.76243591 449.86611938]
[77.20599365 464.78512573]
[75.64955139 479.70416260]
[74.09311676 494.62319946]
[72.53667450 509.54223633]
[70.98023224 524.46124268]
[78.86418152 541.12091064]
[67.97164154 554.89996338]
[66.58761597 569.83599854]
[76.40846252 581.92681885]
[74.79209137 597.05438232]
[63.20478821 606.34252930]
[61.82076263 621.27856445]
[75.12279510 628.69311523]
[84.25382996 640.88098145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 269]
[12 268]
[15 265]
[16 264]
[19 262]
[20 261]
[21 260]
[22 259]
[23 258]
[24 257]
[25 256]
[27 255]
[28 254]
[29 253]
[30 252]
[31 250]
[32 249]
[33 248]
[34 247]
[35 246]
[36 244]
[37 243]
[38 242]
[46 241]
[47 240]
[48 239]
[49 238]
[50 237]
[51 236]
[52 235]
[53 234]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[63 73]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[93 110]
[98 109]
[99 108]
[100 107]
[101 106]
[125 178]
[126 177]
[129 174]
[130 173]
[131 172]
[132 171]
[133 169]
[134 168]
[135 167]
[136 166]
[137 165]
[138 164]
[139 163]
[140 162]
[142 160]
[143 159]
[146 154]
[147 153]
[182 233]
[183 232]
[184 231]
[188 229]
[189 228]
[190 227]
[191 226]
[192 225]
[193 224]
[195 223]
[196 222]
[198 220]
[199 219]
[200 218]
[201 217]
[202 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
