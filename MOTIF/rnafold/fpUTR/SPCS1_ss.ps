%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGACGCGGGGGCGCCGGCGGCCGUUGGGCCGCGCAAGUACUGUCAAGGACAGUUUUCGGGACGGGGGACGCGGCUCCAGGCACCCAACAGCACUGACGGCGAACACUUCACGGGCGCGCGAUGCCUCGACAAGGCGGCCGCCACCACCACCUCAGCUGCCCUCGCGGGCAGCACGGCGCGGCAAAAGCGCACGUCGCCUAGCG\
) } def
/len { sequence length } bind def

/coor [
[243.14723206 433.82247925]
[231.20764160 444.17724609]
[215.44927979 442.97332764]
[205.22129822 430.92492676]
[206.59178162 415.18014526]
[218.74765015 405.08013916]
[219.89031982 390.12371826]
[221.03300476 375.16729736]
[213.39549255 365.78353882]
[214.22758484 353.31140137]
[223.62742615 344.47552490]
[224.99806213 329.53829956]
[226.36868286 314.60104370]
[227.73930359 299.66378784]
[229.10993958 284.72653198]
[199.43247986 265.48147583]
[190.94175720 233.96281433]
[204.51130676 207.30114746]
[195.18452454 195.55332947]
[185.85775757 183.80551147]
[176.53097534 172.05769348]
[167.20420837 160.30987549]
[157.87742615 148.56205750]
[148.55065918 136.81423950]
[139.22387695 125.06641388]
[129.89710999 113.31859589]
[101.39454651 130.17657471]
[75.85503387 113.55168915]
[60.87072754 112.86566162]
[45.88642502 112.17963409]
[30.90212059 111.49359894]
[15.91781712 110.80757141]
[0.93351305 110.12153625]
[-14.05079079 109.43550873]
[-29.03509521 108.74947357]
[-34.93453598 120.24246216]
[-44.70791626 128.61911011]
[-56.87953186 132.66114807]
[-69.62906647 131.80134583]
[-81.06382751 126.20275879]
[-89.49971008 116.72931671]
[-93.70921326 104.81264496]
[-108.66562653 103.66997528]
[-123.62203979 102.52729797]
[-138.57844543 101.38462067]
[-153.53486633 100.24194336]
[-165.46556091 110.25673676]
[-180.61721802 108.88484192]
[-190.09126282 97.44902039]
[-205.04768372 96.30634308]
[-220.00408936 95.16367340]
[-233.06678772 104.47740936]
[-248.45281982 99.93323517]
[-254.35934448 85.01705933]
[-246.25538635 71.17128754]
[-230.35760498 69.01721191]
[-218.86141968 80.20726013]
[-203.90499878 81.34992981]
[-188.94859314 82.49260712]
[-177.84724426 72.62875366]
[-162.66302490 73.57453156]
[-152.39218140 85.28553009]
[-137.43577576 86.42820740]
[-122.47936249 87.57088470]
[-107.52294922 88.71356201]
[-92.56653595 89.85623169]
[-83.37233734 75.30310822]
[-67.99577332 67.36827850]
[-50.62942886 68.31672668]
[-36.06003189 77.97731781]
[-28.34906387 93.76517487]
[-13.36476040 94.45120239]
[1.61954391 95.13723755]
[16.60384750 95.82326508]
[31.58815193 96.50929260]
[46.57245636 97.19532776]
[61.55675888 97.88135529]
[76.54106140 98.56739044]
[84.75536346 86.01647949]
[78.12958527 72.55917358]
[71.50379944 59.10187149]
[64.77559662 45.69548416]
[57.94536591 32.34078598]
[42.59536362 30.06988525]
[31.53533745 19.18616104]
[29.01809692 3.87462521]
[36.01156998 -9.97712326]
[49.82662582 -17.04280472]
[65.15109253 -14.60552025]
[76.09239960 -3.60245609]
[78.44338989 11.73548603]
[71.30006409 25.51055336]
[78.13029480 38.86524963]
[83.97714233 43.39074707]
[84.96110535 52.47609329]
[91.58688354 65.93339539]
[98.21266937 79.39070129]
[105.70198822 79.79083252]
[106.33908844 64.80437469]
[106.97619629 49.81790543]
[100.40444946 36.33413315]
[108.69152832 23.83115578]
[123.67018127 24.63115883]
[130.57835388 37.94570541]
[122.60729218 50.65303421]
[121.64395905 65.62207031]
[120.68061829 80.59110260]
[128.16993713 80.99123383]
[136.19187927 68.31652069]
[144.21383667 55.64180756]
[140.96209717 40.40816116]
[149.27804565 27.66847229]
[163.82102966 24.66231918]
[171.84297180 11.98760319]
[179.86491394 -0.68711221]
[187.88687134 -13.36182785]
[189.83326721 -22.29060936]
[196.12902832 -26.16736031]
[204.34332275 -38.71826935]
[202.48435974 -54.65325546]
[213.88560486 -65.94001770]
[229.80102539 -63.92031479]
[238.02165222 -50.14349747]
[232.24133301 -35.17795181]
[216.89424133 -30.50396919]
[208.67993164 -17.95306206]
[200.56158447 -5.33988333]
[192.53964233 7.33483219]
[184.51770020 20.00954819]
[176.49574280 32.68426132]
[180.00302124 47.11459732]
[172.04818726 60.08283997]
[156.88854980 63.66374969]
[148.86660767 76.33846283]
[140.84465027 89.01318359]
[141.64492798 103.99182129]
[150.97169495 115.73963928]
[160.29847717 127.48745728]
[169.62524414 139.23527527]
[178.95202637 150.98309326]
[188.27879333 162.73091125]
[197.60557556 174.47874451]
[206.93234253 186.22656250]
[216.25912476 197.97438049]
[222.58569336 194.38655090]
[229.60519409 191.94636536]
[237.10618591 190.78700256]
[244.85182190 191.00207520]
[252.58732605 192.64089966]
[260.04846191 195.70513916]
[266.97036743 200.14697266]
[273.09698486 205.86914062]
[278.19027710 212.72653198]
[282.03921509 220.52964783]
[284.46807861 229.04977417]
[285.34359741 238.02558899]
[284.58117676 247.17112732]
[298.74481201 252.10989380]
[312.90844727 257.04864502]
[327.07208252 261.98742676]
[341.23571777 266.92617798]
[355.39935303 271.86492920]
[369.56298828 276.80368042]
[385.56298828 273.20748901]
[396.47689819 285.44750977]
[391.07748413 300.93228149]
[374.91915894 303.73239136]
[364.62423706 290.96734619]
[350.46060181 286.02856445]
[336.29696655 281.08981323]
[322.13333130 276.15106201]
[307.96969604 271.21228027]
[293.80606079 266.27352905]
[279.64239502 261.33477783]
[270.67822266 273.36157227]
[279.45794678 285.52365112]
[288.23767090 297.68572998]
[297.10989380 309.78051758]
[306.07406616 321.80731201]
[315.03823853 333.83410645]
[324.00241089 345.86090088]
[339.62341309 346.58062744]
[351.09210205 357.21093750]
[352.99328613 372.73251343]
[344.42929077 385.81655884]
[329.44375610 390.28515625]
[315.11242676 384.02841187]
[308.20211792 370.00051880]
[311.97561646 354.82507324]
[303.01144409 342.79827881]
[294.04727173 330.77148438]
[285.08309937 318.74468994]
[278.56271362 315.25897217]
[276.07559204 306.46545410]
[267.29586792 294.30337524]
[258.51614380 282.14129639]
[244.04718018 286.09716797]
[242.67655945 301.03442383]
[241.30592346 315.97167969]
[239.93530273 330.90890503]
[238.56468201 345.84616089]
[246.66276550 362.38204956]
[235.98941040 376.30996704]
[234.84674072 391.26638794]
[233.70405579 406.22280884]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 205]
[7 204]
[8 203]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[18 144]
[19 143]
[20 142]
[21 141]
[22 140]
[23 139]
[24 138]
[25 137]
[26 136]
[28 78]
[29 77]
[30 76]
[31 75]
[32 74]
[33 73]
[34 72]
[35 71]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[49 59]
[50 58]
[51 57]
[79 97]
[80 96]
[81 95]
[82 93]
[83 92]
[108 135]
[109 134]
[110 133]
[113 130]
[114 129]
[115 128]
[116 127]
[118 126]
[119 125]
[157 174]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
[175 196]
[176 195]
[177 194]
[178 192]
[179 191]
[180 190]
[181 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
