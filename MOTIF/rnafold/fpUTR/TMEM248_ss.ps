%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUUUUCACCCGGAAACCGCGGUUGCCGGAGCCCGAACUGAGGCGGCGGCGGGAGCCCGGUUGGCGUCUGGUCUUCGCGUCGGCCCCGCGGAGCCAGACGCUGCCCCCGGCGCGGGGAGAAGAUGGUGCCUAGCGGCCUCGGGCCCGCCACGCGCCGCCACGAGUGAGCCCAGCGCGACCGCGGGCGUCCGCCGAGCAGCUGGCCCGGCUGGGCCCGGGGCGCGCAGCUGCCCGCCGGGGCGGGGUGGAGCUG\
AUCAGAAUA\
) } def
/len { sequence length } bind def

/coor [
[89.51991272 292.53015137]
[88.27605438 277.45343018]
[91.75402069 262.73068237]
[99.61306000 249.80433655]
[111.08324432 239.94076538]
[125.04083252 234.10629272]
[123.79747772 219.15791321]
[122.55412292 204.20953369]
[121.31076813 189.26115417]
[120.06741333 174.31277466]
[118.82405853 159.36439514]
[117.58071136 144.41601562]
[116.33735657 129.46763611]
[109.54737091 126.28233337]
[97.24046326 134.85789490]
[95.96739960 119.91174316]
[89.17742157 116.72644043]
[76.88730621 125.32604218]
[64.59719086 133.92564392]
[52.30707932 142.52523804]
[40.01696396 151.12484741]
[34.80206680 158.58302307]
[27.52979279 159.75251770]
[15.13859653 168.20582581]
[2.74740100 176.65911865]
[-9.64379501 185.11242676]
[-16.68345642 199.28117371]
[-31.55757904 200.06204224]
[-43.94877625 208.51535034]
[-56.33996964 216.96864319]
[-59.39715958 232.24252319]
[-72.08401489 240.63885498]
[-86.62648010 237.63015747]
[-99.01767731 246.08346558]
[-111.40887451 254.53675842]
[-109.58381653 269.73306274]
[-115.04072571 284.03274536]
[-126.52563477 294.14984131]
[-141.39939880 297.75949097]
[-156.24414062 294.03225708]
[-167.64863586 283.82461548]
[-172.99223328 269.48220825]
[-171.04699707 254.30081177]
[-162.25993347 241.76901245]
[-148.65023804 234.76651001]
[-133.34533691 234.90245056]
[-119.86217499 242.14556885]
[-107.47097778 233.69226074]
[-95.07978058 225.23896790]
[-92.57579803 210.60115051]
[-80.12978363 201.85179138]
[-64.79327393 204.57745361]
[-52.40207291 196.12414551]
[-40.01087952 187.67085266]
[-33.85751724 174.10673523]
[-18.09709358 172.72122192]
[-5.70589781 164.26792908]
[6.68529797 155.81462097]
[19.07649422 147.36132812]
[31.41736603 138.83473206]
[43.70747757 130.23512268]
[55.99759293 121.63552856]
[68.28770447 113.03592682]
[80.57781982 104.43633270]
[79.24588013 89.49558258]
[65.62838745 83.20559692]
[52.01089859 76.91560364]
[38.39340591 70.62561798]
[24.77591705 64.33563232]
[11.15842628 58.04564285]
[-2.45906472 51.75565720]
[-16.07655525 45.46566772]
[-29.69404602 39.17568207]
[-38.76351166 38.42437363]
[-43.43500519 32.72956467]
[-56.97697067 26.27858543]
[-70.51893616 19.82760620]
[-84.06090546 13.37662888]
[-97.60287476 6.92565060]
[-111.14484406 0.47467273]
[-124.68680573 -5.97630548]
[-138.83712769 0.67969179]
[-153.94201660 -3.36712933]
[-162.86936951 -16.20598412]
[-161.40400696 -31.77475739]
[-150.23779297 -42.72235107]
[-134.64309692 -43.87964249]
[-121.98323822 -34.70020294]
[-118.23583221 -19.51827240]
[-104.69386292 -13.06729507]
[-91.15189362 -6.61631680]
[-77.60993195 -0.16533865]
[-64.06796265 6.28563929]
[-50.52599335 12.73661709]
[-36.98402786 19.18759537]
[-23.40405846 25.55818939]
[-9.78656769 31.84817696]
[3.83092284 38.13816452]
[17.44841385 44.42815399]
[31.06590462 50.71813965]
[44.68339539 57.00812912]
[58.30088425 63.29811478]
[71.91837311 69.58810425]
[85.53586578 75.87808990]
[100.49135590 74.72336578]
[112.98189545 66.41755676]
[125.47242737 58.11174393]
[137.96296692 49.80593491]
[150.45350647 41.50012589]
[155.84375000 34.16767502]
[163.14170837 33.17091370]
[175.72982788 25.01376152]
[188.31796265 16.85660744]
[191.63346863 11.19833469]
[196.56130981 8.45198059]
[201.30262756 8.65940571]
[214.08059692 0.80298305]
[226.85858154 -7.05343962]
[234.56196594 -20.87257385]
[249.45637512 -20.94749451]
[262.23434448 -28.80391693]
[247.25949097 -29.67192459]
[234.68168640 -37.84497833]
[227.80523682 -51.17593765]
[228.43666077 -66.16264343]
[236.41006470 -78.86794281]
[249.63078308 -85.95404816]
[264.62557983 -85.55936432]
[277.45523071 -77.78759003]
[284.74920654 -64.68042755]
[284.59136963 -49.68125916]
[277.02172852 -36.72908401]
[290.63922119 -43.01906967]
[297.09115601 -49.43717575]
[304.45562744 -49.30183792]
[318.14672852 -55.42995071]
[331.83782959 -61.55806351]
[345.49237061 -67.76722717]
[359.10986328 -74.05721283]
[372.72735596 -80.34719849]
[386.34484863 -86.63718414]
[399.96234131 -92.92717743]
[413.57983398 -99.21716309]
[427.19732666 -105.50714874]
[440.81481934 -111.79713440]
[454.43231201 -118.08712769]
[468.04980469 -124.37711334]
[481.66729736 -130.66709900]
[495.24725342 -137.03768921]
[508.78921509 -143.48867798]
[522.33117676 -149.93965149]
[527.69677734 -164.56320190]
[541.52215576 -170.91249084]
[555.43041992 -165.70710754]
[568.97235107 -172.15808105]
[582.43688965 -178.76914978]
[595.82214355 -185.53936768]
[604.64447021 -198.67240906]
[619.49383545 -197.51246643]
[632.87908936 -204.28268433]
[637.62316895 -216.25335693]
[648.88421631 -221.62393188]
[660.40795898 -218.01455688]
[673.87249756 -224.62561035]
[680.17047119 -231.19488525]
[687.53607178 -231.23417664]
[701.07800293 -237.68515015]
[714.61999512 -244.13613892]
[725.32452393 -261.24288940]
[744.52453613 -258.79699707]
[757.90972900 -265.56723022]
[771.29498291 -272.33743286]
[784.68017578 -279.10766602]
[790.89984131 -285.75112915]
[798.26446533 -285.87771606]
[811.72900391 -292.48880005]
[825.19354248 -299.09985352]
[833.87359619 -313.01345825]
[850.25170898 -312.18270874]
[857.47943115 -297.46224976]
[848.12152100 -283.99520874]
[831.80456543 -285.63531494]
[818.34002686 -279.02426147]
[804.87548828 -272.41317749]
[791.45037842 -265.72244263]
[778.06518555 -258.95220947]
[764.67993164 -252.18199158]
[751.29473877 -245.41178894]
[749.00909424 -235.49397278]
[741.49578857 -228.30743408]
[731.05523682 -226.38504028]
[721.07098389 -230.59416199]
[707.52899170 -224.14318848]
[693.98706055 -217.69221497]
[680.48352051 -211.16107178]
[667.01898193 -204.55001831]
[658.02301025 -189.46582031]
[639.64929199 -190.89746094]
[626.26409912 -184.12724304]
[618.39910889 -171.47845459]
[602.59234619 -172.15414429]
[589.20715332 -165.38392639]
[586.90051270 -161.23632812]
[581.97998047 -158.47689819]
[575.42333984 -158.61611938]
[561.88140869 -152.16513062]
[557.16009521 -138.08518982]
[543.51849365 -131.35006714]
[528.78216553 -136.39768982]
[515.24017334 -129.94670105]
[501.69824219 -123.49572754]
[497.02673340 -117.80091858]
[487.95727539 -117.04960632]
[474.33978271 -110.75962067]
[460.72229004 -104.46963501]
[447.10479736 -98.17964935]
[433.48730469 -91.88965607]
[419.86981201 -85.59967041]
[406.25231934 -79.30968475]
[392.63482666 -73.01969910]
[379.01733398 -66.72970581]
[365.39984131 -60.43972015]
[351.78234863 -54.14973450]
[347.04370117 -48.51070404]
[337.96594238 -47.86696625]
[324.27484131 -41.73884964]
[310.58374023 -35.61073685]
[296.92922974 -29.40157890]
[283.31173706 -23.11159134]
[270.09075928 -16.02594185]
[257.31280518 -8.16951942]
[250.52337646 5.08767080]
[234.71499634 5.72453451]
[221.93702698 13.58095741]
[209.15905762 21.43737984]
[196.47511292 29.44473076]
[183.88699341 37.60188293]
[171.29885864 45.75903702]
[158.75930786 53.99066544]
[146.26878357 62.29647446]
[133.77824402 70.60227966]
[121.28770447 78.90809631]
[108.79716492 87.21390533]
[128.63050842 96.63264465]
[131.28573608 128.22427368]
[132.52908325 143.17265320]
[133.77244568 158.12103271]
[135.01579285 173.06941223]
[136.25915527 188.01779175]
[137.50250244 202.96618652]
[138.74584961 217.91456604]
[139.98921204 232.86294556]
[154.71890259 236.31129456]
[167.66102600 244.14434814]
[177.54765320 255.59468079]
[183.41015625 269.54049683]
[184.67422485 284.61557007]
[181.21598816 299.34295654]
[173.37428284 312.27981567]
[161.91732788 322.15875244]
[147.96757507 328.01193237]
[132.89166260 329.26586914]
[118.16660309 325.79779053]
[105.23499298 317.94741821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 252]
[7 251]
[8 250]
[9 249]
[10 248]
[11 247]
[12 246]
[13 245]
[17 64]
[18 63]
[19 62]
[20 61]
[21 60]
[23 59]
[24 58]
[25 57]
[26 56]
[28 54]
[29 53]
[30 52]
[33 49]
[34 48]
[35 47]
[65 104]
[66 103]
[67 102]
[68 101]
[69 100]
[70 99]
[71 98]
[72 97]
[73 96]
[75 95]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[105 243]
[106 242]
[107 241]
[108 240]
[109 239]
[111 238]
[112 237]
[113 236]
[116 235]
[117 234]
[118 233]
[120 231]
[121 230]
[132 229]
[133 228]
[135 227]
[136 226]
[137 225]
[138 223]
[139 222]
[140 221]
[141 220]
[142 219]
[143 218]
[144 217]
[145 216]
[146 215]
[147 214]
[148 213]
[149 211]
[150 210]
[151 209]
[154 206]
[155 205]
[156 202]
[157 201]
[159 199]
[160 198]
[163 196]
[164 195]
[166 194]
[167 193]
[168 192]
[170 188]
[171 187]
[172 186]
[173 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
