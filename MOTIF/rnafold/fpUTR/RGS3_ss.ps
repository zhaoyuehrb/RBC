%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACUUUGGCUCAGCCUGUCUUCAUCCACUGUAUCCUGACACCUCUCCUACUCCUUCUCUUUAAUGUACAGCUGAGACUGGGAUACCCUUAGACUGAAAGGAAGGACACGGCUAUGUAGAAAAGAAUUGACUGAAGGGGAGGAGUACUCGUGAACCCCUUGCUUCAGCCUCCCAAUGUUCUGAGAGAGGAGGAGCCAGGCGCAGUGGCUC\
) } def
/len { sequence length } bind def

/coor [
[-0.79419792 422.51144409]
[-10.97478962 423.81509399]
[-16.61220360 437.71542358]
[-22.24961662 451.61578369]
[-12.92996025 463.74389648]
[-10.94531155 478.80902100]
[-16.72939110 492.75213623]
[-28.63631439 501.86703491]
[-43.40743637 503.78524780]
[-49.04484940 517.68560791]
[-54.68226242 531.58593750]
[-55.03196335 548.53625488]
[-71.41668701 552.89257812]
[-80.13846588 538.35412598]
[-68.58260345 525.94854736]
[-62.94519424 512.04815674]
[-57.30777740 498.14782715]
[-66.57002258 486.48266602]
[-68.76434326 471.64889526]
[-63.20236206 457.61569214]
[-51.28473663 448.18875122]
[-36.14995956 445.97836304]
[-30.51254845 432.07800293]
[-24.87513351 418.17767334]
[-33.75921249 400.83947754]
[-26.92122841 382.27145386]
[-8.34958839 374.60317993]
[-3.33550191 360.46603394]
[1.67858481 346.32888794]
[6.69267130 332.19174194]
[11.70675850 318.05459595]
[16.72084427 303.91744995]
[21.73493195 289.78030396]
[16.81752968 278.72888184]
[20.87855530 266.91027832]
[32.25687790 260.83706665]
[37.47990417 246.77578735]
[42.70292664 232.71449280]
[47.92595291 218.65319824]
[39.53839111 206.37367249]
[39.99524307 191.33187866]
[49.33079147 179.30271912]
[64.13048553 175.02775574]
[69.35350800 160.96646118]
[74.57653809 146.90516663]
[79.79956055 132.84387207]
[85.02258301 118.78257751]
[72.79793549 95.62130737]
[89.22674561 70.84543610]
[80.30242157 58.78905106]
[71.37808990 46.73266602]
[62.45376587 34.67628098]
[52.74589157 23.24137115]
[42.29762650 12.47876167]
[31.84936142 1.71615291]
[21.40109634 -9.04645634]
[10.95283127 -19.80906487]
[0.50456595 -30.57167435]
[-7.71768904 -34.54885864]
[-10.01731205 -41.57203293]
[-20.30494690 -52.48828506]
[-30.59258270 -63.40453720]
[-40.88021851 -74.32079315]
[-42.40111923 -59.39809418]
[-53.94130325 -49.81560516]
[-68.88932800 -51.06318283]
[-78.68138885 -62.42609024]
[-77.70755005 -77.39444733]
[-66.52572632 -87.39279175]
[-51.54292679 -86.69341278]
[-60.82060623 -98.48004913]
[-70.09828186 -110.26667786]
[-79.46304321 -121.98424530]
[-88.91436005 -133.63209534]
[-98.36567688 -145.27995300]
[-107.81699371 -156.92781067]
[-117.26831055 -168.57568359]
[-122.14250183 -170.43937683]
[-125.48101807 -173.66366577]
[-127.02276611 -177.43592834]
[-126.86692810 -180.95771790]
[-135.79125977 -193.01409912]
[-151.03881836 -199.05096436]
[-153.16651917 -215.31149292]
[-139.98556519 -225.06825256]
[-125.05538177 -218.28431702]
[-123.73487091 -201.93843079]
[-114.81054688 -189.88204956]
[-105.62045288 -178.02699280]
[-96.16913605 -166.37913513]
[-86.71781921 -154.73127747]
[-77.26650238 -143.08341980]
[-67.81518555 -131.43556213]
[-61.16016769 -128.22245789]
[-58.31165314 -119.54435730]
[-49.03397369 -107.75772858]
[-39.75629425 -95.97109222]
[-29.96396446 -84.60842896]
[-19.67632866 -73.69216919]
[-9.38869476 -62.77592087]
[0.89894009 -51.85966873]
[11.26717472 -41.01993942]
[21.71544075 -30.25732994]
[32.16370392 -19.49472237]
[42.61197281 -8.73211288]
[53.06023788 2.03049636]
[63.50850296 12.79310513]
[61.99729919 -2.13057637]
[68.69962311 -15.54992199]
[81.53849792 -23.30642128]
[96.53529358 -22.99641800]
[109.04267120 -14.71597862]
[115.18471527 -1.03112340]
[113.05808258 13.81735897]
[103.32179260 25.22808456]
[88.99301910 29.66499138]
[74.51014709 25.75195503]
[83.43447876 37.80833817]
[92.35880280 49.86472321]
[101.28313446 61.92110443]
[99.23143768 47.06208420]
[94.11074829 32.96319580]
[96.38487244 18.13658714]
[105.49575806 6.22055721]
[119.20768738 0.13918257]
[134.15588379 1.38477230]
[146.67221069 9.65167141]
[153.68527222 22.91126442]
[153.47416687 37.90977859]
[146.09065247 50.96672821]
[133.34664917 58.87805176]
[122.54399872 69.28491211]
[137.01353455 65.33110046]
[151.48306274 61.37729263]
[165.95259094 57.42348480]
[180.42213440 53.46968079]
[194.89166260 49.51587296]
[201.95121765 38.72177124]
[214.08374023 35.72623062]
[224.65487671 41.60552979]
[239.18141174 37.86656952]
[253.70793152 34.12760925]
[268.23446655 30.38864899]
[279.67041016 19.45568657]
[293.92459106 23.77631378]
[308.45114136 20.03735352]
[314.02932739 5.55760241]
[327.07147217 -2.84969521]
[342.56253052 -1.95176196]
[354.54592896 7.90612888]
[358.41375732 22.93341637]
[352.67880249 37.35180283]
[339.54626465 45.61712265]
[324.06582642 44.55119324]
[312.19009399 34.56388855]
[297.66354370 38.30284500]
[287.26663208 48.96837234]
[271.97341919 44.91518402]
[257.44689941 48.65414429]
[242.92036438 52.39310074]
[228.39382935 56.13206100]
[216.54258728 69.07526398]
[198.84547424 63.98540497]
[184.37594604 67.93920898]
[169.90640259 71.89302063]
[155.43687439 75.84682465]
[140.96733093 79.80063629]
[126.49780273 83.75444031]
[127.26396179 96.02487183]
[123.21302032 106.18577576]
[135.77691650 114.38019562]
[148.34080505 122.57462311]
[164.12658691 123.63288116]
[170.55999756 137.06643677]
[183.12390137 145.26086426]
[198.53572083 141.76066589]
[211.86381531 150.25402832]
[215.20086670 165.70199585]
[206.56706238 178.93955994]
[191.08468628 182.11309814]
[177.93914795 173.33982849]
[174.92947388 157.82475281]
[162.36557007 149.63032532]
[147.47845459 149.15818787]
[140.14637756 135.13851929]
[127.58248901 126.94409180]
[115.01859283 118.74966431]
[107.52503967 122.81407166]
[99.08387756 124.00559998]
[93.86085510 138.06689453]
[88.63783264 152.12818909]
[83.41480255 166.18948364]
[78.19178009 180.25077820]
[86.61193085 193.15068054]
[85.83080292 208.35736084]
[76.35726929 220.04992676]
[61.98724747 223.87622070]
[56.76422119 237.93751526]
[51.54119873 251.99880981]
[46.31817245 266.06008911]
[49.81649399 284.13928223]
[35.87207794 294.79440308]
[30.85799217 308.93154907]
[25.84390640 323.06869507]
[20.82981873 337.20584106]
[15.81573200 351.34298706]
[10.80164528 365.48013306]
[5.78755856 379.61727905]
[12.63182259 387.79965210]
[15.44117832 398.00683594]
[13.77341366 408.37957764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[9 17]
[10 16]
[11 15]
[27 208]
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[33 202]
[36 200]
[37 199]
[38 198]
[39 197]
[43 193]
[44 192]
[45 191]
[46 190]
[47 189]
[49 120]
[50 119]
[51 118]
[52 117]
[53 107]
[54 106]
[55 105]
[56 104]
[57 103]
[58 102]
[60 101]
[61 100]
[62 99]
[63 98]
[70 97]
[71 96]
[72 95]
[73 93]
[74 92]
[75 91]
[76 90]
[77 89]
[81 88]
[82 87]
[132 168]
[133 167]
[134 166]
[135 165]
[136 164]
[137 163]
[140 161]
[141 160]
[142 159]
[143 158]
[145 156]
[146 155]
[170 187]
[171 186]
[172 185]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
