%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GLTPD2)
} def

/sequence { (\
GGGACACGGACUGGCUAGGCGCUGGUGAGGGGGCGGCGGUCCCAGCAGCAGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.394173772 ubox
1 16 0.167909651 ubox
1 43 0.262796957 ubox
2 11 0.417489802 ubox
2 12 0.091838939 ubox
2 15 0.177080681 ubox
2 16 0.297922858 ubox
2 42 0.262990396 ubox
3 11 0.096470641 ubox
3 15 0.302100866 ubox
3 41 0.262986189 ubox
4 40 0.262908679 ubox
5 13 0.361811341 ubox
5 39 0.262087079 ubox
6 12 0.337477801 ubox
7 13 0.114926071 ubox
7 21 0.143385619 ubox
7 24 0.003348390 ubox
7 27 0.003258326 ubox
7 35 0.177328915 ubox
7 38 0.188255131 ubox
8 12 0.071511832 ubox
8 16 0.133719308 ubox
8 20 0.145887679 ubox
8 23 0.003718762 ubox
8 34 0.178803446 ubox
8 37 0.186236935 ubox
8 42 0.037998138 ubox
8 43 0.003435678 ubox
9 15 0.140163293 ubox
9 22 0.003926277 ubox
9 41 0.038260718 ubox
10 26 0.057747108 ubox
10 40 0.038407198 ubox
11 18 0.224572303 ubox
11 19 0.074679448 ubox
11 25 0.063879484 ubox
11 29 0.222852579 ubox
11 30 0.029110823 ubox
11 31 0.035202188 ubox
11 32 0.014453379 ubox
11 33 0.012127688 ubox
11 36 0.128950913 ubox
11 39 0.038512355 ubox
11 48 0.006615888 ubox
11 51 0.018066956 ubox
11 52 0.006892736 ubox
12 17 0.210632943 ubox
12 18 0.076940576 ubox
12 21 0.052747996 ubox
12 24 0.063788754 ubox
12 28 0.223662412 ubox
12 29 0.024340919 ubox
12 30 0.030789674 ubox
12 31 0.011487690 ubox
12 32 0.011566153 ubox
12 35 0.130193010 ubox
12 38 0.036682848 ubox
12 47 0.006531019 ubox
12 50 0.018004692 ubox
12 51 0.004587544 ubox
13 20 0.080786099 ubox
13 23 0.069423328 ubox
13 34 0.130263831 ubox
13 37 0.028512437 ubox
13 46 0.004880264 ubox
13 49 0.016891062 ubox
14 20 0.182390082 ubox
14 22 0.073434193 ubox
14 26 0.227678248 ubox
14 34 0.026517523 ubox
14 37 0.030828009 ubox
14 46 0.016206642 ubox
14 49 0.005817595 ubox
14 53 0.046924287 ubox
15 19 0.181527010 ubox
15 21 0.075279149 ubox
15 25 0.228279057 ubox
15 29 0.008306053 ubox
15 30 0.028053377 ubox
15 31 0.009054124 ubox
15 32 0.129031402 ubox
15 33 0.028121395 ubox
15 36 0.038960937 ubox
15 45 0.016837413 ubox
15 48 0.006782864 ubox
15 51 0.006566431 ubox
15 52 0.047391266 ubox
16 24 0.228153472 ubox
16 28 0.008301145 ubox
16 29 0.028626468 ubox
16 30 0.010299099 ubox
16 31 0.127613127 ubox
16 32 0.027760558 ubox
16 35 0.035752227 ubox
16 44 0.016631428 ubox
16 47 0.006514953 ubox
16 50 0.006645267 ubox
16 51 0.033325291 ubox
17 23 0.227729578 ubox
18 22 0.222793202 ubox
18 42 0.010962212 ubox
18 43 0.012962496 ubox
19 26 0.125116041 ubox
19 34 0.049493683 ubox
19 37 0.003559478 ubox
19 41 0.010938486 ubox
19 42 0.012950092 ubox
19 49 0.019647257 ubox
19 53 0.869164936 ubox
20 25 0.125483858 ubox
20 27 0.046993298 ubox
20 33 0.049608250 ubox
20 35 0.013638089 ubox
20 38 0.014678733 ubox
20 48 0.019601820 ubox
20 52 0.878982439 ubox
21 26 0.030524982 ubox
21 34 0.014680156 ubox
21 37 0.015551213 ubox
21 40 0.014335634 ubox
21 46 0.019008504 ubox
21 49 0.056351931 ubox
21 53 0.143785460 ubox
22 29 0.015972454 ubox
22 30 0.006575061 ubox
22 31 0.049519383 ubox
22 32 0.003457001 ubox
22 33 0.014678785 ubox
22 36 0.015570604 ubox
22 39 0.014494158 ubox
22 45 0.019064974 ubox
22 48 0.056497201 ubox
22 51 0.949129265 ubox
22 52 0.111204970 ubox
23 28 0.015881146 ubox
23 29 0.006658082 ubox
23 30 0.048922990 ubox
23 31 0.003461900 ubox
23 32 0.014629906 ubox
23 35 0.015378008 ubox
23 38 0.014485702 ubox
23 44 0.018976211 ubox
23 47 0.056397002 ubox
23 50 0.955675278 ubox
23 51 0.059322406 ubox
24 34 0.014685352 ubox
24 37 0.014498245 ubox
24 43 0.013423070 ubox
24 46 0.055871091 ubox
24 49 0.957622579 ubox
25 34 0.005573181 ubox
25 42 0.011039077 ubox
25 46 0.007664724 ubox
25 49 0.020942217 ubox
26 33 0.007144622 ubox
26 35 0.014494916 ubox
26 44 0.039449040 ubox
26 45 0.010077949 ubox
26 47 0.957019884 ubox
26 48 0.015831831 ubox
27 34 0.016054394 ubox
27 41 0.007856958 ubox
27 43 0.021110036 ubox
27 46 0.959485733 ubox
27 49 0.004745539 ubox
28 40 0.007630954 ubox
29 42 0.009453321 ubox
29 43 0.012111843 ubox
30 41 0.009390260 ubox
30 42 0.010997880 ubox
30 43 0.963359881 ubox
31 40 0.008533103 ubox
31 41 0.009388579 ubox
31 42 0.963693157 ubox
31 43 0.003621117 ubox
32 40 0.007220163 ubox
32 41 0.963716134 ubox
32 42 0.003853143 ubox
33 40 0.963245876 ubox
33 41 0.004038837 ubox
34 39 0.963324118 ubox
43 51 0.003338616 ubox
45 53 0.134433586 ubox
46 52 0.135489599 ubox
19 53 0.9500000 lbox
20 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
26 47 0.9500000 lbox
27 46 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
showpage
end
%%EOF
