%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRTAP19-1)
} def

/sequence { (\
UGCUGGCAUUCACACUCAGGAUCUUGCCUGAACAACAAACCAACUCACCACUCCUGACACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.070688991 ubox
1 12 0.043174508 ubox
1 14 0.166276267 ubox
1 30 0.005727153 ubox
1 34 0.039466882 ubox
1 37 0.025923874 ubox
1 42 0.016675203 ubox
1 47 0.212411262 ubox
1 50 0.036127825 ubox
1 59 0.036900950 ubox
2 7 0.080751152 ubox
2 11 0.050546606 ubox
2 13 0.195037658 ubox
2 27 0.028077583 ubox
2 29 0.004814522 ubox
2 33 0.043654255 ubox
2 36 0.028686745 ubox
2 41 0.017374198 ubox
2 46 0.249006922 ubox
2 49 0.042239177 ubox
2 58 0.043123673 ubox
3 19 0.007986217 ubox
3 26 0.028155555 ubox
4 12 0.229904745 ubox
4 14 0.172640062 ubox
4 18 0.008116163 ubox
4 30 0.010156729 ubox
4 34 0.025303294 ubox
4 37 0.021616746 ubox
4 42 0.755929909 ubox
4 47 0.035799005 ubox
4 50 0.049720220 ubox
4 56 0.003839793 ubox
4 59 0.028563496 ubox
5 11 0.240121722 ubox
5 13 0.194749086 ubox
5 16 0.024607148 ubox
5 17 0.008196933 ubox
5 24 0.026301131 ubox
5 28 0.129106294 ubox
5 33 0.025540841 ubox
5 36 0.023053402 ubox
5 41 0.811574482 ubox
5 45 0.011816341 ubox
5 46 0.036462959 ubox
5 49 0.056066586 ubox
5 54 0.018025604 ubox
5 58 0.032110500 ubox
5 61 0.037797125 ubox
6 10 0.155645889 ubox
6 15 0.039558217 ubox
6 16 0.005617875 ubox
6 23 0.027848173 ubox
6 27 0.129340927 ubox
6 40 0.810098694 ubox
6 44 0.021640883 ubox
6 45 0.028483729 ubox
6 48 0.055922411 ubox
6 53 0.018036318 ubox
6 60 0.038113595 ubox
7 26 0.129337593 ubox
7 56 0.008459873 ubox
8 22 0.047072662 ubox
8 25 0.120774271 ubox
8 55 0.008601537 ubox
9 20 0.003561119 ubox
9 21 0.074193047 ubox
9 32 0.010959979 ubox
9 35 0.035331941 ubox
9 38 0.226984166 ubox
9 39 0.102025526 ubox
9 43 0.005877346 ubox
9 57 0.005139831 ubox
10 19 0.003509634 ubox
10 20 0.074623629 ubox
10 21 0.087504804 ubox
10 31 0.008726449 ubox
10 34 0.035501280 ubox
10 37 0.224885655 ubox
10 38 0.110260297 ubox
10 42 0.005799678 ubox
10 57 0.018743814 ubox
11 19 0.074857535 ubox
11 20 0.089120086 ubox
11 30 0.007998501 ubox
11 56 0.019869598 ubox
12 29 0.006351621 ubox
12 55 0.018973949 ubox
13 56 0.004569190 ubox
14 55 0.004333572 ubox
16 31 0.875359393 ubox
16 57 0.378948308 ubox
17 26 0.004344503 ubox
17 30 0.902123098 ubox
17 56 0.409742692 ubox
18 24 0.004498734 ubox
18 25 0.004262631 ubox
18 29 0.902133967 ubox
18 55 0.409795221 ubox
19 23 0.004461248 ubox
19 24 0.003563984 ubox
19 28 0.902371856 ubox
19 41 0.003543872 ubox
19 54 0.409909165 ubox
20 27 0.899883798 ubox
20 40 0.003568285 ubox
20 53 0.409886444 ubox
21 52 0.403543037 ubox
22 31 0.110294087 ubox
23 30 0.110872793 ubox
24 31 0.004009162 ubox
24 32 0.007221065 ubox
24 35 0.042720021 ubox
24 38 0.022372277 ubox
24 39 0.004913262 ubox
24 43 0.026194134 ubox
25 30 0.003949034 ubox
25 31 0.007837591 ubox
25 34 0.046190252 ubox
25 37 0.024165741 ubox
25 38 0.005161310 ubox
25 42 0.028263518 ubox
25 47 0.086203807 ubox
25 50 0.323431311 ubox
26 33 0.046343012 ubox
26 36 0.024276120 ubox
26 41 0.028285065 ubox
26 46 0.088325669 ubox
26 49 0.326220926 ubox
29 37 0.037606350 ubox
29 42 0.092751033 ubox
29 47 0.332242360 ubox
29 50 0.015327650 ubox
29 59 0.005038668 ubox
30 36 0.039665195 ubox
30 41 0.096648221 ubox
30 46 0.343107544 ubox
30 49 0.016180461 ubox
30 53 0.006212041 ubox
30 58 0.005669061 ubox
31 45 0.329056066 ubox
31 52 0.006024061 ubox
33 56 0.022204397 ubox
34 55 0.020866674 ubox
36 56 0.024033285 ubox
37 55 0.022587336 ubox
41 56 0.045972637 ubox
42 55 0.043571862 ubox
45 57 0.336371197 ubox
46 56 0.363442149 ubox
47 55 0.340093663 ubox
49 56 0.219566592 ubox
50 55 0.187553329 ubox
4 42 0.9500000 lbox
5 41 0.9500000 lbox
6 40 0.9500000 lbox
16 31 0.9500000 lbox
17 30 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
showpage
end
%%EOF
