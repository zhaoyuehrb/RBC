%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGAUAGCACAGUUCUGUCCAGAGAAGGAAGGCAGAAUAAACUUAUUCAUUCCCAGGAACUCUUGGGGUAGGUGUGUGUUUUUCACAUCUUAAAGGCUCACAGACCCUGCGCUGGACAAAUGUUCCAUUCCUGAAGGACCUCUCCAGAAUCCGGAUUGCUGAAUCUUCCCUGUUGCCUAGAAGGGCUCCAAACCACCUCUUGACA\
) } def
/len { sequence length } bind def

/coor [
[76.80531311 411.71795654]
[73.41995239 426.33093262]
[70.03459930 440.94393921]
[66.64924622 455.55691528]
[75.22566223 468.83172607]
[71.82176971 484.26510620]
[58.45702744 492.70068359]
[43.06050491 489.13381958]
[34.76668167 475.68063354]
[38.49613953 460.32269287]
[52.03625488 452.17156982]
[55.42161179 437.55856323]
[58.80696869 422.94558716]
[62.19232559 408.33261108]
[56.05758667 397.90478516]
[58.76065445 385.70120239]
[69.38469696 378.38372803]
[72.99143219 363.82379150]
[76.59816742 349.26388550]
[80.20490265 334.70394897]
[75.75485992 320.48965454]
[86.58340454 308.95477295]
[90.19013977 294.39483643]
[93.79687500 279.83493042]
[97.40361023 265.27499390]
[88.45886993 244.65499878]
[94.11232758 225.72460938]
[108.43875122 216.47601318]
[106.39624786 201.61572266]
[104.35375214 186.75544739]
[102.31124878 171.89515686]
[100.26875305 157.03486633]
[98.22624969 142.17457581]
[81.60685730 143.77716064]
[63.90481567 138.47578430]
[48.04402924 125.84416199]
[33.63139725 130.00059509]
[19.21876335 134.15704346]
[4.80612946 138.31347656]
[-9.60650444 142.46992493]
[-20.58440590 154.65260315]
[-36.56532669 150.97261047]
[-41.10946274 135.21562195]
[-29.54219818 123.59106445]
[-13.76294327 128.05728149]
[0.64969051 123.90084839]
[15.06232452 119.74440765]
[29.47495842 115.58796692]
[43.88759232 111.43152618]
[43.83068085 103.93174744]
[30.78360748 96.53080750]
[43.71685410 88.93217468]
[43.65994263 81.43239594]
[29.18589020 77.49516296]
[14.71183681 73.55792999]
[0.23778376 69.62069702]
[-14.23626900 65.68347168]
[-28.71032143 61.74623489]
[-44.41997910 66.45141602]
[-56.16232681 55.00373840]
[-51.85784531 39.17959595]
[-35.93461609 35.25750732]
[-24.77309036 47.27218246]
[-10.29903793 51.20941544]
[4.17501497 55.14664459]
[18.64906883 59.08387756]
[33.12311935 63.02111053]
[47.59717560 66.95834351]
[57.41226196 55.61532211]
[51.43624496 41.85715485]
[45.46022797 28.09898376]
[39.48421478 14.34081364]
[33.50819778 0.58264452]
[27.22054863 -13.03592682]
[20.62452888 -26.50784302]
[14.02850723 -39.97975922]
[7.43248653 -53.45167542]
[-5.58501196 -62.44363022]
[-4.23255157 -77.27670288]
[-10.82857227 -90.74861908]
[-17.42459297 -104.22053528]
[-24.02061462 -117.69245148]
[-30.61663437 -131.16436768]
[-37.21265411 -144.63629150]
[-52.52067184 -147.17485046]
[-63.38898468 -158.25001526]
[-65.63850403 -173.60316467]
[-58.40424728 -187.33070374]
[-44.46793365 -194.15409851]
[-29.18835640 -191.44963074]
[-18.44082832 -180.25720215]
[-16.35799217 -164.88055420]
[-23.74073982 -151.23229980]
[-17.14472008 -137.76039124]
[-10.54869843 -124.28847504]
[-3.95267773 -110.81655884]
[2.64334321 -97.34464264]
[9.23936367 -83.87272644]
[21.78507042 -75.84436798]
[20.90440178 -60.04769516]
[27.50042343 -46.57577896]
[34.09644318 -33.10386276]
[40.69246292 -19.63194847]
[43.89482117 -18.14933777]
[46.53712845 -15.04029942]
[47.86202621 -10.58545399]
[47.26636505 -5.39337206]
[53.24238205 8.36479759]
[59.21839905 22.12296677]
[65.19441223 35.88113785]
[71.17043304 49.63930511]
[103.03543854 45.53154373]
[130.14405823 58.76641083]
[141.10659790 48.52811432]
[152.06913757 38.28981781]
[163.03167725 28.05151939]
[173.99421692 17.81322289]
[170.83868408 5.71362495]
[173.11497498 -6.50832081]
[180.33055115 -16.54341698]
[191.06562805 -22.52224731]
[203.25218201 -23.36330414]
[214.57223511 -18.96814728]
[225.84045410 -28.86902809]
[237.10865784 -38.76990891]
[248.37687683 -48.67078781]
[245.28756714 -63.71578217]
[250.14988708 -78.28470612]
[261.65585327 -88.45858765]
[276.71047974 -91.50071716]
[291.26406860 -86.59275818]
[301.40185547 -75.05494690]
[304.39675903 -59.99088287]
[299.44320679 -45.45272827]
[287.87368774 -35.35117340]
[272.80029297 -32.40348434]
[258.27774048 -37.40257645]
[247.00953674 -27.50169754]
[235.74133301 -17.60081673]
[224.47311401 -7.69993734]
[226.92266846 9.78674603]
[218.31118774 25.38173485]
[201.92015076 32.75206757]
[184.23251343 28.77576065]
[173.26997375 39.01405716]
[162.30743408 49.25235748]
[151.34489441 59.49065399]
[140.38235474 69.72895050]
[142.89395142 76.79590607]
[157.02795410 71.77294922]
[162.05067444 85.90702820]
[147.91714478 90.92981720]
[150.42874146 97.99678040]
[165.39376831 99.02041626]
[180.35881042 100.04405212]
[194.84138489 92.35073853]
[208.59989929 101.27458954]
[207.48078918 117.63550568]
[192.63528442 124.60278320]
[179.33517456 115.00907898]
[164.37013245 113.98544312]
[149.40510559 112.96180725]
[139.99786377 126.75632477]
[127.27025604 136.00535583]
[113.08654022 140.13208008]
[115.12903595 154.99235535]
[117.17153931 169.85264587]
[119.21403503 184.71293640]
[121.25653839 199.57322693]
[123.29903412 214.43351746]
[144.60121155 223.16308594]
[151.63829041 250.52207947]
[162.12347412 261.24871826]
[177.69645691 261.59469604]
[188.17712402 272.62240601]
[187.75132751 287.46673584]
[198.23651123 298.19338989]
[208.72169495 308.92001343]
[219.20687866 319.64666748]
[235.13528442 323.54766846]
[239.46070862 339.36611938]
[227.73352051 350.82931519]
[212.01765442 346.14492798]
[208.48023987 330.13186646]
[197.99505615 319.40521240]
[187.50987244 308.67855835]
[177.02467346 297.95193481]
[162.17449951 298.03970337]
[151.38822937 287.31072998]
[151.39683533 271.73391724]
[140.91163635 261.00726318]
[133.67462158 262.97589111]
[137.73361206 277.41625977]
[141.54888916 291.92294312]
[127.07488251 295.86035156]
[123.01575470 281.41979980]
[119.20056152 266.91311646]
[111.96353912 268.88171387]
[108.35680389 283.44165039]
[104.75006866 298.00158691]
[101.14333344 312.56149292]
[105.33539581 327.81723022]
[94.76483154 338.31066895]
[91.15809631 352.87060547]
[87.55136108 367.43054199]
[83.94462585 381.99047852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[17 206]
[18 205]
[19 204]
[20 203]
[22 201]
[23 200]
[24 199]
[25 198]
[28 170]
[29 169]
[30 168]
[31 167]
[32 166]
[33 165]
[36 49]
[37 48]
[38 47]
[39 46]
[40 45]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[69 111]
[70 110]
[71 109]
[72 108]
[73 107]
[74 103]
[75 102]
[76 101]
[77 100]
[79 98]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[113 148]
[114 147]
[115 146]
[116 145]
[117 144]
[123 140]
[124 139]
[125 138]
[126 137]
[153 162]
[154 161]
[155 160]
[172 191]
[173 190]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
