%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAGGUCCAAAGUCUCACGGCGCACAGACGACUGUCUGAGAGAGGGGCCGCUACGCCGCACAGCAAACAAGCUCCGCGACGUUUCCAGGACCCGGAUAAUCCCGCCCUUAGAGCAGAGCCGGAAGAAGGCGGGACGAACCGGAAGAGGGUGAAAUGCUUUCGGUAGGCACUCCACGGCUGUGAAG\
) } def
/len { sequence length } bind def

/coor [
[101.30701447 314.40853882]
[98.03917694 329.17935181]
[90.36509705 342.21636963]
[79.03662109 352.24237061]
[65.16358185 358.27511597]
[50.10512161 359.72354126]
[35.33651733 356.44583130]
[22.30464745 348.76300049]
[12.28623962 337.42782593]
[6.26279545 323.55075073]
[4.82443094 308.49130249]
[8.11206150 293.72491455]
[15.80360031 280.69818115]
[27.14550781 270.68737793]
[41.02661896 264.67324829]
[56.08700562 263.24496460]
[59.33701706 248.60127258]
[62.58702850 233.95759583]
[65.83703613 219.31391907]
[69.08705139 204.67022705]
[72.33705902 190.02655029]
[75.58707428 175.38287354]
[63.11522293 170.12902832]
[51.71932602 162.82948303]
[41.73180771 153.69715881]
[33.44400787 142.99845886]
[20.13077545 149.90916443]
[6.81754112 156.81987000]
[-6.49569273 163.73057556]
[-19.80892754 170.64126587]
[-28.17549896 184.74562073]
[-44.56808090 184.28158569]
[-52.12338638 169.72654724]
[-43.06916809 156.05346680]
[-26.71962929 157.32803345]
[-13.40639496 150.41732788]
[-0.09316067 143.50663757]
[13.22007370 136.59593201]
[26.53330803 129.68522644]
[22.86891365 118.14836884]
[21.00457764 106.18797302]
[20.98380661 94.08316040]
[22.80708694 82.11643219]
[26.43186760 70.56706238]
[31.77355385 59.70459366]
[38.70748138 49.78252029]
[28.05642700 39.22056198]
[17.40537071 28.65859985]
[6.66597223 18.18647957]
[-4.16101217 7.80493879]
[-21.88331032 11.55355549]
[-38.17223740 3.99445701]
[-46.60249329 -11.68311691]
[-43.97344589 -29.12959099]
[-55.14307022 -39.14155579]
[-66.31269836 -49.15351868]
[-81.75325775 -52.60312271]
[-86.06613922 -66.85964203]
[-97.23577118 -76.87160492]
[-108.40539551 -86.88356781]
[-123.96731567 -86.20199585]
[-135.15228271 -96.51466370]
[-135.70616150 -111.35477448]
[-146.87577820 -121.36673737]
[-158.04541016 -131.37870789]
[-173.81048584 -130.26606750]
[-185.68989563 -140.68984985]
[-186.63578796 -156.46580505]
[-176.08699036 -168.23434448]
[-160.30191040 -169.01339722]
[-148.64555359 -158.34075928]
[-148.03344727 -142.54832458]
[-136.86381531 -132.53636169]
[-125.69419098 -122.52439880]
[-110.88211060 -123.59114075]
[-99.41189575 -113.59670258]
[-98.39343262 -98.05319977]
[-87.22380829 -88.04122925]
[-76.05417633 -78.02926636]
[-61.41254807 -75.29578400]
[-56.30073547 -60.32314682]
[-45.13110733 -50.31118393]
[-33.96147919 -40.29921722]
[-22.57892036 -44.58666992]
[-10.38213634 -43.61383438]
[0.30234465 -37.50455856]
[7.41022539 -27.36832237]
[9.53817463 -15.09919834]
[6.22052908 -3.02204609]
[17.04751396 7.35949516]
[24.06618309 9.72444630]
[27.96733284 18.00754547]
[38.61838913 28.56950569]
[49.26944351 39.13146591]
[62.60478973 30.14181519]
[77.48062897 24.02996826]
[93.28415680 21.04770279]
[109.36434174 21.31787491]
[125.05876160 24.82935333]
[139.72088623 31.43748283]
[152.74671936 40.87004471]
[163.74656677 30.67185211]
[174.74642944 20.47365952]
[185.74629211 10.27546787]
[196.74615479 0.07727599]
[207.74600220 -10.12091637]
[218.74586487 -20.31910706]
[229.57284546 -30.70064926]
[240.22390747 -41.26261139]
[250.87495422 -51.82456970]
[248.65905762 -67.06910706]
[255.76150513 -80.53791809]
[269.27316284 -87.16354370]
[283.92007446 -84.59325409]
[294.57113647 -95.15522003]
[301.56060791 -110.60136414]
[318.33798218 -108.16094971]
[320.63739014 -91.36365509]
[305.13308716 -84.50415802]
[294.48202515 -73.94219971]
[296.92919922 -59.27423096]
[290.19030762 -45.81869888]
[276.66232300 -38.82964325]
[261.43692017 -41.17351532]
[250.78587341 -30.61155510]
[240.13481140 -20.04959297]
[239.22080994 -15.34264946]
[235.32720947 -11.16696167]
[228.94406128 -9.31925011]
[217.94419861 0.87894225]
[206.94433594 11.07713413]
[195.94448853 21.27532578]
[184.94462585 31.47351837]
[173.94476318 41.67171097]
[162.94490051 51.86990356]
[172.52416992 68.08114624]
[178.00779724 86.09493256]
[179.08613586 104.89396667]
[175.69827271 123.41662598]
[189.54438782 129.18597412]
[203.39048767 134.95530701]
[217.23660278 140.72465515]
[231.08270264 146.49398804]
[244.92881775 152.26333618]
[258.77493286 158.03266907]
[272.62103271 163.80201721]
[284.35839844 153.97894287]
[299.31878662 150.74700928]
[314.06442261 154.84889221]
[325.20681763 165.34201050]
[330.18557739 179.81510925]
[327.85659790 194.94238281]
[318.75506592 207.24769592]
[304.97247314 213.90338135]
[289.67590332 213.38000488]
[276.38043213 205.79783630]
[268.14126587 192.89921570]
[266.85168457 177.64811707]
[253.00558472 171.87878418]
[239.15946960 166.10943604]
[225.31336975 160.34010315]
[211.46725464 154.57075500]
[197.62115479 148.80142212]
[183.77503967 143.03207397]
[169.92893982 137.26274109]
[160.31739807 151.38462830]
[147.90248108 163.11830139]
[155.79896545 175.87156677]
[170.49491882 183.14897156]
[171.27032471 199.52976990]
[157.32748413 208.16281128]
[143.00961304 200.16716003]
[143.04570007 183.76805115]
[135.14921570 171.01478577]
[124.45878601 175.36799622]
[113.24932098 178.12184143]
[101.75869751 179.21789551]
[90.23075104 178.63287354]
[86.98074341 193.27656555]
[83.73072815 207.92024231]
[80.48072052 222.56391907]
[77.23071289 237.20761108]
[73.98069763 251.85128784]
[70.73069000 266.49496460]
[83.77284241 274.16030884]
[93.80643463 285.48205566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 184]
[17 183]
[18 182]
[19 181]
[20 180]
[21 179]
[22 178]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[46 94]
[47 93]
[48 92]
[49 90]
[50 89]
[54 83]
[55 82]
[56 81]
[58 79]
[59 78]
[60 77]
[63 74]
[64 73]
[65 72]
[101 135]
[102 134]
[103 133]
[104 132]
[105 131]
[106 130]
[107 129]
[108 126]
[109 125]
[110 124]
[114 120]
[115 119]
[139 165]
[140 164]
[141 163]
[142 162]
[143 161]
[144 160]
[145 159]
[146 158]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
