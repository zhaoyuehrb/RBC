%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EGR4)
} def

/sequence { (\
CGGGAGUCCCCGGCACACAUCCUGUGUCCAUGUUUGGGCAUUUACGUCACGGCGGCAGGGCCGGGGCCUCCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 71 0.003999389 ubox
2 72 0.998929016 ubox
3 70 0.003301195 ubox
3 71 0.999972522 ubox
3 72 0.004131371 ubox
4 70 0.999981910 ubox
5 69 0.999807578 ubox
6 67 0.050953543 ubox
6 68 0.996673655 ubox
7 66 0.015736697 ubox
8 65 0.013698052 ubox
8 66 0.998645998 ubox
9 64 0.011204294 ubox
9 65 0.999899025 ubox
10 63 0.007946025 ubox
10 64 0.999931303 ubox
11 63 0.999944149 ubox
12 28 0.004389883 ubox
12 29 0.004575810 ubox
12 62 0.999947904 ubox
13 27 0.004735986 ubox
13 28 0.004579798 ubox
13 61 0.999953388 ubox
14 26 0.005942869 ubox
14 60 0.989996978 ubox
15 23 0.004211699 ubox
15 25 0.035263357 ubox
15 27 0.084480048 ubox
15 47 0.004643387 ubox
16 24 0.041839237 ubox
16 26 0.091210757 ubox
16 46 0.004693535 ubox
17 23 0.039066057 ubox
17 25 0.095596950 ubox
17 27 0.007126696 ubox
17 47 0.012271693 ubox
18 24 0.097376556 ubox
18 26 0.007696146 ubox
18 46 0.012758722 ubox
19 23 0.079009014 ubox
19 25 0.007955752 ubox
19 47 0.004439628 ubox
20 24 0.007464600 ubox
20 46 0.004507259 ubox
20 52 0.006508491 ubox
20 55 0.081029816 ubox
20 59 0.017605285 ubox
20 60 0.136977251 ubox
21 51 0.007064623 ubox
21 52 0.052123172 ubox
21 54 0.088430563 ubox
21 55 0.038084620 ubox
21 58 0.014978571 ubox
21 59 0.969683812 ubox
21 60 0.008385400 ubox
22 51 0.052085925 ubox
22 52 0.111429085 ubox
22 54 0.037107712 ubox
22 55 0.018916406 ubox
22 58 0.970237482 ubox
22 59 0.011859131 ubox
23 44 0.013082110 ubox
23 46 0.010820236 ubox
23 49 0.037952647 ubox
23 51 0.111595731 ubox
23 54 0.018547490 ubox
23 57 0.968761013 ubox
23 58 0.010540168 ubox
23 59 0.005303783 ubox
24 41 0.230905515 ubox
24 43 0.008874604 ubox
24 45 0.014126581 ubox
24 48 0.035902553 ubox
24 50 0.105071202 ubox
24 53 0.019418001 ubox
24 56 0.956073515 ubox
25 40 0.443471936 ubox
25 44 0.010807255 ubox
25 46 0.008984740 ubox
25 49 0.085936051 ubox
25 52 0.016197963 ubox
25 54 0.089143455 ubox
25 55 0.856685209 ubox
25 57 0.008839927 ubox
26 39 0.940254678 ubox
26 41 0.003355915 ubox
26 45 0.010883896 ubox
26 48 0.055978708 ubox
26 50 0.003673477 ubox
26 53 0.125870586 ubox
26 56 0.010494755 ubox
27 38 0.941852575 ubox
27 40 0.003281677 ubox
27 44 0.011453690 ubox
27 46 0.007476948 ubox
27 49 0.003430870 ubox
27 52 0.106189464 ubox
27 55 0.009804166 ubox
28 37 0.943734452 ubox
28 38 0.006444973 ubox
28 51 0.103283284 ubox
28 52 0.291932460 ubox
28 54 0.011449079 ubox
28 55 0.020813766 ubox
28 58 0.004670632 ubox
28 59 0.080142609 ubox
29 36 0.944134854 ubox
29 37 0.006264249 ubox
29 51 0.291373909 ubox
29 54 0.021667741 ubox
29 58 0.080183759 ubox
29 59 0.008425497 ubox
30 35 0.910819733 ubox
30 41 0.049055270 ubox
30 47 0.104219115 ubox
31 40 0.050402044 ubox
31 46 0.105487813 ubox
31 49 0.247918862 ubox
31 51 0.034676777 ubox
31 54 0.066679794 ubox
31 57 0.074468072 ubox
32 39 0.050563653 ubox
32 45 0.105871562 ubox
32 47 0.004175249 ubox
32 48 0.247527216 ubox
32 50 0.099411998 ubox
32 53 0.071432055 ubox
32 56 0.075034632 ubox
33 38 0.048151250 ubox
33 44 0.104112032 ubox
33 46 0.029063131 ubox
33 49 0.098333746 ubox
33 52 0.068508700 ubox
33 55 0.074080800 ubox
34 51 0.058699877 ubox
34 52 0.047507230 ubox
34 54 0.052320643 ubox
34 55 0.003742092 ubox
35 44 0.040827839 ubox
35 46 0.230229803 ubox
35 49 0.025282672 ubox
35 51 0.073057109 ubox
35 54 0.005117456 ubox
36 42 0.018531642 ubox
36 43 0.045284068 ubox
36 45 0.240213238 ubox
36 48 0.024801489 ubox
36 50 0.095591314 ubox
36 53 0.006267432 ubox
37 41 0.012900129 ubox
37 42 0.037216559 ubox
37 43 0.027947754 ubox
37 47 0.019945595 ubox
37 48 0.166124353 ubox
37 62 0.003366048 ubox
38 42 0.019491534 ubox
38 47 0.172594958 ubox
38 53 0.012916532 ubox
38 56 0.015414535 ubox
38 61 0.003645261 ubox
39 46 0.173285908 ubox
39 52 0.012927581 ubox
39 55 0.015434349 ubox
39 60 0.003703537 ubox
40 47 0.014667191 ubox
41 46 0.014533131 ubox
41 52 0.007717841 ubox
41 55 0.015440206 ubox
41 58 0.016350813 ubox
41 59 0.011284359 ubox
42 51 0.009786009 ubox
42 52 0.007340114 ubox
42 54 0.030948136 ubox
42 55 0.012078502 ubox
42 57 0.032392891 ubox
42 58 0.023206194 ubox
42 59 0.011624656 ubox
43 51 0.008174141 ubox
43 54 0.013217064 ubox
43 57 0.023244091 ubox
43 58 0.011894641 ubox
43 59 0.006696912 ubox
45 51 0.125807301 ubox
45 54 0.886283801 ubox
46 50 0.118724585 ubox
46 53 0.892765318 ubox
46 56 0.178199578 ubox
47 52 0.850035532 ubox
47 55 0.179268992 ubox
47 59 0.003759557 ubox
48 54 0.182915164 ubox
48 58 0.005002891 ubox
51 62 0.006454905 ubox
52 61 0.006540677 ubox
53 60 0.006576503 ubox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
21 59 0.9500000 lbox
22 58 0.9500000 lbox
23 57 0.9500000 lbox
24 56 0.9500000 lbox
25 55 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
