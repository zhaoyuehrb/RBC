%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAGGAAGCGCGCGCCCGCGCCGCCGCCGCCGCCGAAUCCCCAACAAGGAGCGAAGCCCGCGGCCGCCGCCGCCGCCCGCCGCCGCCGCAGCUCCCGACGCCGCCGCCCCCGCCGGGUGCCUAAGCAGGCCCGGCGCGGCCCCAGGACUUGGGACCCUGGAGGACUGACGCUGCUGGCCUGGGCGUCCCCUUCCGCUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[-97.65943146 217.07513428]
[-109.88830566 208.38867188]
[-115.83979034 194.61987305]
[-113.78833771 179.76081848]
[-104.33072662 168.12110901]
[-119.18688202 170.19345093]
[-128.70809937 182.52163696]
[-143.80386353 184.41166687]
[-155.49824524 175.25866699]
[-170.35440063 177.33100891]
[-185.21055603 179.40335083]
[-193.28286743 183.69052124]
[-200.31124878 181.39140320]
[-215.19755554 183.23472595]
[-230.08386230 185.07804871]
[-239.79379272 197.25816345]
[-254.91688538 198.91549683]
[-266.46890259 189.58349609]
[-281.35522461 191.42681885]
[-289.49261475 195.58917236]
[-296.48474121 193.18208313]
[-311.39767456 194.79595947]
[-324.28527832 203.97311401]
[-337.77111816 197.65007019]
[-352.68405151 199.26393127]
[-365.57165527 208.44110107]
[-379.05752563 202.11805725]
[-393.97042847 203.73191833]
[-406.85803223 212.90908813]
[-420.34390259 206.58602905]
[-435.25683594 208.19990540]
[-450.16976929 209.81376648]
[-465.08267212 211.42762756]
[-479.99560547 213.04150391]
[-494.81808472 215.34237671]
[-509.51849365 218.32534790]
[-517.28332520 228.62896729]
[-529.59277344 230.80848694]
[-539.74969482 224.23219299]
[-554.49432373 226.98843384]
[-569.23889160 229.74467468]
[-576.76013184 243.45471191]
[-591.35302734 249.07446289]
[-606.12725830 243.95043945]
[-614.10693359 230.50204468]
[-611.52423096 215.07920837]
[-599.59869385 204.96412659]
[-583.96112061 204.93281555]
[-571.99517822 215.00007629]
[-557.25054932 212.24383545]
[-542.50598145 209.48759460]
[-529.81732178 197.36810303]
[-512.50146484 203.62493896]
[-497.80105591 200.64196777]
[-509.65148926 191.44590759]
[-511.66979980 176.58230591]
[-502.70071411 164.55918884]
[-487.87820435 162.25862122]
[-475.68670654 170.99746704]
[-473.10470581 185.77357483]
[-481.60946655 198.12857056]
[-466.69656372 196.51470947]
[-451.78363037 194.90083313]
[-436.87069702 193.28697205]
[-421.95776367 191.67311096]
[-410.13684082 182.61137390]
[-395.58432007 188.81898499]
[-380.67138672 187.20512390]
[-368.85046387 178.14340210]
[-354.29791260 184.35101318]
[-339.38497925 182.73713684]
[-327.56405640 173.67541504]
[-313.01153564 179.88302612]
[-298.09860229 178.26916504]
[-283.19854736 176.54051208]
[-268.31222534 174.69718933]
[-259.38531494 162.82934570]
[-244.31474304 160.74789429]
[-231.92718506 170.19174194]
[-217.04087830 168.34841919]
[-202.15457153 166.50509644]
[-187.28289795 164.54719543]
[-172.42674255 162.47485352]
[-157.57058716 160.40251160]
[-148.82746887 148.39860535]
[-133.79074097 146.08532715]
[-121.25922394 155.33729553]
[-106.40306854 153.26495361]
[-97.98943329 146.49949646]
[-86.16240692 149.15776062]
[-71.67351532 145.27546692]
[-57.18463135 141.39318848]
[-42.69574356 137.51089478]
[-38.81961823 119.81552887]
[-26.44331360 106.47137451]
[-8.92630959 101.22755432]
[8.91168404 105.61698914]
[22.11681557 118.50954437]
[36.41094589 113.96225739]
[50.70507431 109.41497040]
[64.99920654 104.86767578]
[79.29333496 100.32038879]
[93.58746338 95.77309418]
[86.56466675 87.07367706]
[82.76313782 75.92713165]
[82.78884888 63.26028442]
[87.77416992 49.11296463]
[92.75949097 34.96564865]
[97.74481201 20.81833267]
[102.73013306 6.67101669]
[97.12586212 -8.36133862]
[105.50762177 -22.04072762]
[121.44564056 -23.87349319]
[132.71363831 -12.45369530]
[130.66777039 3.45837426]
[116.87744904 11.65633869]
[111.89212799 25.80365562]
[106.90680695 39.95096970]
[101.92148590 54.09828949]
[96.93616486 68.24560547]
[101.12691498 74.46553802]
[107.70950317 60.98705292]
[122.67351532 59.94860458]
[131.05474854 72.38865662]
[124.47187042 85.86699677]
[109.50842285 86.90540314]
[113.69918060 93.12534332]
[128.68318176 93.81809235]
[143.66717529 94.51084137]
[158.65116882 95.20359802]
[173.63516235 95.89634705]
[188.61915588 96.58909607]
[203.61204529 97.05102539]
[218.61026001 97.28201294]
[233.60847473 97.51300812]
[248.60670471 97.74399567]
[263.60491943 97.97498322]
[278.60449219 98.09048462]
[293.60449219 98.09048462]
[308.60449219 98.09048462]
[323.60403442 97.97498322]
[338.60226440 97.74399567]
[353.59826660 97.39752960]
[368.59112549 96.93560028]
[383.58401489 96.47367859]
[398.57690430 96.01174927]
[413.56979370 95.54982758]
[421.41848755 82.26819611]
[435.21206665 75.35871887]
[450.54904175 77.02619171]
[462.53546143 86.73851776]
[467.34649658 101.39653778]
[463.44696045 116.32292938]
[452.08117676 126.75473022]
[436.87591553 129.36320496]
[422.68316650 123.31597900]
[414.03173828 110.54270935]
[399.03884888 111.00463867]
[384.04595947 111.46656036]
[369.05307007 111.92848969]
[354.06018066 112.39041138]
[347.46765137 115.74042511]
[338.83325195 112.74221802]
[323.83502197 112.97320557]
[317.19168091 116.22129822]
[308.60449219 113.09048462]
[293.60449219 113.09048462]
[278.60449219 113.09048462]
[271.91192627 116.23588562]
[263.37393188 112.97320557]
[248.37571716 112.74221802]
[233.37748718 112.51123047]
[218.37927246 112.28023529]
[203.38104248 112.04924774]
[199.38616943 114.67572784]
[193.69784546 114.81673431]
[187.92640686 111.57309723]
[172.94241333 110.88034058]
[157.95840454 110.18759155]
[142.97441101 109.49483490]
[127.99042511 108.80208588]
[113.00643158 108.10933685]
[98.13475800 110.06723022]
[83.84062195 114.61451721]
[69.54649353 119.16180420]
[55.25236511 123.70909882]
[40.95823669 128.25639343]
[26.66410446 132.80368042]
[25.61652756 144.78588867]
[20.60221100 155.68066406]
[12.23039055 164.22013855]
[1.49949241 169.41928101]
[-10.32191181 170.68940735]
[-21.84505463 167.90481567]
[-31.72412872 161.41473389]
[-38.81345749 151.99978638]
[-53.30234528 155.88206482]
[-67.79122925 159.76435852]
[-82.28012085 163.64663696]
[-69.03178406 170.68096924]
[-61.35186768 183.56579590]
[-61.46706009 198.56535339]
[-69.34396362 211.33071899]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 88]
[6 87]
[9 84]
[10 83]
[11 82]
[13 81]
[14 80]
[15 79]
[18 76]
[19 75]
[21 74]
[22 73]
[24 71]
[25 70]
[27 68]
[28 67]
[30 65]
[31 64]
[32 63]
[33 62]
[34 61]
[35 54]
[36 53]
[39 51]
[40 50]
[41 49]
[90 199]
[91 198]
[92 197]
[93 196]
[98 188]
[99 187]
[100 186]
[101 185]
[102 184]
[103 183]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[127 182]
[128 181]
[129 180]
[130 179]
[131 178]
[132 177]
[133 174]
[134 173]
[135 172]
[136 171]
[137 170]
[138 168]
[139 167]
[140 166]
[141 164]
[142 163]
[143 161]
[144 160]
[145 159]
[146 158]
[147 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
