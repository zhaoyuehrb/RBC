%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRSS22)
} def

/sequence { (\
ACACACCCUGACCCGCAUCGCCCUGGGUCUCUCGAGCCUGCUGCCUGCUCCCCCGCCCCACCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.017756053 ubox
2 40 0.009135080 ubox
2 43 0.013186829 ubox
3 9 0.022000237 ubox
3 39 0.012079206 ubox
3 42 0.013163327 ubox
4 10 0.014656756 ubox
4 40 0.020365287 ubox
5 9 0.015905599 ubox
5 28 0.034319223 ubox
5 39 0.024798451 ubox
6 27 0.036841699 ubox
7 26 0.036864104 ubox
8 25 0.036845347 ubox
8 36 0.083725161 ubox
8 64 0.038065868 ubox
9 15 0.003497060 ubox
9 17 0.014416472 ubox
9 20 0.021534081 ubox
9 34 0.022676088 ubox
9 35 0.083974070 ubox
9 55 0.003889406 ubox
9 60 0.004393526 ubox
9 63 0.037782159 ubox
10 14 0.004819040 ubox
10 16 0.015903446 ubox
10 19 0.032966389 ubox
10 24 0.003444029 ubox
10 29 0.992048389 ubox
10 31 0.015756661 ubox
10 33 0.017588927 ubox
10 50 0.007077711 ubox
10 54 0.004128820 ubox
10 59 0.003849102 ubox
10 62 0.029936029 ubox
11 18 0.030534329 ubox
11 28 0.994380210 ubox
11 30 0.011760241 ubox
11 32 0.013400038 ubox
11 49 0.007023641 ubox
12 27 0.994950150 ubox
13 25 0.003606872 ubox
13 26 0.994943021 ubox
13 27 0.005653566 ubox
14 20 0.020235092 ubox
14 25 0.994620756 ubox
14 26 0.007389777 ubox
15 19 0.021800896 ubox
15 21 0.308377685 ubox
15 24 0.875288030 ubox
15 37 0.004996478 ubox
15 44 0.020988410 ubox
15 48 0.028374692 ubox
15 65 0.013941569 ubox
16 20 0.308978179 ubox
16 25 0.015628634 ubox
16 36 0.004999086 ubox
16 43 0.021029274 ubox
16 47 0.028407740 ubox
16 64 0.013943541 ubox
17 24 0.026919696 ubox
17 42 0.019571176 ubox
17 46 0.027528584 ubox
18 35 0.004994013 ubox
19 34 0.005018424 ubox
19 40 0.005428980 ubox
19 43 0.006417686 ubox
20 24 0.004799309 ubox
20 28 0.003544340 ubox
20 33 0.004561022 ubox
20 39 0.005171443 ubox
20 41 0.023136188 ubox
20 44 0.025757107 ubox
20 56 0.006266400 ubox
20 65 0.063692547 ubox
21 27 0.004479995 ubox
21 40 0.023197915 ubox
21 43 0.025758588 ubox
21 55 0.006272885 ubox
21 64 0.063720418 ubox
22 26 0.004448689 ubox
23 36 0.004106550 ubox
23 64 0.010971850 ubox
24 35 0.004093366 ubox
24 40 0.011362034 ubox
24 55 0.003286070 ubox
24 60 0.063280919 ubox
24 63 0.011158796 ubox
25 33 0.003571954 ubox
25 38 0.040797956 ubox
25 39 0.020087700 ubox
25 53 0.006613834 ubox
25 54 0.004794038 ubox
25 58 0.043213172 ubox
25 59 0.066503524 ubox
25 62 0.009637148 ubox
26 32 0.003605714 ubox
26 33 0.003944005 ubox
26 37 0.040841598 ubox
26 38 0.020714471 ubox
26 52 0.006631419 ubox
26 53 0.004783819 ubox
26 57 0.044592938 ubox
26 58 0.065754228 ubox
26 61 0.008982095 ubox
27 31 0.003574672 ubox
27 37 0.020721662 ubox
27 51 0.006637716 ubox
27 52 0.004763177 ubox
27 56 0.045820116 ubox
27 57 0.064877428 ubox
28 35 0.042862823 ubox
28 36 0.014192809 ubox
28 55 0.046023399 ubox
29 34 0.044135242 ubox
29 36 0.012090498 ubox
30 35 0.019985839 ubox
31 64 0.008625775 ubox
32 63 0.008461050 ubox
33 40 0.008058596 ubox
33 43 0.003976499 ubox
33 47 0.015805486 ubox
33 55 0.049007732 ubox
34 39 0.017519183 ubox
34 46 0.016512445 ubox
34 50 0.460618571 ubox
34 54 0.050309449 ubox
35 42 0.012674380 ubox
35 46 0.012232253 ubox
35 49 0.461721078 ubox
36 41 0.013000122 ubox
36 44 0.035672513 ubox
36 45 0.011012799 ubox
36 48 0.461626153 ubox
36 56 0.026786073 ubox
36 65 0.277420127 ubox
37 43 0.036291643 ubox
37 47 0.460458280 ubox
37 55 0.026810118 ubox
37 64 0.199714698 ubox
38 64 0.285362182 ubox
39 60 0.033811805 ubox
39 63 0.346180893 ubox
40 46 0.034403472 ubox
40 48 0.087573587 ubox
40 56 0.009842850 ubox
40 59 0.034693653 ubox
40 62 0.346497254 ubox
40 65 0.803822395 ubox
41 47 0.088035893 ubox
41 55 0.009890622 ubox
41 64 0.806596141 ubox
42 60 0.330728409 ubox
42 63 0.806087424 ubox
43 56 0.043800448 ubox
43 59 0.332908437 ubox
43 62 0.802877075 ubox
43 65 0.013674088 ubox
44 55 0.044642964 ubox
44 64 0.011502262 ubox
45 64 0.014208981 ubox
46 55 0.029841645 ubox
46 60 0.110645355 ubox
46 63 0.016172720 ubox
47 54 0.033779823 ubox
47 56 0.863037144 ubox
47 59 0.096139521 ubox
47 62 0.015386336 ubox
47 65 0.025421558 ubox
48 55 0.863999633 ubox
48 64 0.025513676 ubox
49 63 0.024099158 ubox
55 65 0.255922761 ubox
56 64 0.256128679 ubox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
40 65 0.9500000 lbox
41 64 0.9500000 lbox
42 63 0.9500000 lbox
43 62 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
showpage
end
%%EOF
