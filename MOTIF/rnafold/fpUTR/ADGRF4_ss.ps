%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUUGCACAAGCCUUGAAACUGUGGGUAACUUUACAGUUCUCAGAUCGGCUUCUCGCAACAGGCAGUCAGUUCUCACUGGGCCCCUUGGACUCCCAUUUCAAAAAUGGAGAAGACAGAUCACAGCCACUGACCAGGGACCGUGGGAGGUGCCACGUGAUGGUGAGGCAUCAUGCUAGGGAGCUGAGCUCUGACCUUCCUGCUGGGUGAUUCUCCACCUCUGGGCUGCUAGAUCUACUUCCUGGAUGCCGUGAA\
GAUCCUCAUGU\
) } def
/len { sequence length } bind def

/coor [
[-4.43611383 266.23410034]
[-13.70402908 254.43978882]
[-5.35092831 241.98020935]
[-1.25501442 227.55026245]
[-8.47012520 225.50279236]
[-18.98271561 236.20257568]
[-29.49530602 246.90235901]
[-40.00789642 257.60214233]
[-39.54238510 275.10562134]
[-51.65362930 287.27835083]
[-68.48286438 286.91567993]
[-78.86883545 297.73843384]
[-89.25479889 308.56115723]
[-99.64076996 319.38391113]
[-110.02674103 330.20663452]
[-120.22008514 341.21099854]
[-130.21763611 352.39352417]
[-140.21517944 363.57604980]
[-150.21272278 374.75860596]
[-160.14431763 385.99975586]
[-170.00959778 397.29913330]
[-179.87487793 408.59851074]
[-189.74015808 419.89791870]
[-199.60545349 431.19729614]
[-209.47073364 442.49670410]
[-219.33601379 453.79608154]
[-229.20129395 465.09545898]
[-239.06657410 476.39486694]
[-241.69775391 492.58154297]
[-257.12527466 498.14242554]
[-269.47863770 487.35696411]
[-266.04974365 471.32028198]
[-250.36596680 466.52957153]
[-240.50068665 455.23019409]
[-230.63540649 443.93078613]
[-220.77012634 432.63140869]
[-210.90483093 421.33203125]
[-201.03955078 410.03262329]
[-191.17427063 398.73324585]
[-181.30899048 387.43383789]
[-171.44371033 376.13446045]
[-169.41886902 369.05328369]
[-161.39526367 364.76104736]
[-151.39772034 353.57852173]
[-141.40016174 342.39596558]
[-131.40261841 331.21343994]
[-131.22074890 327.72427368]
[-129.36067200 324.14627075]
[-125.79713440 321.25796509]
[-120.84947968 319.82067871]
[-110.46350861 308.99792480]
[-100.07753754 298.17520142]
[-89.69157410 287.35247803]
[-79.30560303 276.52972412]
[-81.37217712 263.83135986]
[-75.67199707 252.08119202]
[-64.07958221 245.65548706]
[-50.70768356 247.08955383]
[-40.19509125 236.38977051]
[-29.68250275 225.68998718]
[-19.16991234 214.99018860]
[-3.37569141 202.56608582]
[13.16596317 201.00733948]
[24.71261787 207.69140625]
[32.59143829 194.92723083]
[40.47026062 182.16305542]
[48.34908295 169.39888000]
[48.45012283 154.50462341]
[62.28274536 146.82548523]
[70.16156769 134.06130981]
[78.04039001 121.29713440]
[85.91921234 108.53295898]
[83.99938202 101.28283691]
[70.96559906 108.70715332]
[58.49975204 117.04997253]
[44.46703339 111.75064850]
[40.62769318 97.25032043]
[50.19931793 85.70111847]
[65.15973663 86.78160095]
[80.15973663 86.78259277]
[78.23991394 79.53247070]
[65.07665253 72.34021759]
[51.91338730 65.14796448]
[38.70804214 58.03327179]
[25.46106529 50.99639511]
[9.10015297 52.11557770]
[0.17625096 38.35709000]
[7.86950493 23.87448311]
[24.26575470 23.56622124]
[32.49794388 37.74942017]
[45.74491882 44.78629684]
[53.10103607 45.14757538]
[59.10564423 51.98469925]
[72.26890564 59.17695618]
[85.43216705 66.36920929]
[94.82388306 54.67324448]
[84.95860291 43.37385559]
[75.09332275 32.07446671]
[65.22803497 20.77507782]
[55.36275482 9.47568893]
[45.49747086 -1.82370031]
[30.52564049 -9.77861214]
[34.02505493 -26.36747551]
[50.93435669 -27.59707451]
[56.79685974 -11.68898296]
[66.66214752 -0.38959405]
[76.52742767 10.90979481]
[86.39270782 22.20918465]
[96.25799561 33.50857162]
[106.12327576 44.80796432]
[104.61929321 69.04485321]
[101.30496216 93.05642700]
[114.02256775 85.10264587]
[126.74016571 77.14887238]
[139.45777893 69.19509125]
[143.09880066 56.84476852]
[153.82676697 50.47698975]
[165.62945557 53.02767181]
[178.43975830 45.22407913]
[191.25006104 37.42048645]
[204.06036377 29.61689568]
[216.87068176 21.81330490]
[225.76861572 3.70030975]
[245.11860657 4.16994381]
[257.74172974 -3.93291831]
[270.36489868 -12.03578091]
[282.98803711 -20.13864326]
[295.61117554 -28.24150467]
[281.16207886 -32.26939774]
[273.69821167 -45.28057098]
[277.51519775 -59.78680038]
[290.41625977 -67.43941498]
[304.97653198 -63.83416748]
[312.81628418 -51.04595184]
[309.42300415 -36.43395233]
[322.58627319 -43.62620926]
[335.74954224 -50.81846619]
[348.91278076 -58.01071930]
[362.07604980 -65.20297241]
[364.75787354 -69.60218048]
[368.47799683 -72.28581238]
[372.41802979 -73.14487457]
[375.83322144 -72.40742493]
[389.24212646 -79.13064575]
[402.65100098 -85.85387421]
[416.05987549 -92.57709503]
[429.42898560 -99.37908936]
[442.75784302 -106.25961304]
[456.08670044 -113.14014435]
[458.42568970 -129.90841675]
[470.19070435 -141.85087585]
[486.59313965 -144.38963318]
[501.12368774 -136.71807861]
[514.37066650 -143.75495911]
[527.61761475 -150.79183960]
[540.82299805 -157.90652466]
[553.98626709 -165.09878540]
[562.38671875 -178.50561523]
[577.26544189 -177.81825256]
[590.42871094 -185.01051331]
[598.82916260 -198.41734314]
[613.70788574 -197.72998047]
[626.87115479 -204.92224121]
[640.03442383 -212.11450195]
[648.43481445 -225.52133179]
[663.31359863 -224.83396912]
[676.47680664 -232.02622986]
[689.59753418 -239.29580688]
[702.67529297 -246.64244080]
[708.59899902 -253.54974365]
[715.95037842 -253.99754333]
[729.11364746 -261.18978882]
[742.27691650 -268.38204956]
[748.28149414 -275.21917725]
[755.63763428 -275.58044434]
[768.88458252 -282.61734009]
[782.13159180 -289.65420532]
[790.36376953 -303.83740234]
[806.76000977 -303.52914429]
[814.45324707 -289.04653931]
[805.52935791 -275.28805542]
[789.16845703 -276.40722656]
[775.92150879 -269.37036133]
[762.67449951 -262.33349609]
[749.46917725 -255.21879578]
[736.30590820 -248.02653503]
[723.14263916 -240.83427429]
[710.02191162 -233.56471252]
[696.94421387 -226.21807861]
[692.66644287 -220.22274780]
[683.66906738 -218.86296082]
[670.50579834 -211.67071533]
[663.04693604 -198.77832031]
[647.22662354 -198.95123291]
[634.06341553 -191.75898743]
[620.90014648 -184.56672668]
[613.44122314 -171.67433167]
[597.62097168 -171.84724426]
[584.45770264 -164.65499878]
[576.99877930 -151.76260376]
[561.17852783 -151.93551636]
[548.01525879 -144.74325562]
[543.66723633 -138.79867554]
[534.65454102 -137.54486084]
[521.40753174 -130.50798035]
[508.16055298 -123.47109985]
[507.53683472 -110.15383911]
[500.36389160 -98.78798676]
[488.42053223 -92.39205170]
[474.76834106 -92.72665405]
[462.96722412 -99.81128693]
[449.63836670 -92.93076324]
[436.30950928 -86.05023193]
[431.82287598 -80.20960999]
[422.78311157 -79.16820526]
[409.37423706 -72.44498444]
[395.96533203 -65.72176361]
[382.55645752 -58.99853516]
[369.26831055 -52.03971100]
[356.10504150 -44.84745789]
[342.94177246 -37.65520096]
[329.77853394 -30.46294785]
[316.61526489 -23.27069283]
[303.71401978 -15.61836624]
[291.09088135 -7.51550436]
[278.46774292 0.58735788]
[265.84460449 8.69021988]
[253.22146606 16.79308128]
[251.96179199 26.89140701]
[245.22369385 34.80778503]
[235.03581238 37.78810120]
[224.67427063 34.62361145]
[211.86396790 42.42720413]
[199.05364990 50.23079300]
[186.24334717 58.03438568]
[173.43304443 65.83797455]
[165.83990479 81.67524719]
[147.41154480 81.91269684]
[134.69395447 89.86647034]
[121.97634125 97.82025146]
[109.25874329 105.77402496]
[98.68338776 116.41178131]
[90.80456543 129.17596436]
[82.92574310 141.94013977]
[75.04692078 154.70431519]
[74.38233185 170.51155090]
[61.11325836 177.27770996]
[53.23443604 190.04188538]
[45.35561371 202.80606079]
[37.47679520 215.57023621]
[35.01703644 230.36717224]
[38.34255981 244.99389648]
[41.66808319 259.62060547]
[44.99360275 274.24734497]
[58.50024796 282.45379639]
[62.16682053 297.82690430]
[53.81800842 311.24600220]
[38.40701675 314.74984741]
[25.07691193 306.25964355]
[21.73620796 290.81246948]
[30.36688614 277.57284546]
[27.04136276 262.94613647]
[23.71584129 248.31942749]
[20.39031982 233.69270325]
[13.17520809 231.64521790]
[9.08120537 246.07571411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 61]
[6 60]
[7 59]
[8 58]
[11 54]
[12 53]
[13 52]
[14 51]
[15 50]
[16 46]
[17 45]
[18 44]
[19 43]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[27 34]
[28 33]
[64 250]
[65 249]
[66 248]
[67 247]
[69 245]
[70 244]
[71 243]
[72 242]
[81 95]
[82 94]
[83 93]
[84 91]
[85 90]
[96 110]
[97 109]
[98 108]
[99 107]
[100 106]
[101 105]
[112 241]
[113 240]
[114 239]
[115 238]
[118 236]
[119 235]
[120 234]
[121 233]
[122 232]
[124 228]
[125 227]
[126 226]
[127 225]
[128 224]
[135 223]
[136 222]
[137 221]
[138 220]
[139 219]
[143 218]
[144 217]
[145 216]
[146 215]
[147 213]
[148 212]
[149 211]
[153 206]
[154 205]
[155 204]
[156 202]
[157 201]
[159 199]
[160 198]
[162 196]
[163 195]
[164 194]
[166 192]
[167 191]
[168 189]
[169 188]
[171 187]
[172 186]
[173 185]
[175 184]
[176 183]
[177 182]
[251 264]
[252 263]
[253 262]
[254 261]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
