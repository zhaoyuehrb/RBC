%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGGGCAGUGUAGUUCCAGAAAAUAGGACUGACCAAGAAGCAGAAAAGCAAGAUGAAUGAUGUGAAGCUUGCUGUCUUGGGUGGUGAAGGAACAGGCAAAUCUGGUCCCUACAUCCUUAAAUAACUGCAAAUACUUGGUAGUGUCUUUGUGACUAUUACACAUAGUACCUUGAAGCCAGACUGAGUUUGACAGAGAAAAUAAACAG\
) } def
/len { sequence length } bind def

/coor [
[253.04541016 150.02056885]
[251.74313354 140.44633484]
[252.15103149 130.78715515]
[237.70196533 126.75917816]
[223.25289917 122.73120117]
[208.80383301 118.70322418]
[204.27589417 120.22872162]
[198.74154663 118.92433929]
[193.98269653 114.32923126]
[179.66188049 109.86668396]
[165.34106445 105.40413666]
[151.02024841 100.94158936]
[136.69944763 96.47904968]
[122.37863159 92.01650238]
[123.57250977 108.66282654]
[113.23782349 122.91947174]
[95.26351929 127.41547394]
[85.83545685 139.08215332]
[89.99655151 154.03089905]
[84.54476166 168.55873108]
[71.57641602 177.07937622]
[56.07810593 176.31651306]
[44.00924683 166.56344604]
[40.01056290 151.57043457]
[45.61962891 137.10261536]
[58.67964554 128.72314453]
[74.16876984 129.65409851]
[83.59683228 117.98740387]
[78.27775574 103.96216583]
[63.48430634 101.48148346]
[48.69085312 99.00080109]
[35.90930557 107.90415955]
[20.94197845 105.17765808]
[12.53275681 92.93753815]
[-2.26069498 90.45685577]
[-17.05414772 87.97618103]
[-31.84759903 85.49549866]
[-46.64105225 83.01481628]
[-61.43450546 80.53414154]
[-76.24626923 78.16525269]
[-91.07550049 75.90827942]
[-105.90473175 73.65131378]
[-120.73396301 71.39434814]
[-135.56318665 69.13738251]
[-145.75628662 82.15489960]
[-161.03549194 88.22162628]
[-177.19627380 85.76997375]
[-189.84262085 75.56259918]
[-195.58287048 60.45872498]
[-210.44450378 58.42598343]
[-225.30613708 56.39324570]
[-234.65371704 68.58004761]
[-248.84851074 74.44550323]
[-264.07217407 72.41183472]
[-276.22961426 63.02608871]
[-282.05053711 48.81298447]
[-279.96917725 33.59577560]
[-270.54534912 21.46781540]
[-256.31408691 15.69146156]
[-241.10346985 17.82052612]
[-229.00511169 27.28230095]
[-223.27339172 41.53161621]
[-208.41175842 43.56435776]
[-193.55014038 45.59709930]
[-185.91053772 34.27508926]
[-174.08100891 27.31624603]
[-160.34158325 26.12797356]
[-147.36906433 30.99900627]
[-137.71549988 41.03197479]
[-133.30622864 54.30814743]
[-118.47699738 56.56511688]
[-103.64776611 58.82208252]
[-88.81853485 61.07905197]
[-73.98930359 63.33601761]
[-66.90196991 61.23418045]
[-58.95382309 65.74068451]
[-44.16037369 68.22136688]
[-29.36692047 70.70204926]
[-14.57346821 73.18272400]
[0.21998441 75.66340637]
[15.01343632 78.14408875]
[26.95543289 69.31661224]
[41.99343491 71.62163544]
[51.17153168 84.20735168]
[65.96498871 86.68803406]
[80.75843811 89.16870880]
[86.14122772 83.94611359]
[82.47791290 69.40032196]
[96.90681458 73.50091553]
[102.28961182 68.27831268]
[100.25686646 53.41668701]
[98.22412872 38.55506134]
[88.68805695 25.93072128]
[94.62923431 12.27232838]
[92.59648895 -2.58929873]
[90.56375122 -17.45092583]
[77.82709503 -26.80791283]
[75.51992798 -42.44289017]
[85.01105499 -55.07990265]
[100.66954803 -57.22163773]
[113.20551300 -47.59744263]
[115.18157959 -31.91717529]
[105.42537689 -19.48366737]
[107.45812225 -4.62203932]
[109.49085999 10.23958778]
[118.88153839 21.80092430]
[113.08575439 36.52231979]
[115.11849213 51.38394928]
[117.15123749 66.24557495]
[126.84117126 77.69568634]
[141.16198730 82.15823364]
[155.48280334 86.62078094]
[169.80361938 91.08332825]
[184.12442017 95.54586792]
[198.44523621 100.00841522]
[212.83181763 104.25416565]
[227.28088379 108.28214264]
[241.72993469 112.31011963]
[256.17901611 116.33809662]
[268.16528320 99.07758331]
[285.76309204 87.64441681]
[306.34906006 83.71726227]
[326.86410522 87.85778046]
[344.26797485 99.43038940]
[355.98974609 116.69970703]
[360.30770874 137.09078979]
[375.19833374 138.89884949]
[390.08898926 140.70689392]
[404.99282837 142.40243530]
[419.90908813 143.98538208]
[434.82531738 145.56832886]
[441.01629639 143.23738098]
[446.61413574 144.23484802]
[450.16574097 147.43099976]
[465.02737427 149.46374512]
[479.88900757 151.49647522]
[494.75064087 153.52922058]
[509.61227417 155.56196594]
[524.47387695 157.59471130]
[539.33551025 159.62744141]
[550.06231689 152.46240234]
[562.40002441 154.46293640]
[569.82061768 164.01791382]
[584.64984131 166.27488708]
[599.45709229 160.70210266]
[610.87524414 170.26632690]
[625.70446777 172.52328491]
[640.53375244 174.78025818]
[655.36297607 177.03721619]
[670.19219971 179.29418945]
[685.00958252 167.49211121]
[703.43267822 170.21931458]
[713.83233643 185.28256226]
[728.72296143 187.09060669]
[743.61358643 188.89865112]
[758.50421143 190.70671082]
[773.39483643 192.51475525]
[786.85961914 183.79238892]
[802.02789307 189.01770020]
[807.26379395 204.18228149]
[798.55090332 217.65315247]
[782.57287598 219.09663391]
[771.58679199 207.40539551]
[756.69616699 205.59733582]
[741.80554199 203.78929138]
[726.91491699 201.98124695]
[712.02429199 200.17318726]
[704.77978516 208.99055481]
[694.06719971 213.25904846]
[682.50610352 211.81037903]
[672.98394775 204.88973999]
[667.93524170 194.12342834]
[653.10595703 191.86645508]
[638.27673340 189.60948181]
[623.44750977 187.35252380]
[608.61828613 185.09555054]
[594.87170410 190.82975769]
[582.39282227 181.10411072]
[567.56359863 178.84715271]
[551.58782959 186.10708618]
[537.30279541 174.48907471]
[522.44116211 172.45632935]
[507.57952881 170.42358398]
[492.71789551 168.39085388]
[477.85626221 166.35810852]
[462.99462891 164.32536316]
[448.13302612 162.29263306]
[433.24237061 160.48457336]
[418.32614136 158.90162659]
[403.40988159 157.31867981]
[396.42504883 159.73939514]
[388.28091431 155.59753418]
[373.39028931 153.78947449]
[358.49966431 151.98143005]
[355.25454712 160.99662781]
[350.46679688 169.30238342]
[344.28506470 176.63705444]
[336.90188599 182.76924133]
[328.54776001 187.50497437]
[319.48397827 190.69400024]
[309.99435425 192.23440552]
[300.37640381 192.07598877]
[290.93206787 190.22180176]
[281.95809937 186.72817993]
[273.73687744 181.70298767]
[266.52737427 175.30233765]
[260.55715942 167.72567749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 119]
[4 118]
[5 117]
[6 116]
[9 115]
[10 114]
[11 113]
[12 112]
[13 111]
[14 110]
[17 28]
[18 27]
[29 86]
[30 85]
[31 84]
[34 81]
[35 80]
[36 79]
[37 78]
[38 77]
[39 76]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[49 64]
[50 63]
[51 62]
[90 109]
[91 108]
[92 107]
[94 105]
[95 104]
[96 103]
[126 194]
[127 193]
[128 192]
[129 190]
[130 189]
[131 188]
[134 187]
[135 186]
[136 185]
[137 184]
[138 183]
[139 182]
[140 181]
[143 179]
[144 178]
[146 176]
[147 175]
[148 174]
[149 173]
[150 172]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
