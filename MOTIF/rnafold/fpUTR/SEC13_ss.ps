%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUGCGAGCCGAGCGCGUUGCUGCCCGGAGGCUCCUACGCCACGGCCCGUCGGGCCCGGCGCCGGAAGUGAGCUGUUCCGAGGCGCCGCCGGGAGCUGCCACGUCCGAGACCUGGAGCAGCCACCGCCGCAAUCAUGACUUCGGGGACCUGGUUUUUAGAGAGUCUAGAAUCUG\
) } def
/len { sequence length } bind def

/coor [
[102.27837372 157.75923157]
[101.74600983 142.76869202]
[94.25073242 143.03486633]
[88.54124451 156.90576172]
[82.83174896 170.77665710]
[77.12226105 184.64755249]
[71.41277313 198.51844788]
[78.82397461 212.28826904]
[75.59961700 227.58982849]
[63.26213074 237.19818115]
[47.63690567 236.57656860]
[36.10169601 226.01849365]
[34.10307312 210.50915527]
[42.58472443 197.37159729]
[57.54187393 192.80895996]
[63.25136566 178.93806458]
[68.96085358 165.06716919]
[74.67034912 151.19627380]
[80.37983704 137.32537842]
[70.83998108 121.74149323]
[69.99845123 105.91034698]
[75.99732208 93.82881927]
[63.28130722 85.87250519]
[50.56529236 77.91619110]
[41.59982681 76.00734711]
[37.69594955 69.70413208]
[25.12314606 61.52338409]
[12.55034351 53.34263992]
[-0.02245998 45.16189194]
[-12.59526348 36.98114777]
[-28.38217926 35.94007111]
[-34.83021927 22.51352692]
[-47.40302277 14.33277988]
[-59.97582626 6.15203333]
[-75.76274109 5.11095619]
[-82.21078491 -8.31558609]
[-94.78358459 -16.49633217]
[-107.35639191 -24.67708015]
[-117.75070190 -7.33363485]
[-144.38961792 -2.04659081]
[-158.89559937 -5.86454725]
[-173.40156555 -9.68250370]
[-187.90753174 -13.50045967]
[-199.44187927 -7.68246746]
[-211.45977783 -11.18307590]
[-217.65441895 -21.59589767]
[-232.09034729 -25.67070770]
[-246.52627563 -29.74551773]
[-260.96218872 -33.82032776]
[-275.39813232 -37.89513779]
[-292.28411865 -36.37893295]
[-298.41558838 -52.18530655]
[-284.92428589 -62.45279312]
[-271.32330322 -52.33106232]
[-256.88739014 -48.25625229]
[-242.45146179 -44.18144226]
[-228.01553345 -40.10663223]
[-213.57960510 -36.03182220]
[-196.84399414 -41.26819992]
[-184.08958435 -28.00643158]
[-169.58360291 -24.18847466]
[-155.07763672 -20.37051773]
[-140.57167053 -16.55256271]
[-131.51925659 -28.51391220]
[-122.46764374 -40.47418976]
[-130.08262634 -53.39750290]
[-137.69761658 -66.32081604]
[-145.31260681 -79.24412537]
[-152.92759705 -92.16743469]
[-168.38575745 -93.51829529]
[-180.07554626 -103.72262573]
[-183.50199890 -118.85666656]
[-177.34757996 -133.10105896]
[-163.97877502 -140.97854614]
[-148.53617859 -139.46006775]
[-136.95776367 -129.12953186]
[-133.69569397 -113.95921326]
[-140.00427246 -99.78242493]
[-132.38929749 -86.85910797]
[-124.77430725 -73.93579865]
[-117.15931702 -61.01248932]
[-109.54433441 -48.08917618]
[-99.17564392 -37.24988174]
[-86.60283661 -29.06913567]
[-74.03003693 -20.88838959]
[-59.14241028 -20.43245506]
[-51.79507828 -6.42077017]
[-39.22227478 1.75997651]
[-26.64947319 9.94072342]
[-11.76184750 10.39665794]
[-4.41451693 24.40834236]
[8.15828705 32.58908844]
[20.73109055 40.76983643]
[33.30389404 48.95058441]
[45.87669754 57.13132858]
[58.52160645 65.20018005]
[71.23761749 73.15649414]
[83.95363617 81.11280060]
[116.57813263 70.91766357]
[141.56250000 107.11988068]
[156.30276489 104.34055328]
[171.04302979 101.56121826]
[185.78329468 98.78189087]
[197.91087341 88.62155151]
[211.85139465 93.86665344]
[226.59164429 91.08731842]
[241.33190918 88.30799103]
[256.07217407 85.52866364]
[245.47152710 74.91610718]
[246.97816467 59.99196625]
[259.48605347 51.71229935]
[273.81292725 56.15535355]
[279.44119263 70.05940247]
[272.23855591 83.21759796]
[287.16714478 81.75561523]
[302.09573364 80.29364014]
[317.02432251 78.83166504]
[331.95291138 77.36968994]
[346.88150024 75.90770721]
[361.79650879 74.31330872]
[376.69680786 72.58660889]
[380.18292236 57.83456802]
[388.50692749 45.16621780]
[400.66360474 36.11132812]
[415.18496704 31.76331329]
[430.31753540 32.64722061]
[444.23394775 38.65631485]
[455.25375366 49.06496429]
[462.04623413 62.61627960]
[463.79116821 77.67386627]
[460.27783203 92.41945648]
[451.93051147 105.07244110]
[439.75717163 114.10491943]
[425.22781372 118.42616272]
[410.09689331 117.51436615]
[396.19158936 111.47964478]
[385.19097900 101.05069733]
[378.42349243 87.48689270]
[363.52322388 89.21359253]
[357.22106934 93.11917877]
[348.34347534 90.83629608]
[333.41488647 92.29827118]
[318.48629761 93.76024628]
[303.55770874 95.22222137]
[288.62911987 96.68420410]
[273.70053101 98.14617920]
[258.85150146 100.26892090]
[244.11123657 103.04825592]
[229.37098694 105.82758331]
[214.63072205 108.60691833]
[203.55746460 118.56845856]
[188.56262207 113.52214813]
[173.82235718 116.30148315]
[159.08209229 119.08081055]
[144.34184265 121.86014557]
[137.66276550 135.29107666]
[144.34184265 148.72201538]
[151.02090454 162.15295410]
[157.69996643 175.58389282]
[164.37902832 189.01483154]
[171.05809021 202.44577026]
[177.73716736 215.87670898]
[190.20373535 227.36674500]
[182.61383057 242.52687073]
[165.94506836 239.43032837]
[164.30622864 222.55577087]
[157.62715149 209.12483215]
[150.94808960 195.69389343]
[144.26902771 182.26295471]
[137.58996582 168.83201599]
[130.91090393 155.40107727]
[124.23183441 141.97015381]
[116.73655701 142.23632812]
[117.26892090 157.22688293]
[122.40738678 171.31929016]
[110.59246063 180.56091309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[22 98]
[23 97]
[24 96]
[26 95]
[27 94]
[28 93]
[29 92]
[30 91]
[32 89]
[33 88]
[34 87]
[36 85]
[37 84]
[38 83]
[40 63]
[41 62]
[42 61]
[43 60]
[46 58]
[47 57]
[48 56]
[49 55]
[50 54]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[100 155]
[101 154]
[102 153]
[103 152]
[105 150]
[106 149]
[107 148]
[108 147]
[114 146]
[115 145]
[116 144]
[117 143]
[118 142]
[119 141]
[120 139]
[121 138]
[156 172]
[157 171]
[158 170]
[159 169]
[160 168]
[161 167]
[162 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
