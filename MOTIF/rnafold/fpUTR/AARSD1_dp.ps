%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:49:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AARSD1)
} def

/sequence { (\
CGCUCUCCGUUCGCUCCCAGGCUUCUCUGCGCGUGCGCCUCCUCACACGCCUGCAGGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.169087339 ubox
1 13 0.021342757 ubox
1 31 0.003315933 ubox
1 37 0.007197722 ubox
2 8 0.172625378 ubox
2 10 0.211089653 ubox
2 12 0.032152184 ubox
2 14 0.190915939 ubox
2 22 0.333847788 ubox
2 30 0.008258471 ubox
2 36 0.007922491 ubox
2 38 0.019864182 ubox
2 50 0.005508655 ubox
2 54 0.015698306 ubox
2 58 0.036820315 ubox
3 9 0.220307874 ubox
3 13 0.190993340 ubox
3 20 0.019652221 ubox
3 21 0.332887969 ubox
3 29 0.008258180 ubox
3 35 0.007888709 ubox
3 37 0.018222266 ubox
3 49 0.005519421 ubox
3 53 0.015689181 ubox
3 56 0.003347773 ubox
3 57 0.039150013 ubox
4 19 0.021534006 ubox
4 20 0.257507881 ubox
4 21 0.032175709 ubox
4 56 0.010879989 ubox
4 57 0.007144578 ubox
5 20 0.198488533 ubox
5 21 0.009489930 ubox
5 56 0.010268386 ubox
5 57 0.009920939 ubox
6 19 0.190168162 ubox
6 20 0.009510089 ubox
6 21 0.008755787 ubox
6 55 0.009419501 ubox
6 57 0.004762861 ubox
7 20 0.013904452 ubox
7 21 0.146448989 ubox
7 56 0.004093818 ubox
7 57 0.021941103 ubox
8 20 0.149218050 ubox
8 31 0.004064121 ubox
8 37 0.157643778 ubox
8 49 0.003660049 ubox
8 53 0.006748327 ubox
8 56 0.020036201 ubox
9 22 0.124706927 ubox
9 30 0.004614080 ubox
9 36 0.168736875 ubox
9 38 0.007095484 ubox
9 48 0.003684314 ubox
9 52 0.005100090 ubox
9 54 0.007104581 ubox
9 58 0.003715779 ubox
10 20 0.006398001 ubox
10 21 0.117810667 ubox
10 29 0.004483999 ubox
10 35 0.165562933 ubox
10 37 0.006976175 ubox
10 47 0.003510450 ubox
10 53 0.006638173 ubox
10 57 0.003461591 ubox
11 19 0.010074987 ubox
11 20 0.105681809 ubox
11 21 0.060549599 ubox
11 57 0.005514404 ubox
12 20 0.083269081 ubox
12 31 0.004095667 ubox
12 33 0.169068925 ubox
12 35 0.005761967 ubox
12 37 0.004801250 ubox
12 56 0.006168989 ubox
13 22 0.846722418 ubox
13 30 0.006829828 ubox
13 32 0.169213297 ubox
13 34 0.005948768 ubox
13 36 0.005205345 ubox
13 38 0.005601051 ubox
13 54 0.009364457 ubox
13 58 0.055894919 ubox
14 20 0.048413142 ubox
14 21 0.847051730 ubox
14 29 0.006667468 ubox
14 31 0.169137025 ubox
14 33 0.005950810 ubox
14 35 0.005165932 ubox
14 37 0.005610855 ubox
14 53 0.009229265 ubox
14 56 0.011333185 ubox
14 57 0.059756857 ubox
15 19 0.050069354 ubox
15 20 0.778656125 ubox
15 21 0.018826800 ubox
15 55 0.011113990 ubox
15 56 0.058535889 ubox
15 57 0.006374845 ubox
16 20 0.097083621 ubox
16 56 0.009505455 ubox
16 57 0.026093318 ubox
17 56 0.026115872 ubox
17 57 0.018641549 ubox
18 29 0.168328615 ubox
18 35 0.006291129 ubox
18 53 0.068085237 ubox
18 56 0.018486714 ubox
19 26 0.040260466 ubox
19 28 0.168564256 ubox
19 34 0.006420647 ubox
19 40 0.004133973 ubox
19 52 0.068420124 ubox
20 25 0.046550712 ubox
20 26 0.015306903 ubox
20 27 0.168370460 ubox
20 39 0.004373582 ubox
20 51 0.068382436 ubox
21 25 0.028933787 ubox
21 26 0.117952516 ubox
21 27 0.003664746 ubox
21 30 0.045817517 ubox
21 32 0.006560903 ubox
21 38 0.004373354 ubox
21 50 0.056767609 ubox
21 54 0.017182058 ubox
21 58 0.026695536 ubox
22 29 0.045900477 ubox
22 31 0.006585018 ubox
22 37 0.004345426 ubox
22 49 0.055744675 ubox
22 53 0.017176863 ubox
22 57 0.028299102 ubox
23 56 0.017790035 ubox
23 57 0.011335533 ubox
24 55 0.013323083 ubox
24 57 0.020657207 ubox
25 56 0.021743918 ubox
25 57 0.206781435 ubox
26 55 0.018008827 ubox
26 56 0.023904427 ubox
26 57 0.752346184 ubox
27 56 0.979812220 ubox
27 57 0.017099791 ubox
28 37 0.009233160 ubox
28 45 0.004438999 ubox
28 53 0.007892391 ubox
28 55 0.981478684 ubox
28 56 0.009560524 ubox
29 36 0.011142091 ubox
29 38 0.043952219 ubox
29 44 0.003980564 ubox
29 50 0.031627202 ubox
29 52 0.008252221 ubox
29 54 0.982027191 ubox
30 35 0.011131985 ubox
30 37 0.044043294 ubox
30 49 0.033318510 ubox
30 53 0.977773450 ubox
31 36 0.042904795 ubox
31 38 0.021021759 ubox
31 48 0.040157786 ubox
31 50 0.964883410 ubox
31 52 0.162534174 ubox
31 54 0.017361473 ubox
31 58 0.007352284 ubox
32 37 0.021022904 ubox
32 49 0.977376095 ubox
32 53 0.017542120 ubox
32 57 0.008439305 ubox
33 46 0.045924527 ubox
33 48 0.977473452 ubox
33 50 0.062538791 ubox
33 52 0.018712842 ubox
34 45 0.048595137 ubox
34 47 0.976932517 ubox
34 49 0.062439640 ubox
34 55 0.009155770 ubox
35 44 0.051745292 ubox
35 46 0.973812351 ubox
35 48 0.061793627 ubox
35 50 0.083533131 ubox
35 54 0.009332718 ubox
36 49 0.083604544 ubox
36 53 0.009307488 ubox
37 48 0.082489101 ubox
37 50 0.009064831 ubox
37 52 0.004719188 ubox
37 54 0.003436570 ubox
37 58 0.038153858 ubox
38 49 0.009232686 ubox
38 53 0.003470579 ubox
38 57 0.066068439 ubox
39 56 0.066256115 ubox
39 57 0.003797851 ubox
40 55 0.064802340 ubox
40 57 0.005245058 ubox
41 56 0.006775151 ubox
41 57 0.130752392 ubox
42 56 0.131895292 ubox
42 57 0.007455038 ubox
43 55 0.131041812 ubox
43 56 0.007268650 ubox
44 53 0.138715019 ubox
44 56 0.003527829 ubox
45 52 0.125033017 ubox
46 53 0.034520758 ubox
47 52 0.029539543 ubox
47 58 0.012545608 ubox
48 57 0.013908305 ubox
49 58 0.069059728 ubox
50 57 0.073863390 ubox
51 56 0.073689099 ubox
51 57 0.004391155 ubox
52 56 0.004010449 ubox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
26 57 0.9500000 lbox
27 56 0.9500000 lbox
28 55 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 50 0.9500000 lbox
32 49 0.9500000 lbox
33 48 0.9500000 lbox
34 47 0.9500000 lbox
35 46 0.9500000 lbox
showpage
end
%%EOF
