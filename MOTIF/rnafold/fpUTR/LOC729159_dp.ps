%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LOC729159)
} def

/sequence { (\
CAGUGUGCACCCGGCCACAGAGAAGUGGGUGACUUAGGAGUAUCCUCUCCGCUUCUCACCCUUACUUUCGUCUGUGCACAACUCGCUCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 83 0.785540321 ubox
2 87 0.168429762 ubox
3 10 0.006894072 ubox
3 15 0.003969647 ubox
3 18 0.008299638 ubox
3 79 0.046768955 ubox
3 82 0.839482216 ubox
3 86 0.179912675 ubox
4 9 0.006470519 ubox
4 13 0.003585967 ubox
4 14 0.003800467 ubox
4 17 0.008484779 ubox
4 78 0.046755748 ubox
4 80 0.735237103 ubox
4 81 0.593349146 ubox
4 85 0.170664136 ubox
4 89 0.098811851 ubox
5 12 0.005121058 ubox
5 15 0.004442351 ubox
5 16 0.009107425 ubox
5 77 0.046623879 ubox
5 79 0.971349704 ubox
5 82 0.011174211 ubox
5 84 0.150832203 ubox
5 86 0.115950601 ubox
5 88 0.109375617 ubox
6 13 0.004303031 ubox
6 14 0.004423184 ubox
6 76 0.039933131 ubox
6 78 0.973265737 ubox
6 80 0.007809011 ubox
6 81 0.011682338 ubox
6 85 0.116078662 ubox
6 89 0.003846840 ubox
7 12 0.005746623 ubox
7 15 0.031902390 ubox
7 75 0.037421528 ubox
7 77 0.973452996 ubox
7 79 0.007930306 ubox
7 84 0.115106888 ubox
7 86 0.114302582 ubox
7 88 0.004068941 ubox
8 14 0.032641075 ubox
8 74 0.037432823 ubox
8 76 0.969103441 ubox
8 85 0.114277345 ubox
9 73 0.036799913 ubox
9 75 0.951537045 ubox
10 74 0.929469203 ubox
12 70 0.131535938 ubox
12 74 0.112076195 ubox
12 85 0.005362543 ubox
13 61 0.004772718 ubox
13 69 0.131408968 ubox
13 72 0.869014225 ubox
13 73 0.224220852 ubox
13 83 0.006140184 ubox
13 84 0.006237018 ubox
13 87 0.017564266 ubox
13 88 0.006585668 ubox
14 60 0.004827391 ubox
14 68 0.095910150 ubox
14 71 0.874879488 ubox
14 72 0.236367254 ubox
14 75 0.007359651 ubox
14 77 0.205040483 ubox
14 82 0.006693667 ubox
14 83 0.004016564 ubox
14 86 0.019840716 ubox
15 28 0.005829177 ubox
15 70 0.877488990 ubox
15 74 0.008426209 ubox
15 76 0.145492502 ubox
15 85 0.019848565 ubox
16 27 0.012886021 ubox
16 74 0.009537643 ubox
16 76 0.194495198 ubox
17 26 0.018642438 ubox
17 71 0.198988669 ubox
17 73 0.012466040 ubox
17 75 0.299442794 ubox
18 25 0.019116881 ubox
18 70 0.211750574 ubox
18 74 0.341305549 ubox
19 62 0.004048268 ubox
19 63 0.004503121 ubox
19 66 0.066627481 ubox
19 67 0.018721005 ubox
19 68 0.691064545 ubox
19 73 0.383612206 ubox
20 57 0.028846207 ubox
20 63 0.004388767 ubox
20 65 0.068310683 ubox
20 66 0.014361274 ubox
20 67 0.723699693 ubox
20 68 0.035906051 ubox
20 69 0.512088817 ubox
20 72 0.384495868 ubox
21 56 0.029297001 ubox
21 62 0.004828687 ubox
21 63 0.016077055 ubox
21 66 0.726271951 ubox
21 67 0.035693864 ubox
21 68 0.488116519 ubox
21 71 0.373621074 ubox
21 73 0.009461457 ubox
22 55 0.029320939 ubox
22 62 0.015570968 ubox
22 63 0.032064956 ubox
22 65 0.724920735 ubox
22 66 0.029226353 ubox
22 67 0.426421288 ubox
22 68 0.345844574 ubox
22 69 0.292990302 ubox
22 72 0.009465333 ubox
23 54 0.029313318 ubox
23 62 0.034305357 ubox
23 63 0.175782781 ubox
23 66 0.340525141 ubox
23 67 0.459723523 ubox
23 68 0.244925215 ubox
23 71 0.008684587 ubox
24 53 0.029307475 ubox
24 62 0.156698156 ubox
24 63 0.472564342 ubox
24 66 0.552251059 ubox
24 67 0.181986039 ubox
24 68 0.010148539 ubox
25 52 0.029323625 ubox
25 59 0.003528729 ubox
25 61 0.082935521 ubox
25 62 0.457195073 ubox
25 65 0.627739790 ubox
25 66 0.065144058 ubox
25 67 0.006029043 ubox
26 51 0.029305944 ubox
26 58 0.003869630 ubox
26 64 0.589062963 ubox
27 50 0.029215544 ubox
27 57 0.003921984 ubox
27 60 0.034336532 ubox
27 61 0.989534149 ubox
27 62 0.028928646 ubox
27 63 0.093406031 ubox
28 49 0.029096383 ubox
28 56 0.003898802 ubox
28 59 0.025949630 ubox
28 60 0.998281522 ubox
28 61 0.032089723 ubox
28 62 0.013307986 ubox
29 47 0.006537359 ubox
29 48 0.025881466 ubox
29 55 0.003873216 ubox
29 59 0.998908371 ubox
29 60 0.022835901 ubox
29 61 0.009366464 ubox
30 58 0.999226987 ubox
31 47 0.025368479 ubox
31 55 0.018746569 ubox
31 57 0.999148274 ubox
32 41 0.004339358 ubox
32 46 0.019995041 ubox
32 53 0.006509964 ubox
32 54 0.022136222 ubox
32 56 0.976553741 ubox
33 40 0.004715666 ubox
34 39 0.004364700 ubox
36 46 0.019711001 ubox
36 53 0.036335707 ubox
36 54 0.022074354 ubox
36 56 0.028109085 ubox
37 45 0.028062075 ubox
37 48 0.017624212 ubox
37 49 0.006210259 ubox
37 50 0.997808947 ubox
37 52 0.019010551 ubox
37 53 0.003825911 ubox
37 55 0.045656431 ubox
38 44 0.028060340 ubox
38 47 0.020610594 ubox
38 49 0.998301882 ubox
38 54 0.045688012 ubox
39 43 0.024413182 ubox
39 46 0.021261520 ubox
39 48 0.998102952 ubox
39 53 0.045728104 ubox
40 45 0.022138693 ubox
40 47 0.995880942 ubox
40 52 0.045746776 ubox
41 51 0.044733882 ubox
64 71 0.005988755 ubox
65 70 0.006503736 ubox
73 89 0.005553224 ubox
74 88 0.006738886 ubox
76 86 0.008352010 ubox
77 85 0.008463991 ubox
2 83 0.9500000 lbox
3 82 0.9500000 lbox
4 81 0.9500000 lbox
5 79 0.9500000 lbox
6 78 0.9500000 lbox
7 77 0.9500000 lbox
8 76 0.9500000 lbox
9 75 0.9500000 lbox
10 74 0.9500000 lbox
13 72 0.9500000 lbox
14 71 0.9500000 lbox
15 70 0.9500000 lbox
19 68 0.9500000 lbox
20 67 0.9500000 lbox
21 66 0.9500000 lbox
22 65 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
29 59 0.9500000 lbox
30 58 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
showpage
end
%%EOF
