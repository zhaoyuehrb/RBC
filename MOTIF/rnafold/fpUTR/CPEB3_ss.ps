%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCAGCCUGGGAGAUGUAGUCUUCGGACCGUCUCCACUAGAGGCUGCACAGCCCGCCCGGACCAACGCCUCCGCGCCUGCCGCCGUCUGGCCGGCGCCCUCCCGUUUCCUUCCUCCAGGGGGAAAAAAUGUCUUUCGGGCCGCUUUCCAGGAAGCAGCAGGAUGCGCCGCUCCACUGUCGGUAGCAACAAGCUGCGCAAACC\
) } def
/len { sequence length } bind def

/coor [
[87.45984650 265.25405884]
[88.41097260 249.97813416]
[96.36214447 236.89999390]
[109.48624420 229.02493286]
[108.56732941 214.05310059]
[107.64841461 199.08126831]
[106.72949982 184.10945129]
[105.81058502 169.13761902]
[97.30812836 156.90824890]
[104.18548584 142.66000366]
[103.26657104 127.68817139]
[89.14946747 122.61791992]
[78.91482544 133.58387756]
[68.68018341 144.54981995]
[58.44553375 155.51577759]
[48.21089172 166.48171997]
[37.97624588 177.44767761]
[27.74160194 188.41362000]
[25.87996483 194.76559448]
[21.71344566 198.63925171]
[17.02132416 199.55268860]
[6.45543671 210.19984436]
[-4.11045122 220.84700012]
[-7.76868534 236.83291626]
[-23.51948166 241.39848328]
[-35.15977097 229.84704590]
[-30.71502304 214.06173706]
[-14.75761127 210.28111267]
[-4.19172287 199.63395691]
[6.37416458 188.98680115]
[16.77565193 178.17897034]
[27.01029587 167.21302795]
[37.24494171 156.24707031]
[47.47958374 145.28112793]
[57.71422958 134.31517029]
[67.94887543 123.34922791]
[78.18351746 112.38327789]
[75.86589050 105.25035095]
[61.59996796 109.88536835]
[56.96518707 95.61936951]
[71.23063660 90.98450470]
[68.91300964 83.85157776]
[54.18738556 80.99571228]
[39.46175766 78.13984680]
[24.73613548 75.28398132]
[10.01050949 72.42811584]
[2.50360775 84.53462219]
[-8.66189384 93.33248901]
[-22.13174248 97.78060150]
[-36.28102875 97.36384583]
[-49.41019440 92.15268707]
[-59.94918060 82.79225159]
[-66.64518738 70.42251587]
[-68.71156311 56.53951645]
[-83.39169312 53.45832825]
[-97.55631256 60.99113846]
[-112.21932220 54.48147202]
[-116.13251495 38.92298889]
[-106.29402924 26.25082207]
[-90.25110626 26.18597794]
[-80.31050873 38.77819443]
[-65.63037109 41.85938644]
[-56.89180374 28.64219284]
[-43.71878433 19.76802063]
[-28.11129189 16.61983299]
[-12.45263863 19.70853233]
[0.85445863 28.59031677]
[9.75656700 41.93017578]
[12.86637688 57.70249176]
[27.59200096 60.55835724]
[42.31762695 63.41422272]
[57.04325104 66.27008820]
[71.76887512 69.12595367]
[85.54885101 63.20039749]
[93.60565186 50.54781342]
[101.66245270 37.89522552]
[109.71925354 25.24263763]
[117.67887115 12.52868938]
[125.54084015 -0.24587637]
[133.40280151 -13.02044201]
[141.26477051 -25.79500771]
[149.12672424 -38.56957245]
[149.77044678 -54.37767792]
[163.03057861 -61.16134262]
[170.89254761 -73.93591309]
[167.44955444 -89.12747192]
[175.60467529 -101.97070312]
[190.10873413 -105.15945435]
[197.97068787 -117.93401337]
[205.83265686 -130.70858765]
[213.69462585 -143.48315430]
[221.55657959 -156.25772095]
[218.11358643 -171.44927979]
[226.26870728 -184.29251099]
[240.77276611 -187.48126221]
[248.63471985 -200.25581360]
[256.49670410 -213.03038025]
[264.35864258 -225.80494690]
[272.12249756 -238.63938904]
[279.78778076 -251.53292847]
[287.45306396 -264.42648315]
[279.15075684 -281.66638184]
[282.88143921 -300.28100586]
[296.96166992 -312.79077148]
[315.58682251 -314.28033447]
[322.65142822 -327.51254272]
[329.71606445 -340.74475098]
[336.78067017 -353.97695923]
[343.84527588 -367.20916748]
[340.84872437 -379.75762939]
[347.00903320 -390.63467407]
[358.54769897 -394.27584839]
[365.81423950 -407.39822388]
[373.08081055 -420.52062988]
[380.34738159 -433.64300537]
[387.61392212 -446.76541138]
[394.88049316 -459.88778687]
[397.26406860 -476.67333984]
[414.05346680 -479.02963257]
[420.96545410 -463.54864502]
[408.00286865 -452.62124634]
[400.73632812 -439.49884033]
[393.46975708 -426.37646484]
[386.20318604 -413.25405884]
[378.93664551 -400.13168335]
[371.67007446 -387.00927734]
[372.93093872 -369.50769043]
[357.07748413 -360.14456177]
[350.01287842 -346.91235352]
[342.94827271 -333.68014526]
[335.88363647 -320.44793701]
[328.81903076 -307.21572876]
[335.50430298 -298.27502441]
[338.38131714 -287.43527222]
[336.99694824 -276.25424194]
[331.51336670 -266.35369873]
[322.69006348 -259.18395996]
[311.77896118 -255.81170654]
[300.34661865 -256.76119995]
[292.68133545 -243.86764526]
[285.01605225 -230.97410583]
[284.29974365 -223.61463928]
[277.13320923 -217.94299316]
[269.27127075 -205.16842651]
[261.40930176 -192.39385986]
[253.54733276 -179.61929321]
[257.23574829 -165.23419189]
[249.44458008 -152.16696167]
[234.33114624 -148.39575195]
[226.46917725 -135.62118530]
[218.60722351 -122.84661865]
[210.74525452 -110.07205200]
[202.88328552 -97.29748535]
[206.57171631 -82.91238403]
[198.78053284 -69.84516144]
[183.66711426 -66.07394409]
[175.80514526 -53.29938126]
[175.72377014 -38.40499878]
[161.90129089 -30.70760918]
[154.03933716 -17.93304253]
[146.17736816 -5.15847778]
[138.31539917 7.61608744]
[130.45344543 20.39065361]
[129.62445068 27.73827934]
[122.37184143 33.29943848]
[114.31504059 45.95202637]
[106.25823975 58.60461426]
[98.20143890 71.25720215]
[118.27538300 66.79206085]
[141.20768738 77.37522888]
[156.00267029 103.55999756]
[166.73046875 114.04399109]
[177.45828247 124.52798462]
[188.26609802 134.92947388]
[199.15330505 145.24784851]
[214.94320679 144.57356262]
[226.52847290 155.32330322]
[227.03578186 171.11944580]
[216.16415405 182.59042358]
[200.36352539 182.93069458]
[189.00813293 171.93838501]
[188.83494568 156.13505554]
[177.94773865 145.81668091]
[170.92707825 143.49607849]
[166.97428894 135.25579834]
[156.24647522 124.77179718]
[145.51866150 114.28780365]
[138.69859314 117.40816498]
[125.05846405 123.64889526]
[118.23839569 126.76925659]
[119.15731049 141.74108887]
[127.72549438 155.04135132]
[120.78240967 168.21870422]
[121.70132446 183.19053650]
[122.62023926 198.16235352]
[123.53915405 213.13418579]
[124.45806885 228.10601807]
[138.44671631 234.31700134]
[147.93754578 246.32461548]
[150.74966431 261.36956787]
[146.23684692 275.99465942]
[135.43611145 286.83911133]
[120.82937622 291.41101074]
[105.77318573 288.65972900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[10 191]
[11 190]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[18 31]
[21 30]
[22 29]
[23 28]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[54 62]
[55 61]
[74 168]
[75 167]
[76 166]
[77 165]
[78 163]
[79 162]
[80 161]
[81 160]
[82 159]
[84 157]
[85 156]
[88 153]
[89 152]
[90 151]
[91 150]
[92 149]
[95 146]
[96 145]
[97 144]
[98 143]
[99 141]
[100 140]
[101 139]
[105 132]
[106 131]
[107 130]
[108 129]
[109 128]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
[117 121]
[171 187]
[172 186]
[173 185]
[174 183]
[175 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
