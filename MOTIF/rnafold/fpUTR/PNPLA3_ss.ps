%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUCCGAGGGGGGCGGGGCUGACGUCGCGCUGGGAAUGCCCUGGCCGAGACACUGAGGCAGGGUAGAGAGCGCUUGCGGGCGCCGGGCGGAGCUGCUGCGGAUCAGGACCCGAGCCGAUUCCCGAUCCCGACCCAGAUCCUAACCCGCGCCCCCGCCCCGCCGCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[94.20881653 385.14349365]
[79.13375092 388.42160034]
[64.68752289 383.00772095]
[55.47986603 370.62942505]
[54.44890976 355.23654175]
[61.92363358 341.74090576]
[75.51887512 334.44894409]
[76.60124207 319.48803711]
[66.69271088 308.42654419]
[67.57726288 293.23864746]
[79.24675751 282.92065430]
[80.32912445 267.95977783]
[73.53036499 254.70736694]
[82.24328613 241.50148010]
[83.32565308 226.54057312]
[84.40802002 211.57968140]
[85.49037933 196.61877441]
[86.57274628 181.65788269]
[87.65511322 166.69697571]
[88.73748016 151.73608398]
[89.81984711 136.77517700]
[83.53013611 134.42082214]
[77.75061035 131.00022888]
[72.66029358 126.61935425]
[68.41686249 121.41390228]
[65.15177155 115.54511261]
[62.96615982 109.19479370]
[61.92773056 102.55965424]
[62.06864929 95.84522247]
[47.76969528 91.31311798]
[33.47074509 86.78101349]
[19.17179298 82.24890900]
[4.87284136 77.71679688]
[-4.15238905 86.42321777]
[-15.95898151 90.42977905]
[-28.27534676 89.03070068]
[-38.75941849 82.55404663]
[-45.44401932 72.28749847]
[-47.10586929 60.22276688]
[-61.23188019 55.17739105]
[-75.35788727 50.13201141]
[-89.48390198 45.08663177]
[-103.60990906 40.04125595]
[-117.73591614 34.99587631]
[-131.86192322 29.95049667]
[-141.03160095 30.00764465]
[-146.19602966 24.68441010]
[-160.22863770 19.38482094]
[-172.06121826 29.17694473]
[-187.20726013 31.72505951]
[-201.59257507 26.34373665]
[-211.34754944 14.48052311]
[-213.84817505 -0.67343432]
[-208.42179871 -15.04179859]
[-196.52806091 -24.75955200]
[-181.36634827 -27.21266556]
[-167.01506042 -21.74126625]
[-157.33462524 -9.81713295]
[-154.92906189 5.35220385]
[-140.89643860 10.65179253]
[-126.81655121 15.82448769]
[-112.69053650 20.86986542]
[-98.56452942 25.91524506]
[-84.43852234 30.96062279]
[-70.31250763 36.00600052]
[-56.18650055 41.05138016]
[-42.06048965 46.09675598]
[-27.99040222 35.46936035]
[-10.20116806 35.38845062]
[4.21698952 46.07412338]
[9.40494823 63.41785049]
[23.70389938 67.94995880]
[38.00284958 72.48206329]
[52.30180359 77.01416779]
[66.60075378 81.54627228]
[76.13350677 70.22686005]
[89.25598145 63.38558197]
[103.99445343 62.05142975]
[118.13212585 66.42507172]
[129.54257202 75.84867096]
[142.79524231 68.82254791]
[156.04792786 61.79642105]
[169.30061340 54.77029419]
[182.55328369 47.74416733]
[195.80596924 40.71804047]
[201.94853210 33.90959549]
[209.36195374 33.68714905]
[222.73931885 26.90143204]
[236.11668396 20.11571693]
[246.31146240 2.75149989]
[265.54376221 4.54871988]
[278.66741943 -2.71552730]
[291.79107666 -9.97977448]
[300.11798096 -23.43241692]
[315.00024414 -22.82656860]
[328.12393188 -30.09081650]
[341.24758911 -37.35506439]
[350.80880737 -55.07601547]
[370.09347534 -53.97430038]
[382.94631958 -61.70760727]
[388.71127319 -68.83862305]
[396.10177612 -69.46209717]
[409.09216309 -76.96209717]
[422.08255005 -84.46209717]
[435.07290649 -91.96209717]
[448.06329346 -99.46209717]
[456.14593506 -113.06288147]
[471.03674316 -112.72581482]
[484.02713013 -120.22581482]
[497.01751709 -127.72581482]
[501.21179199 -142.72734070]
[514.49273682 -150.14836121]
[528.76855469 -146.05728149]
[541.75891113 -153.55728149]
[552.45281982 -166.71313477]
[568.05493164 -160.07904053]
[565.99920654 -143.25018311]
[549.25891113 -140.56690979]
[536.26855469 -133.06690979]
[532.67358398 -118.65815735]
[519.60632324 -110.86704254]
[504.51751709 -114.73543549]
[491.52713013 -107.23543549]
[478.53674316 -99.73543549]
[471.38323975 -86.67110443]
[455.56329346 -86.47171783]
[442.57290649 -78.97171783]
[429.58255005 -71.47171783]
[416.59216309 -63.97171402]
[403.60177612 -56.47171402]
[390.67962646 -48.85475159]
[377.82678223 -41.12144470]
[376.25039673 -30.98275566]
[369.19192505 -23.23555565]
[358.81680298 -20.61674690]
[348.51184082 -24.23139381]
[335.38818359 -16.96714592]
[322.26449585 -9.70289898]
[314.87631226 3.23015594]
[299.05532837 3.14389515]
[285.93167114 10.40814209]
[272.80801392 17.67238998]
[270.86660767 27.74755478]
[263.53305054 35.23487854]
[253.07015991 37.47741318]
[242.90240479 33.49308777]
[229.52503967 40.27880478]
[216.14765930 47.06451797]
[202.83209229 53.97072220]
[189.57940674 60.99684906]
[176.32673645 68.02297211]
[163.07405090 75.04910278]
[149.82136536 82.07522583]
[136.56869507 89.10135651]
[136.57983398 110.86117554]
[124.69565582 129.08906555]
[104.78074646 137.85754395]
[103.69837952 152.81845093]
[102.61601257 167.77934265]
[101.53364563 182.74024963]
[100.45127869 197.70114136]
[99.36891174 212.66204834]
[98.28654480 227.62294006]
[97.20418549 242.58384705]
[103.92552185 256.90634155]
[95.29002380 269.04214478]
[94.20765686 284.00302124]
[104.27046967 295.89324951]
[102.95967102 311.05032349]
[91.56214142 320.57040405]
[90.47977448 335.53131104]
[102.88383484 344.70422363]
[108.33817291 359.13522339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 171]
[8 170]
[11 167]
[12 166]
[14 164]
[15 163]
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[21 157]
[29 75]
[30 74]
[31 73]
[32 72]
[33 71]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 61]
[47 60]
[48 59]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
[87 148]
[88 147]
[89 146]
[91 142]
[92 141]
[93 140]
[95 138]
[96 137]
[97 136]
[99 132]
[100 131]
[102 130]
[103 129]
[104 128]
[105 127]
[106 126]
[108 124]
[109 123]
[110 122]
[113 119]
[114 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
