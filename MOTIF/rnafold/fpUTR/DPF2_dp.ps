%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DPF2)
} def

/sequence { (\
AGUGCUCGCUCUAGUGCGCGCGCCCGGACGGCGCCUGCGCAGAGGGCAAGGAACCUGGUACCCCGGUGCGGUCCCGGCGCCUGCGCGCUGCGGACUGUGGGGCUUCUCGGCCCGAGGCAGAGGAACAGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 56 0.010067130 ubox
2 21 0.003883101 ubox
2 47 0.023993007 ubox
2 54 0.048887584 ubox
2 55 0.010033734 ubox
2 61 0.008054593 ubox
2 103 0.005078843 ubox
2 118 0.008536228 ubox
2 126 0.014691990 ubox
3 20 0.003888373 ubox
3 46 0.023580252 ubox
3 48 0.634760860 ubox
3 53 0.069510740 ubox
3 60 0.008941404 ubox
3 102 0.004845032 ubox
3 117 0.008077539 ubox
3 119 0.019442343 ubox
3 125 0.014137095 ubox
3 127 0.005483033 ubox
4 19 0.003916663 ubox
4 47 0.704601645 ubox
4 59 0.009186467 ubox
4 103 0.029923002 ubox
4 118 0.021593783 ubox
4 126 0.006053244 ubox
5 18 0.003900489 ubox
5 44 0.021952058 ubox
5 45 0.005472235 ubox
5 46 0.702613560 ubox
5 50 0.605064479 ubox
5 51 0.138288896 ubox
5 58 0.009178727 ubox
5 100 0.004180126 ubox
5 101 0.003795253 ubox
5 102 0.029943183 ubox
5 116 0.015309416 ubox
5 117 0.018444730 ubox
5 122 0.010987733 ubox
5 129 0.003270892 ubox
5 130 0.025678808 ubox
5 133 0.019994092 ubox
6 43 0.021468827 ubox
6 45 0.494570519 ubox
6 46 0.057940395 ubox
6 49 0.601836229 ubox
6 50 0.131082849 ubox
6 51 0.050374398 ubox
6 52 0.072798226 ubox
6 57 0.007884755 ubox
6 99 0.003479247 ubox
6 100 0.004055837 ubox
6 101 0.029844120 ubox
6 115 0.019010117 ubox
6 116 0.013352362 ubox
6 121 0.011052534 ubox
6 124 0.003421587 ubox
6 129 0.023666547 ubox
6 130 0.004110258 ubox
6 131 0.057870538 ubox
6 132 0.016413616 ubox
7 16 0.003821933 ubox
7 42 0.021114025 ubox
7 44 0.285674852 ubox
7 45 0.475214945 ubox
7 50 0.061775149 ubox
7 51 0.076237070 ubox
7 99 0.004609913 ubox
7 100 0.029693774 ubox
7 114 0.019764776 ubox
7 116 0.003917120 ubox
7 120 0.011046866 ubox
7 123 0.003497282 ubox
7 128 0.023528104 ubox
7 129 0.004007432 ubox
7 130 0.061696371 ubox
8 15 0.004832315 ubox
8 40 0.005348276 ubox
8 47 0.706468558 ubox
8 118 0.004123276 ubox
9 14 0.005112209 ubox
9 39 0.005347910 ubox
9 42 0.115874014 ubox
9 44 0.642721977 ubox
9 45 0.005893577 ubox
9 46 0.707318158 ubox
9 117 0.003892849 ubox
9 128 0.004710868 ubox
9 130 0.003290027 ubox
10 41 0.112106742 ubox
10 43 0.690843407 ubox
10 44 0.003257083 ubox
10 45 0.700809353 ubox
10 46 0.013692743 ubox
10 127 0.004302622 ubox
10 129 0.003297324 ubox
11 42 0.695555784 ubox
11 44 0.700821919 ubox
11 45 0.092753509 ubox
11 128 0.003329877 ubox
12 37 0.004506983 ubox
12 41 0.689122107 ubox
12 43 0.692321710 ubox
12 44 0.092974049 ubox
12 127 0.003210231 ubox
13 36 0.004570351 ubox
13 89 0.003719154 ubox
14 35 0.004575500 ubox
14 40 0.819426249 ubox
14 88 0.003800371 ubox
15 39 0.819465127 ubox
15 41 0.562631592 ubox
15 87 0.003799273 ubox
16 34 0.004557155 ubox
16 38 0.819878273 ubox
16 40 0.572395232 ubox
16 86 0.003801919 ubox
17 33 0.004558011 ubox
17 37 0.819834870 ubox
17 39 0.572432484 ubox
17 85 0.003801969 ubox
18 32 0.004559416 ubox
18 34 0.008533219 ubox
18 36 0.804263512 ubox
18 38 0.572422462 ubox
18 84 0.003801895 ubox
19 31 0.004547542 ubox
19 33 0.008631018 ubox
19 37 0.569951531 ubox
19 83 0.003785365 ubox
20 32 0.008571810 ubox
20 34 0.993671809 ubox
20 36 0.094393592 ubox
20 80 0.003765669 ubox
21 30 0.004871144 ubox
21 31 0.008292810 ubox
21 33 0.998091337 ubox
21 79 0.003814073 ubox
22 29 0.005214022 ubox
22 32 0.998189479 ubox
22 34 0.058660271 ubox
22 47 0.004391769 ubox
22 78 0.003815611 ubox
23 31 0.995859066 ubox
23 33 0.058676421 ubox
23 46 0.004397527 ubox
23 77 0.003812883 ubox
24 30 0.992298661 ubox
24 31 0.090058231 ubox
24 45 0.004400239 ubox
24 76 0.003808024 ubox
25 30 0.112889942 ubox
25 44 0.004398788 ubox
26 74 0.003810233 ubox
27 73 0.003817267 ubox
28 72 0.003821750 ubox
29 71 0.003818167 ubox
31 40 0.003889024 ubox
31 69 0.003820211 ubox
32 39 0.003890321 ubox
32 68 0.003821606 ubox
33 38 0.003789621 ubox
33 67 0.003776514 ubox
34 66 0.003769310 ubox
35 65 0.003760985 ubox
43 56 0.006670386 ubox
44 55 0.007020331 ubox
44 113 0.004157104 ubox
45 54 0.007141442 ubox
45 112 0.004570542 ubox
46 59 0.004272167 ubox
46 111 0.004573115 ubox
47 58 0.004377934 ubox
47 110 0.004571721 ubox
49 56 0.018070585 ubox
50 55 0.018625789 ubox
50 56 0.003934036 ubox
50 107 0.004318275 ubox
51 55 0.004243524 ubox
51 106 0.004401518 ubox
52 105 0.004384942 ubox
53 59 0.007038997 ubox
53 67 0.031903915 ubox
53 104 0.003209685 ubox
54 58 0.007211099 ubox
54 66 0.033243104 ubox
54 129 0.985384439 ubox
54 130 0.134627790 ubox
55 65 0.033026529 ubox
55 66 0.022856152 ubox
55 128 0.988635034 ubox
55 129 0.132060728 ubox
55 130 0.008906339 ubox
56 65 0.023327767 ubox
56 127 0.988133687 ubox
56 128 0.119287514 ubox
56 129 0.008656062 ubox
57 63 0.024276522 ubox
57 64 0.032342671 ubox
57 104 0.009985183 ubox
57 126 0.980192229 ubox
58 62 0.023943190 ubox
58 63 0.032113297 ubox
58 69 0.003653076 ubox
58 103 0.109161155 ubox
58 104 0.016108723 ubox
58 105 0.016604547 ubox
58 106 0.003949081 ubox
58 126 0.168500557 ubox
59 68 0.003721971 ubox
59 102 0.057711982 ubox
59 125 0.196036827 ubox
60 67 0.004017971 ubox
61 66 0.004047789 ubox
61 100 0.007691057 ubox
61 101 0.084816171 ubox
61 102 0.985065521 ubox
61 123 0.020461539 ubox
62 99 0.007671146 ubox
62 100 0.084874597 ubox
62 101 0.990030843 ubox
62 102 0.099126285 ubox
62 122 0.019319089 ubox
62 123 0.005853879 ubox
62 130 0.006536647 ubox
63 99 0.084546176 ubox
63 100 0.990050771 ubox
63 101 0.100248316 ubox
63 102 0.013187272 ubox
63 117 0.010107660 ubox
63 122 0.005812293 ubox
63 123 0.008868191 ubox
63 129 0.006557036 ubox
64 97 0.004329205 ubox
64 99 0.988290900 ubox
64 100 0.100294743 ubox
64 101 0.013319891 ubox
64 116 0.010104617 ubox
64 122 0.008903041 ubox
64 128 0.006538603 ubox
65 96 0.004095021 ubox
65 98 0.374237657 ubox
66 95 0.004030341 ubox
66 98 0.036159906 ubox
66 118 0.012911450 ubox
66 126 0.005807997 ubox
67 94 0.003906660 ubox
67 97 0.004902193 ubox
67 99 0.073114615 ubox
67 117 0.012317716 ubox
67 119 0.009461039 ubox
67 125 0.005579374 ubox
68 96 0.003886543 ubox
68 98 0.919411228 ubox
68 118 0.009505148 ubox
69 92 0.003826238 ubox
69 97 0.998750711 ubox
69 117 0.009235495 ubox
70 91 0.003800113 ubox
70 96 0.998919141 ubox
71 95 0.999958812 ubox
72 94 0.999854703 ubox
73 92 0.003724732 ubox
73 93 0.999964743 ubox
74 92 0.999836253 ubox
74 93 0.003429529 ubox
75 90 0.999026779 ubox
75 92 0.004789248 ubox
76 89 0.999164262 ubox
76 91 0.005127603 ubox
77 88 0.999980986 ubox
78 87 0.999973029 ubox
79 86 0.999881171 ubox
80 85 0.997131047 ubox
100 113 0.034644480 ubox
101 112 0.034717533 ubox
102 111 0.034797883 ubox
102 118 0.008270532 ubox
103 110 0.034833520 ubox
103 117 0.008847140 ubox
103 120 0.021443721 ubox
103 122 0.012775331 ubox
103 123 0.176085352 ubox
103 128 0.007419412 ubox
103 129 0.005779130 ubox
103 130 0.003735020 ubox
103 133 0.018116211 ubox
104 109 0.031820175 ubox
104 116 0.008584906 ubox
104 119 0.021367811 ubox
104 121 0.011458013 ubox
104 122 0.175753639 ubox
104 123 0.014583329 ubox
104 124 0.901820308 ubox
104 125 0.082010860 ubox
104 127 0.005919262 ubox
104 128 0.004905699 ubox
104 132 0.018806126 ubox
105 115 0.008534793 ubox
105 117 0.025214580 ubox
105 120 0.007938484 ubox
105 121 0.175937964 ubox
105 123 0.954913260 ubox
105 124 0.088963682 ubox
105 131 0.018971410 ubox
106 114 0.008527852 ubox
106 116 0.028784751 ubox
106 120 0.176036427 ubox
106 122 0.980261671 ubox
106 123 0.069953802 ubox
106 130 0.018987403 ubox
107 115 0.029049253 ubox
107 119 0.162931998 ubox
107 121 0.981935293 ubox
107 122 0.038503230 ubox
107 129 0.018954174 ubox
108 114 0.029192397 ubox
108 116 0.003518001 ubox
108 120 0.974173133 ubox
108 122 0.005498478 ubox
108 128 0.018916161 ubox
109 113 0.027314973 ubox
110 118 0.994868254 ubox
111 117 0.998566494 ubox
111 123 0.004101399 ubox
112 116 0.991305643 ubox
112 122 0.003952064 ubox
112 123 0.018703566 ubox
113 122 0.018762734 ubox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
10 45 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
15 41 0.9500000 lbox
16 40 0.9500000 lbox
17 39 0.9500000 lbox
18 38 0.9500000 lbox
19 37 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
54 129 0.9500000 lbox
55 128 0.9500000 lbox
56 127 0.9500000 lbox
57 126 0.9500000 lbox
61 102 0.9500000 lbox
62 101 0.9500000 lbox
63 100 0.9500000 lbox
64 99 0.9500000 lbox
68 98 0.9500000 lbox
69 97 0.9500000 lbox
70 96 0.9500000 lbox
71 95 0.9500000 lbox
72 94 0.9500000 lbox
73 93 0.9500000 lbox
74 92 0.9500000 lbox
75 90 0.9500000 lbox
76 89 0.9500000 lbox
77 88 0.9500000 lbox
78 87 0.9500000 lbox
79 86 0.9500000 lbox
80 85 0.9500000 lbox
104 124 0.9500000 lbox
105 123 0.9500000 lbox
106 122 0.9500000 lbox
107 121 0.9500000 lbox
108 120 0.9500000 lbox
110 118 0.9500000 lbox
111 117 0.9500000 lbox
112 116 0.9500000 lbox
showpage
end
%%EOF
