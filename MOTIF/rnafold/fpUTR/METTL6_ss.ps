%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGUUCCUAGCGGAAGUGGCGGGGGCGGUGCCAUGGCAAAAGAACUCCCGGAUAAUCCGAAUUCGUGGUCCUCAGAAUUGGUUUAGGGUUGUUUCGCGGUUCUUCCCGUAUUCUGCCUCCGAGGCCCAGUGGGGCUGGCUGUGGGCCCCCUGUGCUGUUUGAGGCGUGAAACUCACCUCAGGAAAUGUAUCUGAUCCAUUAGCGUGGAUUCAUAUUAUUUGGUGAUGGAGAAUCUUCAGCUGUGUUAAGUGUUA\
CCGUCAGUUUCAGAG\
) } def
/len { sequence length } bind def

/coor [
[109.38474274 1370.19067383]
[98.14595032 1380.33801270]
[84.22029114 1386.28393555]
[69.11832428 1387.38366699]
[54.47819519 1383.51770020]
[41.88795471 1375.10559082]
[32.71329880 1363.05957031]
[27.94942665 1348.68652344]
[28.11308479 1333.54553223]
[33.18652344 1319.27880859]
[42.61941528 1307.43395996]
[55.38854599 1299.29589844]
[70.10881805 1295.74743652]
[71.49793243 1280.81188965]
[72.88705444 1265.87634277]
[74.27616882 1250.94079590]
[67.75076294 1237.55163574]
[76.73281860 1224.52734375]
[78.12194061 1209.59179688]
[79.51105499 1194.65625000]
[80.90017700 1179.72070312]
[82.28929138 1164.78515625]
[83.67841339 1149.84960938]
[73.99893951 1138.58715820]
[75.19493866 1123.42053223]
[87.07368469 1113.34423828]
[88.46280670 1098.40869141]
[89.85192108 1083.47314453]
[76.43147278 1074.44335938]
[69.36473846 1059.78869629]
[70.67059326 1043.47729492]
[80.08638763 1029.97937012]
[95.11396790 1023.04205322]
[96.32984924 1008.09136963]
[97.54573822 993.14074707]
[98.76162720 978.19012451]
[99.97750854 963.23944092]
[101.19339752 948.28881836]
[91.38401794 937.13934326]
[92.40412140 921.95989990]
[104.16526031 911.74652100]
[105.38114929 896.79589844]
[106.59703827 881.84527588]
[107.81292725 866.89459229]
[99.46324921 851.44189453]
[110.10491943 836.39373779]
[111.14741516 821.43005371]
[112.18990326 806.46630859]
[113.23239899 791.50256348]
[113.84084320 776.51489258]
[114.01472473 761.51593018]
[114.18861389 746.51690674]
[114.36249542 731.51794434]
[114.53638458 716.51892090]
[114.71026611 701.51995850]
[114.88415527 686.52093506]
[115.05803680 671.52197266]
[104.49748993 661.08117676]
[104.46016693 645.86755371]
[115.48304749 634.86151123]
[115.65692902 619.86248779]
[115.83081818 604.86352539]
[116.00469971 589.86450195]
[116.17858887 574.86553955]
[116.35247040 559.86651611]
[116.00472260 544.87054443]
[115.13576508 529.89575195]
[114.26680756 514.92095947]
[113.39785004 499.94613647]
[105.21752930 493.89648438]
[101.62380981 484.14419556]
[104.02126312 473.80606079]
[111.85735321 466.32812500]
[111.33578491 451.33718872]
[110.81422424 436.34625244]
[110.29266357 421.35531616]
[109.77110291 406.36441040]
[96.07444000 400.45956421]
[86.25942230 389.14697266]
[82.31327057 374.63528442]
[85.07035065 359.78878784]
[94.03648376 347.56195068]
[107.47648621 340.41159058]
[106.95492554 325.42065430]
[106.43336487 310.42971802]
[95.03564453 294.78439331]
[104.87007141 277.16091919]
[104.00111389 262.18609619]
[103.13215637 247.21130371]
[102.26319885 232.23649597]
[91.85147095 218.09086609]
[100.30371857 201.71246338]
[99.26122284 186.74873352]
[98.21873474 171.78500366]
[97.17623901 156.82127380]
[96.13375092 141.85754395]
[95.09125519 126.89380646]
[94.04876709 111.93007660]
[88.12827301 98.14792633]
[77.99263763 87.09039307]
[62.19437408 86.65404510]
[51.39269638 75.11717987]
[51.99605179 59.32441330]
[63.64647675 48.64531326]
[79.43198395 49.41560364]
[89.98730469 61.17828369]
[89.05016327 76.95476532]
[99.18579865 88.01229095]
[106.33467102 85.74433136]
[101.79875183 71.44658661]
[93.06674957 59.25019455]
[101.96802521 47.17678070]
[116.20111084 51.91168213]
[116.09649658 66.91067505]
[120.63241577 81.20841217]
[127.78128815 78.94046021]
[129.68888855 64.06224823]
[131.59648132 49.18404007]
[133.50407410 34.30583191]
[135.41168213 19.42762566]
[122.93881226 7.97757387]
[119.79290009 -8.48970032]
[127.02169037 -23.43157578]
[141.59066772 -31.03172874]
[143.32566833 -45.93104935]
[145.06066895 -60.83037186]
[138.97151184 -75.43286896]
[148.12899780 -87.17976379]
[149.86399841 -102.07908630]
[151.59899902 -116.97840881]
[149.48805237 -125.82772064]
[153.44143677 -132.04002380]
[155.34902954 -146.91822815]
[157.25662231 -161.79644775]
[159.16423035 -176.67465210]
[161.07182312 -191.55285645]
[162.97943115 -206.43106079]
[152.24363708 -217.80105591]
[151.37963867 -233.41476440]
[160.79539490 -245.89984131]
[176.04507446 -249.36125183]
[189.92823792 -242.16459656]
[195.88969421 -227.70793152]
[191.11459351 -212.81724548]
[177.85763550 -204.52346802]
[175.95002747 -189.64526367]
[174.04243469 -174.76705933]
[172.13484192 -159.88883972]
[170.22723389 -145.01063538]
[168.31964111 -130.13243103]
[166.49830627 -115.24341583]
[164.76332092 -100.34409332]
[163.02832031 -85.44477081]
[169.24157715 -71.90797424]
[159.95999146 -59.09537506]
[158.22499084 -44.19605255]
[156.48999023 -29.29673195]
[167.09425354 -21.21835899]
[172.37280273 -8.85946560]
[170.85226440 4.60199976]
[162.82275391 15.64697742]
[150.28988647 21.33522415]
[148.38229370 36.21343231]
[146.47468567 51.09164047]
[144.56709290 65.96984863]
[142.65950012 80.84805298]
[109.01249695 110.88758850]
[110.05498505 125.85131836]
[111.09748077 140.81504822]
[112.13996887 155.77877808]
[113.18246460 170.74250793]
[114.22495270 185.70623779]
[115.26744843 200.66996765]
[124.45621490 209.68785095]
[125.03503418 222.14868164]
[117.23800659 231.36753845]
[118.10696411 246.34234619]
[118.97592163 261.31713867]
[119.84487915 276.29196167]
[128.33981323 283.01208496]
[131.68435669 293.08377075]
[129.00921631 303.12695312]
[121.42429352 309.90817261]
[121.94585419 324.89910889]
[122.46741486 339.89004517]
[136.37187195 346.08901978]
[146.16607666 357.66314697]
[149.94831848 372.28213501]
[147.02026367 387.03298950]
[138.01519775 399.00036621]
[124.76203156 405.84283447]
[125.28359222 420.83377075]
[125.80515289 435.82470703]
[126.32672119 450.81561279]
[126.84828186 465.80654907]
[138.27252197 482.44354248]
[128.37266541 499.07717896]
[129.24162292 514.05200195]
[130.11058044 529.02679443]
[130.97953796 544.00158691]
[141.56832886 533.37719727]
[156.56773376 533.24438477]
[167.34304810 543.67956543]
[167.69122314 558.67547607]
[157.41181946 569.59948730]
[142.42240906 570.16296387]
[131.35147095 560.04040527]
[131.17758179 575.03942871]
[131.00369263 590.03839111]
[130.82980347 605.03741455]
[130.65592957 620.03637695]
[130.48204041 635.03540039]
[141.24679565 646.29406738]
[140.85679626 661.50268555]
[130.05702209 671.69586182]
[129.88314819 686.69482422]
[129.70925903 701.69384766]
[129.53536987 716.69281006]
[129.36149597 731.69183350]
[129.18760681 746.69079590]
[129.01371765 761.68981934]
[128.83982849 776.68878174]
[141.11070251 768.06176758]
[155.53944397 772.16192627]
[161.43991089 785.95269775]
[154.44213867 799.22033691]
[139.72877502 802.13873291]
[128.19612122 792.54504395]
[127.15363312 807.50878906]
[126.11114502 822.47253418]
[125.06864929 837.43621826]
[132.91819763 847.64117432]
[131.76358032 860.06188965]
[122.76356506 868.11053467]
[121.54767609 883.06115723]
[120.33178711 898.01177979]
[119.11590576 912.96240234]
[129.07215881 924.94201660]
[127.62610626 940.08679199]
[116.14403534 949.50469971]
[114.92815399 964.45538330]
[113.71226501 979.40600586]
[112.49637604 994.35662842]
[111.28048706 1009.30725098]
[110.06460571 1024.25793457]
[121.95391846 1031.58996582]
[129.49487305 1043.26928711]
[131.26727295 1056.99145508]
[126.98249817 1070.07800293]
[117.52871704 1079.99890137]
[104.78746033 1084.86230469]
[103.39834595 1099.79785156]
[102.00922394 1114.73339844]
[111.82595062 1126.82751465]
[110.20442200 1141.95446777]
[98.61395264 1151.23876953]
[97.22483063 1166.17431641]
[95.83571625 1181.10986328]
[94.44659424 1196.04528809]
[93.05747986 1210.98083496]
[91.66835785 1225.91638184]
[98.09440613 1240.37377930]
[89.21170807 1252.32983398]
[87.82259369 1267.26538086]
[86.43347931 1282.20092773]
[85.04435730 1297.13647461]
[98.85771942 1303.33886719]
[109.90700531 1313.69226074]
[116.99368286 1327.07348633]
[119.34903717 1342.03112793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 266]
[14 265]
[15 264]
[16 263]
[18 261]
[19 260]
[20 259]
[21 258]
[22 257]
[23 256]
[26 253]
[27 252]
[28 251]
[33 245]
[34 244]
[35 243]
[36 242]
[37 241]
[38 240]
[41 237]
[42 236]
[43 235]
[44 234]
[46 231]
[47 230]
[48 229]
[49 228]
[50 222]
[51 221]
[52 220]
[53 219]
[54 218]
[55 217]
[56 216]
[57 215]
[60 212]
[61 211]
[62 210]
[63 209]
[64 208]
[65 207]
[66 200]
[67 199]
[68 198]
[69 197]
[73 195]
[74 194]
[75 193]
[76 192]
[77 191]
[83 185]
[84 184]
[85 183]
[87 179]
[88 178]
[89 177]
[90 176]
[92 173]
[93 172]
[94 171]
[95 170]
[96 169]
[97 168]
[98 167]
[99 108]
[100 107]
[116 166]
[117 165]
[118 164]
[119 163]
[120 162]
[124 157]
[125 156]
[126 155]
[128 153]
[129 152]
[130 151]
[132 150]
[133 149]
[134 148]
[135 147]
[136 146]
[137 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
