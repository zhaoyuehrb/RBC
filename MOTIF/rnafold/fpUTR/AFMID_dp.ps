%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AFMID)
} def

/sequence { (\
CGGGGCUCUGGCCAUAUAAACAGAGGGACGCACGCCCAUGCGGCUGUAGACGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.011477750 ubox
1 30 0.236212190 ubox
1 34 0.012400958 ubox
1 40 0.060507806 ubox
1 42 0.013576225 ubox
1 46 0.030473083 ubox
1 52 0.051901196 ubox
2 9 0.011816753 ubox
2 13 0.019062350 ubox
2 29 0.343561880 ubox
2 33 0.013785622 ubox
2 36 0.024522648 ubox
2 37 0.129310703 ubox
2 39 0.067687297 ubox
2 41 0.018385190 ubox
2 45 0.030697493 ubox
2 51 0.054230953 ubox
2 54 0.092498276 ubox
3 8 0.011817680 ubox
3 12 0.019054759 ubox
3 13 0.013316564 ubox
3 35 0.024606967 ubox
3 36 0.127884515 ubox
3 37 0.406914241 ubox
3 44 0.030150892 ubox
3 45 0.007706178 ubox
3 53 0.091797428 ubox
3 54 0.158534768 ubox
4 12 0.012578256 ubox
4 13 0.098004687 ubox
4 35 0.125486337 ubox
4 36 0.407898200 ubox
4 37 0.011505441 ubox
4 44 0.008007531 ubox
4 45 0.010973705 ubox
4 53 0.157143269 ubox
4 54 0.700975353 ubox
5 12 0.098230495 ubox
5 31 0.061095227 ubox
5 35 0.408306383 ubox
5 36 0.011343057 ubox
5 41 0.017244894 ubox
5 44 0.011440355 ubox
5 47 0.009138259 ubox
5 53 0.709817654 ubox
6 11 0.098015444 ubox
6 25 0.562740010 ubox
6 26 0.022420468 ubox
6 27 0.013172138 ubox
6 30 0.055290001 ubox
6 34 0.371748758 ubox
6 40 0.017182016 ubox
6 43 0.009628975 ubox
6 46 0.008613822 ubox
6 49 0.035509091 ubox
6 52 0.708556159 ubox
7 24 0.661793681 ubox
7 25 0.012726844 ubox
7 26 0.017512705 ubox
7 27 0.009552980 ubox
7 28 0.034484089 ubox
7 42 0.003281141 ubox
7 48 0.037593301 ubox
7 50 0.712587182 ubox
8 23 0.664093466 ubox
8 25 0.016977721 ubox
8 26 0.009401340 ubox
8 27 0.034355107 ubox
8 49 0.715211451 ubox
9 22 0.663979581 ubox
9 24 0.016491749 ubox
9 25 0.009090578 ubox
9 26 0.031473108 ubox
9 30 0.107710922 ubox
9 32 0.053076805 ubox
9 46 0.125216810 ubox
9 48 0.677915324 ubox
10 17 0.003559776 ubox
10 21 0.663963468 ubox
10 29 0.119294548 ubox
10 31 0.053758182 ubox
10 33 0.018837104 ubox
10 36 0.003354918 ubox
10 45 0.597820010 ubox
10 47 0.343021955 ubox
10 54 0.007210870 ubox
11 31 0.055504403 ubox
11 35 0.003399825 ubox
11 44 0.714239438 ubox
11 47 0.014276587 ubox
11 53 0.007529270 ubox
12 26 0.103402967 ubox
12 27 0.138440005 ubox
12 30 0.055364026 ubox
12 34 0.003420639 ubox
12 43 0.714779960 ubox
12 46 0.019103986 ubox
12 52 0.007511469 ubox
13 25 0.104026362 ubox
13 26 0.139665489 ubox
13 40 0.015097219 ubox
13 42 0.714124432 ubox
13 46 0.010245014 ubox
14 39 0.030242886 ubox
14 45 0.010113461 ubox
14 47 0.004162210 ubox
15 38 0.032614765 ubox
15 40 0.671331274 ubox
15 46 0.004993557 ubox
15 48 0.007139744 ubox
16 39 0.671836297 ubox
16 45 0.004762057 ubox
16 47 0.007353733 ubox
17 38 0.661407707 ubox
17 40 0.022922670 ubox
17 46 0.007374767 ubox
18 39 0.021618871 ubox
18 45 0.006579155 ubox
20 47 0.026112895 ubox
21 40 0.207803662 ubox
21 46 0.028121352 ubox
22 39 0.209086883 ubox
22 45 0.027590986 ubox
23 44 0.025982700 ubox
24 45 0.006553331 ubox
25 36 0.127811873 ubox
25 37 0.703936638 ubox
25 44 0.007203720 ubox
25 45 0.018266158 ubox
25 54 0.026432174 ubox
26 35 0.128407554 ubox
26 36 0.704871636 ubox
26 37 0.104303586 ubox
26 44 0.026963870 ubox
26 45 0.101948833 ubox
26 53 0.034657751 ubox
26 54 0.192859620 ubox
27 35 0.703689116 ubox
27 36 0.104381601 ubox
27 44 0.105323183 ubox
27 53 0.195066001 ubox
28 47 0.187047870 ubox
29 42 0.154161539 ubox
29 46 0.192744482 ubox
29 52 0.174933099 ubox
30 41 0.187007217 ubox
30 44 0.291942796 ubox
30 45 0.082049618 ubox
30 47 0.246611746 ubox
30 51 0.168483655 ubox
30 53 0.046466152 ubox
31 40 0.187298140 ubox
31 43 0.295309709 ubox
31 46 0.284793846 ubox
31 52 0.046935135 ubox
32 39 0.166009914 ubox
32 45 0.283070869 ubox
32 47 0.189478558 ubox
33 40 0.008305739 ubox
33 42 0.314926289 ubox
33 46 0.193408777 ubox
33 52 0.007419948 ubox
34 39 0.005999040 ubox
34 41 0.320753875 ubox
34 44 0.356881781 ubox
34 45 0.072773057 ubox
34 47 0.008322196 ubox
34 51 0.007210256 ubox
34 53 0.040115724 ubox
35 40 0.319329685 ubox
35 43 0.358233463 ubox
35 46 0.008431552 ubox
35 52 0.040147382 ubox
36 42 0.356954509 ubox
36 43 0.069984599 ubox
37 42 0.074120460 ubox
39 48 0.047067710 ubox
40 47 0.048704116 ubox
40 53 0.424818876 ubox
41 46 0.048764516 ubox
41 52 0.426467587 ubox
42 51 0.426445626 ubox
42 54 0.213436232 ubox
43 53 0.228688655 ubox
44 52 0.228063527 ubox
45 52 0.032907999 ubox
46 51 0.087116720 ubox
46 53 0.056553856 ubox
47 52 0.054468658 ubox
4 54 0.9500000 lbox
5 53 0.9500000 lbox
6 52 0.9500000 lbox
7 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
10 45 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
showpage
end
%%EOF
