%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TAS2R3)
} def

/sequence { (\
UCAGUGAGGAGAUUCUAUGUAUCAACAGAAAGAACAAAGAUCAGGGCUGCCUAAUUGCUGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004588399 ubox
1 9 0.005663028 ubox
1 10 0.013788123 ubox
1 12 0.007303701 ubox
1 29 0.006380150 ubox
1 33 0.003888428 ubox
1 61 0.894272413 ubox
2 6 0.004903154 ubox
2 8 0.007230961 ubox
2 9 0.014712331 ubox
2 11 0.007993066 ubox
2 19 0.018068271 ubox
2 28 0.006788801 ubox
2 32 0.004145918 ubox
2 49 0.050868832 ubox
2 57 0.068725871 ubox
2 60 0.992651523 ubox
3 18 0.018204133 ubox
3 48 0.052071386 ubox
3 52 0.007498546 ubox
3 56 0.069528196 ubox
3 59 0.992844792 ubox
4 13 0.003981383 ubox
4 26 0.007094523 ubox
4 47 0.052213900 ubox
4 50 0.003246997 ubox
4 51 0.007893961 ubox
4 55 0.069797604 ubox
4 58 0.993020166 ubox
4 62 0.055620616 ubox
5 12 0.005064543 ubox
5 24 0.006534695 ubox
5 25 0.005611307 ubox
5 27 0.008194536 ubox
5 43 0.009764851 ubox
5 46 0.051995897 ubox
5 49 0.003255935 ubox
5 53 0.010256780 ubox
5 54 0.070188725 ubox
5 57 0.984639813 ubox
5 61 0.056121613 ubox
6 14 0.008001872 ubox
6 15 0.050963953 ubox
6 18 0.004218129 ubox
6 23 0.009738687 ubox
6 26 0.011920775 ubox
6 35 0.003812980 ubox
6 42 0.041844466 ubox
6 52 0.015331311 ubox
6 56 0.905185403 ubox
7 13 0.012535926 ubox
7 14 0.050979820 ubox
7 16 0.042214018 ubox
7 22 0.009627471 ubox
7 41 0.041719026 ubox
7 48 0.024451829 ubox
7 52 0.374518443 ubox
7 55 0.798738470 ubox
7 56 0.061859818 ubox
7 59 0.056577528 ubox
8 13 0.048831982 ubox
8 14 0.005372317 ubox
8 15 0.045395267 ubox
8 16 0.059803337 ubox
8 23 0.004116044 ubox
8 42 0.056485729 ubox
8 47 0.029362260 ubox
8 48 0.029827583 ubox
8 51 0.455345861 ubox
8 52 0.035048577 ubox
8 55 0.050665701 ubox
8 56 0.022814210 ubox
8 58 0.056668620 ubox
8 59 0.003539021 ubox
9 13 0.006840326 ubox
9 14 0.035967039 ubox
9 15 0.062049544 ubox
9 22 0.003652350 ubox
9 23 0.018905947 ubox
9 41 0.054837158 ubox
9 42 0.155762759 ubox
9 47 0.030118571 ubox
9 50 0.454982502 ubox
9 51 0.033896082 ubox
9 55 0.019377532 ubox
9 56 0.032415977 ubox
9 58 0.004038229 ubox
10 14 0.054064482 ubox
10 16 0.013031257 ubox
10 22 0.018368006 ubox
10 41 0.155048159 ubox
10 48 0.426247822 ubox
10 52 0.253039200 ubox
10 55 0.031592126 ubox
10 56 0.047733358 ubox
11 15 0.013150390 ubox
11 23 0.034789708 ubox
11 42 0.790035856 ubox
11 47 0.424354350 ubox
11 51 0.197267438 ubox
11 55 0.015454846 ubox
11 56 0.016837648 ubox
12 18 0.004911390 ubox
12 20 0.015925257 ubox
12 22 0.034822024 ubox
12 41 0.784206480 ubox
12 55 0.017672254 ubox
13 17 0.004568660 ubox
13 19 0.016530397 ubox
13 21 0.034439506 ubox
13 30 0.047772293 ubox
13 31 0.006669386 ubox
13 32 0.004376569 ubox
13 33 0.006307825 ubox
13 34 0.097000937 ubox
13 37 0.003963526 ubox
13 38 0.034337753 ubox
13 39 0.009736922 ubox
13 40 0.568416999 ubox
13 44 0.076202597 ubox
13 45 0.080346376 ubox
13 46 0.161449687 ubox
13 54 0.017795371 ubox
14 29 0.055326143 ubox
14 30 0.006715133 ubox
14 31 0.005999594 ubox
14 32 0.006121187 ubox
14 33 0.116870260 ubox
14 37 0.031131495 ubox
14 38 0.011822364 ubox
14 39 0.176973748 ubox
14 40 0.754129327 ubox
14 43 0.026051826 ubox
14 44 0.035008444 ubox
14 45 0.152633813 ubox
14 46 0.091714680 ubox
14 53 0.010059268 ubox
15 28 0.056149031 ubox
15 32 0.119338153 ubox
15 39 0.936403332 ubox
15 44 0.151840246 ubox
15 45 0.103802917 ubox
15 46 0.122584409 ubox
16 27 0.044788117 ubox
16 31 0.112922355 ubox
16 38 0.923576627 ubox
16 43 0.131337871 ubox
16 44 0.092947626 ubox
16 45 0.111192328 ubox
17 41 0.068012759 ubox
18 24 0.017704994 ubox
18 27 0.134264234 ubox
18 36 0.951318248 ubox
18 40 0.056068289 ubox
18 43 0.185321028 ubox
19 23 0.018234639 ubox
19 26 0.141643150 ubox
19 35 0.960400656 ubox
19 41 0.012804157 ubox
19 42 0.199673974 ubox
19 47 0.003924256 ubox
19 50 0.005493527 ubox
20 25 0.134928798 ubox
20 34 0.947600661 ubox
20 40 0.012922620 ubox
20 46 0.003860936 ubox
20 49 0.005448161 ubox
21 41 0.200630886 ubox
21 48 0.005186276 ubox
22 29 0.138562798 ubox
22 33 0.919263049 ubox
22 40 0.205765825 ubox
22 46 0.003947070 ubox
23 28 0.142174830 ubox
23 32 0.927264928 ubox
23 39 0.205769264 ubox
23 45 0.004026721 ubox
26 49 0.017928876 ubox
26 60 0.003591177 ubox
27 48 0.018047885 ubox
27 59 0.003606780 ubox
28 42 0.021171880 ubox
28 47 0.018056393 ubox
28 58 0.003586606 ubox
29 41 0.020184050 ubox
31 48 0.005406786 ubox
32 42 0.045028348 ubox
32 47 0.005543116 ubox
33 41 0.043499790 ubox
35 49 0.011629333 ubox
35 57 0.005867496 ubox
35 60 0.030740335 ubox
36 48 0.010812846 ubox
36 56 0.005739770 ubox
36 59 0.030612000 ubox
37 55 0.004848746 ubox
37 56 0.008424981 ubox
38 48 0.023380340 ubox
38 52 0.003318502 ubox
38 55 0.008879844 ubox
38 56 0.007311811 ubox
38 59 0.003238852 ubox
39 47 0.024174148 ubox
39 51 0.003396600 ubox
39 55 0.006635098 ubox
39 56 0.074034333 ubox
39 58 0.003312000 ubox
40 55 0.085420140 ubox
41 54 0.097781997 ubox
41 61 0.011044077 ubox
42 49 0.049264373 ubox
42 60 0.012102539 ubox
43 48 0.045374418 ubox
43 52 0.784795194 ubox
43 56 0.003979050 ubox
43 59 0.011708249 ubox
44 51 0.837727706 ubox
44 52 0.183809874 ubox
44 58 0.011230585 ubox
45 50 0.838366180 ubox
45 51 0.193033792 ubox
45 52 0.020618275 ubox
45 59 0.016444654 ubox
46 50 0.190332173 ubox
46 51 0.021149884 ubox
46 58 0.017585409 ubox
47 57 0.017684299 ubox
49 58 0.010200871 ubox
50 57 0.010655434 ubox
1 61 0.9500000 lbox
2 60 0.9500000 lbox
3 59 0.9500000 lbox
4 58 0.9500000 lbox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
11 42 0.9500000 lbox
12 41 0.9500000 lbox
13 40 0.9500000 lbox
15 39 0.9500000 lbox
16 38 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
showpage
end
%%EOF
