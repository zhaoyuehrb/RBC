%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGACUUACCCAAGGUCACGCAGCGAGCCCGGUCCCCCUGCGUUCCCCGGGGAGCGCUGAGCCGGGACGCGGCGGUGGGGUGGGGAAGGGGAGUGGCGCGGCCCUGCGGGGUGAGGCUGCCGUUUGCUGAGUGUCCGGCAGGGGUCUGCUCGCUGCCAGCCCGGCCCCUCCUCAGAGCAGCUGCCGCAGCCCGAGG\
) } def
/len { sequence length } bind def

/coor [
[85.02568817 305.12338257]
[76.59014893 307.00534058]
[73.28549194 321.63677979]
[69.98083496 336.26821899]
[77.29679871 350.54605103]
[70.56432343 365.10809326]
[54.94798660 368.78363037]
[42.42729950 358.75308228]
[42.60706711 342.71102905]
[55.34938431 332.96356201]
[58.65404129 318.33212280]
[61.95870209 303.70068359]
[48.98090363 286.89181519]
[52.69193268 265.69473267]
[71.08693695 253.98992920]
[73.22165680 239.14260864]
[75.35637665 224.29528809]
[66.25257874 212.56257629]
[68.20598602 197.47486877]
[80.57405853 188.00552368]
[82.70877838 173.15820312]
[84.72564697 158.29441833]
[86.62453461 143.41508484]
[88.52342224 128.53576660]
[90.42230988 113.65644073]
[89.55033875 110.69831848]
[89.35028839 107.84892273]
[89.75943756 105.24201202]
[74.77642822 104.52828217]
[59.79341507 103.81455994]
[48.15451813 114.16703796]
[32.96977997 113.22977448]
[23.17200279 102.07006073]
[8.18899155 101.35633850]
[-6.79401827 100.64260864]
[-21.77702904 99.92887878]
[-36.76003647 99.21514893]
[-48.07560730 114.63787842]
[-66.25308990 120.09384155]
[-83.91017914 113.55577087]
[-93.98899078 97.82960510]
[-108.98899078 97.82960510]
[-123.98899078 97.82960510]
[-138.98899841 97.82960510]
[-153.98899841 97.82960510]
[-168.98899841 97.82960510]
[-183.98899841 97.82960510]
[-197.91279602 106.49330902]
[-212.24822998 98.52918243]
[-212.24822998 82.13003540]
[-197.91279602 74.16590118]
[-183.98899841 82.82960510]
[-168.98899841 82.82960510]
[-153.98899841 82.82960510]
[-138.98899841 82.82960510]
[-123.98899078 82.82960510]
[-108.98899078 82.82960510]
[-93.98899078 82.82960510]
[-89.24562073 72.71272278]
[-81.02858734 65.06539917]
[-70.50165558 61.02310181]
[-59.17543030 61.20699692]
[-48.69064331 65.62880707]
[-40.58045959 73.68357086]
[-36.04631042 84.23213959]
[-21.06329918 84.94586945]
[-6.08028936 85.65959930]
[8.90272045 86.37332916]
[23.88573074 87.08705139]
[34.69994354 76.90921783]
[49.90501404 77.41960144]
[60.50714493 88.83155060]
[75.49015045 89.54527283]
[90.47316742 90.25900269]
[104.44247437 84.79471588]
[114.96459198 74.10430145]
[119.13073730 58.84148026]
[133.57293701 55.19834900]
[144.09504700 44.50793839]
[154.61717224 33.81752396]
[165.13929749 23.12711334]
[175.66142273 12.43669987]
[179.82757568 -2.82612443]
[194.26976013 -6.46925497]
[204.79188538 -17.15966797]
[215.31401062 -27.85008049]
[213.65788269 -41.22334290]
[219.91804504 -52.93610382]
[231.60949707 -58.81455231]
[244.35964966 -56.91111755]
[255.05004883 -67.43324280]
[259.45782471 -82.62804413]
[273.95602417 -86.04158020]
[284.64642334 -96.56370544]
[295.33682251 -107.08582306]
[306.02725220 -117.60794830]
[316.71765137 -128.13006592]
[320.64425659 -136.38958740]
[327.66213989 -138.73265076]
[338.51815796 -149.08383179]
[349.37417603 -159.43502808]
[360.23019409 -169.78620911]
[370.92059326 -180.30833435]
[381.44271851 -190.99874878]
[391.96484375 -201.68916321]
[402.48696899 -212.37956238]
[413.00909424 -223.06997681]
[423.53121948 -233.76039124]
[427.69735718 -249.02322388]
[442.13955688 -252.66635132]
[452.66168213 -263.35675049]
[463.18380737 -274.04718018]
[459.67016602 -291.82617188]
[467.45648193 -308.01690674]
[483.25955200 -316.22729492]
[500.67355347 -313.34158325]
[510.85119629 -324.36047363]
[521.02880859 -335.37936401]
[517.86358643 -350.57015991]
[524.26251221 -364.70642090]
[537.76507568 -372.35241699]
[553.17919922 -370.56814575]
[564.57794189 -360.03967285]
[567.57812500 -344.81539917]
[561.02624512 -330.74938965]
[547.44158936 -323.25030518]
[532.04772949 -325.20172119]
[521.87005615 -314.18283081]
[511.69244385 -303.16397095]
[515.80694580 -291.72991943]
[514.65869141 -279.55993652]
[508.40466309 -268.97290039]
[498.18072510 -262.01232910]
[485.89544678 -260.05194092]
[473.87420654 -263.52505493]
[463.35208130 -252.83464050]
[452.82995605 -242.14422607]
[449.41641235 -227.64605713]
[434.22161865 -223.23826599]
[423.69949341 -212.54785156]
[413.17736816 -201.85745239]
[402.65524292 -191.16703796]
[392.13311768 -180.47662354]
[381.61099243 -169.78620911]
[380.75332642 -165.07810974]
[376.92224121 -160.86233521]
[370.58135986 -158.93019104]
[359.72534180 -148.57901001]
[348.86935425 -138.22782898]
[338.01333618 -127.87664032]
[327.23977661 -117.43965912]
[316.54937744 -106.91753387]
[305.85894775 -96.39541626]
[295.16854858 -85.87329102]
[284.47811890 -75.35116577]
[280.83499146 -60.90897369]
[265.57217407 -56.74282837]
[254.88175964 -46.22070694]
[255.47006226 -29.41800117]
[243.49174500 -17.14343834]
[226.00442505 -17.32795715]
[215.48229980 -6.63754416]
[204.96017456 4.05286837]
[201.54664612 18.55104256]
[186.35183716 22.95882225]
[175.82971191 33.64923477]
[165.30758667 44.33964920]
[154.78546143 55.03005981]
[144.26333618 65.72047424]
[140.84980774 80.21865082]
[125.65500641 84.62642670]
[115.13288116 95.31684113]
[129.15182495 89.98118591]
[143.74653625 93.44452667]
[153.87345886 104.51002502]
[156.03303528 119.35375214]
[149.47895813 132.84613037]
[136.47613525 140.32455444]
[121.51800537 139.20469666]
[109.77365875 129.87353516]
[105.30163574 115.55532837]
[103.40274811 130.43464661]
[101.50386047 145.31398010]
[99.60497284 160.19329834]
[101.62415314 169.11297607]
[97.55610657 175.29292297]
[95.42137909 190.14024353]
[104.62063599 202.71051025]
[102.24421692 217.73739624]
[90.20369720 226.43000793]
[88.06897736 241.27732849]
[85.93425751 256.12466431]
[93.30650330 261.19448853]
[98.60233307 268.35211182]
[101.26824951 276.80181885]
[101.04113007 285.61572266]
[97.97397614 293.83547974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[15 192]
[16 191]
[17 190]
[20 187]
[21 186]
[22 184]
[23 183]
[24 182]
[25 181]
[28 74]
[29 73]
[30 72]
[33 69]
[34 68]
[35 67]
[36 66]
[37 65]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[75 172]
[76 171]
[78 169]
[79 168]
[80 167]
[81 166]
[82 165]
[84 163]
[85 162]
[86 161]
[90 158]
[91 157]
[93 155]
[94 154]
[95 153]
[96 152]
[97 151]
[99 150]
[100 149]
[101 148]
[102 147]
[103 144]
[104 143]
[105 142]
[106 141]
[107 140]
[108 139]
[110 137]
[111 136]
[112 135]
[116 129]
[117 128]
[118 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
