%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SBSN)
} def

/sequence { (\
GGGAGAGAGGAUAAAUAGCAGCGUGGCUUCCCUGGCUCCUCUCUGCAUCCUUCCCGACCUUCCCAGCAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.005546552 ubox
1 43 0.016661440 ubox
1 49 0.010872441 ubox
1 50 0.125743162 ubox
1 51 0.094819147 ubox
1 52 0.006199682 ubox
1 53 0.006283352 ubox
1 54 0.042052918 ubox
1 55 0.755326510 ubox
1 59 0.033037734 ubox
1 60 0.022610032 ubox
1 63 0.135121029 ubox
1 64 0.606209849 ubox
2 39 0.006843218 ubox
2 42 0.016795954 ubox
2 44 0.007087671 ubox
2 48 0.009745544 ubox
2 49 0.125858925 ubox
2 50 0.109386759 ubox
2 51 0.006691425 ubox
2 52 0.003877589 ubox
2 53 0.042209460 ubox
2 54 0.755858823 ubox
2 55 0.076774360 ubox
2 58 0.032735638 ubox
2 59 0.026070254 ubox
2 60 0.003208465 ubox
2 62 0.136150856 ubox
2 63 0.606519784 ubox
2 64 0.024298435 ubox
3 38 0.006853237 ubox
3 41 0.016864346 ubox
3 43 0.008078090 ubox
3 48 0.122388905 ubox
3 49 0.109666075 ubox
3 50 0.008021307 ubox
3 51 0.004112986 ubox
3 52 0.041323338 ubox
3 53 0.755603284 ubox
3 54 0.077024547 ubox
3 58 0.026093240 ubox
3 59 0.003822075 ubox
3 61 0.136470412 ubox
3 62 0.606154072 ubox
3 63 0.024300272 ubox
4 37 0.006857763 ubox
4 40 0.016865332 ubox
4 42 0.008232435 ubox
4 44 0.454397765 ubox
4 48 0.086233375 ubox
4 51 0.041450442 ubox
4 52 0.622319984 ubox
4 60 0.190370081 ubox
4 61 0.526629353 ubox
5 36 0.006849195 ubox
5 39 0.016835196 ubox
5 41 0.008457916 ubox
5 43 0.695331466 ubox
5 49 0.010799769 ubox
5 50 0.032485983 ubox
5 51 0.187725607 ubox
5 52 0.018895980 ubox
5 53 0.192662989 ubox
5 59 0.230599059 ubox
5 60 0.340752614 ubox
5 61 0.088470412 ubox
5 62 0.015128747 ubox
6 33 0.005634414 ubox
6 40 0.008435401 ubox
6 42 0.700877965 ubox
6 44 0.010386645 ubox
6 48 0.009278964 ubox
6 51 0.021896946 ubox
6 52 0.172930414 ubox
6 60 0.159291614 ubox
6 61 0.015377987 ubox
7 32 0.005835323 ubox
7 38 0.017570932 ubox
7 39 0.006693213 ubox
7 41 0.701167731 ubox
7 43 0.010477116 ubox
7 49 0.023313975 ubox
7 50 0.015124799 ubox
7 51 0.108983134 ubox
7 52 0.394968867 ubox
7 53 0.110293407 ubox
7 59 0.183774940 ubox
7 60 0.009788658 ubox
7 61 0.008893753 ubox
8 33 0.006600212 ubox
8 37 0.018291845 ubox
8 40 0.701077319 ubox
8 42 0.010393852 ubox
8 48 0.022996494 ubox
8 51 0.600627445 ubox
8 52 0.079277118 ubox
8 60 0.016922012 ubox
9 31 0.007366045 ubox
9 32 0.006491616 ubox
9 36 0.018259150 ubox
9 37 0.003937017 ubox
9 39 0.701173256 ubox
9 41 0.010246844 ubox
9 44 0.006961143 ubox
9 49 0.008501444 ubox
9 50 0.643241586 ubox
9 51 0.016410048 ubox
9 53 0.005705032 ubox
9 54 0.253425216 ubox
9 55 0.166628005 ubox
9 59 0.017917899 ubox
10 30 0.007579730 ubox
10 31 0.006282301 ubox
10 36 0.004952530 ubox
10 38 0.701083334 ubox
10 40 0.006671977 ubox
10 43 0.007024227 ubox
10 48 0.006655367 ubox
10 49 0.643477000 ubox
10 50 0.013887431 ubox
10 52 0.005749747 ubox
10 53 0.258098328 ubox
10 54 0.159710292 ubox
10 58 0.017764820 ubox
11 24 0.005340265 ubox
11 29 0.007756760 ubox
11 37 0.634669652 ubox
11 42 0.006866996 ubox
11 48 0.642345189 ubox
11 51 0.008292131 ubox
11 52 0.260114493 ubox
12 23 0.005409695 ubox
12 34 0.136276764 ubox
12 45 0.019383226 ubox
12 47 0.631415674 ubox
13 29 0.003918868 ubox
13 33 0.142010047 ubox
13 44 0.027037275 ubox
13 52 0.021757499 ubox
14 29 0.006671223 ubox
14 51 0.023364974 ubox
14 52 0.013504090 ubox
15 24 0.017396011 ubox
15 28 0.003445430 ubox
15 48 0.183183740 ubox
15 51 0.013337558 ubox
16 23 0.017250963 ubox
16 25 0.012288306 ubox
16 34 0.395789642 ubox
16 45 0.171593777 ubox
16 47 0.198675818 ubox
17 24 0.014500091 ubox
17 28 0.299404735 ubox
17 29 0.016011404 ubox
17 33 0.399821086 ubox
17 37 0.094382053 ubox
17 40 0.101666384 ubox
17 42 0.090133991 ubox
17 44 0.175488180 ubox
17 51 0.005095140 ubox
18 24 0.020142840 ubox
18 27 0.304629736 ubox
18 28 0.003640422 ubox
18 32 0.399634769 ubox
18 36 0.153247020 ubox
18 39 0.105415105 ubox
18 41 0.093293804 ubox
18 43 0.175630372 ubox
18 46 0.674567859 ubox
19 23 0.021100621 ubox
19 25 0.035008075 ubox
19 26 0.303734340 ubox
19 34 0.071866800 ubox
19 35 0.143889031 ubox
19 45 0.674847526 ubox
20 24 0.032825069 ubox
20 28 0.438510137 ubox
20 29 0.022437039 ubox
20 33 0.088629478 ubox
20 37 0.277349029 ubox
20 40 0.070732653 ubox
20 42 0.167485751 ubox
20 44 0.673562017 ubox
21 27 0.446673205 ubox
21 28 0.010625620 ubox
21 32 0.088952443 ubox
21 36 0.418740781 ubox
21 39 0.072185072 ubox
21 41 0.169800046 ubox
21 43 0.670372080 ubox
21 46 0.006588615 ubox
22 26 0.443465182 ubox
22 34 0.084129098 ubox
22 35 0.418080270 ubox
22 45 0.006590739 ubox
23 33 0.086201279 ubox
23 36 0.015445401 ubox
23 44 0.006041538 ubox
24 34 0.038464163 ubox
24 35 0.014846368 ubox
25 31 0.129449617 ubox
25 32 0.418955432 ubox
25 33 0.048938805 ubox
25 37 0.615203154 ubox
25 38 0.241242302 ubox
25 39 0.171029237 ubox
25 40 0.013730603 ubox
25 41 0.027725035 ubox
25 42 0.005624340 ubox
26 30 0.128182918 ubox
26 31 0.414148915 ubox
26 32 0.049126948 ubox
26 36 0.697096433 ubox
26 37 0.027839495 ubox
26 38 0.133560549 ubox
26 39 0.008831943 ubox
26 40 0.005975717 ubox
26 41 0.003713935 ubox
27 35 0.704619071 ubox
28 34 0.696261755 ubox
28 35 0.016832953 ubox
29 34 0.021794490 ubox
29 35 0.062351580 ubox
30 34 0.064536099 ubox
35 46 0.013936900 ubox
36 45 0.013984373 ubox
42 57 0.003166021 ubox
43 56 0.004952993 ubox
44 56 0.023431785 ubox
44 68 0.019980780 ubox
45 55 0.035789720 ubox
45 67 0.033735587 ubox
46 66 0.033725364 ubox
48 57 0.192725298 ubox
49 56 0.210465946 ubox
51 57 0.026415303 ubox
52 56 0.026278066 ubox
56 62 0.125739962 ubox
57 61 0.109863671 ubox
59 66 0.093577898 ubox
60 65 0.086498978 ubox
60 66 0.016027265 ubox
60 69 0.030507727 ubox
61 65 0.015779704 ubox
61 68 0.031592504 ubox
1 55 0.9500000 lbox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
8 51 0.9500000 lbox
9 50 0.9500000 lbox
10 49 0.9500000 lbox
11 48 0.9500000 lbox
12 47 0.9500000 lbox
18 46 0.9500000 lbox
19 45 0.9500000 lbox
20 44 0.9500000 lbox
21 43 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
showpage
end
%%EOF
