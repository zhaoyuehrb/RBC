%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCGGUCCCCACCCCGCCACCGGCACACAGGCGCGCAGACUUGGGCUGGAGCCGCCCUGGGUGUCAGCGGCUCGGCUCCCGCGCACGCUCCGGCCGUCGCGCAGCCUCGGCACCUGCAGGUCCGUGCGUCCCGCGGCUGGCGCCCCUGACUCCGUCCCGGCCAGGGAGGGCC\
) } def
/len { sequence length } bind def

/coor [
[80.26474762 565.21563721]
[65.37250519 571.18225098]
[51.49417114 563.13421631]
[49.27602005 547.24523926]
[60.41962433 535.70397949]
[61.50199127 520.74310303]
[62.58435822 505.78219604]
[63.66672134 490.82131958]
[64.74909210 475.86041260]
[57.36956024 468.73156738]
[55.10277557 458.49911499]
[58.93856812 448.50973511]
[67.82932281 442.16839600]
[69.45111084 427.25634766]
[71.07289886 412.34426880]
[63.13016510 396.71215820]
[74.08628845 381.93188477]
[75.43858337 366.99295044]
[76.79087830 352.05404663]
[64.24129486 338.76089478]
[65.37797546 320.19607544]
[79.94588470 308.12677002]
[80.75796509 293.14874268]
[81.57005310 278.17074585]
[70.45942688 270.73391724]
[64.43390656 258.67758179]
[65.16715240 245.11082458]
[72.57418060 233.59185791]
[84.80564880 227.19485474]
[85.88801575 212.23396301]
[86.97038269 197.27305603]
[88.05274963 182.31216431]
[81.25399017 169.05976868]
[89.96691132 155.85386658]
[91.04927826 140.89297485]
[92.13164520 125.93207550]
[93.21400452 110.97117615]
[89.04717255 125.38080597]
[75.67240906 132.17166138]
[61.58012009 127.03282928]
[55.71621704 113.22650909]
[61.80315399 99.51704407]
[75.97827911 94.60744476]
[65.08834839 84.29195404]
[49.74854660 80.41882324]
[45.82954025 66.04904175]
[34.93960953 55.73355103]
[19.59980774 51.86042404]
[15.68080330 37.49064255]
[4.79087114 27.17514992]
[-6.09906149 16.85965729]
[-16.98899460 6.54416561]
[-27.87892532 -3.77132654]
[-38.76885986 -14.08681870]
[-49.84325409 -24.20401955]
[-61.09849930 -34.11963654]
[-72.35374451 -44.03524780]
[-83.69805145 -53.84885406]
[-95.13047791 -63.55964661]
[-106.56291199 -73.27043915]
[-122.60538483 -73.40677643]
[-132.38729858 -86.12265778]
[-128.40481567 -101.66355133]
[-113.71294403 -108.10781097]
[-99.58203888 -100.51195526]
[-96.85211945 -84.70287323]
[-85.41968536 -74.99208069]
[-73.98725891 -65.28128052]
[-66.82884979 -63.34082031]
[-62.43813324 -55.29049683]
[-51.18288803 -45.37488174]
[-39.92763901 -35.45926666]
[-35.15700150 -34.86620331]
[-30.71853447 -31.24758911]
[-28.45336723 -24.97675133]
[-17.56343460 -14.66125870]
[-6.67350197 -4.34576702]
[4.21643066 5.96972466]
[15.10636330 16.28521729]
[25.99629593 26.60070801]
[40.55717468 29.73600197]
[45.25510025 44.84361649]
[56.14503098 55.15911102]
[70.70590973 58.29440308]
[75.40383911 73.40201569]
[86.29376984 83.71751404]
[80.61594391 69.83362579]
[87.03688049 56.27738571]
[101.37619019 51.87464523]
[114.29821014 59.49182892]
[117.38999176 74.16973114]
[108.63899994 86.35201263]
[121.62937927 78.85201263]
[134.61976624 71.35201263]
[147.61013794 63.85201645]
[160.60052490 56.35201645]
[173.59091187 48.85201645]
[186.58128357 41.35201645]
[195.82101440 23.46133041]
[215.12240601 24.21470070]
[227.83355713 16.25060463]
[240.54469299 8.28651047]
[253.25584412 0.32241550]
[265.96697998 -7.64167929]
[267.89163208 -11.62160110]
[270.71087646 -14.47610474]
[273.95391846 -16.06128883]
[277.15219116 -16.40344620]
[279.89532471 -15.68321514]
[293.14801025 -22.70934296]
[306.40069580 -29.73546791]
[312.54327393 -36.54391479]
[319.95666504 -36.76636124]
[333.33404541 -43.55207825]
[346.71142578 -50.33779144]
[355.20971680 -64.36315918]
[371.59722900 -63.74563217]
[379.01589966 -49.12046814]
[369.83401489 -35.53278351]
[353.49713135 -36.96042252]
[340.11978149 -30.17470551]
[326.74240112 -23.38899040]
[313.42681885 -16.48278809]
[300.17413330 -9.45666122]
[286.92147827 -2.43053484]
[273.93109131 5.06946516]
[261.21994019 13.03355980]
[248.50878906 20.99765396]
[235.79765320 28.96175003]
[223.08650208 36.92584610]
[221.69342041 47.09133911]
[214.77597046 54.96471405]
[204.44982910 57.77040863]
[194.08128357 54.34239578]
[181.09091187 61.84239578]
[168.10052490 69.34239960]
[155.11013794 76.84239960]
[142.11976624 84.34239960]
[129.12937927 91.84239960]
[116.13899994 99.34239960]
[108.17490387 112.05354309]
[107.09253693 127.01444244]
[106.01017761 141.97534180]
[104.92781067 156.93623352]
[111.64914703 171.25874329]
[103.01364899 183.39453125]
[101.93128204 198.35542297]
[100.84891510 213.31632996]
[99.76654816 228.27722168]
[112.83637238 238.98785400]
[116.91882324 255.21405029]
[110.60036469 270.52764893]
[96.54804993 278.98284912]
[95.73596954 293.96084595]
[94.92388153 308.93884277]
[104.46398926 316.10156250]
[109.29754639 326.87673950]
[108.32334900 338.52563477]
[101.90048218 348.14846802]
[91.72979736 353.40634155]
[90.37750244 368.34524536]
[89.02520752 383.28417969]
[96.68138123 393.69232178]
[95.22615814 406.12695312]
[85.98496246 413.96606445]
[84.36318207 428.87811279]
[82.74139404 443.79019165]
[91.71926117 461.81372070]
[79.70999146 476.94277954]
[78.62762451 491.90368652]
[77.54525757 506.86456299]
[76.46289062 521.82550049]
[75.38052368 536.78637695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[13 167]
[14 166]
[15 165]
[17 162]
[18 161]
[19 160]
[22 155]
[23 154]
[24 153]
[29 149]
[30 148]
[31 147]
[32 146]
[34 144]
[35 143]
[36 142]
[37 141]
[43 86]
[44 85]
[46 83]
[47 82]
[49 80]
[50 79]
[51 78]
[52 77]
[53 76]
[54 75]
[55 72]
[56 71]
[57 70]
[58 68]
[59 67]
[60 66]
[92 140]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
[98 134]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[109 125]
[110 124]
[111 123]
[113 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
