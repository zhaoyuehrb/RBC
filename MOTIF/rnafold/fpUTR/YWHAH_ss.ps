%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGUCUCCUCCCUCGGCGUUGUCCGCGGCGCGAGCCACAGCGCGCGGGGCGAGCCAGCGAGAGGGCGCGAGCGGCGGCGCUGCCUGCAGCCUGCAGCCUGCAGCCUCCGGCCGGCCGGCGAGCCAGUGCGCGUGCGCGGCGGCGGCCUCCGCAGCGACCGGGGAGCGGACUGACCGGCGGGAGGGCUAGCGAGCCAGCGGUGUGAGGCGCGAGGCGAGGCCGAGCCGCGAGCGAC\
) } def
/len { sequence length } bind def

/coor [
[98.38237762 189.53874207]
[97.02117157 174.60063171]
[95.65995789 159.66252136]
[94.29874420 144.72441101]
[92.93753052 129.78630066]
[79.63486481 122.85527039]
[66.61215210 130.29899597]
[53.58943939 137.74270630]
[40.56672668 145.18643188]
[27.54401207 152.63014221]
[14.52129841 160.07385254]
[1.49858475 167.51757812]
[-6.64284325 181.08325195]
[-21.53203583 180.68176270]
[-34.55474854 188.12547302]
[-47.57746506 195.56919861]
[-55.71889114 209.13487244]
[-70.60808563 208.73338318]
[-83.63079834 216.17709351]
[-89.51282501 223.13775635]
[-96.87123108 223.63166809]
[-109.98947906 230.90570068]
[-123.10772705 238.17973328]
[-129.07962036 245.06344604]
[-136.44381714 245.46179199]
[-149.65538025 252.56492615]
[-162.86695862 259.66806030]
[-176.07852173 266.77117920]
[-189.29010010 273.87432861]
[-202.50166321 280.97744751]
[-208.56240845 287.78305054]
[-215.93116760 288.08575439]
[-229.23382568 295.01678467]
[-242.49122620 302.03402710]
[-255.70278931 309.13714600]
[-268.91436768 316.24029541]
[-282.12591553 323.34341431]
[-284.08102417 338.73681641]
[-294.73526001 350.01809692]
[-309.99185181 352.84933472]
[-323.98431396 346.14190674]
[-331.33230591 332.47491455]
[-329.21035767 317.10360718]
[-318.43435669 305.93856812]
[-303.14794922 303.27301025]
[-289.22906494 310.13183594]
[-276.01748657 303.02871704]
[-262.80590820 295.92556763]
[-249.59434509 288.82244873]
[-245.20059204 282.89920044]
[-236.16485596 281.71414185]
[-222.86218262 274.78311157]
[-209.60479736 267.76586914]
[-196.39321899 260.66275024]
[-183.18165588 253.55961609]
[-169.97009277 246.45648193]
[-156.75851440 239.35336304]
[-143.54695129 232.25022888]
[-130.38175964 225.06149292]
[-117.26351929 217.78746033]
[-104.14527130 210.51341248]
[-91.07451630 203.15438843]
[-78.05180359 195.71066284]
[-70.84184265 182.67741394]
[-55.02117920 182.54647827]
[-41.99846649 175.10276794]
[-28.97575378 167.65904236]
[-21.76579666 154.62579346]
[-5.94513226 154.49485779]
[7.07758141 147.05114746]
[20.10029602 139.60742188]
[33.12300873 132.16371155]
[46.14572144 124.71999359]
[59.16843796 117.27627563]
[72.19114685 109.83255768]
[75.88529205 88.18441010]
[92.38959503 77.01550293]
[109.87808228 80.82531738]
[120.95549774 70.71141815]
[132.03291321 60.59752274]
[143.11032104 50.48362350]
[143.98631287 34.93144226]
[155.36447144 24.83231354]
[170.18569946 25.76327896]
[181.26310730 15.64938164]
[192.34051514 5.53548527]
[203.41793823 -4.57841158]
[214.22904968 -14.97647667]
[224.76658630 -25.65170097]
[235.30412292 -36.32692337]
[245.84164429 -47.00214767]
[249.63227844 -55.28949356]
[256.58593750 -57.74644089]
[267.26116943 -68.28397369]
[267.53097534 -83.85847473]
[278.50726318 -94.39295197]
[293.35351562 -94.03977203]
[304.02871704 -104.57730103]
[314.70394897 -115.11483002]
[325.37918091 -125.65236664]
[329.85809326 -143.52342224]
[347.01193237 -147.26828003]
[357.54946899 -157.94349670]
[361.73760986 -173.20030212]
[376.18502808 -176.82260132]
[386.72256470 -187.49781799]
[397.26010132 -198.17304993]
[407.72811890 -208.91644287]
[418.12619019 -219.72755432]
[428.52426147 -230.53868103]
[438.92233276 -241.34979248]
[449.25000000 -252.22817993]
[459.50683594 -263.17337036]
[469.76367188 -274.11856079]
[473.55435181 -289.47894287]
[487.90286255 -293.47506714]
[498.15972900 -304.42025757]
[508.41656494 -315.36544800]
[518.67340088 -326.31063843]
[528.93023682 -337.25582886]
[532.72094727 -352.61621094]
[547.06945801 -356.61233521]
[557.32629395 -367.55752563]
[567.58312988 -378.50271606]
[577.69702148 -389.58013916]
[587.66625977 -400.78790283]
[586.92529297 -416.34710693]
[597.19519043 -427.57138062]
[612.03308105 -428.18188477]
[622.00231934 -439.38967896]
[616.63616943 -455.03967285]
[619.88201904 -471.16671753]
[630.75976562 -483.38180542]
[646.22558594 -488.40948486]
[662.02313232 -484.96582031]
[671.84606934 -496.30206299]
[681.66894531 -507.63830566]
[684.91406250 -516.15405273]
[691.69372559 -519.05688477]
[701.66296387 -530.26464844]
[711.63220215 -541.47241211]
[721.60144043 -552.68017578]
[724.91174316 -570.80413818]
[741.78656006 -575.65374756]
[751.60943604 -586.98999023]
[761.43237305 -598.32623291]
[764.00292969 -614.52264404]
[779.40954590 -620.14129639]
[791.80316162 -609.40209961]
[788.43438721 -593.35272217]
[772.76861572 -588.50335693]
[762.94567871 -577.16711426]
[753.12280273 -565.83087158]
[753.67578125 -553.76000977]
[745.60302734 -544.23736572]
[732.80920410 -542.71093750]
[722.83996582 -531.50317383]
[712.87072754 -520.29541016]
[702.90148926 -509.08764648]
[693.00518799 -497.81539917]
[683.18231201 -486.47915649]
[673.35937500 -475.14291382]
[678.66479492 -462.57046509]
[678.03704834 -448.87271118]
[671.54168701 -436.72158813]
[660.39422607 -428.51181030]
[646.73321533 -425.88906860]
[633.21008301 -429.42044067]
[623.24084473 -418.21264648]
[624.36413574 -403.40475464]
[614.41357422 -391.89645386]
[598.87402344 -390.81866455]
[588.90478516 -379.61090088]
[588.28173828 -374.89489746]
[584.70275879 -370.51406860]
[578.52832031 -368.24588013]
[568.27148438 -357.30068970]
[558.01464844 -346.35549927]
[554.95758057 -331.77798462]
[539.87542725 -326.99896240]
[529.61859131 -316.05380249]
[519.36175537 -305.10861206]
[509.10491943 -294.16342163]
[498.84805298 -283.21823120]
[495.79104614 -268.64071655]
[480.70886230 -263.86169434]
[470.45202637 -252.91651917]
[460.19519043 -241.97132874]
[457.91958618 -234.95622253]
[449.73342896 -230.95172119]
[439.33535767 -220.14060974]
[428.93731689 -209.32949829]
[418.53924561 -198.51837158]
[416.17276001 -191.53340149]
[407.93533325 -187.63551331]
[397.39779663 -176.96028137]
[386.86026001 -166.28506470]
[383.42581177 -151.79182434]
[368.22467041 -147.40597534]
[357.68713379 -136.73074341]
[357.45599365 -124.64946747]
[348.78259277 -115.67046356]
[335.91671753 -114.97714233]
[325.24148560 -104.43961334]
[314.56625366 -93.90207672]
[303.89105225 -83.36454773]
[304.05148315 -68.51496887]
[293.37539673 -57.67634201]
[277.79870605 -57.60874939]
[267.12347412 -47.07121658]
[256.51687622 -36.46461487]
[245.97933960 -25.78939247]
[235.44180298 -15.11416817]
[224.90428162 -4.43894386]
[224.77688599 -1.65834272]
[223.55195618 1.24008429]
[221.17889404 3.84224010]
[217.75639343 5.72324610]
[213.53182983 6.49900198]
[202.45442200 16.61289978]
[191.37699890 26.72679520]
[180.29959106 36.84069061]
[179.88172913 51.68525314]
[168.79173279 62.09998322]
[153.22422791 61.56103897]
[142.14680481 71.67493439]
[131.06939697 81.78883362]
[119.99198151 91.90272522]
[122.90312195 111.28575134]
[107.87564087 128.42509460]
[109.23685455 143.36320496]
[110.59806824 158.30130005]
[111.95927429 173.23941040]
[113.32048798 188.17752075]
[126.71839142 196.00541687]
[132.92556763 210.22689819]
[129.55522156 225.37353516]
[117.90332794 235.62110901]
[102.45027161 237.02925110]
[89.13807678 229.05648804]
[83.08554840 214.76849365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 234]
[2 233]
[3 232]
[4 231]
[5 230]
[6 75]
[7 74]
[8 73]
[9 72]
[10 71]
[11 70]
[12 69]
[14 67]
[15 66]
[16 65]
[18 63]
[19 62]
[21 61]
[22 60]
[23 59]
[25 58]
[26 57]
[27 56]
[28 55]
[29 54]
[30 53]
[32 52]
[33 51]
[34 49]
[35 48]
[36 47]
[37 46]
[78 228]
[79 227]
[80 226]
[81 225]
[84 222]
[85 221]
[86 220]
[87 219]
[88 214]
[89 213]
[90 212]
[91 211]
[93 210]
[94 209]
[97 206]
[98 205]
[99 204]
[100 203]
[102 200]
[103 199]
[105 197]
[106 196]
[107 195]
[108 193]
[109 192]
[110 191]
[111 190]
[112 188]
[113 187]
[114 186]
[116 184]
[117 183]
[118 182]
[119 181]
[120 180]
[122 178]
[123 177]
[124 176]
[125 173]
[126 172]
[129 169]
[130 168]
[135 162]
[136 161]
[137 160]
[139 159]
[140 158]
[141 157]
[142 156]
[144 153]
[145 152]
[146 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
