%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUGACGCCGAGACGCGCGCGGGUCAGCGGCGCGGGGACGCGGGGCGCUGGGCGCGGGGCUGGGGGCGCAGGCCCCGAGGCCGCAGGAGCGCGCGGAGCGGCGAUGAGCAGGCGGCCGGUGGCCCGCGGGGCGCGGAGCCCGUGACAGCCUCGGCCAGGCGGGCGCUGCG\
) } def
/len { sequence length } bind def

/coor [
[103.32243347 134.90515137]
[96.04428864 134.83906555]
[88.93659210 133.27174377]
[82.30562592 130.27072144]
[72.14112854 141.30172729]
[61.97663116 152.33273315]
[58.44524002 160.79658508]
[51.52600479 163.46961975]
[41.16287994 174.31423950]
[30.79975319 185.15884399]
[20.43662643 196.00346375]
[10.07349968 206.84806824]
[6.14733934 224.82189941]
[-10.85091019 229.12220764]
[-21.01540565 240.15321350]
[-31.17990303 251.18421936]
[-27.99657249 266.37124634]
[-34.37862015 280.51513672]
[-47.87202072 288.17721558]
[-63.28828430 286.41131592]
[-74.69954681 275.89642334]
[-77.71794128 260.67575073]
[-71.18283081 246.60195923]
[-57.60710526 239.08668518]
[-42.21090317 241.01971436]
[-32.04640961 229.98872375]
[-21.88191223 218.95771790]
[-22.05660820 206.84004211]
[-13.64748955 197.56413269]
[-0.77111226 196.48493958]
[9.59201431 185.64033508]
[19.95514107 174.79571533]
[30.31826782 163.95111084]
[40.68139648 153.10649109]
[50.94562912 142.16824341]
[61.11012650 131.13723755]
[71.27462006 120.10623169]
[65.22522736 104.48589325]
[67.11254883 87.84172821]
[76.50583649 73.97247314]
[91.26124573 66.04352570]
[90.71657562 51.05342102]
[90.17191315 36.06331253]
[89.62725067 21.07320213]
[89.08258057 6.08309507]
[88.53791809 -8.90701294]
[80.30461884 -22.41713524]
[87.57467651 -35.41696167]
[87.03001404 -50.40707016]
[86.48535156 -65.39717865]
[85.94068146 -80.38729095]
[85.39601898 -95.37739563]
[84.85135651 -110.36750031]
[76.61805725 -123.87762451]
[83.88811493 -136.87745667]
[83.34345245 -151.86756897]
[82.79878235 -166.85766602]
[64.65428925 -181.10993958]
[67.45691681 -207.47549438]
[59.68341064 -220.30407715]
[45.91444778 -228.09678650]
[45.93598175 -242.99137878]
[38.16247177 -255.81996155]
[24.39351273 -263.61267090]
[24.41504478 -278.50726318]
[16.64153290 -291.33584595]
[8.86802197 -304.16442871]
[1.09451044 -316.99301147]
[-6.67900133 -329.82159424]
[-21.30432510 -337.23992920]
[-21.92220497 -353.62744141]
[-7.89701700 -362.12603760]
[6.34332609 -353.99310303]
[6.14958096 -337.59509277]
[13.92309284 -324.76651001]
[21.69660378 -311.93792725]
[29.47011566 -299.10934448]
[37.24362564 -286.28076172]
[50.45657349 -279.40563965]
[50.99105453 -263.59347534]
[58.76456451 -250.76489258]
[71.97750854 -243.88977051]
[72.51199341 -228.07759094]
[80.28549957 -215.24900818]
[95.25521851 -216.20173645]
[101.33966827 -229.91230774]
[91.47299194 -243.15921021]
[89.63316345 -259.47970581]
[96.22728729 -274.41921997]
[109.37341309 -283.94799805]
[125.43647766 -285.54785156]
[131.27096558 -299.36663818]
[131.73155212 -308.52609253]
[137.33891296 -313.38183594]
[143.42337036 -327.09240723]
[149.50782776 -340.80294800]
[150.40608215 -357.73309326]
[166.92323303 -361.55667114]
[175.16979980 -346.74346924]
[163.21838379 -334.71850586]
[157.13392639 -321.00793457]
[151.04946899 -307.29739380]
[145.08975220 -293.53213501]
[139.25526428 -279.71337891]
[148.20507812 -269.37225342]
[151.83627319 -256.11825562]
[149.38336182 -242.52919006]
[141.26995850 -231.27372742]
[129.03700256 -224.58720398]
[115.05023193 -223.82785034]
[108.96577454 -210.11729431]
[116.17123413 -192.56474304]
[111.01113129 -175.98234558]
[97.78889465 -167.40232849]
[98.33355713 -152.41223145]
[98.87822723 -137.42211914]
[107.07256317 -124.98419189]
[99.84146118 -110.91217041]
[100.38612366 -95.92205811]
[100.93079376 -80.93195343]
[101.47545624 -65.94184113]
[102.02012634 -50.95173645]
[102.56478882 -35.96162796]
[110.75912476 -23.52369881]
[103.52802277 -9.45167828]
[104.07269287 5.53842974]
[104.61735535 20.52853775]
[105.16201782 35.51864624]
[105.70668793 50.50875473]
[106.25135040 65.49886322]
[122.16563416 72.83213806]
[132.54411316 86.95052338]
[134.79478455 104.32797241]
[128.35554504 120.62452698]
[138.31805420 131.83828735]
[148.28056335 143.05203247]
[158.24308777 154.26579285]
[168.20559692 165.47955322]
[183.15550232 170.65747070]
[185.82426453 185.31103516]
[195.78677368 196.52479553]
[205.74929810 207.73854065]
[215.71180725 218.95230103]
[225.67431641 230.16606140]
[235.63684082 241.37980652]
[249.23641968 239.01345825]
[262.12399292 243.64793396]
[270.96102905 253.96873474]
[273.51473999 267.20343018]
[269.22167969 279.86593628]
[278.97891235 291.25875854]
[294.61639404 296.19857788]
[297.89242554 312.26715088]
[285.43692017 322.93453979]
[270.06304932 317.22698975]
[267.58612061 301.01599121]
[257.82885742 289.62316895]
[241.53295898 291.46270752]
[227.20166016 283.15451050]
[220.56861877 267.79415894]
[224.42308044 251.34233093]
[214.46057129 240.12857056]
[204.49804688 228.91481018]
[194.53553772 217.70106506]
[184.57302856 206.48730469]
[174.61050415 195.27354431]
[160.37318420 190.89770508]
[156.99183655 175.44206238]
[147.02932739 164.22830200]
[137.06681824 153.01455688]
[127.10430145 141.80079651]
[117.14178467 130.58703613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 37]
[5 36]
[6 35]
[8 34]
[9 33]
[10 32]
[11 31]
[12 30]
[14 27]
[15 26]
[16 25]
[41 130]
[42 129]
[43 128]
[44 127]
[45 126]
[46 125]
[48 123]
[49 122]
[50 121]
[51 120]
[52 119]
[53 118]
[55 116]
[56 115]
[57 114]
[59 84]
[60 83]
[62 81]
[63 80]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[85 111]
[86 110]
[91 104]
[92 103]
[94 102]
[95 101]
[96 100]
[134 172]
[135 171]
[136 170]
[137 169]
[138 168]
[140 166]
[141 165]
[142 164]
[143 163]
[144 162]
[145 161]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
