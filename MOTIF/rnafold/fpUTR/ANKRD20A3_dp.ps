%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANKRD20A3)
} def

/sequence { (\
GGGGGGUGGUGAAAAGGUGACAGGGAGCUGCCCCCGCUCAAGAGCCGGUGGUUGGGGGUCUGAGAAGAAGUCACCAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.005547669 ubox
1 35 0.111861270 ubox
1 38 0.003779784 ubox
1 39 0.012434286 ubox
1 46 0.018247235 ubox
1 72 0.056077829 ubox
1 75 0.068135781 ubox
2 32 0.005584603 ubox
2 34 0.101806910 ubox
2 35 0.940387127 ubox
2 37 0.004662850 ubox
2 38 0.007454789 ubox
2 74 0.038376806 ubox
2 75 0.004132927 ubox
3 31 0.005585775 ubox
3 33 0.090512199 ubox
3 34 0.943375929 ubox
3 35 0.008485871 ubox
3 37 0.007306045 ubox
3 74 0.003668706 ubox
4 32 0.077584615 ubox
4 33 0.944577870 ubox
4 34 0.007435861 ubox
4 35 0.009732704 ubox
5 29 0.005934681 ubox
5 31 0.061991730 ubox
5 32 0.945736687 ubox
5 33 0.006189587 ubox
5 34 0.009744549 ubox
5 35 0.003740422 ubox
5 75 0.023088387 ubox
6 21 0.003683105 ubox
6 28 0.007821139 ubox
6 31 0.946889177 ubox
6 32 0.004547905 ubox
6 33 0.009746924 ubox
6 34 0.003732564 ubox
6 74 0.023137096 ubox
6 78 0.024807427 ubox
7 20 0.004094544 ubox
7 27 0.007778034 ubox
7 30 0.945966447 ubox
7 73 0.023143379 ubox
7 76 0.169921267 ubox
7 77 0.018742662 ubox
8 21 0.003502438 ubox
8 29 0.943918098 ubox
8 32 0.010416342 ubox
8 72 0.023107561 ubox
8 75 0.189351881 ubox
9 18 0.003756768 ubox
9 21 0.009095960 ubox
9 28 0.947458527 ubox
9 31 0.010461931 ubox
9 71 0.017666982 ubox
9 74 0.189390418 ubox
9 78 0.003546566 ubox
10 17 0.007495213 ubox
10 19 0.005298874 ubox
10 20 0.010536112 ubox
10 22 0.034537463 ubox
10 27 0.937326511 ubox
10 30 0.010189101 ubox
10 70 0.007108104 ubox
10 73 0.189346795 ubox
10 77 0.003665519 ubox
11 18 0.021140972 ubox
11 21 0.058006097 ubox
11 72 0.189352550 ubox
12 71 0.185008553 ubox
15 29 0.011649297 ubox
15 61 0.007157390 ubox
16 28 0.011546226 ubox
16 29 0.052203868 ubox
16 32 0.003442287 ubox
16 33 0.005395948 ubox
16 34 0.004063906 ubox
16 35 0.010515414 ubox
16 38 0.005829796 ubox
16 60 0.007182327 ubox
16 75 0.250602622 ubox
17 28 0.054957854 ubox
17 31 0.003547942 ubox
17 32 0.005409316 ubox
17 33 0.004063292 ubox
17 34 0.010504934 ubox
17 37 0.007259929 ubox
17 59 0.004950811 ubox
17 74 0.250870693 ubox
18 27 0.055276168 ubox
18 36 0.007538952 ubox
18 73 0.250828057 ubox
19 35 0.007760340 ubox
19 60 0.013291715 ubox
19 72 0.250879811 ubox
20 59 0.013226387 ubox
20 71 0.250431820 ubox
21 30 0.099708531 ubox
21 58 0.012843439 ubox
21 62 0.152989912 ubox
21 70 0.247774139 ubox
22 29 0.133708867 ubox
22 61 0.153721479 ubox
23 28 0.136560382 ubox
23 29 0.014137711 ubox
23 32 0.008729336 ubox
23 33 0.045884391 ubox
23 34 0.065906199 ubox
23 35 0.056141954 ubox
23 60 0.153263841 ubox
23 61 0.025194696 ubox
24 28 0.015285845 ubox
24 31 0.008990996 ubox
24 32 0.046046108 ubox
24 33 0.066173165 ubox
24 34 0.056053510 ubox
24 35 0.006792052 ubox
24 59 0.086065879 ubox
24 60 0.026787502 ubox
24 61 0.053269143 ubox
25 31 0.046008478 ubox
25 32 0.066142660 ubox
25 33 0.055829301 ubox
25 34 0.006796664 ubox
25 39 0.006646547 ubox
25 59 0.012193875 ubox
25 60 0.054256267 ubox
26 38 0.006669047 ubox
26 53 0.013617506 ubox
26 59 0.047904309 ubox
26 61 0.047673817 ubox
27 37 0.006680961 ubox
27 52 0.014355439 ubox
27 59 0.038203407 ubox
27 60 0.047757504 ubox
28 36 0.006669867 ubox
28 51 0.014410558 ubox
28 55 0.058389058 ubox
28 56 0.018274732 ubox
28 57 0.038407674 ubox
28 58 0.046181584 ubox
28 64 0.149527264 ubox
28 67 0.016757767 ubox
28 70 0.003400800 ubox
29 50 0.014354289 ubox
29 54 0.051750093 ubox
29 55 0.017485728 ubox
29 56 0.036240838 ubox
29 57 0.044971299 ubox
29 62 0.017540802 ubox
29 63 0.147821195 ubox
29 66 0.016659107 ubox
29 69 0.003512185 ubox
30 49 0.014359306 ubox
30 52 0.061793846 ubox
30 53 0.037446626 ubox
30 59 0.245271346 ubox
30 61 0.005616969 ubox
31 48 0.014360091 ubox
31 51 0.070499598 ubox
31 55 0.041600722 ubox
31 56 0.028245876 ubox
31 57 0.013855977 ubox
31 58 0.283899792 ubox
32 47 0.014328943 ubox
32 50 0.070451876 ubox
32 51 0.026468060 ubox
32 54 0.041328894 ubox
32 55 0.028461888 ubox
32 56 0.013965659 ubox
32 57 0.284188195 ubox
32 58 0.003354865 ubox
33 48 0.059713662 ubox
33 50 0.026870182 ubox
33 54 0.028345697 ubox
33 55 0.013985340 ubox
33 56 0.284197764 ubox
33 57 0.003430308 ubox
34 47 0.059669315 ubox
34 48 0.046864056 ubox
34 51 0.051500176 ubox
34 54 0.012222559 ubox
34 55 0.284088448 ubox
34 56 0.003412206 ubox
34 58 0.010460651 ubox
35 47 0.047465065 ubox
35 50 0.056494020 ubox
35 54 0.283922216 ubox
35 55 0.003372737 ubox
35 57 0.010684598 ubox
36 45 0.296197268 ubox
36 46 0.038547052 ubox
36 49 0.085407817 ubox
36 52 0.086389618 ubox
36 53 0.259473421 ubox
36 59 0.041328504 ubox
36 71 0.021849159 ubox
37 44 0.299146719 ubox
37 48 0.087480984 ubox
37 51 0.121924072 ubox
37 55 0.006205483 ubox
37 56 0.037632157 ubox
37 57 0.011138893 ubox
37 58 0.045294663 ubox
37 64 0.888955677 ubox
37 67 0.041251393 ubox
37 70 0.021810417 ubox
38 43 0.276831207 ubox
38 47 0.083758021 ubox
38 48 0.016453375 ubox
38 50 0.055791706 ubox
38 51 0.233888439 ubox
38 54 0.005039505 ubox
38 55 0.037806379 ubox
38 56 0.011340233 ubox
38 57 0.045147160 ubox
38 58 0.003858557 ubox
38 63 0.893237382 ubox
38 65 0.057431757 ubox
38 66 0.031892479 ubox
38 68 0.007004669 ubox
38 69 0.015581051 ubox
39 47 0.034661255 ubox
39 50 0.265043000 ubox
39 54 0.038403148 ubox
39 55 0.011407388 ubox
39 56 0.045014749 ubox
39 57 0.006098650 ubox
39 62 0.892819428 ubox
39 64 0.065036632 ubox
39 67 0.009015005 ubox
40 49 0.259727432 ubox
40 53 0.035900858 ubox
40 61 0.631113055 ubox
41 52 0.020344319 ubox
41 53 0.003757987 ubox
41 61 0.634173989 ubox
42 53 0.022213328 ubox
42 60 0.894969350 ubox
43 52 0.019505188 ubox
43 53 0.071112201 ubox
43 59 0.891781441 ubox
43 61 0.004760837 ubox
44 52 0.104964495 ubox
44 59 0.058894858 ubox
44 60 0.006165841 ubox
45 51 0.108544350 ubox
45 55 0.048811163 ubox
45 56 0.135022789 ubox
45 57 0.881141364 ubox
45 58 0.092537469 ubox
46 50 0.108327163 ubox
46 54 0.050376977 ubox
46 55 0.158727149 ubox
46 56 0.877156427 ubox
46 57 0.092471464 ubox
47 53 0.055426591 ubox
47 75 0.127075232 ubox
48 52 0.039741140 ubox
48 74 0.127209368 ubox
48 78 0.014342789 ubox
49 73 0.127126553 ubox
49 76 0.093413345 ubox
49 77 0.011048285 ubox
50 72 0.126888090 ubox
50 75 0.104594168 ubox
51 71 0.118351008 ubox
51 74 0.104603236 ubox
51 78 0.240178257 ubox
52 63 0.025999413 ubox
52 64 0.014095397 ubox
52 65 0.004829402 ubox
52 66 0.004947823 ubox
52 67 0.004789088 ubox
52 68 0.007584678 ubox
52 69 0.028816888 ubox
52 70 0.090721908 ubox
52 73 0.080721734 ubox
52 77 0.257251070 ubox
53 62 0.026445383 ubox
53 63 0.014930388 ubox
53 64 0.004598488 ubox
53 65 0.004945866 ubox
53 66 0.004929682 ubox
53 67 0.007822345 ubox
53 68 0.024897141 ubox
53 69 0.095240736 ubox
53 73 0.064717962 ubox
53 76 0.266580141 ubox
54 60 0.003923130 ubox
54 61 0.028454073 ubox
54 72 0.091330393 ubox
54 75 0.270010757 ubox
55 60 0.028504170 ubox
55 61 0.015225967 ubox
55 71 0.081643257 ubox
55 72 0.036057264 ubox
55 74 0.269545140 ubox
55 75 0.023512642 ubox
56 60 0.014981857 ubox
56 71 0.035608227 ubox
56 72 0.213234178 ubox
56 74 0.024506219 ubox
56 75 0.007741810 ubox
57 71 0.211004953 ubox
57 72 0.114232024 ubox
57 74 0.007817118 ubox
57 75 0.035077980 ubox
58 71 0.111679472 ubox
58 74 0.035119156 ubox
59 65 0.031172397 ubox
59 68 0.317269372 ubox
59 70 0.007825416 ubox
59 73 0.028031281 ubox
60 64 0.031742402 ubox
60 67 0.336970460 ubox
60 70 0.082911963 ubox
61 66 0.333734218 ubox
61 69 0.082901536 ubox
61 73 0.031650245 ubox
61 76 0.004937008 ubox
62 72 0.042029195 ubox
62 75 0.005874555 ubox
63 71 0.041668075 ubox
64 72 0.031936653 ubox
65 71 0.033389815 ubox
70 78 0.027824557 ubox
71 77 0.029290153 ubox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
4 33 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
37 64 0.9500000 lbox
38 63 0.9500000 lbox
39 62 0.9500000 lbox
40 61 0.9500000 lbox
42 60 0.9500000 lbox
43 59 0.9500000 lbox
45 57 0.9500000 lbox
46 56 0.9500000 lbox
showpage
end
%%EOF
