%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC43)
} def

/sequence { (\
ACUGCGGUAGGCGCCCUAGGGGCUUGCAGGACCCUGACCCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.032755910 ubox
2 7 0.039030400 ubox
2 10 0.013139304 ubox
2 11 0.009150405 ubox
2 19 0.083647318 ubox
2 29 0.769828390 ubox
2 30 0.102641100 ubox
2 44 0.079002336 ubox
3 9 0.013065780 ubox
3 10 0.009064591 ubox
3 13 0.085693020 ubox
3 18 0.089853183 ubox
3 19 0.003298485 ubox
3 28 0.777301845 ubox
3 29 0.096497774 ubox
3 36 0.013742517 ubox
3 42 0.161499220 ubox
3 43 0.068708394 ubox
4 8 0.010888411 ubox
4 12 0.127813665 ubox
4 14 0.267860417 ubox
4 17 0.086681494 ubox
4 27 0.774539047 ubox
4 35 0.017654719 ubox
4 41 0.178145949 ubox
5 11 0.127873772 ubox
5 13 0.268746103 ubox
5 26 0.772110813 ubox
5 36 0.018041757 ubox
6 12 0.269036364 ubox
6 15 0.120349454 ubox
6 16 0.018023140 ubox
6 24 0.013204056 ubox
6 25 0.633898357 ubox
6 33 0.072166630 ubox
6 34 0.016734695 ubox
6 35 0.015096376 ubox
6 39 0.184439093 ubox
6 40 0.056646476 ubox
6 41 0.037211816 ubox
7 14 0.120551236 ubox
7 15 0.017361298 ubox
7 23 0.015664737 ubox
7 24 0.333366492 ubox
7 27 0.494289300 ubox
7 32 0.071986665 ubox
7 33 0.014503934 ubox
7 34 0.010159649 ubox
7 38 0.184437467 ubox
7 39 0.052187338 ubox
7 40 0.030455068 ubox
8 13 0.115681090 ubox
8 18 0.063714498 ubox
8 22 0.013417148 ubox
8 26 0.503290850 ubox
8 31 0.069659589 ubox
8 36 0.093207878 ubox
8 37 0.152084729 ubox
9 17 0.072869027 ubox
9 24 0.059228053 ubox
9 25 0.657891650 ubox
9 35 0.131040960 ubox
10 16 0.075139424 ubox
10 17 0.004174785 ubox
10 23 0.044995786 ubox
10 24 0.855002150 ubox
10 25 0.031056500 ubox
10 33 0.014150751 ubox
10 34 0.133633830 ubox
10 35 0.011233836 ubox
10 39 0.015107799 ubox
10 40 0.006517397 ubox
10 41 0.012389090 ubox
11 15 0.073938096 ubox
11 16 0.004545017 ubox
11 23 0.887345349 ubox
11 24 0.049809636 ubox
11 27 0.082411173 ubox
11 32 0.014937751 ubox
11 33 0.129088699 ubox
11 34 0.010817775 ubox
11 38 0.015176391 ubox
11 39 0.006542378 ubox
11 40 0.012337413 ubox
12 22 0.888197082 ubox
12 26 0.087606275 ubox
12 36 0.005959481 ubox
13 23 0.316616154 ubox
13 25 0.011814942 ubox
13 27 0.003567407 ubox
14 20 0.811890777 ubox
14 21 0.358881549 ubox
14 22 0.317615177 ubox
14 26 0.003420026 ubox
14 30 0.032052851 ubox
15 19 0.806113895 ubox
15 20 0.358904219 ubox
15 21 0.317905383 ubox
15 22 0.005016597 ubox
15 29 0.031637764 ubox
15 30 0.018699820 ubox
16 20 0.315623988 ubox
16 21 0.005686563 ubox
16 22 0.003524905 ubox
16 29 0.019289324 ubox
16 44 0.174892398 ubox
17 21 0.003189456 ubox
17 26 0.015414655 ubox
17 28 0.019039134 ubox
17 36 0.103874655 ubox
17 43 0.175499834 ubox
18 24 0.012871341 ubox
18 25 0.016366466 ubox
18 35 0.112143683 ubox
19 23 0.012835612 ubox
19 24 0.013579451 ubox
19 25 0.012896765 ubox
19 34 0.113198962 ubox
19 35 0.032930211 ubox
19 40 0.008045688 ubox
19 41 0.290719720 ubox
20 24 0.008576381 ubox
20 33 0.113125229 ubox
20 34 0.042220096 ubox
20 39 0.008126075 ubox
20 40 0.291660848 ubox
20 41 0.089680134 ubox
21 32 0.112564136 ubox
21 33 0.042526111 ubox
21 38 0.008093056 ubox
21 39 0.291651447 ubox
21 40 0.089817505 ubox
21 41 0.009192374 ubox
22 32 0.042771937 ubox
22 38 0.289955268 ubox
22 39 0.089713713 ubox
22 40 0.009197839 ubox
23 29 0.035671236 ubox
23 30 0.092343897 ubox
23 44 0.009640911 ubox
24 28 0.032525169 ubox
24 29 0.086862881 ubox
24 30 0.010308657 ubox
24 31 0.030008219 ubox
24 37 0.125693165 ubox
24 43 0.023878313 ubox
25 29 0.009134596 ubox
25 30 0.031563431 ubox
25 36 0.065700976 ubox
25 42 0.026288038 ubox
25 43 0.003266382 ubox
26 35 0.044757870 ubox
26 41 0.026621682 ubox
27 36 0.325325616 ubox
28 35 0.334277621 ubox
29 34 0.333904346 ubox
29 35 0.022937639 ubox
29 39 0.151435806 ubox
29 40 0.311221811 ubox
29 41 0.224848090 ubox
30 34 0.032301310 ubox
30 38 0.154588550 ubox
30 39 0.318706849 ubox
30 40 0.225724537 ubox
34 44 0.155624443 ubox
35 42 0.232508859 ubox
35 43 0.150587257 ubox
36 41 0.254764500 ubox
2 29 0.9500000 lbox
3 28 0.9500000 lbox
4 27 0.9500000 lbox
5 26 0.9500000 lbox
6 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
showpage
end
%%EOF
