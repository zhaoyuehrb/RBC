%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GKN1)
} def

/sequence { (\
AUAACACCUAGUUUGAGUCAACCUGGUUAAGUACAAAUAUGAGAAGGCUUCUCAUUCAGGUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.027792517 ubox
1 18 0.027063985 ubox
1 32 0.068445397 ubox
1 38 0.003162417 ubox
1 61 0.003996743 ubox
2 10 0.039059646 ubox
2 11 0.030553609 ubox
2 15 0.062422160 ubox
2 17 0.029468491 ubox
2 29 0.074154745 ubox
2 31 0.069111798 ubox
2 33 0.030442068 ubox
2 60 0.004055794 ubox
3 9 0.040372732 ubox
3 13 0.290187117 ubox
3 14 0.068258170 ubox
3 28 0.076331131 ubox
3 32 0.034889823 ubox
4 12 0.334356614 ubox
4 13 0.061331260 ubox
4 18 0.080062056 ubox
4 27 0.056976286 ubox
4 32 0.131813726 ubox
4 61 0.021358657 ubox
5 11 0.340448488 ubox
5 15 0.092018464 ubox
5 17 0.084499341 ubox
5 25 0.003265112 ubox
5 26 0.041820825 ubox
5 31 0.136744306 ubox
5 60 0.021958118 ubox
6 12 0.065218389 ubox
6 14 0.086114612 ubox
6 18 0.075243619 ubox
6 24 0.003305177 ubox
6 27 0.334325148 ubox
6 32 0.029660432 ubox
6 61 0.383070256 ubox
7 11 0.068792033 ubox
7 17 0.076783336 ubox
7 26 0.353916994 ubox
7 31 0.031073411 ubox
7 60 0.409510185 ubox
8 17 0.168685250 ubox
8 25 0.353473661 ubox
8 26 0.176918020 ubox
8 59 0.409651418 ubox
8 60 0.012455560 ubox
9 15 0.049250381 ubox
9 16 0.166180484 ubox
9 25 0.183135607 ubox
9 29 0.003852916 ubox
9 33 0.007252481 ubox
9 58 0.397081048 ubox
9 59 0.012194927 ubox
10 14 0.043686586 ubox
10 24 0.246813539 ubox
10 28 0.004016747 ubox
10 32 0.009882808 ubox
10 49 0.010342808 ubox
10 52 0.004571951 ubox
10 56 0.107353527 ubox
11 18 0.011797551 ubox
11 22 0.312162515 ubox
11 23 0.246140559 ubox
11 27 0.003502418 ubox
11 32 0.014958177 ubox
11 34 0.022782010 ubox
11 38 0.049379587 ubox
11 48 0.010473459 ubox
11 51 0.004592257 ubox
11 55 0.100582192 ubox
11 61 0.005456257 ubox
12 17 0.010355515 ubox
12 21 0.307569349 ubox
12 30 0.006127754 ubox
12 31 0.033460562 ubox
12 33 0.021472940 ubox
12 37 0.050697650 ubox
12 47 0.010445641 ubox
12 54 0.073787834 ubox
12 60 0.013772690 ubox
13 20 0.273055355 ubox
13 21 0.242218139 ubox
13 29 0.005518215 ubox
13 30 0.044820905 ubox
13 31 0.008357907 ubox
13 36 0.051233595 ubox
13 46 0.010286964 ubox
13 59 0.018550661 ubox
14 20 0.273011994 ubox
14 29 0.047173614 ubox
14 30 0.008521445 ubox
14 35 0.051307893 ubox
14 45 0.009909807 ubox
14 54 0.387147088 ubox
14 58 0.023882493 ubox
15 19 0.278095395 ubox
15 28 0.047426430 ubox
15 34 0.051051790 ubox
15 50 0.029870717 ubox
15 51 0.043434318 ubox
15 53 0.396128152 ubox
15 57 0.027253099 ubox
15 62 0.047981296 ubox
16 24 0.014716156 ubox
16 27 0.047046692 ubox
16 28 0.018838403 ubox
16 49 0.042686586 ubox
16 50 0.032630083 ubox
16 52 0.396072512 ubox
16 56 0.026679551 ubox
16 61 0.036628673 ubox
17 23 0.015342425 ubox
17 27 0.018727371 ubox
17 32 0.011138420 ubox
17 34 0.009313754 ubox
17 48 0.051958960 ubox
17 49 0.013733016 ubox
17 51 0.395451351 ubox
17 55 0.020022031 ubox
17 61 0.004616576 ubox
18 26 0.046188155 ubox
18 31 0.006695858 ubox
18 33 0.009343112 ubox
18 42 0.015172709 ubox
18 47 0.051619027 ubox
18 54 0.017404862 ubox
19 25 0.051123124 ubox
19 41 0.015359603 ubox
19 46 0.050982428 ubox
20 24 0.041449899 ubox
20 28 0.033143785 ubox
20 40 0.014869660 ubox
20 50 0.084267066 ubox
21 27 0.035760345 ubox
21 32 0.017388779 ubox
21 49 0.097404594 ubox
21 61 0.771210711 ubox
22 26 0.035598420 ubox
22 31 0.017237593 ubox
22 47 0.395089991 ubox
22 60 0.818460827 ubox
23 31 0.026392611 ubox
23 43 0.052257617 ubox
23 46 0.395611333 ubox
23 47 0.013912641 ubox
23 59 0.818926412 ubox
24 30 0.026987002 ubox
24 33 0.006367702 ubox
24 35 0.043262304 ubox
24 42 0.052656573 ubox
24 45 0.391473878 ubox
24 46 0.013846300 ubox
24 58 0.818633368 ubox
25 32 0.007422318 ubox
25 34 0.050125810 ubox
25 38 0.003353546 ubox
25 40 0.003574338 ubox
25 49 0.003646661 ubox
25 56 0.005567305 ubox
25 57 0.818183243 ubox
25 63 0.005546147 ubox
26 32 0.010313529 ubox
26 34 0.218306270 ubox
26 38 0.072462368 ubox
26 40 0.052208000 ubox
26 48 0.004048736 ubox
26 55 0.018621658 ubox
26 56 0.765721685 ubox
26 62 0.005664716 ubox
27 31 0.008388945 ubox
27 33 0.216571614 ubox
27 36 0.039333308 ubox
27 37 0.075669410 ubox
27 39 0.051139460 ubox
27 42 0.346483546 ubox
27 43 0.038542898 ubox
27 44 0.073296095 ubox
27 45 0.004211004 ubox
27 47 0.004011651 ubox
27 54 0.018127075 ubox
28 35 0.042167119 ubox
28 36 0.074454861 ubox
28 39 0.040911659 ubox
28 41 0.348297578 ubox
28 42 0.038643440 ubox
28 43 0.077278643 ubox
28 44 0.007753017 ubox
28 46 0.003514100 ubox
29 38 0.045660656 ubox
29 40 0.327503501 ubox
29 50 0.017985919 ubox
29 56 0.018925896 ubox
30 49 0.019076260 ubox
30 52 0.009525502 ubox
30 55 0.018232073 ubox
30 56 0.015142139 ubox
31 38 0.298792793 ubox
31 40 0.148983741 ubox
31 48 0.019175532 ubox
31 51 0.009789359 ubox
31 55 0.016963197 ubox
31 61 0.007039094 ubox
32 37 0.293855609 ubox
32 39 0.156723723 ubox
32 41 0.011070807 ubox
32 47 0.018865058 ubox
32 54 0.011037580 ubox
32 60 0.010332772 ubox
33 38 0.142615966 ubox
33 40 0.011337383 ubox
33 61 0.311552877 ubox
34 41 0.016134316 ubox
34 60 0.336782325 ubox
35 40 0.014752139 ubox
35 56 0.023172449 ubox
36 55 0.020570535 ubox
36 56 0.036715879 ubox
37 55 0.034339851 ubox
37 61 0.017063650 ubox
38 54 0.018786432 ubox
38 60 0.017628359 ubox
39 55 0.886486410 ubox
40 54 0.909503850 ubox
40 58 0.003933500 ubox
41 50 0.007136108 ubox
41 51 0.005004500 ubox
41 53 0.916026394 ubox
41 57 0.004190531 ubox
42 49 0.007669419 ubox
42 50 0.004821021 ubox
42 52 0.915924328 ubox
42 56 0.004032479 ubox
43 48 0.007960162 ubox
43 49 0.004236239 ubox
43 50 0.003974385 ubox
43 51 0.915997926 ubox
43 55 0.003228851 ubox
43 57 0.003254966 ubox
44 49 0.029331979 ubox
44 50 0.903439109 ubox
44 56 0.003257125 ubox
45 49 0.688522705 ubox
45 52 0.003995298 ubox
46 51 0.004698739 ubox
46 62 0.011538348 ubox
47 61 0.011675188 ubox
48 60 0.011943326 ubox
49 59 0.011782581 ubox
50 58 0.010618753 ubox
21 61 0.9500000 lbox
22 60 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
26 56 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
45 49 0.9500000 lbox
showpage
end
%%EOF
