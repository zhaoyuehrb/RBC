%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SORT1)
} def

/sequence { (\
GGUGGGCGGGCGCGCCGGGCGGCAGGUGUCGGCGUCGGCGGCAUUCGGCGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.161342057 ubox
1 36 0.017909485 ubox
1 45 0.006602814 ubox
1 46 0.006372364 ubox
2 11 0.019642068 ubox
2 13 0.063527006 ubox
2 15 0.161438409 ubox
2 20 0.049120277 ubox
2 33 0.119379258 ubox
2 35 0.015729327 ubox
2 39 0.024799978 ubox
2 42 0.004096956 ubox
2 44 0.010301848 ubox
2 45 0.005123231 ubox
2 49 0.164688415 ubox
2 52 0.278019914 ubox
3 10 0.019538053 ubox
3 12 0.063644411 ubox
3 14 0.161120403 ubox
3 17 0.065671492 ubox
3 19 0.049506372 ubox
3 31 0.003747451 ubox
3 32 0.119750763 ubox
3 34 0.005136671 ubox
3 37 0.047077608 ubox
3 38 0.024760137 ubox
3 41 0.004065210 ubox
3 43 0.011064659 ubox
3 47 0.013834368 ubox
3 48 0.164221482 ubox
3 50 0.033586801 ubox
3 51 0.275756903 ubox
3 53 0.030949756 ubox
4 11 0.063929752 ubox
4 13 0.158454983 ubox
4 16 0.075788920 ubox
4 30 0.005066489 ubox
4 33 0.007706707 ubox
4 36 0.062035659 ubox
4 42 0.011105933 ubox
4 46 0.019122269 ubox
4 49 0.045516073 ubox
4 52 0.052102149 ubox
5 15 0.063656566 ubox
5 16 0.633311746 ubox
5 29 0.003891968 ubox
5 30 0.120396015 ubox
5 35 0.056061426 ubox
5 36 0.039371113 ubox
5 45 0.018719899 ubox
5 46 0.161462331 ubox
6 13 0.060438553 ubox
6 15 0.635215905 ubox
6 27 0.009282253 ubox
6 29 0.120180640 ubox
6 33 0.638449231 ubox
6 35 0.039068111 ubox
6 39 0.013364607 ubox
6 42 0.014149901 ubox
6 44 0.016653605 ubox
6 45 0.136950433 ubox
6 49 0.199845366 ubox
6 52 0.020532723 ubox
7 12 0.061042049 ubox
7 14 0.636541260 ubox
7 17 0.031282992 ubox
7 26 0.009885482 ubox
7 28 0.120027474 ubox
7 31 0.019857088 ubox
7 32 0.642096806 ubox
7 34 0.039129880 ubox
7 37 0.012465315 ubox
7 38 0.013362701 ubox
7 40 0.006770783 ubox
7 41 0.014118271 ubox
7 47 0.241544501 ubox
7 48 0.186188782 ubox
7 50 0.004001872 ubox
7 51 0.020220895 ubox
7 53 0.003675763 ubox
8 13 0.633709307 ubox
8 16 0.031659844 ubox
8 27 0.094665075 ubox
8 30 0.018064807 ubox
8 33 0.038795795 ubox
8 36 0.012548467 ubox
8 39 0.007045287 ubox
8 45 0.021499212 ubox
8 46 0.252355491 ubox
8 49 0.004477676 ubox
9 15 0.031640081 ubox
9 29 0.012757933 ubox
9 30 0.642658982 ubox
9 35 0.005566924 ubox
9 36 0.013534836 ubox
9 44 0.036713929 ubox
9 45 0.234791886 ubox
9 46 0.141183737 ubox
10 23 0.078610503 ubox
10 27 0.061786050 ubox
10 29 0.643616901 ubox
10 33 0.007113587 ubox
10 35 0.010703550 ubox
10 39 0.009984541 ubox
10 42 0.276790160 ubox
10 44 0.191776841 ubox
10 45 0.069079287 ubox
10 49 0.007769157 ubox
10 52 0.081736521 ubox
11 21 0.051549156 ubox
11 22 0.074300580 ubox
11 26 0.069021513 ubox
11 28 0.643862267 ubox
11 31 0.024507235 ubox
11 32 0.006657621 ubox
11 34 0.010105520 ubox
11 37 0.024876424 ubox
11 38 0.009258011 ubox
11 41 0.277730766 ubox
11 47 0.007634920 ubox
11 48 0.007468587 ubox
11 51 0.081755703 ubox
11 53 0.017865078 ubox
12 20 0.057778780 ubox
12 23 0.023549511 ubox
12 27 0.643077506 ubox
12 29 0.030061503 ubox
12 30 0.024216634 ubox
12 33 0.008150312 ubox
12 35 0.026580182 ubox
12 36 0.024991148 ubox
12 42 0.196647052 ubox
12 46 0.007769996 ubox
12 52 0.020344202 ubox
13 19 0.057809460 ubox
13 21 0.072524548 ubox
13 22 0.020043514 ubox
13 26 0.639332188 ubox
13 28 0.039991714 ubox
13 32 0.007551920 ubox
13 34 0.037741107 ubox
13 40 0.317716769 ubox
13 41 0.139277787 ubox
13 50 0.083114536 ubox
13 51 0.014447830 ubox
13 53 0.011701597 ubox
14 20 0.074050590 ubox
14 23 0.644679174 ubox
14 27 0.044223109 ubox
14 33 0.072173659 ubox
14 39 0.347644452 ubox
14 49 0.084932901 ubox
14 52 0.027014030 ubox
15 19 0.073520326 ubox
15 22 0.647514744 ubox
15 26 0.045173974 ubox
15 32 0.072610563 ubox
15 38 0.347830911 ubox
15 48 0.084942950 ubox
15 51 0.027037675 ubox
16 21 0.646594934 ubox
16 25 0.045540776 ubox
16 31 0.072638333 ubox
16 37 0.347821100 ubox
16 47 0.084940108 ubox
16 50 0.027035947 ubox
17 30 0.067164108 ubox
17 33 0.023623220 ubox
17 36 0.346949824 ubox
17 46 0.084745787 ubox
17 49 0.026750136 ubox
17 52 0.007292192 ubox
18 29 0.050322256 ubox
18 30 0.065446695 ubox
18 35 0.311080307 ubox
18 36 0.022222200 ubox
18 44 0.008355624 ubox
18 45 0.075083693 ubox
19 27 0.050721656 ubox
19 29 0.071715659 ubox
19 33 0.332300929 ubox
19 35 0.030637772 ubox
19 42 0.058919541 ubox
19 44 0.048705192 ubox
19 49 0.007198801 ubox
19 52 0.634155097 ubox
20 26 0.053031295 ubox
20 28 0.077147218 ubox
20 31 0.295372410 ubox
20 32 0.238193683 ubox
20 34 0.036992498 ubox
20 37 0.004199195 ubox
20 41 0.059208351 ubox
20 47 0.026663046 ubox
20 48 0.007053987 ubox
20 50 0.010744530 ubox
20 51 0.634452343 ubox
21 27 0.072925682 ubox
21 30 0.379019946 ubox
21 33 0.030556745 ubox
21 36 0.004394858 ubox
21 46 0.026784757 ubox
21 49 0.011345388 ubox
21 52 0.003849275 ubox
22 29 0.381564227 ubox
22 33 0.024187981 ubox
22 35 0.004394445 ubox
22 39 0.059010963 ubox
22 42 0.049358904 ubox
22 45 0.022043732 ubox
22 49 0.634872357 ubox
23 28 0.381277686 ubox
23 32 0.031099791 ubox
23 34 0.004382292 ubox
23 38 0.058898250 ubox
23 41 0.049340117 ubox
23 48 0.634622317 ubox
24 45 0.013163435 ubox
25 36 0.044265211 ubox
25 44 0.012120521 ubox
25 45 0.549248775 ubox
25 46 0.255093761 ubox
26 33 0.036964468 ubox
26 35 0.042179350 ubox
26 39 0.003547532 ubox
26 42 0.011106760 ubox
26 44 0.603772180 ubox
26 45 0.184361223 ubox
27 32 0.036590470 ubox
27 34 0.039890024 ubox
27 37 0.003224075 ubox
27 38 0.003216997 ubox
27 40 0.049385973 ubox
27 41 0.007864123 ubox
27 43 0.634968182 ubox
28 33 0.041457144 ubox
28 36 0.003370536 ubox
28 39 0.052069226 ubox
28 42 0.636556055 ubox
29 38 0.052136802 ubox
29 41 0.636275131 ubox
30 37 0.052511020 ubox
30 40 0.631918405 ubox
30 53 0.021444488 ubox
31 36 0.051868916 ubox
31 39 0.502341777 ubox
31 52 0.047305640 ubox
32 39 0.390450801 ubox
32 42 0.005705932 ubox
32 52 0.015741151 ubox
33 38 0.546768968 ubox
33 40 0.003229656 ubox
33 41 0.005644659 ubox
33 50 0.050718436 ubox
33 51 0.011558596 ubox
33 53 0.162690981 ubox
34 39 0.003825271 ubox
34 42 0.003484737 ubox
34 49 0.056031368 ubox
34 52 0.672958786 ubox
35 41 0.003490179 ubox
35 48 0.056029864 ubox
35 51 0.673306139 ubox
36 40 0.003377648 ubox
36 47 0.056065258 ubox
36 50 0.674057211 ubox
36 53 0.016384609 ubox
37 46 0.056023861 ubox
37 49 0.673716815 ubox
37 52 0.018743555 ubox
38 45 0.044080458 ubox
38 49 0.021578861 ubox
38 52 0.090669799 ubox
39 47 0.673358344 ubox
39 48 0.029348776 ubox
39 50 0.017994030 ubox
39 51 0.090888644 ubox
40 46 0.671049920 ubox
40 49 0.017397103 ubox
41 45 0.434728101 ubox
41 49 0.092537474 ubox
41 52 0.018989672 ubox
42 48 0.092660248 ubox
42 51 0.019019273 ubox
46 53 0.009879838 ubox
47 52 0.011187053 ubox
6 33 0.9500000 lbox
7 32 0.9500000 lbox
9 30 0.9500000 lbox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
showpage
end
%%EOF
