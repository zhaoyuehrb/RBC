%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGCUGGUGGGCGGGGCGAGGGCCGCUGGGGCCGCGAAGUGGGGCGGCCGGGUGGGCUACAAGCCGGGUCUGGGCUGAGGGGCGCGGCUUCGCGGUGGACCCCAGCCCGGCAACGGGAAGGCGAGCUCUCCUCCACCGUCCAAAGUAAACUUUGCCGCUCCUUCCGCGGCGCUCCCGAGUCCUCGCCGCCGCCGGGCCGCCGCAGUCCGCGAAGAGCCGUCCUGCGUCAGGGCCUCCUUCCCUGCCCCGGCG\
CGGGGCCACUGCGCC\
) } def
/len { sequence length } bind def

/coor [
[497.34588623 598.67053223]
[512.22216797 596.73773193]
[501.95904541 585.79846191]
[491.69592285 574.85919189]
[481.43280029 563.91986084]
[471.16964722 552.98059082]
[460.90652466 542.04132080]
[450.64337158 531.10198975]
[441.90405273 532.26403809]
[433.47409058 529.24743652]
[427.26864624 522.60424805]
[424.75805664 513.72448730]
[426.62084961 504.54660034]
[416.74426270 493.25704956]
[406.86770630 481.96752930]
[396.99114990 470.67800903]
[387.11459351 459.38845825]
[377.17276001 448.15637207]
[367.16598511 436.98208618]
[357.15921021 425.80780029]
[347.15243530 414.63351440]
[337.14569092 403.45925903]
[327.13891602 392.28497314]
[317.13214111 381.11068726]
[307.12536621 369.93640137]
[297.11859131 358.76211548]
[287.04724121 347.64602661]
[276.91159058 336.58850098]
[262.06625366 336.19979858]
[251.62974548 325.13027954]
[252.13812256 309.56173706]
[242.00248718 298.50421143]
[227.69886780 294.35021973]
[224.07765198 278.94900513]
[213.94201660 267.89147949]
[203.80638123 256.83395386]
[193.67076111 245.77642822]
[183.53512573 234.71890259]
[173.39949036 223.66137695]
[160.35281372 226.39907837]
[147.55155945 222.30847168]
[138.36331177 212.35362244]
[135.26026917 199.05566406]
[139.15475464 185.85482788]
[129.14797974 174.68055725]
[119.14121246 163.50627136]
[109.13443756 152.33198547]
[99.12767029 141.15771484]
[89.12090302 129.98342896]
[76.61875153 121.69511414]
[62.43000412 116.82894897]
[48.24126053 111.96278381]
[34.05251694 107.09661865]
[19.86377335 102.23045349]
[5.67502975 97.36429596]
[-8.51371384 92.49813080]
[-22.75791359 87.79677582]
[-37.05565643 83.26085663]
[-51.35340118 78.72493744]
[-65.67719269 74.27197266]
[-80.02655792 69.90210724]
[-94.37592316 65.53223419]
[-108.72528839 61.16236877]
[-123.17210388 57.12633896]
[-137.70860291 53.42631531]
[-152.24510193 49.72629166]
[-166.78160095 46.02626801]
[-181.31809998 42.32624435]
[-195.85459900 38.62622070]
[-211.13690186 42.72037506]
[-221.56234741 32.08274460]
[-236.09884644 28.38272095]
[-250.63534546 24.68269730]
[-265.17184448 20.98267365]
[-277.02078247 31.00176430]
[-292.49829102 32.10916901]
[-305.65295410 23.87906456]
[-311.42651367 9.47609711]
[-307.59896851 -5.56150007]
[-295.64202881 -15.45146370]
[-280.15341187 -16.39090157]
[-267.08880615 -8.01857948]
[-261.47183228 6.44617367]
[-246.93531799 10.14619732]
[-232.39881897 13.84622097]
[-217.86231995 17.54624367]
[-203.61978149 13.18744087]
[-192.15457153 24.08972168]
[-177.61807251 27.78974533]
[-163.08157349 31.48976898]
[-148.54507446 35.18979263]
[-134.00857544 38.88981628]
[-119.47207642 42.58983994]
[-117.01696777 41.30887604]
[-113.91541290 40.90546036]
[-110.49279785 41.62732315]
[-107.15705109 43.60220337]
[-104.35542297 46.81300735]
[-90.00605774 51.18287277]
[-75.65669250 55.55274200]
[-61.30732727 59.92260742]
[-54.01957321 58.86875916]
[-46.81748581 64.42720032]
[-32.51974106 68.96311188]
[-18.22199821 73.49903107]
[-13.67359829 72.15347290]
[-8.23132801 73.62566376]
[-3.64755011 78.30938721]
[10.54119396 83.17555237]
[24.72993660 88.04170990]
[38.91868210 92.90787506]
[53.10742569 97.77404022]
[67.29616547 102.64020538]
[81.48490906 107.50637054]
[73.26365662 97.01355743]
[72.22872925 80.68726349]
[69.97672272 65.85728455]
[67.72470856 51.02729797]
[65.47270203 36.19731140]
[51.19036484 26.06641579]
[48.72057724 9.07266998]
[59.11085129 -4.17215824]
[56.68707657 -18.97504044]
[54.26330566 -33.77792358]
[40.34094238 -40.62974167]
[33.13470840 -54.37200546]
[35.41555023 -69.72053528]
[46.30643845 -80.77350616]
[61.61959839 -83.28083038]
[75.46681213 -76.27838898]
[82.52354431 -62.45875549]
[80.07633972 -47.13587189]
[69.06619263 -36.20169449]
[71.48995972 -21.39881134]
[73.91373444 -6.59592962]
[85.31036377 -0.62872750]
[91.28842163 10.98128128]
[89.47264099 24.10936928]
[80.30268860 33.94530106]
[82.55469513 48.77528763]
[84.80670166 63.60527420]
[87.05871582 78.43525696]
[94.52233124 79.17308807]
[116.91318512 81.38658905]
[122.02532959 67.28459930]
[127.13747406 53.18261719]
[132.24961853 39.08063126]
[137.36175537 24.97864532]
[133.96209717 8.93575478]
[146.33508301 -1.82720149]
[161.75245667 3.76178336]
[164.35412598 19.95323944]
[151.46374512 30.09078598]
[146.35159302 44.19277191]
[141.23945618 58.29475784]
[136.12731934 72.39674377]
[131.01516724 86.49873352]
[122.60970306 114.57917023]
[100.29518127 119.97666168]
[110.30194855 131.15093994]
[120.30872345 142.32522583]
[130.31549072 153.49949646]
[140.32226562 164.67378235]
[150.32902527 175.84806824]
[167.14836121 173.90216064]
[181.66247559 182.29312134]
[188.23699951 197.53419495]
[184.45701599 213.52574158]
[194.59265137 224.58326721]
[204.72828674 235.64079285]
[214.86392212 246.69831848]
[224.99955750 257.75585938]
[235.13517761 268.81338501]
[250.16377258 273.75827026]
[253.06001282 288.36856079]
[263.19564819 299.42611694]
[278.74951172 300.27154541]
[288.87097168 311.62985229]
[287.96911621 326.45288086]
[298.10476685 337.51040649]
[306.17941284 341.70162964]
[308.29287720 348.75534058]
[318.29965210 359.92962646]
[328.30642700 371.10391235]
[338.31320190 382.27819824]
[348.31994629 393.45248413]
[358.32672119 404.62677002]
[368.33349609 415.80102539]
[378.34027100 426.97531128]
[388.34704590 438.14959717]
[396.37255859 442.43414307]
[398.40411377 449.51190186]
[408.28067017 460.80142212]
[418.15725708 472.09097290]
[428.03381348 483.38049316]
[437.91036987 494.67004395]
[458.58285522 500.40036011]
[461.58267212 520.83886719]
[471.84579468 531.77813721]
[482.10894775 542.71746826]
[492.37207031 553.65673828]
[502.63522339 564.59600830]
[512.89837646 575.53533936]
[523.16149902 586.47460938]
[533.73730469 597.11193848]
[544.61694336 607.43829346]
[555.49652100 617.76464844]
[566.37615967 628.09100342]
[577.25579834 638.41741943]
[588.31597900 631.79321289]
[603.59527588 632.62042236]
[617.92718506 643.09588623]
[632.27655029 647.46575928]
[647.05291748 641.21771240]
[661.08142090 649.00103760]
[663.60064697 664.84503174]
[652.67797852 676.59558105]
[636.69238281 675.23864746]
[627.90667725 661.81512451]
[613.55731201 657.44525146]
[609.37701416 663.67218018]
[596.83605957 682.35302734]
[606.31408691 693.97918701]
[615.79211426 705.60528564]
[625.27014160 717.23138428]
[634.74822998 728.85754395]
[644.22625732 740.48364258]
[653.70428467 752.10980225]
[663.18237305 763.73590088]
[672.66040039 775.36199951]
[682.13842773 786.98815918]
[696.85534668 792.79534912]
[698.90032959 807.54888916]
[708.37835693 819.17498779]
[717.85638428 830.80114746]
[727.33447266 842.42724609]
[742.48327637 839.89562988]
[756.86267090 845.29254150]
[766.60479736 857.16638184]
[769.08892822 872.32305908]
[763.64691162 886.68548584]
[751.74261475 896.39031982]
[736.57824707 898.82696533]
[722.23291016 893.33996582]
[712.56549072 881.40527344]
[710.17639160 866.23333740]
[715.70831299 851.90527344]
[706.23028564 840.27917480]
[696.75225830 828.65307617]
[687.27416992 817.02691650]
[673.23522949 812.05133057]
[670.51232910 796.46618652]
[661.03424072 784.84008789]
[651.55621338 773.21392822]
[642.07818604 761.58782959]
[632.60015869 749.96166992]
[623.12207031 738.33557129]
[613.64404297 726.70947266]
[604.16601562 715.08331299]
[594.68798828 703.45721436]
[585.20989990 691.83111572]
[562.78167725 672.17907715]
[566.92938232 649.29699707]
[556.04980469 638.97064209]
[545.17016602 628.64428711]
[534.29052734 618.31787109]
[523.41094971 607.99151611]
[521.39276123 622.85516357]
[508.57525635 630.64685059]
[494.45120239 625.59600830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[8 198]
[13 196]
[14 195]
[15 194]
[16 193]
[17 192]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[27 180]
[28 179]
[31 176]
[32 175]
[34 173]
[35 172]
[36 171]
[37 170]
[38 169]
[39 168]
[44 164]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[50 114]
[51 113]
[52 112]
[53 111]
[54 110]
[55 109]
[56 108]
[57 105]
[58 104]
[59 103]
[60 101]
[61 100]
[62 99]
[63 98]
[64 93]
[65 92]
[66 91]
[67 90]
[68 89]
[69 88]
[71 86]
[72 85]
[73 84]
[74 83]
[116 142]
[117 141]
[118 140]
[119 139]
[122 135]
[123 134]
[124 133]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
[205 267]
[206 266]
[207 265]
[208 264]
[209 263]
[212 220]
[213 219]
[222 261]
[223 260]
[224 259]
[225 258]
[226 257]
[227 256]
[228 255]
[229 254]
[230 253]
[231 252]
[233 250]
[234 249]
[235 248]
[236 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
