%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM131L)
} def

/sequence { (\
AGCGAGCUAGCGGCGAGCGCGGCGAGCAACGGAGAGGAGCGCGAGCAGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.020910253 ubox
2 7 0.021967783 ubox
2 11 0.045136914 ubox
2 14 0.003901505 ubox
2 18 0.057010561 ubox
2 20 0.004569049 ubox
2 27 0.229433052 ubox
2 40 0.012436056 ubox
2 42 0.015903221 ubox
2 46 0.012907414 ubox
2 49 0.075193944 ubox
2 52 0.114629032 ubox
3 10 0.045196719 ubox
3 12 0.009083033 ubox
3 13 0.003754054 ubox
3 17 0.057083746 ubox
3 19 0.004576701 ubox
3 26 0.229644668 ubox
3 31 0.074375764 ubox
3 39 0.012424798 ubox
3 41 0.015912756 ubox
3 43 0.005189455 ubox
3 45 0.012897463 ubox
3 48 0.075232859 ubox
3 51 0.115545427 ubox
4 11 0.009208174 ubox
4 18 0.004504120 ubox
4 30 0.074781795 ubox
4 40 0.015645662 ubox
4 42 0.005354668 ubox
6 14 0.057472816 ubox
6 18 0.003948133 ubox
6 23 0.229804796 ubox
6 27 0.123080279 ubox
6 40 0.004305555 ubox
6 42 0.006403965 ubox
6 46 0.069589875 ubox
6 49 0.123478945 ubox
6 52 0.935357316 ubox
7 13 0.057465465 ubox
7 17 0.003961957 ubox
7 22 0.229783308 ubox
7 26 0.123237670 ubox
7 37 0.010378048 ubox
7 39 0.004321644 ubox
7 41 0.006347932 ubox
7 45 0.069656738 ubox
7 48 0.123596033 ubox
7 51 0.943401201 ubox
8 12 0.051770420 ubox
8 16 0.003887489 ubox
8 21 0.204546758 ubox
8 25 0.114101409 ubox
8 36 0.009853366 ubox
8 38 0.004191433 ubox
8 44 0.064585816 ubox
8 47 0.122532409 ubox
8 50 0.937621268 ubox
10 18 0.047914908 ubox
10 20 0.224951310 ubox
10 23 0.123369019 ubox
10 42 0.068170218 ubox
10 46 0.084016868 ubox
10 49 0.950457702 ubox
10 52 0.012679502 ubox
11 17 0.047920999 ubox
11 19 0.225090176 ubox
11 22 0.123664163 ubox
11 24 0.009315195 ubox
11 31 0.009256830 ubox
11 41 0.068309009 ubox
11 43 0.005511442 ubox
11 45 0.083958833 ubox
11 48 0.947111861 ubox
11 51 0.012741246 ubox
12 18 0.224647826 ubox
12 23 0.009889273 ubox
12 30 0.009100466 ubox
12 40 0.062093381 ubox
12 42 0.005594780 ubox
13 20 0.123888224 ubox
13 23 0.004251617 ubox
13 27 0.025977557 ubox
13 40 0.028725531 ubox
13 42 0.026024852 ubox
13 46 0.952808515 ubox
13 49 0.018064702 ubox
13 52 0.007043374 ubox
14 19 0.123764925 ubox
14 21 0.010220574 ubox
14 22 0.004205505 ubox
14 26 0.026001175 ubox
14 31 0.005268908 ubox
14 39 0.040018161 ubox
14 41 0.026068287 ubox
14 43 0.023217102 ubox
14 45 0.956276140 ubox
14 48 0.018102306 ubox
14 51 0.007123585 ubox
15 20 0.010075640 ubox
15 30 0.005420458 ubox
15 40 0.025731850 ubox
15 42 0.017565302 ubox
17 23 0.026039257 ubox
17 27 0.007808774 ubox
17 40 0.016816765 ubox
17 42 0.958727956 ubox
17 46 0.012982700 ubox
17 49 0.008210206 ubox
17 52 0.006969096 ubox
18 22 0.025853551 ubox
18 26 0.007824596 ubox
18 31 0.005625699 ubox
18 39 0.016910667 ubox
18 41 0.958857883 ubox
18 43 0.051659775 ubox
18 45 0.012939214 ubox
18 48 0.008215085 ubox
18 51 0.007051277 ubox
19 27 0.016964816 ubox
19 30 0.004367501 ubox
19 40 0.958762242 ubox
19 42 0.052406890 ubox
19 46 0.013599599 ubox
19 49 0.051741597 ubox
19 52 0.020509245 ubox
20 26 0.017226173 ubox
20 31 0.072688976 ubox
20 39 0.957856768 ubox
20 41 0.052358729 ubox
20 43 0.012197701 ubox
20 45 0.013619008 ubox
20 48 0.051605243 ubox
20 51 0.020581191 ubox
21 30 0.108376084 ubox
21 40 0.043295898 ubox
21 42 0.011943145 ubox
22 40 0.033486997 ubox
22 42 0.010269554 ubox
22 46 0.051809157 ubox
22 49 0.021391115 ubox
23 31 0.446969696 ubox
23 39 0.044711218 ubox
23 41 0.010616998 ubox
23 43 0.014906107 ubox
23 45 0.051972074 ubox
23 48 0.021462720 ubox
24 30 0.442361103 ubox
24 40 0.009954854 ubox
24 42 0.015932382 ubox
26 40 0.021848349 ubox
26 42 0.050492813 ubox
26 46 0.021466839 ubox
27 39 0.021979456 ubox
27 41 0.049843911 ubox
27 45 0.021454563 ubox
30 41 0.049102584 ubox
30 43 0.021264512 ubox
31 40 0.058763956 ubox
31 42 0.021570662 ubox
39 46 0.113276358 ubox
39 49 0.078898555 ubox
39 52 0.178354001 ubox
40 45 0.113352404 ubox
40 48 0.078965240 ubox
40 51 0.179808027 ubox
41 49 0.206369566 ubox
41 52 0.045859226 ubox
42 48 0.206959208 ubox
42 51 0.046589828 ubox
45 52 0.033276650 ubox
46 51 0.033518454 ubox
6 52 0.9500000 lbox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
10 49 0.9500000 lbox
11 48 0.9500000 lbox
13 46 0.9500000 lbox
14 45 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
showpage
end
%%EOF
