%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACCUUCUCUCCUCCCUGUGUCUUUUUUUUUCCUUUAGAGAUGGGGGUCUUGCUCUGUCACUCCAGCUAGAGCACAGUGGUGCAAUCGGAGCUCACUGACUGCAGCCUGCAACUCCUGGGCUCAAGUGAUUCUGCCGCCUCAGCCUCUCAACGUGCUGCGAUUAGAGAGUCUGUAGAAGAGGCGACACCAGGGCUUCCAA\
) } def
/len { sequence length } bind def

/coor [
[71.10401154 501.85757446]
[57.29544067 507.93917847]
[42.38320541 510.23867798]
[27.38404655 508.59927368]
[13.32062912 503.13278198]
[1.15182197 494.21185303]
[-8.29268551 482.44479370]
[-14.36895180 468.63388062]
[-16.66268539 453.72076416]
[-15.01749897 438.72225952]
[-9.54555988 424.66094971]
[-0.61995733 412.49557495]
[11.15074825 403.05560303]
[24.96400833 396.98468018]
[39.87801361 394.69671631]
[41.50779724 379.78552246]
[43.13758087 364.87429810]
[44.76736069 349.96310425]
[46.39714432 335.05191040]
[47.91092682 320.12850952]
[49.30861282 305.19375610]
[50.70630264 290.25900269]
[52.10399246 275.32427979]
[45.58627319 261.93142700]
[54.57580185 248.91224670]
[55.97348785 233.97750854]
[57.37117767 219.04275513]
[58.76886749 204.10801697]
[60.16655731 189.17327881]
[61.56424713 174.23854065]
[62.96193314 159.30380249]
[64.35962677 144.36906433]
[52.66338348 134.97767639]
[38.38318634 139.56854248]
[24.10299110 144.15939331]
[9.82279491 148.75025940]
[-4.45740175 153.34111023]
[-18.73759842 157.93197632]
[-29.34165192 170.44142151]
[-45.42665482 167.24691772]
[-50.44573212 151.63471985]
[-39.23569107 139.66529846]
[-23.32845688 143.65177917]
[-9.04826069 139.06091309]
[5.23193598 134.47006226]
[19.51213264 129.87919617]
[33.79232788 125.28834534]
[48.07252502 120.69748688]
[48.42232895 113.20565033]
[35.79587173 105.10795593]
[49.12193298 98.22196960]
[49.47173691 90.73013306]
[35.68144226 84.82862854]
[21.89114571 78.92712402]
[8.10085106 73.02561951]
[-5.68944454 67.12411499]
[-19.47974014 61.22261429]
[-33.31550980 55.42852402]
[-47.19591522 49.74219894]
[-60.95335007 57.17638016]
[-76.26026154 53.97756958]
[-85.88920593 41.65614319]
[-85.29367828 26.02990341]
[-74.75487518 14.47708225]
[-59.24889755 12.45256996]
[-46.09719086 20.91227722]
[-41.50959015 35.86178970]
[-27.62918472 41.54811478]
[-20.24251175 41.17445755]
[-13.57823658 47.43231583]
[0.21205907 53.33382034]
[14.00235462 59.23532486]
[27.79265022 65.13682556]
[41.58294678 71.03833008]
[55.37324142 76.93983459]
[70.17045593 66.28583527]
[86.17239380 62.67980957]
[100.50763702 65.42081451]
[103.97528839 50.82713699]
[107.44293213 36.23345947]
[110.91057587 21.63978195]
[114.37821960 7.04610300]
[117.84586334 -7.54757500]
[113.50842285 -22.76260757]
[123.97837830 -33.35644150]
[127.44602203 -47.95011902]
[130.91366577 -62.54379654]
[134.38131714 -77.13747406]
[137.84895325 -91.73115540]
[140.97523499 -106.40174866]
[143.75845337 -121.14127350]
[146.54167175 -135.88079834]
[149.32489014 -150.62033081]
[152.10810852 -165.35986328]
[154.89132690 -180.09939575]
[157.67454529 -194.83891296]
[145.47082520 -203.94004822]
[138.45739746 -217.38247681]
[137.97784424 -232.47520447]
[144.07376099 -246.22296143]
[155.48707581 -255.92068481]
[169.91934204 -259.68566895]
[172.70256042 -274.42520142]
[175.48576355 -289.16473389]
[178.26898193 -303.90426636]
[175.26655579 -320.59024048]
[190.46928406 -328.09448242]
[201.88877869 -315.56326294]
[193.00851440 -301.12106323]
[190.22529602 -286.38153076]
[187.44207764 -271.64199829]
[184.65887451 -256.90246582]
[196.72447205 -248.13395691]
[203.81562805 -234.94210815]
[204.47865295 -219.91807556]
[198.52853394 -206.03944397]
[187.09623718 -196.08006287]
[172.41406250 -192.05570984]
[169.63084412 -177.31617737]
[166.84764099 -162.57664490]
[164.06442261 -147.83711243]
[161.28120422 -133.09759521]
[158.49798584 -118.35806274]
[155.71476746 -103.61853027]
[157.39533997 -100.51108551]
[157.65005493 -96.43358612]
[156.03866577 -92.06702423]
[152.44264221 -88.26351166]
[148.97499084 -73.66983032]
[145.50735474 -59.07615280]
[142.03970337 -44.48247528]
[138.57205200 -29.88879585]
[143.15753174 -15.71760082]
[132.43954468 -4.07993031]
[128.97189331 10.51374817]
[125.50424957 25.10742569]
[122.03660583 39.70110321]
[118.56896210 54.29478073]
[115.10131836 68.88845825]
[125.27066040 76.39128876]
[132.06542969 87.04676819]
[134.57824707 99.43198395]
[149.27270508 102.44409180]
[163.96716309 105.45619965]
[179.03994751 100.64767456]
[189.95426941 110.78309631]
[204.64872742 113.79520416]
[219.34320068 116.80731201]
[234.03765869 119.81941223]
[248.73211670 122.83152008]
[263.44955444 125.72927094]
[278.18908691 128.51248169]
[292.94982910 131.18099976]
[307.73083496 133.73464966]
[322.51187134 136.28831482]
[339.14913940 133.02674866]
[346.88888550 148.11093140]
[334.53677368 159.72392273]
[319.95822144 151.06933594]
[305.17718506 148.51568604]
[290.39614868 145.96203613]
[283.26461792 147.92251587]
[275.40588379 143.25201416]
[260.66635132 140.46879578]
[253.50517273 142.31814575]
[245.72001648 137.52598572]
[231.02555847 134.51387024]
[216.33108521 131.50177002]
[201.63662720 128.48966980]
[186.94216919 125.47756195]
[172.92044067 130.50152588]
[160.95506287 120.15065765]
[146.26060486 117.13855743]
[131.56614685 114.12644958]
[115.04123688 139.65074158]
[79.29436493 145.76675415]
[77.89667511 160.70149231]
[76.49898529 175.63623047]
[75.10129547 190.57096863]
[73.70360565 205.50570679]
[72.30591583 220.44044495]
[70.90822601 235.37518311]
[69.51054382 250.30993652]
[75.92829132 264.77102661]
[67.03873444 276.72195435]
[65.64104462 291.65670776]
[64.24335480 306.59143066]
[62.84566498 321.52618408]
[65.16297150 330.36944580]
[61.30834198 336.68170166]
[59.67855835 351.59289551]
[58.04877853 366.50408936]
[56.41899490 381.41528320]
[54.78921127 396.32647705]
[68.85684967 401.78213501]
[81.03253937 410.69363403]
[90.48612976 422.45339966]
[96.57305908 436.25961304]
[98.87831116 451.17095947]
[97.24470520 466.17074585]
[91.78363037 480.23629761]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 194]
[16 193]
[17 192]
[18 191]
[19 190]
[20 188]
[21 187]
[22 186]
[23 185]
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[32 176]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[52 75]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[58 68]
[59 67]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[102 112]
[103 111]
[104 110]
[105 109]
[142 174]
[143 173]
[144 172]
[146 170]
[147 169]
[148 168]
[149 167]
[150 166]
[151 164]
[152 163]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
