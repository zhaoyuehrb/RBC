%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACUACCGUCGCGGCCUGAUGACGUCGCACAAUGGCCGGCCCCCGCGGGUAGUGGAGCCCGUUUGUUCCGCCCGUGUCGAGCCUGGAGCCAGAACCUGUGAAGAGCGGAAGGGCCAAGGGACGUCUUCUCCACGCCGCUCCGACUCCAGGGGAGCCGUGGCCUCCUCUCCGCCCUAGCGCUGAGAACCGUGGGUACCG\
) } def
/len { sequence length } bind def

/coor [
[8.39017963 252.61653137]
[4.96425581 253.48210144]
[-4.00356722 265.50616455]
[-6.62879086 274.26385498]
[-13.20671082 277.64660645]
[-22.36136436 289.52905273]
[-31.51601791 301.41146851]
[-29.68042374 316.87979126]
[-39.13381195 328.79986572]
[-53.89178848 330.45449829]
[-63.04644012 342.33691406]
[-65.80821991 351.05252075]
[-72.43820190 354.33206177]
[-81.77745056 366.06994629]
[-91.11669922 377.80786133]
[-100.45594788 389.54577637]
[-109.79519653 401.28366089]
[-105.52077484 416.20040894]
[-110.86214447 430.76919556]
[-123.76544952 439.38803101]
[-139.26910400 438.74279785]
[-151.41163635 429.08160400]
[-155.52400208 414.11938477]
[-150.02488708 399.60940552]
[-137.02885437 391.13104248]
[-121.53310394 391.94442749]
[-112.19385529 380.20651245]
[-102.85460663 368.46862793]
[-93.51535797 356.73071289]
[-84.17610931 344.99279785]
[-74.92887878 333.18228149]
[-65.77422333 321.29983521]
[-67.93822479 306.60791016]
[-58.82337189 294.42700195]
[-43.39845657 292.25683594]
[-34.24380112 280.37438965]
[-25.08914757 268.49194336]
[-16.02763367 256.53833008]
[-7.05980968 244.51426697]
[1.62367368 232.28327942]
[10.01804447 219.85209656]
[6.94034338 205.32406616]
[15.27634239 192.59748840]
[30.53553391 189.46781921]
[38.92990494 177.03663635]
[47.32427597 164.60543823]
[55.71864700 152.17424011]
[64.11302185 139.74305725]
[72.50739288 127.31185913]
[80.90176392 114.88066864]
[74.68993378 103.13739014]
[75.48081207 89.18984222]
[83.74856567 77.08951569]
[97.69904327 70.70841980]
[83.96740723 64.67169189]
[70.23576355 58.63496017]
[56.50412750 52.59823227]
[42.77248764 46.56150436]
[29.04084969 40.52477264]
[15.30921078 34.48804474]
[0.67412186 40.45375824]
[-13.86023426 34.24666214]
[-19.67088318 19.54931831]
[-13.31046867 5.08139944]
[1.44748735 -0.57353497]
[15.84735107 5.93948746]
[21.34593964 20.75640678]
[35.07757950 26.79313469]
[48.80921555 32.82986450]
[62.54085541 38.86659241]
[76.27249146 44.90332413]
[90.00413513 50.94005203]
[103.73577118 56.97678375]
[91.50257874 48.29640579]
[87.14258575 33.94403839]
[92.48038483 19.92591095]
[105.28218842 12.10838223]
[120.19065857 13.76296234]
[130.96682739 24.19723701]
[133.10105896 39.04462814]
[125.69925690 52.09258652]
[135.57841492 40.80533218]
[145.45758057 29.51807976]
[155.24824524 18.15396690]
[164.94979858 6.71368980]
[174.56164551 -4.80205441]
[184.08320618 -16.39256096]
[193.60476685 -27.98307037]
[192.25352478 -43.50118256]
[202.07484436 -55.11996841]
[216.87731934 -56.31254196]
[226.39889526 -67.90304565]
[226.95620728 -72.22772980]
[228.69027710 -75.78870392]
[231.21501160 -78.30912781]
[234.09403992 -79.66653442]
[236.89558411 -79.89585876]
[247.12271118 -90.86882782]
[257.34982300 -101.84179688]
[267.57693481 -112.81476593]
[268.40338135 -117.09617615]
[270.35653687 -120.54185486]
[273.03381348 -122.89961243]
[275.99203491 -124.07448578]
[278.80242920 -124.12832642]
[289.69512939 -134.44088745]
[300.58786011 -144.75344849]
[311.39965820 -155.15080261]
[322.12985229 -165.63235474]
[332.86004639 -176.11389160]
[343.59027100 -186.59542847]
[343.94152832 -202.16830444]
[354.97277832 -212.64521790]
[369.81698608 -212.21437073]
[380.54718018 -222.69590759]
[391.27740479 -233.17745972]
[389.17623901 -248.43823242]
[396.37979126 -261.85324097]
[409.94091797 -268.37704468]
[424.56805420 -265.69662476]
[435.29824829 -276.17819214]
[446.02847290 -286.65972900]
[456.75866699 -297.14126587]
[458.38372803 -313.10180664]
[471.95281982 -321.66098022]
[487.05688477 -316.25292969]
[492.10937500 -301.02624512]
[483.23446655 -287.66152954]
[467.24020386 -286.41107178]
[456.51000977 -275.92950439]
[445.77981567 -265.44796753]
[435.04959106 -254.96643066]
[437.38635254 -240.28047180]
[430.54644775 -226.87600708]
[416.96624756 -219.98892212]
[401.75894165 -222.44725037]
[391.02871704 -211.96571350]
[380.29852295 -201.48417664]
[380.38125610 -186.63395691]
[369.64862061 -175.85133362]
[354.07180786 -175.86523438]
[343.34158325 -165.38368225]
[332.61138916 -154.90214539]
[321.88119507 -144.42060852]
[319.29098511 -137.49220276]
[310.90042114 -133.86073303]
[300.00769043 -123.54817200]
[289.11499023 -113.23561859]
[278.54992676 -102.58765411]
[268.32278442 -91.61467743]
[258.09567261 -80.64170837]
[247.86856079 -69.66873932]
[237.98939514 -58.38148880]
[228.46783447 -46.79098129]
[230.17158508 -32.03859711]
[220.68048096 -20.14853477]
[205.19526672 -18.46150780]
[195.67370605 -6.87100029]
[186.15214539 4.71950722]
[184.33395386 11.88931370]
[176.39007568 16.41523933]
[166.68852234 27.85551643]
[164.75848389 34.99602890]
[156.74484253 39.39724731]
[146.86567688 50.68449783]
[136.98651123 61.97175217]
[137.33815002 76.96762848]
[147.73551941 87.77941895]
[158.13287354 98.59120941]
[173.70252991 99.06416321]
[184.09292603 110.17696381]
[183.54608154 125.01733398]
[193.94345093 135.82911682]
[204.34082031 146.64091492]
[220.23687744 150.67167664]
[224.43316650 166.52485657]
[212.61289978 177.89205933]
[196.93574524 173.07966614]
[193.52902222 157.03828430]
[183.13165283 146.22648621]
[172.73429871 135.41470337]
[157.88389587 135.38139343]
[147.18547058 124.56481934]
[147.32109070 108.98857117]
[136.92372131 98.17678833]
[126.52635956 87.36499786]
[126.25208282 108.70670319]
[112.10906219 122.93420410]
[93.33295441 123.27503967]
[84.93858337 135.70623779]
[76.54421234 148.13742065]
[68.14984131 160.56861877]
[59.75546646 172.99981689]
[51.36109543 185.43099976]
[42.96672440 197.86219788]
[45.76517105 213.18559265]
[37.07499695 225.67300415]
[22.44923592 228.24645996]
[14.05486584 240.67765808]
[13.68949509 245.90090942]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 39]
[3 38]
[5 37]
[6 36]
[7 35]
[10 32]
[11 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[40 199]
[41 198]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[49 190]
[50 189]
[54 73]
[55 72]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[81 166]
[82 165]
[83 164]
[84 162]
[85 161]
[86 159]
[87 158]
[88 157]
[91 154]
[92 153]
[97 152]
[98 151]
[99 150]
[100 149]
[105 148]
[106 147]
[107 146]
[108 144]
[109 143]
[110 142]
[111 141]
[114 138]
[115 137]
[116 136]
[120 132]
[121 131]
[122 130]
[123 129]
[167 186]
[168 185]
[169 184]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
