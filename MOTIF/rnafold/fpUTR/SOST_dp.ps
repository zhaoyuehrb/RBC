%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SOST)
} def

/sequence { (\
AGAGCCUGUGCUACUGGAAGGUGGCGUGCCCUCCUCUGGCUGGUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.067202049 ubox
1 15 0.030547148 ubox
1 32 0.012734914 ubox
1 37 0.014236816 ubox
2 6 0.069585907 ubox
2 14 0.032273024 ubox
2 31 0.014628273 ubox
2 33 0.021884424 ubox
2 36 0.015068034 ubox
3 12 0.041130607 ubox
3 32 0.022060668 ubox
3 35 0.015057221 ubox
3 41 0.044890515 ubox
4 11 0.041909575 ubox
4 22 0.010103822 ubox
4 25 0.032505759 ubox
4 27 0.003221121 ubox
4 29 0.023637928 ubox
4 31 0.021773936 ubox
4 34 0.014597715 ubox
4 40 0.046078683 ubox
4 44 0.555939939 ubox
5 10 0.041741587 ubox
5 17 0.017335950 ubox
5 21 0.010620321 ubox
5 24 0.032531749 ubox
5 26 0.003602358 ubox
5 28 0.023807819 ubox
5 39 0.046074638 ubox
5 43 0.568304131 ubox
6 16 0.017360233 ubox
6 17 0.003240529 ubox
6 20 0.010634563 ubox
6 23 0.032461004 ubox
6 38 0.046013642 ubox
6 42 0.567384099 ubox
6 43 0.069353884 ubox
7 16 0.003216750 ubox
7 19 0.010564566 ubox
7 28 0.022431459 ubox
7 42 0.071075063 ubox
7 45 0.005587994 ubox
8 14 0.014243094 ubox
8 25 0.004029256 ubox
8 27 0.029708854 ubox
8 29 0.014985588 ubox
8 37 0.004803375 ubox
8 40 0.032581472 ubox
8 41 0.138788557 ubox
8 44 0.005654416 ubox
8 46 0.657506240 ubox
9 13 0.012908614 ubox
9 26 0.078303372 ubox
9 28 0.013435310 ubox
9 39 0.026374561 ubox
9 42 0.004289542 ubox
9 45 0.660203131 ubox
10 22 0.016985357 ubox
10 25 0.480077258 ubox
10 40 0.571242319 ubox
10 41 0.004059272 ubox
10 44 0.661050473 ubox
11 17 0.010089949 ubox
11 20 0.020215342 ubox
11 21 0.017068992 ubox
11 24 0.480578309 ubox
11 39 0.572163361 ubox
11 43 0.661256855 ubox
12 16 0.009104707 ubox
12 19 0.019659009 ubox
12 20 0.016646932 ubox
12 23 0.480366378 ubox
12 38 0.571418500 ubox
12 42 0.660536572 ubox
12 45 0.005840268 ubox
13 22 0.480491622 ubox
13 37 0.562204575 ubox
13 41 0.654100918 ubox
13 44 0.008092058 ubox
14 20 0.009838732 ubox
14 21 0.480531006 ubox
14 39 0.660287855 ubox
14 43 0.008291748 ubox
15 19 0.012031892 ubox
15 20 0.468024853 ubox
15 38 0.658060483 ubox
15 42 0.008268034 ubox
16 34 0.574261774 ubox
16 35 0.006442191 ubox
16 36 0.006285059 ubox
16 37 0.657147792 ubox
16 41 0.008392155 ubox
17 33 0.574351289 ubox
17 34 0.006754652 ubox
17 35 0.003284858 ubox
17 36 0.659728482 ubox
17 40 0.008502386 ubox
18 32 0.558932568 ubox
18 35 0.471935290 ubox
19 32 0.103262114 ubox
19 35 0.459285199 ubox
20 30 0.558786052 ubox
20 31 0.137747261 ubox
20 32 0.032229187 ubox
20 33 0.093734735 ubox
20 34 0.650416331 ubox
20 37 0.008113829 ubox
20 47 0.044240645 ubox
21 29 0.559808863 ubox
21 30 0.134593391 ubox
21 31 0.046245722 ubox
21 32 0.085727446 ubox
21 33 0.649651735 ubox
21 34 0.004233247 ubox
21 36 0.008112145 ubox
21 46 0.044628731 ubox
22 26 0.003651566 ubox
22 28 0.551762647 ubox
22 45 0.044579137 ubox
23 27 0.256082976 ubox
23 30 0.263256070 ubox
23 31 0.600401613 ubox
23 32 0.041378488 ubox
23 34 0.009024077 ubox
23 44 0.044118622 ubox
24 29 0.265323945 ubox
24 30 0.596573990 ubox
24 31 0.043354667 ubox
24 33 0.009014134 ubox
24 44 0.005564408 ubox
25 42 0.043865064 ubox
25 43 0.007510291 ubox
26 41 0.041344277 ubox
26 46 0.471120104 ubox
27 45 0.473534894 ubox
28 40 0.074505559 ubox
28 41 0.003336603 ubox
28 44 0.474369632 ubox
29 39 0.073051449 ubox
29 43 0.474160347 ubox
30 38 0.071319234 ubox
30 39 0.041530641 ubox
30 42 0.472208915 ubox
30 43 0.022864492 ubox
31 38 0.056079959 ubox
31 39 0.040371596 ubox
31 42 0.029643242 ubox
32 38 0.037812112 ubox
32 39 0.041365277 ubox
33 38 0.044733742 ubox
33 39 0.463939717 ubox
33 43 0.012136227 ubox
34 38 0.460863738 ubox
34 42 0.012564753 ubox
34 43 0.003989489 ubox
35 42 0.003381826 ubox
35 43 0.005093193 ubox
36 42 0.006751609 ubox
38 47 0.011750570 ubox
39 46 0.011842159 ubox
4 44 0.9500000 lbox
5 43 0.9500000 lbox
6 42 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
showpage
end
%%EOF
