%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TAF9B)
} def

/sequence { (\
GGAGCCUGAGCGAGGAGCCCGCGAGCUCUCCUCUCUCCUCUGUCUCCGCGGAUGACGAGUGGCUGGAUAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004953627 ubox
1 19 0.045607556 ubox
1 20 0.014523495 ubox
1 29 0.074981475 ubox
1 30 0.007038138 ubox
1 31 0.019526505 ubox
1 34 0.004627974 ubox
1 36 0.006951829 ubox
1 37 0.003180131 ubox
1 38 0.830924180 ubox
1 39 0.007229693 ubox
1 40 0.014273302 ubox
1 41 0.202331018 ubox
1 44 0.003567498 ubox
1 45 0.004557289 ubox
1 47 0.028308556 ubox
1 64 0.004910597 ubox
2 6 0.005130239 ubox
2 18 0.046057588 ubox
2 19 0.013863170 ubox
2 28 0.090039010 ubox
2 30 0.019542596 ubox
2 33 0.005988574 ubox
2 35 0.008414285 ubox
2 37 0.832486704 ubox
2 38 0.007533107 ubox
2 39 0.007508880 ubox
2 40 0.274862649 ubox
2 43 0.003203809 ubox
2 44 0.005969160 ubox
2 46 0.028357096 ubox
2 63 0.003287511 ubox
3 27 0.090223360 ubox
3 29 0.019418198 ubox
3 32 0.006003235 ubox
3 34 0.008423396 ubox
3 36 0.832282624 ubox
3 39 0.275326647 ubox
3 41 0.012406144 ubox
3 43 0.005906289 ubox
3 45 0.028352341 ubox
3 64 0.451525364 ubox
4 11 0.011707313 ubox
4 18 0.013295427 ubox
4 26 0.090328717 ubox
4 28 0.018448584 ubox
4 31 0.005965171 ubox
4 33 0.006695519 ubox
4 35 0.829544937 ubox
4 38 0.274852850 ubox
4 40 0.014450693 ubox
4 43 0.003786586 ubox
4 44 0.028124852 ubox
4 63 0.463545855 ubox
5 10 0.011769678 ubox
5 15 0.046513342 ubox
5 17 0.013035008 ubox
5 25 0.087053265 ubox
5 42 0.022767765 ubox
5 62 0.463584637 ubox
5 66 0.013915609 ubox
6 14 0.046621684 ubox
6 15 0.012668065 ubox
6 25 0.025676297 ubox
6 61 0.462690463 ubox
6 62 0.004226970 ubox
6 65 0.013924716 ubox
6 66 0.006625819 ubox
7 13 0.046446255 ubox
7 14 0.012453236 ubox
7 21 0.031271737 ubox
7 23 0.029209599 ubox
7 24 0.033951587 ubox
7 58 0.005982396 ubox
7 61 0.005585105 ubox
7 65 0.006278897 ubox
8 20 0.032519712 ubox
8 22 0.027708729 ubox
8 28 0.022305572 ubox
8 33 0.842378243 ubox
8 35 0.049377493 ubox
8 37 0.520194899 ubox
8 40 0.017610796 ubox
8 46 0.003336997 ubox
8 60 0.004196907 ubox
9 27 0.022726588 ubox
9 32 0.843169507 ubox
9 34 0.050661976 ubox
9 36 0.521814163 ubox
9 39 0.017569938 ubox
9 45 0.003374301 ubox
9 64 0.011177066 ubox
10 18 0.043351685 ubox
10 22 0.080780185 ubox
10 26 0.022740593 ubox
10 31 0.843074316 ubox
10 33 0.049197618 ubox
10 35 0.521725745 ubox
10 38 0.017443172 ubox
10 44 0.003351808 ubox
10 60 0.007547229 ubox
10 63 0.011927515 ubox
11 17 0.043394451 ubox
11 21 0.080874234 ubox
11 23 0.008107747 ubox
11 25 0.022567167 ubox
11 42 0.003222742 ubox
11 57 0.004560717 ubox
11 59 0.007574774 ubox
11 62 0.011814552 ubox
12 20 0.080017221 ubox
12 22 0.010158588 ubox
12 28 0.006136182 ubox
12 30 0.815766919 ubox
12 33 0.522775146 ubox
12 35 0.008111354 ubox
12 37 0.012757770 ubox
12 40 0.011525788 ubox
13 27 0.006109682 ubox
13 29 0.775418644 ubox
13 32 0.522962469 ubox
13 34 0.008148979 ubox
13 36 0.012727447 ubox
13 39 0.011559943 ubox
14 20 0.024318970 ubox
14 26 0.006047871 ubox
14 28 0.577014553 ubox
14 29 0.336758420 ubox
14 30 0.048194662 ubox
14 31 0.517077222 ubox
14 33 0.007425560 ubox
14 35 0.011747466 ubox
14 38 0.011565755 ubox
15 19 0.024283701 ubox
15 26 0.006644800 ubox
15 27 0.250112866 ubox
15 28 0.638686387 ubox
15 29 0.006131800 ubox
15 30 0.496966278 ubox
15 33 0.005005671 ubox
15 37 0.011561447 ubox
16 27 0.845577098 ubox
16 29 0.449290958 ubox
16 32 0.004941338 ubox
16 36 0.011548366 ubox
17 26 0.921091426 ubox
17 28 0.368984997 ubox
17 31 0.004767086 ubox
17 35 0.011464477 ubox
18 25 0.928697716 ubox
19 66 0.003368317 ubox
20 65 0.004221859 ubox
22 65 0.011216871 ubox
23 30 0.006184236 ubox
23 33 0.010304547 ubox
23 64 0.005584494 ubox
24 29 0.005807159 ubox
24 32 0.010324417 ubox
24 64 0.024135600 ubox
25 31 0.010253321 ubox
25 63 0.025374804 ubox
26 62 0.024999542 ubox
26 66 0.024147380 ubox
27 61 0.022515147 ubox
27 65 0.023591789 ubox
27 66 0.010640251 ubox
27 67 0.025687026 ubox
28 59 0.013829356 ubox
28 61 0.007435222 ubox
28 65 0.013561817 ubox
28 66 0.027594600 ubox
29 58 0.013849154 ubox
29 65 0.025714833 ubox
29 67 0.025938138 ubox
30 57 0.013822050 ubox
30 61 0.006707768 ubox
30 62 0.090598821 ubox
30 66 0.032239026 ubox
31 59 0.023067747 ubox
31 61 0.091965895 ubox
31 62 0.006719990 ubox
31 65 0.032180209 ubox
31 66 0.006587503 ubox
32 55 0.011144825 ubox
32 58 0.023150671 ubox
32 61 0.006833671 ubox
32 62 0.007788511 ubox
32 65 0.006358819 ubox
32 66 0.004640698 ubox
32 67 0.021906342 ubox
33 54 0.011215142 ubox
33 57 0.023129574 ubox
33 59 0.098358547 ubox
33 61 0.009264091 ubox
33 62 0.011259048 ubox
33 65 0.005790549 ubox
33 66 0.023421302 ubox
34 55 0.016768561 ubox
34 58 0.112039015 ubox
34 61 0.010440082 ubox
34 62 0.015673955 ubox
34 65 0.022655699 ubox
34 66 0.005257711 ubox
34 67 0.012454485 ubox
35 54 0.017023662 ubox
35 57 0.113309955 ubox
35 59 0.036476736 ubox
35 61 0.017003200 ubox
35 62 0.021088841 ubox
35 65 0.007363994 ubox
35 66 0.013359662 ubox
36 52 0.013539706 ubox
36 55 0.116780193 ubox
36 58 0.036885868 ubox
36 61 0.020416879 ubox
36 62 0.011996781 ubox
36 65 0.012312738 ubox
36 67 0.004628023 ubox
37 51 0.013708945 ubox
37 54 0.117558813 ubox
37 57 0.036766566 ubox
37 61 0.016282771 ubox
37 62 0.027459660 ubox
37 66 0.005047409 ubox
38 50 0.013690497 ubox
38 59 0.440243024 ubox
38 61 0.028368560 ubox
38 65 0.005046949 ubox
38 66 0.003199880 ubox
39 52 0.133026876 ubox
39 55 0.032251491 ubox
39 58 0.444252996 ubox
39 61 0.004639426 ubox
39 62 0.005753947 ubox
39 65 0.003804004 ubox
39 66 0.036887104 ubox
39 67 0.126359697 ubox
40 51 0.136324990 ubox
40 54 0.032475713 ubox
40 57 0.437343092 ubox
40 59 0.056822114 ubox
40 61 0.007387263 ubox
40 62 0.005175810 ubox
40 65 0.043952503 ubox
40 66 0.135023120 ubox
41 48 0.009878061 ubox
41 50 0.136263204 ubox
41 54 0.028056141 ubox
41 57 0.118987446 ubox
41 58 0.049756436 ubox
41 61 0.004969515 ubox
41 65 0.131115520 ubox
41 69 0.777753406 ubox
42 47 0.009922699 ubox
42 49 0.136263457 ubox
42 53 0.059939367 ubox
42 56 0.457499028 ubox
42 60 0.003794847 ubox
42 63 0.093524951 ubox
42 64 0.093199180 ubox
42 68 0.851706641 ubox
42 71 0.015353679 ubox
43 48 0.128686465 ubox
43 51 0.006061705 ubox
43 52 0.061485269 ubox
43 55 0.457889078 ubox
43 62 0.091345096 ubox
43 66 0.039043918 ubox
43 67 0.857166817 ubox
43 70 0.014526288 ubox
44 50 0.006378378 ubox
44 51 0.061535919 ubox
44 54 0.457774463 ubox
44 59 0.010459894 ubox
44 61 0.090627157 ubox
44 62 0.026361947 ubox
44 65 0.057332816 ubox
44 66 0.857753820 ubox
45 50 0.055894754 ubox
45 51 0.013734559 ubox
45 52 0.430474635 ubox
45 58 0.011315265 ubox
45 61 0.025285005 ubox
45 65 0.793383147 ubox
45 66 0.006608149 ubox
45 67 0.058683547 ubox
46 50 0.018093572 ubox
46 51 0.436145440 ubox
46 57 0.010398851 ubox
46 61 0.005025136 ubox
46 62 0.862953158 ubox
46 65 0.039957433 ubox
46 66 0.062695993 ubox
47 54 0.004669038 ubox
47 57 0.011507546 ubox
47 61 0.865851877 ubox
47 65 0.062744686 ubox
48 53 0.004060441 ubox
48 56 0.012210959 ubox
48 60 0.861835737 ubox
48 63 0.084831880 ubox
48 64 0.020089974 ubox
49 57 0.166557426 ubox
49 59 0.854742360 ubox
49 61 0.012702842 ubox
49 62 0.085577626 ubox
49 65 0.009812841 ubox
50 56 0.245415662 ubox
50 60 0.012838154 ubox
50 64 0.010308117 ubox
51 63 0.010404100 ubox
52 60 0.036940490 ubox
53 59 0.037332842 ubox
53 61 0.003290188 ubox
54 60 0.005462218 ubox
56 65 0.008951850 ubox
57 64 0.007352064 ubox
58 64 0.008610089 ubox
59 63 0.008757858 ubox
59 68 0.013968341 ubox
59 71 0.009545555 ubox
60 67 0.014356199 ubox
60 69 0.006621120 ubox
60 70 0.009514720 ubox
61 68 0.007182321 ubox
1 38 0.9500000 lbox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
41 69 0.9500000 lbox
42 68 0.9500000 lbox
43 67 0.9500000 lbox
44 66 0.9500000 lbox
45 65 0.9500000 lbox
46 62 0.9500000 lbox
47 61 0.9500000 lbox
48 60 0.9500000 lbox
49 59 0.9500000 lbox
showpage
end
%%EOF
