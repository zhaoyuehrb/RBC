%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRTFDC1)
} def

/sequence { (\
CCCACGCAGCCUUCGCCCUCCCUGCUCCUUCCCGCGCCGUCUUCCCUUCCCGCGUUCCCCGGGAGAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 62 0.003529569 ubox
1 63 0.061213234 ubox
2 61 0.003529057 ubox
2 62 0.061486337 ubox
2 63 0.006783542 ubox
3 24 0.018198862 ubox
3 61 0.061425415 ubox
3 62 0.006756342 ubox
4 23 0.017670424 ubox
4 40 0.075072337 ubox
4 55 0.023037228 ubox
5 15 0.033891131 ubox
5 24 0.009632345 ubox
5 34 0.007035686 ubox
5 36 0.100154103 ubox
5 39 0.080362577 ubox
5 54 0.023280312 ubox
5 61 0.004125348 ubox
6 14 0.033731052 ubox
6 16 0.167277694 ubox
6 23 0.008246422 ubox
6 25 0.940583784 ubox
6 33 0.005939288 ubox
6 35 0.102048180 ubox
6 37 0.047524838 ubox
6 38 0.072856865 ubox
6 40 0.023820376 ubox
6 53 0.023235891 ubox
7 15 0.167526161 ubox
7 24 0.943253853 ubox
7 34 0.101945074 ubox
7 36 0.056898897 ubox
7 39 0.024860928 ubox
7 52 0.023224054 ubox
8 19 0.027137015 ubox
8 23 0.941578418 ubox
8 26 0.080045216 ubox
8 29 0.013072437 ubox
8 30 0.004762020 ubox
8 42 0.016487620 ubox
9 16 0.233519949 ubox
9 18 0.031611610 ubox
9 22 0.918896989 ubox
9 25 0.083408259 ubox
9 28 0.013208893 ubox
9 29 0.004082535 ubox
9 35 0.071747293 ubox
9 37 0.032870573 ubox
9 40 0.017589059 ubox
9 41 0.017624226 ubox
10 15 0.248919903 ubox
10 24 0.083202994 ubox
10 34 0.071638534 ubox
10 36 0.032092930 ubox
10 39 0.020186381 ubox
12 67 0.018368818 ubox
13 66 0.020360325 ubox
14 24 0.009339090 ubox
14 34 0.014907948 ubox
14 36 0.037251220 ubox
14 39 0.005628973 ubox
14 65 0.020082816 ubox
15 23 0.008753158 ubox
15 25 0.100814601 ubox
15 33 0.014711875 ubox
15 35 0.041364179 ubox
15 37 0.013069625 ubox
15 38 0.005068020 ubox
15 40 0.004258389 ubox
16 24 0.100843941 ubox
16 34 0.041298102 ubox
16 36 0.013292013 ubox
16 39 0.004430998 ubox
16 63 0.013200569 ubox
17 62 0.013220146 ubox
18 61 0.013189389 ubox
18 65 0.169924177 ubox
19 64 0.170501739 ubox
19 66 0.017194876 ubox
20 63 0.170085138 ubox
20 65 0.017877275 ubox
21 62 0.169566726 ubox
21 63 0.021735353 ubox
22 61 0.168747433 ubox
22 62 0.025273575 ubox
22 65 0.010040993 ubox
23 34 0.006580317 ubox
23 36 0.084194489 ubox
23 54 0.011833922 ubox
23 61 0.028313111 ubox
23 64 0.009539986 ubox
24 33 0.020677781 ubox
24 35 0.124714959 ubox
24 37 0.019010614 ubox
24 53 0.012199122 ubox
24 55 0.006027646 ubox
24 60 0.080573035 ubox
25 34 0.124931298 ubox
25 36 0.019167911 ubox
25 39 0.003308351 ubox
25 52 0.012186433 ubox
25 54 0.005311459 ubox
25 62 0.007676812 ubox
25 63 0.005296838 ubox
25 65 0.166003294 ubox
26 61 0.007455162 ubox
26 62 0.004578154 ubox
26 63 0.023334442 ubox
26 64 0.195613696 ubox
26 66 0.221593891 ubox
27 61 0.005481707 ubox
27 62 0.028603640 ubox
27 63 0.198371394 ubox
27 65 0.221426790 ubox
28 61 0.029003887 ubox
28 62 0.198283900 ubox
28 63 0.006615991 ubox
28 65 0.410087307 ubox
29 61 0.191142455 ubox
29 62 0.006253525 ubox
29 64 0.341915274 ubox
29 65 0.661736983 ubox
29 66 0.046787747 ubox
29 67 0.030638582 ubox
29 68 0.011762159 ubox
30 61 0.007982905 ubox
30 63 0.247637877 ubox
30 64 0.837225376 ubox
30 65 0.027435261 ubox
30 66 0.026378625 ubox
30 67 0.005801000 ubox
31 61 0.004377668 ubox
31 62 0.246863599 ubox
31 63 0.883001797 ubox
31 65 0.024858510 ubox
32 61 0.245616018 ubox
32 62 0.883379661 ubox
32 63 0.019012310 ubox
33 39 0.047762118 ubox
33 54 0.240496601 ubox
33 61 0.883387657 ubox
33 62 0.018913181 ubox
34 38 0.045734962 ubox
34 40 0.023212831 ubox
34 53 0.245143137 ubox
34 55 0.548607534 ubox
34 60 0.736702902 ubox
35 39 0.024158217 ubox
35 52 0.245724408 ubox
35 54 0.867093502 ubox
35 61 0.005072026 ubox
36 51 0.238264873 ubox
36 53 0.868360156 ubox
36 55 0.165872125 ubox
36 60 0.005682469 ubox
37 52 0.816136877 ubox
37 54 0.164932516 ubox
38 52 0.333881965 ubox
38 54 0.259116186 ubox
39 51 0.437286478 ubox
39 53 0.263953165 ubox
39 55 0.005748500 ubox
39 69 0.045856850 ubox
40 52 0.255985025 ubox
40 54 0.005354294 ubox
40 66 0.048506414 ubox
40 68 0.045544799 ubox
41 65 0.052101990 ubox
42 64 0.044726218 ubox
42 65 0.024718810 ubox
42 66 0.014970408 ubox
42 67 0.100097470 ubox
42 68 0.019250668 ubox
43 63 0.036957030 ubox
43 64 0.036743894 ubox
43 65 0.012789342 ubox
43 66 0.109653845 ubox
43 67 0.021671692 ubox
44 62 0.036854659 ubox
44 63 0.043453380 ubox
44 65 0.109064445 ubox
45 61 0.036719088 ubox
45 62 0.043498172 ubox
45 63 0.004177894 ubox
46 61 0.043482512 ubox
46 62 0.004110435 ubox
46 65 0.101710235 ubox
47 61 0.003755130 ubox
47 64 0.074098584 ubox
47 65 0.201342048 ubox
47 66 0.014219174 ubox
47 67 0.014969725 ubox
47 68 0.003576386 ubox
48 63 0.022402893 ubox
48 64 0.270175358 ubox
48 65 0.008413807 ubox
48 66 0.015300399 ubox
49 62 0.021395200 ubox
49 63 0.282930809 ubox
49 65 0.015204629 ubox
50 61 0.020246744 ubox
50 62 0.283052207 ubox
50 63 0.015562664 ubox
51 61 0.283108386 ubox
51 62 0.015578171 ubox
52 60 0.277791133 ubox
53 61 0.015342116 ubox
54 60 0.020606879 ubox
55 65 0.014891375 ubox
56 64 0.020762900 ubox
57 63 0.021302052 ubox
58 62 0.021150890 ubox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
29 65 0.9500000 lbox
30 64 0.9500000 lbox
31 63 0.9500000 lbox
32 62 0.9500000 lbox
33 61 0.9500000 lbox
34 60 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
showpage
end
%%EOF
