%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCGGAAGGCACGCGGAACCUCGGCGCGGUGCUUCCAGCAGGGUCUCUCCGCCACUCCAGCCCCGCGCCCCUCGCCGCGGCCCUCGGGCGUCUGCGCCGCAGCUGCCGCCCCCGCCUCUUUGGAGUCUCUCGCGGCCUCAAAGCGCGGCCUGCGUCGCUUCCGGCAGUUCCCGACCGCGGGCG\
) } def
/len { sequence length } bind def

/coor [
[96.26960754 110.53811646]
[90.77595520 107.73744202]
[75.78082275 108.11948395]
[60.78568649 108.50153351]
[45.79055023 108.88357544]
[30.79541779 109.26561737]
[21.34781265 118.06853485]
[8.83582878 118.06553650]
[-0.02018839 109.80452728]
[-15.01964760 109.93189240]
[-30.01910782 110.05924988]
[-38.59663391 113.26735687]
[-45.27382660 110.05924988]
[-60.27328873 109.93189240]
[-75.27274323 109.80452728]
[-90.27220917 109.67716980]
[-105.27166748 109.54981232]
[-111.02950287 122.47014618]
[-121.24890900 132.18751526]
[-134.36181641 137.25650024]
[-148.37348938 136.94145203]
[-161.16593933 131.32307434]
[-170.81809998 121.28120422]
[-175.89431763 108.35718536]
[-190.88945007 107.97514343]
[-205.88458252 107.59309387]
[-220.87971497 107.21105194]
[-235.87486267 106.82901001]
[-250.86999512 106.44696045]
[-265.86511230 106.06491852]
[-279.85787964 113.44822693]
[-292.38397217 105.38927460]
[-307.37908936 105.00723267]
[-322.37423706 104.62518311]
[-331.17510986 119.81382751]
[-346.37203979 128.42135620]
[-363.74649048 128.16172791]
[-378.52743530 119.19616699]
[-386.70150757 104.06419373]
[-401.70095825 104.19155884]
[-410.27850342 107.39966583]
[-416.95568848 104.19155884]
[-431.95513916 104.06419373]
[-446.95462036 103.93683624]
[-460.95147705 112.48200226]
[-475.21878052 104.39644623]
[-475.07952881 87.99788666]
[-460.67700195 80.15576172]
[-446.82723999 88.93737793]
[-431.82778931 89.06473541]
[-416.82833862 89.19210052]
[-401.82833862 89.19210052]
[-386.82885742 89.06473541]
[-381.81164551 77.44253540]
[-372.73257446 68.55407715]
[-360.91992188 63.74930954]
[-348.12069702 63.77710724]
[-336.24252319 68.66876221]
[-327.06900024 77.72803497]
[-321.99218750 89.63005066]
[-306.99703979 90.01210022]
[-292.00192261 90.39414215]
[-279.08169556 82.98351288]
[-265.48309326 91.06978607]
[-250.48794556 91.45182800]
[-235.49281311 91.83386993]
[-220.49768066 92.21591949]
[-205.50254822 92.59796143]
[-190.50741577 92.98000336]
[-175.51226807 93.36205292]
[-168.49551392 79.01702118]
[-155.88291931 69.12776184]
[-140.16450500 65.71105957]
[-124.47169495 69.49944305]
[-111.95342255 79.78485107]
[-105.14430237 94.55035400]
[-90.14484406 94.67771149]
[-75.14538574 94.80506897]
[-60.14592743 94.93243408]
[-45.14646912 95.05979156]
[-30.14646721 95.05979156]
[-15.14700794 94.93243408]
[-0.14754872 94.80506897]
[14.45947838 85.09629059]
[30.41337395 94.27048492]
[45.40850830 93.88844299]
[60.40364075 93.50640106]
[75.39877319 93.12435150]
[90.39390564 92.74230957]
[105.38039398 92.10569000]
[120.35390472 91.21468353]
[135.32742310 90.32367706]
[150.30093384 89.43266296]
[165.27444458 88.54165649]
[180.24795532 87.65065002]
[195.22148132 86.75964355]
[210.19499207 85.86863708]
[225.31338501 75.37450409]
[240.69114685 83.80954742]
[255.64736938 82.66440582]
[270.58538818 71.91506958]
[286.10418701 80.08776093]
[301.03878784 78.68881989]
[315.97341919 77.28987885]
[330.90805054 75.89093018]
[345.84265137 74.49198914]
[360.77728271 73.09304047]
[375.71191406 71.69409943]
[390.64654541 70.29515076]
[377.31427002 63.42121887]
[367.85839844 51.77706909]
[363.86666870 37.31794739]
[366.00936890 22.47177887]
[373.92672729 9.73147106]
[386.28927612 1.23633015]
[401.02114868 -1.58717167]
[415.64862061 1.73507714]
[427.71548462 10.64521694]
[435.19555664 23.64709091]
[436.83276367 38.55747223]
[432.35223389 52.87266922]
[422.50631714 64.18892670]
[408.94857788 70.60597992]
[423.82708740 72.51124573]
[438.70559692 74.41651154]
[453.58410645 76.32178497]
[468.46261597 78.22705078]
[476.29360962 69.24591827]
[487.37799072 65.21157837]
[498.91268921 67.02079010]
[508.03997803 74.10789490]
[512.55548096 84.61434937]
[527.36071777 87.02374268]
[542.16589355 89.43313599]
[556.99108887 91.71673584]
[571.83508301 93.87437439]
[586.67907715 96.03202057]
[601.52307129 98.18965912]
[611.56604004 86.47884369]
[626.35253906 82.07859802]
[641.16436768 86.39302063]
[651.27502441 98.04538727]
[653.45831299 113.31748199]
[647.01751709 127.33602905]
[634.00787354 135.62776184]
[618.58068848 135.54681396]
[605.65881348 127.11902618]
[599.36547852 113.03366852]
[584.52142334 110.87602234]
[569.67742920 108.71838379]
[554.83343506 106.56074524]
[547.74566650 108.71492004]
[539.75653076 104.23836517]
[524.95129395 101.82897186]
[510.14605713 99.41957855]
[495.98394775 110.99305725]
[477.54058838 108.52011108]
[466.55734253 93.10555267]
[451.67883301 91.20028687]
[436.80032349 89.29502106]
[421.92181396 87.38975525]
[407.04330444 85.48448944]
[392.04547119 85.22977448]
[377.11083984 86.62872314]
[362.17623901 88.02766418]
[347.24160767 89.42660522]
[332.30697632 90.82555389]
[317.37237549 92.22449493]
[302.43774414 93.62344360]
[287.50311279 95.02238464]
[279.53329468 104.14132690]
[267.08648682 105.41693878]
[256.79251099 97.62062836]
[241.83628845 98.76576996]
[233.71275330 107.74806213]
[221.24610901 108.81213379]
[211.08599854 100.84214783]
[196.11248779 101.73315430]
[181.13896179 102.62416077]
[166.16545105 103.51517487]
[151.19194031 104.40618134]
[136.21842957 105.29718781]
[121.24491882 106.18819427]
[106.27140045 107.07920074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 89]
[3 88]
[4 87]
[5 86]
[6 85]
[9 83]
[10 82]
[11 81]
[13 80]
[14 79]
[15 78]
[16 77]
[17 76]
[24 70]
[25 69]
[26 68]
[27 67]
[28 66]
[29 65]
[30 64]
[32 62]
[33 61]
[34 60]
[39 53]
[40 52]
[42 51]
[43 50]
[44 49]
[90 184]
[91 183]
[92 182]
[93 181]
[94 180]
[95 179]
[96 178]
[97 177]
[99 174]
[100 173]
[102 170]
[103 169]
[104 168]
[105 167]
[106 166]
[107 165]
[108 164]
[109 163]
[123 162]
[124 161]
[125 160]
[126 159]
[127 158]
[132 155]
[133 154]
[134 153]
[135 151]
[136 150]
[137 149]
[138 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
