%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MED6)
} def

/sequence { (\
AGGCUUACGUUUACUUUGCGCCGGAAAGAGAACCUGUAAACGCUCUCGGAAUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.004402722 ubox
1 12 0.106881259 ubox
1 15 0.021652332 ubox
1 16 0.012000871 ubox
1 17 0.003734578 ubox
1 35 0.015592953 ubox
1 44 0.055633742 ubox
1 46 0.267852628 ubox
1 53 0.008347944 ubox
2 10 0.005406521 ubox
2 11 0.125005863 ubox
2 12 0.006472350 ubox
2 14 0.025001724 ubox
2 15 0.016956755 ubox
2 16 0.003853369 ubox
2 22 0.305344521 ubox
2 34 0.016512255 ubox
2 35 0.004544008 ubox
2 43 0.060693682 ubox
2 44 0.629499073 ubox
2 45 0.305988870 ubox
2 46 0.074423880 ubox
2 47 0.114392824 ubox
2 52 0.010250012 ubox
2 53 0.006763928 ubox
3 10 0.132934900 ubox
3 11 0.005517302 ubox
3 14 0.017394907 ubox
3 19 0.176053081 ubox
3 21 0.305784878 ubox
3 33 0.015999809 ubox
3 34 0.004916933 ubox
3 37 0.031626672 ubox
3 43 0.730425910 ubox
3 44 0.071993008 ubox
3 45 0.081649565 ubox
3 46 0.102022838 ubox
3 52 0.007868236 ubox
4 9 0.133493215 ubox
4 18 0.176159811 ubox
4 20 0.301468201 ubox
4 24 0.068840388 ubox
4 28 0.006168470 ubox
4 30 0.005853699 ubox
4 36 0.032192599 ubox
4 42 0.727408870 ubox
4 49 0.060577189 ubox
5 23 0.068186992 ubox
5 24 0.004529452 ubox
5 25 0.007933441 ubox
5 26 0.004559727 ubox
5 27 0.006295980 ubox
5 29 0.005867067 ubox
5 31 0.005135302 ubox
5 32 0.005951482 ubox
5 39 0.607125385 ubox
5 40 0.147712550 ubox
5 48 0.058816000 ubox
5 49 0.006590941 ubox
5 50 0.013700692 ubox
5 51 0.025472311 ubox
6 13 0.013240343 ubox
6 18 0.121866854 ubox
6 23 0.005038492 ubox
6 24 0.008284671 ubox
6 26 0.005875021 ubox
6 28 0.005263750 ubox
6 30 0.004826425 ubox
6 31 0.005425588 ubox
6 36 0.039354347 ubox
6 38 0.716973805 ubox
6 39 0.106833398 ubox
6 48 0.007104419 ubox
6 49 0.013311051 ubox
6 50 0.016929813 ubox
7 12 0.013243911 ubox
7 17 0.114531157 ubox
7 35 0.044763082 ubox
7 37 0.727094025 ubox
8 18 0.153342367 ubox
8 20 0.300389927 ubox
8 23 0.009459293 ubox
8 36 0.721341602 ubox
8 42 0.415189882 ubox
8 48 0.053048496 ubox
9 17 0.145601223 ubox
9 19 0.326233532 ubox
9 21 0.006185897 ubox
9 22 0.009034613 ubox
9 33 0.675194259 ubox
9 35 0.259502981 ubox
9 41 0.444135734 ubox
9 43 0.010038503 ubox
9 47 0.053209181 ubox
9 52 0.047525876 ubox
10 18 0.324227459 ubox
10 20 0.006617801 ubox
10 26 0.004044517 ubox
10 27 0.006139677 ubox
10 28 0.003833969 ubox
10 29 0.005228776 ubox
10 30 0.013459113 ubox
10 31 0.107976306 ubox
10 32 0.697729261 ubox
10 40 0.443826975 ubox
10 42 0.009809130 ubox
10 50 0.005349463 ubox
10 51 0.049884459 ubox
11 25 0.004167602 ubox
11 26 0.006363175 ubox
11 27 0.004398029 ubox
11 28 0.004928142 ubox
11 29 0.013502852 ubox
11 30 0.112978786 ubox
11 31 0.699727028 ubox
11 32 0.075267902 ubox
11 39 0.442834434 ubox
11 49 0.005700692 ubox
11 50 0.050860298 ubox
11 51 0.005645577 ubox
12 18 0.008008410 ubox
12 24 0.004047793 ubox
12 25 0.006247996 ubox
12 26 0.004301064 ubox
12 27 0.004421693 ubox
12 28 0.012260314 ubox
12 29 0.115230302 ubox
12 30 0.665174316 ubox
12 31 0.080768739 ubox
12 38 0.442417573 ubox
12 48 0.005211162 ubox
12 49 0.050169845 ubox
12 50 0.006520857 ubox
13 17 0.010809036 ubox
13 37 0.440776866 ubox
14 24 0.009177380 ubox
14 28 0.709057134 ubox
14 30 0.174695780 ubox
14 36 0.435938244 ubox
14 49 0.014167454 ubox
15 23 0.009222594 ubox
15 24 0.008553828 ubox
15 25 0.068511341 ubox
15 26 0.096311136 ubox
15 27 0.710694785 ubox
15 28 0.062746041 ubox
15 29 0.180565503 ubox
15 30 0.033786887 ubox
15 31 0.068989874 ubox
15 32 0.068907208 ubox
15 39 0.003365091 ubox
15 40 0.066131021 ubox
15 48 0.013773738 ubox
15 50 0.008716886 ubox
15 51 0.007379900 ubox
16 23 0.008293291 ubox
16 24 0.072597707 ubox
16 25 0.112959866 ubox
16 26 0.706893634 ubox
16 27 0.071927112 ubox
16 28 0.179520903 ubox
16 29 0.034750205 ubox
16 30 0.069629404 ubox
16 31 0.070556420 ubox
16 32 0.062804801 ubox
16 38 0.003388638 ubox
16 39 0.077263149 ubox
16 40 0.006280362 ubox
16 49 0.008834875 ubox
16 50 0.008305414 ubox
16 51 0.015877102 ubox
17 23 0.078126040 ubox
17 24 0.123988056 ubox
17 25 0.700278752 ubox
17 26 0.078721478 ubox
17 27 0.175879223 ubox
17 28 0.034531427 ubox
17 29 0.069039470 ubox
17 30 0.070027698 ubox
17 31 0.066239811 ubox
17 38 0.082192696 ubox
17 39 0.006643213 ubox
17 42 0.003233370 ubox
17 48 0.008957161 ubox
17 49 0.004390520 ubox
17 50 0.017956024 ubox
18 22 0.082047909 ubox
18 35 0.019138303 ubox
18 37 0.085168125 ubox
18 41 0.004258312 ubox
18 43 0.064838267 ubox
18 47 0.008352580 ubox
19 36 0.086005593 ubox
19 42 0.064899801 ubox
19 48 0.016175400 ubox
20 35 0.072043348 ubox
20 37 0.044598535 ubox
20 41 0.060824171 ubox
20 43 0.011451742 ubox
20 47 0.015945948 ubox
21 36 0.057504240 ubox
21 42 0.010154275 ubox
21 49 0.383209490 ubox
22 36 0.041043349 ubox
22 42 0.009005875 ubox
22 48 0.384505189 ubox
23 34 0.178696564 ubox
23 35 0.054683477 ubox
23 41 0.012168232 ubox
23 44 0.004660643 ubox
23 46 0.013338961 ubox
23 47 0.381257578 ubox
23 53 0.017887767 ubox
24 33 0.179179437 ubox
24 34 0.054841224 ubox
24 43 0.005292893 ubox
24 45 0.059761168 ubox
24 46 0.197887065 ubox
24 47 0.055983112 ubox
24 52 0.021536504 ubox
24 53 0.022764029 ubox
25 44 0.057161228 ubox
25 46 0.051938692 ubox
25 52 0.024145171 ubox
25 53 0.007178672 ubox
26 52 0.006614322 ubox
26 53 0.006228543 ubox
27 35 0.076820546 ubox
27 44 0.031680612 ubox
27 46 0.337993794 ubox
27 52 0.007222109 ubox
28 34 0.078150319 ubox
28 43 0.033547937 ubox
28 45 0.397980110 ubox
28 47 0.280318213 ubox
28 53 0.004482240 ubox
29 35 0.030108501 ubox
29 44 0.397981514 ubox
29 46 0.281446243 ubox
29 52 0.004945870 ubox
30 34 0.030087161 ubox
30 43 0.396676604 ubox
30 45 0.281802601 ubox
30 47 0.009456243 ubox
30 53 0.007223343 ubox
31 44 0.275215837 ubox
31 46 0.009241452 ubox
31 52 0.007912936 ubox
33 49 0.020891576 ubox
34 48 0.021019442 ubox
34 49 0.064249403 ubox
35 42 0.159686452 ubox
35 48 0.064526159 ubox
36 41 0.162579441 ubox
36 43 0.127577837 ubox
36 47 0.064892636 ubox
36 52 0.005611032 ubox
37 42 0.122664975 ubox
37 51 0.005786815 ubox
39 53 0.006439479 ubox
40 52 0.008893375 ubox
41 48 0.068451220 ubox
42 47 0.064711289 ubox
43 49 0.060079743 ubox
44 48 0.054437338 ubox
44 50 0.061731605 ubox
45 49 0.069591217 ubox
2 44 0.9500000 lbox
3 43 0.9500000 lbox
4 42 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
9 33 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
showpage
end
%%EOF
