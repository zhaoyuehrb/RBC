%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGCUGCCUCCAGGAAGCCUCACGGGCCUUCGUCUGCCGGGCCGCGGCGCCGGCUCCCAGGAUGCAGUGUGGACCGGCCGGGCGCUGACGGAGGCGGCGCGACUGCGGGCGGCGCGGCGCAGGGGCAGCCAGCGAGGAGCGGCGGCAGAGGAAAGGCCAGGCAGGCGCCGCCUGCGGAGAGCACCGGGCGGCCGGGCCUGCGUGGUGCCGCGCGCGGCGGCGGCGACGACGACUUCCUCCGGGCCGGGC\
GGGACAGCGCAGGGCC\
) } def
/len { sequence length } bind def

/coor [
[42.03737640 1502.72937012]
[28.73012924 1492.22436523]
[35.14070511 1476.52917480]
[35.48717499 1461.53320312]
[35.83364487 1446.53710938]
[36.18011093 1431.54113770]
[36.35335541 1416.54211426]
[36.35335541 1401.54211426]
[36.35335541 1386.54211426]
[36.35335541 1371.54211426]
[36.35335541 1356.54211426]
[36.35335541 1341.54211426]
[36.26673126 1326.54235840]
[36.09348679 1311.54345703]
[35.92024231 1296.54443359]
[25.69795036 1307.52185059]
[10.82329750 1309.45703125]
[-1.86743486 1301.46044922]
[-6.54167938 1287.20727539]
[-1.05118847 1273.24829102]
[12.08064938 1265.99877930]
[26.81853676 1268.79064941]
[36.38830948 1280.33874512]
[37.42697525 1265.37475586]
[38.46564102 1250.41076660]
[39.50430679 1235.44677734]
[37.80509567 1233.26074219]
[36.85332489 1230.28198242]
[36.95076370 1226.78613281]
[38.29599380 1223.15148926]
[40.95226669 1219.82080078]
[42.68091583 1204.92065430]
[44.40956116 1190.02062988]
[46.13820648 1175.12060547]
[47.86685562 1160.22058105]
[48.64612579 1145.24084473]
[48.47288132 1130.24182129]
[48.29963303 1115.24279785]
[48.12638855 1100.24377441]
[47.95314407 1085.24475098]
[44.74530029 1078.61706543]
[47.86551666 1070.07177734]
[47.86551666 1055.07177734]
[47.86551666 1040.07177734]
[45.20787430 1036.14355469]
[44.96527863 1030.51147461]
[48.04276657 1024.72631836]
[48.38923264 1009.73034668]
[48.73570251 994.73431396]
[49.08217239 979.73834229]
[49.42863846 964.74230957]
[41.98737717 951.83972168]
[50.04136658 938.22198486]
[50.38783646 923.22595215]
[50.73430252 908.22998047]
[51.08077240 893.23394775]
[51.34063339 878.23620605]
[51.51387787 863.23724365]
[51.68712616 848.23822021]
[51.86037064 833.23919678]
[44.27058411 820.42346191]
[52.16675568 806.71356201]
[52.34000015 791.71453857]
[50.51745224 789.63024902]
[49.39533997 786.71142578]
[49.29084396 783.21575928]
[50.42404938 779.50952148]
[52.88365173 776.03100586]
[53.74941635 761.05603027]
[54.61518478 746.08105469]
[55.48094940 731.10601807]
[56.34671783 716.13104248]
[57.12599182 701.15130615]
[57.81874084 686.16729736]
[50.67748642 673.09631348]
[59.04387283 659.66815186]
[59.73662186 644.68420410]
[60.42937469 629.70019531]
[57.60941315 622.89837646]
[61.21764755 614.54742432]
[62.08341217 599.57244873]
[62.94918060 584.59741211]
[55.95936966 571.44482422]
[64.48028564 558.11419678]
[65.34605408 543.13922119]
[66.21181488 528.16424561]
[67.07758331 513.18920898]
[67.85685730 498.20950317]
[68.54960632 483.22549438]
[61.40835571 470.15447998]
[69.77474213 456.72634888]
[70.46749115 441.74237061]
[62.56269836 432.61614990]
[62.99461365 420.14965820]
[72.07611084 411.02416992]
[72.94187164 396.04919434]
[65.95206451 382.89654541]
[74.47297668 369.56594849]
[75.33874512 354.59097290]
[76.20451355 339.61596680]
[77.07028198 324.64099121]
[77.93604279 309.66598511]
[78.80181122 294.69097900]
[79.66757965 279.71600342]
[80.53334808 264.74099731]
[81.39910889 249.76600647]
[78.97262573 245.69088745]
[79.05551147 240.05419922]
[82.46176910 234.45635986]
[83.67319489 219.50535583]
[84.88462067 204.55435181]
[86.09604645 189.60334778]
[77.74185944 174.15286255]
[88.37964630 159.10168457]
[89.41831207 144.13769531]
[90.45697784 129.17369080]
[70.35143280 118.00326538]
[61.83593369 93.71451569]
[72.55632782 67.32640839]
[70.31253815 52.49517822]
[68.06874847 37.66394424]
[65.73934174 22.84592056]
[63.32440567 8.04159451]
[60.90946579 -6.76273203]
[58.40907288 -21.55286598]
[55.82331085 -36.32831192]
[44.88906097 -48.55018616]
[50.26276398 -64.04390717]
[66.41641235 -66.87086487]
[76.73252106 -54.12292099]
[70.59875488 -38.91407394]
[73.18451691 -24.13862801]
[77.41754913 -18.11382484]
[75.71379089 -9.17767048]
[78.12873077 5.62665606]
[80.54367065 20.43098259]
[84.70683289 26.50427437]
[82.89997864 35.42015457]
[85.14376831 50.25138474]
[87.38755798 65.08261871]
[94.86956024 65.60195160]
[95.90845490 50.63796997]
[110.87242126 51.67709732]
[109.83354950 66.64061737]
[117.31555176 67.15995026]
[121.58685303 52.78093719]
[117.24667358 36.96654892]
[128.96316528 25.49240303]
[144.68339539 30.16211891]
[148.23574829 46.17189026]
[135.96586609 57.05223846]
[131.69456482 71.43125153]
[135.97212219 79.36109924]
[138.37705994 87.78251648]
[138.89921570 96.27277374]
[137.62019348 104.42775726]
[134.70497131 111.88113403]
[130.38952637 118.32080078]
[124.96564484 123.50190735]
[118.76322937 127.25582123]
[112.13168335 129.49481201]
[105.42097473 130.21235657]
[104.38230896 145.17636108]
[103.34364319 160.14035034]
[111.19567108 170.34297180]
[110.04449463 182.76371765]
[101.04705048 190.81477356]
[99.83562469 205.76577759]
[98.62419891 220.71678162]
[97.41277313 235.66778564]
[96.37410736 250.63177490]
[95.50833893 265.60678101]
[94.64257050 280.58175659]
[93.77680969 295.55676270]
[92.91104126 310.53173828]
[92.04527283 325.50674438]
[91.17950439 340.48175049]
[90.31374359 355.45672607]
[89.44797516 370.43173218]
[96.37586212 384.65548706]
[87.91687012 396.91494751]
[87.05110168 411.88995361]
[95.69603729 428.16769409]
[85.45148468 442.43511963]
[84.75873566 457.41909790]
[91.85044098 471.56188965]
[83.53360748 483.91824341]
[82.84085083 498.90225220]
[85.56309509 507.58251953]
[82.05258179 514.05499268]
[81.18681335 529.02996826]
[80.32104492 544.00500488]
[79.45527649 558.97998047]
[86.38316345 573.20373535]
[77.92417145 585.46319580]
[77.05841064 600.43817139]
[76.19264221 615.41320801]
[75.41336823 630.39294434]
[74.72061920 645.37695312]
[74.02786255 660.36090088]
[81.11956787 674.50372314]
[72.80273438 686.86004639]
[72.10998535 701.84405518]
[74.83222198 710.52435303]
[71.32170868 716.99682617]
[70.45594788 731.97180176]
[69.59017944 746.94683838]
[68.72441101 761.92181396]
[67.85864258 776.89678955]
[67.33900452 791.88781738]
[67.16575623 806.88677979]
[74.74314880 820.77539062]
[66.85936737 833.41247559]
[66.68612671 848.41143799]
[66.51287842 863.41046143]
[66.33963013 878.40948486]
[69.36094666 886.99023438]
[66.07676697 893.58044434]
[65.73030090 908.57641602]
[65.38383484 923.57244873]
[65.03736877 938.56842041]
[72.45384979 952.54364014]
[64.42463684 965.08880615]
[64.07817078 980.08477783]
[63.73170090 995.08081055]
[63.38523102 1010.07678223]
[63.03876495 1025.07275391]
[62.86551666 1040.07177734]
[62.86551666 1055.07177734]
[62.86551666 1070.07177734]
[62.95214081 1085.07153320]
[63.12538910 1100.07055664]
[63.29863358 1115.06958008]
[63.47187805 1130.06848145]
[63.64512634 1145.06750488]
[71.63339996 1132.37158203]
[84.57063293 1124.78027344]
[99.55028534 1123.99914551]
[113.20692444 1130.20361328]
[122.47238159 1141.99987793]
[125.26502228 1156.73767090]
[120.95744324 1171.10583496]
[110.51739502 1181.87646484]
[96.29041290 1186.62963867]
[81.47280121 1184.29760742]
[69.39358521 1175.40417480]
[62.76691437 1161.94921875]
[61.03826523 1176.84924316]
[59.30961990 1191.74926758]
[57.58097458 1206.64941406]
[55.85232925 1221.54943848]
[54.46830368 1236.48547363]
[53.42963791 1251.44946289]
[52.39097214 1266.41345215]
[51.35230637 1281.37744141]
[50.91923904 1296.37121582]
[51.09248734 1311.37011719]
[51.26573181 1326.36914062]
[54.48443985 1334.87780762]
[51.35335541 1341.54211426]
[51.35335541 1356.54211426]
[51.35335541 1371.54211426]
[51.35335541 1386.54211426]
[51.35335541 1401.54211426]
[51.35335541 1416.54211426]
[54.29640198 1422.39685059]
[53.92378235 1428.02172852]
[51.17610931 1431.88757324]
[50.82963943 1446.88366699]
[50.48317337 1461.87963867]
[50.13670349 1476.87561035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 271]
[4 270]
[5 269]
[6 268]
[7 265]
[8 264]
[9 263]
[10 262]
[11 261]
[12 260]
[13 258]
[14 257]
[15 256]
[23 255]
[24 254]
[25 253]
[26 252]
[31 251]
[32 250]
[33 249]
[34 248]
[35 247]
[36 235]
[37 234]
[38 233]
[39 232]
[40 231]
[42 230]
[43 229]
[44 228]
[47 227]
[48 226]
[49 225]
[50 224]
[51 223]
[53 221]
[54 220]
[55 219]
[56 218]
[57 216]
[58 215]
[59 214]
[60 213]
[62 211]
[63 210]
[68 209]
[69 208]
[70 207]
[71 206]
[72 205]
[73 203]
[74 202]
[76 200]
[77 199]
[78 198]
[80 197]
[81 196]
[82 195]
[84 193]
[85 192]
[86 191]
[87 190]
[88 188]
[89 187]
[91 185]
[92 184]
[95 182]
[96 181]
[98 179]
[99 178]
[100 177]
[101 176]
[102 175]
[103 174]
[104 173]
[105 172]
[106 171]
[109 170]
[110 169]
[111 168]
[112 167]
[114 164]
[115 163]
[116 162]
[119 140]
[120 139]
[121 138]
[122 136]
[123 135]
[124 134]
[125 132]
[126 131]
[145 152]
[146 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
