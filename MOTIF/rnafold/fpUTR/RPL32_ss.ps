%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCUCCUGGGAUCGCAUCUGGAGAGUGCCUAGUAUUCUGCCAGCUUCGGAAAGGGAGGGAAAGCAAGCCUGGCAGAGGCACCCAUUCCAUUCCCAGCUUGCUCCGUAGCUGGCGAUUGGAAGACACUCUGCGACAGUGUUCAGUCCCUGGGCAGGAAAGCCUCCUUCCAGGAUUCUUCCUCACCUGGGGCCGCUUCUUCCCCAAAAGGCAUC\
) } def
/len { sequence length } bind def

/coor [
[-92.10996246 298.79101562]
[-108.62030029 296.35058594]
[-122.89486694 287.77401733]
[-134.73908997 296.97805786]
[-146.58331299 306.18212891]
[-158.42753601 315.38616943]
[-170.27175903 324.59020996]
[-182.11598206 333.79425049]
[-180.64697266 347.49816895]
[-186.09733582 360.03915405]
[-196.94560242 368.18472290]
[-210.29444885 369.89306641]
[-222.64410400 364.82406616]
[-234.62216187 373.85324097]
[-246.60023499 382.88244629]
[-246.46031189 398.28656006]
[-255.31416321 410.67456055]
[-269.59588623 415.41760254]
[-283.76239014 410.89562988]
[-295.74044800 419.92480469]
[-307.71850586 428.95401001]
[-319.69656372 437.98318481]
[-331.60803223 447.10003662]
[-343.45223999 456.30407715]
[-355.29647827 465.50811768]
[-367.14068604 474.71215820]
[-378.98492432 483.91619873]
[-390.82913208 493.12023926]
[-402.67337036 502.32427979]
[-411.47012329 516.81750488]
[-427.83212280 512.37664795]
[-428.09426880 495.42471313]
[-411.87741089 490.48007202]
[-400.03317261 481.27603149]
[-388.18896484 472.07199097]
[-376.34472656 462.86791992]
[-364.50051880 453.66387939]
[-352.65628052 444.45983887]
[-340.81207275 435.25579834]
[-337.46008301 428.67092896]
[-328.72573853 426.00512695]
[-316.74768066 416.97592163]
[-304.76962280 407.94674683]
[-292.79156494 398.91757202]
[-293.23840332 384.05358887]
[-284.74655151 371.62969971]
[-270.39965820 366.52874756]
[-255.62940979 370.90438843]
[-243.65135193 361.87518311]
[-231.67329407 352.84600830]
[-232.48757935 336.44940186]
[-223.27520752 322.66067505]
[-207.50260925 317.02490234]
[-191.32002258 321.95001221]
[-179.47579956 312.74597168]
[-167.63157654 303.54193115]
[-155.78735352 294.33789062]
[-143.94313049 285.13385010]
[-132.09890747 275.92980957]
[-136.41860962 263.39703369]
[-136.66737366 250.12023926]
[-132.80696106 237.39083862]
[-125.19950104 226.45130920]
[-114.57359314 218.37391663]
[-101.95449066 213.95565796]
[-88.56522369 213.63960266]
[-75.70806122 217.47056580]
[-64.63782501 225.08924866]
[-52.52850723 216.23687744]
[-40.41919327 207.38450623]
[-28.30987549 198.53213501]
[-16.53353119 189.24140930]
[-5.10601711 179.52482605]
[-0.42195219 165.38591003]
[15.10349846 162.34109497]
[26.53101158 152.62451172]
[37.95852661 142.90792847]
[49.38603973 133.19134521]
[60.81355286 123.47476959]
[72.24106598 113.75819397]
[68.37247467 105.36494446]
[67.07783508 95.89367676]
[68.65087128 86.14282227]
[73.13568878 76.98765564]
[80.30803680 69.30201721]
[89.68110657 63.87588501]
[88.36157990 48.93403625]
[87.04206085 33.99218750]
[85.72253418 19.05033875]
[84.40301514 4.10848904]
[75.48173523 -8.95754814]
[82.06944275 -22.31611633]
[80.74991608 -37.25796509]
[79.32075500 -52.18972778]
[77.78203583 -67.11059570]
[76.24330902 -82.03146362]
[74.70458221 -96.95233154]
[73.16586304 -111.87319946]
[71.62713623 -126.79406738]
[58.13711166 -134.46211243]
[51.76129150 -148.60879517]
[54.95131302 -163.79441833]
[66.48054504 -174.17982483]
[81.91575623 -175.77159119]
[95.32180786 -167.95765686]
[101.54378510 -153.74264526]
[98.18921661 -138.59251404]
[86.54800415 -128.33279419]
[88.08673096 -113.41192627]
[89.62545013 -98.49105835]
[91.16417694 -83.57019043]
[92.70290375 -68.64932251]
[94.24162292 -53.72845078]
[98.05376434 -47.39883423]
[95.69176483 -38.57748795]
[97.01129150 -23.63563919]
[105.83818817 -11.63834286]
[99.34486389 2.78896618]
[100.66438293 17.73081589]
[101.98390961 32.67266464]
[103.30342865 47.61451340]
[104.62295532 62.55636215]
[118.84741974 67.31709290]
[128.89527893 56.17974854]
[138.94314575 45.04240417]
[148.99101257 33.90505981]
[159.03887939 22.76771736]
[169.08674622 11.63037300]
[166.74652100 -3.83110666]
[174.93632507 -17.15255356]
[189.78919983 -22.04398727]
[204.29206848 -16.19582176]
[211.59710693 -2.36938381]
[208.25511169 12.90690708]
[195.84405518 22.42005348]
[180.22409058 21.67823792]
[170.17622375 32.81558228]
[160.12835693 43.95292664]
[150.08049011 55.09027100]
[140.03262329 66.22761536]
[129.98475647 77.36495972]
[131.94224548 84.80288696]
[132.21423340 92.06437683]
[130.95783997 98.79248810]
[145.64215088 101.85370636]
[160.32646179 104.91491699]
[175.01077271 107.97613525]
[189.69508362 111.03734589]
[204.78385925 106.27923584]
[215.66423035 116.45108795]
[230.34854126 119.51230621]
[243.47073364 111.11909485]
[258.31909180 114.43278503]
[266.23986816 126.99450684]
[280.92419434 130.05572510]
[295.60848999 133.11694336]
[310.29281616 136.17814636]
[319.33013916 134.86604309]
[325.16949463 139.39358521]
[339.80728149 142.67002869]
[353.05126953 134.47035217]
[367.84939575 138.00166321]
[375.58489990 150.67831421]
[390.22268677 153.95475769]
[404.86047363 157.23120117]
[419.49826050 160.50764465]
[436.27563477 158.06704712]
[443.26528931 173.51312256]
[430.35778809 184.50550842]
[416.22183228 175.14543152]
[401.58404541 171.86898804]
[386.94625854 168.59254456]
[372.30847168 165.31610107]
[359.90689087 173.48536682]
[345.01541138 170.37110901]
[336.53082275 157.30781555]
[321.89303589 154.03137207]
[307.23159790 150.86245728]
[292.54727173 147.80123901]
[277.86297607 144.74003601]
[263.17864990 141.67881775]
[250.89836121 150.02926636]
[235.96278381 147.13394165]
[227.28733826 134.19660950]
[212.60302734 131.13540649]
[198.56457520 136.11247253]
[186.63386536 125.72165680]
[171.94956970 122.66043854]
[157.26525879 119.59922791]
[142.58094788 116.53801727]
[127.89662933 113.47679901]
[107.65187836 130.02157593]
[81.95764923 125.18570709]
[70.53013611 134.90228271]
[59.10261917 144.61886597]
[47.67510605 154.33544922]
[36.24759293 164.05203247]
[24.82007790 173.76860046]
[19.31864166 188.60250854]
[4.61056328 190.95234680]
[-6.81695032 200.66893005]
[7.69882393 204.44943237]
[13.93096352 218.09350586]
[7.28407717 231.54039001]
[-7.34062243 234.87478638]
[-19.15932465 225.63800049]
[-19.45750427 210.64146423]
[-31.56682014 219.49382019]
[-43.67613602 228.34619141]
[-55.78545380 237.19856262]
[-51.54792786 253.53141785]
[-53.90452957 270.20251465]
[-62.46566010 284.65759277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 59]
[4 58]
[5 57]
[6 56]
[7 55]
[8 54]
[13 50]
[14 49]
[15 48]
[19 44]
[20 43]
[21 42]
[22 41]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[68 210]
[69 209]
[70 208]
[71 207]
[72 201]
[73 200]
[75 198]
[76 197]
[77 196]
[78 195]
[79 194]
[80 193]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[92 116]
[93 115]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[144 191]
[145 190]
[146 189]
[147 188]
[148 187]
[150 185]
[151 184]
[154 181]
[155 180]
[156 179]
[157 178]
[159 177]
[160 176]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
