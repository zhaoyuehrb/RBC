%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLAMF6)
} def

/sequence { (\
AGUUUAUGACAGAAGGGCAAAAACAUUGACUGCCUCAAGGUCUCAAGCACCAGUCUUCACCGCGGAAAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 56 0.003350345 ubox
2 10 0.030719476 ubox
2 24 0.007570556 ubox
2 48 0.988760459 ubox
2 50 0.025596698 ubox
2 60 0.011019960 ubox
2 63 0.018186982 ubox
2 70 0.032081306 ubox
3 9 0.030544397 ubox
3 14 0.004141158 ubox
3 23 0.007574012 ubox
3 46 0.010929112 ubox
3 47 0.988907958 ubox
3 49 0.024303789 ubox
3 59 0.010526122 ubox
3 62 0.017800093 ubox
3 66 0.005612745 ubox
3 67 0.010709356 ubox
3 68 0.011038241 ubox
3 69 0.032133495 ubox
4 8 0.027532914 ubox
4 13 0.004876758 ubox
4 22 0.007550876 ubox
4 45 0.011589036 ubox
4 46 0.982624526 ubox
4 47 0.012316084 ubox
4 65 0.006015775 ubox
4 66 0.012350881 ubox
4 67 0.012753872 ubox
4 68 0.031417604 ubox
5 12 0.004815705 ubox
5 21 0.007142597 ubox
5 45 0.959292329 ubox
5 46 0.012116932 ubox
5 64 0.005653503 ubox
5 65 0.012201343 ubox
5 66 0.012236897 ubox
5 67 0.029186671 ubox
7 19 0.007245520 ubox
7 37 0.004080152 ubox
7 45 0.011982341 ubox
7 59 0.035101311 ubox
7 62 0.007426770 ubox
7 64 0.029920943 ubox
8 18 0.007287043 ubox
8 36 0.004511324 ubox
8 42 0.995606097 ubox
8 44 0.011751411 ubox
8 55 0.024219403 ubox
8 58 0.039565209 ubox
8 61 0.009660034 ubox
8 63 0.031680125 ubox
9 35 0.003584618 ubox
9 41 0.995786881 ubox
9 43 0.010015582 ubox
9 54 0.024258298 ubox
9 57 0.039134326 ubox
10 40 0.995067562 ubox
10 53 0.024220514 ubox
11 35 0.009340355 ubox
11 43 0.004217957 ubox
11 56 0.038986370 ubox
12 34 0.009361418 ubox
12 36 0.106081485 ubox
12 42 0.005147982 ubox
12 55 0.039727257 ubox
12 58 0.061717656 ubox
13 35 0.080299821 ubox
13 41 0.005067042 ubox
13 54 0.038985333 ubox
13 57 0.059981469 ubox
14 35 0.065430762 ubox
14 56 0.058069138 ubox
14 57 0.024792319 ubox
15 31 0.010075835 ubox
15 34 0.061382401 ubox
15 35 0.945320192 ubox
15 36 0.147517882 ubox
15 51 0.037091889 ubox
15 55 0.054714326 ubox
15 56 0.031666601 ubox
16 30 0.010070836 ubox
16 31 0.007839634 ubox
16 33 0.048755905 ubox
16 34 0.994674599 ubox
16 35 0.018691588 ubox
16 50 0.037185822 ubox
16 51 0.019457640 ubox
16 54 0.047990604 ubox
16 55 0.037139103 ubox
17 30 0.016621445 ubox
17 33 0.995596908 ubox
17 34 0.013498715 ubox
17 48 0.037679818 ubox
17 50 0.019258506 ubox
17 54 0.041550323 ubox
18 28 0.024817860 ubox
18 32 0.996182726 ubox
18 47 0.037750314 ubox
18 53 0.045512558 ubox
19 27 0.034564603 ubox
19 31 0.941582026 ubox
20 26 0.050215671 ubox
20 27 0.146785205 ubox
21 26 0.125060231 ubox
21 27 0.154861119 ubox
22 26 0.121007508 ubox
23 41 0.020420489 ubox
24 32 0.003845189 ubox
24 40 0.020881086 ubox
25 31 0.006601947 ubox
26 38 0.021497630 ubox
26 46 0.062846182 ubox
27 37 0.024259420 ubox
27 45 0.064047683 ubox
28 36 0.024351908 ubox
28 42 0.034797111 ubox
28 44 0.064099454 ubox
28 55 0.005259429 ubox
29 35 0.023186199 ubox
29 41 0.034886287 ubox
29 43 0.062824302 ubox
29 54 0.005290443 ubox
30 39 0.007341699 ubox
30 40 0.034753353 ubox
30 53 0.005299748 ubox
30 65 0.006699140 ubox
31 38 0.008381552 ubox
31 39 0.034098237 ubox
31 52 0.005253860 ubox
31 64 0.006741819 ubox
32 41 0.062859051 ubox
32 51 0.004768031 ubox
32 63 0.006814167 ubox
33 40 0.063992800 ubox
33 62 0.006806549 ubox
34 39 0.063792557 ubox
35 65 0.003973139 ubox
35 66 0.005927419 ubox
36 64 0.008721694 ubox
36 65 0.008146234 ubox
37 57 0.005403768 ubox
38 56 0.006069554 ubox
38 57 0.006630110 ubox
39 51 0.032172099 ubox
39 55 0.006150320 ubox
39 56 0.007752204 ubox
39 61 0.024429141 ubox
40 48 0.003856862 ubox
40 50 0.032201660 ubox
40 54 0.005899356 ubox
40 55 0.007910057 ubox
40 60 0.024452267 ubox
41 47 0.003808612 ubox
41 49 0.031061220 ubox
41 59 0.024065133 ubox
42 53 0.010222090 ubox
43 52 0.010188928 ubox
43 65 0.004120822 ubox
43 66 0.029519630 ubox
44 64 0.004869417 ubox
44 65 0.030954244 ubox
45 57 0.027548983 ubox
46 56 0.029650210 ubox
47 54 0.025063874 ubox
47 55 0.029716422 ubox
47 63 0.039216940 ubox
47 70 0.042390928 ubox
48 53 0.037656589 ubox
48 62 0.039213841 ubox
48 69 0.042815303 ubox
50 65 0.383148046 ubox
51 64 0.383927124 ubox
53 60 0.191359339 ubox
53 63 0.296459510 ubox
53 70 0.448656543 ubox
54 59 0.175198192 ubox
54 62 0.290074305 ubox
54 65 0.059430929 ubox
54 66 0.163684455 ubox
54 69 0.438243575 ubox
55 64 0.075691518 ubox
55 65 0.174950161 ubox
55 69 0.175752828 ubox
56 64 0.167975808 ubox
56 65 0.015083528 ubox
56 66 0.194031626 ubox
56 67 0.542479095 ubox
56 68 0.148603629 ubox
56 69 0.008229664 ubox
57 64 0.019344354 ubox
57 65 0.206182323 ubox
57 66 0.584080334 ubox
57 67 0.109450493 ubox
57 68 0.006526057 ubox
58 64 0.212829581 ubox
58 65 0.593436359 ubox
62 70 0.498027786 ubox
63 69 0.501592365 ubox
2 48 0.9500000 lbox
3 47 0.9500000 lbox
4 46 0.9500000 lbox
5 45 0.9500000 lbox
8 42 0.9500000 lbox
9 41 0.9500000 lbox
10 40 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
62 70 0.9500000 lbox
63 69 0.9500000 lbox
showpage
end
%%EOF
