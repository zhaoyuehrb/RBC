%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SNX33)
} def

/sequence { (\
AUUCAGCUGCGAGUGCAUUCUUGGACUGCCUUGUGAGCAUCCCCGGUCUGGGCAGGACCCUCUCCUUCCCAUCUUUCUAUACCACCCAGCCCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.004596128 ubox
1 40 0.026650368 ubox
2 13 0.004800978 ubox
2 36 0.004241677 ubox
2 37 0.055114184 ubox
2 39 0.030502015 ubox
2 94 0.003988789 ubox
3 12 0.005074020 ubox
3 35 0.003918315 ubox
3 36 0.072392185 ubox
3 93 0.004914848 ubox
4 11 0.005115733 ubox
4 23 0.003422524 ubox
4 33 0.008533420 ubox
4 35 0.073949892 ubox
4 45 0.003446374 ubox
5 21 0.004226478 ubox
5 22 0.003413349 ubox
5 31 0.004367000 ubox
5 32 0.008459641 ubox
5 34 0.069905447 ubox
6 16 0.005711033 ubox
6 20 0.004584852 ubox
6 21 0.003181578 ubox
6 29 0.003712786 ubox
6 30 0.005233684 ubox
6 31 0.007757027 ubox
6 34 0.015488256 ubox
6 38 0.994009882 ubox
6 47 0.004985824 ubox
6 90 0.021826214 ubox
6 95 0.022075377 ubox
7 15 0.005715581 ubox
7 28 0.003737228 ubox
7 33 0.024999929 ubox
7 37 0.994995230 ubox
7 46 0.005228743 ubox
7 89 0.021874946 ubox
7 94 0.022123872 ubox
8 17 0.011842637 ubox
8 35 0.316030137 ubox
8 36 0.933493701 ubox
8 39 0.005599869 ubox
8 45 0.005205798 ubox
8 88 0.021751550 ubox
8 93 0.021741990 ubox
9 16 0.013076631 ubox
9 29 0.074632268 ubox
9 34 0.964419901 ubox
9 38 0.006150148 ubox
9 44 0.004978230 ubox
9 87 0.021076906 ubox
9 90 0.005985039 ubox
9 92 0.019577635 ubox
10 15 0.013080351 ubox
10 23 0.016766930 ubox
10 28 0.074653803 ubox
10 33 0.995927595 ubox
10 35 0.012951240 ubox
10 37 0.005922765 ubox
10 89 0.006642678 ubox
11 20 0.004738451 ubox
11 22 0.018194932 ubox
11 27 0.036666689 ubox
11 32 0.995421209 ubox
11 34 0.009176419 ubox
11 41 0.003370615 ubox
12 19 0.004639977 ubox
12 21 0.018350473 ubox
12 27 0.071369655 ubox
12 31 0.995875765 ubox
12 32 0.009866207 ubox
13 18 0.003285235 ubox
13 20 0.018332363 ubox
13 26 0.082212430 ubox
13 29 0.003422892 ubox
13 30 0.995770630 ubox
13 31 0.009538987 ubox
13 40 0.006112823 ubox
13 85 0.014199178 ubox
14 25 0.083273303 ubox
14 28 0.004488502 ubox
14 39 0.006711614 ubox
14 84 0.014202912 ubox
15 27 0.003505546 ubox
15 29 0.995886658 ubox
15 38 0.006833267 ubox
15 83 0.014069883 ubox
16 23 0.083955840 ubox
16 28 0.995950726 ubox
16 37 0.006803349 ubox
17 22 0.081253692 ubox
17 27 0.977876649 ubox
18 24 0.038487814 ubox
18 25 0.205546924 ubox
19 23 0.034870822 ubox
19 24 0.191465758 ubox
19 25 0.890928852 ubox
19 46 0.003910277 ubox
20 24 0.898034777 ubox
20 35 0.003333432 ubox
20 45 0.005468704 ubox
20 46 0.005193726 ubox
21 45 0.005141954 ubox
22 93 0.003291996 ubox
23 30 0.007108156 ubox
23 42 0.018407139 ubox
23 43 0.007560756 ubox
23 44 0.003787689 ubox
23 49 0.007442434 ubox
23 92 0.003460337 ubox
24 29 0.007104290 ubox
24 41 0.018828894 ubox
24 42 0.007638522 ubox
24 43 0.003729626 ubox
24 48 0.018788094 ubox
24 91 0.003476325 ubox
25 40 0.018733741 ubox
25 47 0.018840300 ubox
26 46 0.018851543 ubox
26 89 0.003776599 ubox
27 39 0.020925774 ubox
27 45 0.018725298 ubox
27 88 0.003781454 ubox
28 38 0.021905716 ubox
28 44 0.018430013 ubox
28 47 0.004200131 ubox
28 87 0.003762399 ubox
28 90 0.004604684 ubox
29 37 0.021491067 ubox
29 46 0.004454339 ubox
29 89 0.004586863 ubox
30 37 0.004664824 ubox
30 45 0.004451186 ubox
31 36 0.005788322 ubox
32 39 0.016675978 ubox
33 38 0.016808542 ubox
33 40 0.003242866 ubox
33 85 0.006664214 ubox
34 39 0.003210938 ubox
34 84 0.006753119 ubox
35 41 0.007153492 ubox
35 44 0.007024551 ubox
35 48 0.004027022 ubox
35 83 0.006755744 ubox
36 40 0.006257721 ubox
36 47 0.003834919 ubox
37 47 0.003944693 ubox
37 48 0.003568117 ubox
37 90 0.004969440 ubox
38 46 0.004657527 ubox
38 89 0.004973776 ubox
39 47 0.018467156 ubox
39 80 0.006666834 ubox
40 46 0.019327804 ubox
40 79 0.006675048 ubox
41 45 0.020017366 ubox
45 73 0.026387682 ubox
45 74 0.038062177 ubox
45 75 0.006655230 ubox
45 76 0.003557893 ubox
45 77 0.016062816 ubox
45 78 0.010345982 ubox
45 83 0.042918247 ubox
45 86 0.024255000 ubox
45 87 0.008426781 ubox
45 91 0.059869573 ubox
45 92 0.070558492 ubox
45 96 0.977831664 ubox
46 72 0.024475684 ubox
46 73 0.040695914 ubox
46 74 0.007292898 ubox
46 75 0.004052427 ubox
46 76 0.015561534 ubox
46 77 0.010852586 ubox
46 82 0.042957169 ubox
46 85 0.024346700 ubox
46 86 0.008270400 ubox
46 90 0.060101691 ubox
46 91 0.070458535 ubox
46 95 0.984911969 ubox
47 71 0.015455217 ubox
47 81 0.041662328 ubox
47 84 0.023537836 ubox
47 89 0.022664661 ubox
47 94 0.142856392 ubox
48 89 0.090130416 ubox
48 94 0.980509176 ubox
49 71 0.089549474 ubox
49 79 0.006623541 ubox
49 88 0.089953516 ubox
49 93 0.990506678 ubox
50 70 0.097129320 ubox
50 87 0.089344337 ubox
50 92 0.991223806 ubox
51 69 0.097367130 ubox
51 86 0.089113617 ubox
51 91 0.991230300 ubox
52 67 0.003212546 ubox
52 68 0.097489931 ubox
52 85 0.088697177 ubox
52 90 0.991227324 ubox
53 89 0.990154045 ubox
54 61 0.015357002 ubox
54 63 0.031858466 ubox
54 66 0.623562997 ubox
54 67 0.046571944 ubox
54 74 0.012546444 ubox
54 75 0.040156271 ubox
54 76 0.005022372 ubox
54 78 0.041439701 ubox
55 60 0.015500173 ubox
55 62 0.032224097 ubox
55 63 0.017147401 ubox
55 64 0.007441702 ubox
55 65 0.632803222 ubox
55 66 0.036477049 ubox
55 68 0.012901913 ubox
55 69 0.067688487 ubox
55 70 0.023498035 ubox
55 73 0.011791288 ubox
55 74 0.041763646 ubox
55 77 0.041702710 ubox
55 78 0.014745293 ubox
55 83 0.049916360 ubox
55 86 0.171860792 ubox
55 87 0.738883363 ubox
56 60 0.005073221 ubox
56 61 0.025178223 ubox
56 62 0.019326013 ubox
56 63 0.005764414 ubox
56 64 0.632801927 ubox
56 65 0.036591574 ubox
56 67 0.013172637 ubox
56 68 0.068070534 ubox
56 69 0.023293605 ubox
56 72 0.008068477 ubox
56 73 0.042177563 ubox
56 76 0.040424633 ubox
56 77 0.015935248 ubox
56 82 0.049805164 ubox
56 85 0.173146196 ubox
56 86 0.738260218 ubox
57 61 0.018284550 ubox
57 63 0.602541857 ubox
57 66 0.017969497 ubox
57 67 0.064350722 ubox
57 72 0.039288730 ubox
57 74 0.006108687 ubox
57 75 0.037750537 ubox
57 76 0.015966701 ubox
67 88 0.008876048 ubox
71 80 0.082967274 ubox
72 79 0.081338237 ubox
73 89 0.004434973 ubox
74 88 0.013271811 ubox
75 88 0.013711916 ubox
76 88 0.014882203 ubox
77 89 0.007683658 ubox
78 88 0.021817899 ubox
89 95 0.035799005 ubox
90 94 0.035624080 ubox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
12 31 0.9500000 lbox
13 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
19 25 0.9500000 lbox
20 24 0.9500000 lbox
45 96 0.9500000 lbox
46 95 0.9500000 lbox
48 94 0.9500000 lbox
49 93 0.9500000 lbox
50 92 0.9500000 lbox
51 91 0.9500000 lbox
52 90 0.9500000 lbox
53 89 0.9500000 lbox
55 87 0.9500000 lbox
56 86 0.9500000 lbox
showpage
end
%%EOF
