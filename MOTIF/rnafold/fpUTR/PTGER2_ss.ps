%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCUUGGCCGGCGCGGGUAGGCGCGGGAGCCUCGAGCGCCGCUCGGAUGCAGCAGCCGAGCCGCCACUCGGCGCGCGGCGGGAGACCCAGGGCAAGCCGCCGUCGGCGCGCUGGGUGCGGGAAGGGGGCUCUGGAUUUCGGUCCCUCCCCUUUUUCCUCUGAGUCUCGGAACGCUCCGGCUCUCAGACCCUCUUCCUCCCAGGUAAAGGCCGGGAGAGGAGGGCGCAUCUCUUUUCCAGGCACCCCACC\
) } def
/len { sequence length } bind def

/coor [
[117.98743439 323.16491699]
[115.56707001 337.96835327]
[113.14670563 352.77178955]
[110.72634125 367.57522583]
[117.02980042 382.71453857]
[106.85689545 395.57705688]
[90.67264557 392.93090820]
[85.12600708 377.49826050]
[95.92289734 365.15487671]
[98.34326172 350.35144043]
[100.76363373 335.54800415]
[103.18399811 320.74453735]
[88.96508789 315.96725464]
[81.95605469 329.22897339]
[74.94702911 342.49072266]
[67.93799591 355.75244141]
[72.83530426 370.77880859]
[65.59860229 384.82891846]
[50.52128983 389.56710815]
[36.54847336 382.18225098]
[31.96997833 367.05569458]
[39.50214386 353.16171265]
[54.67626953 348.74340820]
[61.68529892 335.48168945]
[68.69432831 322.21994019]
[75.70335388 308.95822144]
[81.27040100 295.02954102]
[85.33300781 280.59017944]
[89.39561462 266.15081787]
[85.39456177 251.80366516]
[96.58032227 240.61485291]
[100.64292908 226.17549133]
[104.70553589 211.73612976]
[108.76814270 197.29676819]
[104.76708984 182.94961548]
[115.95285034 171.76080322]
[120.01545715 157.32144165]
[124.07806396 142.88208008]
[82.99775696 141.60586548]
[60.91064835 111.37962341]
[46.37448883 115.08098602]
[34.91029358 125.98432159]
[20.66734695 121.62683105]
[6.13118696 125.32819366]
[-8.40497208 129.02955627]
[-22.94113159 132.73091125]
[-37.47729111 136.43228149]
[-52.01345062 140.13363647]
[-63.47764587 151.03697205]
[-77.72059631 146.67947388]
[-92.25675201 150.38084412]
[-106.11412048 160.14863586]
[-119.33628082 149.53681946]
[-112.79943848 133.89373779]
[-95.95811462 135.84468079]
[-81.42195129 132.14332581]
[-70.99748230 121.50473022]
[-55.71480942 125.59747314]
[-41.17865372 121.89611816]
[-26.64249229 118.19475555]
[-12.10633278 114.49339294]
[2.42982602 110.79203033]
[16.96598625 107.09066772]
[27.39045906 96.45207977]
[42.67313004 100.54483032]
[57.20928955 96.84346771]
[60.91064835 82.30730438]
[49.91487122 72.10471344]
[38.91909409 61.90212631]
[27.92331505 51.69953537]
[16.92753792 41.49694443]
[5.93175888 31.29435158]
[-5.06401920 21.09176064]
[-16.05979729 10.88916969]
[-27.05557442 0.68657893]
[-38.05135345 -9.51601219]
[-49.04713058 -19.71860313]
[-60.04290771 -29.92119408]
[-71.28962708 -39.84648132]
[-82.78029633 -49.48829651]
[-94.27095795 -59.13011169]
[-105.76162720 -68.77192688]
[-117.25229645 -78.41374207]
[-131.66000366 -73.27902985]
[-146.60470581 -76.02721405]
[-158.09094238 -85.82173920]
[-163.09889221 -99.95597076]
[-160.37799072 -114.60050201]
[-171.86866760 -124.24231720]
[-187.88865662 -129.79174805]
[-186.99087524 -146.72190857]
[-170.47381592 -150.54594421]
[-162.22685242 -135.73298645]
[-150.73619080 -126.09116364]
[-136.78662109 -131.31372070]
[-121.99749756 -128.83624268]
[-110.35720825 -119.22530365]
[-105.05564880 -104.98485565]
[-107.61048126 -89.90440369]
[-96.11981201 -80.26258850]
[-84.62915039 -70.62077332]
[-73.13848114 -60.97896194]
[-61.64781189 -51.33714676]
[-58.87120438 -51.43127060]
[-55.89024734 -50.44587708]
[-53.11062622 -48.29784012]
[-50.96061707 -45.05043411]
[-49.84031677 -40.91697311]
[-38.84453964 -30.71438217]
[-27.84876251 -20.51178932]
[-16.85298347 -10.30919933]
[-5.85720634 -0.10660807]
[5.13857174 10.09598255]
[16.13434982 20.29857445]
[27.13012886 30.50116539]
[38.12590790 40.70375443]
[49.12168503 50.90634537]
[60.11746216 61.10894012]
[71.11324310 71.31153107]
[106.43890381 55.51780701]
[143.28936768 76.66213989]
[148.41967773 62.56674957]
[153.54997253 48.47135925]
[158.68028259 34.37596893]
[163.81057739 20.28058052]
[168.94088745 6.18519163]
[174.07118225 -7.91019773]
[179.20149231 -22.00558662]
[184.33178711 -36.10097504]
[189.46209717 -50.19636536]
[180.93266296 -61.00500488]
[178.86732483 -74.50854492]
[183.69898987 -87.17041779]
[194.06825256 -95.72766113]
[207.20382690 -98.03166199]
[212.50944519 -112.06200409]
[217.81506348 -126.09233856]
[223.12068176 -140.12268066]
[219.94200134 -156.21081543]
[232.46185303 -166.80256653]
[247.80088806 -161.00205994]
[250.17962646 -144.77635193]
[237.15101624 -134.81706238]
[231.84539795 -120.78672028]
[226.53977966 -106.75638580]
[221.23416138 -92.72604370]
[230.68055725 -79.28581238]
[230.24047852 -62.69741821]
[219.88926697 -49.51522446]
[203.55747986 -45.06606293]
[198.42718506 -30.97067451]
[193.29687500 -16.87528419]
[188.16658020 -2.77989578]
[183.03627014 11.31549358]
[177.90597534 25.41088295]
[172.77566528 39.50627136]
[167.64537048 53.60166168]
[162.51506042 67.69705200]
[157.38476562 81.79244232]
[168.05726624 92.33272552]
[182.08761597 87.02709961]
[196.11795044 81.72148132]
[210.14828491 76.41585541]
[224.17861938 71.11023712]
[238.20896912 65.80461884]
[244.76890564 51.67645645]
[259.07324219 46.49567032]
[272.50186157 52.83663940]
[286.53219604 47.53101730]
[300.56253052 42.22539520]
[314.59286499 36.91977692]
[328.62319946 31.61415482]
[338.58248901 18.58554840]
[354.80819702 20.96428490]
[360.60873413 36.30332184]
[350.01696777 48.82317734]
[333.92883301 45.64449310]
[319.89849854 50.95011520]
[305.86816406 56.25573349]
[291.83782959 61.56135559]
[277.80746460 66.86697388]
[271.93469238 80.50684357]
[257.78149414 86.08736420]
[243.51458740 79.83495331]
[229.48425293 85.14057922]
[215.45390320 90.44619751]
[201.42356873 95.75181580]
[187.39323425 101.05744171]
[173.36289978 106.36306000]
[172.61520386 121.34441376]
[186.04756165 128.02064514]
[199.47990417 134.69686890]
[212.91224670 141.37309265]
[226.34460449 148.04931641]
[239.77694702 154.72554016]
[253.20930481 161.40177917]
[266.64166260 168.07800293]
[275.69268799 169.08940125]
[280.19906616 174.92210388]
[293.54711914 181.76525879]
[306.89520264 188.60841370]
[320.24328613 195.45158386]
[329.28100586 196.57574463]
[333.71432495 202.46415710]
[346.97604370 209.47317505]
[360.23779297 216.48220825]
[376.59631348 215.32865906]
[385.54910278 229.06835938]
[377.88629150 243.56710815]
[361.49072266 243.90980530]
[353.22875977 229.74394226]
[339.96701050 222.73490906]
[326.70529175 215.72587585]
[313.40011597 208.79965210]
[300.05206299 201.95649719]
[286.70397949 195.11332703]
[273.35589600 188.27017212]
[259.96542358 181.51034546]
[246.53306580 174.83412170]
[233.10072327 168.15789795]
[219.66838074 161.48167419]
[206.23602295 154.80545044]
[192.80368042 148.12921143]
[179.37132263 141.45298767]
[165.93898010 134.77676392]
[159.08358765 137.81874084]
[167.67083740 150.11749268]
[180.94920349 157.09494019]
[185.95506287 171.23500061]
[180.02441406 185.01278687]
[166.31338501 191.09619141]
[152.11856079 186.24780273]
[144.99397278 173.04779053]
[148.73013306 158.52215576]
[145.37281799 143.90270996]
[138.51742554 146.94468689]
[134.45481873 161.38404846]
[130.39221191 175.82341003]
[134.10267639 191.20336914]
[123.20750427 201.35937500]
[119.14489746 215.79873657]
[115.08229065 230.23809814]
[111.01968384 244.67745972]
[114.73014832 260.05743408]
[103.83497620 270.21343994]
[99.77236938 284.65280151]
[95.70976257 299.09216309]
[103.41858673 286.22460938]
[117.79657745 281.94985962]
[131.28318787 288.51577759]
[136.78662109 302.46969604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[13 26]
[14 25]
[15 24]
[16 23]
[27 247]
[28 246]
[29 245]
[31 243]
[32 242]
[33 241]
[34 240]
[36 238]
[37 237]
[38 236]
[40 66]
[41 65]
[43 63]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[50 56]
[51 55]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[88 94]
[89 93]
[121 159]
[122 158]
[123 157]
[124 156]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[130 150]
[135 146]
[136 145]
[137 144]
[138 143]
[160 189]
[161 188]
[162 187]
[163 186]
[164 185]
[165 184]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
[190 225]
[191 224]
[192 223]
[193 222]
[194 221]
[195 220]
[196 219]
[197 218]
[199 217]
[200 216]
[201 215]
[202 214]
[204 213]
[205 212]
[206 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
