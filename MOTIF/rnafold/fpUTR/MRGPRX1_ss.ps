%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCAGGCUUCAGAGUCAGCAAGAACUGGAUUUCAAACUGGAUUUGAGGACCCCCACCUUUUGAUAGGUGACUUAUUCUCUGUGAGUCUCUGAUCUGCCCUCUUUAAAUGAGGAAGUAAAUCCCACAUGGCAGGGUGGUGGGGAGAAUCAGAGAUCAUACAGCUGGUGAUCACAACUGGUUUCUGUUUCCAGGGUCACCAGACUAGGGUUUCUGAGC\
) } def
/len { sequence length } bind def

/coor [
[134.66738892 190.06047058]
[124.81710815 201.37294006]
[110.73558807 206.54119873]
[95.90596008 204.28686523]
[83.99637604 195.16755676]
[77.95272064 181.43896484]
[79.26990509 166.49691772]
[87.62365723 154.03601074]
[92.71587372 139.92681885]
[81.48272705 149.86746216]
[70.24957275 159.80810547]
[59.01642990 169.74874878]
[47.78328323 179.68939209]
[36.55013275 189.63003540]
[25.31698608 199.57067871]
[20.10994530 214.51046753]
[5.45120668 217.15068054]
[-5.78194094 227.09132385]
[-17.01508904 237.03196716]
[-28.24823570 246.97261047]
[-26.90083122 262.31829834]
[-34.75600433 275.36245728]
[-48.62181854 281.21081543]
[-63.09929276 277.81362915]
[-74.33243561 287.75427246]
[-85.56558990 297.69491577]
[-86.27824402 313.48315430]
[-98.00230408 324.08132935]
[-113.78210449 323.20181274]
[-124.25576019 311.36633301]
[-123.20943451 295.59674072]
[-111.26390076 285.24877930]
[-95.50623322 286.46179199]
[-84.27308655 276.52114868]
[-73.03993225 266.58050537]
[-74.65095520 251.79730225]
[-67.15949249 238.74578857]
[-53.25675964 232.53552246]
[-38.18888092 235.73945618]
[-26.95573235 225.79881287]
[-15.72258472 215.85816956]
[-4.48943710 205.91752625]
[-0.08586511 191.68876648]
[15.37634277 188.33753967]
[26.60948944 178.39689636]
[37.84263611 168.45625305]
[49.07578659 158.51560974]
[60.30893326 148.57496643]
[71.54208374 138.63432312]
[82.77523041 128.69367981]
[70.78276062 111.09214783]
[72.29851532 91.29458618]
[84.87732697 77.84722900]
[80.22161102 63.58804321]
[75.56589508 49.32886124]
[70.91017914 35.06967926]
[66.25447083 20.81049347]
[61.59875107 6.55131006]
[56.94303894 -7.70787382]
[47.96831512 -0.49494603]
[36.90876389 0.63516039]
[27.36781502 -4.25320530]
[22.22187233 -13.20285225]
[22.75622940 -23.11539841]
[11.52308178 -33.05604172]
[0.28993425 -42.99668503]
[-15.17227364 -46.34790802]
[-19.57584572 -60.57667542]
[-30.80899239 -70.51731873]
[-46.27120209 -73.86854553]
[-50.67477417 -88.09731293]
[-61.90792084 -98.03795624]
[-73.14106750 -107.97859955]
[-84.37421417 -117.91924286]
[-95.60736084 -127.85988617]
[-106.84050751 -137.80053711]
[-118.07366180 -147.74118042]
[-134.11006165 -148.20281982]
[-143.63209534 -161.11445618]
[-139.33526611 -176.57139587]
[-124.51573181 -182.71638489]
[-110.54177094 -174.83551025]
[-108.13301086 -158.97431946]
[-96.89986420 -149.03367615]
[-85.66671753 -139.09303284]
[-74.43357086 -129.15238953]
[-63.20042419 -119.21174622]
[-51.96727753 -109.27110291]
[-40.73413086 -99.33045959]
[-26.07539177 -96.69025421]
[-20.86834908 -81.75046539]
[-9.63520145 -71.80982208]
[5.02353621 -69.16962433]
[10.23057747 -54.22983170]
[21.46372604 -44.28918839]
[32.69687271 -34.34854507]
[44.35772705 -36.73417664]
[55.95026016 -30.76239204]
[59.36295319 -45.36901855]
[62.77564621 -59.97564316]
[66.18833923 -74.58226776]
[69.60102844 -89.18889618]
[72.90886688 -103.81962585]
[76.11167908 -118.47370148]
[66.64677429 -126.62928772]
[61.57471848 -137.96836853]
[61.80125427 -150.31590271]
[67.22211456 -161.33180237]
[76.75441742 -168.95443726]
[88.55245209 -171.78633118]
[92.17432404 -186.34249878]
[91.20963287 -195.41973877]
[95.95394897 -201.08074951]
[99.78424835 -215.58346558]
[103.61454773 -230.08618164]
[95.44776917 -243.61686707]
[99.32167053 -258.93902588]
[112.93793488 -266.96228027]
[128.21827698 -262.92660522]
[136.09713745 -249.22628784]
[131.90013123 -233.98945618]
[118.11727142 -226.25588989]
[114.28697205 -211.75317383]
[110.45667267 -197.25045776]
[106.73049164 -182.72064209]
[103.10861969 -168.16445923]
[115.08411407 -155.17893982]
[116.87861633 -137.44761658]
[107.58507538 -122.05661774]
[90.76576233 -115.27088928]
[87.56294250 -100.61681366]
[89.20462799 -93.41538239]
[84.20765686 -85.77620697]
[80.79496765 -71.16957855]
[77.38227081 -56.56295395]
[73.96958160 -41.95632553]
[70.55688477 -27.34970093]
[71.20222473 -12.36358833]
[75.85793304 1.89559531]
[80.51364899 16.15477943]
[85.16936493 30.41396332]
[89.82508087 44.67314529]
[94.48079681 58.93233109]
[99.13651276 73.19151306]
[112.35283661 74.70375061]
[123.81958008 82.63035583]
[130.49185181 95.59092712]
[130.26730347 110.80419159]
[122.60253143 124.68087006]
[135.59291077 132.18087769]
[148.58329773 139.68087769]
[161.57366943 147.18087769]
[174.56405640 154.68087769]
[187.55442810 162.18087769]
[200.54481506 169.68087769]
[213.53520203 177.18087769]
[226.52557373 184.68087769]
[237.18377686 179.43008423]
[248.93307495 179.96788025]
[258.86257935 186.04531860]
[264.56817627 196.05538940]
[264.73406982 207.45628357]
[277.50393677 215.32585144]
[290.32995605 223.10362244]
[303.21139526 230.78918457]
[316.09286499 238.47476196]
[328.97433472 246.16032410]
[341.85577393 253.84590149]
[354.73724365 261.53146362]
[367.61871338 269.21704102]
[380.50015259 276.90261841]
[393.38162231 284.58819580]
[397.70935059 284.49719238]
[401.46511841 285.66720581]
[404.32339478 287.76455688]
[406.10006714 290.38424683]
[406.76339722 293.10208130]
[419.18289185 301.51373291]
[431.60238647 309.92541504]
[444.02188110 318.33706665]
[458.16488647 312.17431641]
[473.39089966 314.65869141]
[484.84136963 324.99743652]
[488.86248779 339.89154053]
[484.17117310 354.58831787]
[472.26434326 364.39807129]
[456.94146729 366.19055176]
[443.09201050 359.39379883]
[435.13528442 346.17660522]
[435.61022949 330.75656128]
[423.19073486 322.34490967]
[410.77124023 313.93322754]
[398.35174561 305.52157593]
[385.69604492 297.46963501]
[372.81460571 289.78405762]
[359.93313599 282.09851074]
[347.05166626 274.41293335]
[334.17022705 266.72735596]
[321.28875732 259.04177856]
[308.40728760 251.35621643]
[295.52584839 243.67063904]
[282.64437866 235.98507690]
[275.29409790 235.25775146]
[269.63439941 228.09573364]
[256.86450195 220.22618103]
[239.33503723 225.51673889]
[223.23200989 216.14813232]
[219.02557373 197.67124939]
[206.03520203 190.17124939]
[193.04481506 182.67124939]
[180.05442810 175.17124939]
[167.06405640 167.67124939]
[154.07366943 160.17124939]
[141.08329773 152.67124939]
[128.09291077 145.17124939]
[115.10253143 137.67124939]
[122.90696716 150.48104858]
[133.57752991 161.02330017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 50]
[10 49]
[11 48]
[12 47]
[13 46]
[14 45]
[15 44]
[17 42]
[18 41]
[19 40]
[20 39]
[24 35]
[25 34]
[26 33]
[53 144]
[54 143]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[64 96]
[65 95]
[66 94]
[68 92]
[69 91]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[98 137]
[99 136]
[100 135]
[101 134]
[102 133]
[103 131]
[104 130]
[110 126]
[111 125]
[113 124]
[114 123]
[115 122]
[149 216]
[150 215]
[151 214]
[152 213]
[153 212]
[154 211]
[155 210]
[156 209]
[157 208]
[162 205]
[163 204]
[164 202]
[165 201]
[166 200]
[167 199]
[168 198]
[169 197]
[170 196]
[171 195]
[172 194]
[177 193]
[178 192]
[179 191]
[180 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
