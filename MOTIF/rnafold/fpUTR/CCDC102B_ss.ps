%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGCGUGGGAACCCUGCUUAAGGGCUUUACUAGGGAAAACGGUGCUGGUUCACUGGGGCGCGUUUCCGGGAAGGUGAAUACCGGUGAAAGUUAUGCUGAGGGUGAGUAAACUCAAAAACUGACACUCGAUUCAGCUAUUGGAAAGUUUUUUUAAUGUGGUUGGAACAACUGAGAACUUGGCAGGAUGAAGACAAAGUGUGUGAAAGGUCUUAAAAAUAAAU\
) } def
/len { sequence length } bind def

/coor [
[70.19724274 393.85815430]
[61.83858109 381.40295410]
[56.51773834 367.37835693]
[54.51119614 352.51318359]
[55.92321396 337.57977295]
[60.68041992 323.35415649]
[68.53562927 310.57540894]
[79.08067322 299.90762329]
[91.76763153 291.90502930]
[105.93726349 286.98352051]
[120.85331726 285.39877319]
[135.74072266 287.23312378]
[149.82594299 292.39129639]
[162.37707520 300.60525513]
[172.74128723 311.44729614]
[167.98614502 297.22097778]
[163.23101807 282.99462891]
[158.47587585 268.76831055]
[153.72074890 254.54196167]
[148.96560669 240.31562805]
[143.86888123 234.97331238]
[144.24505615 225.85630798]
[139.68991089 211.56468201]
[135.13475037 197.27305603]
[121.82504272 190.68615723]
[117.00188446 176.25730896]
[124.00107574 162.34152222]
[119.44592285 148.04988098]
[114.89076996 133.75825500]
[73.32723999 132.43757629]
[54.05060577 89.67702484]
[40.35885620 95.80368805]
[26.66710854 101.93035126]
[12.97535896 108.05701447]
[-0.71638983 114.18367767]
[-1.60981059 129.46308899]
[-9.51152515 142.57115173]
[-22.60577774 150.49574280]
[-37.88360596 151.41584778]
[-51.83427429 145.12002563]
[-61.25202179 133.05500793]
[-63.97272110 117.99325562]
[-59.37117386 103.39584351]
[-48.50478363 92.61715698]
[-33.87056351 88.13404846]
[-18.83135414 90.97671509]
[-6.84305382 100.49192810]
[6.84869528 94.36526489]
[20.54044342 88.23860168]
[34.23219299 82.11193848]
[47.92394257 75.98527527]
[47.81875610 60.98564148]
[34.04243088 55.05160141]
[20.26610374 49.11755753]
[6.48977804 43.18351746]
[-7.28654766 37.24947739]
[-21.06287384 31.31543541]
[-34.83919907 25.38139343]
[-52.17126465 33.04894257]
[-69.30600739 25.72933960]
[-75.53119659 8.50692749]
[-89.46852875 2.96159506]
[-103.40586090 -2.58373737]
[-119.08876801 -0.49635109]
[-128.05398560 -12.39063740]
[-141.99131775 -17.93597031]
[-155.92864990 -23.48130226]
[-172.06890869 -20.57884979]
[-182.44450378 -33.27841568]
[-176.38192749 -48.51577377]
[-160.11782837 -50.61603928]
[-150.38331604 -37.41863632]
[-136.44598389 -31.87330437]
[-122.50865173 -26.32797241]
[-107.82264709 -28.81199837]
[-97.86053467 -16.52107239]
[-83.92319489 -10.97573948]
[-69.98586273 -5.43040657]
[-60.74469757 -12.10242653]
[-49.31242371 -13.50371742]
[-38.51100540 -9.17197895]
[-31.06291962 -0.07453535]
[-28.90515900 11.60506821]
[-15.12883186 17.53910828]
[-1.35250628 23.47315025]
[12.42381954 29.40719223]
[26.20014572 35.34123230]
[39.97647095 41.27527237]
[53.75279617 47.20931625]
[60.29137039 43.53548050]
[51.04644012 31.72314835]
[41.43819427 20.20439529]
[48.28783417 6.85964108]
[63.24804688 7.95146132]
[68.08791351 22.14804459]
[73.36852264 36.18781662]
[79.90708923 32.51398087]
[82.00394440 17.66126633]
[84.10079956 2.80854869]
[86.19765472 -12.04416847]
[88.29450989 -26.89688492]
[90.39136505 -41.74960327]
[83.27561188 -52.49993134]
[85.32178497 -64.82250977]
[94.89614105 -72.20594025]
[97.20109558 -87.02779388]
[99.50604248 -101.84963989]
[101.81099701 -116.67148590]
[104.11594391 -131.49333191]
[97.60003662 -138.28552246]
[94.97337341 -147.18060303]
[96.70252228 -156.15281677]
[102.27664948 -163.21870422]
[110.34945679 -166.87544250]
[113.27581787 -181.58723450]
[116.20217133 -196.29901123]
[108.52054596 -210.38346863]
[114.87536621 -225.11424255]
[130.39175415 -229.19114685]
[143.16687012 -219.48672485]
[143.40074158 -203.44537354]
[130.91395569 -193.37265015]
[127.98759460 -178.66087341]
[125.06124115 -163.94909668]
[133.35961914 -145.04656982]
[118.93779755 -129.18838501]
[116.63284302 -114.36653900]
[114.32789612 -99.54468536]
[112.02294159 -84.72283936]
[109.71799469 -69.90099335]
[116.92317963 -53.89496231]
[105.24408722 -39.65274811]
[103.14723206 -24.80002975]
[101.05037689 -9.94731331]
[98.95352173 4.90540361]
[96.85666656 19.75812149]
[94.75981140 34.61083603]
[107.34750366 42.76865768]
[120.04836273 34.78817749]
[132.74922180 26.80769539]
[145.45008850 18.82721329]
[158.15095520 10.84673214]
[170.85182190 2.86625147]
[183.55267334 -5.11422968]
[196.25354004 -13.09471130]
[208.95440674 -21.07519150]
[219.14894104 -34.62170029]
[234.98817444 -28.57562447]
[233.56311035 -11.68167305]
[216.93489075 -8.37432957]
[204.23402405 -0.39384794]
[191.53315735 7.58663321]
[178.83229065 15.56711388]
[166.13143921 23.54759598]
[153.43057251 31.52807617]
[140.72970581 39.50855637]
[128.02883911 47.48904037]
[115.32798004 55.46952057]
[134.79617310 76.48705292]
[136.84898376 101.87276459]
[151.82539368 101.03170776]
[166.80178833 100.19065094]
[181.77819824 99.34959412]
[196.75459290 98.50853729]
[212.22979736 91.58360291]
[223.16806030 104.53701019]
[213.74888611 118.63365936]
[197.59565735 113.48493958]
[182.61924744 114.32599640]
[167.64285278 115.16705322]
[152.66644287 116.00811005]
[137.69004822 116.84916687]
[129.18240356 129.20310974]
[133.73754883 143.49473572]
[138.29269409 157.78636169]
[152.05363464 165.08531189]
[156.46960449 179.64393616]
[149.42637634 192.71789551]
[153.98153687 207.00952148]
[158.53668213 221.30114746]
[163.19194031 235.56048584]
[167.94708252 249.78681946]
[172.70220947 264.01315308]
[177.45735168 278.23950195]
[182.21249390 292.46585083]
[186.96762085 306.69216919]
[191.62965393 309.68765259]
[194.61839294 313.83236694]
[195.75935364 318.37191772]
[195.17884827 322.58654785]
[204.02963257 334.69702148]
[212.88041687 346.80749512]
[221.73120117 358.91796875]
[230.58198547 371.02847290]
[245.34460449 367.40441895]
[260.36956787 369.71060181]
[273.36572266 377.59533691]
[282.35119629 389.85623169]
[285.95581055 404.62359619]
[283.62985229 419.64553833]
[275.72805786 432.63128662]
[263.45535278 441.60064697]
[248.68324280 445.18582153]
[233.66438293 442.84011841]
[220.68904114 434.92123413]
[211.73583984 422.63671875]
[208.17010498 407.85992432]
[210.53556824 392.84417725]
[218.47151184 379.87924194]
[209.62072754 367.76876831]
[200.76994324 355.65829468]
[191.91915894 343.54782104]
[183.06837463 331.43734741]
[185.91334534 346.16506958]
[185.34909058 361.15444946]
[181.40493774 375.62661743]
[174.28582764 388.82958984]
[164.36169434 400.07733154]
[152.14817810 408.78536987]
[138.27992249 414.50125122]
[123.47752380 416.92797852]
[108.51013184 415.93945312]
[94.15546417 411.58703613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[20 181]
[22 180]
[23 179]
[24 178]
[27 175]
[28 174]
[29 173]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[52 89]
[53 88]
[54 87]
[55 86]
[56 85]
[57 84]
[58 83]
[61 78]
[62 77]
[63 76]
[65 74]
[66 73]
[67 72]
[97 137]
[98 136]
[99 135]
[100 134]
[101 133]
[102 132]
[105 130]
[106 129]
[107 128]
[108 127]
[109 126]
[114 124]
[115 123]
[116 122]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[146 150]
[160 172]
[161 171]
[162 170]
[163 169]
[164 168]
[190 213]
[191 212]
[192 211]
[193 210]
[194 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
