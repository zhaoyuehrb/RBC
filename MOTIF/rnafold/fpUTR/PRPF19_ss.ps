%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAAUUUCCGUUAGGUGCUGAAGGCUGUGGCGCGCGGCUGUCCCCAUUCCCACGUGAAGCGCUACGCUAGCAUCGCUCGGCUGGCGGCUCCCAGCUCGCCGCGGAGCAGUCCCGGCAGCAGCGGGGGACCGGAAGUGGCUCGCGGAGGCUCAGAAGCUAGUCCCGGAGCCCGGCGUGUGGCGCCUCGGAGCACGGUGACGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[34.69227600 188.09597778]
[37.17372131 168.87379456]
[37.40026855 153.87550354]
[37.62681961 138.87722778]
[56.43260956 71.65428925]
[104.25596619 69.84235382]
[91.91120911 61.32138062]
[79.56645203 52.80040741]
[67.22169495 44.27943802]
[54.87693787 35.75846481]
[42.53218079 27.23749542]
[30.18742180 18.71652412]
[17.64189339 32.91506195]
[-1.05019844 36.68719482]
[-18.33994675 28.35940170]
[-27.15402412 11.17529297]
[-41.90832138 13.87911892]
[-56.66262054 16.58294487]
[-71.41692352 19.28676987]
[-86.17121887 21.99059486]
[-100.92551422 24.69442177]
[-104.90382385 28.08101463]
[-109.33988190 29.46313477]
[-113.39293671 29.00233269]
[-116.40836334 27.17064095]
[-131.26998901 29.20338058]
[-146.13162231 31.23612213]
[-154.21224976 35.50051498]
[-161.23286438 33.18557739]
[-176.12350464 34.99362946]
[-191.01412964 36.80167770]
[-205.90476990 38.60972977]
[-220.79539490 40.41777802]
[-235.68603516 42.22583008]
[-250.57666016 44.03387833]
[-265.42251587 46.17879486]
[-280.21597290 48.65947342]
[-295.00942993 51.14015198]
[-297.74240112 66.05010986]
[-305.41271973 79.12458038]
[-317.09417725 88.78476715]
[-331.37619019 93.86415100]
[-346.53411865 93.74937439]
[-360.73754883 88.45429230]
[-372.27139282 78.61831665]
[-379.74285889 65.42919159]
[-382.24972534 50.47956085]
[-379.48928833 35.57466888]
[-371.79489136 22.51435661]
[-360.09564209 12.87571430]
[-345.80429077 7.82265902]
[-330.64660645 7.96537018]
[-316.45294189 13.28661537]
[-304.93725586 23.14382744]
[-297.49011230 36.34670258]
[-282.69665527 33.86602020]
[-267.90319824 31.38534164]
[-265.56924438 28.73948860]
[-261.83679199 27.09375381]
[-257.19039917 27.09355164]
[-252.38471985 29.14324570]
[-237.49407959 27.33519554]
[-222.60345459 25.52714539]
[-207.71281433 23.71909523]
[-192.82218933 21.91104507]
[-177.93154907 20.10299492]
[-163.04090881 18.29494476]
[-148.16436768 16.37449455]
[-133.30273438 14.34175396]
[-118.44110870 12.30901337]
[-103.62934113 9.94012260]
[-88.87504578 7.23629665]
[-74.12074280 4.53247118]
[-59.36644745 1.82864559]
[-44.61214828 -0.87518001]
[-29.85785103 -3.57900548]
[-22.29254341 -16.53146172]
[-27.18558502 -30.71096039]
[-32.07862854 -44.89045715]
[-36.97166824 -59.06995392]
[-48.78739166 -69.59132385]
[-45.62499619 -84.14633942]
[-50.51803589 -98.32583618]
[-56.27694702 -105.41926575]
[-55.37614059 -112.75659943]
[-60.05447006 -127.00837708]
[-64.73279572 -141.26016235]
[-69.41112518 -155.51194763]
[-74.19694519 -169.72798157]
[-79.08998871 -183.90748596]
[-83.98303223 -198.08697510]
[-94.86540222 -211.08737183]
[-85.38560486 -225.14332581]
[-69.25469971 -219.92507935]
[-69.80353546 -202.98002625]
[-64.91049194 -188.80052185]
[-60.01744843 -174.62103271]
[-54.86272049 -169.32228088]
[-55.15934372 -160.19026184]
[-50.48101807 -145.93849182]
[-45.80268860 -131.68670654]
[-41.12436295 -117.43492889]
[-36.33853912 -103.21887970]
[-31.44549942 -89.03938293]
[-19.97975922 -79.53222656]
[-22.79217148 -63.96299744]
[-17.89912987 -49.78350067]
[-13.00608826 -35.60400009]
[-8.11304665 -21.42450523]
[7.99017811 -22.71190453]
[22.27379227 -15.61373615]
[29.64261055 -28.67897606]
[37.01142883 -41.74421692]
[44.38024902 -54.80945587]
[51.74906921 -67.87469482]
[51.13542175 -86.27754974]
[66.57879639 -94.61026764]
[73.74945068 -107.78530884]
[72.79598999 -124.15671539]
[86.64412689 -132.94084167]
[101.04809570 -125.10134125]
[101.19031525 -108.70281219]
[86.92449188 -100.61465454]
[79.75383759 -87.43961334]
[82.87585449 -75.75136566]
[77.00775146 -64.71566772]
[64.81430817 -60.50587845]
[57.44548798 -47.44063568]
[50.07667160 -34.37539673]
[42.70785141 -21.31015778]
[35.33903122 -8.24491692]
[38.70839310 6.37176609]
[51.05315018 14.89273739]
[63.39790726 23.41370773]
[75.74266815 31.93467903]
[88.08742523 40.45565033]
[100.43218231 48.97662354]
[112.77693939 57.49759293]
[127.13104248 61.85186386]
[142.12933350 61.62531662]
[157.12762451 61.39876556]
[172.12591553 61.17221832]
[187.12420654 60.94567108]
[195.65992737 57.68638229]
[202.35032654 60.83068085]
[217.35032654 60.83068085]
[232.35032654 60.83068085]
[240.93431091 57.70067978]
[247.57644653 60.94567108]
[262.57473755 61.17221832]
[277.57302856 61.39876556]
[292.57131958 61.62531662]
[301.77249146 49.13059998]
[316.57077026 44.46257401]
[331.27590942 49.41619110]
[340.23348999 62.08668137]
[339.99914551 77.60198975]
[330.66296387 89.99615479]
[315.81491089 94.50337219]
[301.16436768 89.39052582]
[292.34475708 76.62360382]
[277.34646606 76.39705658]
[262.34817505 76.17050934]
[247.34989929 75.94396210]
[232.35032654 75.83068085]
[217.35032654 75.83068085]
[202.35032654 75.83068085]
[187.35075378 75.94396210]
[172.35246277 76.17050934]
[157.35417175 76.39705658]
[142.35588074 76.62360382]
[127.35759735 76.85015106]
[124.75109100 83.88265991]
[116.93157959 104.98017883]
[128.15924072 114.92701721]
[139.38690186 124.87385559]
[150.61456299 134.82069397]
[161.84222412 144.76753235]
[177.70745850 150.74507141]
[176.35545349 167.64503479]
[159.74168396 171.02423096]
[151.89538574 155.99519348]
[140.66772461 146.04835510]
[129.44006348 136.10151672]
[118.21240234 126.15467834]
[106.98474121 116.20783997]
[100.68650055 120.27995300]
[108.83073425 132.87643433]
[109.58591461 147.85742188]
[96.23425293 141.02067566]
[88.09001160 128.42419434]
[81.79177094 132.49630737]
[86.25431824 146.81712341]
[91.79635620 154.08125305]
[90.67435455 161.38803101]
[94.92009735 175.77459717]
[107.17063141 186.67674255]
[103.58983612 202.68017578]
[87.86132812 207.32194519]
[76.16524506 195.82699585]
[80.53352356 180.02035522]
[76.28777313 165.63377380]
[71.93350220 151.27966309]
[67.47096252 136.95884705]
[52.62510681 139.10377502]
[52.39855957 154.10205078]
[52.17200851 169.10034180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[6 138]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
[16 76]
[17 75]
[18 74]
[19 73]
[20 72]
[21 71]
[25 70]
[26 69]
[27 68]
[29 67]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[35 61]
[36 57]
[37 56]
[38 55]
[77 109]
[78 108]
[79 107]
[80 106]
[82 104]
[83 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 97]
[90 96]
[91 95]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[117 124]
[118 123]
[139 172]
[140 171]
[141 170]
[142 169]
[143 168]
[145 167]
[146 166]
[147 165]
[149 164]
[150 163]
[151 162]
[152 161]
[174 186]
[175 185]
[176 184]
[177 183]
[178 182]
[192 204]
[193 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
