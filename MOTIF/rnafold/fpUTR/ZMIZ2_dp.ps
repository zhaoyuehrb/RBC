%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZMIZ2)
} def

/sequence { (\
CGCAUGGAGCGGCGCGGGCCGGGGGCCGCCACGGCGAGGGGCCGGGCCAGGCCGGGCGGAGCCAGAGCAGCUGAGUUCCAGAUAAAAACUGUCAGACCCGGCCUGUAGGCUGCUCCAUUGCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 120 0.041620141 ubox
2 119 0.042365508 ubox
2 121 0.993448312 ubox
3 120 0.995309229 ubox
4 118 0.693328362 ubox
4 119 0.712516540 ubox
5 117 0.981534887 ubox
6 116 0.999964177 ubox
7 115 0.999992490 ubox
8 114 0.999849517 ubox
9 113 0.999990076 ubox
10 112 0.999968975 ubox
11 111 0.999238082 ubox
12 110 0.999980509 ubox
13 109 0.996971043 ubox
14 106 0.957180992 ubox
15 105 0.998006443 ubox
16 104 0.998841509 ubox
17 27 0.024340136 ubox
17 103 0.999685089 ubox
18 26 0.024406699 ubox
18 102 0.999693734 ubox
19 25 0.024450869 ubox
19 101 0.999694390 ubox
20 24 0.024273050 ubox
20 100 0.999677099 ubox
21 98 0.003183876 ubox
21 99 0.999654084 ubox
22 97 0.004488130 ubox
22 98 0.999639208 ubox
22 99 0.005409178 ubox
23 53 0.004159128 ubox
23 63 0.007214142 ubox
23 97 0.997590709 ubox
23 98 0.007627522 ubox
24 43 0.010412110 ubox
24 48 0.005240869 ubox
24 52 0.003576734 ubox
24 53 0.993638907 ubox
24 62 0.009391481 ubox
24 63 0.042686916 ubox
24 93 0.010722264 ubox
24 97 0.007860448 ubox
25 35 0.061152340 ubox
25 42 0.010434273 ubox
25 47 0.005237463 ubox
25 52 0.994533978 ubox
25 57 0.017293154 ubox
25 62 0.042646612 ubox
25 92 0.010643001 ubox
26 34 0.061206777 ubox
26 39 0.003180730 ubox
26 41 0.010441982 ubox
26 46 0.005228158 ubox
26 51 0.994539522 ubox
26 56 0.017268871 ubox
26 59 0.043624327 ubox
26 61 0.031598432 ubox
26 91 0.010535882 ubox
27 33 0.061201738 ubox
27 36 0.013904362 ubox
27 40 0.010418234 ubox
27 45 0.005211487 ubox
27 50 0.989340414 ubox
27 55 0.017202347 ubox
27 58 0.056602790 ubox
28 32 0.057254305 ubox
28 35 0.014653855 ubox
28 47 0.990151065 ubox
28 52 0.003235804 ubox
28 57 0.076485200 ubox
29 34 0.014646047 ubox
29 39 0.010268623 ubox
29 46 0.994568888 ubox
29 51 0.003375177 ubox
29 56 0.076521694 ubox
30 38 0.010272880 ubox
30 45 0.993716256 ubox
30 50 0.003348114 ubox
30 55 0.076454750 ubox
32 44 0.991215688 ubox
32 54 0.076279955 ubox
33 43 0.994993642 ubox
33 53 0.076569647 ubox
34 42 0.995013410 ubox
34 52 0.076571100 ubox
35 41 0.994868583 ubox
35 51 0.076555420 ubox
36 57 0.005805404 ubox
36 93 0.020335022 ubox
37 92 0.020326708 ubox
38 48 0.049852213 ubox
39 47 0.049683390 ubox
39 48 0.020670168 ubox
39 90 0.020251016 ubox
40 47 0.020872426 ubox
40 48 0.054253808 ubox
40 53 0.009851663 ubox
40 89 0.020272150 ubox
41 47 0.054351391 ubox
41 52 0.009866864 ubox
41 57 0.062027212 ubox
42 46 0.054032878 ubox
42 51 0.009874487 ubox
42 55 0.003795065 ubox
42 56 0.062034807 ubox
43 50 0.009872786 ubox
43 54 0.004538033 ubox
43 55 0.061959603 ubox
44 53 0.005246814 ubox
45 52 0.005210517 ubox
45 53 0.062166089 ubox
46 52 0.062195790 ubox
46 57 0.010088432 ubox
47 51 0.061746528 ubox
47 56 0.010096128 ubox
48 54 0.003243170 ubox
48 55 0.010093147 ubox
48 105 0.024348311 ubox
49 104 0.024518088 ubox
50 103 0.024547574 ubox
51 57 0.005254368 ubox
51 102 0.024547877 ubox
52 56 0.005223954 ubox
52 101 0.024547879 ubox
53 100 0.024547479 ubox
54 63 0.030785825 ubox
54 78 0.034029038 ubox
54 79 0.030187671 ubox
54 90 0.009338354 ubox
54 93 0.009428741 ubox
54 99 0.024665697 ubox
55 62 0.030579292 ubox
55 63 0.074580650 ubox
55 72 0.003790432 ubox
55 77 0.034334379 ubox
55 78 0.029871333 ubox
55 79 0.009429084 ubox
55 89 0.009779221 ubox
55 90 0.004460497 ubox
55 92 0.008045093 ubox
55 93 0.082941469 ubox
55 98 0.024677673 ubox
56 62 0.074776035 ubox
56 68 0.004197817 ubox
56 71 0.004092762 ubox
56 76 0.039328584 ubox
56 77 0.022110218 ubox
56 78 0.008121268 ubox
56 89 0.004703462 ubox
56 92 0.083500159 ubox
56 97 0.024579230 ubox
57 61 0.074323871 ubox
57 67 0.004202419 ubox
57 70 0.004113898 ubox
57 73 0.004800643 ubox
57 75 0.043651565 ubox
57 91 0.083604519 ubox
58 72 0.005021161 ubox
58 78 0.009225106 ubox
58 79 0.992501487 ubox
58 90 0.015240109 ubox
59 71 0.005044913 ubox
59 77 0.009723206 ubox
59 78 0.994025863 ubox
59 89 0.010762893 ubox
60 72 0.044515529 ubox
60 76 0.011409841 ubox
60 77 0.993680986 ubox
61 68 0.015829174 ubox
61 71 0.045065156 ubox
61 76 0.993822748 ubox
62 67 0.015798340 ubox
62 70 0.045013125 ubox
62 75 0.994157712 ubox
63 73 0.993869287 ubox
64 72 0.993658222 ubox
65 71 0.991151885 ubox
65 78 0.087819121 ubox
65 93 0.010492401 ubox
66 72 0.016076969 ubox
66 77 0.088018272 ubox
66 92 0.008950305 ubox
67 71 0.016993249 ubox
67 76 0.088122518 ubox
67 92 0.013409207 ubox
68 75 0.088107195 ubox
68 91 0.016436136 ubox
69 90 0.016442775 ubox
70 89 0.016414318 ubox
71 81 0.017497067 ubox
71 95 0.028591415 ubox
72 80 0.017789634 ubox
72 94 0.028724431 ubox
73 79 0.017876201 ubox
73 93 0.028770436 ubox
74 90 0.006839674 ubox
74 92 0.027859766 ubox
75 89 0.010442811 ubox
76 88 0.010372002 ubox
77 87 0.009567937 ubox
77 96 0.005919709 ubox
78 95 0.006958863 ubox
79 91 0.055368824 ubox
80 90 0.081089788 ubox
81 89 0.083037772 ubox
81 93 0.973278781 ubox
82 92 0.974110263 ubox
83 91 0.972418852 ubox
84 90 0.932874458 ubox
89 95 0.047385103 ubox
90 94 0.042956460 ubox
92 96 0.004448034 ubox
2 121 0.9500000 lbox
3 120 0.9500000 lbox
4 119 0.9500000 lbox
5 117 0.9500000 lbox
6 116 0.9500000 lbox
7 115 0.9500000 lbox
8 114 0.9500000 lbox
9 113 0.9500000 lbox
10 112 0.9500000 lbox
11 111 0.9500000 lbox
12 110 0.9500000 lbox
13 109 0.9500000 lbox
14 106 0.9500000 lbox
15 105 0.9500000 lbox
16 104 0.9500000 lbox
17 103 0.9500000 lbox
18 102 0.9500000 lbox
19 101 0.9500000 lbox
20 100 0.9500000 lbox
21 99 0.9500000 lbox
22 98 0.9500000 lbox
23 97 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
58 79 0.9500000 lbox
59 78 0.9500000 lbox
60 77 0.9500000 lbox
61 76 0.9500000 lbox
62 75 0.9500000 lbox
63 73 0.9500000 lbox
64 72 0.9500000 lbox
65 71 0.9500000 lbox
81 93 0.9500000 lbox
82 92 0.9500000 lbox
83 91 0.9500000 lbox
84 90 0.9500000 lbox
showpage
end
%%EOF
