%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUUGGGGCCUUCUCUUGGAUCAAGAGUCUCUUAUUUGAUCGAGGUCUGUUAUUAGACUUCCUCAUUCUUUCUCAGACCUCAGGCUGCAUGGUGGCAGCUGAUGAAAAUAUCCAAAAGAUGAGAAGAGACAAUUGAGUCUGGUGAGGGAAAGGGGAGACAGAGGGUGAAGUGGUGCUCAAG\
) } def
/len { sequence length } bind def

/coor [
[131.42529297 334.66027832]
[130.65312195 319.68017578]
[129.88093567 304.70007324]
[129.10874939 289.71997070]
[111.85143280 282.07891846]
[100.79639435 266.68191528]
[99.05818939 247.72525024]
[107.19815826 230.42715454]
[123.04705048 219.59124756]
[121.24883270 204.69941711]
[119.45061493 189.80760193]
[117.65239716 174.91577148]
[115.85417938 160.02395630]
[114.05596161 145.13212585]
[112.25774384 130.24031067]
[105.57811737 126.82964325]
[98.75658417 140.18878174]
[85.39755249 133.36705017]
[92.21887207 120.00831604]
[85.53925323 116.59764862]
[72.42203522 123.87355042]
[59.30482101 131.14944458]
[46.18760681 138.42533875]
[33.07039261 145.70124817]
[19.95317841 152.97714233]
[6.96279669 160.47714233]
[-5.89692259 168.19903564]
[-18.75664139 175.92092896]
[-29.22315025 189.25840759]
[-44.93682098 182.89312744]
[-43.17026520 166.03146362]
[-26.47853470 163.06120300]
[-13.61881447 155.33930969]
[-0.75909531 147.61741638]
[1.25005591 143.25976562]
[6.03106260 140.12988281]
[12.67728043 139.85992432]
[25.79449463 132.58403015]
[38.91170883 125.30812836]
[52.02892303 118.03223419]
[65.14614105 110.75633240]
[78.26335144 103.48043823]
[76.20976257 88.62167358]
[61.61079407 85.17636108]
[47.01182938 81.73104095]
[32.41286469 78.28572845]
[17.81389809 74.84040833]
[3.21493292 71.39509583]
[-11.38403225 67.94977570]
[-25.98299789 64.50446320]
[-41.52448654 69.73841095]
[-53.64739227 58.69453430]
[-49.88070679 42.73382568]
[-34.09927750 38.27529526]
[-22.53768158 49.90549850]
[-7.93871641 53.35081482]
[6.66024923 56.79613113]
[21.25921440 60.24144363]
[35.85818100 63.68675995]
[50.45714569 67.13208008]
[65.05611420 70.57739258]
[79.65507507 74.02271271]
[93.77959442 68.97315216]
[102.88545990 57.05328369]
[111.99131775 45.13341522]
[114.72415924 36.39067459]
[121.35723114 33.08886719]
[130.66638184 21.32707024]
[139.97552490 9.56527424]
[149.28465271 -2.19652343]
[158.59379578 -13.95832062]
[167.90293884 -25.72011757]
[177.21208191 -37.48191452]
[186.52122498 -49.24371338]
[195.83036804 -61.00550842]
[194.19705200 -76.49647522]
[203.80540466 -88.29199982]
[218.58374023 -89.75364685]
[227.89288330 -101.51544189]
[237.20202637 -113.27723694]
[196.80317688 -178.94660950]
[197.83239746 -193.91125488]
[198.86161804 -208.87590027]
[199.63378906 -223.85601807]
[200.14871216 -238.84716797]
[200.66362000 -253.83833313]
[201.17854309 -268.82949829]
[201.69345093 -283.82064819]
[202.20835876 -298.81179810]
[191.24140930 -310.19168091]
[191.61689758 -325.99151611]
[203.11209106 -336.83752441]
[218.90705872 -336.29501343]
[229.63095093 -324.68579102]
[228.92146301 -308.89746094]
[217.19952393 -298.29690552]
[216.68461609 -283.30572510]
[216.16969299 -268.31457520]
[215.65478516 -253.32341003]
[215.13986206 -238.33226013]
[214.62495422 -223.34109497]
[217.18879700 -219.28494263]
[217.21473694 -213.57060242]
[213.82626343 -207.84667969]
[212.79704285 -192.88203430]
[211.76782227 -177.91738892]
[218.50500488 -174.62188721]
[230.95014954 -182.99557495]
[231.97938538 -168.03089905]
[238.71656799 -164.73539734]
[249.89813232 -174.73402405]
[261.07971191 -184.73265076]
[272.26126099 -194.73127747]
[274.58795166 -210.60472107]
[288.52093506 -218.55776978]
[303.37207031 -212.48954773]
[307.74880981 -197.05503845]
[298.29370117 -184.09431458]
[282.25988770 -183.54971313]
[271.07833862 -173.55108643]
[259.89675903 -163.55245972]
[248.71519470 -153.55383301]
[251.71859741 -146.68145752]
[262.93457031 -156.64149475]
[275.87295532 -149.05213928]
[272.65304565 -134.40180969]
[257.72540283 -132.93670654]
[260.72882080 -126.06432343]
[275.66201782 -127.47850800]
[290.59518433 -128.89270020]
[305.52838135 -130.30688477]
[315.40591431 -142.64422607]
[331.12316895 -144.30050659]
[343.35537720 -134.29309082]
[344.84539795 -118.55919647]
[334.70922852 -106.43346405]
[318.96044922 -105.10987854]
[306.94256592 -115.37370300]
[292.00936890 -113.95951080]
[277.07620239 -112.54532623]
[262.14300537 -111.13113403]
[248.96382141 -103.96810150]
[239.65467834 -92.20629883]
[230.34553528 -80.44450378]
[232.31736755 -65.72555542]
[223.04412842 -53.66480637]
[207.59216309 -51.69636536]
[198.28302002 -39.93457031]
[188.97387695 -28.17277145]
[179.66473389 -16.41097450]
[170.35560608 -4.64917803]
[161.04646301 7.11261892]
[151.73731995 18.87441635]
[142.42817688 30.63621330]
[133.11903381 42.39801025]
[123.91118622 54.23928070]
[114.80532074 66.15914917]
[105.69946289 78.07901764]
[123.15052032 83.88605499]
[133.59353638 103.38032532]
[127.14956665 128.44209290]
[128.94778442 143.33390808]
[130.74600220 158.22573853]
[132.54421997 173.11755371]
[134.34243774 188.00938416]
[136.14065552 202.90119934]
[137.93887329 217.79302979]
[148.90658569 220.57800293]
[158.47688293 226.56578064]
[165.74369812 235.17025757]
[170.02485657 245.55850220]
[170.92623901 256.73138428]
[168.37789917 267.61972046]
[162.63925171 277.18643188]
[154.27276611 284.52554321]
[144.08886719 288.94778442]
[144.86105347 303.92788696]
[145.63322449 318.90798950]
[146.40541077 333.88812256]
[155.77439880 347.34744263]
[148.55880737 362.07385254]
[132.18139648 362.91806030]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[9 167]
[10 166]
[11 165]
[12 164]
[13 163]
[14 162]
[15 161]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[25 37]
[26 34]
[27 33]
[28 32]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[63 158]
[64 157]
[65 156]
[67 155]
[68 154]
[69 153]
[70 152]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[78 144]
[79 143]
[80 142]
[81 106]
[82 105]
[83 104]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[110 122]
[111 121]
[112 120]
[113 119]
[128 141]
[129 140]
[130 139]
[131 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
