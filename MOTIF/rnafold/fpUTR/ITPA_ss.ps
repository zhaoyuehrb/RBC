%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAAUCGGACGCUGUGGGCUAGGCCGCCACCGCGAGCCCACUCGCCCGAUACGCGCCUUGGGGUCCGGGUCGGCUUUCCCCGGGACCCCUGGCCGGAAACUGAGCCGUUCACUUCCGCCACCAGCCGGAAGUUUUCUGUCACUGGACGCCAAGGAGUUUUCGGUGGCUCAGCUGGGUAACCGGGGAUCACC\
) } def
/len { sequence length } bind def

/coor [
[85.08896637 129.15145874]
[73.23215485 138.33927917]
[71.10507202 153.77020264]
[58.94969177 162.91905212]
[44.25177765 160.79611206]
[32.39496613 169.98391724]
[20.53815079 179.17173767]
[8.68133831 188.35955811]
[-3.17547512 197.54737854]
[-9.34461975 212.11625671]
[-24.14420509 213.79598999]
[-36.00101852 222.98381042]
[-38.39893723 235.66720581]
[-48.47639084 243.07475281]
[-60.50069427 241.67016602]
[-72.50548553 250.66377258]
[-84.51027679 259.65737915]
[-96.51506805 268.65097046]
[-108.51985931 277.64459229]
[-120.52465057 286.63818359]
[-132.52944946 295.63180542]
[-134.10385132 299.71533203]
[-136.64588928 302.77047729]
[-139.71043396 304.61865234]
[-142.84022522 305.24536133]
[-145.62075806 304.78961182]
[-158.18528748 312.98309326]
[-170.74980164 321.17654419]
[-177.68048096 336.03918457]
[-194.03858948 337.19860840]
[-202.99630737 323.46209717]
[-195.33871460 308.96060181]
[-178.94326782 308.61203003]
[-166.37873840 300.41854858]
[-153.81422424 292.22509766]
[-141.52305603 283.62701416]
[-129.51826477 274.63339233]
[-117.51346588 265.63980103]
[-105.50867462 256.64617920]
[-93.50388336 247.65258789]
[-81.49909210 238.65898132]
[-69.49430084 229.66537476]
[-63.48049164 213.18585205]
[-45.18883514 211.12699890]
[-33.33202362 201.93917847]
[-28.01095581 188.02748108]
[-12.36329174 185.69055176]
[-0.50647867 176.50274658]
[11.35033417 167.31492615]
[23.20714760 158.12710571]
[35.06396103 148.93928528]
[36.67735672 134.17675781]
[48.57096863 124.69009399]
[64.04433441 126.48246765]
[75.90114594 117.29464722]
[77.46313477 89.45574951]
[98.53203583 79.95299530]
[103.09757233 65.66468811]
[107.66310883 51.37637329]
[112.22864532 37.08805847]
[116.79418182 22.79974556]
[121.35971832 8.51143265]
[118.18986511 -6.98897362]
[129.43385315 -16.75739479]
[133.99938965 -31.04570770]
[138.56492615 -45.33402252]
[143.13044739 -59.62233353]
[143.25253296 -74.62183380]
[138.92018127 -88.98256683]
[127.52680206 -99.95989227]
[131.25840759 -114.37947083]
[126.92604828 -128.74020386]
[122.59368896 -143.10093689]
[118.26132965 -157.46166992]
[112.77867889 -164.78712463]
[113.97737885 -172.09150696]
[109.87934113 -186.52085876]
[105.78130341 -200.95021057]
[101.68326569 -215.37956238]
[97.58522797 -229.80889893]
[93.25286865 -244.16963196]
[88.68733215 -258.45794678]
[84.12179565 -272.74627686]
[79.55625916 -287.03457642]
[74.99073029 -301.32287598]
[64.41031647 -314.57019043]
[74.21097565 -328.40435791]
[90.21756744 -322.81637573]
[89.27903748 -305.88842773]
[93.84457397 -291.60012817]
[98.41011047 -277.31179810]
[102.97564697 -263.02349854]
[107.54118347 -248.73516846]
[111.31316376 -245.78337097]
[113.26202393 -240.42462158]
[112.01457977 -233.90693665]
[116.11261749 -219.47760010]
[120.21065521 -205.04824829]
[124.30868530 -190.61889648]
[128.40672302 -176.18954468]
[132.62207031 -161.79403687]
[136.95442200 -147.43330383]
[141.28678894 -133.07257080]
[145.61914062 -118.71183014]
[156.70263672 -108.76168823]
[153.28091431 -93.31493378]
[157.61326599 -78.95420074]
[164.82794189 -76.90518188]
[168.92622375 -91.33445740]
[183.35543823 -87.23594666]
[179.25729370 -72.80714417]
[186.47196960 -70.75812531]
[197.70585632 -80.69792938]
[208.93974304 -90.63774109]
[220.17362976 -100.57755280]
[231.40751648 -110.51735687]
[242.64140320 -120.45716858]
[253.87528992 -130.39697266]
[252.25335693 -145.82905579]
[260.04107666 -159.25035095]
[274.24389648 -165.50009155]
[289.40054321 -162.17515564]
[299.68301392 -150.55401611]
[301.13742065 -135.10525513]
[293.20458984 -121.76922607]
[278.93478394 -115.67391205]
[263.81509399 -119.16308594]
[252.58120728 -109.22328186]
[241.34732056 -99.28347015]
[230.11343384 -89.34366608]
[218.87954712 -79.40385437]
[207.64566040 -69.46404266]
[196.41177368 -59.52423477]
[211.03582764 -62.86142731]
[222.07643127 -52.70735168]
[227.73944092 -38.81741333]
[226.94572449 -23.83842850]
[219.84655762 -10.62473297]
[207.79470825 -1.69428265]
[193.08673096 1.25117064]
[178.52534485 -2.34964800]
[166.88529968 -11.81058025]
[160.38467407 -25.32878494]
[160.26231384 -40.32878876]
[157.41876221 -55.05679703]
[152.85322571 -40.76848602]
[148.28768921 -26.48017311]
[143.72216797 -12.19186020]
[147.21856689 2.28655100]
[135.64802551 13.07696819]
[131.08248901 27.36528206]
[126.51696014 41.65359497]
[121.95142365 55.94190598]
[117.38588715 70.23021698]
[112.82035065 84.51853180]
[124.88106537 99.84440613]
[119.20314789 122.60749054]
[128.48715210 134.38912964]
[137.77116394 146.17077637]
[147.05517578 157.95242310]
[156.33918762 169.73406982]
[165.62321472 181.51570129]
[174.90722656 193.29734802]
[184.19123840 205.07899475]
[193.47525024 216.86064148]
[208.09384155 222.91101074]
[209.89398193 237.69642639]
[219.17799377 249.47807312]
[228.46200562 261.25970459]
[237.74601746 273.04135132]
[253.16877747 278.61544800]
[255.78610229 294.80438232]
[242.90551758 304.95437622]
[227.77745056 298.62399292]
[225.96437073 282.32537842]
[216.68035889 270.54373169]
[207.39634705 258.76208496]
[198.11233521 246.98043823]
[184.15779114 241.77278137]
[181.69360352 226.14465332]
[172.40959167 214.36300659]
[163.12557983 202.58135986]
[153.84156799 190.79971313]
[144.55755615 179.01808167]
[135.27354431 167.23643494]
[125.98952484 155.45478821]
[116.70551300 143.67314148]
[107.42150116 131.89151001]
[113.03367615 145.80206299]
[106.54876709 159.32781982]
[92.18881226 163.66276550]
[79.30293274 155.98461914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 55]
[2 54]
[5 51]
[6 50]
[7 49]
[8 48]
[9 47]
[11 45]
[12 44]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[20 37]
[21 36]
[26 35]
[27 34]
[28 33]
[57 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[64 148]
[65 147]
[66 146]
[67 145]
[68 107]
[69 106]
[71 104]
[72 103]
[73 102]
[74 101]
[76 100]
[77 99]
[78 98]
[79 97]
[80 96]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
[112 133]
[113 132]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[157 188]
[158 187]
[159 186]
[160 185]
[161 184]
[162 183]
[163 182]
[164 181]
[165 180]
[167 178]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
