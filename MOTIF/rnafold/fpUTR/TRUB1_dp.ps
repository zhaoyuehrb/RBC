%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRUB1)
} def

/sequence { (\
GCACUCUUGUUGCAUCAUCAGCGUGCACCUCCACGAUGAAACAGGUCUGGGCUACAAAAGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.013600800 ubox
1 13 0.085869635 ubox
1 22 0.003786628 ubox
1 24 0.008225412 ubox
1 26 0.563268111 ubox
1 46 0.003557555 ubox
1 52 0.500563632 ubox
1 61 0.016851940 ubox
2 9 0.014924629 ubox
2 12 0.085924895 ubox
2 21 0.003757649 ubox
2 23 0.008554599 ubox
2 25 0.563690621 ubox
2 45 0.003473013 ubox
2 49 0.439911972 ubox
2 51 0.500028818 ubox
2 60 0.018198152 ubox
3 8 0.012746090 ubox
3 10 0.057538696 ubox
3 11 0.064032370 ubox
3 24 0.563497401 ubox
3 46 0.025633640 ubox
3 48 0.442444399 ubox
3 61 0.401071203 ubox
4 9 0.080450544 ubox
4 21 0.017152717 ubox
4 23 0.560357756 ubox
4 45 0.025791930 ubox
4 50 0.358619746 ubox
4 51 0.041972828 ubox
4 60 0.445188907 ubox
5 20 0.022457967 ubox
5 44 0.017946929 ubox
5 45 0.018281435 ubox
5 49 0.353754353 ubox
5 50 0.042944689 ubox
5 51 0.006785964 ubox
5 59 0.437933265 ubox
6 21 0.424287082 ubox
6 44 0.028114584 ubox
6 45 0.674439659 ubox
6 49 0.039262133 ubox
6 50 0.010885740 ubox
6 60 0.020237457 ubox
7 20 0.365299341 ubox
7 21 0.270673556 ubox
7 43 0.019928426 ubox
7 44 0.674892812 ubox
7 45 0.004547084 ubox
7 49 0.010695962 ubox
7 57 0.427141118 ubox
7 58 0.014256273 ubox
7 59 0.018325136 ubox
8 14 0.022273838 ubox
8 17 0.228567118 ubox
8 20 0.337825107 ubox
8 23 0.054516538 ubox
8 27 0.009865649 ubox
8 43 0.675717037 ubox
8 56 0.456860747 ubox
8 57 0.011021672 ubox
8 58 0.011352259 ubox
9 13 0.022037059 ubox
9 15 0.008467540 ubox
9 16 0.240031568 ubox
9 18 0.183617215 ubox
9 19 0.390125852 ubox
9 22 0.237011332 ubox
9 26 0.011170344 ubox
9 28 0.016462498 ubox
9 42 0.676664954 ubox
9 46 0.003190375 ubox
9 52 0.004160295 ubox
9 55 0.457993578 ubox
10 14 0.014732820 ubox
10 17 0.178957253 ubox
10 21 0.237063572 ubox
10 25 0.010804497 ubox
10 27 0.011722647 ubox
10 40 0.015060001 ubox
10 41 0.675239235 ubox
10 44 0.065123210 ubox
10 45 0.003819269 ubox
10 51 0.004109384 ubox
10 54 0.432448654 ubox
10 57 0.003202163 ubox
11 17 0.345081417 ubox
11 20 0.237182704 ubox
11 23 0.013727662 ubox
11 27 0.066913411 ubox
11 39 0.017094463 ubox
11 40 0.601503245 ubox
11 43 0.067799668 ubox
11 44 0.003745454 ubox
11 50 0.003617715 ubox
11 54 0.013850960 ubox
11 56 0.003722328 ubox
12 16 0.348576464 ubox
12 19 0.235358891 ubox
12 22 0.037819251 ubox
12 26 0.076526087 ubox
12 42 0.068011023 ubox
12 46 0.008375774 ubox
12 52 0.450340893 ubox
12 53 0.005129523 ubox
12 55 0.003664205 ubox
13 21 0.037888632 ubox
13 25 0.076551421 ubox
13 38 0.407187664 ubox
13 45 0.008753220 ubox
13 49 0.010496925 ubox
13 51 0.450943001 ubox
14 24 0.076094062 ubox
14 37 0.408002046 ubox
14 46 0.084243323 ubox
14 48 0.010459997 ubox
15 23 0.074134217 ubox
15 36 0.406485819 ubox
15 39 0.450024835 ubox
15 45 0.085190531 ubox
15 50 0.382544579 ubox
15 51 0.003180769 ubox
16 25 0.015753949 ubox
16 35 0.351733611 ubox
16 38 0.453588068 ubox
16 44 0.084860981 ubox
16 49 0.424078450 ubox
16 50 0.011526228 ubox
17 24 0.017296256 ubox
17 37 0.452609262 ubox
17 46 0.025068406 ubox
17 48 0.420603124 ubox
18 23 0.016269054 ubox
18 36 0.449852190 ubox
18 39 0.532063983 ubox
18 45 0.024367818 ubox
18 50 0.073306526 ubox
19 25 0.009837408 ubox
19 35 0.377417106 ubox
19 38 0.535827967 ubox
19 44 0.022344405 ubox
19 49 0.076171906 ubox
20 24 0.008052510 ubox
20 30 0.073246202 ubox
20 37 0.502138512 ubox
20 48 0.076350617 ubox
20 53 0.057475133 ubox
21 29 0.074979519 ubox
21 46 0.045237896 ubox
21 47 0.075938126 ubox
21 52 0.060033370 ubox
21 61 0.005229790 ubox
22 35 0.625578898 ubox
22 38 0.003812458 ubox
22 45 0.076665307 ubox
22 51 0.060033223 ubox
22 60 0.005591275 ubox
23 34 0.790869353 ubox
23 37 0.003658103 ubox
23 42 0.006265328 ubox
23 52 0.007435508 ubox
23 55 0.021304379 ubox
24 33 0.791041056 ubox
24 36 0.003642354 ubox
24 41 0.006258446 ubox
24 43 0.075962255 ubox
24 49 0.055316036 ubox
24 51 0.007405607 ubox
24 54 0.021060806 ubox
24 56 0.006087638 ubox
25 32 0.785481665 ubox
25 34 0.012374321 ubox
25 42 0.075805148 ubox
25 48 0.048751769 ubox
25 52 0.020901999 ubox
25 53 0.012005123 ubox
25 55 0.006788409 ubox
26 38 0.020462441 ubox
26 49 0.007405266 ubox
26 51 0.021054766 ubox
27 37 0.018767959 ubox
27 46 0.077716615 ubox
27 48 0.005423718 ubox
27 61 0.014885235 ubox
28 45 0.080142205 ubox
28 50 0.037303395 ubox
28 51 0.080650632 ubox
28 60 0.016285469 ubox
29 44 0.080146133 ubox
29 49 0.037257531 ubox
29 50 0.077162174 ubox
29 51 0.119548000 ubox
29 60 0.021576287 ubox
30 36 0.029473419 ubox
30 39 0.047405777 ubox
30 43 0.074668357 ubox
30 49 0.068447849 ubox
30 50 0.030594879 ubox
30 51 0.389268044 ubox
30 59 0.018893167 ubox
31 35 0.030089612 ubox
31 38 0.049545843 ubox
31 45 0.040132639 ubox
31 49 0.035360161 ubox
31 50 0.556324250 ubox
31 51 0.057725433 ubox
32 38 0.026632825 ubox
32 44 0.040156474 ubox
32 49 0.557625979 ubox
32 50 0.058180198 ubox
33 37 0.022103627 ubox
33 46 0.061200332 ubox
33 48 0.554099564 ubox
34 45 0.064199610 ubox
34 49 0.025645552 ubox
35 47 0.560314542 ubox
35 48 0.007570840 ubox
36 46 0.560035286 ubox
37 43 0.053008352 ubox
37 45 0.556266445 ubox
38 42 0.059462123 ubox
38 47 0.030704928 ubox
39 46 0.029206633 ubox
41 61 0.003729568 ubox
42 49 0.069409409 ubox
42 60 0.004128349 ubox
43 48 0.062751050 ubox
43 53 0.012644212 ubox
44 52 0.013252190 ubox
44 53 0.033167696 ubox
45 52 0.034560455 ubox
45 55 0.006142293 ubox
46 51 0.032955056 ubox
46 54 0.005935338 ubox
47 60 0.016944025 ubox
48 56 0.060677338 ubox
48 59 0.016696459 ubox
49 55 0.065987741 ubox
51 61 0.289887964 ubox
52 60 0.317563378 ubox
53 59 0.311045684 ubox
54 61 0.136510240 ubox
55 60 0.153719152 ubox
3 61 0.9500000 lbox
4 60 0.9500000 lbox
5 59 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
17 48 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 37 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
showpage
end
%%EOF
