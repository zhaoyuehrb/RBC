%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUCACUUUGACUUGCCUUAGGGAUGGGCUGUGACACUUUACUUUUUUUCUUUUUUCUUUUUUUUCAGUCUUUUCUCCUUGCUCAGCUUCAAUGUGUUCCGGAGUGGGGACGGGGUGGCUGAACCUCGCAGGUGGCAGAGAGGCUCCCCUGGGGCUGUGGGGCUCUACGUGGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[63.93334579 478.08062744]
[53.85650253 466.39898682]
[51.71751785 451.12063599]
[58.19894028 437.12081909]
[71.23257446 428.86685181]
[71.23257446 413.86685181]
[71.23257446 398.86685181]
[71.23257446 383.86685181]
[71.23257446 368.86685181]
[64.33063507 363.56726074]
[59.15661240 356.82214355]
[55.98099136 349.15344238]
[54.92493820 341.12313843]
[55.95833206 333.29226685]
[58.90851212 326.18191528]
[63.47878647 320.23846436]
[69.27494049 315.80566406]
[75.83753204 313.10534668]
[74.53739929 298.16180420]
[73.23726654 283.21823120]
[71.93713379 268.27468872]
[70.63700867 253.33114624]
[69.33687592 238.38760376]
[68.03674316 223.44404602]
[66.73661041 208.50050354]
[65.43647766 193.55694580]
[62.39973450 189.83914185]
[61.68404388 184.16711426]
[64.35978699 178.07366943]
[63.57907867 163.09399414]
[62.79837036 148.11431885]
[62.01766586 133.13465881]
[61.23695755 118.15498352]
[49.38303757 108.96343231]
[34.68086243 111.93765259]
[19.97868347 114.91187286]
[5.27650547 117.88608551]
[-6.65299416 129.13859558]
[-22.28293800 124.17504883]
[-25.53458023 108.10150146]
[-13.06291008 97.45304871]
[2.30228782 103.18390656]
[17.00446510 100.20969391]
[31.70664406 97.23547363]
[46.40882111 94.26126099]
[32.08053207 89.82277679]
[17.75223923 85.38430023]
[2.86203861 87.19590759]
[-11.91948414 84.64510345]
[-25.34132767 77.94778442]
[-36.26756287 67.67074585]
[-43.77347183 54.68378067]
[-47.22380829 40.08600235]
[-46.32656097 25.11285973]
[-41.15766907 11.03157711]
[-32.15458298 -0.96611041]
[-20.07926941 -9.86480427]
[-5.95368719 -14.91138268]
[9.02667236 -15.67873955]
[23.59397888 -12.10193253]
[36.51536179 -4.48367548]
[46.69725037 6.53127623]
[53.27791977 20.01069641]
[55.70043182 34.81378555]
[53.75967789 49.68800354]
[58.07364655 64.05427551]
[62.38761139 78.42053986]
[65.48930359 63.74472809]
[68.59100342 49.06891632]
[71.69269562 34.39310455]
[74.79439545 19.71728897]
[77.89608765 5.04147673]
[80.99778748 -9.63433552]
[76.28130341 -24.73616982]
[86.48312378 -35.58845520]
[89.58481598 -50.26427078]
[92.68651581 -64.94007874]
[95.78820801 -79.61589813]
[98.76242828 -94.31806946]
[101.60894012 -109.04550934]
[104.45545959 -123.77294159]
[107.30197144 -138.50038147]
[110.14848328 -153.22781372]
[112.99500275 -167.95524597]
[115.84151459 -182.68267822]
[118.68803406 -197.41012573]
[121.53454590 -212.13755798]
[123.99671173 -226.93409729]
[126.07284546 -241.78973389]
[128.14898682 -256.64535522]
[116.88556671 -267.31845093]
[114.07987976 -282.57977295]
[120.81074524 -296.56100464]
[134.49002075 -303.88610840]
[149.85775757 -301.73840332]
[161.00471497 -290.94372559]
[163.64469910 -275.65289307]
[156.76254272 -261.74548340]
[143.00460815 -254.56921387]
[140.92846680 -239.71359253]
[138.85234070 -224.85797119]
[140.69627380 -221.82278442]
[141.14617920 -217.73669434]
[139.72113037 -213.27186584]
[136.26197815 -209.29104614]
[133.41546631 -194.56359863]
[130.56895447 -179.83616638]
[127.72243500 -165.10873413]
[124.87592316 -150.38130188]
[122.02940369 -135.65386963]
[119.18289185 -120.92642975]
[116.33638000 -106.19898987]
[113.48986053 -91.47155762]
[115.31250763 -84.28819275]
[110.46401978 -76.51419830]
[107.36232758 -61.83838654]
[104.26062775 -47.16257477]
[101.15893555 -32.48675919]
[106.09727478 -18.43464088]
[95.67359924 -6.53264046]
[92.57189941 8.14317226]
[89.47020721 22.81898499]
[86.36850739 37.49479675]
[83.26681519 52.17061234]
[80.16511536 66.84642792]
[77.06342316 81.52223969]
[104.50341797 73.97675323]
[122.06420898 92.30822754]
[137.06364441 92.17805481]
[152.06307983 92.04788208]
[167.06082153 91.78753662]
[182.05574036 91.39705658]
[194.09913635 80.79817963]
[209.86874390 83.74753571]
[217.26748657 97.98264313]
[210.61967468 112.58353424]
[195.02493286 116.34966278]
[182.44622803 106.39196777]
[167.45130920 106.78245544]
[160.82870483 110.10868073]
[152.19325256 107.04731750]
[137.19381714 107.17749023]
[122.19438934 107.30766296]
[104.11424255 126.08760834]
[76.21662903 117.37427521]
[76.99733734 132.35394287]
[77.77803802 147.33361816]
[78.55874634 162.31329346]
[79.33945465 177.29295349]
[80.38002777 192.25682068]
[81.68016052 207.20036316]
[82.98029327 222.14392090]
[84.28042603 237.08746338]
[85.58055115 252.03102112]
[86.88068390 266.97457886]
[88.18081665 281.91812134]
[89.48094940 296.86166382]
[90.78108215 311.80520630]
[113.64988708 326.63687134]
[113.57354736 357.19277954]
[121.26065063 370.07333374]
[128.94775391 382.95385742]
[136.63485718 395.83441162]
[151.20999146 403.35092163]
[151.71769714 419.74218750]
[137.63569641 428.14633179]
[123.45034027 419.91784668]
[123.75431061 403.52151489]
[116.06720734 390.64096069]
[108.38010406 377.76043701]
[100.69300079 364.87988281]
[86.23257446 368.86685181]
[86.23257446 383.86685181]
[86.23257446 398.86685181]
[86.23257446 413.86685181]
[86.23257446 428.86685181]
[99.26619720 437.12081909]
[105.74761963 451.12063599]
[103.60864258 466.39898682]
[93.53179169 478.08062744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 176]
[6 175]
[7 174]
[8 173]
[9 172]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[24 152]
[25 151]
[26 150]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 45]
[35 44]
[36 43]
[37 42]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
[75 118]
[76 117]
[77 116]
[78 115]
[79 113]
[80 112]
[81 111]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[88 101]
[89 100]
[90 99]
[128 143]
[129 142]
[130 141]
[131 139]
[132 138]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
