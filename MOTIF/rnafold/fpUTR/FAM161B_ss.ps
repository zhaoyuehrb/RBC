%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACCUGCGCCAGGACACCAGCGGGCCGCUGUGGGGAGCUGCACGCACAGCCCCGCAUCGGCUGACAAGCCGGGCCGCCAUGGUGCAGACCUGCGCCGUCGCACUCAGAACUCCCGCAGGCCCACCUACGUAGUGCGUCCGGAGCAGAGCACUCCAAUCCCGUCCCGCUUCCGCGGCGUCCUCAGAACCGGAAAUAAA\
) } def
/len { sequence length } bind def

/coor [
[85.68526459 546.60491943]
[89.25735474 532.03643799]
[97.78796387 519.69836426]
[110.15631104 511.21163940]
[124.73738098 507.69137573]
[139.61544800 509.60000610]
[152.83578491 516.68682861]
[162.66021729 528.01861572]
[159.84948730 513.28430176]
[157.03877258 498.54998779]
[154.22805786 483.81567383]
[151.41732788 469.08135986]
[139.25086975 456.43972778]
[145.43917847 439.10092163]
[142.39736938 424.41256714]
[139.35556030 409.72424316]
[137.07952881 408.07333374]
[135.32333374 405.41738892]
[134.47459412 401.95095825]
[134.84292603 398.00570679]
[136.61460876 394.01931763]
[134.50108337 379.16894531]
[132.38757324 364.31860352]
[130.27404785 349.46823120]
[128.16053772 334.61788940]
[126.04701233 319.76751709]
[116.59361267 308.25741577]
[122.30926514 293.50473022]
[120.19574738 278.65438843]
[105.45229340 271.44509888]
[97.83190155 256.72253418]
[100.51181030 240.19442749]
[112.63191223 228.40226746]
[110.28539276 213.58694458]
[107.93887329 198.77162170]
[105.59236145 183.95629883]
[103.24584198 169.14097595]
[93.61281586 157.78077698]
[99.09603882 142.94012451]
[96.74951935 128.12480164]
[94.40299988 113.30947876]
[85.49118805 101.24384308]
[72.02077484 94.64475250]
[58.55035782 88.04566956]
[45.07994461 81.44657898]
[35.98763657 80.47956848]
[31.45100594 74.63658142]
[18.08590889 67.82672882]
[3.22019792 72.47951508]
[-10.23690319 65.38295746]
[-14.58100986 51.18210220]
[-27.94610786 44.37224197]
[-38.09000397 48.32891464]
[-48.52114868 46.09076691]
[-55.84093475 38.63424683]
[-57.80114365 28.59462547]
[-70.94574738 21.36832047]
[-79.98240662 19.97407913]
[-84.23876190 13.92387486]
[-97.26823425 6.49199486]
[-110.29770660 -0.93988502]
[-123.32717896 -8.37176514]
[-136.35664368 -15.80364513]
[-149.38612366 -23.23552513]
[-165.77328491 -22.60862923]
[-174.27960205 -36.62913895]
[-166.15449524 -50.87395477]
[-149.75639343 -50.68923187]
[-141.95423889 -36.26499939]
[-128.92477417 -28.83311844]
[-115.89529419 -21.40123749]
[-102.86582184 -13.96935749]
[-89.83634949 -6.53747749]
[-76.80687714 0.89440233]
[-63.71944046 8.22372055]
[-50.57484055 15.45002651]
[-31.33037376 13.62304211]
[-21.13624954 31.00714493]
[-7.77115250 37.81700134]
[6.27098370 32.98440552]
[19.92210197 39.70018005]
[24.89576530 54.46162796]
[38.26086426 61.27148819]
[51.67903137 67.97616577]
[65.14944458 74.57525635]
[78.61985779 81.17433929]
[92.09027100 87.77342987]
[83.88391876 75.21732330]
[89.36708832 61.25542068]
[103.92467499 57.63925552]
[115.30375671 67.41251373]
[113.92666626 82.34924316]
[122.74344635 70.21398163]
[131.56022644 58.07873154]
[140.37699890 45.94347382]
[142.22894287 30.23102951]
[155.96945190 24.48232269]
[164.78622437 12.34706688]
[173.60299683 0.21181199]
[175.09814453 -18.13741112]
[191.38890076 -24.65236282]
[200.01397705 -36.92460632]
[208.63905334 -49.19685364]
[217.26412964 -61.46910095]
[225.88922119 -73.74134827]
[234.51429749 -86.01358795]
[219.83465576 -82.93002319]
[205.68405151 -87.90596771]
[196.16523743 -99.49873352]
[194.03807068 -114.34714508]
[199.91931152 -128.14608765]
[212.10374451 -136.89476013]
[227.05868530 -138.05659485]
[240.44813538 -131.29473877]
[248.38998413 -118.56968689]
[248.58224487 -103.57327271]
[258.67742920 -114.66773987]
[262.24237061 -130.08207703]
[276.53073120 -134.28826904]
[286.62591553 -145.38273621]
[296.72113037 -156.47720337]
[299.68408203 -172.60646057]
[315.22250366 -177.84942627]
[327.35183716 -166.81259155]
[323.59442139 -150.84970093]
[307.81558228 -146.38200378]
[297.72039795 -135.28753662]
[287.62521362 -124.19307709]
[284.78234863 -109.57228851]
[269.77191162 -104.57255554]
[259.67672729 -93.47808838]
[257.54403687 -82.91970062]
[246.78654480 -77.38851166]
[238.16145325 -65.11626434]
[229.53637695 -52.84402084]
[220.91130066 -40.57177353]
[212.28622437 -28.29953003]
[203.66114807 -16.02728271]
[205.43057251 -4.05517530]
[198.33766174 6.24130869]
[185.73826599 9.02859116]
[176.92147827 21.16384506]
[168.10470581 33.29909897]
[166.88340759 48.14355087]
[152.51226807 54.76025391]
[143.69548035 66.89550781]
[134.87870789 79.03076172]
[126.06192780 91.16601562]
[109.21833038 110.96295929]
[111.56484222 125.77828217]
[113.91136169 140.59361267]
[123.71222687 153.01350403]
[118.06116486 166.79446411]
[120.40768433 181.60978699]
[122.75420380 196.42510986]
[125.10071564 211.24043274]
[127.44723511 226.05575562]
[140.16450500 231.38505554]
[148.51968384 242.21774292]
[150.41374207 255.65716553]
[145.45758057 268.17572021]
[135.04609680 276.54086304]
[137.15962219 291.39120483]
[146.76419067 303.96350098]
[140.89736938 317.65402222]
[143.01089478 332.50436401]
[145.12440491 347.35470581]
[147.23793030 362.20507812]
[149.35144043 377.05541992]
[151.46496582 391.90579224]
[154.04389954 406.68243408]
[157.08570862 421.37075806]
[160.12751770 436.05911255]
[170.46363831 443.78427124]
[172.69099426 456.08737183]
[166.15164185 466.27062988]
[168.96235657 481.00494385]
[171.77308655 495.73925781]
[174.58380127 510.47357178]
[177.39451599 525.20788574]
[181.91758728 539.50970459]
[188.09030151 553.18072510]
[203.31172180 556.19543457]
[213.82937622 567.60412598]
[215.59904480 583.01995850]
[207.94024658 596.51519775]
[193.79792786 602.90069580]
[178.61012268 599.72106934]
[168.21682739 588.19897461]
[166.61450195 572.76483154]
[174.41925049 559.35345459]
[168.24653625 545.68237305]
[166.72384644 560.60491943]
[159.98181152 574.00433350]
[148.90620422 584.12023926]
[134.95219421 589.62347412]
[119.95313263 589.79107666]
[105.87965393 584.60101318]
[94.58078003 574.73510742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 180]
[9 179]
[10 178]
[11 177]
[12 176]
[14 173]
[15 172]
[16 171]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[28 163]
[29 162]
[33 157]
[34 156]
[35 155]
[36 154]
[37 153]
[39 151]
[40 150]
[41 149]
[42 87]
[43 86]
[44 85]
[45 84]
[47 83]
[48 82]
[51 79]
[52 78]
[56 76]
[57 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[92 148]
[93 147]
[94 146]
[95 145]
[97 143]
[98 142]
[99 141]
[101 138]
[102 137]
[103 136]
[104 135]
[105 134]
[106 133]
[116 131]
[117 130]
[119 128]
[120 127]
[121 126]
[181 192]
[182 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
