%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GAGE7)
} def

/sequence { (\
CAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 60 0.037492304 ubox
1 71 0.063208955 ubox
1 73 0.011537701 ubox
1 75 0.015939642 ubox
2 47 0.033771135 ubox
2 48 0.051884489 ubox
2 49 0.758473609 ubox
2 50 0.062108181 ubox
2 51 0.037439029 ubox
2 54 0.043904035 ubox
2 56 0.007351495 ubox
2 59 0.037518218 ubox
2 70 0.063609066 ubox
2 72 0.010046935 ubox
2 74 0.012498935 ubox
3 46 0.035863587 ubox
3 47 0.055114165 ubox
3 48 0.917412902 ubox
3 49 0.059418301 ubox
3 50 0.032705494 ubox
3 51 0.011915468 ubox
3 52 0.026920451 ubox
3 53 0.050186816 ubox
3 54 0.009650227 ubox
3 55 0.008083723 ubox
3 58 0.036910115 ubox
3 66 0.005115119 ubox
3 69 0.063135419 ubox
4 32 0.003249199 ubox
4 45 0.035585461 ubox
4 46 0.048103663 ubox
4 47 0.986065699 ubox
4 48 0.044851494 ubox
4 49 0.016607723 ubox
4 50 0.005710414 ubox
4 51 0.014520010 ubox
4 52 0.049099179 ubox
4 53 0.012212590 ubox
4 54 0.004116918 ubox
4 56 0.015140359 ubox
4 68 0.021709001 ubox
4 69 0.003293028 ubox
4 70 0.006778892 ubox
5 31 0.003396675 ubox
5 44 0.035519597 ubox
5 45 0.037118983 ubox
5 46 0.997574457 ubox
5 47 0.005328379 ubox
5 48 0.012136367 ubox
5 50 0.003927386 ubox
5 51 0.018295711 ubox
5 52 0.011955789 ubox
5 55 0.016723686 ubox
5 66 0.005099324 ubox
5 69 0.006195779 ubox
6 30 0.003533457 ubox
6 45 0.997992378 ubox
6 47 0.012252616 ubox
6 49 0.003403985 ubox
6 50 0.015208807 ubox
6 51 0.011232371 ubox
6 54 0.016699202 ubox
6 65 0.004804708 ubox
6 68 0.005261868 ubox
7 29 0.003564005 ubox
7 44 0.998056699 ubox
7 46 0.012307740 ubox
7 49 0.012571722 ubox
7 50 0.009675080 ubox
7 53 0.016607722 ubox
7 64 0.003554401 ubox
8 28 0.003625749 ubox
8 42 0.999398140 ubox
9 27 0.003572933 ubox
9 41 0.998751367 ubox
10 40 0.997560566 ubox
11 37 0.003978346 ubox
11 41 0.005105519 ubox
12 39 0.937257354 ubox
12 40 0.005730398 ubox
12 49 0.011403441 ubox
13 38 0.913212666 ubox
13 48 0.011581369 ubox
14 22 0.003519957 ubox
14 36 0.998446987 ubox
14 47 0.011639369 ubox
15 21 0.003550349 ubox
15 35 0.999909486 ubox
15 46 0.011664181 ubox
16 20 0.003525907 ubox
16 34 0.999905224 ubox
17 33 0.999459985 ubox
17 45 0.011993382 ubox
18 32 0.998189808 ubox
18 44 0.012148315 ubox
19 27 0.026535442 ubox
19 28 0.013821237 ubox
19 43 0.012110858 ubox
20 26 0.030246935 ubox
20 29 0.990847576 ubox
21 25 0.030270756 ubox
21 28 0.995123177 ubox
21 42 0.012162527 ubox
22 27 0.930968132 ubox
22 41 0.012177712 ubox
23 29 0.007402732 ubox
23 40 0.012114443 ubox
24 28 0.003360550 ubox
25 38 0.007463450 ubox
26 37 0.011539939 ubox
27 36 0.012372163 ubox
28 35 0.012372838 ubox
29 34 0.012172960 ubox
47 63 0.003204228 ubox
48 62 0.004742648 ubox
48 63 0.010268659 ubox
48 77 0.005264140 ubox
48 78 0.012033704 ubox
49 61 0.006016469 ubox
49 62 0.011166705 ubox
49 63 0.047413615 ubox
49 76 0.005628550 ubox
49 77 0.015530413 ubox
49 78 0.145432895 ubox
50 60 0.006284295 ubox
50 61 0.012424256 ubox
50 62 0.055049757 ubox
50 63 0.025564545 ubox
50 75 0.005204955 ubox
50 76 0.015120864 ubox
50 77 0.194940566 ubox
50 78 0.023961202 ubox
51 60 0.012278231 ubox
51 61 0.057900570 ubox
51 62 0.009550689 ubox
51 63 0.154459077 ubox
51 75 0.012232890 ubox
51 76 0.204593258 ubox
51 77 0.023655033 ubox
52 60 0.058141709 ubox
52 62 0.117599419 ubox
52 75 0.205302252 ubox
53 62 0.911040503 ubox
54 61 0.921230414 ubox
54 63 0.097385953 ubox
54 76 0.207867123 ubox
55 60 0.921159984 ubox
55 62 0.104448149 ubox
55 75 0.217876384 ubox
56 61 0.099494283 ubox
56 71 0.006999662 ubox
56 73 0.272956343 ubox
56 75 0.135711021 ubox
57 70 0.006662370 ubox
57 72 0.283175881 ubox
57 74 0.187656099 ubox
58 71 0.282097810 ubox
58 73 0.189484869 ubox
59 67 0.036156854 ubox
59 71 0.013562218 ubox
59 73 0.003859590 ubox
60 66 0.037389137 ubox
60 69 0.274577666 ubox
60 70 0.007749999 ubox
60 72 0.008164173 ubox
61 65 0.032540041 ubox
61 68 0.272435095 ubox
61 70 0.197175600 ubox
62 69 0.199881349 ubox
63 68 0.177198882 ubox
63 72 0.031055739 ubox
63 74 0.028191182 ubox
63 79 0.108651017 ubox
64 71 0.031311413 ubox
64 73 0.028608478 ubox
64 76 0.020233183 ubox
64 77 0.772488484 ubox
64 78 0.099077004 ubox
65 75 0.011135887 ubox
65 76 0.889676744 ubox
65 77 0.073938928 ubox
66 73 0.031685361 ubox
66 75 0.903843183 ubox
67 72 0.026817241 ubox
67 74 0.886506446 ubox
67 79 0.004609879 ubox
68 73 0.820540042 ubox
68 76 0.102355002 ubox
68 78 0.003645776 ubox
69 75 0.109243680 ubox
71 79 0.017036769 ubox
72 78 0.018726666 ubox
73 79 0.004943296 ubox
74 78 0.005070536 ubox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
8 42 0.9500000 lbox
9 41 0.9500000 lbox
10 40 0.9500000 lbox
12 39 0.9500000 lbox
13 38 0.9500000 lbox
14 36 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
53 62 0.9500000 lbox
54 61 0.9500000 lbox
55 60 0.9500000 lbox
64 77 0.9500000 lbox
65 76 0.9500000 lbox
66 75 0.9500000 lbox
67 74 0.9500000 lbox
68 73 0.9500000 lbox
showpage
end
%%EOF
