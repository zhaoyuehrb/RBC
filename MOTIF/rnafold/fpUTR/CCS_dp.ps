%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCS)
} def

/sequence { (\
CGCCGGAGGAGUUCUGCGUCUCGGGGUGGUGACUGGGUCCAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.127094835 ubox
1 23 0.004562370 ubox
1 28 0.854202762 ubox
1 31 0.285630172 ubox
1 35 0.005333932 ubox
2 12 0.009202962 ubox
2 17 0.132839004 ubox
2 19 0.040142078 ubox
2 22 0.004598711 ubox
2 27 0.858054968 ubox
2 30 0.289760340 ubox
2 34 0.004349132 ubox
2 38 0.014589675 ubox
3 9 0.033785996 ubox
3 11 0.009544982 ubox
3 16 0.117138085 ubox
3 18 0.041481121 ubox
3 24 0.061173427 ubox
3 25 0.453546739 ubox
3 26 0.817199978 ubox
3 29 0.289289501 ubox
3 36 0.011225203 ubox
3 37 0.015142083 ubox
4 8 0.033657632 ubox
4 16 0.075938491 ubox
4 18 0.035855046 ubox
4 23 0.061717937 ubox
4 24 0.526464138 ubox
4 25 0.772344260 ubox
4 28 0.288694108 ubox
4 35 0.011335082 ubox
4 36 0.015009539 ubox
5 14 0.097777749 ubox
5 15 0.098384881 ubox
5 17 0.037454232 ubox
5 21 0.005358944 ubox
5 22 0.047786245 ubox
5 27 0.282023241 ubox
5 34 0.010509338 ubox
5 39 0.005600917 ubox
5 40 0.104806192 ubox
6 13 0.096966347 ubox
6 14 0.099210680 ubox
6 20 0.008089277 ubox
6 21 0.020922881 ubox
6 22 0.942749332 ubox
6 33 0.010214059 ubox
6 38 0.005535045 ubox
6 39 0.104910397 ubox
7 12 0.094312905 ubox
7 13 0.097400387 ubox
7 15 0.037951486 ubox
7 19 0.007944218 ubox
7 21 0.944236206 ubox
7 34 0.009227848 ubox
7 38 0.103502457 ubox
8 12 0.066070733 ubox
8 14 0.038039958 ubox
8 15 0.006605211 ubox
8 20 0.943856845 ubox
8 21 0.061712821 ubox
8 22 0.023653059 ubox
8 33 0.009413783 ubox
8 40 0.016969525 ubox
9 13 0.024654562 ubox
9 14 0.008322665 ubox
9 19 0.917445159 ubox
9 20 0.076156174 ubox
9 21 0.006604146 ubox
9 22 0.254270527 ubox
9 39 0.016986037 ubox
10 19 0.083578033 ubox
10 21 0.254514391 ubox
10 34 0.102752151 ubox
10 38 0.016239546 ubox
11 17 0.939216029 ubox
11 20 0.254442426 ubox
11 30 0.006944547 ubox
11 33 0.105209602 ubox
12 16 0.878671165 ubox
12 18 0.023492607 ubox
12 26 0.008199336 ubox
12 29 0.004048338 ubox
12 32 0.105013660 ubox
12 36 0.006407029 ubox
12 37 0.004778339 ubox
13 25 0.008642885 ubox
13 26 0.004267580 ubox
13 28 0.003614019 ubox
13 31 0.098317198 ubox
13 32 0.003556340 ubox
13 35 0.005476476 ubox
13 36 0.005316970 ubox
13 37 0.007955170 ubox
13 43 0.062033539 ubox
14 24 0.009015029 ubox
14 25 0.004533042 ubox
14 26 0.020336129 ubox
14 29 0.104203118 ubox
14 31 0.004510763 ubox
14 35 0.005621809 ubox
14 36 0.009034839 ubox
14 37 0.006046039 ubox
14 42 0.072938863 ubox
15 23 0.009002585 ubox
15 24 0.004416601 ubox
15 25 0.020336250 ubox
15 28 0.103970473 ubox
15 35 0.008994088 ubox
15 36 0.006034591 ubox
15 41 0.073007532 ubox
16 22 0.008820179 ubox
16 27 0.104396892 ubox
16 30 0.004381419 ubox
16 34 0.008467356 ubox
16 40 0.072709499 ubox
17 23 0.020647436 ubox
17 26 0.104612428 ubox
17 28 0.004822942 ubox
17 29 0.004457811 ubox
18 22 0.019367021 ubox
18 27 0.004633062 ubox
18 33 0.014023847 ubox
18 38 0.047753133 ubox
19 25 0.014217870 ubox
19 26 0.004569567 ubox
19 32 0.014303269 ubox
19 37 0.013993351 ubox
19 43 0.022220408 ubox
20 24 0.015224029 ubox
20 25 0.005770208 ubox
20 26 0.003258578 ubox
20 28 0.003200637 ubox
20 31 0.014350465 ubox
20 36 0.017265808 ubox
20 37 0.154849066 ubox
20 42 0.026327276 ubox
21 29 0.010996804 ubox
21 32 0.006832571 ubox
21 35 0.004323167 ubox
21 36 0.156213714 ubox
21 37 0.013120597 ubox
21 41 0.025937559 ubox
21 43 0.006798423 ubox
22 28 0.011697809 ubox
22 31 0.007410615 ubox
22 35 0.157863423 ubox
22 36 0.017354395 ubox
22 42 0.008138052 ubox
23 27 0.007284732 ubox
23 30 0.006907056 ubox
23 34 0.157481875 ubox
23 39 0.005567640 ubox
23 40 0.028022087 ubox
24 33 0.157439993 ubox
24 34 0.017785521 ubox
24 38 0.005386658 ubox
24 39 0.028020036 ubox
24 40 0.008748022 ubox
25 33 0.018449983 ubox
25 34 0.032452923 ubox
25 38 0.021228352 ubox
25 39 0.008835717 ubox
25 40 0.012392680 ubox
26 33 0.056731628 ubox
26 38 0.007541890 ubox
26 39 0.012794379 ubox
27 32 0.057269173 ubox
27 35 0.011989192 ubox
27 37 0.006000733 ubox
27 41 0.214002236 ubox
28 34 0.016610149 ubox
28 39 0.011059836 ubox
28 40 0.241987731 ubox
29 33 0.018662433 ubox
29 38 0.011972427 ubox
29 39 0.239208956 ubox
30 37 0.108496244 ubox
30 41 0.107473530 ubox
31 39 0.305796744 ubox
31 40 0.105504034 ubox
32 38 0.316059311 ubox
33 37 0.313718661 ubox
33 42 0.829807803 ubox
34 41 0.834644566 ubox
35 40 0.833013644 ubox
1 28 0.9500000 lbox
2 27 0.9500000 lbox
3 26 0.9500000 lbox
4 25 0.9500000 lbox
6 22 0.9500000 lbox
7 21 0.9500000 lbox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
11 17 0.9500000 lbox
12 16 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
