%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGACGGCGAGGCCCCGCCCCGGAUGUCGCGUGUCGCUGAAAGGGCGGCGGCGAUUGGCCGGCGCCGCGGGGGCGGGCGGGGCGGAAGGUUCUGGAGGGGGCUGGCGGGCUCUGGAAGCUUCCGCCGGACGGGUAUAUAGAGUCCGGGACUGGUCGGCGGCGGAGCCGGGGGACGGCGACAGCGGGUCGGCGGGCCGCAGGAGGGGGUC\
) } def
/len { sequence length } bind def

/coor [
[63.08936310 207.75390625]
[71.89170837 195.60818481]
[84.12282562 186.92488098]
[98.49192810 182.62036133]
[113.48262024 183.14891052]
[127.51304626 188.45481873]
[117.68246460 177.12522888]
[107.85188293 165.79562378]
[98.02130127 154.46603394]
[83.83617401 149.92385864]
[80.63595581 134.42968750]
[70.80538177 123.10009766]
[56.79235458 117.74891663]
[41.91231918 119.64220428]
[27.03228569 121.53549957]
[12.15225029 123.42879486]
[-2.72778511 125.32208252]
[-17.60782051 127.21537781]
[-32.48785400 129.10867310]
[-47.36788940 131.00195312]
[-68.08104706 155.46864319]
[-82.31903839 160.18876648]
[-96.55702972 164.90890503]
[-110.79501343 169.62904358]
[-118.35628510 185.40390015]
[-134.66589355 190.72477722]
[-149.47990417 182.76338196]
[-163.64604187 187.69497681]
[-177.81217957 192.62657166]
[-191.97831726 197.55816650]
[-206.14445496 202.48974609]
[-213.22016907 208.26660156]
[-220.55836487 207.38760376]
[-234.79635620 212.10774231]
[-249.03434753 216.82786560]
[-263.27233887 221.54800415]
[-277.51031494 226.26814270]
[-291.74832153 230.98828125]
[-305.98629761 235.70840454]
[-314.44049072 249.34315491]
[-330.38800049 251.09138489]
[-341.59527588 239.61199951]
[-339.46505737 223.71099854]
[-325.63146973 215.58627319]
[-310.70642090 221.47042847]
[-296.46844482 216.75028992]
[-282.23046875 212.03015137]
[-267.99246216 207.31001282]
[-253.75447083 202.58988953]
[-239.51649475 197.86975098]
[-225.27850342 193.14961243]
[-211.07604980 188.32362366]
[-196.90991211 183.39202881]
[-182.74377441 178.46043396]
[-168.57763672 173.52883911]
[-154.41149902 168.59724426]
[-150.48049927 156.32627869]
[-140.04379272 148.44227600]
[-126.77666473 148.00234985]
[-115.51515198 155.39105225]
[-101.27716064 150.67091370]
[-87.03916931 145.95077515]
[-72.80118561 141.23065186]
[-71.35176086 126.30083466]
[-84.41594696 118.93014526]
[-97.48013306 111.55945587]
[-110.54431915 104.18876648]
[-126.32245636 107.09218597]
[-138.33493042 96.45826721]
[-137.36679077 80.44445801]
[-124.16071320 71.33516693]
[-108.84727478 76.11827850]
[-103.17362976 91.12458038]
[-90.10944366 98.49527740]
[-77.04525757 105.86596680]
[-63.98107529 113.23665619]
[-49.26118088 116.12192535]
[-34.38114929 114.22863007]
[-19.50111198 112.33534241]
[-4.62107706 110.44204712]
[10.25895786 108.54875946]
[25.13899231 106.65546417]
[40.01902771 104.76216888]
[54.89906311 102.86888123]
[64.64502716 91.46641541]
[64.19842529 76.47306824]
[63.75181580 61.47971725]
[63.30521011 46.48636627]
[62.85860443 31.49301720]
[54.71385193 17.92933083]
[62.06878281 4.97733355]
[61.62217712 -10.01601601]
[61.17557144 -25.00936699]
[60.72896576 -40.00271606]
[58.31682968 -43.61319351]
[57.28303528 -47.42052841]
[57.52022552 -50.96723938]
[58.78348541 -53.87770081]
[60.72896576 -55.89592743]
[61.17557144 -70.88927460]
[61.62217712 -85.88262939]
[62.06878281 -100.87597656]
[62.51538849 -115.86933136]
[62.96199417 -130.86267090]
[54.71669769 -145.03825378]
[63.10411453 -159.13021851]
[79.49599457 -158.64195251]
[87.02976990 -144.07574463]
[77.95534515 -130.41607666]
[77.50874329 -115.42272186]
[77.06213379 -100.42937469]
[76.61553192 -85.43601990]
[76.16892242 -70.44267273]
[75.72231293 -55.44932175]
[75.72231293 -40.44932175]
[76.16892242 -25.45597267]
[76.61553192 -10.46262264]
[77.06213379 4.53072786]
[85.17494202 17.02198982]
[77.85195160 31.04641151]
[78.29856110 46.03976059]
[78.74517059 61.03311157]
[79.19177246 76.02645874]
[79.63838196 91.01981354]
[93.69185638 80.23879242]
[109.84616852 83.47814178]
[121.94191742 74.60724640]
[134.03767395 65.73635101]
[146.13342285 56.86545563]
[158.22917175 47.99456024]
[170.32492065 39.12366486]
[167.98277283 23.99842453]
[172.94891357 9.52099419]
[184.08218384 -0.98181880]
[198.82421875 -5.09654427]
[213.78741455 -1.87764883]
[225.53334045 7.93518877]
[231.36286926 22.08705139]
[229.93641663 37.32594299]
[221.58177185 50.15007782]
[208.21876526 57.61256409]
[192.91812134 57.99857712]
[179.19581604 51.21941757]
[167.10006714 60.09031296]
[155.00431824 68.96120453]
[142.90856934 77.83209991]
[130.81280518 86.70299530]
[118.71706390 95.57389069]
[115.74533081 112.71806335]
[99.56887054 121.24269867]
[82.13497162 113.26952362]
[91.96555328 124.59911346]
[106.85382843 129.95166016]
[109.35089874 144.63545227]
[119.18148041 155.96504211]
[129.01205444 167.29464722]
[138.84263611 178.62423706]
[150.02461243 188.62240601]
[162.37911987 197.12924194]
[174.73362732 205.63606262]
[187.08813477 214.14288330]
[199.44265747 222.64971924]
[212.31898499 218.69816589]
[224.93598938 222.82391357]
[232.75714111 233.30778503]
[233.10665894 246.18829346]
[245.33314514 254.87811279]
[257.55963135 263.56793213]
[269.78610229 272.25775146]
[282.01260376 280.94760132]
[292.07595825 275.45730591]
[303.41021729 274.12490845]
[314.37344360 277.10479736]
[323.39181519 283.92956543]
[329.18560791 293.58267212]
[330.95059204 304.64987183]
[328.46960449 315.52624512]
[340.29586792 324.75335693]
[356.60302734 326.48782349]
[363.00628662 341.58517456]
[352.91851807 354.51455688]
[336.71716309 351.97531128]
[331.06875610 336.57962036]
[319.24249268 327.35250854]
[301.60949707 333.54687500]
[283.66262817 327.81634521]
[272.70904541 312.30413818]
[273.32278442 293.17407227]
[261.09628296 284.48425293]
[248.86981201 275.79443359]
[236.64332581 267.10461426]
[224.41683960 258.41476440]
[207.96934509 261.92462158]
[193.79324341 252.26268005]
[190.93582153 235.00422668]
[178.58131409 226.49739075]
[166.22680664 217.99057007]
[153.87229919 209.48374939]
[141.51779175 200.97691345]
[148.35409546 214.32850647]
[150.54989624 229.16691589]
[147.87348938 243.92620850]
[140.60731506 257.04882812]
[129.51817322 267.14987183]
[115.77635193 273.16336060]
[100.83203888 274.45468140]
[86.26235199 270.88760376]
[73.60486603 262.83850098]
[64.19535065 251.15684509]
[59.02681351 237.07542419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 157]
[7 156]
[8 155]
[9 154]
[11 152]
[12 151]
[13 84]
[14 83]
[15 82]
[16 81]
[17 80]
[18 79]
[19 78]
[20 77]
[21 63]
[22 62]
[23 61]
[24 60]
[27 56]
[28 55]
[29 54]
[30 53]
[31 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[64 76]
[65 75]
[66 74]
[67 73]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[91 118]
[92 117]
[93 116]
[94 115]
[99 114]
[100 113]
[101 112]
[102 111]
[103 110]
[104 109]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[131 143]
[158 199]
[159 198]
[160 197]
[161 196]
[162 195]
[166 192]
[167 191]
[168 190]
[169 189]
[170 188]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
