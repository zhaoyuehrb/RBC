%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUUGGCUCGCUCCGUAAGGCAAGAGAACCCACUAGGGGAUGAGCCCGAACUAGGGAUGUGACAGAGCGCGAGACCCAGCCUAAAGAGAGCCCGGAGCCAGCGUGGGAGGCCGCUGCCGUCGCGCGCCUUGGUUUUUCUGUUCCUUUUUUUUUUUUUUUUUUAACUUCCUGCCUAUACACACGCAGCCAUCAGCCCACAAAGAC\
) } def
/len { sequence length } bind def

/coor [
[115.36361694 450.26470947]
[119.26567841 435.67187500]
[127.12213898 422.77023315]
[138.29609680 412.60562134]
[151.88174438 406.00207520]
[149.37719727 391.21261597]
[146.87266541 376.42318726]
[144.36811829 361.63375854]
[141.86358643 346.84432983]
[137.64561462 340.77188110]
[139.43540955 331.81039429]
[137.15670776 316.98449707]
[122.33230591 309.93783569]
[114.54997253 295.29760742]
[117.05080414 278.73907471]
[129.04530334 266.81582642]
[126.54076385 252.02638245]
[124.03622437 237.23695374]
[121.41899109 222.46704102]
[118.68920135 207.71752930]
[115.95941925 192.96801758]
[113.22963715 178.21849060]
[110.49985504 163.46897888]
[100.57557678 152.36230469]
[105.67224121 137.38450623]
[102.94245911 122.63498688]
[100.21266937 107.88547516]
[98.36978912 131.39628601]
[92.83245087 154.51969910]
[83.66169739 176.82087708]
[70.63336182 184.25474548]
[57.60502243 191.68861389]
[49.80507278 206.11404419]
[33.40699387 206.30125427]
[25.27972412 192.05767822]
[33.78389740 178.03587341]
[50.17115402 178.66027832]
[63.19949341 171.22640991]
[76.22783661 163.79254150]
[74.30510712 156.54318237]
[59.80640030 160.38862610]
[45.30763245 164.23385620]
[41.46263504 149.73503113]
[55.96095657 145.88992310]
[70.45966339 142.04447937]
[68.53694153 134.79512024]
[53.53694153 134.79512024]
[38.53694153 134.79512024]
[27.54025078 146.14625549]
[11.73684502 146.31335449]
[0.50260466 135.19726562]
[0.50260466 119.39298248]
[11.73684502 108.27689362]
[27.54025078 108.44398499]
[38.53694153 119.79512024]
[53.53694153 119.79512024]
[68.53694153 119.79512024]
[71.16766357 112.77164459]
[57.12069702 107.51020050]
[43.07373428 102.24875641]
[28.08840752 101.58538818]
[24.08876610 87.12845612]
[36.60227203 78.85729218]
[48.33517456 88.20178986]
[62.38214111 93.46323395]
[76.42910767 98.72467804]
[79.05982971 91.70119476]
[67.75086212 81.84688568]
[59.22139740 78.56666565]
[56.34605408 71.75504303]
[45.18868256 61.72942352]
[30.04268646 65.10260773]
[15.82003689 58.89810181]
[7.98963594 45.50166702]
[9.56243134 30.06450653]
[19.93365288 18.52252197]
[35.11535263 15.31384182]
[49.26985550 21.67226982]
[56.95447159 35.15286255]
[55.21430588 50.57205200]
[66.37167358 60.59767151]
[77.60517120 70.53792572]
[88.91413116 80.39223480]
[103.52336884 76.99073029]
[109.31641388 63.15452194]
[115.10945892 49.31831360]
[120.90250397 35.48210907]
[121.33075714 26.35367775]
[126.89083862 21.48014832]
[132.89421082 7.73389435]
[138.89758301 -6.01236057]
[144.90095520 -19.75861549]
[138.21833801 -35.92326736]
[145.15568542 -51.61164856]
[160.97471619 -57.31577682]
[166.76776123 -71.15198517]
[172.56080627 -84.98818970]
[178.35385132 -98.82440186]
[184.14689636 -112.66060638]
[189.93994141 -126.49681091]
[195.73300171 -140.33302307]
[201.31436157 -154.25596619]
[206.68276978 -168.26240540]
[212.05116272 -182.26882935]
[217.41957092 -196.27526855]
[222.78796387 -210.28170776]
[220.50215149 -225.93692017]
[232.28196716 -235.05204773]
[237.65036011 -249.05847168]
[242.91180420 -263.10543823]
[248.06597900 -277.19210815]
[253.22015381 -291.27880859]
[249.86836243 -307.33175659]
[262.27340698 -318.05776978]
[277.67404175 -312.42282104]
[280.22741699 -296.22366333]
[267.30682373 -286.12460327]
[262.15264893 -272.03793335]
[256.99847412 -257.95126343]
[257.65255737 -250.58662415]
[251.65679932 -243.69007874]
[246.28839111 -229.68363953]
[248.95819092 -215.03025818]
[236.79440308 -204.91331482]
[231.42599487 -190.90687561]
[226.05760193 -176.90043640]
[220.68920898 -162.89399719]
[215.32080078 -148.88755798]
[216.41462708 -144.23493958]
[214.59454346 -138.84599304]
[209.56919861 -134.53997803]
[203.77615356 -120.70376587]
[197.98310852 -106.86756134]
[192.19006348 -93.03135681]
[186.39701843 -79.19514465]
[180.60397339 -65.35894012]
[174.81092834 -51.52273178]
[181.31730652 -40.39818192]
[180.21061707 -27.36292648]
[171.67169189 -17.19634247]
[158.64720154 -13.75524330]
[152.64382935 -0.00898847]
[146.64047241 13.73726654]
[140.63710022 27.48352051]
[134.73870850 41.27515411]
[128.94566345 55.11135864]
[123.15261841 68.94757080]
[117.35957336 82.78377533]
[124.43064117 69.55501556]
[135.16238403 59.07504272]
[148.55523682 52.31994629]
[163.36181641 49.91889191]
[178.20306396 52.09550858]
[191.69665527 58.64707184]
[202.58581543 68.96337128]
[209.85633850 82.08356476]
[212.83106995 96.78563690]
[211.23292542 111.70026398]
[205.21076965 125.43829346]
[195.32548523 136.72019958]
[182.49780273 144.49517822]
[167.92245483 148.03907776]
[152.95698547 147.02182007]
[138.99526978 141.53817749]
[127.33768463 132.09886169]
[119.07000732 119.58304596]
[114.96218872 105.15568542]
[117.69197083 119.90520477]
[120.42176056 134.65472412]
[130.54129028 146.81637573]
[125.24936676 160.73919678]
[127.97915649 175.48870850]
[130.70893860 190.23822021]
[133.43872070 204.98774719]
[136.16850281 219.73725891]
[140.80908203 227.60978699]
[138.82565308 234.73240662]
[141.33020020 249.52185059]
[143.83473206 264.31127930]
[156.60574341 269.50299072]
[165.07574463 280.24255371]
[167.11576843 293.65777588]
[162.29855347 306.22747803]
[151.98260498 314.70578003]
[154.26132202 329.53170776]
[156.65301514 344.33978271]
[159.15756226 359.12924194]
[161.66209412 373.91867065]
[164.16662598 388.70809937]
[166.67117310 403.49752808]
[181.67353821 405.25979614]
[195.57116699 411.17861938]
[207.23745728 420.77416992]
[215.72665405 433.26858521]
[220.35057068 447.64898682]
[220.73439026 462.74963379]
[216.84698486 477.34637451]
[209.00349426 490.25592041]
[197.83975220 500.43173218]
[184.26075745 507.04895020]
[169.36727905 509.57110596]
[154.36669922 507.79376221]
[140.47502136 501.86096191]
[128.81837463 492.25369263]
[120.34174347 479.75076294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[11 185]
[12 184]
[16 179]
[17 178]
[18 177]
[19 175]
[20 174]
[21 173]
[22 172]
[23 171]
[25 169]
[26 168]
[27 167]
[30 39]
[31 38]
[32 37]
[46 57]
[47 56]
[48 55]
[67 83]
[68 82]
[70 81]
[71 80]
[84 148]
[85 147]
[86 146]
[87 145]
[89 144]
[90 143]
[91 142]
[92 141]
[95 137]
[96 136]
[97 135]
[98 134]
[99 133]
[100 132]
[101 131]
[102 128]
[103 127]
[104 126]
[105 125]
[106 124]
[108 122]
[109 121]
[110 119]
[111 118]
[112 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
