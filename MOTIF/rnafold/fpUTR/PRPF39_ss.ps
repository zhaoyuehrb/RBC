%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGACGCAUGCGCAUCGUGCCCUGGACCAGGCGGCCGUGGCGCGGGUGGCGGCUGCUGUGCUGGCUGUGGGGACGGAGGCGGUGAAGUGCCAUCUUCGGCUAGGUCGUCACAGGCUCCGGCUCAUGGCAUCAAGUGGCAUCCAUCAUAAGAUCGUUAACUGAAGACAAU\
) } def
/len { sequence length } bind def

/coor [
[83.92253113 193.54856873]
[93.10251617 181.46170044]
[106.03092957 173.51057434]
[103.29061890 158.76300049]
[100.55031586 144.01544189]
[97.81000519 129.26786804]
[95.06970215 114.52030182]
[88.73210907 128.11570740]
[73.97846222 130.82307434]
[63.22669983 120.36364746]
[65.52643585 105.54098511]
[78.94209290 98.83112335]
[64.12461853 96.49821472]
[49.30714417 94.16531372]
[32.30273056 101.18553925]
[19.07904816 89.67324829]
[4.22121763 87.61294556]
[-10.63661385 85.55264282]
[-25.49444389 83.49234009]
[-40.22656631 89.26080322]
[-51.77046585 79.84870148]
[-66.62829590 77.78839874]
[-81.48612976 75.72809601]
[-96.36225891 73.80435944]
[-111.25543213 72.01735687]
[-126.14860535 70.23034668]
[-135.08079529 72.32009125]
[-141.29803467 68.27127075]
[-156.15586853 66.21096802]
[-171.01370239 64.15066528]
[-185.87152100 62.09036255]
[-200.79501343 60.57725906]
[-215.76402283 59.61339951]
[-230.73301697 58.64953995]
[-245.70201111 57.68568039]
[-260.67102051 56.72182083]
[-275.64001465 55.75796127]
[-290.60900879 54.79410172]
[-305.57800293 53.83024216]
[-319.84686279 60.66479111]
[-332.05062866 52.12565994]
[-347.01965332 51.16180038]
[-361.47137451 58.91289520]
[-375.26544189 50.04406738]
[-374.21166992 33.67881012]
[-359.39410400 26.65229797]
[-346.05578613 36.19280243]
[-331.08679199 37.15666199]
[-317.88864136 30.25317192]
[-304.61416626 38.86124420]
[-289.64517212 39.82510376]
[-274.67614746 40.78896332]
[-259.70715332 41.75282288]
[-244.73815918 42.71668243]
[-229.76914978 43.68054199]
[-214.80015564 44.64440155]
[-199.83116150 45.60826111]
[-197.62446594 43.82140732]
[-194.56376648 42.81820679]
[-190.95031738 42.93339920]
[-187.20257568 44.38420105]
[-183.81121826 47.23253250]
[-168.95338440 49.29283524]
[-154.09556580 51.35313797]
[-139.23773193 53.41344070]
[-124.36159515 55.33717728]
[-109.46842194 57.12417984]
[-94.57524872 58.91118622]
[-87.53260040 56.57709503]
[-79.42582703 60.87026215]
[-64.56799316 62.93056870]
[-49.71015930 64.99086761]
[-36.04077148 59.07503891]
[-23.43414116 68.63450623]
[-8.57631016 70.69480896]
[6.28152084 72.75511932]
[21.13935280 74.81542206]
[30.99589539 67.76188660]
[43.41228485 69.38246155]
[51.64005280 79.34783936]
[66.45752716 81.68074036]
[81.27500153 84.01364899]
[113.01892853 78.22798920]
[126.40274048 71.45498657]
[139.78656006 64.68198395]
[153.17036438 57.90898514]
[163.37747192 40.55466843]
[182.60684204 42.36146164]
[195.73281860 35.10137177]
[208.85877991 27.84128189]
[221.98475647 20.58119202]
[235.11073303 13.32110214]
[248.23669434 6.06101179]
[261.36267090 -1.19907796]
[260.58554077 -16.40294075]
[266.46270752 -30.37955475]
[277.77914429 -40.37750244]
[292.25476074 -44.45389175]
[307.00393677 -41.85174942]
[319.11056519 -33.13994598]
[332.23654175 -40.40003586]
[345.36248779 -47.66012573]
[358.48846436 -54.92021561]
[371.47885132 -62.42021561]
[384.32925415 -70.15759277]
[397.17965698 -77.89497375]
[410.03005981 -85.63234711]
[422.88049316 -93.36972809]
[422.51809692 -108.72434998]
[429.89566040 -122.19532013]
[443.02862549 -130.15902710]
[458.38430786 -130.47328186]
[471.83209229 -123.05352783]
[479.75460815 -109.89566040]
[480.02072144 -94.53907013]
[472.55883789 -81.11460876]
[459.37622070 -73.23339081]
[444.01885986 -73.01541138]
[430.61785889 -80.51932526]
[417.76745605 -72.78194427]
[404.91705322 -65.04456329]
[392.06661987 -57.30718613]
[379.21621704 -49.56980896]
[377.21032715 -45.19745255]
[372.41641235 -42.05696487]
[365.74856567 -41.79424286]
[352.62258911 -34.53415298]
[339.49661255 -27.27406502]
[326.37063599 -20.01397514]
[327.31579590 -5.12867498]
[321.68118286 8.74793530]
[310.53469849 18.84335327]
[296.05130005 23.11550903]
[281.08850098 20.66567039]
[268.62277222 11.92689228]
[255.49678040 19.18698311]
[242.37081909 26.44707298]
[229.24484253 33.70716095]
[216.11888123 40.96725082]
[202.99290466 48.22734070]
[189.86694336 55.48743057]
[187.92097473 65.56601715]
[180.58027649 73.05231476]
[170.11151123 75.28804779]
[159.94337463 71.29280090]
[146.55955505 78.06579590]
[133.17573547 84.83879852]
[119.79193115 91.61180115]
[134.77587891 90.91815186]
[145.39427185 101.51295471]
[144.73393250 116.49841309]
[133.22480774 126.11817169]
[118.35993958 124.10925293]
[109.81726837 111.77999878]
[112.55757141 126.52756500]
[115.29788208 141.27513123]
[118.03818512 156.02268982]
[120.77849579 170.77026367]
[135.70019531 173.54646301]
[148.60932922 181.52883911]
[157.76005554 193.63787842]
[161.91479492 208.23591614]
[160.51167297 223.34867859]
[153.74043274 236.93229675]
[142.51683044 247.14970398]
[128.35877991 252.61906433]
[113.18103027 252.60070801]
[99.03625488 247.09710693]
[87.83740997 236.85258484]
[81.09904480 223.25262451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 158]
[4 157]
[5 156]
[6 155]
[7 154]
[12 82]
[13 81]
[14 80]
[16 77]
[17 76]
[18 75]
[19 74]
[21 72]
[22 71]
[23 70]
[24 68]
[25 67]
[26 66]
[28 65]
[29 64]
[30 63]
[31 62]
[32 57]
[33 56]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[41 48]
[42 47]
[83 148]
[84 147]
[85 146]
[86 145]
[88 141]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[100 129]
[101 128]
[102 127]
[103 126]
[104 123]
[105 122]
[106 121]
[107 120]
[108 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
