%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGCGUGCGUGCGCGUGCGUGCUGGUGCGGGCGCCGUACGUGCGCGCGCGCGGCGGCCCAGAAAGCGGCGCUGGGACCCUGAGGCGGCCGUGGUUAGGCGGCUCCCCGGCGGCUCCUCCGCGGCGGUGACGGCGACCGCACUCCCCGCUUCCCGCUCCCCGCGCUCCUCCGCCCGGGUCCGCCAGCCGAGGCCGCUCCCGAGCGUCGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-237.01846313 349.85482788]
[-248.15580750 359.90270996]
[-252.43003845 367.97277832]
[-259.53118896 370.01486206]
[-270.81481934 379.89813232]
[-282.09848022 389.78143311]
[-293.38211060 399.66470337]
[-304.66577148 409.54800415]
[-315.94940186 419.43127441]
[-327.23306274 429.31457520]
[-338.51669312 439.19784546]
[-349.80035400 449.08114624]
[-361.08398438 458.96444702]
[-372.36764526 468.84771729]
[-383.65127563 478.73101807]
[-394.93493652 488.61428833]
[-406.21856689 498.49758911]
[-417.50222778 508.38085938]
[-428.78585815 518.26416016]
[-440.06948853 528.14746094]
[-451.35314941 538.03070068]
[-462.56393433 547.99658203]
[-473.70129395 558.04443359]
[-484.83862305 568.09228516]
[-495.97598267 578.14013672]
[-496.53726196 593.93450928]
[-508.15917969 604.64459229]
[-523.94671631 603.91632080]
[-534.53332520 592.18182373]
[-533.63818359 576.40289307]
[-521.79241943 565.94091797]
[-506.02383423 567.00280762]
[-494.88650513 556.95495605]
[-483.74914551 546.90710449]
[-472.61181641 536.85925293]
[-469.75173950 530.04626465]
[-461.23641968 526.74707031]
[-449.95278931 516.86376953]
[-438.66915894 506.98049927]
[-427.38549805 497.09722900]
[-416.10186768 487.21392822]
[-404.81820679 477.33065796]
[-393.53457642 467.44735718]
[-382.25091553 457.56408691]
[-370.96728516 447.68078613]
[-359.68362427 437.79751587]
[-348.39999390 427.91421509]
[-337.11633301 418.03091431]
[-325.83270264 408.14764404]
[-314.54904175 398.26434326]
[-303.26541138 388.38107300]
[-291.98175049 378.49777222]
[-280.69812012 368.61450195]
[-269.41448975 358.73120117]
[-258.20367432 348.76535034]
[-247.06632996 338.71749878]
[-251.59773254 329.24768066]
[-253.74452209 318.95834351]
[-253.37709045 308.44104004]
[-250.51049805 298.30203247]
[-245.30404663 289.12707520]
[-238.05244446 281.44784546]
[-229.16903687 275.71096802]
[-219.16238403 272.25210571]
[-208.60704041 271.27630615]
[-198.11059570 272.84582520]
[-188.27873230 276.87625122]
[-179.68025208 283.14105225]
[-167.70217896 274.11187744]
[-155.72412109 265.08270264]
[-143.74606323 256.05352783]
[-131.76800537 247.02433777]
[-119.78994751 237.99516296]
[-107.81188202 228.96597290]
[-95.90042114 219.84912109]
[-84.05619812 210.64508057]
[-72.21197510 201.44104004]
[-60.36775589 192.23699951]
[-75.26379395 190.47404480]
[-85.63150024 179.63381958]
[-86.72924805 164.67404175]
[-78.05496979 152.43652344]
[-63.57583237 148.51803589]
[-49.91380692 154.71069336]
[-43.31717300 168.18231201]
[-46.80290222 182.77172852]
[-34.07699585 174.83123779]
[-21.35109329 166.89074707]
[-8.62518787 158.95025635]
[4.10071754 151.00976562]
[16.82662201 143.06929016]
[23.52849770 129.76762390]
[39.33233643 129.02656555]
[52.05824280 121.08607483]
[64.78414917 113.14558411]
[77.51005554 105.20510101]
[90.23596191 97.26461029]
[94.86258698 90.66651917]
[103.20747375 89.30255127]
[116.04856873 81.54973602]
[128.88966370 73.79692078]
[141.73077393 66.04409790]
[154.57186890 58.29128265]
[158.41691589 45.98112488]
[169.27001953 39.78778839]
[181.04382324 42.55714798]
[193.99736023 34.99367142]
[206.95088196 27.43019295]
[214.96687317 13.79001904]
[229.85914612 14.05421066]
[242.81266785 6.49073315]
[255.76618958 -1.07274437]
[268.71972656 -8.63622189]
[281.67324829 -16.19969940]
[280.01095581 -30.23356819]
[283.81115723 -43.80002975]
[292.46838379 -54.86005020]
[304.64981079 -61.76440811]
[318.50027466 -63.49956131]
[331.92486572 -59.83634567]
[342.90576172 -51.35958481]
[355.96890259 -58.73209000]
[369.03207397 -66.10459900]
[382.09524536 -73.47710419]
[395.15838623 -80.84960938]
[401.09213257 -87.79120636]
[408.46786499 -88.23285675]
[421.63784790 -95.41280365]
[423.92797852 -108.68431854]
[433.30618286 -118.07707977]
[446.19076538 -120.32092285]
[457.84011841 -114.81748199]
[471.11407471 -121.80332184]
[484.38803101 -128.78916931]
[490.52301025 -135.55357361]
[497.90853882 -135.77850342]
[511.28359985 -142.56874084]
[516.02105713 -154.56376648]
[527.29913330 -159.94450378]
[538.83813477 -156.31915283]
[552.31146240 -162.91230774]
[555.89886475 -178.13284302]
[568.46142578 -187.44502258]
[584.06744385 -186.45193481]
[595.34826660 -175.62248230]
[596.97741699 -160.06999207]
[588.18566895 -147.13787842]
[573.12420654 -142.93229675]
[558.90466309 -149.43899536]
[545.43133545 -142.84584045]
[536.43450928 -127.77738190]
[518.07385254 -129.19364929]
[504.69876099 -122.40342712]
[491.37387085 -115.51520538]
[478.09991455 -108.52935791]
[464.82595825 -101.54351807]
[460.53067017 -85.28240204]
[445.50726318 -76.99697876]
[428.81781006 -82.24282837]
[415.64782715 -75.06287384]
[402.53088379 -67.78645325]
[389.46774292 -60.41394424]
[376.40457153 -53.04143906]
[363.34143066 -45.66893005]
[350.27825928 -38.29642487]
[351.62139893 -22.37222672]
[345.86413574 -7.40220356]
[334.11193848 3.59794164]
[318.68325806 8.38856792]
[302.65234375 5.96196365]
[289.23672485 -3.24617481]
[276.28320312 4.31730270]
[263.32968140 11.88078022]
[250.37614441 19.44425774]
[237.42262268 27.00773621]
[230.33314514 40.10691833]
[214.51435852 40.38371658]
[201.56083679 47.94719696]
[188.60731506 55.51067352]
[180.73979187 71.19834137]
[162.32469177 71.13237762]
[149.48358154 78.88520050]
[136.64248657 86.63801575]
[123.80139160 94.39083099]
[110.96028900 102.14365387]
[98.17644501 109.99051666]
[85.45053864 117.93100739]
[72.72463226 125.87149048]
[59.99872971 133.81198120]
[47.27282715 141.75247192]
[39.66070938 155.62208557]
[24.76711082 155.79519653]
[12.04120541 163.73567200]
[-0.68469995 171.67616272]
[-13.41060448 179.61665344]
[-26.13651085 187.55714417]
[-38.86241531 195.49761963]
[-51.16371155 204.08122253]
[-63.00793457 213.28526306]
[-74.85215759 222.48930359]
[-86.69638062 231.69334412]
[-91.55091858 239.42823792]
[-98.78270721 240.94404602]
[-110.76076508 249.97322083]
[-122.73882294 259.00241089]
[-134.71688843 268.03158569]
[-146.69494629 277.06076050]
[-158.67300415 286.08993530]
[-170.65106201 295.11911011]
[-165.84033203 314.37280273]
[-169.90972900 333.74798584]
[-182.00160217 349.36392212]
[-199.65579224 358.11141968]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[4 54]
[5 53]
[6 52]
[7 51]
[8 50]
[9 49]
[10 48]
[11 47]
[12 46]
[13 45]
[14 44]
[15 43]
[16 42]
[17 41]
[18 40]
[19 39]
[20 38]
[21 37]
[22 35]
[23 34]
[24 33]
[25 32]
[68 209]
[69 208]
[70 207]
[71 206]
[72 205]
[73 204]
[74 203]
[75 201]
[76 200]
[77 199]
[78 198]
[86 197]
[87 196]
[88 195]
[89 194]
[90 193]
[91 192]
[93 190]
[94 189]
[95 188]
[96 187]
[97 186]
[99 185]
[100 184]
[101 183]
[102 182]
[103 181]
[106 179]
[107 178]
[108 177]
[110 175]
[111 174]
[112 173]
[113 172]
[114 171]
[121 165]
[122 164]
[123 163]
[124 162]
[125 161]
[127 160]
[128 159]
[132 156]
[133 155]
[134 154]
[136 153]
[137 152]
[140 150]
[141 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
