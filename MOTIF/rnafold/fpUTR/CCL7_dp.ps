%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL7)
} def

/sequence { (\
AGAGGAGCAGAGGGGCUGAGACCAAACCAGAAACCUCCAAUUCUCAUGUGGAAGCCCAUGCCCUCACCCUCCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.009760720 ubox
2 45 0.012872154 ubox
2 65 0.975479899 ubox
2 69 0.007167284 ubox
2 71 0.073459059 ubox
3 44 0.012893386 ubox
3 64 0.976560699 ubox
3 70 0.073630028 ubox
4 43 0.012895202 ubox
4 63 0.976836876 ubox
4 64 0.004413182 ubox
4 68 0.003478491 ubox
4 69 0.073578925 ubox
4 72 0.200028345 ubox
5 42 0.012866418 ubox
5 62 0.976724413 ubox
5 63 0.006386420 ubox
5 65 0.007493460 ubox
5 67 0.004218051 ubox
5 68 0.073087500 ubox
5 71 0.200236591 ubox
6 41 0.012790401 ubox
6 64 0.011857034 ubox
6 70 0.200172656 ubox
7 61 0.976857988 ubox
7 63 0.011094469 ubox
7 69 0.199303927 ubox
8 60 0.976866072 ubox
9 59 0.937987455 ubox
9 64 0.007642547 ubox
10 37 0.025366974 ubox
10 45 0.007721719 ubox
10 63 0.007820441 ubox
10 65 0.180744359 ubox
10 71 0.003674327 ubox
11 36 0.025435673 ubox
11 44 0.007728855 ubox
11 64 0.179525198 ubox
11 70 0.003685698 ubox
12 35 0.025451039 ubox
12 38 0.003803303 ubox
12 43 0.007690804 ubox
12 56 0.010298743 ubox
12 57 0.187745649 ubox
12 62 0.005390979 ubox
12 63 0.172382953 ubox
12 64 0.107933318 ubox
12 65 0.016515616 ubox
12 69 0.003659261 ubox
13 28 0.004033836 ubox
13 34 0.025406607 ubox
13 37 0.003821635 ubox
13 42 0.007517680 ubox
13 55 0.009630218 ubox
13 56 0.157140803 ubox
13 57 0.956726524 ubox
13 61 0.004489111 ubox
13 62 0.160942150 ubox
13 63 0.123598897 ubox
13 68 0.003597262 ubox
14 23 0.005710049 ubox
14 27 0.004482830 ubox
14 28 0.004151455 ubox
14 35 0.005398083 ubox
14 41 0.007305684 ubox
14 55 0.118438367 ubox
14 56 0.965387724 ubox
14 57 0.003712322 ubox
14 61 0.148359460 ubox
14 62 0.133428240 ubox
14 67 0.003515899 ubox
15 22 0.006320160 ubox
15 27 0.004557413 ubox
15 34 0.005688740 ubox
15 35 0.003346893 ubox
15 49 0.039313399 ubox
15 55 0.971567609 ubox
15 56 0.003726418 ubox
15 61 0.142563048 ubox
16 30 0.040665411 ubox
16 48 0.040548328 ubox
16 51 0.005781664 ubox
16 54 0.976917050 ubox
16 60 0.150834759 ubox
17 24 0.026953064 ubox
17 29 0.042157151 ubox
17 39 0.007221839 ubox
17 46 0.159982872 ubox
17 50 0.004503643 ubox
17 53 0.936573143 ubox
17 58 0.116968439 ubox
17 66 0.003696110 ubox
18 23 0.042846481 ubox
18 28 0.045342888 ubox
18 37 0.040859828 ubox
18 38 0.007522983 ubox
18 43 0.003274410 ubox
18 45 0.188629701 ubox
18 57 0.117786142 ubox
18 65 0.003916021 ubox
19 36 0.041746470 ubox
19 42 0.003209192 ubox
19 44 0.188648274 ubox
19 64 0.003915856 ubox
20 35 0.042229722 ubox
20 37 0.006040706 ubox
20 43 0.188609269 ubox
20 45 0.005567808 ubox
20 63 0.003904353 ubox
21 36 0.005671543 ubox
21 41 0.006775209 ubox
21 42 0.179485384 ubox
21 44 0.005201149 ubox
21 49 0.181399668 ubox
22 48 0.173660487 ubox
22 51 0.941113407 ubox
23 48 0.086864653 ubox
23 50 0.949791159 ubox
24 42 0.007897549 ubox
24 47 0.099211159 ubox
24 49 0.937873416 ubox
25 41 0.016901598 ubox
25 42 0.009809195 ubox
26 41 0.016847143 ubox
26 49 0.077877173 ubox
27 48 0.100480520 ubox
27 51 0.024322530 ubox
28 48 0.047849675 ubox
28 50 0.024494840 ubox
29 36 0.110972065 ubox
29 42 0.004632935 ubox
29 44 0.936170334 ubox
29 47 0.041261140 ubox
29 49 0.020727301 ubox
30 35 0.116400904 ubox
30 37 0.052887328 ubox
30 41 0.003885535 ubox
30 42 0.009280842 ubox
30 43 0.970553135 ubox
30 45 0.041164596 ubox
31 36 0.049641081 ubox
31 41 0.013743362 ubox
31 42 0.967842908 ubox
31 44 0.039835619 ubox
32 41 0.938617676 ubox
32 42 0.029881440 ubox
33 41 0.036717769 ubox
34 51 0.007800301 ubox
35 50 0.007852836 ubox
35 54 0.010384789 ubox
36 52 0.112202063 ubox
36 53 0.007577923 ubox
37 51 0.115405683 ubox
38 48 0.009906735 ubox
38 50 0.115491890 ubox
39 47 0.009461191 ubox
39 49 0.100125360 ubox
40 47 0.037913307 ubox
40 49 0.044277070 ubox
41 46 0.034892117 ubox
41 48 0.061824495 ubox
41 52 0.026629418 ubox
41 53 0.011249064 ubox
42 51 0.028511670 ubox
42 52 0.022825078 ubox
43 50 0.029343032 ubox
43 51 0.023596509 ubox
44 50 0.020697684 ubox
44 51 0.006173801 ubox
44 52 0.011016606 ubox
45 50 0.012743696 ubox
45 51 0.012225110 ubox
45 60 0.022080449 ubox
46 59 0.025700005 ubox
47 58 0.027367647 ubox
47 60 0.045850437 ubox
48 55 0.004555143 ubox
48 57 0.027871759 ubox
48 59 0.149324796 ubox
48 67 0.008048463 ubox
49 54 0.004525525 ubox
49 58 0.154900487 ubox
49 66 0.008083148 ubox
50 56 0.028104482 ubox
50 57 0.157720808 ubox
50 65 0.008075512 ubox
50 72 0.003373296 ubox
51 55 0.027772918 ubox
51 56 0.157199798 ubox
51 64 0.007480933 ubox
51 71 0.003373634 ubox
54 61 0.008978961 ubox
55 60 0.009052594 ubox
2 65 0.9500000 lbox
3 64 0.9500000 lbox
4 63 0.9500000 lbox
5 62 0.9500000 lbox
7 61 0.9500000 lbox
8 60 0.9500000 lbox
9 59 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
17 53 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
showpage
end
%%EOF
