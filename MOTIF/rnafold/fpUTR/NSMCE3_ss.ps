%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGACACUGCGCGCGCCUCCAGGCACCGGCGUUAGCGGGUCGCCGACCCGCAAUCCCCGCCGCGGCUGCUUGCCUACCGGAGUGUGCGCCGGCACCUGCCGCCGGAGAC\
) } def
/len { sequence length } bind def

/coor [
[52.09403992 185.59880066]
[54.06998825 170.08656311]
[65.58975220 159.51164246]
[64.74869537 144.53523254]
[63.90763855 129.55883789]
[64.55273438 118.54648590]
[67.91948700 109.15146637]
[73.35799408 101.96772766]
[80.10162354 97.38970947]
[87.32127380 95.59199524]
[94.18261719 96.52270508]
[90.03009033 82.10894775]
[85.87755585 67.69519043]
[81.72502136 53.28142929]
[77.57248688 38.86766815]
[73.41996002 24.45390892]
[69.26742554 10.04014778]
[65.11489105 -4.37361145]
[59.65755463 -11.88170815]
[61.05411911 -19.25007629]
[57.30747223 -33.77462769]
[53.56082535 -48.29918289]
[48.31620789 -55.95738220]
[49.91888046 -63.28368378]
[46.58106613 -77.90760040]
[30.71953392 -83.42294312]
[20.53223610 -96.59947968]
[19.21000099 -113.06419373]
[27.03249359 -127.45566559]
[19.41136360 -140.37535095]
[11.79023266 -153.29504395]
[4.16910267 -166.21473694]
[-3.45202756 -179.13441467]
[-22.41470528 -180.02548218]
[-37.00527954 -191.93858337]
[-41.59852982 -210.05438232]
[-34.55865097 -227.20770264]
[-43.23872375 -239.44111633]
[-51.91879272 -251.67453003]
[-60.59886169 -263.90792847]
[-69.27893066 -276.14135742]
[-77.95899963 -288.37475586]
[-86.63906860 -300.60818481]
[-100.73587799 -310.02709961]
[-95.58742523 -326.18041992]
[-78.64015198 -325.70486450]
[-74.40565491 -309.28823853]
[-65.72558594 -297.05484009]
[-57.04551697 -284.82141113]
[-48.36544800 -272.58801270]
[-39.68537903 -260.35458374]
[-31.00530815 -248.12118530]
[-22.32523918 -235.88777161]
[-11.10683441 -237.89437866]
[0.08638246 -235.49130249]
[9.57808876 -228.99826050]
[15.93161297 -219.35049438]
[18.16733742 -207.96418762]
[15.91356850 -196.52861023]
[9.46766186 -186.75555420]
[17.08879280 -173.83586121]
[24.70992279 -160.91616821]
[32.33105087 -147.99647522]
[39.95218277 -135.07679749]
[51.92239761 -135.75691223]
[63.12078476 -131.47383118]
[74.30541992 -141.46903992]
[85.49005127 -151.46423340]
[87.82157898 -167.33695984]
[101.75701904 -175.28575134]
[116.60628510 -169.21295166]
[120.97830200 -153.77711487]
[111.51921844 -140.81929016]
[95.48525238 -140.27960205]
[84.30061340 -130.28440857]
[73.11598206 -120.28919983]
[76.42368317 -105.91755676]
[72.12951660 -91.63684082]
[61.20498657 -81.24541473]
[64.54280090 -66.62149811]
[68.08538055 -52.04582977]
[71.83202362 -37.52127838]
[75.57867432 -22.99672318]
[79.52864838 -8.52614403]
[83.68118286 5.88761568]
[87.83371735 20.30137444]
[91.98625183 34.71513367]
[96.13877869 49.12889481]
[100.29131317 63.54265594]
[104.44384766 77.95641327]
[108.59638214 92.37017822]
[116.39795685 105.18170929]
[127.29785919 115.48666382]
[138.19776917 125.79161835]
[149.09767151 136.09657288]
[165.16748047 139.36660767]
[170.11314392 155.00222778]
[158.84696960 166.91883850]
[142.95864868 162.85765076]
[138.79270935 146.99647522]
[127.89280701 136.69152832]
[116.99290466 126.38656616]
[106.09300232 116.08161926]
[99.29075623 119.24065399]
[78.88404083 128.71777344]
[79.72509766 143.69418335]
[80.56615448 158.67057800]
[93.19750214 167.88920593]
[96.89785004 183.08267212]
[89.91999817 197.07708740]
[75.55869293 203.26472473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 107]
[4 106]
[5 105]
[11 91]
[12 90]
[13 89]
[14 88]
[15 87]
[16 86]
[17 85]
[18 84]
[20 83]
[21 82]
[22 81]
[24 80]
[25 79]
[29 64]
[30 63]
[31 62]
[32 61]
[33 60]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[66 76]
[67 75]
[68 74]
[92 103]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
