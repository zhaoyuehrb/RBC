%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PM20D1)
} def

/sequence { (\
AGGGCCAAGAAACGCUAGUCUGGGCGUUUAGGUCAGAACUACCCCGGUAGCCUGACAGCAGGAGCUCGAGAGAAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.003941379 ubox
1 21 0.004236256 ubox
1 28 0.030890961 ubox
1 29 0.007390741 ubox
1 40 0.032638741 ubox
1 53 0.004128445 ubox
1 66 0.024821883 ubox
2 15 0.004117400 ubox
2 16 0.007563286 ubox
2 20 0.004871456 ubox
2 21 0.010270482 ubox
2 27 0.043492616 ubox
2 28 0.008119526 ubox
2 34 0.042867630 ubox
2 39 0.034586769 ubox
2 40 0.007064111 ubox
2 43 0.014753924 ubox
2 44 0.047948360 ubox
2 45 0.025808497 ubox
2 52 0.004398189 ubox
2 65 0.030132917 ubox
2 66 0.010738963 ubox
2 67 0.164302786 ubox
3 15 0.006814515 ubox
3 16 0.090543037 ubox
3 20 0.012509728 ubox
3 27 0.007518420 ubox
3 33 0.030438916 ubox
3 34 0.607177047 ubox
3 39 0.006294779 ubox
3 42 0.014050311 ubox
3 43 0.047883296 ubox
3 44 0.025809887 ubox
3 51 0.003796540 ubox
3 65 0.011736193 ubox
3 66 0.164363817 ubox
3 67 0.011119002 ubox
4 15 0.094086708 ubox
4 19 0.012603449 ubox
4 25 0.061728324 ubox
4 33 0.612029797 ubox
4 42 0.046145401 ubox
4 43 0.024538543 ubox
4 48 0.008693313 ubox
4 59 0.028965067 ubox
4 65 0.164707997 ubox
4 66 0.003895568 ubox
4 76 0.025292352 ubox
5 14 0.094367527 ubox
5 18 0.012646109 ubox
5 23 0.004173317 ubox
5 24 0.061718303 ubox
5 32 0.614725611 ubox
5 47 0.008873770 ubox
5 58 0.028932932 ubox
5 62 0.048163698 ubox
5 64 0.162828219 ubox
5 75 0.025512188 ubox
6 22 0.005004809 ubox
6 23 0.061468028 ubox
6 31 0.614364785 ubox
6 46 0.008877727 ubox
6 61 0.053419279 ubox
7 21 0.004045268 ubox
7 29 0.040374039 ubox
8 16 0.012355862 ubox
8 21 0.057037654 ubox
8 28 0.029770658 ubox
8 29 0.084907488 ubox
8 40 0.009725096 ubox
9 15 0.012785451 ubox
9 20 0.061672949 ubox
9 27 0.011277585 ubox
9 28 0.059199842 ubox
9 29 0.067381043 ubox
9 34 0.009294386 ubox
9 39 0.009877419 ubox
9 67 0.006382441 ubox
10 19 0.058734064 ubox
10 27 0.033880173 ubox
10 28 0.057365801 ubox
10 29 0.612548463 ubox
10 33 0.008503113 ubox
11 27 0.041163210 ubox
11 28 0.634051276 ubox
11 29 0.007502866 ubox
12 19 0.018940585 ubox
12 27 0.641548816 ubox
12 28 0.005839857 ubox
13 18 0.027219024 ubox
13 26 0.644595958 ubox
13 46 0.004512490 ubox
14 25 0.644647021 ubox
14 45 0.004577419 ubox
14 51 0.017524149 ubox
14 59 0.011171425 ubox
14 76 0.749299159 ubox
15 23 0.032247116 ubox
15 24 0.643837550 ubox
15 50 0.021782102 ubox
15 58 0.011185637 ubox
15 72 0.006979708 ubox
15 75 0.754802744 ubox
16 22 0.045056757 ubox
16 23 0.626413511 ubox
16 41 0.013541964 ubox
16 49 0.021724222 ubox
16 57 0.011114883 ubox
16 71 0.006604738 ubox
16 74 0.750906436 ubox
17 21 0.046071659 ubox
17 40 0.014403998 ubox
17 48 0.019763716 ubox
18 39 0.014493426 ubox
18 48 0.005354947 ubox
18 56 0.011354439 ubox
18 76 0.004418248 ubox
19 37 0.012056669 ubox
19 38 0.010399871 ubox
19 47 0.004788809 ubox
19 55 0.011358345 ubox
19 69 0.023951156 ubox
19 71 0.758417183 ubox
19 73 0.021236024 ubox
19 75 0.003286686 ubox
20 36 0.015999552 ubox
20 46 0.005281579 ubox
20 47 0.026478033 ubox
20 54 0.011286511 ubox
20 68 0.024336528 ubox
20 70 0.759494488 ubox
20 72 0.022323129 ubox
21 35 0.015789131 ubox
21 46 0.026724130 ubox
21 68 0.340521728 ubox
21 69 0.675850969 ubox
21 71 0.019232503 ubox
22 34 0.013122316 ubox
22 44 0.008010631 ubox
22 45 0.027522537 ubox
22 53 0.010574634 ubox
22 67 0.692492887 ubox
23 33 0.009597082 ubox
23 34 0.009875598 ubox
23 43 0.008083425 ubox
23 44 0.027516427 ubox
23 52 0.011296343 ubox
23 65 0.003274222 ubox
23 66 0.697372727 ubox
23 67 0.303363687 ubox
24 33 0.013254557 ubox
24 42 0.008126723 ubox
24 43 0.027488726 ubox
24 51 0.011306233 ubox
24 65 0.747097399 ubox
24 66 0.142532910 ubox
25 32 0.015946926 ubox
25 50 0.011309704 ubox
25 64 0.747529650 ubox
26 39 0.022867164 ubox
26 42 0.018898204 ubox
26 59 0.055033896 ubox
26 65 0.141350445 ubox
26 76 0.006838455 ubox
27 38 0.023067220 ubox
27 41 0.016780399 ubox
27 47 0.003566546 ubox
27 58 0.054466234 ubox
27 61 0.124275271 ubox
27 62 0.575182074 ubox
27 63 0.152894108 ubox
27 64 0.141253893 ubox
27 75 0.006856323 ubox
28 37 0.023193420 ubox
28 46 0.003819459 ubox
28 47 0.003626675 ubox
28 55 0.005775894 ubox
28 57 0.051771954 ubox
28 58 0.015211011 ubox
28 60 0.127488226 ubox
28 61 0.558638244 ubox
28 62 0.157201913 ubox
28 63 0.143209711 ubox
28 74 0.006744209 ubox
29 36 0.022538390 ubox
29 41 0.015998851 ubox
29 46 0.003621182 ubox
29 54 0.006788567 ubox
29 57 0.015189643 ubox
29 60 0.456317164 ubox
29 61 0.141239479 ubox
29 62 0.142322546 ubox
29 63 0.004180718 ubox
29 73 0.006337757 ubox
30 40 0.023455175 ubox
30 53 0.007250679 ubox
31 39 0.024111760 ubox
31 40 0.023510046 ubox
31 43 0.020535701 ubox
31 44 0.006314266 ubox
31 45 0.006889477 ubox
31 52 0.007288784 ubox
31 67 0.003660718 ubox
32 39 0.024385241 ubox
32 42 0.020652082 ubox
32 43 0.006204532 ubox
32 44 0.006856678 ubox
32 51 0.007288663 ubox
32 56 0.784063955 ubox
32 59 0.011046665 ubox
33 38 0.022676645 ubox
33 41 0.019841608 ubox
33 50 0.005341627 ubox
33 55 0.785011012 ubox
33 58 0.008122997 ubox
34 54 0.785329657 ubox
35 53 0.784982197 ubox
35 66 0.012363529 ubox
36 52 0.782636899 ubox
36 65 0.013533515 ubox
36 67 0.025363718 ubox
37 66 0.024112258 ubox
38 48 0.101666686 ubox
39 47 0.103632631 ubox
39 50 0.934692789 ubox
39 64 0.008026075 ubox
39 70 0.045224644 ubox
39 72 0.099836036 ubox
39 75 0.055821360 ubox
40 46 0.100520687 ubox
40 49 0.938351245 ubox
40 63 0.007848220 ubox
40 69 0.045068889 ubox
40 71 0.099560412 ubox
40 74 0.054168258 ubox
41 48 0.938178453 ubox
42 47 0.934230284 ubox
42 62 0.005348685 ubox
43 61 0.005336214 ubox
43 62 0.004606446 ubox
44 61 0.004610061 ubox
44 62 0.006706173 ubox
45 54 0.005710134 ubox
45 61 0.006707334 ubox
45 68 0.287362772 ubox
46 53 0.005677380 ubox
46 66 0.104864460 ubox
46 67 0.287620233 ubox
47 52 0.005629885 ubox
47 56 0.005262270 ubox
47 59 0.006572748 ubox
47 65 0.246461382 ubox
47 66 0.171576604 ubox
48 55 0.005098300 ubox
48 58 0.006466925 ubox
48 64 0.245572105 ubox
49 66 0.019535488 ubox
50 59 0.006284210 ubox
50 65 0.023431367 ubox
51 58 0.006336210 ubox
51 62 0.615613306 ubox
51 64 0.018825427 ubox
51 75 0.003503121 ubox
52 61 0.617576838 ubox
52 62 0.011885109 ubox
52 70 0.018232225 ubox
52 72 0.018926837 ubox
53 60 0.617229412 ubox
53 61 0.010685345 ubox
53 68 0.007677432 ubox
53 69 0.017696174 ubox
53 71 0.018859552 ubox
54 59 0.614615477 ubox
54 67 0.011442677 ubox
55 66 0.008788174 ubox
57 66 0.075697907 ubox
58 65 0.084050798 ubox
58 76 0.005213464 ubox
59 64 0.083994962 ubox
59 75 0.005252489 ubox
64 76 0.497468321 ubox
65 72 0.032012256 ubox
65 75 0.501692946 ubox
66 71 0.029820466 ubox
66 73 0.357998118 ubox
66 74 0.366645880 ubox
67 72 0.496068188 ubox
14 76 0.9500000 lbox
15 75 0.9500000 lbox
16 74 0.9500000 lbox
19 71 0.9500000 lbox
20 70 0.9500000 lbox
21 69 0.9500000 lbox
22 67 0.9500000 lbox
23 66 0.9500000 lbox
24 65 0.9500000 lbox
25 64 0.9500000 lbox
27 62 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
32 56 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
