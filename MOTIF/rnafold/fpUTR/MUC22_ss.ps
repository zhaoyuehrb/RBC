%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAAAACUAGCUGGCGUGGUGGCAGGCACCUGUAGUCCCAGCUACGUGGGAAGCUGAGGCAAGAGAAUAGCUUGAACCUGGGAAGUGGAGGUUGCAGUGAGCCGAGAUUGCACCACUGCACUCCAGCCUGGUCGACAGAGCGAGACUCCGUCUCAAAAAAAUGAAAAAUAAAAAAUGUUAGGCAUCUAAAUGACAACUUCUAUGUGCAUCAUUUAGAG\
) } def
/len { sequence length } bind def

/coor [
[207.41636658 332.54611206]
[200.58782959 329.61578369]
[194.48973083 325.35003662]
[189.38018799 319.92385864]
[185.47657776 313.56137085]
[182.94638062 306.52676392]
[181.89990234 299.11318970]
[182.38551331 291.63061523]
[184.38746643 284.39279175]
[187.82630920 277.70416260]
[192.56202698 271.84704590]
[198.39982605 267.06973267]
[192.95771790 253.09176636]
[187.51559448 239.11381531]
[182.07348633 225.13584900]
[176.63136292 211.15789795]
[171.18925476 197.17993164]
[165.74713135 183.20196533]
[150.96682739 180.64413452]
[141.14392090 191.98037720]
[131.32099915 203.31661987]
[121.49809265 214.65286255]
[121.20378113 230.69322205]
[108.39218140 240.34944153]
[92.89125824 236.21409607]
[86.59200287 221.45947266]
[94.32665253 207.40405273]
[110.16184998 204.82995605]
[119.98476410 193.49371338]
[129.80767822 182.15747070]
[139.63058472 170.82122803]
[135.53083801 164.54093933]
[122.97025299 172.74043274]
[107.99273682 173.56143188]
[114.77075195 160.17985535]
[127.33132935 151.98036194]
[123.23157501 145.70007324]
[108.90099335 150.13114929]
[94.57041168 154.56221008]
[80.23983002 158.99328613]
[65.90924835 163.42436218]
[58.75650024 177.51739502]
[43.70772552 182.34544373]
[29.69109726 175.04408264]
[25.02243423 159.94511414]
[32.47156906 146.00645447]
[47.61906052 141.49769592]
[61.47817612 149.09378052]
[75.80875397 144.66270447]
[90.13934326 140.23162842]
[104.46992493 135.80055237]
[118.80050659 131.36949158]
[91.88696289 135.29177856]
[69.99005127 119.61682129]
[65.12516785 93.40399933]
[51.30831146 87.56494904]
[35.58474731 89.31996918]
[26.87325668 77.23860931]
[13.05640221 71.39955902]
[-0.76045275 65.56050873]
[-14.65927792 59.91934586]
[-28.63723755 54.47723389]
[-42.61520004 49.03511810]
[-56.59315872 43.59300232]
[-70.21814728 51.26722336]
[-85.57878876 48.33724594]
[-95.42225647 36.18651962]
[-95.10076141 20.55224037]
[-84.76611328 8.81644058]
[-69.29801178 6.52040386]
[-56.00001526 14.74825001]
[-51.15104294 29.61503983]
[-37.17308426 35.05715561]
[-23.19512177 40.49927139]
[-9.21716213 45.94138718]
[-4.56763697 44.87681961]
[0.80037099 46.71707153]
[5.07859898 51.74365234]
[18.89545441 57.58270264]
[32.71230698 63.42175293]
[47.44759750 61.24909210]
[57.14736557 73.74809265]
[70.96421814 79.58715057]
[93.25077820 64.87982941]
[119.69609833 69.82707977]
[135.39291382 91.92586517]
[131.29460144 118.92490387]
[129.79769897 103.99977875]
[128.30079651 89.07465363]
[126.80389404 74.14953613]
[125.30699158 59.22441101]
[121.76854706 53.65223312]
[121.59616089 47.98016739]
[123.98670959 43.85261917]
[122.91661835 28.89083862]
[121.84653473 13.92905712]
[120.77644348 -1.03272450]
[119.70635986 -15.99450588]
[118.63626862 -30.95628738]
[117.56618500 -45.91806793]
[106.89433289 -60.92827225]
[115.18024445 -76.40114594]
[113.89661407 -91.34612274]
[100.99814606 -100.18713379]
[96.85006714 -115.26451874]
[103.41096497 -129.45918274]
[117.58299255 -136.06884766]
[132.67454529 -131.97264099]
[141.55986023 -119.10464478]
[140.04356384 -103.54074860]
[128.84159851 -92.62974548]
[130.12521362 -77.68476868]
[139.17198181 -69.66094208]
[140.36724854 -57.22516251]
[132.52796936 -46.98815918]
[133.59805298 -32.02637482]
[134.66813660 -17.06459427]
[135.73822021 -2.10281229]
[136.80831909 12.85896969]
[137.87840271 27.82075119]
[138.94848633 42.78253174]
[140.23211670 57.72750854]
[141.72901917 72.65263367]
[143.22592163 87.57775116]
[144.72282410 102.50287628]
[146.21971130 117.42800140]
[160.55030823 121.85906982]
[170.21034241 110.38372040]
[179.78819275 98.83968353]
[189.28337097 87.22756195]
[198.77856445 75.61544037]
[198.61471558 59.57322311]
[211.14533997 49.55509567]
[226.75802612 53.24610519]
[233.47605896 67.81482697]
[226.14591980 82.08538055]
[210.39068604 85.11062622]
[200.89550781 96.72274780]
[191.40031433 108.33486938]
[189.60079956 115.49794006]
[181.68568420 120.04375458]
[172.02565002 131.51910400]
[181.26995850 143.33193970]
[194.73092651 136.71362305]
[208.19190979 130.09530640]
[221.65287781 123.47698975]
[235.11386108 116.85867310]
[246.66009521 104.44413757]
[261.78579712 112.10246277]
[258.61395264 128.75706482]
[241.73217773 130.31964111]
[228.27119446 136.93795776]
[214.81022644 143.55627441]
[201.34924316 150.17459106]
[187.88827515 156.79290771]
[202.87437439 157.43832397]
[217.86048889 158.08375549]
[232.84658813 158.72917175]
[246.56021118 152.65161133]
[261.51208496 151.45101929]
[276.01977539 155.26248169]
[288.45077515 163.65710449]
[297.40634155 175.69030762]
[301.87872314 190.00805664]
[301.36468506 204.99925232]
[295.92202759 218.97700500]
[286.16323853 230.36849976]
[273.18640137 237.89189148]
[258.45172119 240.70063782]
[243.61720276 238.47866821]
[230.35209656 231.47601318]
[220.14906311 220.48065186]
[214.15698242 206.73303223]
[202.67968750 197.07530212]
[191.20239258 187.41758728]
[179.72509766 177.75985718]
[185.16720581 191.73780823]
[190.60932922 205.71577454]
[196.05143738 219.69374084]
[201.49356079 233.67169189]
[206.93566895 247.64965820]
[212.37779236 261.62762451]
[235.42353821 265.45123291]
[251.43530273 282.29315186]
[254.06236267 305.25952148]
[242.39158630 325.07131958]
[249.76757812 338.13253784]
[257.14358521 351.19372559]
[264.51956177 364.25491333]
[271.89556885 377.31610107]
[279.27154541 390.37728882]
[286.64755249 403.43847656]
[294.02352905 416.49966431]
[301.39953613 429.56085205]
[318.33862305 433.94235229]
[326.70040894 448.92572021]
[321.73495483 464.99691772]
[329.29669189 477.95144653]
[344.64355469 481.72628784]
[352.75463867 495.29043579]
[348.81774902 510.59652710]
[335.16860962 518.56372070]
[319.90496826 514.46527100]
[312.08251953 500.73263550]
[316.34216309 485.51318359]
[308.78042603 472.55865479]
[295.98648071 471.06015015]
[286.24487305 462.33773804]
[283.25964355 449.40737915]
[288.33834839 436.93685913]
[280.96234131 423.87567139]
[273.58636475 410.81448364]
[266.21035767 397.75329590]
[258.83438110 384.69207764]
[251.45837402 371.63088989]
[244.08238220 358.56970215]
[236.70639038 345.50851440]
[229.33039856 332.44732666]
[222.09558105 333.98754883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[19 31]
[20 30]
[21 29]
[22 28]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[55 83]
[56 82]
[58 80]
[59 79]
[60 78]
[61 75]
[62 74]
[63 73]
[64 72]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
[102 112]
[103 111]
[127 142]
[128 141]
[129 139]
[130 138]
[131 137]
[143 155]
[144 154]
[145 153]
[146 152]
[147 151]
[186 218]
[187 217]
[188 216]
[189 215]
[190 214]
[191 213]
[192 212]
[193 211]
[194 210]
[197 206]
[198 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
