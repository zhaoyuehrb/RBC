%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EIF3G)
} def

/sequence { (\
AGUCUCGUUUUCGCCCGCUUCCGCUCUCUGGCCGGGCUUGGGCUGCGUGGAGAAUACUUUUUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.010440379 ubox
1 10 0.023817775 ubox
1 11 0.014305198 ubox
1 44 0.257000091 ubox
1 58 0.103936030 ubox
1 59 0.012559280 ubox
1 60 0.009315353 ubox
1 61 0.009702198 ubox
1 62 0.018502635 ubox
2 8 0.012387494 ubox
2 9 0.031571749 ubox
2 10 0.019356188 ubox
2 43 0.276540479 ubox
2 46 0.044238848 ubox
2 55 0.112721082 ubox
2 57 0.119435263 ubox
2 58 0.015779257 ubox
2 59 0.012500243 ubox
2 60 0.013095216 ubox
2 61 0.020753121 ubox
2 64 0.067564743 ubox
3 7 0.007004248 ubox
3 41 0.004623943 ubox
3 42 0.246273860 ubox
3 45 0.044069002 ubox
3 50 0.044121763 ubox
3 51 0.067753745 ubox
3 53 0.488744897 ubox
3 54 0.081931695 ubox
3 56 0.083235300 ubox
3 63 0.064773773 ubox
4 40 0.006342882 ubox
4 41 0.245335888 ubox
4 42 0.133074761 ubox
4 49 0.059585976 ubox
4 50 0.073760327 ubox
4 52 0.532937931 ubox
5 40 0.177128808 ubox
5 41 0.134074651 ubox
5 42 0.009149989 ubox
5 49 0.069415084 ubox
5 50 0.011113602 ubox
5 51 0.532988089 ubox
5 53 0.017521848 ubox
6 13 0.017601979 ubox
6 40 0.208438088 ubox
6 41 0.015091428 ubox
6 45 0.027043055 ubox
6 47 0.112161977 ubox
6 49 0.023165245 ubox
6 50 0.532082214 ubox
6 52 0.018113347 ubox
6 63 0.005437165 ubox
6 65 0.023476909 ubox
7 12 0.106927236 ubox
7 14 0.003690573 ubox
7 37 0.007811705 ubox
7 39 0.189802025 ubox
7 43 0.305135483 ubox
7 44 0.015366851 ubox
7 46 0.121251941 ubox
7 48 0.026691824 ubox
7 55 0.055824142 ubox
7 57 0.244077255 ubox
7 64 0.023189721 ubox
8 13 0.003532460 ubox
8 36 0.006626897 ubox
8 41 0.008546699 ubox
8 42 0.304911873 ubox
8 45 0.118381521 ubox
8 47 0.032412184 ubox
8 50 0.010438161 ubox
8 51 0.014442852 ubox
8 52 0.003855741 ubox
8 53 0.030811625 ubox
8 54 0.057207774 ubox
8 56 0.235562511 ubox
8 63 0.022431196 ubox
9 35 0.005388169 ubox
9 40 0.016956435 ubox
9 41 0.298170188 ubox
9 42 0.012924446 ubox
9 49 0.013781322 ubox
9 50 0.014990855 ubox
9 51 0.004382348 ubox
9 52 0.032735722 ubox
9 53 0.057788576 ubox
9 54 0.007108439 ubox
10 34 0.004526853 ubox
10 36 0.006031859 ubox
10 40 0.277965936 ubox
10 41 0.016258116 ubox
10 42 0.033150377 ubox
10 49 0.017856735 ubox
10 50 0.004373836 ubox
10 51 0.033595614 ubox
10 52 0.057677468 ubox
10 53 0.006100350 ubox
10 54 0.235493985 ubox
11 35 0.008026922 ubox
11 40 0.017982493 ubox
11 41 0.039907322 ubox
11 42 0.014717688 ubox
11 49 0.004550395 ubox
11 50 0.033795641 ubox
11 51 0.057300213 ubox
11 52 0.003702662 ubox
11 53 0.251474725 ubox
12 34 0.008570174 ubox
12 40 0.043121327 ubox
12 41 0.018245922 ubox
12 45 0.142414051 ubox
12 47 0.059762286 ubox
12 49 0.034720202 ubox
12 50 0.056272894 ubox
12 52 0.250632975 ubox
12 65 0.011735416 ubox
13 32 0.007361479 ubox
13 33 0.007641996 ubox
13 37 0.426013621 ubox
13 39 0.005842346 ubox
13 43 0.863585854 ubox
13 44 0.030722545 ubox
13 46 0.054644889 ubox
13 48 0.028829153 ubox
13 64 0.008586104 ubox
14 31 0.008309227 ubox
14 35 0.003833953 ubox
14 36 0.427016365 ubox
14 41 0.003427249 ubox
14 42 0.865467634 ubox
14 45 0.053421548 ubox
14 47 0.028260522 ubox
14 50 0.251320377 ubox
14 63 0.008551903 ubox
15 30 0.008268199 ubox
15 31 0.006425718 ubox
15 34 0.003952035 ubox
15 35 0.427022577 ubox
15 40 0.003823741 ubox
15 41 0.865558607 ubox
15 42 0.011147875 ubox
15 49 0.251784349 ubox
15 50 0.017419122 ubox
16 30 0.006467051 ubox
16 34 0.426985237 ubox
16 40 0.864666962 ubox
16 41 0.011301510 ubox
16 45 0.023567921 ubox
16 47 0.252533016 ubox
16 49 0.017555391 ubox
16 65 0.005534415 ubox
17 22 0.003772733 ubox
17 24 0.012333837 ubox
17 29 0.003782571 ubox
17 32 0.147970840 ubox
17 33 0.399712989 ubox
17 37 0.320190092 ubox
17 39 0.706810595 ubox
17 43 0.057540813 ubox
17 44 0.005862803 ubox
17 46 0.252816797 ubox
17 48 0.017449327 ubox
17 64 0.005916433 ubox
18 23 0.012570141 ubox
18 31 0.208899436 ubox
18 35 0.013982275 ubox
18 36 0.322645888 ubox
18 41 0.004616421 ubox
18 42 0.057809648 ubox
18 45 0.252735225 ubox
18 47 0.016563685 ubox
18 52 0.019905034 ubox
18 63 0.005884253 ubox
19 30 0.205513012 ubox
19 31 0.014385807 ubox
19 34 0.014814426 ubox
19 35 0.247770193 ubox
19 36 0.082909680 ubox
19 40 0.004823867 ubox
19 41 0.057095088 ubox
19 42 0.011000437 ubox
19 51 0.019894598 ubox
19 52 0.007819683 ubox
20 30 0.012386928 ubox
20 31 0.023041260 ubox
20 34 0.179792995 ubox
20 35 0.154809613 ubox
20 36 0.710731938 ubox
20 40 0.050966126 ubox
20 41 0.014238102 ubox
20 42 0.176944918 ubox
20 50 0.019782049 ubox
20 51 0.009466120 ubox
21 30 0.026439308 ubox
21 31 0.359053053 ubox
21 34 0.201673032 ubox
21 35 0.809929633 ubox
21 36 0.052882120 ubox
21 40 0.015234959 ubox
21 41 0.183548211 ubox
21 42 0.167090337 ubox
21 49 0.019806057 ubox
21 50 0.009854201 ubox
22 30 0.359452675 ubox
22 34 0.811193406 ubox
22 35 0.051755676 ubox
22 40 0.183147476 ubox
22 41 0.166638049 ubox
22 45 0.005599166 ubox
22 47 0.020769970 ubox
22 49 0.009847198 ubox
23 29 0.291429507 ubox
23 32 0.630929358 ubox
23 33 0.596579785 ubox
23 37 0.241867492 ubox
23 39 0.073228641 ubox
23 43 0.040454702 ubox
23 46 0.022629831 ubox
23 48 0.009791401 ubox
24 31 0.836190159 ubox
24 35 0.003587758 ubox
24 36 0.243413131 ubox
24 42 0.040614477 ubox
24 45 0.022617324 ubox
24 47 0.009774858 ubox
25 30 0.747238998 ubox
25 31 0.192421091 ubox
25 34 0.003880455 ubox
25 35 0.241355644 ubox
25 36 0.013623547 ubox
25 41 0.039585500 ubox
25 53 0.005570060 ubox
26 30 0.225262927 ubox
26 34 0.240627402 ubox
26 35 0.032897049 ubox
26 36 0.084237261 ubox
26 40 0.039141602 ubox
26 41 0.008765530 ubox
26 42 0.019272797 ubox
26 52 0.005772409 ubox
27 34 0.030224684 ubox
27 35 0.084124946 ubox
27 36 0.018759270 ubox
27 40 0.007557989 ubox
27 41 0.019427548 ubox
27 51 0.005773752 ubox
28 34 0.084570544 ubox
28 35 0.022156024 ubox
28 36 0.011888553 ubox
28 40 0.021027795 ubox
28 50 0.005768258 ubox
29 34 0.020803972 ubox
29 35 0.011837639 ubox
29 45 0.006774750 ubox
29 49 0.005548399 ubox
30 38 0.044344275 ubox
30 44 0.026797596 ubox
31 37 0.045917266 ubox
31 43 0.027177165 ubox
32 36 0.045587246 ubox
32 42 0.027145519 ubox
33 40 0.003923718 ubox
33 41 0.027101358 ubox
34 39 0.003224217 ubox
35 44 0.004462008 ubox
36 43 0.008418912 ubox
36 46 0.003248191 ubox
37 42 0.008445478 ubox
37 45 0.003265480 ubox
39 47 0.004409875 ubox
40 46 0.007025662 ubox
42 64 0.007869491 ubox
43 63 0.007867124 ubox
44 49 0.003510394 ubox
44 65 0.361791118 ubox
45 64 0.686215219 ubox
46 63 0.686664919 ubox
46 65 0.360919907 ubox
47 55 0.003551858 ubox
47 57 0.025361056 ubox
47 62 0.672649713 ubox
47 64 0.392936827 ubox
48 54 0.003923482 ubox
48 56 0.025596740 ubox
48 63 0.391802900 ubox
48 65 0.055871158 ubox
49 55 0.025139498 ubox
49 58 0.036106490 ubox
49 59 0.010683359 ubox
49 60 0.663072971 ubox
49 61 0.043331581 ubox
49 62 0.383155202 ubox
49 64 0.095341344 ubox
50 57 0.037176221 ubox
50 58 0.007745223 ubox
50 59 0.678191896 ubox
50 60 0.051346555 ubox
50 61 0.391048450 ubox
50 62 0.031884153 ubox
51 58 0.681142302 ubox
51 59 0.050491944 ubox
51 60 0.391363019 ubox
51 61 0.039617501 ubox
51 62 0.101616772 ubox
52 57 0.675899076 ubox
52 58 0.044674699 ubox
52 59 0.382580103 ubox
52 60 0.041294764 ubox
52 61 0.106243879 ubox
52 62 0.017106183 ubox
53 58 0.354367783 ubox
53 59 0.042393483 ubox
53 60 0.106977036 ubox
53 61 0.022034668 ubox
53 62 0.025473273 ubox
54 58 0.033906660 ubox
54 59 0.103606396 ubox
54 60 0.026842066 ubox
54 61 0.031905796 ubox
55 63 0.015604573 ubox
56 62 0.016576390 ubox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
13 43 0.9500000 lbox
14 42 0.9500000 lbox
15 41 0.9500000 lbox
16 40 0.9500000 lbox
17 39 0.9500000 lbox
20 36 0.9500000 lbox
21 35 0.9500000 lbox
22 34 0.9500000 lbox
23 33 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
