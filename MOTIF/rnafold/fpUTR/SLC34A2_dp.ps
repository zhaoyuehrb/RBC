%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC34A2)
} def

/sequence { (\
AGUUUGUUUCUAUUAGGGCCCGUGGCCAUCAGCGAAGGGUCCGUCCUUCAGCCGUCUUGGGGAGCAAAGCCCGCAAUUUAUGUUUUCCAAGCCACAAAUGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.018205107 ubox
1 9 0.025601895 ubox
1 11 0.170685641 ubox
1 14 0.134415330 ubox
2 7 0.018227732 ubox
2 8 0.034671724 ubox
2 10 0.180485415 ubox
2 13 0.157364861 ubox
2 33 0.004007380 ubox
2 52 0.009239377 ubox
2 95 0.003898668 ubox
2 99 0.074840075 ubox
2 103 0.136499222 ubox
3 12 0.158859903 ubox
3 32 0.003681799 ubox
3 36 0.009069952 ubox
3 51 0.007953534 ubox
3 94 0.003633032 ubox
3 98 0.079227876 ubox
3 102 0.136710173 ubox
4 15 0.027365077 ubox
4 16 0.007211178 ubox
4 35 0.010432075 ubox
4 50 0.006005354 ubox
4 51 0.012849640 ubox
4 97 0.081127565 ubox
4 101 0.135850712 ubox
5 12 0.041428232 ubox
5 15 0.057928184 ubox
5 31 0.004085815 ubox
5 34 0.010593131 ubox
5 50 0.016598890 ubox
5 54 0.004337171 ubox
5 96 0.081764651 ubox
5 100 0.133347157 ubox
6 11 0.040397091 ubox
6 13 0.069809512 ubox
6 14 0.059970100 ubox
6 19 0.003504782 ubox
6 30 0.004555778 ubox
6 33 0.011160810 ubox
6 49 0.017697623 ubox
6 52 0.027832599 ubox
6 53 0.005761254 ubox
6 95 0.081844298 ubox
6 99 0.134385651 ubox
6 103 0.027370344 ubox
7 12 0.073329921 ubox
7 16 0.005273949 ubox
7 18 0.003375946 ubox
7 32 0.010956776 ubox
7 37 0.012987920 ubox
7 51 0.028030279 ubox
7 94 0.076557349 ubox
7 97 0.003309570 ubox
7 98 0.134547569 ubox
7 102 0.021431749 ubox
8 15 0.037468557 ubox
8 16 0.004750301 ubox
8 17 0.003192967 ubox
8 31 0.009785828 ubox
8 36 0.016040148 ubox
8 50 0.024582128 ubox
8 51 0.003764835 ubox
8 96 0.003963222 ubox
8 97 0.131217303 ubox
8 98 0.004085698 ubox
8 101 0.013470108 ubox
8 102 0.010090738 ubox
9 15 0.014737212 ubox
9 16 0.005204687 ubox
9 17 0.004698011 ubox
9 18 0.003499872 ubox
9 35 0.016711931 ubox
9 50 0.004087751 ubox
9 96 0.116422085 ubox
9 97 0.004680233 ubox
9 100 0.009294248 ubox
9 101 0.008385321 ubox
9 102 0.138958661 ubox
10 16 0.050060720 ubox
10 17 0.007699399 ubox
10 32 0.008025951 ubox
10 34 0.016763389 ubox
10 51 0.007092391 ubox
10 91 0.008842680 ubox
10 100 0.009026439 ubox
10 101 0.150901429 ubox
11 15 0.046771138 ubox
11 16 0.010107961 ubox
11 31 0.008985667 ubox
11 50 0.006949400 ubox
11 90 0.007684486 ubox
11 100 0.150938436 ubox
12 29 0.007669806 ubox
12 44 0.007748851 ubox
12 99 0.150688131 ubox
13 28 0.007952096 ubox
13 32 0.003534602 ubox
13 43 0.007738573 ubox
13 97 0.006672578 ubox
13 98 0.149276252 ubox
14 31 0.008216010 ubox
14 96 0.008473824 ubox
14 97 0.139791775 ubox
15 47 0.003333179 ubox
16 27 0.014620136 ubox
16 30 0.022184569 ubox
16 41 0.003239814 ubox
16 42 0.976471187 ubox
16 46 0.003415203 ubox
16 53 0.004948529 ubox
16 93 0.024087758 ubox
16 104 0.011567190 ubox
17 26 0.010948488 ubox
17 27 0.204588096 ubox
17 29 0.003410056 ubox
17 41 0.977699808 ubox
17 42 0.033263794 ubox
17 45 0.003324065 ubox
17 92 0.009771777 ubox
17 93 0.005639080 ubox
17 103 0.011301757 ubox
17 104 0.012553619 ubox
18 26 0.205411350 ubox
18 40 0.977445005 ubox
18 41 0.033115350 ubox
18 92 0.005440284 ubox
18 103 0.012728733 ubox
19 25 0.205641056 ubox
19 39 0.978333051 ubox
19 91 0.005176242 ubox
19 101 0.012327832 ubox
20 24 0.204145646 ubox
20 38 0.978330918 ubox
20 100 0.012403538 ubox
20 101 0.012593583 ubox
21 34 0.019967393 ubox
21 37 0.977853303 ubox
21 100 0.012624622 ubox
22 33 0.045782628 ubox
22 95 0.021060650 ubox
22 99 0.004557009 ubox
23 31 0.018464549 ubox
23 32 0.043178409 ubox
23 34 0.133358939 ubox
23 94 0.021280624 ubox
23 98 0.003561342 ubox
24 30 0.022319637 ubox
24 33 0.142256203 ubox
24 53 0.003717446 ubox
24 93 0.021419203 ubox
25 29 0.014600836 ubox
25 33 0.964278113 ubox
25 52 0.003717081 ubox
25 92 0.021383285 ubox
26 32 0.963652768 ubox
26 51 0.003709166 ubox
26 91 0.020247049 ubox
28 55 0.015805841 ubox
29 54 0.016096628 ubox
32 52 0.196295752 ubox
32 55 0.005969640 ubox
33 51 0.196700656 ubox
33 54 0.006206058 ubox
34 49 0.203066276 ubox
34 53 0.003698605 ubox
35 48 0.203828401 ubox
36 47 0.203858116 ubox
36 48 0.026415649 ubox
37 46 0.203898808 ubox
37 47 0.027588657 ubox
38 45 0.203592158 ubox
38 46 0.028292355 ubox
38 104 0.020405341 ubox
39 44 0.138015814 ubox
39 45 0.028853840 ubox
39 103 0.020670948 ubox
40 102 0.020687872 ubox
41 101 0.020691740 ubox
42 100 0.020688093 ubox
43 52 0.044776102 ubox
43 53 0.007338528 ubox
43 95 0.003833417 ubox
43 99 0.020308484 ubox
43 103 0.968521707 ubox
44 51 0.043588011 ubox
44 94 0.003714130 ubox
44 98 0.019416118 ubox
44 102 0.971082157 ubox
45 101 0.971645029 ubox
46 100 0.970553319 ubox
46 101 0.014025713 ubox
47 97 0.034283141 ubox
47 98 0.169716256 ubox
47 100 0.017577757 ubox
47 102 0.036962658 ubox
48 96 0.037758748 ubox
48 97 0.164961125 ubox
48 101 0.040757500 ubox
48 102 0.003882214 ubox
49 100 0.048981347 ubox
49 101 0.003909957 ubox
50 99 0.064932590 ubox
51 92 0.045231349 ubox
52 91 0.040335446 ubox
52 101 0.040921811 ubox
53 82 0.003288948 ubox
53 100 0.041471404 ubox
54 81 0.003381528 ubox
54 92 0.793247230 ubox
54 95 0.186520921 ubox
54 99 0.041344084 ubox
54 103 0.006134968 ubox
55 80 0.003347382 ubox
55 91 0.118102255 ubox
55 94 0.175109236 ubox
55 98 0.041014068 ubox
55 102 0.006014611 ubox
56 91 0.989337462 ubox
56 101 0.004493023 ubox
57 76 0.005741975 ubox
57 90 0.998185269 ubox
57 100 0.003831365 ubox
58 75 0.006438298 ubox
58 89 0.999311926 ubox
59 74 0.006549328 ubox
59 88 0.999950885 ubox
60 87 0.999923882 ubox
60 88 0.003343549 ubox
61 72 0.011272826 ubox
61 86 0.996888894 ubox
61 87 0.004441746 ubox
62 71 0.011301993 ubox
62 85 0.998357168 ubox
62 86 0.004638323 ubox
63 84 0.998761035 ubox
63 85 0.004392807 ubox
64 70 0.011916543 ubox
64 74 0.009564210 ubox
64 83 0.999284727 ubox
64 84 0.003253297 ubox
65 69 0.011839883 ubox
65 73 0.009612201 ubox
65 82 0.999529400 ubox
66 78 0.016737901 ubox
66 79 0.186076282 ubox
66 81 0.941514448 ubox
67 77 0.030325481 ubox
67 78 0.391873577 ubox
67 79 0.365138240 ubox
68 77 0.426210537 ubox
68 78 0.366521576 ubox
68 79 0.561678472 ubox
69 77 0.315493869 ubox
69 78 0.553640560 ubox
69 83 0.003197494 ubox
70 82 0.003257596 ubox
73 83 0.012391077 ubox
74 82 0.012986593 ubox
75 81 0.012634471 ubox
76 83 0.003371026 ubox
77 82 0.003391143 ubox
92 101 0.047826437 ubox
93 100 0.048565950 ubox
94 99 0.040526097 ubox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
43 103 0.9500000 lbox
44 102 0.9500000 lbox
45 101 0.9500000 lbox
46 100 0.9500000 lbox
56 91 0.9500000 lbox
57 90 0.9500000 lbox
58 89 0.9500000 lbox
59 88 0.9500000 lbox
60 87 0.9500000 lbox
61 86 0.9500000 lbox
62 85 0.9500000 lbox
63 84 0.9500000 lbox
64 83 0.9500000 lbox
65 82 0.9500000 lbox
66 81 0.9500000 lbox
showpage
end
%%EOF
