%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGAAAUGUGGUCUCCGACGGAUGGCCUACACCCGGGAGGAGUCCAGGAACUCUAGGUGGACAGUUACUUCCGCACACGCGUAGUAGGACGGUAGCCGGUAUUCAAUCUUCAAAUCAGCGCCGCGGGAAGUGCGGGCGGGUGUUGCUCCCCUGUCUCUGGACGACGCUGUGACUGAUCCCAGGCUUGGAGCCGGAGCUGCGAGCGAGGCAGUGAAAGGGUGGCAGAUUUCUGUGUAAGAGCUGCAGAAA\
) } def
/len { sequence length } bind def

/coor [
[298.27743530 505.00750732]
[298.07043457 490.00894165]
[290.58224487 490.42947388]
[283.57321167 503.69119263]
[276.56417847 516.95294189]
[276.75646973 522.11669922]
[275.12677002 526.41772461]
[272.30264282 529.30993652]
[269.03704834 530.57226562]
[261.53704834 543.56262207]
[254.03704834 556.55303955]
[246.61816406 569.58990479]
[239.28068542 582.67279053]
[231.94320679 595.75561523]
[224.60574341 608.83850098]
[217.34996033 621.96685791]
[210.17614746 635.14019775]
[203.00233459 648.31347656]
[200.73722839 665.11547852]
[183.96485901 667.59008789]
[176.94386292 652.15826416]
[189.82901001 641.13970947]
[197.00282288 627.96636963]
[204.17663574 614.79302979]
[204.61430359 607.43530273]
[211.52287292 601.50103760]
[218.86035156 588.41815186]
[226.19781494 575.33526611]
[233.53529358 562.25244141]
[234.06466675 554.90069580]
[241.04666138 549.05303955]
[248.54666138 536.06262207]
[256.04666138 523.07226562]
[263.30245972 509.94390869]
[270.31146240 496.68215942]
[277.32049561 483.42044067]
[277.88137817 468.43093872]
[271.88299561 454.68249512]
[265.88461304 440.93405151]
[259.88623047 427.18563843]
[245.97059631 422.00003052]
[239.69152832 408.14260864]
[245.22502136 393.58175659]
[239.22663879 379.83334351]
[233.22825623 366.08489990]
[227.22987366 352.33645630]
[221.14591980 338.62567139]
[214.97660828 324.95309448]
[208.80729675 311.28051758]
[192.68232727 310.05978394]
[179.30053711 300.81417847]
[172.37463379 285.99353027]
[173.88418579 269.60983276]
[183.51094055 256.15133667]
[177.17166138 242.55670166]
[170.83239746 228.96209717]
[164.49311829 215.36747742]
[158.15383911 201.77285767]
[154.07598877 199.33326721]
[151.47355652 194.31849670]
[151.83071899 187.75936890]
[145.83233643 174.01094055]
[139.83396912 160.26251221]
[133.83558655 146.51406860]
[127.83720398 132.76564026]
[121.83882141 119.01720428]
[32.01122284 143.90460205]
[18.04811478 138.42448425]
[4.08500910 132.94436646]
[-9.87809658 127.46424866]
[-23.84120369 121.98413086]
[-35.93613052 126.41461945]
[-47.44319153 121.58265686]
[-52.41820908 110.57472229]
[-66.31191254 104.92095947]
[-80.20561981 99.26720428]
[-96.36799622 102.04381561]
[-106.64433289 89.26378632]
[-100.46321106 74.07412720]
[-84.18324280 72.10065460]
[-74.55185699 85.37349701]
[-60.65815353 91.02725983]
[-46.76445007 96.68101501]
[-29.52135468 93.35885620]
[-18.36108780 108.02102661]
[-4.39798164 113.50114441]
[9.56512451 118.98126221]
[23.52823067 124.46137238]
[37.49133682 129.94148254]
[41.71623611 123.74469757]
[50.16603851 111.35112000]
[54.39093781 105.15432739]
[44.18834686 94.15854645]
[33.98575592 83.16277313]
[18.78013039 75.66442108]
[21.77610588 58.97728348]
[38.64046860 57.23671722]
[44.98153305 72.96018219]
[55.18412399 83.95595551]
[65.38671875 94.95173645]
[72.48114777 92.51881409]
[67.61531067 78.32996368]
[62.74946976 64.14110565]
[57.88363266 49.95224762]
[53.01779556 35.76339340]
[48.15195847 21.57453728]
[43.28612137 7.38568211]
[38.42028427 -6.80317354]
[29.40801811 -18.79396629]
[38.02701569 -31.07048225]
[52.36608887 -26.66695786]
[52.60913849 -11.66901112]
[57.47497559 2.51984477]
[62.34081268 16.70870018]
[67.20664978 30.89755630]
[72.07248688 45.08641052]
[76.93832397 59.27526855]
[81.80416107 73.46412659]
[86.66999817 87.65297699]
[93.76442719 85.22006226]
[95.07176208 70.27713776]
[92.70654297 61.48226929]
[96.48967743 55.15647888]
[97.98319244 40.23101425]
[99.47671509 25.30555344]
[100.97023010 10.38009262]
[102.46374512 -4.54536963]
[93.45927429 -17.82313156]
[98.36343384 -33.09823227]
[113.41417694 -38.65292740]
[127.06586456 -30.22612190]
[128.84608459 -14.28214645]
[117.38921356 -3.05185175]
[115.89569092 11.87360954]
[114.40217590 26.79907227]
[112.90865326 41.72453308]
[111.41513824 56.64999390]
[110.01468658 71.58447266]
[108.70735168 86.52739716]
[123.06822205 90.85929108]
[130.24203491 77.68596649]
[137.41584778 64.51264191]
[131.53474426 50.02310562]
[136.39242554 35.15915680]
[149.69523621 26.93910599]
[165.16200256 29.24420357]
[175.48977661 40.98605728]
[175.80210876 56.62052155]
[165.95152283 68.76548004]
[150.58917236 71.68645477]
[143.41535950 84.85977936]
[136.24154663 98.03310394]
[135.58724976 113.01882935]
[141.58563232 126.76725769]
[147.58401489 140.51568604]
[153.58239746 154.26412964]
[159.58078003 168.01255798]
[165.57916260 181.76100159]
[171.74845886 195.43357849]
[178.08773804 209.02819824]
[184.42701721 222.62281799]
[190.76628113 236.21743774]
[197.10556030 249.81205750]
[211.07046509 250.30357361]
[223.40499878 256.72824097]
[231.73272705 267.78405762]
[234.47691345 281.28317261]
[231.15876770 294.58465576]
[222.47988892 305.11120605]
[228.64920044 318.78378296]
[234.81849670 332.45639038]
[241.18356323 338.97021484]
[240.97830200 346.33807373]
[246.97668457 360.08651733]
[252.97506714 373.83496094]
[258.97344971 387.58337402]
[273.41104126 393.43093872]
[279.29840088 407.45925903]
[273.63467407 421.18725586]
[279.63305664 434.93566895]
[285.63143921 448.68411255]
[291.62982178 462.43255615]
[303.27365112 446.64450073]
[324.48458862 437.81979370]
[351.46798706 440.19238281]
[366.27142334 442.61273193]
[381.07485962 445.03311157]
[395.87829590 447.45346069]
[410.68173218 449.87384033]
[425.54953003 444.46469116]
[436.86157227 454.15423584]
[451.66500854 456.57461548]
[466.46844482 458.99499512]
[481.60775757 452.69152832]
[494.47024536 462.86441040]
[491.82412720 479.04867554]
[476.39147949 484.59530640]
[464.04806519 473.79843140]
[449.24462891 471.37805176]
[434.44119263 468.95770264]
[420.63223267 474.53994751]
[408.26138306 464.67727661]
[393.45791626 462.25692749]
[378.65447998 459.83654785]
[363.85104370 457.41616821]
[349.04760742 454.99581909]
[345.01785278 461.32125854]
[351.94412231 474.62640381]
[336.95837402 473.97210693]
[332.92861938 480.29754639]
[341.37841797 492.69113159]
[349.82821655 505.08471680]
[358.27801514 517.47827148]
[366.72781372 529.87188721]
[378.92324829 526.31750488]
[391.60818481 526.32385254]
[403.76574707 529.88037109]
[414.42407227 536.69238281]
[422.73406982 546.20532227]
[428.03704834 557.64990234]
[429.91702271 570.10449219]
[428.23309326 582.56903076]
[423.13024902 594.04565430]
[415.02670288 603.61828613]
[423.00717163 616.31915283]
[430.98764038 629.02001953]
[438.96813965 641.72088623]
[453.71182251 648.90112305]
[454.59530640 665.27642822]
[440.70974731 674.00134277]
[426.33941650 666.10034180]
[426.26727295 649.70135498]
[418.28677368 637.00048828]
[410.30630493 624.29962158]
[402.32583618 611.59875488]
[385.27059937 615.02490234]
[368.17617798 611.61437988]
[353.68273926 601.86633301]
[344.03939819 587.26049805]
[340.75531006 570.03332520]
[344.36343384 552.83483887]
[354.33425903 538.32165527]
[345.88442993 525.92810059]
[337.43463135 513.53454590]
[328.98483276 501.14093018]
[320.53503418 488.74734497]
[313.04684448 489.16787720]
[314.52044678 504.09533691]
[322.32604980 516.90441895]
[315.35006714 530.18353271]
[300.37365723 531.02441406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 36]
[4 35]
[5 34]
[9 33]
[10 32]
[11 31]
[12 29]
[13 28]
[14 27]
[15 26]
[16 24]
[17 23]
[18 22]
[37 182]
[38 181]
[39 180]
[40 179]
[43 176]
[44 175]
[45 174]
[46 173]
[47 171]
[48 170]
[49 169]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[66 153]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[74 83]
[75 82]
[76 81]
[92 100]
[93 99]
[94 98]
[120 139]
[121 138]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
[140 152]
[141 151]
[142 150]
[185 206]
[186 205]
[187 204]
[188 203]
[189 202]
[191 200]
[192 199]
[193 198]
[210 246]
[211 245]
[212 244]
[213 243]
[214 242]
[224 235]
[225 234]
[226 233]
[227 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
