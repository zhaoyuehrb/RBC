%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLTM)
} def

/sequence { (\
GUGCGCAGCGCUGCGCGGCGCCGGCGGCCGCCGAGGCCUGGGUGGAAGUUGGCGCUGCUGCCGCCGCCCUGCAGCCCACUCGCUGCCUCGGCAGCGCGCUGCUCUUCUAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.006220077 ubox
1 16 0.004811682 ubox
1 67 0.014117257 ubox
1 99 0.046369306 ubox
1 102 0.029197047 ubox
2 10 0.006228360 ubox
2 15 0.004811439 ubox
2 17 0.005779085 ubox
2 66 0.014145301 ubox
2 73 0.003765181 ubox
2 98 0.046419702 ubox
2 101 0.028328029 ubox
2 109 0.015481102 ubox
3 9 0.006639658 ubox
3 11 0.003301819 ubox
3 14 0.005179191 ubox
3 16 0.021806582 ubox
3 21 0.004538236 ubox
3 65 0.014041008 ubox
3 67 0.035066867 ubox
3 72 0.005954801 ubox
3 75 0.003544031 ubox
3 97 0.046506726 ubox
3 99 0.032876604 ubox
3 100 0.014202270 ubox
3 102 0.054634228 ubox
3 108 0.015980368 ubox
4 8 0.006592718 ubox
4 10 0.003320422 ubox
4 13 0.005178417 ubox
4 15 0.021838739 ubox
4 20 0.004554624 ubox
4 63 0.003225795 ubox
4 66 0.035180178 ubox
4 71 0.006000242 ubox
4 74 0.003653790 ubox
4 96 0.046495801 ubox
4 98 0.033040738 ubox
4 101 0.054419542 ubox
5 11 0.003817664 ubox
5 14 0.022228389 ubox
5 19 0.004557001 ubox
5 61 0.003240372 ubox
5 64 0.014087381 ubox
5 65 0.034270316 ubox
5 67 0.037150644 ubox
5 70 0.005773034 ubox
5 72 0.008781615 ubox
5 95 0.045889922 ubox
5 97 0.032853900 ubox
5 99 0.050185719 ubox
5 100 0.022260182 ubox
5 102 0.993456022 ubox
6 10 0.003873828 ubox
6 13 0.022226241 ubox
6 18 0.004539755 ubox
6 60 0.003615386 ubox
6 63 0.014711312 ubox
6 66 0.037193531 ubox
6 71 0.008844929 ubox
6 94 0.045829711 ubox
6 96 0.032489540 ubox
6 98 0.051024836 ubox
6 101 0.994704111 ubox
7 12 0.020028094 ubox
7 59 0.003585392 ubox
7 70 0.008770766 ubox
7 80 0.011160753 ubox
7 100 0.994526606 ubox
8 14 0.005084628 ubox
8 16 0.004703055 ubox
8 58 0.003209715 ubox
8 61 0.014646522 ubox
8 64 0.057840132 ubox
8 67 0.023063848 ubox
8 69 0.007438748 ubox
8 79 0.011903687 ubox
8 92 0.006901143 ubox
8 95 0.009243518 ubox
8 97 0.057702603 ubox
8 99 0.994706238 ubox
9 13 0.005054454 ubox
9 15 0.004723642 ubox
9 60 0.014652469 ubox
9 63 0.057963892 ubox
9 66 0.023248030 ubox
9 91 0.006860553 ubox
9 94 0.009231919 ubox
9 96 0.058124555 ubox
9 98 0.994574222 ubox
10 14 0.004643963 ubox
10 59 0.014112608 ubox
10 61 0.017815246 ubox
10 62 0.055755851 ubox
10 64 0.039494626 ubox
10 65 0.016939899 ubox
10 67 0.006794309 ubox
10 75 0.310218674 ubox
10 95 0.059830759 ubox
10 97 0.944810718 ubox
11 60 0.021436080 ubox
11 63 0.042878821 ubox
11 66 0.006796500 ubox
11 74 0.326222376 ubox
11 94 0.060204376 ubox
11 96 0.930173026 ubox
12 60 0.016027091 ubox
12 63 0.008216508 ubox
12 73 0.333494597 ubox
12 93 0.060767102 ubox
12 96 0.075625336 ubox
13 58 0.016124013 ubox
13 59 0.071028960 ubox
13 61 0.538411065 ubox
13 62 0.051284291 ubox
13 64 0.011252546 ubox
13 72 0.334911154 ubox
13 75 0.007563222 ubox
13 92 0.053436972 ubox
13 95 0.359284120 ubox
13 97 0.008108844 ubox
13 99 0.003472873 ubox
14 57 0.015667430 ubox
14 60 0.541701230 ubox
14 63 0.011307230 ubox
14 71 0.334813355 ubox
14 74 0.007585705 ubox
14 91 0.052986841 ubox
14 94 0.358873411 ubox
14 96 0.008817883 ubox
14 98 0.003482583 ubox
15 28 0.005394491 ubox
15 31 0.003939361 ubox
15 56 0.007315005 ubox
15 58 0.931431329 ubox
15 59 0.113670330 ubox
15 61 0.007155426 ubox
15 62 0.004941327 ubox
15 67 0.199647843 ubox
15 70 0.267987321 ubox
15 72 0.006642692 ubox
15 92 0.003879360 ubox
15 97 0.003340376 ubox
16 27 0.005413922 ubox
16 30 0.004027672 ubox
16 57 0.939306997 ubox
16 60 0.007141034 ubox
16 66 0.201417366 ubox
16 71 0.006638425 ubox
16 91 0.003860213 ubox
16 96 0.003332528 ubox
17 29 0.004373567 ubox
17 38 0.003573697 ubox
17 56 0.939836547 ubox
17 59 0.004824996 ubox
17 65 0.201493414 ubox
17 68 0.272110608 ubox
17 69 0.012873939 ubox
18 25 0.005447787 ubox
18 28 0.004372941 ubox
18 37 0.003589307 ubox
18 55 0.940716249 ubox
18 58 0.003825735 ubox
18 64 0.201496205 ubox
18 67 0.272386753 ubox
18 68 0.009760963 ubox
19 24 0.005449730 ubox
19 27 0.004318386 ubox
19 36 0.003592193 ubox
19 54 0.940710990 ubox
19 57 0.003500071 ubox
19 63 0.201482376 ubox
19 66 0.272510852 ubox
20 53 0.940726292 ubox
20 61 0.014145247 ubox
20 62 0.200503991 ubox
20 64 0.019302296 ubox
20 65 0.271281132 ubox
20 67 0.005198488 ubox
20 102 0.004672422 ubox
21 52 0.940739819 ubox
21 60 0.014267781 ubox
21 63 0.019566483 ubox
21 66 0.004218720 ubox
21 101 0.003336295 ubox
22 33 0.003597554 ubox
22 51 0.940706587 ubox
22 60 0.199857604 ubox
22 63 0.271276642 ubox
22 66 0.003249826 ubox
22 101 0.005860722 ubox
23 32 0.003614744 ubox
23 50 0.937639099 ubox
23 59 0.201259955 ubox
23 62 0.272517646 ubox
23 65 0.004677872 ubox
23 100 0.006849815 ubox
24 31 0.003614921 ubox
24 49 0.940143609 ubox
24 58 0.201460520 ubox
24 61 0.272531152 ubox
24 64 0.004732089 ubox
24 99 0.006909793 ubox
25 30 0.003609697 ubox
25 48 0.940522725 ubox
25 57 0.201457968 ubox
25 60 0.272522745 ubox
25 63 0.004732085 ubox
25 98 0.006909849 ubox
26 38 0.006908845 ubox
26 56 0.201321417 ubox
26 59 0.272308594 ubox
26 62 0.004728017 ubox
26 97 0.006883135 ubox
27 37 0.006920256 ubox
27 55 0.201454741 ubox
27 58 0.272505890 ubox
27 61 0.004727610 ubox
27 95 0.007248608 ubox
28 36 0.006922069 ubox
28 45 0.940522250 ubox
28 54 0.142451956 ubox
28 57 0.271325360 ubox
28 60 0.004722629 ubox
28 94 0.007254446 ubox
29 35 0.006922201 ubox
29 44 0.940685614 ubox
29 54 0.302142235 ubox
30 43 0.940289131 ubox
30 53 0.338830907 ubox
30 55 0.006178343 ubox
30 92 0.009259211 ubox
31 41 0.029979888 ubox
31 42 0.940238925 ubox
31 52 0.338870617 ubox
31 54 0.005933420 ubox
31 91 0.009278003 ubox
32 40 0.041053672 ubox
32 41 0.939780640 ubox
32 51 0.338851719 ubox
32 90 0.009989613 ubox
33 39 0.043268942 ubox
33 50 0.334895303 ubox
33 89 0.010006303 ubox
34 49 0.317307883 ubox
34 50 0.012156320 ubox
34 88 0.010005227 ubox
35 49 0.012133038 ubox
35 50 0.005312910 ubox
35 87 0.010006337 ubox
36 43 0.006479490 ubox
36 49 0.009940942 ubox
36 53 0.005877482 ubox
36 86 0.009966732 ubox
37 42 0.006826864 ubox
37 45 0.329072108 ubox
37 48 0.009712256 ubox
37 52 0.005884086 ubox
37 85 0.009923640 ubox
38 44 0.329952374 ubox
38 45 0.065615681 ubox
38 48 0.023838175 ubox
38 51 0.005878617 ubox
39 44 0.061603944 ubox
39 47 0.024115792 ubox
39 82 0.008387726 ubox
40 81 0.009210839 ubox
41 80 0.009224858 ubox
41 84 0.003458702 ubox
42 79 0.009245042 ubox
42 83 0.003514015 ubox
43 78 0.009238447 ubox
43 82 0.003506979 ubox
44 77 0.009026057 ubox
44 81 0.003362479 ubox
45 76 0.008789235 ubox
48 72 0.007594249 ubox
48 79 0.003456404 ubox
49 71 0.007460855 ubox
51 62 0.003260396 ubox
51 68 0.004904921 ubox
51 69 0.006091948 ubox
51 77 0.003690194 ubox
52 61 0.003262324 ubox
52 67 0.004991194 ubox
52 68 0.006090224 ubox
52 76 0.003693057 ubox
53 60 0.003260910 ubox
53 66 0.005021600 ubox
54 61 0.004290983 ubox
54 65 0.004722905 ubox
54 67 0.006428410 ubox
54 75 0.004705200 ubox
55 60 0.004792687 ubox
55 66 0.006426696 ubox
55 74 0.004707414 ubox
56 73 0.004709199 ubox
57 64 0.007846159 ubox
57 72 0.004714069 ubox
57 75 0.006578652 ubox
57 95 0.044600509 ubox
57 102 0.014262094 ubox
58 63 0.007878530 ubox
58 71 0.004712099 ubox
58 74 0.007246169 ubox
58 94 0.046224678 ubox
58 101 0.014255166 ubox
59 73 0.010037604 ubox
59 78 0.008538206 ubox
59 93 0.144815488 ubox
59 96 0.035570298 ubox
60 65 0.010446644 ubox
60 67 0.026092437 ubox
60 72 0.010476756 ubox
60 75 0.035641682 ubox
60 77 0.009452274 ubox
60 92 0.155146805 ubox
60 95 0.652196194 ubox
60 97 0.010890484 ubox
60 99 0.015071392 ubox
61 66 0.026108330 ubox
61 71 0.010131817 ubox
61 74 0.035762990 ubox
61 91 0.155111456 ubox
61 94 0.652716091 ubox
61 96 0.008002104 ubox
61 98 0.015104191 ubox
62 71 0.003235430 ubox
62 90 0.155043612 ubox
62 96 0.095450881 ubox
63 70 0.003371890 ubox
63 72 0.041476249 ubox
63 75 0.080126841 ubox
63 89 0.153645420 ubox
63 92 0.755748849 ubox
63 95 0.514413711 ubox
64 71 0.041276186 ubox
64 74 0.080259998 ubox
64 91 0.756475311 ubox
64 94 0.514743543 ubox
65 71 0.004623488 ubox
65 90 0.756532276 ubox
65 96 0.003436966 ubox
66 70 0.004039507 ubox
66 72 0.080786001 ubox
66 75 0.018807391 ubox
66 86 0.034269829 ubox
66 89 0.751916979 ubox
66 92 0.524144563 ubox
66 95 0.007541565 ubox
67 71 0.080272134 ubox
67 74 0.018808187 ubox
67 85 0.032916579 ubox
67 91 0.523727792 ubox
67 94 0.007510826 ubox
68 90 0.521905765 ubox
68 91 0.037048839 ubox
69 90 0.049878641 ubox
70 78 0.003332260 ubox
70 82 0.005595246 ubox
70 90 0.003646034 ubox
71 77 0.003720383 ubox
71 81 0.007524126 ubox
71 83 0.027001680 ubox
71 86 0.933434477 ubox
71 102 0.059416298 ubox
72 82 0.027005616 ubox
72 85 0.934778683 ubox
72 101 0.059529629 ubox
73 80 0.028156141 ubox
73 84 0.934748681 ubox
73 100 0.059580028 ubox
73 103 0.006453508 ubox
74 79 0.029684589 ubox
74 83 0.934968391 ubox
74 99 0.059608268 ubox
74 102 0.007551542 ubox
75 82 0.933384126 ubox
75 98 0.059535204 ubox
75 101 0.007542484 ubox
81 96 0.315555784 ubox
82 95 0.353344238 ubox
83 94 0.353424482 ubox
84 93 0.353362329 ubox
85 92 0.353453046 ubox
86 91 0.353418611 ubox
102 111 0.007242797 ubox
103 110 0.023049685 ubox
104 111 0.080292180 ubox
105 110 0.076587491 ubox
105 111 0.012826788 ubox
106 110 0.016000602 ubox
5 102 0.9500000 lbox
6 101 0.9500000 lbox
7 100 0.9500000 lbox
8 99 0.9500000 lbox
9 98 0.9500000 lbox
10 97 0.9500000 lbox
11 96 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
18 55 0.9500000 lbox
19 54 0.9500000 lbox
20 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
25 48 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
60 95 0.9500000 lbox
61 94 0.9500000 lbox
63 92 0.9500000 lbox
64 91 0.9500000 lbox
65 90 0.9500000 lbox
66 89 0.9500000 lbox
71 86 0.9500000 lbox
72 85 0.9500000 lbox
73 84 0.9500000 lbox
74 83 0.9500000 lbox
75 82 0.9500000 lbox
showpage
end
%%EOF
