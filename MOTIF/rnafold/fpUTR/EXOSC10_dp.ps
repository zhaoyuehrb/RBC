%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EXOSC10)
} def

/sequence { (\
CUGGCGCAUGCGUGGUGCGCACGCGUCCCGUCUCCUCGGCCGACAAGCUCUCGCGAGACGAGCCGUGCAGGCUGAAAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 23 0.013983468 ubox
2 30 0.126222164 ubox
2 74 0.003815323 ubox
3 22 0.021095167 ubox
3 27 0.654453931 ubox
3 28 0.271680130 ubox
3 29 0.157855700 ubox
3 32 0.666023993 ubox
3 33 0.039775577 ubox
3 34 0.017149630 ubox
3 35 0.038610315 ubox
4 20 0.033813401 ubox
4 24 0.009833655 ubox
4 26 0.666642015 ubox
4 27 0.272791740 ubox
4 28 0.150137806 ubox
4 31 0.671659302 ubox
4 32 0.043609163 ubox
4 33 0.009615760 ubox
4 34 0.037104423 ubox
5 19 0.033948546 ubox
5 23 0.009892774 ubox
5 25 0.727946901 ubox
5 30 0.674254661 ubox
6 18 0.033984064 ubox
6 22 0.009754047 ubox
6 24 0.728343013 ubox
6 26 0.037546788 ubox
6 29 0.669989291 ubox
6 31 0.023334240 ubox
7 17 0.033984422 ubox
7 23 0.727586988 ubox
7 25 0.037651454 ubox
7 30 0.023704919 ubox
8 16 0.033936741 ubox
8 26 0.657217856 ubox
9 15 0.033732369 ubox
9 19 0.008513275 ubox
9 21 0.725079859 ubox
9 25 0.677024888 ubox
10 18 0.008868283 ubox
10 20 0.728360812 ubox
10 24 0.683927422 ubox
10 26 0.018468341 ubox
10 31 0.003675563 ubox
11 17 0.008875908 ubox
11 19 0.728366254 ubox
11 23 0.683961562 ubox
11 25 0.018885127 ubox
11 30 0.003804020 ubox
12 16 0.005546878 ubox
12 18 0.727273777 ubox
12 20 0.003281705 ubox
12 22 0.683960451 ubox
12 24 0.018887040 ubox
12 29 0.003824138 ubox
13 17 0.680367404 ubox
13 19 0.003442153 ubox
13 21 0.683828673 ubox
13 23 0.018870494 ubox
14 18 0.004304515 ubox
14 20 0.683649442 ubox
14 22 0.018818310 ubox
14 28 0.003862409 ubox
15 27 0.003862532 ubox
16 25 0.003604437 ubox
17 24 0.003745458 ubox
18 23 0.003740339 ubox
21 31 0.013397625 ubox
22 30 0.014336886 ubox
23 29 0.014071419 ubox
23 31 0.016006892 ubox
24 30 0.016961078 ubox
25 29 0.015915867 ubox
25 44 0.003559636 ubox
26 43 0.003571303 ubox
27 42 0.003558907 ubox
28 39 0.007434872 ubox
29 38 0.011745025 ubox
29 60 0.183303085 ubox
29 74 0.012508533 ubox
30 37 0.012410970 ubox
30 59 0.185200730 ubox
30 72 0.037420856 ubox
31 58 0.185187182 ubox
31 71 0.037439372 ubox
31 75 0.007323748 ubox
32 57 0.185101718 ubox
32 70 0.037460506 ubox
32 74 0.007491093 ubox
33 56 0.184866914 ubox
33 69 0.036329647 ubox
33 75 0.016492044 ubox
34 55 0.184395056 ubox
34 71 0.006762703 ubox
34 74 0.015853808 ubox
35 57 0.008038214 ubox
35 70 0.006794285 ubox
36 43 0.009580783 ubox
36 56 0.011394181 ubox
36 69 0.006664115 ubox
36 75 0.933962825 ubox
37 42 0.010308884 ubox
37 53 0.091600004 ubox
37 55 0.013047194 ubox
37 65 0.037987567 ubox
37 74 0.980926863 ubox
38 49 0.138017143 ubox
38 50 0.056193032 ubox
38 51 0.010451665 ubox
38 52 0.086020689 ubox
38 54 0.014913963 ubox
38 64 0.038086122 ubox
38 73 0.981046438 ubox
39 48 0.164838522 ubox
39 49 0.007672754 ubox
39 50 0.013295857 ubox
39 51 0.050149997 ubox
39 54 0.048804671 ubox
39 63 0.038085985 ubox
39 72 0.981899327 ubox
40 47 0.164953526 ubox
40 53 0.038665364 ubox
40 62 0.038078657 ubox
40 71 0.981915080 ubox
41 53 0.034048553 ubox
41 60 0.037827688 ubox
41 70 0.981816585 ubox
42 50 0.047693105 ubox
42 52 0.045597201 ubox
42 59 0.037552390 ubox
42 64 0.004144928 ubox
42 66 0.006946815 ubox
43 49 0.045582562 ubox
43 51 0.043736955 ubox
43 66 0.111215999 ubox
44 65 0.116523255 ubox
44 67 0.946528827 ubox
45 66 0.918531497 ubox
46 73 0.004518204 ubox
47 54 0.040884616 ubox
47 63 0.973634465 ubox
47 66 0.029559768 ubox
47 72 0.004878197 ubox
48 53 0.040830949 ubox
48 57 0.009495969 ubox
48 62 0.974823586 ubox
48 65 0.031699145 ubox
48 71 0.004863216 ubox
49 56 0.009600793 ubox
49 58 0.005762042 ubox
49 61 0.974521518 ubox
49 70 0.003424992 ubox
50 55 0.009644599 ubox
50 57 0.007153215 ubox
50 60 0.974149791 ubox
50 62 0.116918143 ubox
50 70 0.003443764 ubox
51 56 0.008252003 ubox
51 58 0.960966404 ubox
51 61 0.118487624 ubox
51 69 0.003497914 ubox
52 57 0.964218462 ubox
52 60 0.119368726 ubox
52 67 0.005596374 ubox
53 59 0.119597949 ubox
53 66 0.005712166 ubox
54 60 0.003998241 ubox
54 65 0.005744040 ubox
55 59 0.006587501 ubox
55 64 0.005736919 ubox
61 73 0.180450024 ubox
62 72 0.185255273 ubox
63 71 0.185278648 ubox
64 70 0.185247692 ubox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
36 75 0.9500000 lbox
37 74 0.9500000 lbox
38 73 0.9500000 lbox
39 72 0.9500000 lbox
40 71 0.9500000 lbox
41 70 0.9500000 lbox
44 67 0.9500000 lbox
45 66 0.9500000 lbox
47 63 0.9500000 lbox
48 62 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 58 0.9500000 lbox
52 57 0.9500000 lbox
showpage
end
%%EOF
