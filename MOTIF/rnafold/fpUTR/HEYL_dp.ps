%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HEYL)
} def

/sequence { (\
CCGACUGGGAGCCUUAGCCGCGGGGCUGAGACCAGGCAGCCUGCGUUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.335940250 ubox
1 9 0.409579207 ubox
1 23 0.060573472 ubox
1 36 0.009635479 ubox
2 7 0.337539336 ubox
2 8 0.412678728 ubox
2 20 0.019466658 ubox
2 22 0.060926604 ubox
2 35 0.009287761 ubox
2 43 0.012210525 ubox
2 45 0.110446358 ubox
2 49 0.406588780 ubox
3 19 0.032609973 ubox
3 21 0.060531260 ubox
3 42 0.012090685 ubox
3 44 0.111113735 ubox
3 47 0.175061309 ubox
3 48 0.419229105 ubox
4 46 0.292617549 ubox
4 47 0.344854380 ubox
5 11 0.024694369 ubox
5 17 0.130909633 ubox
5 23 0.017810404 ubox
5 35 0.441686794 ubox
5 36 0.027151660 ubox
5 39 0.032070358 ubox
5 45 0.369701545 ubox
6 10 0.022413313 ubox
6 16 0.132273337 ubox
6 20 0.026324979 ubox
6 22 0.017900452 ubox
6 34 0.466161687 ubox
6 35 0.025974639 ubox
6 38 0.032329676 ubox
6 43 0.276083582 ubox
6 45 0.075059635 ubox
6 49 0.025264688 ubox
7 13 0.032224160 ubox
7 14 0.016303187 ubox
7 15 0.131544228 ubox
7 19 0.036438784 ubox
7 21 0.017882144 ubox
7 33 0.465194105 ubox
7 37 0.032288052 ubox
7 41 0.339989423 ubox
7 42 0.306290615 ubox
7 44 0.060994392 ubox
7 48 0.034002072 ubox
7 51 0.397364631 ubox
8 12 0.032340040 ubox
8 13 0.020459902 ubox
8 14 0.130505810 ubox
8 15 0.003574862 ubox
8 18 0.036438522 ubox
8 19 0.026167730 ubox
8 32 0.459118097 ubox
8 33 0.201848900 ubox
8 40 0.340644901 ubox
8 41 0.311879209 ubox
8 42 0.056136581 ubox
8 47 0.032403536 ubox
8 48 0.022682728 ubox
8 50 0.401664383 ubox
8 51 0.026387511 ubox
9 13 0.127805504 ubox
9 14 0.003764876 ubox
9 15 0.005284028 ubox
9 18 0.026524273 ubox
9 32 0.214179825 ubox
9 40 0.311604026 ubox
9 41 0.057273141 ubox
9 46 0.028982527 ubox
9 47 0.020820102 ubox
9 48 0.482516801 ubox
9 50 0.026795967 ubox
10 14 0.004888098 ubox
10 27 0.045515812 ubox
10 42 0.003260738 ubox
10 46 0.017843733 ubox
10 47 0.482591962 ubox
11 18 0.085625997 ubox
11 21 0.003437024 ubox
11 26 0.048187543 ubox
11 37 0.465312049 ubox
11 40 0.037923035 ubox
11 44 0.031081067 ubox
11 46 0.477899240 ubox
11 50 0.185518323 ubox
12 17 0.085605998 ubox
12 20 0.003445246 ubox
12 23 0.004341415 ubox
12 25 0.048194967 ubox
12 36 0.465547366 ubox
12 39 0.037975587 ubox
12 43 0.027310290 ubox
12 45 0.475851701 ubox
12 49 0.185712239 ubox
13 22 0.004453200 ubox
13 24 0.048189244 ubox
13 30 0.844082590 ubox
13 35 0.439997137 ubox
14 23 0.047997217 ubox
14 29 0.896202226 ubox
14 30 0.016077283 ubox
14 31 0.014462040 ubox
14 34 0.346453085 ubox
15 22 0.041802204 ubox
15 28 0.960500292 ubox
15 29 0.031911084 ubox
15 30 0.018079498 ubox
15 34 0.005290143 ubox
16 27 0.962545275 ubox
16 47 0.108592834 ubox
17 26 0.963178178 ubox
17 37 0.004884530 ubox
17 40 0.005684761 ubox
17 44 0.016627757 ubox
17 46 0.115068498 ubox
17 50 0.117984943 ubox
18 24 0.007486936 ubox
18 25 0.963154229 ubox
18 36 0.004896519 ubox
18 39 0.005967602 ubox
18 43 0.016573309 ubox
18 45 0.081930973 ubox
18 49 0.118439653 ubox
19 23 0.010496308 ubox
19 24 0.962805166 ubox
19 35 0.004895230 ubox
19 45 0.225337259 ubox
19 49 0.005367489 ubox
20 37 0.005990396 ubox
20 44 0.248939507 ubox
20 46 0.048368970 ubox
20 48 0.005010899 ubox
20 50 0.022519069 ubox
21 36 0.005992542 ubox
21 43 0.248713970 ubox
21 45 0.051786199 ubox
21 49 0.022692883 ubox
22 33 0.005305753 ubox
22 42 0.214988322 ubox
22 44 0.051147436 ubox
22 48 0.022652028 ubox
23 32 0.005310261 ubox
23 33 0.003961870 ubox
23 41 0.176783238 ubox
23 42 0.134858555 ubox
23 47 0.011866185 ubox
24 32 0.003967377 ubox
24 33 0.004687925 ubox
24 40 0.127310199 ubox
24 41 0.186569827 ubox
24 42 0.004149764 ubox
24 51 0.060524169 ubox
25 32 0.004675123 ubox
25 37 0.032482301 ubox
25 40 0.223295007 ubox
25 50 0.061256866 ubox
26 35 0.016407579 ubox
26 36 0.029499949 ubox
26 39 0.254755288 ubox
26 49 0.060323831 ubox
27 34 0.021779745 ubox
27 35 0.025726295 ubox
27 38 0.254762029 ubox
27 49 0.013681371 ubox
28 33 0.024533066 ubox
28 37 0.254656329 ubox
28 47 0.005478154 ubox
28 48 0.060612249 ubox
29 46 0.005018887 ubox
29 47 0.055692132 ubox
30 46 0.041568525 ubox
30 47 0.095135597 ubox
30 48 0.038200567 ubox
31 46 0.351596449 ubox
31 47 0.032876002 ubox
32 45 0.374221809 ubox
33 43 0.598194703 ubox
34 42 0.602298361 ubox
34 47 0.006779045 ubox
35 41 0.602842554 ubox
35 42 0.006837652 ubox
35 46 0.007596623 ubox
35 47 0.005862316 ubox
35 48 0.004757058 ubox
35 51 0.354351720 ubox
36 40 0.593119412 ubox
36 41 0.009604123 ubox
36 44 0.357084250 ubox
36 46 0.023790698 ubox
36 50 0.440763698 ubox
37 43 0.357343634 ubox
37 45 0.024690458 ubox
37 49 0.441007975 ubox
38 42 0.289609057 ubox
38 47 0.424567777 ubox
39 46 0.433991396 ubox
39 50 0.091304922 ubox
40 45 0.433525922 ubox
40 49 0.091491287 ubox
42 49 0.008644620 ubox
43 48 0.013050697 ubox
43 50 0.159410310 ubox
44 49 0.160049746 ubox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
9 48 0.9500000 lbox
10 47 0.9500000 lbox
11 46 0.9500000 lbox
12 45 0.9500000 lbox
13 30 0.9500000 lbox
14 29 0.9500000 lbox
15 28 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
showpage
end
%%EOF
