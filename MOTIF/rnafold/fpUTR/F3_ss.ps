%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGUCGGGAGGAGCGGCGGGGGCGGGCGCCGGGGGCGGGCAGAGGCGCGGGAGAGCGCGCCGCCGGCCCUUUAUAGCGCGCGGGGCACCGGCUCCCCAAGACUGCGAGCUCCCCGCACCCCCUCGCACUCCCUCUGGCCGGCCCAGGGCGCCUUCAGCCCAACCUCCCCAGCCCCACGGGCGCCACGGAACCCGCUCGAUCUCGCCGCCAACUGGUAGAC\
) } def
/len { sequence length } bind def

/coor [
[182.41235352 689.43841553]
[180.08680725 674.61981201]
[177.47576904 672.26153564]
[175.87348938 668.52471924]
[175.91395569 663.89550781]
[177.99096680 659.12414551]
[176.29643250 644.22015381]
[174.60189819 629.31616211]
[162.82382202 620.27117920]
[160.89300537 605.18054199]
[170.46012878 592.88793945]
[168.76559448 577.98394775]
[167.07106018 563.07995605]
[157.94549561 551.30828857]
[164.07427979 536.72235107]
[162.37974548 521.81835938]
[160.57980347 506.92675781]
[158.67453003 492.04824829]
[156.76927185 477.16973877]
[154.86399841 462.29122925]
[152.95874023 447.41275024]
[139.22367859 437.70144653]
[136.71650696 420.72625732]
[147.47293091 406.92578125]
[145.35731506 392.07571411]
[143.13667297 377.24099731]
[140.81112671 362.42239380]
[138.48558044 347.60375977]
[136.16001892 332.78512573]
[133.83447266 317.96649170]
[131.40412903 303.16467285]
[128.86912537 288.38043213]
[126.22956848 273.61450195]
[123.48559570 258.86761475]
[120.74163055 244.12074280]
[117.99766541 229.37385559]
[115.25369263 214.62696838]
[112.40545654 199.89987183]
[109.45307922 185.19328308]
[106.50070190 170.48670959]
[96.40971375 159.53129578]
[101.27944183 144.47817993]
[98.32706451 129.77159119]
[75.47795868 121.44957733]
[64.76545715 97.26965332]
[49.78948212 98.11827850]
[34.81350708 98.96690369]
[19.83753395 99.81552887]
[4.86155796 100.66415405]
[-10.11441708 101.51277924]
[-20.45130348 113.46788025]
[-36.21994400 114.52877808]
[-48.06508636 104.06607819]
[-48.95921326 88.28710175]
[-38.37186050 76.55323792]
[-22.58431244 75.82598877]
[-10.96304321 86.53680420]
[4.01293182 85.68817902]
[18.98890686 84.83955383]
[33.96488190 83.99092865]
[48.94085693 83.14230347]
[63.91683197 82.29367828]
[72.92144012 70.29713440]
[69.55406952 55.67999268]
[66.18669891 41.06285095]
[62.81932449 26.44570923]
[59.45195389 11.82856846]
[56.08458328 -2.78857303]
[52.71721268 -17.40571404]
[37.76274490 -19.98245239]
[24.96858978 -28.06654930]
[16.26774025 -40.39979172]
[12.96062469 -55.08483887]
[15.52081394 -69.87707520]
[23.52749252 -82.52770996]
[35.73425293 -91.12563324]
[32.36688232 -105.74277496]
[21.72904587 -117.45375061]
[26.41169739 -131.59313965]
[23.04432678 -146.21028137]
[19.67695427 -160.82740784]
[9.03912067 -172.53839111]
[13.72177124 -186.67778015]
[10.35440063 -201.29492188]
[6.98702955 -215.91206360]
[3.61965823 -230.52920532]
[-10.50570488 -236.67576599]
[-18.21319008 -249.80770874]
[-16.72777748 -264.78295898]
[-6.82767534 -275.87915039]
[-10.19504642 -290.49630737]
[-13.97471714 -305.01229858]
[-18.16366005 -319.41552734]
[-22.35260391 -333.81872559]
[-26.54154778 -348.22195435]
[-37.44568253 -355.10137939]
[-40.64107895 -367.17797852]
[-34.94287491 -377.84265137]
[-38.92758179 -392.30371094]
[-50.97881699 -403.42575073]
[-47.10900497 -419.36175537]
[-31.29907227 -423.71813965]
[-19.81292534 -412.01342773]
[-24.46652603 -396.28842163]
[-20.48182106 -381.82736206]
[-7.33951378 -370.19262695]
[-12.13832664 -352.41088867]
[-7.94938326 -338.00769043]
[-3.76044035 -323.60446167]
[0.42850301 -309.20123291]
[2.80873656 -307.73498535]
[4.75402451 -305.24133301]
[5.87154245 -301.88037109]
[5.83328247 -297.95083618]
[4.42209482 -293.86367798]
[7.78946590 -279.24652100]
[21.54655838 -273.60025024]
[29.43426132 -260.78433228]
[28.24916267 -245.60377502]
[18.23679924 -233.89657593]
[21.60416985 -219.27943420]
[24.97154236 -204.66229248]
[28.33891296 -190.04515076]
[38.73588943 -179.37968445]
[34.29409790 -164.19479370]
[37.66146851 -149.57765198]
[41.02883911 -134.96051025]
[51.42581558 -124.29503632]
[46.98402023 -109.11014557]
[50.35139465 -94.49300385]
[65.08959198 -92.10242462]
[77.82419586 -84.22999573]
[86.59828186 -72.04885101]
[90.04954529 -57.39701080]
[87.62175751 -42.50004578]
[79.65413666 -29.63302994]
[67.33435059 -20.77308464]
[70.70172119 -6.15594435]
[74.06909180 8.46119690]
[77.43647003 23.07833862]
[80.80384064 37.69548035]
[84.17121124 52.31261826]
[87.53858185 66.92976379]
[98.99556732 66.05509186]
[109.66519165 68.88731384]
[118.43060303 74.82683563]
[124.47425079 82.96598816]
[138.54528809 77.76924896]
[152.61631775 72.57251740]
[166.68734741 67.37577820]
[171.79568481 52.59609985]
[185.23558044 44.60216522]
[200.66114807 47.16846848]
[210.78889465 59.08328247]
[210.83680725 74.72079468]
[200.78227234 86.69744873]
[185.37272644 89.35823059]
[171.88407898 81.44681549]
[157.81304932 86.64354706]
[143.74201965 91.84028625]
[129.67098999 97.03701782]
[129.19444275 106.06885529]
[126.03202820 114.54236603]
[120.47467041 121.67797852]
[113.03364563 126.81922150]
[115.98602295 141.52580261]
[126.28818512 153.53312683]
[121.20728302 167.53433228]
[124.15966034 182.24092102]
[127.11203003 196.94749451]
[131.86573792 204.73783875]
[130.00057983 211.88299561]
[132.74455261 226.62988281]
[135.48851013 241.37677002]
[138.23248291 256.12365723]
[140.97645569 270.87054443]
[145.61944580 278.72738647]
[143.65336609 285.84542847]
[146.18836975 300.62966919]
[150.71971130 308.55142212]
[148.65310669 315.64093018]
[150.97865295 330.45956421]
[153.30419922 345.27819824]
[155.62976074 360.09683228]
[157.95530701 374.91546631]
[162.37409973 382.90054321]
[160.20736694 389.96011353]
[162.32298279 404.81015015]
[173.95054626 411.59869385]
[179.46713257 423.66729736]
[177.06369019 436.51959229]
[167.83723450 445.50747681]
[169.74250793 460.38598633]
[171.64778137 475.26449585]
[173.55303955 490.14297485]
[175.45831299 505.02148438]
[179.64935303 513.12841797]
[177.28372192 520.12384033]
[178.97825623 535.02783203]
[188.22502136 547.86560059]
[181.97503662 561.38543701]
[183.66957092 576.28942871]
[185.36410522 591.19342041]
[197.44660950 601.02453613]
[198.95278931 616.16339111]
[189.50587463 627.62164307]
[191.20040894 642.52563477]
[192.89494324 657.42962646]
[194.90542603 672.29425049]
[197.23098755 687.11291504]
[211.85781860 691.47387695]
[223.13819885 701.75567627]
[228.83238220 715.91687012]
[227.80979919 731.14569092]
[220.27348328 744.41845703]
[207.71975708 753.09991455]
[192.64118958 755.46624756]
[178.03164673 751.04766846]
[166.79183960 740.72149658]
[161.15345764 726.53802490]
[162.23600769 711.31335449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[6 208]
[7 207]
[8 206]
[11 203]
[12 202]
[13 201]
[15 199]
[16 198]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[24 188]
[25 187]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[31 179]
[32 178]
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 170]
[39 169]
[40 168]
[42 166]
[43 165]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[63 143]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[76 130]
[77 129]
[79 127]
[80 126]
[81 125]
[83 123]
[84 122]
[85 121]
[86 120]
[90 116]
[91 115]
[92 110]
[93 109]
[94 108]
[95 107]
[98 105]
[99 104]
[147 161]
[148 160]
[149 159]
[150 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
