%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SELP)
} def

/sequence { (\
GGCAGUGAGACUGUAAGCAGUCUGGGUUGGGCAGAAGGCAGAAAACCAGCAGAGUCACAGAGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.011356940 ubox
1 47 0.006815868 ubox
1 56 0.635140599 ubox
2 14 0.096283007 ubox
2 18 0.003604116 ubox
2 27 0.016888282 ubox
2 32 0.007584391 ubox
2 46 0.006336610 ubox
2 50 0.073365362 ubox
2 55 0.637284805 ubox
3 13 0.098281916 ubox
3 17 0.003437574 ubox
3 24 0.019354797 ubox
3 26 0.017598524 ubox
3 29 0.010958891 ubox
3 31 0.007566033 ubox
3 49 0.073377646 ubox
3 54 0.637466039 ubox
4 12 0.098324071 ubox
4 23 0.015315429 ubox
4 28 0.010997205 ubox
5 11 0.098282665 ubox
5 22 0.009533542 ubox
5 27 0.009351345 ubox
5 46 0.003689528 ubox
5 50 0.052716864 ubox
5 58 0.730823573 ubox
6 10 0.088543260 ubox
6 24 0.027456700 ubox
6 26 0.005696006 ubox
6 45 0.003673677 ubox
6 48 0.005791851 ubox
6 49 0.050112591 ubox
6 51 0.564709905 ubox
6 57 0.731695603 ubox
6 59 0.019240877 ubox
7 23 0.014992400 ubox
7 47 0.004480571 ubox
7 50 0.557530411 ubox
7 56 0.731829798 ubox
7 58 0.021267712 ubox
8 23 0.716709516 ubox
8 55 0.659801456 ubox
9 22 0.768001605 ubox
9 56 0.019295416 ubox
10 21 0.770120773 ubox
10 55 0.019700632 ubox
11 20 0.770866823 ubox
11 41 0.007646112 ubox
11 49 0.017892368 ubox
11 52 0.626502092 ubox
11 54 0.020044786 ubox
11 60 0.038931665 ubox
11 62 0.004162683 ubox
11 63 0.003739416 ubox
12 19 0.770296443 ubox
12 40 0.007691283 ubox
12 48 0.018000865 ubox
12 51 0.626731144 ubox
12 53 0.018631395 ubox
12 59 0.039177373 ubox
12 61 0.004070358 ubox
12 62 0.003712214 ubox
13 18 0.765718727 ubox
13 39 0.007530487 ubox
13 46 0.011030874 ubox
13 47 0.017101430 ubox
13 50 0.626211399 ubox
13 58 0.039234887 ubox
14 38 0.007448887 ubox
14 45 0.014174407 ubox
14 49 0.575827570 ubox
14 57 0.038108029 ubox
15 23 0.004158868 ubox
16 23 0.035214771 ubox
16 28 0.005380647 ubox
17 22 0.035935148 ubox
17 27 0.006951988 ubox
17 32 0.005625066 ubox
17 39 0.399487029 ubox
17 50 0.013938999 ubox
17 55 0.042540673 ubox
18 24 0.041160040 ubox
18 26 0.007066064 ubox
18 29 0.004246611 ubox
18 31 0.005610613 ubox
18 38 0.399987385 ubox
18 49 0.013304857 ubox
18 54 0.043741560 ubox
19 23 0.033456497 ubox
19 28 0.004263951 ubox
20 27 0.003434871 ubox
20 32 0.030420286 ubox
20 39 0.016783657 ubox
20 46 0.009878032 ubox
20 50 0.045328703 ubox
20 55 0.007888405 ubox
20 58 0.016049009 ubox
21 30 0.004632417 ubox
21 31 0.030363015 ubox
21 35 0.403012618 ubox
21 38 0.016635936 ubox
21 42 0.392878100 ubox
21 45 0.006762753 ubox
21 49 0.009054776 ubox
21 53 0.073060392 ubox
21 57 0.014511285 ubox
21 61 0.028652660 ubox
21 64 0.004291967 ubox
22 29 0.005718709 ubox
22 30 0.030449372 ubox
22 34 0.404814035 ubox
22 37 0.016449756 ubox
22 41 0.395381182 ubox
22 49 0.229677053 ubox
22 52 0.082045648 ubox
22 54 0.032775792 ubox
22 60 0.030759171 ubox
22 63 0.004589726 ubox
23 29 0.029699670 ubox
23 33 0.404725166 ubox
23 36 0.016220094 ubox
23 40 0.395024133 ubox
23 48 0.284683855 ubox
23 51 0.086597057 ubox
23 53 0.057613565 ubox
23 57 0.010098410 ubox
23 59 0.030865969 ubox
23 62 0.004486599 ubox
24 28 0.013829488 ubox
24 32 0.404620994 ubox
24 39 0.392739372 ubox
24 47 0.318384404 ubox
24 50 0.087902087 ubox
24 56 0.024484528 ubox
24 58 0.031214055 ubox
25 46 0.312333730 ubox
25 47 0.601755483 ubox
25 55 0.024324299 ubox
25 56 0.027092666 ubox
26 32 0.018888671 ubox
26 39 0.038440342 ubox
26 46 0.605660636 ubox
26 50 0.454826711 ubox
26 55 0.009110047 ubox
27 31 0.018444362 ubox
27 34 0.045424336 ubox
27 35 0.067860726 ubox
27 36 0.291371723 ubox
27 37 0.086445001 ubox
27 38 0.045118730 ubox
27 41 0.012242742 ubox
27 42 0.033155547 ubox
27 43 0.138359140 ubox
27 44 0.124395612 ubox
27 45 0.606183793 ubox
27 49 0.457673624 ubox
27 53 0.007552100 ubox
27 54 0.006566835 ubox
27 60 0.012464436 ubox
28 33 0.039079901 ubox
28 34 0.072964195 ubox
28 35 0.304773147 ubox
28 36 0.090227035 ubox
28 37 0.048589838 ubox
28 40 0.023042360 ubox
28 41 0.036769248 ubox
28 42 0.152048038 ubox
28 43 0.193101296 ubox
28 44 0.596010148 ubox
28 48 0.459851861 ubox
28 52 0.007068211 ubox
28 53 0.006794618 ubox
28 59 0.017194678 ubox
29 39 0.024631758 ubox
29 47 0.460619218 ubox
29 58 0.018480488 ubox
30 46 0.460411337 ubox
30 47 0.008939871 ubox
30 56 0.021913832 ubox
31 39 0.704165896 ubox
31 46 0.010785854 ubox
31 50 0.011790977 ubox
31 55 0.022055500 ubox
32 38 0.703941020 ubox
32 49 0.011794512 ubox
32 54 0.022052545 ubox
34 56 0.005660809 ubox
35 55 0.005638806 ubox
37 47 0.066178147 ubox
37 56 0.005791199 ubox
38 46 0.066094878 ubox
38 50 0.022186454 ubox
38 55 0.005828226 ubox
39 49 0.022209625 ubox
39 54 0.005830944 ubox
41 56 0.005190088 ubox
42 55 0.004912300 ubox
45 55 0.004903370 ubox
46 54 0.005296269 ubox
46 63 0.016404586 ubox
47 62 0.016464887 ubox
49 55 0.037133389 ubox
50 54 0.038904534 ubox
55 61 0.023493649 ubox
55 63 0.029713675 ubox
55 64 0.072435424 ubox
56 60 0.025045280 ubox
56 62 0.038438607 ubox
56 63 0.077753366 ubox
1 56 0.9500000 lbox
2 55 0.9500000 lbox
3 54 0.9500000 lbox
6 51 0.9500000 lbox
7 50 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
showpage
end
%%EOF
