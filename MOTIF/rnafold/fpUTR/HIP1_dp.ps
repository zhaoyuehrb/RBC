%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIP1)
} def

/sequence { (\
CGUGGGGAUCCCGGGGCAGCCGAGGGCCCCUGACUCGGCUCCUCGCGGCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.016398149 ubox
1 32 0.009634222 ubox
1 47 0.909866352 ubox
1 50 0.133676914 ubox
2 9 0.038307478 ubox
2 12 0.020276166 ubox
2 31 0.009136427 ubox
2 34 0.008242529 ubox
2 46 0.922591949 ubox
2 49 0.135751621 ubox
2 52 0.049208121 ubox
3 8 0.040285908 ubox
3 13 0.025161050 ubox
3 33 0.007703392 ubox
3 45 0.921928792 ubox
3 47 0.012961099 ubox
3 48 0.102905011 ubox
3 50 0.033791020 ubox
3 51 0.048047436 ubox
4 10 0.007407926 ubox
4 11 0.054819894 ubox
4 12 0.150008844 ubox
4 30 0.017878217 ubox
4 31 0.005631933 ubox
4 44 0.918024427 ubox
4 46 0.017431958 ubox
4 49 0.045962165 ubox
5 9 0.005778274 ubox
5 10 0.055123452 ubox
5 11 0.151657270 ubox
5 12 0.036255896 ubox
5 29 0.017911077 ubox
5 30 0.005916076 ubox
5 42 0.007868022 ubox
5 43 0.917396919 ubox
6 10 0.149231350 ubox
6 11 0.036416458 ubox
6 12 0.013158459 ubox
6 28 0.017913078 ubox
6 29 0.005916633 ubox
6 41 0.007743168 ubox
6 42 0.917974724 ubox
7 11 0.013050390 ubox
7 27 0.017910146 ubox
7 28 0.005913418 ubox
7 40 0.006713057 ubox
7 41 0.917953491 ubox
8 40 0.902866691 ubox
9 15 0.005288453 ubox
9 16 0.009921940 ubox
9 25 0.003632177 ubox
9 26 0.019178478 ubox
9 33 0.050493355 ubox
9 38 0.071470588 ubox
9 48 0.054576395 ubox
9 51 0.107581211 ubox
10 14 0.006947480 ubox
10 15 0.013274686 ubox
10 16 0.030599470 ubox
10 24 0.005911095 ubox
10 25 0.045172472 ubox
10 26 0.004572763 ubox
10 32 0.050586117 ubox
10 37 0.071717380 ubox
10 38 0.855781846 ubox
10 47 0.079383551 ubox
10 48 0.318256724 ubox
10 50 0.116721766 ubox
11 15 0.030739688 ubox
11 24 0.045342567 ubox
11 25 0.006234434 ubox
11 37 0.854170350 ubox
11 38 0.297216721 ubox
11 47 0.323217846 ubox
11 48 0.122078708 ubox
12 22 0.044434977 ubox
12 24 0.006217903 ubox
12 32 0.786467070 ubox
12 37 0.303144042 ubox
12 45 0.341864563 ubox
12 47 0.121764747 ubox
13 21 0.044524446 ubox
13 30 0.507180569 ubox
13 31 0.704762819 ubox
13 35 0.019961822 ubox
13 36 0.273642191 ubox
13 43 0.006188588 ubox
13 44 0.374736614 ubox
13 46 0.118765996 ubox
14 20 0.044451084 ubox
14 21 0.015639475 ubox
14 29 0.515664879 ubox
14 30 0.704736304 ubox
14 31 0.034750602 ubox
14 34 0.020659100 ubox
14 35 0.258395518 ubox
14 36 0.019390165 ubox
14 42 0.008004386 ubox
14 43 0.377275082 ubox
14 44 0.107524563 ubox
15 20 0.015785588 ubox
15 28 0.519318817 ubox
15 29 0.702222181 ubox
15 30 0.039930232 ubox
15 31 0.020259255 ubox
15 34 0.255437357 ubox
15 35 0.022910966 ubox
15 41 0.007901193 ubox
15 42 0.380395969 ubox
15 43 0.098976118 ubox
15 44 0.038417654 ubox
16 27 0.522646691 ubox
16 28 0.696024519 ubox
16 29 0.040975176 ubox
16 30 0.041061258 ubox
16 34 0.025778822 ubox
16 40 0.004004826 ubox
16 41 0.380380359 ubox
16 42 0.103632820 ubox
16 43 0.020780159 ubox
16 49 0.026011550 ubox
17 26 0.525817102 ubox
17 32 0.235482856 ubox
17 48 0.025941903 ubox
18 31 0.240078860 ubox
18 40 0.397500432 ubox
19 27 0.730414893 ubox
19 30 0.127431204 ubox
19 39 0.406465583 ubox
19 46 0.025197907 ubox
19 49 0.009284739 ubox
20 26 0.741143305 ubox
20 38 0.406481768 ubox
20 45 0.017891984 ubox
20 48 0.009291265 ubox
21 25 0.735894883 ubox
21 32 0.003339082 ubox
21 37 0.406475958 ubox
21 45 0.019359821 ubox
21 47 0.008648802 ubox
22 36 0.406482685 ubox
22 44 0.027394084 ubox
22 46 0.005155611 ubox
23 31 0.018625572 ubox
23 35 0.405883936 ubox
23 43 0.027794955 ubox
24 30 0.023097946 ubox
24 31 0.011699861 ubox
24 34 0.403600028 ubox
24 35 0.018461595 ubox
24 36 0.003383457 ubox
24 41 0.003270043 ubox
24 42 0.027759470 ubox
25 29 0.023909687 ubox
25 30 0.027958349 ubox
25 31 0.046163206 ubox
25 34 0.042401641 ubox
25 35 0.003794000 ubox
25 40 0.007224436 ubox
25 41 0.027652957 ubox
26 30 0.048728550 ubox
26 34 0.004455100 ubox
26 39 0.050076798 ubox
26 40 0.003962022 ubox
27 38 0.050353063 ubox
28 37 0.050308607 ubox
28 38 0.003598859 ubox
29 37 0.003907451 ubox
29 38 0.004797667 ubox
30 37 0.004904197 ubox
31 37 0.005960813 ubox
32 36 0.033685129 ubox
32 49 0.003733275 ubox
34 48 0.004035067 ubox
35 48 0.004404183 ubox
35 51 0.012511684 ubox
36 45 0.003366879 ubox
36 47 0.006620544 ubox
36 50 0.013503972 ubox
37 44 0.003408566 ubox
37 46 0.006368067 ubox
37 49 0.011271738 ubox
38 46 0.008058234 ubox
38 49 0.012085999 ubox
39 45 0.008308464 ubox
39 48 0.014128586 ubox
40 47 0.013071212 ubox
41 48 0.004989458 ubox
42 47 0.005034613 ubox
43 51 0.005094715 ubox
44 50 0.007602204 ubox
45 49 0.008230738 ubox
1 47 0.9500000 lbox
2 46 0.9500000 lbox
3 45 0.9500000 lbox
4 44 0.9500000 lbox
5 43 0.9500000 lbox
6 42 0.9500000 lbox
7 41 0.9500000 lbox
8 40 0.9500000 lbox
10 38 0.9500000 lbox
11 37 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
showpage
end
%%EOF
