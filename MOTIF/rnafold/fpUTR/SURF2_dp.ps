%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SURF2)
} def

/sequence { (\
AGGUUCUGCGAGCGGCUUCCGCCGGGCUGCUCCGCGGGCGCGUCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.013162800 ubox
2 6 0.014620322 ubox
2 20 0.013122215 ubox
2 44 0.034432620 ubox
2 48 0.193680304 ubox
3 9 0.005016731 ubox
3 13 0.009706385 ubox
3 19 0.013129518 ubox
3 35 0.007065537 ubox
3 39 0.671335802 ubox
3 41 0.231481815 ubox
3 43 0.024028380 ubox
3 47 0.194619858 ubox
4 8 0.004699854 ubox
4 12 0.009767442 ubox
4 34 0.006576867 ubox
4 38 0.513041962 ubox
4 40 0.228456685 ubox
4 42 0.015311165 ubox
4 46 0.193339771 ubox
5 11 0.009811922 ubox
5 36 0.006046020 ubox
5 37 0.278413790 ubox
5 38 0.644626888 ubox
5 45 0.104121800 ubox
5 46 0.006220621 ubox
6 10 0.009741727 ubox
6 15 0.004307259 ubox
6 36 0.277019082 ubox
6 37 0.925465494 ubox
6 38 0.026512214 ubox
6 45 0.007341000 ubox
6 46 0.004745516 ubox
7 14 0.004349985 ubox
7 34 0.063254172 ubox
7 36 0.945573408 ubox
7 37 0.018786326 ubox
7 42 0.005839803 ubox
7 45 0.005162316 ubox
8 13 0.004303786 ubox
8 16 0.013113087 ubox
8 33 0.066548402 ubox
8 35 0.996249856 ubox
8 41 0.006454942 ubox
8 43 0.007580917 ubox
8 44 0.005538701 ubox
8 47 0.024938115 ubox
9 15 0.013118742 ubox
9 24 0.011852604 ubox
9 34 0.996098208 ubox
9 40 0.006452343 ubox
9 42 0.007980489 ubox
9 45 0.023795587 ubox
9 46 0.024373185 ubox
10 23 0.012011158 ubox
10 32 0.706978116 ubox
10 33 0.705390945 ubox
10 39 0.004949809 ubox
10 41 0.006666176 ubox
10 44 0.024934053 ubox
11 31 0.997080595 ubox
11 43 0.023313650 ubox
12 22 0.012297388 ubox
12 30 0.999073165 ubox
12 39 0.006356656 ubox
12 41 0.019847607 ubox
12 43 0.024162866 ubox
13 21 0.012303916 ubox
13 24 0.008825262 ubox
13 29 0.999046586 ubox
13 38 0.006300220 ubox
13 40 0.019914596 ubox
13 42 0.027110451 ubox
14 20 0.012746677 ubox
14 23 0.014308168 ubox
14 28 0.998265162 ubox
14 31 0.005714738 ubox
14 39 0.018427314 ubox
14 41 0.022514122 ubox
14 44 0.003461389 ubox
14 48 0.004799872 ubox
15 19 0.012541855 ubox
15 22 0.014387407 ubox
15 27 0.999001153 ubox
15 30 0.006104717 ubox
15 39 0.017433169 ubox
15 41 0.017563407 ubox
15 43 0.003317210 ubox
15 47 0.004833978 ubox
16 21 0.014382725 ubox
16 25 0.033336306 ubox
16 26 0.996461957 ubox
16 29 0.006305390 ubox
16 37 0.003604927 ubox
16 38 0.018702061 ubox
16 40 0.023170349 ubox
16 42 0.003313341 ubox
16 46 0.004675594 ubox
17 24 0.044437097 ubox
17 25 0.948991631 ubox
17 26 0.027915475 ubox
17 37 0.004754690 ubox
17 45 0.004411256 ubox
18 24 0.806502323 ubox
18 25 0.207566406 ubox
18 26 0.025042062 ubox
18 38 0.028529490 ubox
19 24 0.290528434 ubox
19 25 0.176404685 ubox
19 26 0.047659471 ubox
19 37 0.035361637 ubox
20 24 0.181358200 ubox
20 25 0.069885640 ubox
20 36 0.035848607 ubox
21 35 0.035912029 ubox
21 47 0.015271287 ubox
22 34 0.027218512 ubox
22 46 0.015304790 ubox
23 34 0.023475346 ubox
23 45 0.015311168 ubox
24 32 0.013440048 ubox
24 33 0.033166353 ubox
24 44 0.015066894 ubox
25 30 0.003565279 ubox
25 31 0.013192438 ubox
25 32 0.033138772 ubox
25 43 0.013602420 ubox
25 44 0.003837549 ubox
25 48 0.014100072 ubox
26 30 0.013699173 ubox
26 31 0.023208746 ubox
26 39 0.003199453 ubox
26 41 0.013339233 ubox
26 43 0.004683954 ubox
26 47 0.014278381 ubox
27 37 0.003347609 ubox
27 40 0.013055899 ubox
27 42 0.005400566 ubox
27 46 0.014282199 ubox
28 36 0.003734053 ubox
28 40 0.007837427 ubox
28 45 0.014247401 ubox
29 35 0.004084485 ubox
29 39 0.015431947 ubox
29 44 0.014144380 ubox
30 34 0.004057714 ubox
30 38 0.015435834 ubox
31 37 0.015218385 ubox
32 36 0.014691778 ubox
32 46 0.003210850 ubox
33 42 0.017424137 ubox
33 45 0.007763242 ubox
34 41 0.017893964 ubox
34 43 0.006550523 ubox
34 44 0.007768861 ubox
34 47 0.006532054 ubox
35 40 0.017869848 ubox
35 42 0.010385979 ubox
35 46 0.006481115 ubox
36 41 0.010610941 ubox
36 44 0.004389153 ubox
36 48 0.074992867 ubox
37 43 0.004215749 ubox
37 44 0.007419089 ubox
37 47 0.076176276 ubox
37 48 0.231223737 ubox
38 43 0.005593203 ubox
38 47 0.416999567 ubox
39 45 0.100300959 ubox
39 46 0.418160956 ubox
40 44 0.096769469 ubox
40 47 0.801323237 ubox
41 46 0.802690676 ubox
3 39 0.9500000 lbox
4 38 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
18 24 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
