%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DUSP7)
} def

/sequence { (\
GCGGCUGGGGCCCGCGCGGCCGGGGCGCCGUCCCAGGGCAGGGCUGCCCGGCCCCGGCCCCGGGCCGCCCGCGCUCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.009864289 ubox
1 68 0.430067692 ubox
1 72 0.209078518 ubox
1 74 0.322917245 ubox
2 14 0.009870549 ubox
2 67 0.431481552 ubox
2 71 0.209206000 ubox
2 73 0.322989131 ubox
3 12 0.008479597 ubox
3 13 0.008395471 ubox
3 59 0.012166136 ubox
3 66 0.431685726 ubox
3 69 0.055380652 ubox
3 70 0.201861579 ubox
3 72 0.239631198 ubox
3 75 0.034999870 ubox
3 76 0.010093892 ubox
3 77 0.008553227 ubox
3 78 0.065505144 ubox
3 79 0.487711780 ubox
4 11 0.009979224 ubox
4 12 0.006582259 ubox
4 58 0.012300918 ubox
4 65 0.431613403 ubox
4 68 0.077699555 ubox
4 69 0.187685120 ubox
4 72 0.224695040 ubox
4 74 0.038637125 ubox
4 76 0.007838939 ubox
4 77 0.046775949 ubox
4 78 0.488548755 ubox
5 10 0.011216153 ubox
5 57 0.012314993 ubox
5 63 0.233841758 ubox
5 64 0.363790729 ubox
5 67 0.094665650 ubox
5 71 0.311560530 ubox
5 73 0.038678070 ubox
6 56 0.012306037 ubox
6 62 0.329392098 ubox
6 63 0.276144592 ubox
6 67 0.028832219 ubox
6 71 0.036504763 ubox
7 55 0.012361164 ubox
7 61 0.405614209 ubox
7 66 0.012758580 ubox
7 69 0.328608769 ubox
7 70 0.051748270 ubox
7 75 0.005989307 ubox
7 76 0.007722034 ubox
7 77 0.687784223 ubox
7 78 0.257745864 ubox
7 79 0.332896407 ubox
8 54 0.012361847 ubox
8 60 0.406334446 ubox
8 61 0.148259074 ubox
8 65 0.008508475 ubox
8 66 0.016724711 ubox
8 68 0.332534879 ubox
8 69 0.050559329 ubox
8 70 0.007782490 ubox
8 74 0.006211573 ubox
8 75 0.006692925 ubox
8 76 0.692578631 ubox
8 77 0.258018541 ubox
8 78 0.336689540 ubox
8 79 0.006675008 ubox
9 53 0.012361726 ubox
9 59 0.406650456 ubox
9 60 0.147405462 ubox
9 65 0.012167597 ubox
9 66 0.388086828 ubox
9 68 0.035747085 ubox
9 69 0.007647765 ubox
9 74 0.005468265 ubox
9 75 0.692623446 ubox
9 76 0.257106711 ubox
9 77 0.336611471 ubox
9 78 0.006669602 ubox
10 52 0.012361257 ubox
10 58 0.406956846 ubox
10 59 0.146339313 ubox
10 65 0.390316536 ubox
10 68 0.007438592 ubox
10 72 0.006629631 ubox
10 74 0.738262681 ubox
10 75 0.041390268 ubox
10 76 0.335805745 ubox
10 77 0.006496839 ubox
11 51 0.010347258 ubox
11 57 0.363682925 ubox
11 64 0.390597171 ubox
11 67 0.007230956 ubox
11 71 0.006344952 ubox
11 73 0.738164499 ubox
12 50 0.007824818 ubox
12 51 0.006783399 ubox
12 56 0.301285396 ubox
12 57 0.233655572 ubox
12 63 0.390583112 ubox
12 64 0.007229677 ubox
13 50 0.009592789 ubox
13 56 0.296899569 ubox
13 62 0.390384715 ubox
13 63 0.008071962 ubox
13 71 0.736063538 ubox
13 73 0.335934218 ubox
14 49 0.011723841 ubox
14 55 0.347392368 ubox
14 58 0.007604180 ubox
14 61 0.388668348 ubox
14 70 0.736082810 ubox
14 72 0.339466982 ubox
14 74 0.013665297 ubox
15 56 0.090829649 ubox
15 57 0.006534197 ubox
15 62 0.014485038 ubox
15 71 0.338241737 ubox
15 73 0.013668943 ubox
16 47 0.012344598 ubox
16 55 0.205098760 ubox
16 58 0.012198999 ubox
16 61 0.028713603 ubox
16 68 0.799183811 ubox
16 70 0.139412701 ubox
16 72 0.011108727 ubox
17 46 0.012356288 ubox
17 57 0.012167544 ubox
17 67 0.811843974 ubox
17 71 0.010525372 ubox
18 45 0.012347840 ubox
18 53 0.432324519 ubox
18 54 0.018499691 ubox
18 59 0.389694288 ubox
18 60 0.012303494 ubox
18 66 0.812412037 ubox
18 70 0.006501024 ubox
19 44 0.012356944 ubox
19 52 0.432861397 ubox
19 53 0.013097908 ubox
19 58 0.390008249 ubox
19 59 0.008712102 ubox
19 65 0.812434414 ubox
19 69 0.005119132 ubox
20 43 0.012351435 ubox
20 51 0.433062632 ubox
20 57 0.390107098 ubox
20 63 0.041573741 ubox
20 64 0.811384426 ubox
21 42 0.012334045 ubox
21 50 0.433021253 ubox
21 56 0.390099324 ubox
21 62 0.058703917 ubox
21 63 0.809951416 ubox
22 34 0.020501782 ubox
22 49 0.428332220 ubox
22 55 0.389923477 ubox
22 61 0.071556263 ubox
23 33 0.020595834 ubox
23 48 0.423877221 ubox
23 49 0.061876130 ubox
23 54 0.389775554 ubox
23 55 0.010561479 ubox
23 60 0.071338192 ubox
23 61 0.808791721 ubox
23 76 0.003283835 ubox
24 32 0.020600102 ubox
24 45 0.013463295 ubox
24 47 0.419103650 ubox
24 48 0.087360916 ubox
24 53 0.389612430 ubox
24 54 0.014910326 ubox
24 59 0.071001803 ubox
24 60 0.809186598 ubox
24 61 0.007354526 ubox
24 75 0.003288304 ubox
25 31 0.020544210 ubox
25 39 0.011131144 ubox
25 44 0.054669273 ubox
25 47 0.106920433 ubox
25 52 0.387935497 ubox
25 53 0.018245913 ubox
25 58 0.067346062 ubox
25 59 0.809113893 ubox
25 60 0.007777211 ubox
25 74 0.003681683 ubox
26 30 0.020572806 ubox
26 38 0.011145679 ubox
26 43 0.054858322 ubox
26 46 0.123360669 ubox
26 50 0.032050043 ubox
26 51 0.375927355 ubox
26 56 0.009800990 ubox
26 57 0.062667934 ubox
26 73 0.003688930 ubox
27 39 0.212604102 ubox
27 44 0.428338569 ubox
27 45 0.034349276 ubox
27 47 0.243317781 ubox
27 49 0.034473713 ubox
27 52 0.041898445 ubox
27 55 0.013472979 ubox
27 58 0.809469587 ubox
27 72 0.003688039 ubox
28 37 0.027172806 ubox
28 38 0.212329054 ubox
28 42 0.085502444 ubox
28 43 0.425151149 ubox
28 46 0.242724201 ubox
28 51 0.053259332 ubox
28 57 0.809811803 ubox
28 71 0.003683308 ubox
29 36 0.031901147 ubox
29 37 0.211799811 ubox
29 41 0.103442972 ubox
29 42 0.419070992 ubox
29 46 0.070337702 ubox
29 50 0.064025508 ubox
29 56 0.810087694 ubox
29 67 0.003499446 ubox
30 39 0.414996048 ubox
30 44 0.241387669 ubox
30 45 0.069033511 ubox
30 47 0.072329293 ubox
30 49 0.030522994 ubox
30 52 0.028794539 ubox
30 55 0.806072968 ubox
30 58 0.003441653 ubox
30 66 0.003526704 ubox
31 37 0.004947603 ubox
31 38 0.415912902 ubox
31 43 0.171813217 ubox
31 46 0.069505096 ubox
31 51 0.026818403 ubox
32 36 0.008685299 ubox
32 37 0.415832264 ubox
32 38 0.100477619 ubox
32 41 0.006562798 ubox
32 42 0.170848387 ubox
32 43 0.204633649 ubox
32 50 0.040944007 ubox
32 51 0.192974941 ubox
32 56 0.005017362 ubox
32 64 0.004267747 ubox
33 37 0.100105006 ubox
33 41 0.169614766 ubox
33 42 0.205726760 ubox
33 43 0.004273815 ubox
33 50 0.192731387 ubox
33 51 0.465536675 ubox
33 56 0.004088718 ubox
33 57 0.009527647 ubox
33 63 0.004311983 ubox
34 41 0.206490097 ubox
34 42 0.004295451 ubox
34 46 0.008116143 ubox
34 50 0.472652278 ubox
34 56 0.013869213 ubox
34 62 0.004351305 ubox
35 45 0.008183747 ubox
36 44 0.008149773 ubox
36 48 0.005741710 ubox
36 49 0.582468496 ubox
36 54 0.592849350 ubox
36 55 0.005239501 ubox
36 60 0.012480629 ubox
37 45 0.003358629 ubox
37 47 0.004320599 ubox
37 48 0.584006089 ubox
37 53 0.593092328 ubox
37 54 0.004858666 ubox
37 59 0.012529241 ubox
38 44 0.003762399 ubox
38 47 0.584069364 ubox
38 52 0.593101599 ubox
38 53 0.003688056 ubox
38 58 0.012554975 ubox
39 43 0.003769210 ubox
39 46 0.583982563 ubox
39 51 0.590960324 ubox
39 57 0.012574318 ubox
40 45 0.526100445 ubox
41 48 0.131304723 ubox
41 49 0.611934227 ubox
41 54 0.049285395 ubox
41 55 0.005395389 ubox
42 47 0.131610975 ubox
42 48 0.613978603 ubox
42 49 0.043851732 ubox
42 53 0.049486135 ubox
42 54 0.004467110 ubox
43 47 0.604062003 ubox
43 48 0.043439692 ubox
43 52 0.049582601 ubox
43 53 0.003270058 ubox
44 51 0.049664046 ubox
45 50 0.046489727 ubox
61 71 0.006682835 ubox
62 70 0.007250796 ubox
62 78 0.006384159 ubox
62 79 0.007001431 ubox
63 69 0.007252154 ubox
63 77 0.006398304 ubox
63 78 0.007053844 ubox
64 68 0.007152363 ubox
64 76 0.006387028 ubox
64 77 0.007048330 ubox
66 73 0.003360824 ubox
67 72 0.003551797 ubox
67 74 0.012707607 ubox
68 73 0.012875517 ubox
7 77 0.9500000 lbox
8 76 0.9500000 lbox
9 75 0.9500000 lbox
10 74 0.9500000 lbox
11 73 0.9500000 lbox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
16 68 0.9500000 lbox
17 67 0.9500000 lbox
18 66 0.9500000 lbox
19 65 0.9500000 lbox
20 64 0.9500000 lbox
21 63 0.9500000 lbox
23 61 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
27 58 0.9500000 lbox
28 57 0.9500000 lbox
29 56 0.9500000 lbox
30 55 0.9500000 lbox
36 54 0.9500000 lbox
37 53 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
showpage
end
%%EOF
