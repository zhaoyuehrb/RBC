%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CAV3)
} def

/sequence { (\
CUCUCUGCCCCAAGUAUUUUCAGCCCCAGCCGGCCACACAGCUCGGAUCUCCUCCUGUGGAUCCCCCCAGCUCUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.046656751 ubox
1 23 0.007385495 ubox
1 29 0.006708413 ubox
1 33 0.015558087 ubox
1 70 0.003957892 ubox
2 13 0.045499872 ubox
2 22 0.012398596 ubox
2 28 0.006640227 ubox
2 32 0.015577550 ubox
2 33 0.008121750 ubox
2 47 0.003462877 ubox
2 61 0.005555935 ubox
2 69 0.003786583 ubox
3 14 0.115482020 ubox
3 23 0.005732255 ubox
3 29 0.007664054 ubox
3 32 0.011481372 ubox
3 33 0.009879115 ubox
3 46 0.003686882 ubox
3 60 0.005921377 ubox
3 70 0.004233571 ubox
4 13 0.115392641 ubox
4 22 0.009125827 ubox
4 28 0.007543700 ubox
4 32 0.008153968 ubox
4 33 0.020605528 ubox
4 45 0.003595115 ubox
4 47 0.008944581 ubox
4 61 0.005688614 ubox
4 69 0.004027041 ubox
5 14 0.321757164 ubox
5 23 0.032410832 ubox
5 29 0.025604350 ubox
5 32 0.029332313 ubox
5 33 0.019744027 ubox
5 41 0.006216670 ubox
5 46 0.009550535 ubox
5 60 0.006064630 ubox
5 70 0.022468829 ubox
6 12 0.101460924 ubox
6 13 0.322772050 ubox
6 16 0.374703727 ubox
6 22 0.052985125 ubox
6 28 0.025825835 ubox
6 32 0.020066334 ubox
6 36 0.056254795 ubox
6 38 0.007903775 ubox
6 40 0.006844554 ubox
6 45 0.009534198 ubox
6 59 0.003310258 ubox
6 69 0.022932921 ubox
6 77 0.102662884 ubox
7 11 0.108345964 ubox
7 15 0.409862268 ubox
7 21 0.055129338 ubox
7 24 0.030685565 ubox
7 27 0.024992821 ubox
7 30 0.036751238 ubox
7 31 0.017877982 ubox
7 34 0.172048974 ubox
7 35 0.056178663 ubox
7 37 0.008574862 ubox
7 39 0.007361605 ubox
7 42 0.006672546 ubox
7 44 0.009803023 ubox
7 58 0.003212197 ubox
7 68 0.022785091 ubox
7 71 0.028749774 ubox
7 76 0.184960865 ubox
8 14 0.411646198 ubox
8 23 0.030917143 ubox
8 29 0.037918155 ubox
8 33 0.174755446 ubox
8 41 0.006672824 ubox
8 46 0.008156127 ubox
8 57 0.003196787 ubox
8 70 0.028702569 ubox
8 75 0.181313394 ubox
9 32 0.174017990 ubox
9 33 0.039256651 ubox
9 45 0.008201393 ubox
9 46 0.011544536 ubox
10 32 0.040584880 ubox
10 33 0.019442758 ubox
10 45 0.011377186 ubox
10 46 0.047136822 ubox
10 60 0.004328658 ubox
11 32 0.019800845 ubox
11 45 0.047314402 ubox
11 59 0.004169777 ubox
11 75 0.027612728 ubox
12 18 0.023805325 ubox
12 19 0.039903895 ubox
12 20 0.044899538 ubox
12 58 0.003651980 ubox
12 74 0.026986882 ubox
13 17 0.020337688 ubox
13 18 0.038949919 ubox
13 19 0.048287626 ubox
13 20 0.047321092 ubox
13 43 0.063253440 ubox
13 72 0.048790576 ubox
13 74 0.037536342 ubox
14 18 0.033994666 ubox
14 19 0.049777152 ubox
14 24 0.066770763 ubox
14 30 0.055758593 ubox
14 34 0.009297066 ubox
14 37 0.026296315 ubox
14 39 0.037979842 ubox
14 42 0.065128248 ubox
14 71 0.050364557 ubox
14 73 0.038231349 ubox
14 76 0.103314375 ubox
15 23 0.066118025 ubox
15 29 0.054781966 ubox
15 33 0.008753537 ubox
15 36 0.025747783 ubox
15 38 0.036884271 ubox
15 41 0.063672950 ubox
15 70 0.049086761 ubox
15 75 0.099601124 ubox
16 62 0.011948347 ubox
16 74 0.090675967 ubox
17 23 0.013290891 ubox
17 41 0.003311078 ubox
17 61 0.012714146 ubox
18 22 0.017667190 ubox
18 28 0.003527024 ubox
18 29 0.004100144 ubox
18 33 0.004465053 ubox
18 40 0.007169295 ubox
18 60 0.012725012 ubox
19 28 0.005991567 ubox
19 32 0.005545887 ubox
19 33 0.005140840 ubox
19 40 0.004413708 ubox
19 59 0.011077911 ubox
20 28 0.003691993 ubox
20 32 0.005265912 ubox
20 33 0.063934206 ubox
20 61 0.007467638 ubox
21 32 0.088095807 ubox
21 57 0.016178229 ubox
21 60 0.007754836 ubox
21 75 0.067512722 ubox
22 43 0.005612265 ubox
22 50 0.003783524 ubox
22 53 0.007028583 ubox
22 56 0.016265306 ubox
22 72 0.027087507 ubox
22 74 0.067878174 ubox
23 30 0.132637645 ubox
23 34 0.953891196 ubox
23 42 0.005946099 ubox
23 49 0.004082390 ubox
23 52 0.007491276 ubox
23 55 0.016202279 ubox
23 71 0.028826676 ubox
23 73 0.064809604 ubox
23 76 0.129391652 ubox
24 29 0.132407475 ubox
24 33 0.955664644 ubox
24 41 0.005933827 ubox
24 60 0.012242489 ubox
24 70 0.028762541 ubox
24 75 0.129278224 ubox
25 32 0.953426720 ubox
25 33 0.053392603 ubox
25 46 0.007030785 ubox
25 59 0.012227922 ubox
25 60 0.012383385 ubox
26 32 0.063581702 ubox
26 33 0.061492893 ubox
26 45 0.007058297 ubox
26 46 0.005547180 ubox
26 59 0.012419054 ubox
27 32 0.062724745 ubox
27 45 0.005566358 ubox
27 57 0.017952371 ubox
27 75 0.019287208 ubox
28 43 0.010742329 ubox
28 50 0.011377398 ubox
28 56 0.017959636 ubox
28 72 0.143719144 ubox
28 74 0.019228473 ubox
29 42 0.011058422 ubox
29 49 0.011830366 ubox
29 55 0.017930381 ubox
29 71 0.149487459 ubox
29 73 0.018498804 ubox
29 76 0.026897828 ubox
30 41 0.011040689 ubox
30 46 0.043237822 ubox
30 70 0.149329779 ubox
30 75 0.022737525 ubox
31 45 0.043925207 ubox
31 75 0.020536703 ubox
31 77 0.019127928 ubox
32 43 0.034874259 ubox
32 44 0.045217135 ubox
32 63 0.009072159 ubox
32 64 0.048633304 ubox
32 65 0.038825919 ubox
32 66 0.068453533 ubox
32 67 0.041124117 ubox
32 68 0.110863288 ubox
32 72 0.009247623 ubox
32 73 0.013816496 ubox
32 74 0.025269940 ubox
32 76 0.019467742 ubox
33 42 0.059408954 ubox
33 43 0.006009572 ubox
33 62 0.009175200 ubox
33 63 0.048880316 ubox
33 64 0.039222464 ubox
33 65 0.068211641 ubox
33 66 0.041693049 ubox
33 67 0.109985843 ubox
33 71 0.011536101 ubox
33 72 0.006548955 ubox
33 73 0.025458082 ubox
33 76 0.059420415 ubox
34 41 0.059758575 ubox
34 46 0.003230210 ubox
34 60 0.076524408 ubox
34 70 0.011524214 ubox
34 75 0.054161658 ubox
35 45 0.003309757 ubox
35 59 0.076375670 ubox
35 75 0.147624241 ubox
36 58 0.075245806 ubox
36 74 0.148886910 ubox
37 57 0.074389691 ubox
37 59 0.137550609 ubox
37 75 0.873081659 ubox
38 56 0.072176921 ubox
38 58 0.138965243 ubox
38 74 0.871735341 ubox
39 57 0.139811734 ubox
39 59 0.004175985 ubox
39 75 0.079317097 ubox
40 53 0.007675532 ubox
40 56 0.140258929 ubox
40 58 0.003821389 ubox
40 72 0.949693600 ubox
40 74 0.058754276 ubox
41 52 0.007427863 ubox
41 55 0.139146188 ubox
41 58 0.008221946 ubox
41 71 0.979358090 ubox
41 73 0.030700526 ubox
41 76 0.015178291 ubox
42 57 0.008792684 ubox
42 70 0.979713088 ubox
42 75 0.015162167 ubox
43 69 0.952166466 ubox
44 57 0.006928575 ubox
44 75 0.004257380 ubox
45 51 0.018350921 ubox
45 52 0.136036389 ubox
45 53 0.033475455 ubox
45 54 0.012374732 ubox
45 55 0.072514502 ubox
45 56 0.006246974 ubox
45 63 0.003403836 ubox
45 64 0.718595986 ubox
45 65 0.205864896 ubox
45 66 0.231466067 ubox
45 67 0.559075448 ubox
45 68 0.201379743 ubox
45 72 0.004624654 ubox
45 74 0.005011500 ubox
46 50 0.011994911 ubox
46 51 0.135883183 ubox
46 52 0.033971224 ubox
46 53 0.010140383 ubox
46 54 0.073298922 ubox
46 55 0.006470792 ubox
46 62 0.003192194 ubox
46 63 0.730367072 ubox
46 64 0.176035083 ubox
46 65 0.235014726 ubox
46 66 0.554757826 ubox
46 67 0.198807966 ubox
46 71 0.004684943 ubox
46 73 0.005139221 ubox
47 53 0.070300701 ubox
47 62 0.740603674 ubox
47 72 0.005047248 ubox
48 60 0.009884096 ubox
48 61 0.710829297 ubox
49 59 0.018073475 ubox
49 60 0.702790583 ubox
50 59 0.679420485 ubox
50 60 0.010833894 ubox
50 61 0.663729281 ubox
51 59 0.105693965 ubox
51 60 0.686090759 ubox
52 59 0.690166029 ubox
52 60 0.011218603 ubox
53 59 0.011779632 ubox
53 60 0.005774747 ubox
53 61 0.064275500 ubox
54 59 0.013588298 ubox
54 60 0.066104776 ubox
55 59 0.065841086 ubox
55 70 0.053782770 ubox
56 69 0.055838223 ubox
56 77 0.006966114 ubox
57 68 0.056676798 ubox
57 71 0.008002382 ubox
57 76 0.012599820 ubox
58 69 0.022293593 ubox
58 70 0.005025273 ubox
58 75 0.012575394 ubox
59 65 0.006405021 ubox
59 66 0.041907379 ubox
59 67 0.040923411 ubox
59 68 0.029619916 ubox
59 74 0.012593204 ubox
60 64 0.007056380 ubox
60 65 0.042783651 ubox
60 66 0.041617891 ubox
60 67 0.030747503 ubox
60 73 0.013848985 ubox
61 72 0.013192900 ubox
68 75 0.011816009 ubox
69 74 0.010856840 ubox
70 76 0.043488013 ubox
71 75 0.043253143 ubox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
37 75 0.9500000 lbox
38 74 0.9500000 lbox
40 72 0.9500000 lbox
41 71 0.9500000 lbox
42 70 0.9500000 lbox
43 69 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
showpage
end
%%EOF
