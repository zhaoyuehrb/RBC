%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCGCCUGUCCCUCUGGGCUGCUCGGGCGCCACCACUACUGUCCCCAUCCCGCCCCGCCAGCUGGGCCAAAGGGUGACUUGACUCACGACGCUGCCACCAGCCCACGGCUUGCCCGAGGCGUAUAAAGGCUGCCAGGGCCGCAGGCUGCCAAGCCCUGCCCUGCCCAAGGCGCAUAGAGC\
) } def
/len { sequence length } bind def

/coor [
[26.10075760 322.98638916]
[20.78168297 337.01162720]
[15.46261024 351.03686523]
[10.14353657 365.06213379]
[4.82446337 379.08737183]
[14.60014343 390.93353271]
[17.12722015 406.08309937]
[11.72592354 420.46090698]
[-0.15082635 430.19940186]
[-15.30824280 432.67898560]
[-29.66905594 427.23266602]
[-39.37028122 415.32543945]
[-41.80233383 400.16033936]
[-36.31100845 385.81665039]
[-24.37344360 376.15280151]
[-9.20077991 373.76828003]
[-3.88170671 359.74304199]
[1.43736660 345.71780396]
[6.75643969 331.69256592]
[12.07551289 317.66732788]
[9.35416412 303.02343750]
[21.48227501 292.86373901]
[26.80134773 278.83847046]
[32.12042236 264.81323242]
[37.43949509 250.78799438]
[29.88659859 235.77467346]
[35.63015366 219.62185669]
[51.58160400 212.47082520]
[56.65779877 198.35586548]
[61.73399734 184.24089050]
[66.81018829 170.12593079]
[71.88639069 156.01097107]
[63.81404114 151.16815186]
[56.55813217 145.17086792]
[50.28237152 138.15443420]
[45.12834930 130.27714539]
[41.21235657 121.71673584]
[38.62274933 112.66634369]
[37.41794968 103.33017731]
[37.62514114 93.91886902]
[39.23965073 84.64476776]
[42.22505188 75.71711731]
[29.19173050 68.29198456]
[16.15841103 60.86685181]
[3.06149387 53.55448151]
[-10.09804630 46.35541916]
[-23.25758743 39.15635681]
[-34.82685089 47.04364014]
[-48.60087204 49.16104889]
[-61.87814713 45.15106964]
[-72.07946014 35.85231781]
[-77.24890137 23.12491608]
[-76.42874908 9.47858620]
[-89.46206665 2.05345416]
[-102.49538422 -5.37167740]
[-115.52870941 -12.79680920]
[-129.61169434 -6.28152227]
[-144.82810974 -9.32134056]
[-155.32691956 -20.74739265]
[-157.07112122 -36.16612625]
[-149.39002991 -49.64872742]
[-135.23718262 -56.01085663]
[-120.05464935 -52.80614853]
[-109.68040466 -41.26687622]
[-108.10357666 -25.83012962]
[-95.07025146 -18.40499687]
[-82.03693390 -10.97986507]
[-69.00361633 -3.55473351]
[-55.27230835 -12.05053902]
[-39.03691483 -12.47219753]
[-24.71865845 -4.61032534]
[-16.26432800 9.47581196]
[-16.05852509 25.99681664]
[-2.89898419 33.19587708]
[10.26055622 40.39493942]
[17.65689659 40.84796524]
[23.58354378 47.83353043]
[36.61686325 55.25866318]
[49.65018082 62.68379593]
[54.52103043 56.88078690]
[60.05653000 51.70794678]
[66.17578125 47.24087143]
[72.78936768 43.54484558]
[79.80061340 40.67388153]
[87.10707092 38.66994476]
[94.60194397 37.56231689]
[102.17571259 37.36718369]
[109.71768951 38.08740234]
[117.11763763 39.71244049]
[124.26742554 42.21855545]
[131.06256104 45.56911850]
[137.40371704 49.71516037]
[147.73216248 38.83751678]
[151.62355042 23.50233841]
[165.99798584 19.60044289]
[176.32644653 8.72279739]
[186.65489197 -2.15484715]
[180.81156921 -19.63614464]
[184.60935974 -37.58597946]
[196.91792297 -51.07719040]
[214.28295898 -56.45102692]
[231.89515686 -52.30915833]
[241.64672852 -63.70683289]
[251.39828491 -75.10450745]
[251.18051147 -88.01779175]
[259.55889893 -97.31303406]
[271.62615967 -98.36209106]
[281.57299805 -109.58975220]
[291.51983643 -120.81741333]
[291.99032593 -136.85356140]
[304.90722656 -146.36846924]
[320.36178589 -142.06311035]
[326.49859619 -127.24018860]
[318.61001587 -113.27057648]
[302.74749756 -110.87057495]
[292.80065918 -99.64291382]
[282.85382080 -88.41525269]
[280.28890991 -71.06586456]
[262.79595947 -65.35295105]
[253.04440308 -53.95527267]
[243.29284668 -42.55759430]
[248.74246216 -32.07001877]
[250.33020020 -20.32321167]
[247.84584045 -8.69740295]
[241.55903625 1.43339288]
[232.19021606 8.86375809]
[220.82817078 12.70028973]
[208.80342102 12.46896935]
[197.53253174 8.17360115]
[187.20408630 19.05124664]
[176.87564087 29.92889023]
[173.72300720 44.48602676]
[158.60981750 49.16596603]
[148.28135681 60.04360962]
[159.43959045 80.13700104]
[162.60337830 102.90190125]
[157.34719849 125.27650452]
[170.25041199 132.92549133]
[183.15364075 140.57447815]
[196.05685425 148.22346497]
[216.18603516 147.51998901]
[224.97023010 164.72883606]
[238.12977600 171.92790222]
[251.28932190 179.12695312]
[264.44885254 186.32601929]
[277.60839844 193.52508545]
[290.82958984 200.61030579]
[304.11141968 207.58114624]
[320.46655273 206.38053894]
[329.45883179 220.09443665]
[321.83776855 234.61515808]
[305.44326782 235.00503540]
[297.14056396 220.86299133]
[283.85873413 213.89213562]
[276.45568848 213.56684875]
[270.40933228 206.68461609]
[257.24978638 199.48556519]
[244.09025574 192.28649902]
[230.93070984 185.08743286]
[217.77117920 177.88838196]
[208.23150635 181.63745117]
[197.99116516 179.45739746]
[190.49722290 171.83436584]
[188.40786743 161.12667847]
[175.50463867 153.47769165]
[162.60142517 145.82870483]
[149.69821167 138.17971802]
[131.97340393 153.90087891]
[109.67903137 161.91865540]
[86.00135040 161.08715820]
[80.92515564 175.20211792]
[75.84896088 189.31709290]
[70.77276611 203.43205261]
[65.69657135 217.54701233]
[72.80577087 229.00529480]
[72.02069092 242.27186584]
[63.85255814 252.50717163]
[51.46473694 256.10705566]
[46.14566422 270.13232422]
[40.82659149 284.15756226]
[35.50751877 298.18280029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[22 181]
[23 180]
[24 179]
[25 178]
[28 174]
[29 173]
[30 172]
[31 171]
[32 170]
[42 79]
[43 78]
[44 77]
[45 75]
[46 74]
[47 73]
[53 68]
[54 67]
[55 66]
[56 65]
[92 134]
[93 133]
[95 131]
[96 130]
[97 129]
[102 121]
[103 120]
[104 119]
[107 117]
[108 116]
[109 115]
[137 167]
[138 166]
[139 165]
[140 164]
[142 160]
[143 159]
[144 158]
[145 157]
[146 156]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
