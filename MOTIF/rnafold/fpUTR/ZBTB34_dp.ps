%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZBTB34)
} def

/sequence { (\
CGGGGACUGGCCUGGCGCCGGCGGCGGCGGAGGGGGCGCCGCGGGCGGGCGAUGUGAGCGCGGCGCUCUGGACAGAGUACGCUUCAUGUCAGUAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.145288686 ubox
1 14 0.938007758 ubox
1 43 0.004794033 ubox
1 70 0.003779601 ubox
2 8 0.145639181 ubox
2 12 0.039294168 ubox
2 13 0.947157706 ubox
2 16 0.004978651 ubox
2 42 0.004863644 ubox
2 69 0.003739465 ubox
3 7 0.142665288 ubox
3 11 0.039268322 ubox
3 12 0.948744604 ubox
3 13 0.054737938 ubox
3 68 0.003729484 ubox
4 11 0.948012696 ubox
4 12 0.059662084 ubox
4 13 0.005591781 ubox
4 40 0.004839639 ubox
4 67 0.003260748 ubox
5 11 0.061778656 ubox
5 12 0.005872894 ubox
5 39 0.004827882 ubox
5 90 0.009087332 ubox
6 89 0.009085234 ubox
6 93 0.128715519 ubox
7 15 0.003342804 ubox
7 48 0.015506140 ubox
7 49 0.010441277 ubox
7 88 0.009061862 ubox
7 92 0.132715435 ubox
7 95 0.046644419 ubox
8 14 0.003282759 ubox
8 47 0.015525440 ubox
8 48 0.010552140 ubox
8 91 0.130477262 ubox
8 94 0.046518157 ubox
9 37 0.003769226 ubox
9 46 0.015514447 ubox
9 50 0.013916099 ubox
9 90 0.106013503 ubox
9 93 0.042461491 ubox
10 16 0.008401623 ubox
10 37 0.003523674 ubox
10 46 0.010763280 ubox
10 50 0.292845446 ubox
10 89 0.084661922 ubox
10 93 0.004276284 ubox
11 15 0.008419780 ubox
11 33 0.006851698 ubox
11 34 0.007271650 ubox
11 35 0.003914116 ubox
11 36 0.003569627 ubox
11 44 0.015502787 ubox
11 45 0.010790669 ubox
11 48 0.009608516 ubox
11 49 0.293252718 ubox
11 88 0.084386078 ubox
11 92 0.004286098 ubox
12 30 0.011578956 ubox
12 32 0.008154305 ubox
12 33 0.008912044 ubox
12 34 0.003890190 ubox
12 35 0.003570741 ubox
12 43 0.015519672 ubox
12 44 0.010753305 ubox
12 47 0.008768064 ubox
12 48 0.293024147 ubox
12 49 0.007587968 ubox
12 58 0.003702739 ubox
12 92 0.009476008 ubox
12 95 0.005493428 ubox
13 29 0.011630141 ubox
13 31 0.008029546 ubox
13 32 0.008994368 ubox
13 33 0.003767753 ubox
13 34 0.003541669 ubox
13 41 0.015881630 ubox
13 43 0.009099779 ubox
13 47 0.147460729 ubox
13 48 0.008934836 ubox
13 51 0.010042237 ubox
13 54 0.005714567 ubox
13 57 0.003751376 ubox
13 86 0.038614988 ubox
13 91 0.010116822 ubox
13 94 0.005538745 ubox
14 28 0.011788206 ubox
14 40 0.018387840 ubox
14 46 0.055309126 ubox
14 50 0.040456126 ubox
14 53 0.009387015 ubox
14 83 0.003727840 ubox
14 85 0.038741861 ubox
14 90 0.010267800 ubox
14 93 0.004648608 ubox
15 22 0.003779768 ubox
15 39 0.018586724 ubox
15 46 0.044578873 ubox
15 50 0.191056516 ubox
15 55 0.003332840 ubox
15 82 0.004297893 ubox
15 84 0.028507129 ubox
15 89 0.009096958 ubox
15 93 0.071673276 ubox
16 21 0.003785403 ubox
16 26 0.011948073 ubox
16 29 0.042088456 ubox
16 38 0.018587825 ubox
16 45 0.058011301 ubox
16 47 0.866033147 ubox
16 49 0.179662029 ubox
16 51 0.151575855 ubox
16 81 0.004194850 ubox
16 88 0.008722112 ubox
16 92 0.072848342 ubox
17 25 0.012014549 ubox
17 28 0.042716013 ubox
17 37 0.018585536 ubox
17 46 0.897369015 ubox
17 50 0.418445654 ubox
18 24 0.012015109 ubox
18 27 0.042722996 ubox
18 36 0.018518345 ubox
18 44 0.059212383 ubox
18 45 0.898345909 ubox
18 48 0.107809939 ubox
18 49 0.418791042 ubox
19 23 0.011927825 ubox
19 26 0.042722281 ubox
19 35 0.018439656 ubox
19 43 0.059463119 ubox
19 44 0.897921538 ubox
19 47 0.108128133 ubox
19 48 0.418551440 ubox
20 25 0.042531933 ubox
20 42 0.042196978 ubox
20 46 0.104289219 ubox
21 28 0.003582128 ubox
21 42 0.898918123 ubox
21 46 0.419428744 ubox
22 27 0.003686894 ubox
22 29 0.017597264 ubox
22 41 0.900233058 ubox
22 43 0.021342114 ubox
22 45 0.420357004 ubox
23 28 0.017539894 ubox
23 40 0.900210580 ubox
23 42 0.015985837 ubox
24 39 0.900218194 ubox
24 42 0.432119751 ubox
25 38 0.899083113 ubox
25 41 0.432655092 ubox
26 37 0.705969039 ubox
26 40 0.432718769 ubox
27 37 0.557463189 ubox
27 39 0.432739086 ubox
28 36 0.787178926 ubox
28 38 0.432742787 ubox
29 37 0.432069143 ubox
33 69 0.040066760 ubox
34 68 0.043011009 ubox
35 67 0.043555265 ubox
36 66 0.043893852 ubox
37 65 0.043933756 ubox
38 50 0.003279192 ubox
38 64 0.043955477 ubox
39 49 0.003243432 ubox
39 63 0.043956563 ubox
40 48 0.003203822 ubox
40 62 0.043955367 ubox
41 61 0.043953027 ubox
42 60 0.043948924 ubox
43 59 0.043363826 ubox
45 55 0.023100503 ubox
45 59 0.005792494 ubox
46 54 0.023804290 ubox
46 56 0.033925316 ubox
46 58 0.006349880 ubox
47 53 0.022299158 ubox
47 55 0.032170237 ubox
47 61 0.004307481 ubox
48 83 0.004757721 ubox
48 90 0.049342557 ubox
49 55 0.009855180 ubox
49 59 0.026063199 ubox
49 61 0.014304935 ubox
49 66 0.003308295 ubox
49 78 0.003943295 ubox
49 82 0.005034853 ubox
49 89 0.049510070 ubox
49 93 0.628752601 ubox
50 54 0.010015494 ubox
50 58 0.026089892 ubox
50 60 0.014318802 ubox
50 65 0.003313862 ubox
50 77 0.004147901 ubox
50 81 0.005035623 ubox
50 88 0.049455557 ubox
50 92 0.640501987 ubox
51 59 0.014240573 ubox
51 64 0.003306360 ubox
51 80 0.004964976 ubox
51 87 0.027643419 ubox
51 90 0.980251820 ubox
52 78 0.003603769 ubox
52 87 0.021082877 ubox
52 89 0.990778516 ubox
52 93 0.005369534 ubox
53 74 0.005660407 ubox
53 86 0.024476138 ubox
53 88 0.987923840 ubox
53 91 0.005143861 ubox
53 92 0.005235821 ubox
54 59 0.003639852 ubox
54 61 0.004312243 ubox
54 73 0.006006258 ubox
54 85 0.024418809 ubox
54 87 0.993137326 ubox
54 90 0.005361018 ubox
55 60 0.004136942 ubox
55 72 0.005933532 ubox
55 86 0.997517485 ubox
56 68 0.011141218 ubox
56 84 0.027314420 ubox
56 85 0.997832751 ubox
57 67 0.011196716 ubox
57 83 0.081872096 ubox
57 84 0.993526516 ubox
58 66 0.011222391 ubox
58 82 0.111759079 ubox
58 83 0.968779471 ubox
59 65 0.011222209 ubox
59 81 0.112142898 ubox
60 64 0.010511089 ubox
60 80 0.110504146 ubox
60 82 0.991734649 ubox
61 81 0.992017927 ubox
62 80 0.991067269 ubox
62 83 0.031277200 ubox
63 78 0.037579543 ubox
63 82 0.034211432 ubox
64 77 0.037032432 ubox
64 81 0.034189259 ubox
65 78 0.978668049 ubox
65 80 0.028893179 ubox
66 75 0.033004045 ubox
66 77 0.997937400 ubox
67 74 0.031264231 ubox
67 76 0.998026689 ubox
67 96 0.004140445 ubox
68 75 0.997884061 ubox
68 77 0.016840899 ubox
68 92 0.004567066 ubox
68 95 0.005567403 ubox
69 74 0.933516112 ubox
69 76 0.016791963 ubox
69 91 0.005391737 ubox
69 94 0.005664337 ubox
70 80 0.004377657 ubox
70 85 0.004346615 ubox
70 90 0.004816806 ubox
70 93 0.005061589 ubox
71 84 0.004110972 ubox
71 85 0.005276514 ubox
71 90 0.040694234 ubox
72 78 0.003507423 ubox
72 83 0.003460883 ubox
72 84 0.005184268 ubox
72 89 0.041040837 ubox
73 77 0.004001352 ubox
73 88 0.041150581 ubox
74 83 0.006824129 ubox
74 87 0.040552463 ubox
75 82 0.007260816 ubox
75 84 0.017872293 ubox
75 85 0.036717100 ubox
76 83 0.021391682 ubox
76 84 0.035297580 ubox
77 82 0.023381809 ubox
77 83 0.029609486 ubox
89 96 0.021167757 ubox
90 95 0.026817871 ubox
1 14 0.9500000 lbox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
17 50 0.9500000 lbox
18 49 0.9500000 lbox
19 48 0.9500000 lbox
21 46 0.9500000 lbox
22 45 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
51 90 0.9500000 lbox
52 89 0.9500000 lbox
53 88 0.9500000 lbox
54 87 0.9500000 lbox
55 86 0.9500000 lbox
56 85 0.9500000 lbox
57 84 0.9500000 lbox
58 83 0.9500000 lbox
60 82 0.9500000 lbox
61 81 0.9500000 lbox
62 80 0.9500000 lbox
65 78 0.9500000 lbox
66 77 0.9500000 lbox
67 76 0.9500000 lbox
68 75 0.9500000 lbox
69 74 0.9500000 lbox
showpage
end
%%EOF
