%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCUCAGCUGCCUUUCCCGGGGCCGGGACCCGGCCGGGGGAGGACCGAGGCGCGGCGCUGUCCGUGACGUCAUCAGGCUGCGCUGCCCGCAGUACUGGACCCGAGCGCGACGGUGCGGCUGGCGGACCCGGGCUGGCUUGUGGGGAAACGAAACUGAGGGAGGAGGCGGCGGCUCUGGCAGCGGCGGCGACAGUGUCGGCCUGACCCCCCCUCCGCUCCCCGGCAGCUCGCUCUCUCCCCUCAGCUUAACG\
) } def
/len { sequence length } bind def

/coor [
[428.89648438 246.22685242]
[423.19659424 234.39077759]
[420.49456787 221.52398682]
[420.95251465 208.37411499]
[406.60855103 203.98655701]
[392.26458740 199.59901428]
[377.92062378 195.21147156]
[363.57662964 190.82391357]
[351.81130981 199.91870117]
[336.76867676 200.34672546]
[324.21160889 191.73432922]
[319.07421875 177.21147156]
[304.73022461 172.82392883]
[290.38626099 168.43637085]
[279.98165894 176.01014709]
[266.91967773 176.22001648]
[255.95549011 168.76591492]
[251.20919800 156.17849731]
[236.92059326 151.61389160]
[222.63198853 147.04927063]
[208.34338379 142.48464966]
[194.05477905 137.92002869]
[179.76617432 133.35540771]
[165.28797913 136.85273743]
[154.49682617 125.28289032]
[140.20822144 120.71826935]
[125.91960907 116.15365601]
[116.36486816 125.78678131]
[103.58036041 130.33064270]
[90.08923340 128.88845825]
[78.55409241 121.74488068]
[65.72106934 129.51104736]
[52.93631363 137.35644531]
[40.20032501 145.28074646]
[27.46433258 153.20503235]
[14.77758980 161.20794678]
[2.14058185 169.28916931]
[-1.00837004 184.77656555]
[-14.23220062 193.43138123]
[-29.68544579 190.11886597]
[-38.19996643 176.80427551]
[-34.72425461 161.38691711]
[-21.32038307 153.01364136]
[-5.94063282 156.65216064]
[6.69637537 148.57093811]
[10.62739658 142.33692932]
[19.54003143 140.46905518]
[32.27602386 132.54475403]
[45.01201630 124.62044525]
[49.01984024 118.43553162]
[57.95489502 116.67802429]
[70.78791809 108.91185760]
[69.46811676 99.24458313]
[71.26438904 89.65440369]
[58.83113098 81.26309204]
[43.06398392 79.95631409]
[36.84296036 66.42308807]
[24.40970421 58.03178024]
[11.97644615 49.64046860]
[-0.45681193 41.24915695]
[-12.89006996 32.85784531]
[-25.32332802 24.46653366]
[-37.75658417 16.07522392]
[-50.18984222 7.68391180]
[-62.67475510 -0.63034910]
[-75.21084595 -8.86724186]
[-87.74694061 -17.10413551]
[-100.49411774 -15.25806522]
[-110.75993347 -22.35427284]
[-113.36340332 -34.14965820]
[-125.79666138 -42.54096603]
[-140.31823730 -37.39994812]
[-154.91195679 -41.74468231]
[-164.04103088 -53.70812607]
[-164.37107849 -68.57517242]
[-176.80433655 -76.96648407]
[-189.23759460 -85.35779572]
[-201.67085266 -93.74910736]
[-214.15576172 -102.06336975]
[-226.69186401 -110.30026245]
[-239.22795105 -118.53715515]
[-251.76403809 -126.77404785]
[-264.30014038 -135.01094055]
[-276.83621216 -143.24783325]
[-292.77453613 -141.41755676]
[-304.04074097 -152.83912659]
[-301.99237061 -168.75086975]
[-288.20077515 -176.94668579]
[-273.24566650 -171.13941956]
[-268.59933472 -155.78392029]
[-256.06323242 -147.54702759]
[-243.52714539 -139.31013489]
[-230.99105835 -131.07324219]
[-218.45497131 -122.83634949]
[-205.91886902 -114.59945679]
[-198.62319946 -113.55592346]
[-193.27954102 -106.18236542]
[-180.84628296 -97.79105377]
[-168.41302490 -89.39974213]
[-155.97976685 -81.00843048]
[-142.06875610 -86.26406097]
[-127.55882263 -82.27333832]
[-118.07009888 -70.36462402]
[-117.40534973 -54.97422409]
[-104.97209167 -46.58291245]
[-87.41394043 -46.28586960]
[-79.51004791 -29.64022636]
[-66.97395325 -21.40333366]
[-54.43786240 -13.16644096]
[-47.14218521 -12.12290573]
[-41.79853058 -4.74934578]
[-29.36527443 3.64196539]
[-16.93201637 12.03327656]
[-4.49875832 20.42458725]
[7.93449926 28.81589890]
[20.36775780 37.20721054]
[32.80101395 45.59852219]
[45.23427200 53.98983383]
[60.11211014 54.69641113]
[67.22244263 68.82983398]
[79.65570068 77.22114563]
[95.77519226 69.75239563]
[113.32422638 72.51852417]
[126.36474609 84.58354950]
[130.48423767 101.86504364]
[144.77284241 106.42966461]
[159.06144714 110.99428558]
[174.56164551 107.82344055]
[184.33078003 119.06680298]
[198.61940002 123.63141632]
[212.90800476 128.19604492]
[227.19660950 132.76066589]
[241.48521423 137.32527161]
[255.77381897 141.88989258]
[271.18685913 133.58827209]
[287.50936890 138.91075134]
[294.77380371 154.09240723]
[309.11779785 158.47994995]
[323.46176147 162.86750793]
[335.84445190 153.70372009]
[351.07077026 153.58972168]
[363.29992676 162.35966492]
[367.96420288 176.47994995]
[382.30816650 180.86749268]
[396.65213013 185.25505066]
[410.99609375 189.64259338]
[425.34005737 194.03013611]
[434.90649414 179.89965820]
[448.35705566 169.42803955]
[464.36828613 163.63153076]
[481.36911011 163.06706238]
[497.69497681 167.77880859]
[511.75088501 177.29481506]
[522.16717529 190.67439270]
[527.93298340 206.60102844]
[528.49438477 223.51188660]
[542.99121094 227.36428833]
[557.48809814 231.21670532]
[571.98492432 235.06912231]
[586.48181152 238.92152405]
[600.97869873 242.77394104]
[615.47552490 246.62634277]
[630.79998779 242.69284058]
[641.11315918 253.43931580]
[655.61004639 257.29171753]
[670.10687256 261.14413452]
[684.60375977 264.99655151]
[699.12414551 268.75924683]
[713.66754150 272.43203735]
[728.21093750 276.10485840]
[742.77679443 279.68768311]
[757.36450195 283.18032837]
[772.58697510 278.86898804]
[783.16284180 289.35708618]
[797.75054932 292.84973145]
[812.33825684 296.34240723]
[825.70208740 288.33956909]
[840.44635010 292.08944702]
[847.99346924 304.87915039]
[862.58117676 308.37179565]
[871.62731934 307.32696533]
[877.32714844 311.99893188]
[891.87054443 315.67175293]
[906.41394043 319.34457397]
[920.95733643 323.01736450]
[935.50073242 326.69018555]
[950.77539062 322.56744385]
[961.22070312 333.18554688]
[975.76409912 336.85836792]
[990.52349854 339.53411865]
[1005.43066406 341.20040894]
[1020.33782959 342.86669922]
[1035.24499512 344.53302002]
[1051.65771484 340.28359985]
[1060.28454590 354.87860107]
[1048.64819336 367.20858765]
[1033.57873535 359.44015503]
[1018.67156982 357.77386475]
[1003.76440430 356.10757446]
[988.85723877 354.44128418]
[1000.41796875 363.99893188]
[1006.28356934 377.80453491]
[1005.13806152 392.76071167]
[997.23834229 405.51199341]
[984.35687256 413.19750977]
[969.38360596 414.09301758]
[955.67791748 407.99755859]
[946.31481934 396.27871704]
[943.39483643 381.56564331]
[947.57318115 367.15936279]
[957.91241455 356.29196167]
[972.09130859 351.40176392]
[957.54791260 347.72894287]
[943.31353760 352.11441040]
[931.82794189 341.23358154]
[917.28454590 337.56076050]
[902.74114990 333.88796997]
[888.19775391 330.21514893]
[873.65435791 326.54232788]
[859.08850098 322.95953369]
[844.50079346 319.46685791]
[831.97973633 327.45175171]
[817.13598633 324.11749268]
[808.84558105 310.93011475]
[794.25787354 307.43746948]
[779.67016602 303.94479370]
[765.49108887 308.50595093]
[753.87182617 297.76803589]
[739.28411865 294.27539062]
[732.06738281 295.77020264]
[724.53814697 290.64825439]
[709.99475098 286.97543335]
[695.45135498 283.30264282]
[688.21667480 284.70809937]
[680.75134277 279.49340820]
[666.25445557 275.64099121]
[651.75762939 271.78857422]
[637.26074219 267.93618774]
[622.97326660 272.14523315]
[611.62310791 261.12319946]
[597.12628174 257.27078247]
[582.62939453 253.41838074]
[568.13256836 249.56597900]
[553.63568115 245.71356201]
[539.13879395 241.86116028]
[524.64196777 238.00874329]
[518.19995117 249.35025024]
[509.22247314 258.82678223]
[498.22817993 265.88354492]
[485.85409546 270.10574341]
[472.81863403 271.24298096]
[459.87979126 269.22412109]
[447.79119873 264.16171265]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[12 139]
[13 138]
[14 137]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[23 129]
[25 127]
[26 126]
[27 125]
[31 52]
[32 51]
[33 49]
[34 48]
[35 47]
[36 45]
[37 44]
[54 121]
[55 120]
[57 118]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[64 111]
[65 109]
[66 108]
[67 107]
[70 105]
[71 104]
[75 100]
[76 99]
[77 98]
[78 97]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[156 246]
[157 245]
[158 244]
[159 243]
[160 242]
[161 241]
[162 240]
[164 238]
[165 237]
[166 236]
[167 235]
[168 233]
[169 232]
[170 231]
[171 229]
[172 228]
[174 226]
[175 225]
[176 224]
[179 221]
[180 220]
[182 219]
[183 218]
[184 217]
[185 216]
[186 215]
[188 213]
[189 212]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
