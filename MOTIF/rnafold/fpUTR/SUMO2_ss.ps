%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCACGCAGGGUGGGGGGAGGGAGCGCACGACGUGCGCGCACCCUCUCCCCUCGUCCACCGCUGCCGCCUCCUUCUUCUGCCGCUCCUGGUGCUGCUUGUGUGCUCGUUUGGUGCGGACCUGGUACCUCUUUUGUGAAGCGGCAGCUGAGGAGACUCCGGCGCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[99.92298889 180.45358276]
[98.53896332 165.51756287]
[97.15493774 150.58155823]
[95.77091217 135.64553833]
[84.12078857 132.19224548]
[74.29029846 125.04997253]
[67.40592957 115.03717804]
[52.77325058 118.33637238]
[38.14057159 121.63556671]
[23.50789261 124.93476105]
[8.90632248 128.36901855]
[-5.66289282 131.93804932]
[-20.23210907 135.50708008]
[-34.58117294 139.87792969]
[-48.66600037 145.03715515]
[-62.75082397 150.19639587]
[-76.83564758 155.35562134]
[-90.92047882 160.51486206]
[-105.00530243 165.67408752]
[-119.09012604 170.83332825]
[-133.17495728 175.99255371]
[-147.25978088 181.15179443]
[-161.34460449 186.31103516]
[-173.51217651 202.35086060]
[-192.39762878 198.30783081]
[-206.28219604 203.98399353]
[-220.16676331 209.66017151]
[-234.05133057 215.33633423]
[-247.93589783 221.01249695]
[-261.82046509 226.68865967]
[-274.19375610 238.27908325]
[-288.75650024 229.59788513]
[-284.44592285 213.20108032]
[-267.49661255 212.80409241]
[-253.61206055 207.12792969]
[-239.72749329 201.45176697]
[-225.84292603 195.77560425]
[-211.95835876 190.09944153]
[-198.07380676 184.42326355]
[-194.96257019 174.63989258]
[-186.79550171 168.06263733]
[-176.13557434 167.06721497]
[-166.50382996 172.22619629]
[-152.41900635 167.06697083]
[-138.33418274 161.90773010]
[-124.24935913 156.74850464]
[-110.16453552 151.58926392]
[-96.07971191 146.43003845]
[-81.99488831 141.27079773]
[-67.91005707 136.11157227]
[-53.82523346 130.95233154]
[-39.74040985 125.79309845]
[-52.72832489 118.28882599]
[-56.77074051 103.84380341]
[-49.56444550 90.68821716]
[-35.21530533 86.31761169]
[-21.89889336 93.22219086]
[-17.20237350 107.46797943]
[-23.80113602 120.93785858]
[-9.23192120 117.36883545]
[5.33729458 113.79980469]
[11.10852814 109.13578796]
[20.20869827 110.30208588]
[34.84137726 107.00289154]
[49.47405624 103.70368958]
[64.10673523 100.40449524]
[69.99645996 80.29524231]
[86.11030579 66.90065765]
[106.95726013 64.78514099]
[125.43342590 74.66957092]
[138.03858948 66.53877258]
[150.64375305 58.40797043]
[163.24891663 50.27716827]
[168.79170227 42.96615982]
[176.16297913 42.11508942]
[188.91624451 34.21860886]
[192.64657593 19.09503746]
[205.69267273 11.26855659]
[220.08769226 14.91805744]
[232.84095764 7.02157497]
[245.59420776 -0.87490737]
[258.34747314 -8.77138996]
[271.10073853 -16.66787148]
[283.85397339 -24.56435394]
[296.60723877 -32.46083832]
[309.36050415 -40.35731888]
[307.42648315 -48.10543060]
[308.82409668 -56.78863144]
[313.92309570 -64.93321991]
[322.43927002 -70.94968414]
[334.06732178 -80.42534637]
[345.69537354 -89.90100861]
[357.32345581 -99.37667847]
[368.95150757 -108.85234070]
[380.57955933 -118.32800293]
[392.20761108 -127.80367279]
[392.69018555 -138.71939087]
[398.98934937 -147.37649536]
[408.81481934 -151.03997803]
[418.81527710 -148.71931458]
[430.78552246 -157.75883484]
[437.13552856 -172.24980164]
[451.95486450 -173.74519348]
[463.92514038 -182.78471375]
[475.89538574 -191.82423401]
[474.62768555 -207.19941711]
[481.89385986 -220.80848694]
[495.37527466 -228.30880737]
[510.77008057 -227.30706787]
[523.16583252 -218.12292480]
[528.60711670 -203.68699646]
[525.35760498 -188.60574341]
[514.45428467 -177.69152832]
[499.37625122 -174.42704773]
[484.93490601 -179.85397339]
[472.96466064 -170.81445312]
[460.99438477 -161.77493286]
[455.50057983 -147.93054199]
[439.82504272 -145.78857422]
[427.85479736 -136.74905396]
[421.68746948 -118.44685364]
[401.68328857 -116.17561340]
[390.05523682 -106.69994354]
[378.42715454 -97.22428131]
[366.79910278 -87.74861908]
[355.17105103 -78.27294922]
[343.54299927 -68.79728699]
[331.91491699 -59.32162094]
[335.34918213 -44.72005081]
[349.98187256 -41.42085648]
[363.20590210 -50.07534409]
[378.65905762 -46.76244354]
[387.17327881 -33.44763947]
[383.69717407 -18.03036499]
[370.29309082 -9.65741920]
[354.91342163 -13.29632187]
[346.68267822 -26.78817558]
[332.04998779 -30.08736992]
[317.25698853 -27.60406303]
[304.50372314 -19.70758057]
[291.75045776 -11.81109810]
[278.99722290 -3.91461515]
[266.24395752 3.98186707]
[253.49069214 11.87834930]
[240.73744202 19.77483177]
[227.98417664 27.67131424]
[224.83467102 42.18393326]
[212.01353455 50.37376404]
[196.81271362 46.97186661]
[184.05946350 54.86834717]
[171.37971497 62.88233185]
[158.77455139 71.01313019]
[146.16938782 79.14392853]
[133.56422424 87.27473450]
[135.59503174 95.36489868]
[135.70378113 103.70535278]
[133.88464355 111.84572601]
[130.23580933 119.34645844]
[124.95433807 125.80253601]
[118.32539368 130.86535645]
[110.70692444 134.26152039]
[112.09095001 149.19752502]
[113.47497559 164.13354492]
[114.85900116 179.06954956]
[127.17636871 188.97198486]
[128.80090332 204.69256592]
[118.76879883 216.90454102]
[103.03192902 218.36277771]
[90.92669678 208.20211792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[4 161]
[7 66]
[8 65]
[9 64]
[10 63]
[11 61]
[12 60]
[13 59]
[14 52]
[15 51]
[16 50]
[17 49]
[18 48]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[25 39]
[26 38]
[27 37]
[28 36]
[29 35]
[30 34]
[70 154]
[71 153]
[72 152]
[73 151]
[75 150]
[76 149]
[79 146]
[80 145]
[81 144]
[82 143]
[83 142]
[84 141]
[85 140]
[86 139]
[90 128]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
[96 122]
[100 120]
[101 119]
[103 117]
[104 116]
[105 115]
[129 138]
[130 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
