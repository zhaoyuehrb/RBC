%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GEMIN4)
} def

/sequence { (\
AGGCCUAAGCGCGGCCGCCGUGGCUCCUGCGUCUCCCAUCGUGCCGUGCGUCCCGCGCCGCGUUCGAGUUCUCGGAGGGGAGGGGGCGUUAGCCCCGCGCAGCCGCCGGCGUCGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 16 0.012920825 ubox
2 116 0.004369233 ubox
2 119 0.082460659 ubox
3 10 0.781101251 ubox
3 12 0.012595114 ubox
3 15 0.013154948 ubox
3 115 0.003279810 ubox
3 118 0.081533583 ubox
4 9 0.779255381 ubox
4 11 0.012873383 ubox
4 14 0.013155465 ubox
4 117 0.081161019 ubox
5 13 0.013147410 ubox
9 115 0.041904291 ubox
9 118 0.254484706 ubox
10 114 0.041955175 ubox
10 117 0.255026006 ubox
11 113 0.041766292 ubox
11 115 0.203762110 ubox
11 116 0.180418714 ubox
11 118 0.958984686 ubox
12 111 0.009071689 ubox
12 114 0.272167116 ubox
12 117 0.960918271 ubox
13 110 0.006404059 ubox
13 113 0.272204959 ubox
13 116 0.961181393 ubox
14 110 0.040955275 ubox
14 112 0.271018555 ubox
14 115 0.961200492 ubox
15 109 0.041458991 ubox
15 111 0.191699533 ubox
15 114 0.956513681 ubox
16 108 0.041460174 ubox
16 111 0.957822885 ubox
16 114 0.032539471 ubox
17 107 0.040474393 ubox
17 110 0.997144287 ubox
17 112 0.036312792 ubox
17 113 0.045493168 ubox
18 109 0.997192824 ubox
18 111 0.034872279 ubox
19 108 0.995970715 ubox
19 111 0.050138073 ubox
20 106 0.674299788 ubox
20 107 0.689941298 ubox
20 110 0.051937215 ubox
21 105 0.952396865 ubox
21 108 0.060661958 ubox
21 109 0.036640070 ubox
22 104 0.957433095 ubox
22 107 0.260553041 ubox
23 103 0.957376690 ubox
23 106 0.288076769 ubox
24 102 0.899686327 ubox
24 105 0.288146643 ubox
25 79 0.003405950 ubox
25 101 0.637884629 ubox
26 78 0.005970758 ubox
27 77 0.005986012 ubox
27 102 0.435676333 ubox
28 76 0.005972567 ubox
28 99 0.118498176 ubox
28 101 0.762099342 ubox
29 98 0.129904659 ubox
29 100 0.991124613 ubox
30 74 0.006003975 ubox
30 97 0.129820802 ubox
30 99 0.991344093 ubox
31 73 0.005975275 ubox
31 96 0.039401610 ubox
31 98 0.989775361 ubox
32 78 0.012437332 ubox
32 81 0.023157515 ubox
32 83 0.035119557 ubox
32 97 0.948676060 ubox
33 68 0.040524924 ubox
33 77 0.033218329 ubox
33 79 0.004419509 ubox
33 80 0.036187458 ubox
33 82 0.991953935 ubox
34 67 0.040966471 ubox
34 76 0.033345882 ubox
34 78 0.004334914 ubox
34 79 0.026867661 ubox
34 80 0.048318381 ubox
34 81 0.994770443 ubox
35 66 0.040923175 ubox
35 75 0.033365986 ubox
35 77 0.004330635 ubox
35 78 0.026833022 ubox
35 79 0.078585978 ubox
35 80 0.994011711 ubox
36 74 0.033296811 ubox
36 75 0.004291886 ubox
36 77 0.026677685 ubox
36 78 0.092920187 ubox
36 79 0.992769836 ubox
36 80 0.004084766 ubox
37 74 0.004411288 ubox
37 77 0.105202343 ubox
37 78 0.989113107 ubox
37 79 0.005274445 ubox
38 42 0.010036488 ubox
38 63 0.037906413 ubox
38 69 0.032013938 ubox
39 62 0.016085014 ubox
39 67 0.143155139 ubox
39 68 0.017175172 ubox
39 75 0.198552335 ubox
39 76 0.523376034 ubox
39 78 0.010747762 ubox
40 50 0.003535405 ubox
40 60 0.012116776 ubox
40 62 0.449266929 ubox
40 66 0.154359648 ubox
40 74 0.206248287 ubox
40 75 0.549977575 ubox
40 77 0.067476139 ubox
40 78 0.003972462 ubox
41 45 0.004803930 ubox
41 49 0.003744098 ubox
41 58 0.006507547 ubox
41 59 0.013048507 ubox
41 61 0.475323364 ubox
41 63 0.154840195 ubox
41 65 0.156523245 ubox
41 73 0.207169945 ubox
42 48 0.003686831 ubox
42 57 0.006597219 ubox
42 60 0.474703650 ubox
42 62 0.620860746 ubox
42 66 0.009960897 ubox
42 68 0.004513606 ubox
42 74 0.012327102 ubox
43 49 0.003304072 ubox
43 56 0.006614035 ubox
43 58 0.021884671 ubox
43 59 0.461064580 ubox
43 61 0.851103038 ubox
43 63 0.138176584 ubox
43 65 0.009818625 ubox
43 69 0.127176279 ubox
43 73 0.008825710 ubox
44 48 0.003283367 ubox
44 55 0.006115516 ubox
44 57 0.023656644 ubox
44 60 0.848755436 ubox
44 62 0.142008971 ubox
44 68 0.129034860 ubox
44 75 0.010075763 ubox
45 55 0.010594869 ubox
45 57 0.218525132 ubox
45 60 0.155799795 ubox
45 62 0.093798049 ubox
45 66 0.126293176 ubox
45 74 0.010088794 ubox
46 54 0.010763884 ubox
46 56 0.219287637 ubox
46 58 0.944908686 ubox
46 59 0.161572002 ubox
46 61 0.097694714 ubox
46 65 0.126042452 ubox
46 73 0.009415607 ubox
47 55 0.219033322 ubox
47 57 0.947158524 ubox
47 60 0.097203747 ubox
47 62 0.027002043 ubox
48 54 0.215553161 ubox
48 56 0.947850784 ubox
48 58 0.179832017 ubox
48 59 0.069135935 ubox
48 61 0.033253024 ubox
48 63 0.119638299 ubox
48 69 0.007443969 ubox
49 55 0.947803808 ubox
49 57 0.192372404 ubox
49 60 0.033265807 ubox
49 62 0.121939746 ubox
49 66 0.005680187 ubox
49 68 0.007532812 ubox
50 54 0.886675426 ubox
50 56 0.192101239 ubox
50 58 0.012028875 ubox
50 59 0.032771631 ubox
50 61 0.121900119 ubox
50 65 0.005675706 ubox
51 55 0.179712916 ubox
51 57 0.012618552 ubox
51 60 0.120539365 ubox
51 67 0.008436775 ubox
52 66 0.008567826 ubox
54 60 0.008900717 ubox
54 62 0.011330490 ubox
55 59 0.010280435 ubox
55 61 0.011522458 ubox
55 63 0.004421329 ubox
56 60 0.011455749 ubox
56 62 0.004495680 ubox
57 61 0.004214392 ubox
59 66 0.006690529 ubox
59 77 0.003854824 ubox
60 65 0.006356901 ubox
60 69 0.009644512 ubox
61 68 0.010462348 ubox
61 74 0.005615878 ubox
62 73 0.010561722 ubox
63 68 0.003744124 ubox
63 75 0.011567024 ubox
63 76 0.699967181 ubox
63 77 0.067437171 ubox
64 74 0.005973034 ubox
64 75 0.760597617 ubox
64 76 0.081395736 ubox
64 77 0.006155060 ubox
65 74 0.952924989 ubox
65 75 0.067918051 ubox
65 77 0.007480283 ubox
66 73 0.957122144 ubox
67 72 0.895422978 ubox
69 75 0.007036218 ubox
69 76 0.016099838 ubox
69 77 0.059092574 ubox
69 81 0.006845612 ubox
69 82 0.044283364 ubox
70 74 0.007061644 ubox
70 75 0.016027371 ubox
70 76 0.073027761 ubox
70 77 0.007210944 ubox
70 78 0.004285066 ubox
70 80 0.007271867 ubox
70 81 0.054771289 ubox
71 75 0.073747759 ubox
71 77 0.055617060 ubox
71 78 0.004357270 ubox
71 79 0.007573601 ubox
71 80 0.055778889 ubox
71 82 0.025182956 ubox
72 76 0.050269973 ubox
72 77 0.007265439 ubox
72 78 0.007484685 ubox
72 79 0.055710159 ubox
72 81 0.025257895 ubox
73 77 0.015451788 ubox
73 78 0.055822079 ubox
73 80 0.025246940 ubox
82 96 0.009887546 ubox
83 95 0.009837952 ubox
83 96 0.998108774 ubox
84 94 0.008473530 ubox
84 95 0.999918577 ubox
84 96 0.005942705 ubox
85 93 0.006828010 ubox
85 94 0.999945520 ubox
85 95 0.004893489 ubox
86 93 0.999961673 ubox
86 94 0.003523672 ubox
87 92 0.999587809 ubox
108 119 0.006602855 ubox
109 118 0.006702927 ubox
110 117 0.006705889 ubox
111 116 0.006555831 ubox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
11 118 0.9500000 lbox
12 117 0.9500000 lbox
13 116 0.9500000 lbox
14 115 0.9500000 lbox
15 114 0.9500000 lbox
16 111 0.9500000 lbox
17 110 0.9500000 lbox
18 109 0.9500000 lbox
19 108 0.9500000 lbox
20 107 0.9500000 lbox
21 105 0.9500000 lbox
22 104 0.9500000 lbox
23 103 0.9500000 lbox
24 102 0.9500000 lbox
25 101 0.9500000 lbox
29 100 0.9500000 lbox
30 99 0.9500000 lbox
31 98 0.9500000 lbox
32 97 0.9500000 lbox
33 82 0.9500000 lbox
34 81 0.9500000 lbox
35 80 0.9500000 lbox
36 79 0.9500000 lbox
37 78 0.9500000 lbox
43 61 0.9500000 lbox
44 60 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
49 55 0.9500000 lbox
50 54 0.9500000 lbox
63 76 0.9500000 lbox
64 75 0.9500000 lbox
65 74 0.9500000 lbox
66 73 0.9500000 lbox
67 72 0.9500000 lbox
83 96 0.9500000 lbox
84 95 0.9500000 lbox
85 94 0.9500000 lbox
86 93 0.9500000 lbox
87 92 0.9500000 lbox
showpage
end
%%EOF
