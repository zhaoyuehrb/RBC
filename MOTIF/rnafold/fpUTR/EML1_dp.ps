%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EML1)
} def

/sequence { (\
AGCUCAGUGUGUGGUGAGCGGCGGCGGCGCGGCCGGGCCGGGGAGCGGGCGCGGCCCGGCGGCCUCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.003872601 ubox
2 10 0.003632332 ubox
2 15 0.007220572 ubox
2 19 0.998398183 ubox
2 22 0.010654767 ubox
2 69 0.005104314 ubox
3 9 0.003821556 ubox
3 14 0.007605605 ubox
3 18 0.999715586 ubox
3 21 0.010208610 ubox
3 68 0.005100484 ubox
4 13 0.005030364 ubox
4 14 0.006035017 ubox
4 17 0.999665204 ubox
4 20 0.007447986 ubox
4 67 0.004680062 ubox
5 11 0.003590350 ubox
5 13 0.011076580 ubox
5 16 0.999788322 ubox
6 10 0.003226772 ubox
6 12 0.013287466 ubox
6 15 0.993512058 ubox
7 15 0.010824670 ubox
7 19 0.004844995 ubox
7 22 0.003667458 ubox
7 30 0.003247360 ubox
8 14 0.120646613 ubox
8 18 0.004818545 ubox
8 21 0.003369102 ubox
8 29 0.003250601 ubox
9 15 0.003590269 ubox
9 19 0.004203857 ubox
9 28 0.003526347 ubox
10 14 0.009831931 ubox
10 18 0.004181337 ubox
10 20 0.003525574 ubox
11 19 0.005271205 ubox
11 25 0.004666877 ubox
11 28 0.003206437 ubox
12 18 0.005238228 ubox
12 24 0.004668761 ubox
12 27 0.003195759 ubox
14 22 0.005166957 ubox
14 25 0.003198019 ubox
15 21 0.005141511 ubox
16 66 0.003364624 ubox
17 65 0.003280385 ubox
18 69 0.016551445 ubox
19 68 0.021349374 ubox
20 25 0.007849247 ubox
20 30 0.004682121 ubox
20 34 0.006831156 ubox
20 39 0.005443685 ubox
20 64 0.362640883 ubox
20 65 0.018621613 ubox
20 66 0.606454330 ubox
21 28 0.044676963 ubox
21 30 0.042003349 ubox
21 33 0.006838147 ubox
21 38 0.005449014 ubox
21 63 0.363080328 ubox
21 64 0.011324177 ubox
21 65 0.599758341 ubox
21 69 0.259710062 ubox
22 27 0.044743430 ubox
22 29 0.042085743 ubox
22 32 0.006830258 ubox
22 35 0.003322508 ubox
22 37 0.005413576 ubox
22 61 0.012539997 ubox
22 62 0.362083429 ubox
22 68 0.262528306 ubox
23 28 0.041969828 ubox
23 34 0.005570167 ubox
23 60 0.017494625 ubox
23 64 0.923517445 ubox
23 65 0.008768622 ubox
23 66 0.040729112 ubox
24 30 0.007472660 ubox
24 33 0.005575541 ubox
24 60 0.268809056 ubox
24 63 0.924368831 ubox
24 64 0.007825775 ubox
24 65 0.038867947 ubox
24 69 0.039908888 ubox
25 29 0.007423759 ubox
25 32 0.005568363 ubox
25 35 0.006532065 ubox
25 58 0.021965962 ubox
25 59 0.267462685 ubox
25 61 0.281110411 ubox
25 62 0.911827550 ubox
25 68 0.040334117 ubox
26 34 0.006717924 ubox
26 56 0.004949385 ubox
26 57 0.025496849 ubox
26 60 0.322356679 ubox
26 64 0.069231065 ubox
26 65 0.048116016 ubox
26 66 0.038917269 ubox
27 33 0.006726765 ubox
27 55 0.005142809 ubox
27 56 0.018239381 ubox
27 60 0.898894849 ubox
27 63 0.069180287 ubox
27 64 0.052027327 ubox
27 65 0.036130758 ubox
27 69 0.004450230 ubox
28 32 0.006677915 ubox
28 53 0.004663642 ubox
28 54 0.003794269 ubox
28 58 0.444122582 ubox
28 59 0.884387544 ubox
28 61 0.027324204 ubox
28 62 0.066471289 ubox
28 68 0.004501331 ubox
29 52 0.005992715 ubox
29 57 0.475868956 ubox
29 60 0.033260261 ubox
29 63 0.080805407 ubox
29 69 0.003421570 ubox
30 51 0.006000050 ubox
30 58 0.281975142 ubox
30 59 0.032238003 ubox
30 61 0.056686005 ubox
30 62 0.080936492 ubox
30 68 0.003445274 ubox
31 50 0.005972069 ubox
31 56 0.965873848 ubox
31 57 0.231165085 ubox
31 60 0.040239205 ubox
31 64 0.042377241 ubox
32 55 0.980090095 ubox
32 56 0.163463088 ubox
32 60 0.095335224 ubox
32 63 0.042429710 ubox
33 48 0.005946185 ubox
33 54 0.993629459 ubox
33 59 0.103522890 ubox
33 62 0.042427455 ubox
34 47 0.005945725 ubox
34 53 0.993615602 ubox
34 58 0.103539284 ubox
34 61 0.042238714 ubox
35 46 0.005800661 ubox
35 52 0.993393203 ubox
35 57 0.103550689 ubox
35 60 0.017164931 ubox
35 65 0.004696851 ubox
36 56 0.103553742 ubox
36 64 0.005600673 ubox
37 50 0.993355642 ubox
37 55 0.103553765 ubox
37 60 0.039347663 ubox
37 63 0.005595925 ubox
38 48 0.215188720 ubox
38 49 0.970048311 ubox
38 54 0.103552974 ubox
38 59 0.043048399 ubox
38 62 0.005590071 ubox
39 47 0.303760353 ubox
39 48 0.945998928 ubox
39 53 0.103544991 ubox
39 58 0.043085386 ubox
39 61 0.005578503 ubox
40 46 0.371114570 ubox
40 52 0.102643623 ubox
40 57 0.043084895 ubox
40 60 0.005364787 ubox
40 66 0.005499515 ubox
41 56 0.043079433 ubox
41 65 0.005503579 ubox
42 55 0.043057842 ubox
42 64 0.005513912 ubox
43 55 0.003252612 ubox
43 63 0.005508977 ubox
45 52 0.044421095 ubox
45 60 0.004674263 ubox
46 51 0.044659421 ubox
46 53 0.004942655 ubox
46 58 0.006082898 ubox
46 59 0.003325711 ubox
47 52 0.005069740 ubox
47 57 0.006986467 ubox
48 56 0.006992868 ubox
49 55 0.006993422 ubox
50 54 0.006943311 ubox
62 69 0.005229302 ubox
63 68 0.005277509 ubox
2 19 0.9500000 lbox
3 18 0.9500000 lbox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
23 64 0.9500000 lbox
24 63 0.9500000 lbox
25 62 0.9500000 lbox
27 60 0.9500000 lbox
28 59 0.9500000 lbox
31 56 0.9500000 lbox
32 55 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
showpage
end
%%EOF
