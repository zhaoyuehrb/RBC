%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUGCUUCCUGUGCCGGGGGAGGUGGGUACAGGGAAGUCUCGCCUGUUGGAACUGGCUGUGGGGCUGCGGCGGUGGGGACGGGCCACGGCGUUCUGUGACAUCCCCCCGCCUCCCCUCGUCUUCUCCCGGCUGGCGGCGACCGGCCUCAGCUGCAGCGGGCCCGGGGCGUGGGGCCUGGGUUUUUUGUGACAUCGUAAAC\
) } def
/len { sequence length } bind def

/coor [
[317.54086304 377.76309204]
[328.69259644 367.73120117]
[341.89691162 360.61459351]
[356.40777588 356.81527710]
[371.40539551 356.54791260]
[386.03948975 359.82656860]
[374.45816040 350.29385376]
[362.87683105 340.76113892]
[348.13305664 338.64666748]
[342.39526367 323.90258789]
[330.81393433 314.36987305]
[320.76550293 316.26788330]
[311.13018799 312.23379517]
[305.18630981 303.37823486]
[305.09918213 292.49353027]
[293.81842041 282.60696411]
[282.53762817 272.72042847]
[271.25683594 262.83386230]
[259.97604370 252.94731140]
[248.69526672 243.06076050]
[237.41448975 233.17420959]
[226.13369751 223.28765869]
[214.85290527 213.40110779]
[203.57212830 203.51455688]
[192.29133606 193.62800598]
[180.93438721 183.82904053]
[169.50196838 174.11825562]
[158.06953430 164.40745544]
[146.63710022 154.69667053]
[143.82945251 154.79328918]
[140.81430054 153.77999878]
[138.01554871 151.57209778]
[135.87986755 148.24032593]
[134.82200623 144.01408386]
[124.01222229 133.61463928]
[113.20243835 123.21518707]
[102.39264679 112.81574249]
[88.68318176 106.72882843]
[73.71954346 105.68505859]
[58.75590134 104.64128113]
[43.79225922 103.59751129]
[28.82861900 102.55373383]
[13.86497879 101.50995636]
[-1.09866190 100.46618652]
[-16.06230164 99.42240906]
[-26.29334641 107.28350067]
[-38.73886490 106.10220337]
[-46.77493668 97.05536652]
[-61.72063446 95.78015137]
[-76.66632843 94.50493622]
[-88.58821869 104.88010406]
[-104.34861755 103.70307922]
[-114.59716034 91.67216492]
[-113.25357056 75.92508698]
[-101.11497498 65.80431366]
[-85.38298798 67.31432343]
[-75.39111328 79.55924225]
[-60.44541931 80.83445740]
[-45.49972153 82.10967255]
[-30.03931808 73.81224823]
[-15.01852798 84.45877075]
[-0.05488784 85.50254822]
[14.90875244 86.54631805]
[29.87239265 87.59009552]
[44.83603287 88.63386536]
[59.79967499 89.67764282]
[74.76331329 90.72141266]
[89.72695160 91.76519012]
[94.40312958 85.90145111]
[103.75547791 74.17398071]
[108.43164825 68.31024170]
[104.08432007 53.95403671]
[99.73699188 39.59782791]
[95.38966370 25.24161720]
[91.04233551 10.88540840]
[85.55669403 3.57340217]
[86.74066925 -3.72669554]
[82.61602783 -18.14846039]
[78.49138641 -32.57022858]
[74.36674500 -46.99199295]
[70.24210358 -61.41375732]
[58.02903748 -64.11412048]
[48.18167877 -71.70882416]
[42.53301620 -82.70663452]
[42.10136795 -94.99047852]
[46.90735626 -106.22489166]
[55.98161316 -114.30003357]
[52.30525589 -128.84252930]
[48.62889481 -143.38504028]
[44.95253372 -157.92753601]
[41.27617264 -172.47004700]
[29.46411896 -183.84577942]
[33.67186356 -199.69592285]
[49.57083893 -203.71519470]
[60.80554199 -191.76892090]
[55.81867599 -176.14640808]
[59.49503708 -161.60389709]
[63.17139816 -147.06140137]
[66.84775543 -132.51889038]
[70.52411652 -117.97639465]
[87.20323181 -112.18840027]
[97.16070557 -97.41961670]
[96.25644684 -79.47317505]
[84.66387177 -65.53839874]
[88.78851318 -51.11663437]
[92.91315460 -36.69487000]
[97.03779602 -22.27310371]
[101.16243744 -7.85133743]
[105.39854431 6.53808117]
[109.74587250 20.89429092]
[114.09320068 35.25049973]
[118.44052887 49.60670853]
[122.78785706 63.96291733]
[112.79209900 102.00595093]
[123.60188293 112.40540314]
[134.41166687 122.80484772]
[145.22145081 133.20429993]
[156.34790039 143.26423645]
[167.78031921 152.97502136]
[179.21275330 162.68582153]
[190.64518738 172.39662170]
[199.21765137 175.57005310]
[202.17788696 182.34722900]
[213.45867920 192.23377991]
[224.73945618 202.12033081]
[236.02024841 212.00688171]
[247.30104065 221.89343262]
[258.58181763 231.77998352]
[269.86260986 241.66653442]
[281.14340210 251.55308533]
[292.42416382 261.43963623]
[303.70495605 271.32617188]
[314.98574829 281.21273804]
[334.91201782 284.23565674]
[340.34664917 302.78854370]
[351.92797852 312.32125854]
[367.50012207 315.11755371]
[372.40954590 329.17980957]
[383.99087524 338.71252441]
[395.57220459 348.24523926]
[408.71456909 355.47561646]
[422.96600342 360.15499878]
[437.21743774 364.83438110]
[451.46887207 369.51376343]
[465.79101562 373.97204590]
[480.18041992 378.20816040]
[494.56985474 382.44427490]
[508.95925903 386.68038940]
[523.34869385 390.91650391]
[537.73809814 395.15261841]
[552.12750244 399.38873291]
[558.64294434 398.20635986]
[563.97442627 400.19723511]
[566.89294434 403.98498535]
[581.14434814 408.66436768]
[595.39581299 413.34378052]
[609.37200928 406.46597290]
[623.75830078 411.41458130]
[630.22912598 424.78109741]
[644.48052979 429.46051025]
[660.41217041 425.57281494]
[671.54772949 437.61157227]
[666.43188477 453.19232178]
[650.32739258 456.28692627]
[639.80114746 443.71194458]
[625.54968262 439.03253174]
[612.41491699 445.96170044]
[597.89526367 441.41915894]
[590.71643066 427.59521484]
[576.46496582 422.91580200]
[562.21356201 418.23641968]
[547.89141846 413.77813721]
[533.50201416 409.54202271]
[519.11254883 405.30590820]
[504.72314453 401.06982422]
[490.33374023 396.83370972]
[475.94430542 392.59759521]
[461.55490112 388.36148071]
[457.00219727 389.82354736]
[451.48266602 388.43664551]
[446.78948975 383.76519775]
[432.53805542 379.08581543]
[418.28662109 374.40643311]
[404.03518677 369.72705078]
[414.64016724 380.33526611]
[422.44198608 393.14663696]
[426.99987793 407.43740845]
[428.05633545 422.40014648]
[425.55163574 437.18954468]
[419.62734985 450.97006226]
[410.61813354 462.96313477]
[399.03298950 472.49121094]
[385.52639771 479.01599121]
[370.86151123 482.16885376]
[355.86676025 481.77163696]
[341.38934326 477.84680176]
[328.24716187 470.61611938]
[317.18267822 460.48803711]
[308.82104492 448.03482056]
[303.63464355 433.95996094]
[301.91647339 419.05868530]
[303.76361084 404.17285156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 140]
[7 139]
[8 138]
[10 136]
[11 135]
[15 133]
[16 132]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
[22 126]
[23 125]
[24 124]
[25 123]
[26 121]
[27 120]
[28 119]
[29 118]
[34 117]
[35 116]
[36 115]
[37 114]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 61]
[48 59]
[49 58]
[50 57]
[71 113]
[72 112]
[73 111]
[74 110]
[75 109]
[77 108]
[78 107]
[79 106]
[80 105]
[81 104]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[141 184]
[142 183]
[143 182]
[144 181]
[145 178]
[146 177]
[147 176]
[148 175]
[149 174]
[150 173]
[151 172]
[154 171]
[155 170]
[156 169]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
