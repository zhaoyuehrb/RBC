%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACUUUGGCAGGAAGCUGUUGCCAGGGCAGCACCUGUGAAGCCCUGGCCUGGCUUCAGAGUCUGCUGGUGAGAUGACAUCAAAACCCUUCGUGUAGGAGGGUGGCAGUCUCCCUCCCUUCUGGAGACACCACCAGAUGGGCCAGCCAGAGGCAGCAGCAGCCUCUUCCC\
) } def
/len { sequence length } bind def

/coor [
[90.85573578 374.21258545]
[79.55497742 384.71478271]
[64.36622620 387.41766357]
[50.13616943 381.45870972]
[41.40555954 368.73944092]
[40.96030807 353.31848145]
[48.94248581 340.11666870]
[62.80501556 333.34658813]
[64.45513916 318.43762207]
[62.05644989 311.41671753]
[66.27497101 303.27084351]
[68.19870758 288.39471436]
[70.12244415 273.51858521]
[72.04618073 258.64245605]
[66.00503540 245.02798462]
[75.44829559 232.33407593]
[77.37203217 217.45794678]
[79.29576874 202.58181763]
[81.21950531 187.70568848]
[83.14323425 172.82955933]
[85.06697083 157.95343018]
[86.99070740 143.07730103]
[88.91444397 128.20117188]
[76.74687195 119.42903900]
[63.24089432 125.95502472]
[49.73491287 132.48100281]
[36.22893143 139.00698853]
[31.26601601 154.01182556]
[17.10934639 161.03779602]
[2.15782261 155.91651917]
[-4.71808100 141.68635559]
[0.56098676 126.78981018]
[14.86304855 120.06474304]
[29.70294571 125.50101471]
[43.20892715 118.97502899]
[56.71490860 112.44904327]
[70.22088623 105.92305756]
[71.71207428 94.95718384]
[76.88021851 85.85166168]
[84.60454559 79.70105743]
[93.49822235 77.05516052]
[102.14363098 77.88394928]
[108.54528046 64.31859589]
[114.94692230 50.75323486]
[121.22369385 37.12964630]
[127.37505341 23.44897461]
[133.52641296 9.76830196]
[139.67776489 -3.91236997]
[145.82913208 -17.59304237]
[146.50106812 -26.74179268]
[152.22120667 -31.46691895]
[158.62286377 -45.03227615]
[165.02450562 -58.59763336]
[171.42614746 -72.16299438]
[177.82780457 -85.72834778]
[184.22944641 -99.29370880]
[183.69981384 -103.69072723]
[184.53506470 -107.62171173]
[186.41499329 -110.70977783]
[188.92889404 -112.72339630]
[191.63172913 -113.59345245]
[199.01208496 -126.65217590]
[206.39244080 -139.71090698]
[213.77279663 -152.76962280]
[221.15315247 -165.82835388]
[221.20721436 -181.64947510]
[234.20529175 -188.92266846]
[241.58564758 -201.98138428]
[248.96600342 -215.04011536]
[256.34634399 -228.09884644]
[263.72671509 -241.15757751]
[261.31234741 -260.89251709]
[276.63299561 -272.40139771]
[280.44869995 -286.90795898]
[279.60562134 -296.04254150]
[284.47003174 -301.64471436]
[288.55157471 -316.07873535]
[292.63314819 -330.51275635]
[282.76019287 -338.90267944]
[276.82714844 -350.36801147]
[275.68850708 -363.18020630]
[279.47900391 -375.42269897]
[287.59860229 -385.27767944]
[298.80734253 -391.29592896]
[311.41448975 -392.60998535]
[316.02352905 -406.88433838]
[320.63256836 -421.15866089]
[325.24160767 -435.43301392]
[329.85064697 -449.70736694]
[334.45968628 -463.98168945]
[339.06872559 -478.25604248]
[333.06845093 -493.13473511]
[341.08511353 -507.03125000]
[356.96902466 -509.28530884]
[368.53540039 -498.16781616]
[366.91149902 -482.20718384]
[353.34304810 -473.64700317]
[348.73400879 -459.37265015]
[344.12496948 -445.09832764]
[339.51593018 -430.82397461]
[334.90689087 -416.54962158]
[330.29785156 -402.27529907]
[325.68884277 -388.00094604]
[337.67755127 -375.68710327]
[341.82180786 -358.91671753]
[336.89840698 -342.26568604]
[324.17095947 -330.32418823]
[307.06716919 -326.43121338]
[302.98559570 -311.99719238]
[298.90405273 -297.56317139]
[294.95526123 -283.09228516]
[291.13955688 -268.58569336]
[292.48306274 -267.41903687]
[293.71017456 -266.13052368]
[308.02624512 -270.60824585]
[322.34234619 -275.08596802]
[336.65841675 -279.56369019]
[345.34286499 -293.05294800]
[361.31774902 -294.53015137]
[372.32852173 -282.86215210]
[369.92864990 -266.99960327]
[355.95910645 -259.11093140]
[341.13613892 -265.24761963]
[326.82006836 -260.76989746]
[312.50396729 -256.29217529]
[298.18789673 -251.81445312]
[291.53427124 -238.46495056]
[276.78543091 -233.77722168]
[269.40509033 -220.71849060]
[262.02471924 -207.65975952]
[254.64437866 -194.60102844]
[247.26400757 -181.54231262]
[247.73785400 -166.65524292]
[234.21188354 -158.44799805]
[226.83152771 -145.38926697]
[219.45117188 -132.33055115]
[212.07081604 -119.27182007]
[204.69046021 -106.21308899]
[197.79479980 -92.89205933]
[191.39315796 -79.32669830]
[184.99150085 -65.76134491]
[178.58985901 -52.19598770]
[172.18821716 -38.63063049]
[165.78657532 -25.06527138]
[159.50979614 -11.44168282]
[153.35844421 2.23898911]
[147.20707703 15.91966057]
[141.05572510 29.60033226]
[134.90435791 43.28100586]
[135.02969360 50.69930649]
[128.51228333 57.15488052]
[122.11063385 70.72023773]
[115.70899200 84.28559875]
[124.87223053 108.52012634]
[103.79057312 130.12490845]
[101.86683655 145.00103760]
[99.94309998 159.87716675]
[98.01936340 174.75329590]
[96.09563446 189.62942505]
[94.17189789 204.50555420]
[92.24816132 219.38168335]
[90.32442474 234.25781250]
[96.22797394 248.93632507]
[86.92230988 260.56619263]
[84.99857330 275.44232178]
[83.07483673 290.31845093]
[81.15110016 305.19458008]
[79.36409760 320.08776855]
[77.71397400 334.99670410]
[89.76049042 344.63439941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 169]
[9 168]
[11 167]
[12 166]
[13 165]
[14 164]
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[24 37]
[25 36]
[26 35]
[27 34]
[42 153]
[43 152]
[44 151]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[73 112]
[74 111]
[76 110]
[77 109]
[78 108]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[114 126]
[115 125]
[116 124]
[117 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
