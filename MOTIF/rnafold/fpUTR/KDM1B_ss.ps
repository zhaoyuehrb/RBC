%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCUGUCGGCUCCUCCCACCCCGGGUCACGCCGUGACAGGGGCGGAAGCGGCGGCGGCGGCGGCGGCCGAGAAGAGGCUGGGGCUCGCGGCGCGGCUGCAGCCGUCCUGUGCGCGCGGCGCGCGGCUCCGGAGAGGCGCCCGCAGUCCAGGGCGGCGCGCACCGCCUCGCUGGCGCUCAGAGCGGUGCCUUUUCCCCGAGACUCCCGGCACCUCUUCAGCGCAAAGAUUAUUUAAUGUA\
) } def
/len { sequence length } bind def

/coor [
[86.38716888 172.04614258]
[83.91551208 157.25119019]
[84.62670135 142.26805115]
[88.48860931 127.77372742]
[95.32756042 114.42182922]
[84.25014496 124.53572845]
[73.17272949 134.64962769]
[62.09531784 144.76351929]
[51.01790619 154.87741089]
[39.94049072 164.99131775]
[35.72483444 173.07073975]
[28.65301132 175.16345215]
[17.44523811 185.13270569]
[12.27629280 200.08570862]
[-2.37566757 202.76327515]
[-13.58344078 212.73251343]
[-18.75238419 227.68553162]
[-33.40434647 230.36308289]
[-44.61211777 240.33232117]
[-49.78106308 255.28533936]
[-64.43302155 257.96289062]
[-75.64079285 267.93212891]
[-86.84857178 277.90139771]
[-98.05634308 287.87063599]
[-99.58273315 300.66442871]
[-109.10540771 308.73715210]
[-121.17623901 308.18420410]
[-132.51248169 318.00711060]
[-143.84872437 327.83001709]
[-155.18496704 337.65295410]
[-166.52120972 347.47586060]
[-174.53211975 362.41778564]
[-191.10777283 358.85629272]
[-192.27404785 341.94250488]
[-176.34413147 336.13961792]
[-165.00788879 326.31671143]
[-153.67163086 316.49377441]
[-142.33538818 306.67086792]
[-130.99914551 296.84796143]
[-126.14952087 279.97317505]
[-108.02558899 276.66287231]
[-96.81781006 266.69360352]
[-85.61003876 256.72436523]
[-74.40226746 246.75512695]
[-70.03498077 232.51518250]
[-54.58136368 229.12455750]
[-43.37358856 219.15530396]
[-39.00630188 204.91535950]
[-23.55268478 201.52473450]
[-12.34491158 191.55549622]
[-7.97762203 177.31555176]
[7.47599363 173.92492676]
[18.68376732 163.95568848]
[29.82659531 153.91389465]
[40.90400696 143.80000305]
[51.98142242 133.68611145]
[63.05883408 123.57221222]
[74.13624573 113.45831299]
[85.21366119 103.34441376]
[80.70823669 89.03703308]
[65.83444977 87.09523010]
[50.96067047 85.15342712]
[36.08688736 83.21162415]
[21.15869904 89.99993896]
[7.97487593 80.24705505]
[10.09780407 63.98589706]
[25.34359741 57.94455719]
[38.02869034 68.33784485]
[52.90247345 70.27964783]
[67.77625275 72.22145081]
[82.65003967 74.16325378]
[92.52326965 80.12159729]
[98.54888916 88.73879242]
[107.61580658 76.78927612]
[116.68272400 64.83975220]
[125.74964142 52.89023590]
[134.81655884 40.94071960]
[143.88348389 28.99119949]
[152.79450989 16.92498589]
[161.54815674 4.74411249]
[170.30180359 -7.43676186]
[179.05545044 -19.61763573]
[187.80909729 -31.79850960]
[196.56274414 -43.97938538]
[205.31637573 -56.16025925]
[213.91116333 -68.45374298]
[222.34564209 -80.85775757]
[230.78010559 -93.26177979]
[230.91473389 -137.65049744]
[234.57714844 -152.19651794]
[238.23954773 -166.74253845]
[241.90196228 -181.28857422]
[237.76829529 -196.56021118]
[248.37892151 -207.01315308]
[252.04132080 -221.55917358]
[255.70373535 -236.10519409]
[259.36614990 -250.65121460]
[258.42675781 -259.71578979]
[263.17166138 -265.36169434]
[267.02258301 -279.85894775]
[270.87350464 -294.35620117]
[265.66372681 -312.02801514]
[278.54415894 -323.95999146]
[282.20654297 -338.50601196]
[285.86895752 -353.05203247]
[289.53137207 -367.59805298]
[293.19378662 -382.14407349]
[296.85620117 -396.69009399]
[300.51858521 -411.23611450]
[304.18099976 -425.78213501]
[307.84341431 -440.32815552]
[303.70974731 -455.59982300]
[314.32037354 -466.05273438]
[317.98278809 -480.59875488]
[312.05105591 -492.03671265]
[315.38641357 -504.06689453]
[325.67913818 -510.39703369]
[329.53005981 -524.89428711]
[333.38098145 -539.39154053]
[337.23193359 -553.88879395]
[336.41027832 -562.96478271]
[341.22808838 -568.54864502]
[345.26687622 -582.99468994]
[349.30566406 -597.44073486]
[353.34448242 -611.88671875]
[352.08160400 -618.34228516]
[353.97109985 -623.67425537]
[357.68017578 -626.65283203]
[362.09265137 -640.98913574]
[366.50512695 -655.32543945]
[362.32061768 -671.18176270]
[374.14935303 -682.54016113]
[389.82290649 -677.71612549]
[393.21771240 -661.67218018]
[380.84143066 -650.91296387]
[376.42898560 -636.57666016]
[372.01651001 -622.24035645]
[367.79052734 -607.84796143]
[363.75170898 -593.40191650]
[359.71292114 -578.95587158]
[355.67413330 -564.50982666]
[351.72918701 -550.03790283]
[347.87823486 -535.54064941]
[344.02731323 -521.04339600]
[340.17639160 -506.54611206]
[345.65472412 -489.86483765]
[332.52880859 -476.93637085]
[328.86639404 -462.39035034]
[333.26202393 -448.15911865]
[322.38943481 -436.66574097]
[318.72702026 -422.11972046]
[315.06463623 -407.57369995]
[311.40222168 -393.02767944]
[307.73980713 -378.48165894]
[304.07739258 -363.93563843]
[300.41497803 -349.38961792]
[296.75259399 -334.84359741]
[293.09017944 -320.29757690]
[299.02194214 -309.77023315]
[296.10501099 -297.63180542]
[285.37075806 -290.50524902]
[281.51983643 -276.00799561]
[277.66891479 -261.51074219]
[273.91217041 -246.98881531]
[270.24975586 -232.44279480]
[266.58734131 -217.89677429]
[262.92492676 -203.35073853]
[267.32058716 -189.11952209]
[256.44799805 -177.62615967]
[252.78558350 -163.08013916]
[249.12316895 -148.53411865]
[245.46075439 -133.98809814]
[254.52809143 -122.03804779]
[263.59460449 -110.08905792]
[278.58953857 -109.69964600]
[293.58447266 -109.31023407]
[308.57943726 -108.92082214]
[323.57437134 -108.53141785]
[338.56930542 -108.14200592]
[349.85699463 -119.20383453]
[365.65939331 -118.96060944]
[376.60128784 -107.55661774]
[376.19097900 -91.75765228]
[364.67193604 -80.93696594]
[348.87820435 -81.51426697]
[338.17990112 -93.14706421]
[323.18496704 -93.53646851]
[308.19003296 -93.92588043]
[293.19506836 -94.31529236]
[278.20013428 -94.70469666]
[263.20520020 -95.09410858]
[277.61648560 -90.93309021]
[287.19970703 -79.39350128]
[288.64312744 -64.46311188]
[281.44793701 -51.30145264]
[268.10061646 -44.45682526]
[253.21362305 -46.29454803]
[241.93148804 -56.17955399]
[238.15299988 -70.69586182]
[243.18412781 -84.82730865]
[234.74964905 -72.42328644]
[226.31518555 -60.01926804]
[226.30786133 -55.26228714]
[223.32612610 -50.45503616]
[217.49725342 -47.40661240]
[208.74360657 -35.22573853]
[199.98995972 -23.04486465]
[191.23632812 -10.86399078]
[182.48268127 1.31688344]
[173.72903442 13.49775791]
[164.97538757 25.67863083]
[164.84457397 30.43381882]
[161.73904419 35.16204071]
[155.83299255 38.05811691]
[146.76608276 50.00763702]
[137.69915771 61.95715332]
[128.63224792 73.90666962]
[119.56532288 85.85619354]
[110.49840546 97.80570984]
[123.17325592 89.78398132]
[137.25721741 84.62239075]
[152.11395264 82.55413818]
[167.07218933 83.67268372]
[181.45608521 87.92747498]
[194.61576843 95.12628937]
[205.95663452 104.94385529]
[214.96629333 116.93659973]
[221.23767090 130.56266785]
[224.48741150 145.20642090]
[224.56869507 160.20619202]
[221.47782898 174.88429260]
[215.35447693 188.57751465]
[206.47529602 200.66719055]
[195.24148560 210.60708618]
[182.16058350 217.94807434]
[167.82362366 222.35848999]
[152.87838745 223.63905334]
[138.00012207 221.73191833]
[123.86105347 216.72325134]
[111.10002136 208.83934021]
[100.29358673 198.43640137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 59]
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[12 53]
[13 52]
[15 50]
[16 49]
[18 47]
[19 46]
[21 44]
[22 43]
[23 42]
[24 41]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[60 71]
[61 70]
[62 69]
[63 68]
[73 219]
[74 218]
[75 217]
[76 216]
[77 215]
[78 214]
[79 211]
[80 210]
[81 209]
[82 208]
[83 207]
[84 206]
[85 205]
[86 202]
[87 201]
[88 200]
[89 172]
[90 171]
[91 170]
[92 169]
[94 167]
[95 166]
[96 165]
[97 164]
[99 163]
[100 162]
[101 161]
[103 158]
[104 157]
[105 156]
[106 155]
[107 154]
[108 153]
[109 152]
[110 151]
[111 150]
[113 148]
[114 147]
[117 145]
[118 144]
[119 143]
[120 142]
[122 141]
[123 140]
[124 139]
[125 138]
[128 137]
[129 136]
[130 135]
[174 191]
[175 190]
[176 189]
[177 188]
[178 187]
[179 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
