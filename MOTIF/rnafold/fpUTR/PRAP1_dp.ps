%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRAP1)
} def

/sequence { (\
AGCUGGGCCGGGUGCCAGAUACUGGGAUCAGCCACUGCAGCUCCCUGAGCACUCUCUACAGAGACGCGGACCCCAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.003551561 ubox
1 42 0.043487535 ubox
2 32 0.072860080 ubox
2 35 0.003879228 ubox
2 38 0.022775706 ubox
2 41 0.055377955 ubox
2 67 0.008560635 ubox
3 18 0.043843435 ubox
3 31 0.073032913 ubox
3 37 0.022760150 ubox
3 40 0.055431058 ubox
3 66 0.008537703 ubox
3 69 0.006662015 ubox
3 76 0.978831410 ubox
4 17 0.043966490 ubox
4 30 0.073012717 ubox
4 34 0.012755092 ubox
4 39 0.055413275 ubox
4 68 0.006674342 ubox
4 75 0.982559558 ubox
5 16 0.043267091 ubox
5 29 0.072956705 ubox
5 33 0.012469591 ubox
5 38 0.055342273 ubox
5 67 0.006620613 ubox
5 72 0.010279725 ubox
5 73 0.300309852 ubox
5 74 0.945773556 ubox
6 15 0.042498346 ubox
6 16 0.010485111 ubox
6 28 0.047862959 ubox
6 32 0.010319380 ubox
6 33 0.121812854 ubox
6 71 0.010402302 ubox
6 72 0.403770786 ubox
6 73 0.902449564 ubox
7 13 0.008806419 ubox
7 15 0.013226545 ubox
7 28 0.003681235 ubox
7 32 0.136941327 ubox
7 38 0.003220816 ubox
7 50 0.003982738 ubox
7 71 0.485474815 ubox
7 72 0.854438893 ubox
7 73 0.003232960 ubox
8 12 0.009270263 ubox
8 14 0.015456269 ubox
8 25 0.012109207 ubox
8 26 0.075232676 ubox
8 31 0.140952088 ubox
8 37 0.003446393 ubox
8 49 0.004267131 ubox
8 66 0.003473746 ubox
8 69 0.973069988 ubox
9 24 0.012230591 ubox
9 25 0.075336080 ubox
9 47 0.010577492 ubox
9 66 0.016804287 ubox
9 68 0.976870099 ubox
10 23 0.012123415 ubox
10 29 0.021039137 ubox
10 33 0.078716359 ubox
10 42 0.006883503 ubox
10 43 0.009999161 ubox
10 44 0.006178412 ubox
10 45 0.065213565 ubox
10 46 0.008394011 ubox
10 54 0.027190776 ubox
10 65 0.021755521 ubox
10 67 0.964904752 ubox
11 22 0.012009277 ubox
11 23 0.075444863 ubox
11 28 0.016913538 ubox
11 29 0.810959272 ubox
11 32 0.078819561 ubox
11 33 0.033915885 ubox
11 36 0.020825832 ubox
11 41 0.009206397 ubox
11 42 0.010274825 ubox
11 43 0.006213036 ubox
11 44 0.065610100 ubox
11 45 0.008537018 ubox
11 52 0.003381317 ubox
11 53 0.073661219 ubox
11 54 0.004999532 ubox
12 20 0.004936325 ubox
12 22 0.075803496 ubox
12 28 0.817011048 ubox
12 32 0.033752169 ubox
12 35 0.021879252 ubox
12 41 0.011495439 ubox
12 42 0.003479951 ubox
12 43 0.065522367 ubox
12 44 0.008422511 ubox
12 52 0.095274354 ubox
12 65 0.546371555 ubox
12 67 0.017629789 ubox
12 71 0.003264421 ubox
13 19 0.005759672 ubox
13 21 0.075518644 ubox
13 27 0.828120609 ubox
13 30 0.077527344 ubox
13 31 0.022471909 ubox
13 34 0.021978707 ubox
13 39 0.176381686 ubox
13 40 0.010459984 ubox
13 51 0.099680506 ubox
13 64 0.473880098 ubox
13 66 0.018270762 ubox
14 20 0.069945304 ubox
14 29 0.083509893 ubox
14 32 0.014486030 ubox
14 33 0.021708957 ubox
14 38 0.314287758 ubox
14 41 0.065617182 ubox
14 50 0.111859459 ubox
14 65 0.018269985 ubox
15 25 0.920546528 ubox
15 26 0.044279499 ubox
15 31 0.015221569 ubox
15 37 0.225943130 ubox
15 40 0.065416901 ubox
15 49 0.111855367 ubox
16 24 0.921801483 ubox
16 25 0.040669161 ubox
16 37 0.262895727 ubox
16 47 0.109874348 ubox
17 23 0.919738751 ubox
17 36 0.342408271 ubox
17 46 0.109335973 ubox
17 53 0.003423393 ubox
17 57 0.004066221 ubox
18 22 0.899608777 ubox
18 29 0.028555810 ubox
18 35 0.342628948 ubox
18 43 0.005272160 ubox
18 45 0.078866943 ubox
18 52 0.003719143 ubox
18 56 0.004210201 ubox
19 28 0.028588457 ubox
19 42 0.006392418 ubox
19 55 0.003985255 ubox
20 27 0.027593715 ubox
20 37 0.028963353 ubox
20 47 0.005300602 ubox
21 36 0.035819522 ubox
21 46 0.005349948 ubox
22 31 0.246260080 ubox
22 40 0.057551389 ubox
22 49 0.010333790 ubox
22 76 0.044189398 ubox
23 30 0.247015234 ubox
23 34 0.251177281 ubox
23 39 0.057460534 ubox
23 47 0.003530474 ubox
23 48 0.009726393 ubox
23 75 0.044454850 ubox
24 29 0.246347856 ubox
24 33 0.255583549 ubox
24 36 0.004634903 ubox
24 38 0.056911526 ubox
24 42 0.008217978 ubox
24 43 0.012526676 ubox
24 44 0.025308099 ubox
24 45 0.083684822 ubox
24 46 0.004819354 ubox
24 74 0.044486947 ubox
25 32 0.255447493 ubox
25 33 0.042212005 ubox
25 35 0.007418122 ubox
25 36 0.029676983 ubox
25 41 0.008557740 ubox
25 42 0.012585660 ubox
25 43 0.025152401 ubox
25 44 0.094133512 ubox
25 45 0.005801755 ubox
25 73 0.044461294 ubox
26 32 0.046374031 ubox
26 35 0.037689624 ubox
26 41 0.015461195 ubox
26 42 0.019253824 ubox
26 43 0.094266946 ubox
26 44 0.006195314 ubox
26 52 0.003334106 ubox
26 54 0.003251772 ubox
26 72 0.044379823 ubox
27 42 0.089560201 ubox
28 48 0.012268953 ubox
28 70 0.041839614 ubox
29 37 0.190600333 ubox
29 47 0.013161266 ubox
29 69 0.041894730 ubox
30 36 0.201398241 ubox
30 42 0.039309881 ubox
30 46 0.012804461 ubox
30 53 0.005002428 ubox
31 35 0.198090020 ubox
31 38 0.804782936 ubox
31 41 0.051914020 ubox
31 45 0.012217511 ubox
31 50 0.022339494 ubox
31 52 0.006401484 ubox
31 67 0.043062255 ubox
32 37 0.802018972 ubox
32 40 0.051922659 ubox
32 49 0.022043062 ubox
32 66 0.043338539 ubox
32 69 0.010685029 ubox
33 47 0.016414484 ubox
33 68 0.010678668 ubox
34 46 0.014961878 ubox
35 49 0.036514488 ubox
35 61 0.006863667 ubox
35 69 0.189044403 ubox
35 76 0.009595239 ubox
36 48 0.037292626 ubox
36 51 0.029859459 ubox
36 60 0.006899301 ubox
36 66 0.007038804 ubox
36 68 0.190199973 ubox
36 75 0.009641791 ubox
37 50 0.033002905 ubox
37 59 0.006888092 ubox
37 65 0.009764692 ubox
37 67 0.194005590 ubox
37 74 0.009563976 ubox
38 47 0.051193615 ubox
38 49 0.032162404 ubox
38 66 0.194036061 ubox
39 46 0.052832186 ubox
39 53 0.008370312 ubox
39 57 0.003826223 ubox
40 45 0.052262197 ubox
40 50 0.976472652 ubox
40 52 0.005106362 ubox
40 67 0.019036809 ubox
41 49 0.977529855 ubox
41 63 0.128620467 ubox
41 66 0.019752178 ubox
42 48 0.976826594 ubox
42 62 0.128580723 ubox
42 64 0.029282403 ubox
42 70 0.026416329 ubox
43 47 0.968630506 ubox
43 61 0.127880757 ubox
43 63 0.030899276 ubox
43 69 0.033219430 ubox
44 68 0.033159792 ubox
44 69 0.027268926 ubox
45 61 0.035644610 ubox
45 68 0.027361387 ubox
45 69 0.025362342 ubox
45 76 0.012352743 ubox
46 58 0.042473610 ubox
46 60 0.038452778 ubox
46 66 0.013558854 ubox
46 68 0.025248233 ubox
46 75 0.012369723 ubox
47 54 0.007467874 ubox
47 56 0.126139720 ubox
47 57 0.009127551 ubox
47 59 0.038330727 ubox
47 65 0.013922230 ubox
47 67 0.025017480 ubox
47 74 0.012109197 ubox
48 53 0.007059194 ubox
48 55 0.126259619 ubox
48 57 0.038437352 ubox
49 54 0.123493663 ubox
49 56 0.038178835 ubox
49 67 0.083098749 ubox
50 66 0.083715777 ubox
52 61 0.020070857 ubox
52 63 0.680168990 ubox
52 69 0.005120692 ubox
53 60 0.019074285 ubox
53 62 0.684305006 ubox
53 64 0.626576605 ubox
53 68 0.003773425 ubox
54 61 0.684581392 ubox
54 63 0.709392084 ubox
55 60 0.625626322 ubox
55 62 0.709573128 ubox
55 64 0.068032176 ubox
56 61 0.707027098 ubox
56 63 0.076232254 ubox
56 69 0.003264016 ubox
57 62 0.072636298 ubox
68 74 0.020048280 ubox
69 73 0.019801055 ubox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
7 72 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
18 22 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
