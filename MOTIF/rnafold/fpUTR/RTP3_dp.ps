%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RTP3)
} def

/sequence { (\
AUCUCCCACUACAGACCUGCCAGGGCCCAGGAGAGCUCGACCCACCCAGGCACACCAUAGCCCCAGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 15 0.342360201 ubox
2 31 0.003922505 ubox
2 32 0.008429526 ubox
2 34 0.198232970 ubox
2 40 0.003564203 ubox
2 67 0.437365068 ubox
3 14 0.374604752 ubox
3 30 0.006365631 ubox
3 31 0.008988747 ubox
3 33 0.211902504 ubox
3 35 0.041579794 ubox
3 39 0.003711439 ubox
3 60 0.006010298 ubox
3 66 0.467436588 ubox
3 68 0.304964514 ubox
4 13 0.369642451 ubox
4 15 0.138668430 ubox
4 22 0.003173994 ubox
4 29 0.006333614 ubox
4 30 0.008857924 ubox
4 32 0.211950404 ubox
4 34 0.042288808 ubox
4 40 0.005252609 ubox
4 59 0.005736292 ubox
4 65 0.450714490 ubox
4 67 0.314364687 ubox
5 14 0.150068768 ubox
5 25 0.017188666 ubox
5 31 0.211175528 ubox
5 33 0.042338881 ubox
5 39 0.005693928 ubox
5 66 0.314399063 ubox
6 24 0.017930601 ubox
6 25 0.014434976 ubox
6 30 0.208590198 ubox
6 31 0.041027004 ubox
7 19 0.014838478 ubox
7 23 0.018224909 ubox
7 24 0.019826855 ubox
7 30 0.043880344 ubox
8 18 0.013732355 ubox
9 23 0.025985634 ubox
9 24 0.039743654 ubox
9 25 0.023508461 ubox
9 30 0.025599389 ubox
9 31 0.010933101 ubox
9 33 0.006215284 ubox
9 35 0.009856896 ubox
9 60 0.547140139 ubox
9 66 0.011810751 ubox
9 68 0.027313467 ubox
10 19 0.009098481 ubox
10 22 0.025433603 ubox
10 23 0.039062409 ubox
10 24 0.020262524 ubox
10 29 0.043476194 ubox
10 30 0.010889449 ubox
10 32 0.006256837 ubox
10 34 0.009825242 ubox
10 59 0.547389796 ubox
10 65 0.011379899 ubox
10 67 0.027485379 ubox
11 18 0.009910962 ubox
11 58 0.524946174 ubox
12 19 0.063155835 ubox
13 18 0.057225958 ubox
13 37 0.010307262 ubox
14 36 0.011013925 ubox
14 38 0.010996541 ubox
15 37 0.010895113 ubox
16 24 0.165617786 ubox
16 25 0.120241159 ubox
16 31 0.041586480 ubox
16 50 0.153138350 ubox
17 23 0.165696741 ubox
17 24 0.120472151 ubox
17 25 0.007871771 ubox
17 30 0.042129340 ubox
17 33 0.011998439 ubox
17 35 0.007949994 ubox
17 49 0.154934068 ubox
17 60 0.012664504 ubox
17 66 0.624699783 ubox
17 68 0.082582723 ubox
18 22 0.149314536 ubox
18 23 0.117347826 ubox
18 24 0.007847256 ubox
18 29 0.042967691 ubox
18 32 0.011968169 ubox
18 34 0.007929867 ubox
18 44 0.019178410 ubox
18 48 0.156535609 ubox
18 52 0.656019397 ubox
18 54 0.006348584 ubox
18 59 0.009386602 ubox
18 65 0.626557959 ubox
18 67 0.083815605 ubox
19 26 0.024615730 ubox
19 28 0.041820561 ubox
19 43 0.021611922 ubox
19 47 0.156301883 ubox
19 51 0.694766076 ubox
19 53 0.003220164 ubox
19 58 0.003632935 ubox
19 61 0.005402131 ubox
19 64 0.625695890 ubox
20 25 0.025114142 ubox
20 31 0.014944432 ubox
20 50 0.694898311 ubox
20 60 0.005538482 ubox
21 30 0.014962276 ubox
21 49 0.693723320 ubox
23 38 0.057640976 ubox
23 42 0.010394204 ubox
23 43 0.176362000 ubox
23 46 0.041992628 ubox
23 47 0.689677626 ubox
23 56 0.007327631 ubox
23 62 0.009630262 ubox
23 63 0.658035461 ubox
23 64 0.025140208 ubox
24 37 0.058085811 ubox
24 41 0.010395158 ubox
24 42 0.176650162 ubox
24 43 0.014343704 ubox
24 45 0.042344116 ubox
24 46 0.690785835 ubox
24 47 0.043731289 ubox
24 55 0.007332610 ubox
24 61 0.008697970 ubox
24 62 0.658862025 ubox
24 63 0.021283141 ubox
25 36 0.060482321 ubox
25 41 0.176370259 ubox
25 42 0.015016031 ubox
25 45 0.689392411 ubox
25 46 0.043686002 ubox
25 51 0.015293757 ubox
25 61 0.659019259 ubox
25 62 0.016147435 ubox
26 35 0.061858226 ubox
26 50 0.015519731 ubox
26 60 0.658353387 ubox
27 49 0.015652763 ubox
27 50 0.050310854 ubox
28 49 0.050271421 ubox
29 37 0.170427387 ubox
30 36 0.175830755 ubox
30 37 0.077956701 ubox
30 38 0.162829180 ubox
30 42 0.347615090 ubox
30 43 0.272964518 ubox
30 46 0.020687344 ubox
30 47 0.051836761 ubox
30 56 0.647519415 ubox
30 64 0.003527021 ubox
31 36 0.097564979 ubox
31 37 0.135424022 ubox
31 38 0.473648040 ubox
31 41 0.346772206 ubox
31 42 0.272776718 ubox
31 45 0.020723761 ubox
31 46 0.051777548 ubox
31 55 0.647504802 ubox
31 63 0.003519306 ubox
32 37 0.444073526 ubox
35 51 0.652456833 ubox
35 61 0.012188474 ubox
36 49 0.042195405 ubox
36 50 0.651003941 ubox
36 60 0.012215782 ubox
36 66 0.007529282 ubox
36 68 0.084029762 ubox
37 48 0.046584626 ubox
37 49 0.512343077 ubox
37 50 0.051212949 ubox
37 59 0.011695436 ubox
37 65 0.007252275 ubox
37 67 0.086249965 ubox
38 49 0.374160263 ubox
38 66 0.086442978 ubox
41 50 0.031771076 ubox
42 49 0.036729308 ubox
42 50 0.031245846 ubox
43 49 0.035131189 ubox
49 56 0.041541715 ubox
49 62 0.237062731 ubox
49 63 0.015872533 ubox
49 64 0.005232602 ubox
50 55 0.041349918 ubox
50 61 0.238685890 ubox
50 62 0.011538550 ubox
50 63 0.004623622 ubox
51 60 0.239324016 ubox
17 66 0.9500000 lbox
18 65 0.9500000 lbox
19 64 0.9500000 lbox
23 63 0.9500000 lbox
24 62 0.9500000 lbox
25 61 0.9500000 lbox
26 60 0.9500000 lbox
30 56 0.9500000 lbox
31 55 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
showpage
end
%%EOF
