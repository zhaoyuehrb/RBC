%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGGGCCCGCCCCAUGCCGGGCGGGGCCUGGGGCCCGCCACCUCCGCCCGUGGCCGGAGAGCCCCAGGCCCGAGCCACGCGGUCUUCCGGGCCCGGGUCGGGGCUCG\
) } def
/len { sequence length } bind def

/coor [
[163.88424683 206.91020203]
[166.95314026 186.25926208]
[157.13023376 174.92301941]
[147.30731201 163.58677673]
[137.48440552 152.25053406]
[127.50061798 141.05570984]
[117.35799408 130.00459290]
[107.21537018 118.95347595]
[90.28038788 121.13531494]
[75.30050659 108.87563324]
[62.68170166 116.98525238]
[50.06290054 125.09486389]
[37.44409561 133.20446777]
[24.82529449 141.31408691]
[21.71117783 156.80853271]
[8.50684452 165.49305725]
[-6.95381021 162.21530151]
[-15.49825382 148.91989136]
[-12.05721951 133.49475098]
[1.32778811 125.09135437]
[16.71568108 128.69528198]
[29.33448410 120.58567047]
[41.95328903 112.47605896]
[54.57209015 104.36644745]
[67.19089508 96.25683594]
[72.23163605 82.12916565]
[67.59638214 67.86331940]
[62.96112442 53.59747314]
[58.32587051 39.33162308]
[53.69061661 25.06577682]
[49.05535889 10.79992962]
[44.42010498 -3.46591854]
[39.78485107 -17.73176575]
[35.14959335 -31.99761391]
[30.51433945 -46.26346207]
[25.87908554 -60.52930832]
[20.63712311 -74.58355713]
[14.79807091 -88.40041351]
[8.95901966 -102.21726227]
[2.92326570 -115.94933319]
[-3.30795956 -129.59381104]
[-9.53918457 -143.23829651]
[-15.77040958 -156.88276672]
[-31.00459480 -159.83221436]
[-41.57104111 -171.19575500]
[-43.40673065 -186.60385132]
[-35.80580902 -200.13182068]
[-21.69097900 -206.57783508]
[-6.48968649 -203.46330261]
[3.95286417 -191.98582458]
[5.62129879 -176.55870056]
[-2.12593007 -163.11399841]
[4.10529518 -149.46951294]
[10.33652020 -135.82504272]
[16.56774521 -122.18055725]
[22.29428673 -117.33147430]
[22.77587509 -108.05632019]
[28.61492538 -94.23946381]
[34.45397568 -80.42260742]
[37.72292709 -78.75806427]
[40.29209900 -75.34670258]
[41.31147003 -70.56319427]
[40.14493179 -65.16456604]
[44.78018951 -50.89871597]
[49.41544342 -36.63286972]
[54.05069733 -22.36702156]
[58.68595123 -8.10117340]
[63.32120895 6.16467428]
[67.95645905 20.43052292]
[72.59172058 34.69636917]
[77.22697449 48.96221924]
[81.86222839 63.22806549]
[86.49748230 77.49391174]
[107.47271729 76.92237091]
[120.47521210 91.24391937]
[118.26648712 108.81085205]
[128.40911865 119.86196899]
[138.55174255 130.91308594]
[146.78865051 135.20419312]
[148.82064819 142.42761230]
[158.64355469 153.76385498]
[168.46647644 165.10009766]
[178.28938293 176.43635559]
[188.08189392 174.22882080]
[197.93434143 175.81738281]
[206.43637085 180.93049622]
[212.38745117 188.79522705]
[214.96630859 198.25393677]
[213.84403992 207.93447876]
[209.22541809 216.44932556]
[217.69206238 228.83140564]
[226.15872192 241.21348572]
[234.62536621 253.59555054]
[243.09201050 265.97763062]
[251.55865479 278.35971069]
[260.02529907 290.74179077]
[275.60235596 293.41217041]
[284.66043091 306.36312866]
[281.82550049 321.91107178]
[268.77951050 330.83169556]
[253.26239014 327.83255005]
[244.48019409 314.69296265]
[247.64323425 299.20843506]
[239.17658997 286.82635498]
[230.70993042 274.44427490]
[222.24328613 262.06219482]
[213.77664185 249.68013000]
[205.30998230 237.29804993]
[196.84333801 224.91596985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 83]
[3 82]
[4 81]
[5 80]
[6 78]
[7 77]
[8 76]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[26 73]
[27 72]
[28 71]
[29 70]
[30 69]
[31 68]
[32 67]
[33 66]
[34 65]
[35 64]
[36 63]
[37 59]
[38 58]
[39 57]
[40 55]
[41 54]
[42 53]
[43 52]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
