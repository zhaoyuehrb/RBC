%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SOX11)
} def

/sequence { (\
ACCUCCGCACGAGACCCAGCGGCCCGGGUUGGAGCGUCCAGCCCUGCAGCGGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 52 0.033002292 ubox
3 13 0.545458266 ubox
3 34 0.005438706 ubox
3 49 0.003222755 ubox
3 51 0.032965478 ubox
3 52 0.006959578 ubox
4 12 0.548605470 ubox
4 14 0.024911708 ubox
4 33 0.005495245 ubox
4 51 0.006198701 ubox
4 53 0.744236697 ubox
5 11 0.548228306 ubox
5 13 0.026912403 ubox
5 22 0.068375558 ubox
5 32 0.005501802 ubox
5 52 0.795560276 ubox
6 21 0.074368323 ubox
6 31 0.005498727 ubox
6 51 0.795781638 ubox
7 20 0.074943638 ubox
7 23 0.019445297 ubox
7 30 0.003247112 ubox
7 35 0.003287543 ubox
7 47 0.012330624 ubox
7 50 0.795132808 ubox
8 19 0.074909904 ubox
8 22 0.020225276 ubox
8 34 0.003284733 ubox
8 46 0.013075940 ubox
8 49 0.794099349 ubox
9 45 0.013877937 ubox
10 21 0.689256700 ubox
10 26 0.019684256 ubox
10 46 0.085251446 ubox
11 20 0.693296919 ubox
11 25 0.055573092 ubox
11 45 0.070656999 ubox
11 55 0.050398748 ubox
12 45 0.045013813 ubox
12 54 0.050520106 ubox
13 30 0.028428896 ubox
13 44 0.025237719 ubox
13 55 0.165265475 ubox
14 29 0.031989843 ubox
14 54 0.178652551 ubox
15 22 0.305380473 ubox
15 28 0.032531010 ubox
15 52 0.138982908 ubox
16 21 0.312720900 ubox
16 22 0.106408738 ubox
16 27 0.032749122 ubox
16 32 0.006934492 ubox
16 51 0.137466484 ubox
16 52 0.572594272 ubox
17 21 0.111290737 ubox
17 26 0.032928073 ubox
17 31 0.006958359 ubox
17 46 0.008273888 ubox
17 51 0.572027320 ubox
18 30 0.006957880 ubox
18 45 0.008260178 ubox
19 29 0.006960826 ubox
19 44 0.005400273 ubox
19 47 0.138276928 ubox
19 50 0.598675102 ubox
20 26 0.007839729 ubox
20 28 0.006962562 ubox
20 46 0.138457919 ubox
20 49 0.596938806 ubox
20 51 0.010663119 ubox
21 25 0.015813239 ubox
21 43 0.004041154 ubox
21 45 0.135215306 ubox
21 50 0.010758255 ubox
22 42 0.004037739 ubox
22 44 0.066948270 ubox
22 47 0.885791950 ubox
22 50 0.019266057 ubox
23 41 0.004026587 ubox
23 46 0.887498420 ubox
23 49 0.019860608 ubox
23 52 0.017186287 ubox
24 51 0.017194250 ubox
24 52 0.027021291 ubox
25 46 0.083286228 ubox
25 51 0.027082573 ubox
26 43 0.010262670 ubox
26 44 0.994795368 ubox
26 45 0.026714362 ubox
26 50 0.012802155 ubox
27 42 0.007509401 ubox
27 43 0.999087424 ubox
27 44 0.022335444 ubox
28 42 0.999254426 ubox
28 43 0.015891248 ubox
28 47 0.005787261 ubox
29 41 0.998936445 ubox
29 46 0.005644673 ubox
30 40 0.998549512 ubox
30 48 0.003396584 ubox
31 39 0.999454320 ubox
31 44 0.029320332 ubox
31 45 0.006249429 ubox
31 47 0.004578585 ubox
32 38 0.999106604 ubox
32 43 0.029387201 ubox
32 44 0.006596843 ubox
33 37 0.869230253 ubox
33 45 0.004515726 ubox
34 42 0.030697859 ubox
34 44 0.004372293 ubox
34 47 0.004440739 ubox
35 41 0.030706378 ubox
35 46 0.004444763 ubox
36 42 0.004289146 ubox
36 45 0.004136074 ubox
36 54 0.005283550 ubox
37 41 0.004015518 ubox
37 53 0.006245341 ubox
38 52 0.006514301 ubox
39 51 0.006491846 ubox
41 47 0.007638342 ubox
41 50 0.006348322 ubox
42 46 0.007591060 ubox
42 49 0.006338671 ubox
45 51 0.004013018 ubox
46 50 0.005711447 ubox
4 53 0.9500000 lbox
5 52 0.9500000 lbox
6 51 0.9500000 lbox
7 50 0.9500000 lbox
8 49 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
26 44 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
showpage
end
%%EOF
