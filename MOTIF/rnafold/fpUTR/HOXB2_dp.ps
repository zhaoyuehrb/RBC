%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HOXB2)
} def

/sequence { (\
AAUCUCCCCCUCCCAAAAUCGCUCCAUUACAUAAAUCGGGGGGGGUGCAGGAGGGGGGUCCCUUCCGAUCCUCCCUCCUGACGCCCCCCCCAGCAGCCCCCUCCCCCACCAUUGAAAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.013632721 ubox
1 113 0.005770832 ubox
2 19 0.013136380 ubox
2 27 0.014776952 ubox
2 32 0.006983115 ubox
2 36 0.004879185 ubox
2 112 0.006226513 ubox
3 18 0.013262358 ubox
3 26 0.014018037 ubox
3 31 0.006813228 ubox
3 35 0.004910401 ubox
3 111 0.005899349 ubox
3 115 0.018125090 ubox
4 93 0.005276818 ubox
4 96 0.012273688 ubox
4 114 0.019231123 ubox
4 118 0.015759893 ubox
5 92 0.005023645 ubox
5 95 0.012225544 ubox
5 115 0.021942972 ubox
5 117 0.015057326 ubox
6 114 0.022916714 ubox
10 93 0.012878432 ubox
10 96 0.022499434 ubox
10 118 0.050419232 ubox
11 92 0.012728977 ubox
11 95 0.022479603 ubox
11 115 0.018214500 ubox
11 117 0.050343060 ubox
12 114 0.018887295 ubox
14 114 0.069113061 ubox
15 28 0.014335230 ubox
15 113 0.067975763 ubox
16 27 0.014066504 ubox
16 28 0.019046115 ubox
16 112 0.059899661 ubox
16 113 0.005637239 ubox
17 27 0.018141276 ubox
17 28 0.086177040 ubox
17 112 0.005645813 ubox
17 113 0.009823512 ubox
18 27 0.091653839 ubox
18 32 0.015449018 ubox
18 36 0.010256501 ubox
18 112 0.010622755 ubox
19 26 0.086670720 ubox
19 31 0.015213688 ubox
19 35 0.010436425 ubox
19 111 0.010339208 ubox
19 115 0.031926293 ubox
20 38 0.005896893 ubox
20 114 0.034043779 ubox
21 37 0.018513966 ubox
21 94 0.559339253 ubox
21 97 0.201129752 ubox
21 113 0.019940953 ubox
21 119 0.327190351 ubox
22 93 0.559908141 ubox
22 96 0.201490927 ubox
22 118 0.327759119 ubox
23 92 0.551974796 ubox
23 95 0.192705648 ubox
23 115 0.028209736 ubox
23 117 0.309680005 ubox
24 38 0.009383733 ubox
24 39 0.007289471 ubox
24 114 0.034575955 ubox
25 38 0.010347716 ubox
25 114 0.077615096 ubox
26 32 0.055153405 ubox
26 36 0.159413757 ubox
26 112 0.021710239 ubox
26 113 0.067852333 ubox
27 31 0.051911510 ubox
27 34 0.078276252 ubox
27 35 0.172010677 ubox
27 93 0.048608453 ubox
27 111 0.022848656 ubox
27 115 0.055708915 ubox
27 116 0.039639336 ubox
27 117 0.011438192 ubox
27 118 0.003432527 ubox
28 33 0.080018341 ubox
28 34 0.170321674 ubox
28 92 0.049313276 ubox
28 95 0.003230570 ubox
28 114 0.054735429 ubox
28 115 0.039364772 ubox
28 116 0.018278263 ubox
28 117 0.004399800 ubox
29 113 0.051618285 ubox
30 114 0.039264293 ubox
31 112 0.016983897 ubox
31 113 0.037415691 ubox
32 111 0.016660803 ubox
32 114 0.006059754 ubox
33 113 0.006890382 ubox
34 112 0.006637347 ubox
34 113 0.010532792 ubox
35 112 0.011594667 ubox
36 111 0.010909265 ubox
36 115 0.023381910 ubox
37 114 0.024738141 ubox
38 90 0.007216090 ubox
38 91 0.998822144 ubox
38 101 0.004543234 ubox
39 89 0.006909597 ubox
39 90 0.999874405 ubox
39 91 0.008451384 ubox
39 100 0.004065516 ubox
40 88 0.006569370 ubox
40 89 0.999921259 ubox
40 90 0.007905274 ubox
40 99 0.003517202 ubox
41 87 0.006206619 ubox
41 88 0.999935416 ubox
41 89 0.007243786 ubox
42 86 0.005817664 ubox
42 87 0.999947606 ubox
42 88 0.006504389 ubox
43 85 0.005396851 ubox
43 86 0.999958008 ubox
43 87 0.005659195 ubox
44 84 0.004934379 ubox
44 85 0.999965727 ubox
44 86 0.004652772 ubox
45 82 0.004286667 ubox
45 84 0.999971419 ubox
45 85 0.003349773 ubox
46 81 0.004470816 ubox
46 83 0.999562973 ubox
47 82 0.999197519 ubox
48 80 0.999734992 ubox
49 79 0.999739881 ubox
50 78 0.999988109 ubox
51 77 0.999992460 ubox
52 76 0.999831573 ubox
53 74 0.069210089 ubox
53 75 0.997588140 ubox
54 73 0.097708393 ubox
54 74 0.995204124 ubox
55 72 0.119542207 ubox
55 73 0.992728709 ubox
56 71 0.794837741 ubox
56 72 0.606294917 ubox
57 70 0.797892725 ubox
57 71 0.602733191 ubox
58 69 0.800351172 ubox
58 70 0.598583948 ubox
59 68 0.981709732 ubox
60 67 0.983774183 ubox
91 114 0.006835612 ubox
92 102 0.109408365 ubox
92 113 0.011970536 ubox
93 101 0.116361476 ubox
93 112 0.010645196 ubox
93 119 0.192978561 ubox
94 114 0.135801337 ubox
94 118 0.193225130 ubox
95 102 0.168323077 ubox
95 113 0.133232672 ubox
96 101 0.177129702 ubox
96 112 0.108225362 ubox
96 119 0.211766495 ubox
97 118 0.211847629 ubox
101 118 0.048395118 ubox
102 115 0.149696034 ubox
102 117 0.046881971 ubox
103 114 0.155510086 ubox
107 114 0.332325850 ubox
108 113 0.283958336 ubox
112 118 0.016492176 ubox
113 117 0.017054807 ubox
38 91 0.9500000 lbox
39 90 0.9500000 lbox
40 89 0.9500000 lbox
41 88 0.9500000 lbox
42 87 0.9500000 lbox
43 86 0.9500000 lbox
44 85 0.9500000 lbox
45 84 0.9500000 lbox
46 83 0.9500000 lbox
47 82 0.9500000 lbox
48 80 0.9500000 lbox
49 79 0.9500000 lbox
50 78 0.9500000 lbox
51 77 0.9500000 lbox
52 76 0.9500000 lbox
53 75 0.9500000 lbox
54 74 0.9500000 lbox
55 73 0.9500000 lbox
56 71 0.9500000 lbox
57 70 0.9500000 lbox
58 69 0.9500000 lbox
59 68 0.9500000 lbox
60 67 0.9500000 lbox
showpage
end
%%EOF
