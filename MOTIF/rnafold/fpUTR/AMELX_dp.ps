%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AMELX)
} def

/sequence { (\
AAAGGAUCAAGCAUCCCUGAGUUUCAAACAGAAACUUGCACUGAAUACAUUCAAAGAACCAUCAAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 51 0.005654141 ubox
2 37 0.004214876 ubox
2 50 0.006465600 ubox
2 51 0.010365103 ubox
3 18 0.324297895 ubox
3 36 0.003316396 ubox
3 42 0.011020460 ubox
3 50 0.010726765 ubox
3 51 0.005881235 ubox
4 15 0.011667945 ubox
4 16 0.849895526 ubox
4 17 0.313641454 ubox
4 18 0.009696549 ubox
4 41 0.010399833 ubox
4 42 0.005037338 ubox
4 50 0.005558360 ubox
4 52 0.115011185 ubox
4 60 0.334094626 ubox
4 63 0.013612293 ubox
5 14 0.010253753 ubox
5 15 0.861661470 ubox
5 16 0.285396540 ubox
5 17 0.010735035 ubox
5 41 0.006153929 ubox
5 51 0.115345982 ubox
5 52 0.031526004 ubox
5 59 0.334017278 ubox
5 62 0.008316447 ubox
5 63 0.049609038 ubox
6 14 0.866992688 ubox
6 46 0.019092117 ubox
6 50 0.114824398 ubox
6 51 0.031156796 ubox
6 62 0.049066527 ubox
7 13 0.825779238 ubox
7 20 0.015970326 ubox
7 44 0.092818616 ubox
7 45 0.014802623 ubox
7 49 0.103164121 ubox
7 57 0.318941053 ubox
7 61 0.044261849 ubox
7 67 0.028182961 ubox
8 19 0.024649760 ubox
8 38 0.008350273 ubox
8 43 0.100534579 ubox
8 56 0.321866777 ubox
8 66 0.030087558 ubox
9 18 0.025484148 ubox
9 24 0.004316143 ubox
9 37 0.007903158 ubox
9 42 0.097152829 ubox
9 51 0.007907303 ubox
10 18 0.066447224 ubox
10 23 0.004846366 ubox
10 36 0.006896987 ubox
10 42 0.016120841 ubox
10 50 0.007989439 ubox
11 17 0.069265121 ubox
11 22 0.005174225 ubox
11 35 0.006518287 ubox
11 39 0.284538685 ubox
11 41 0.018317699 ubox
12 19 0.033899412 ubox
12 21 0.005222480 ubox
12 38 0.284695842 ubox
12 43 0.073969227 ubox
13 18 0.030592842 ubox
13 37 0.223819480 ubox
13 42 0.071695908 ubox
13 46 0.005807449 ubox
14 20 0.008034110 ubox
14 32 0.004934364 ubox
14 44 0.031628310 ubox
14 45 0.004711459 ubox
14 57 0.014116372 ubox
14 67 0.013329588 ubox
15 19 0.011684514 ubox
15 31 0.004856993 ubox
15 43 0.033110894 ubox
15 56 0.014906455 ubox
15 66 0.014202415 ubox
17 31 0.016402760 ubox
17 56 0.085097376 ubox
17 66 0.110339561 ubox
18 26 0.006291549 ubox
18 30 0.016482545 ubox
18 38 0.499021930 ubox
18 40 0.097937023 ubox
18 43 0.006554942 ubox
18 47 0.003621321 ubox
18 49 0.008048689 ubox
18 53 0.035574532 ubox
18 55 0.081579223 ubox
18 61 0.021849751 ubox
18 64 0.039632441 ubox
18 65 0.104319702 ubox
19 25 0.006748547 ubox
19 29 0.016333208 ubox
19 37 0.927156610 ubox
19 39 0.106847968 ubox
19 48 0.008662465 ubox
19 52 0.039053955 ubox
19 60 0.024269043 ubox
19 63 0.046030157 ubox
20 24 0.005883456 ubox
20 36 0.992353020 ubox
20 37 0.027492242 ubox
20 42 0.004327830 ubox
20 51 0.038226799 ubox
20 62 0.031325638 ubox
21 29 0.007474029 ubox
21 35 0.998816505 ubox
21 36 0.004561098 ubox
21 41 0.004653127 ubox
21 46 0.003786552 ubox
21 48 0.011867190 ubox
21 50 0.035849707 ubox
21 59 0.006513040 ubox
22 28 0.007608465 ubox
22 33 0.004645404 ubox
22 34 0.998382213 ubox
22 40 0.004482613 ubox
22 45 0.003704853 ubox
22 47 0.011587744 ubox
22 49 0.035254477 ubox
22 58 0.006338877 ubox
23 27 0.006399612 ubox
23 32 0.006321800 ubox
23 33 0.997565166 ubox
23 44 0.003608252 ubox
23 45 0.034310839 ubox
23 57 0.005942024 ubox
23 58 0.004828475 ubox
24 31 0.007135520 ubox
24 32 0.998414362 ubox
24 44 0.035482307 ubox
24 56 0.005218168 ubox
24 57 0.005373245 ubox
25 31 0.998053026 ubox
25 38 0.005861409 ubox
25 43 0.035568188 ubox
25 56 0.005544093 ubox
26 37 0.005914437 ubox
26 42 0.034022854 ubox
27 36 0.005829284 ubox
29 38 0.032204865 ubox
29 43 0.015252803 ubox
30 36 0.004739520 ubox
30 37 0.031414332 ubox
30 42 0.015357732 ubox
31 35 0.005666093 ubox
31 36 0.025378388 ubox
31 37 0.007865857 ubox
31 41 0.015349530 ubox
32 36 0.006815046 ubox
35 56 0.006384147 ubox
35 66 0.008935474 ubox
36 45 0.005749610 ubox
36 54 0.008930155 ubox
36 55 0.007928798 ubox
36 57 0.011146376 ubox
36 58 0.009586516 ubox
36 65 0.010787413 ubox
37 43 0.004096513 ubox
37 44 0.009989182 ubox
37 49 0.012292511 ubox
37 53 0.014806211 ubox
37 54 0.009997517 ubox
37 55 0.005109897 ubox
37 56 0.015349270 ubox
37 57 0.018540174 ubox
37 61 0.021807173 ubox
37 64 0.013856805 ubox
38 42 0.005614800 ubox
38 46 0.004963537 ubox
38 48 0.021299208 ubox
38 52 0.020615155 ubox
38 60 0.038480264 ubox
38 63 0.017624202 ubox
41 56 0.138388209 ubox
41 66 0.113359958 ubox
42 49 0.087569477 ubox
42 53 0.791940972 ubox
42 55 0.110584018 ubox
42 61 0.032784086 ubox
42 64 0.144055175 ubox
42 65 0.098615159 ubox
43 48 0.096477041 ubox
43 51 0.018380646 ubox
43 52 0.859502540 ubox
43 60 0.036059841 ubox
43 63 0.163544672 ubox
44 50 0.024633208 ubox
44 51 0.845393276 ubox
44 62 0.154590930 ubox
45 50 0.665579175 ubox
45 62 0.054423160 ubox
46 61 0.059374842 ubox
49 62 0.007652237 ubox
50 56 0.022277788 ubox
50 57 0.041954410 ubox
50 58 0.139799063 ubox
50 61 0.007914799 ubox
50 65 0.006728055 ubox
50 66 0.003423397 ubox
50 67 0.009793760 ubox
50 68 0.090436766 ubox
51 55 0.019894937 ubox
51 56 0.040626297 ubox
51 57 0.157049951 ubox
51 64 0.007248636 ubox
51 65 0.004386887 ubox
51 66 0.009650059 ubox
51 67 0.118651111 ubox
52 56 0.157070290 ubox
52 66 0.121039236 ubox
56 63 0.311913882 ubox
57 62 0.285444532 ubox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
7 13 0.9500000 lbox
19 37 0.9500000 lbox
20 36 0.9500000 lbox
21 35 0.9500000 lbox
22 34 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
showpage
end
%%EOF
