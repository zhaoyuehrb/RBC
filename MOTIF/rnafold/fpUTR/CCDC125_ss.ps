%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCUGGAGUCCGGGCUCCGGUCCCCGCCACGGACCUUGAGAGGGUACCCGGGGUCAGACCUGGCAGACAGCCCAUUUUUUCUUAUGAUAAAGACGGCAUUUGGCUC\
) } def
/len { sequence length } bind def

/coor [
[93.11849213 328.41677856]
[95.86338806 309.23043823]
[96.29565430 294.23666382]
[96.72792816 279.24288940]
[97.16019440 264.24914551]
[97.59246063 249.25535583]
[98.02473450 234.26159668]
[98.45700073 219.26782227]
[98.88927460 204.27404785]
[88.51016998 193.65284729]
[88.73496246 178.44088745]
[99.94582367 167.62634277]
[100.37808990 152.63256836]
[100.81036377 137.63879395]
[83.68750000 131.82766724]
[72.07541656 119.18772125]
[68.18423462 103.41376495]
[53.31022644 101.47373199]
[38.43621063 99.53369904]
[21.69198418 107.02422333]
[8.12437344 95.99700165]
[-6.79936981 94.48641968]
[-21.72311401 92.97583008]
[-36.64685822 91.46524048]
[-51.57060242 89.95465088]
[-62.65057373 100.98951721]
[-78.23571777 102.26912689]
[-90.96719360 93.18929291]
[-94.83360291 78.03723145]
[-88.00933075 63.96728897]
[-73.71659851 57.62285614]
[-58.70399857 61.99958038]
[-50.06001282 75.03091431]
[-35.13626862 76.54149628]
[-20.21252632 78.05208588]
[-5.28878260 79.56267548]
[9.63496113 81.07325745]
[19.29329681 73.63316345]
[31.82706070 74.86958313]
[40.37624359 84.65969086]
[55.25025558 86.59972382]
[70.12426758 88.53975677]
[82.55953979 73.17227173]
[101.65139771 68.04425812]
[105.91508484 53.66298676]
[110.17876434 39.28171539]
[114.44245148 24.90044212]
[103.11600494 7.36580610]
[108.01799774 -12.63161087]
[125.67375183 -22.65844727]
[128.25482178 -37.43471527]
[130.83589172 -52.21098328]
[133.41694641 -66.98725128]
[135.99801636 -81.76351929]
[126.70839691 -94.54939270]
[129.26310730 -110.14583588]
[142.14648438 -119.29975128]
[157.71504211 -116.58029175]
[166.73223877 -103.60086060]
[163.84832764 -88.06192017]
[150.77429199 -79.18245697]
[148.19322205 -64.40618896]
[145.61215210 -49.62991714]
[143.03108215 -34.85364914]
[140.45002747 -20.07738113]
[148.18420410 -14.23442936]
[153.21502686 -5.88052225]
[154.78077698 3.80407906]
[152.61294556 13.43198204]
[146.98104858 21.60741234]
[138.66001892 27.12854958]
[128.82373047 29.16412544]
[124.56003571 43.54539871]
[120.29635620 57.92667007]
[116.03266907 72.30794525]
[122.04780579 75.70825958]
[127.32554626 80.42681885]
[131.57536316 86.29983521]
[134.54394531 93.09932709]
[136.02940369 100.54174805]
[135.89340210 108.29977417]
[134.07055664 116.01665497]
[147.94934082 121.70693970]
[161.82812500 127.39723206]
[175.70690918 133.08750916]
[190.18769836 126.75646973]
[204.87321472 132.59692383]
[211.05081177 147.14384460]
[205.05541992 161.76679993]
[190.44400024 167.79025269]
[175.88525391 161.64059448]
[170.01661682 146.96629333]
[156.13783264 141.27601624]
[142.25904846 135.58572388]
[128.38026428 129.89544678]
[115.80413055 138.07106018]
[115.37186432 153.06483459]
[114.93959045 168.05860901]
[125.50878906 179.50106812]
[124.85681152 194.70072937]
[113.88304138 204.70631409]
[113.45077515 219.70008850]
[113.01850128 234.69386292]
[112.58623505 249.68763733]
[112.15396881 264.68139648]
[111.72169495 279.67517090]
[111.28942871 294.66894531]
[110.85715485 309.66271973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 108]
[3 107]
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[9 101]
[12 98]
[13 97]
[14 96]
[17 42]
[18 41]
[19 40]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[44 75]
[45 74]
[46 73]
[47 72]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[82 95]
[83 94]
[84 93]
[85 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
