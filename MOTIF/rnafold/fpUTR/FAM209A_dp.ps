%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM209A)
} def

/sequence { (\
UGGCACCAGGUGCCCAGUCUCCCAGUUGCGAGGGCAAGCAAACCCGUCAUGAGCAACUCCCUUCCCCAUCUCUGCUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.029064933 ubox
1 16 0.246219119 ubox
1 24 0.011954160 ubox
1 30 0.003236916 ubox
1 40 0.006846742 ubox
1 46 0.138249149 ubox
1 49 0.169372003 ubox
1 68 0.009393684 ubox
1 78 0.130593806 ubox
2 7 0.032174600 ubox
2 14 0.884106961 ubox
2 15 0.223273726 ubox
2 19 0.006000234 ubox
2 22 0.004253383 ubox
2 23 0.011729238 ubox
2 29 0.006006617 ubox
2 39 0.006676629 ubox
2 44 0.052903012 ubox
2 45 0.196374865 ubox
2 48 0.194546753 ubox
2 67 0.010268725 ubox
2 76 0.192569052 ubox
2 77 0.151309131 ubox
2 80 0.013577780 ubox
3 11 0.005646421 ubox
3 13 0.900925616 ubox
3 14 0.157961938 ubox
3 18 0.005236382 ubox
3 21 0.004133245 ubox
3 22 0.010984971 ubox
3 29 0.049615099 ubox
3 39 0.012713445 ubox
3 43 0.053296382 ubox
3 44 0.195973128 ubox
3 47 0.194433140 ubox
3 66 0.009485402 ubox
3 75 0.256345476 ubox
3 76 0.019930573 ubox
3 79 0.013220237 ubox
4 10 0.007011904 ubox
4 12 0.914673039 ubox
4 17 0.005247940 ubox
4 28 0.049713975 ubox
4 38 0.012781237 ubox
4 46 0.194106009 ubox
4 74 0.256933129 ubox
5 11 0.912722624 ubox
5 18 0.007911813 ubox
5 26 0.031297608 ubox
5 27 0.038677661 ubox
5 47 0.015436061 ubox
5 73 0.248907953 ubox
6 10 0.903765627 ubox
6 17 0.008040877 ubox
6 25 0.043804785 ubox
6 46 0.016794464 ubox
7 28 0.005458029 ubox
7 74 0.010753523 ubox
8 20 0.004975357 ubox
8 27 0.005595970 ubox
8 62 0.007851823 ubox
8 71 0.248488424 ubox
8 73 0.011202329 ubox
9 15 0.013602850 ubox
9 19 0.005228838 ubox
9 20 0.005762749 ubox
9 21 0.004630441 ubox
9 22 0.047145315 ubox
9 23 0.020884753 ubox
9 26 0.005922671 ubox
9 44 0.108001812 ubox
9 45 0.070082161 ubox
9 60 0.004790594 ubox
9 61 0.008090388 ubox
9 67 0.003733473 ubox
9 70 0.256418258 ubox
9 71 0.010279096 ubox
9 72 0.011567996 ubox
9 73 0.003228958 ubox
9 80 0.103110339 ubox
10 14 0.013404043 ubox
10 18 0.004534871 ubox
10 19 0.006345942 ubox
10 20 0.004122247 ubox
10 21 0.047163026 ubox
10 22 0.020786215 ubox
10 39 0.085147278 ubox
10 43 0.108325693 ubox
10 44 0.069840066 ubox
10 59 0.004831505 ubox
10 60 0.008045398 ubox
10 66 0.003726679 ubox
10 69 0.256437914 ubox
10 70 0.011144791 ubox
10 71 0.009312446 ubox
10 72 0.004246918 ubox
10 79 0.103993326 ubox
11 17 0.003977166 ubox
11 24 0.006151953 ubox
11 36 0.254278512 ubox
11 38 0.067303608 ubox
11 40 0.071502184 ubox
11 42 0.080514698 ubox
11 55 0.005365565 ubox
11 68 0.256557139 ubox
11 78 0.103468214 ubox
12 18 0.033720327 ubox
12 23 0.006239024 ubox
12 35 0.275675011 ubox
12 39 0.081838518 ubox
12 54 0.005715254 ubox
12 67 0.255507963 ubox
12 77 0.103126058 ubox
13 17 0.034411141 ubox
13 34 0.275737206 ubox
13 38 0.081751634 ubox
13 53 0.005723051 ubox
14 33 0.275650511 ubox
14 34 0.010134469 ubox
15 28 0.158278530 ubox
15 32 0.272111292 ubox
15 33 0.010856717 ubox
15 51 0.008011568 ubox
15 74 0.163532172 ubox
16 27 0.160113573 ubox
16 50 0.010588819 ubox
16 58 0.011197875 ubox
16 62 0.105258786 ubox
16 63 0.051729572 ubox
16 71 0.016156294 ubox
16 73 0.164380622 ubox
16 76 0.037544482 ubox
17 26 0.153033876 ubox
17 29 0.228579708 ubox
17 35 0.101388902 ubox
17 39 0.183454775 ubox
17 43 0.053151970 ubox
17 47 0.008447627 ubox
17 50 0.014637169 ubox
17 54 0.008952504 ubox
17 57 0.011926351 ubox
17 61 0.108817117 ubox
17 62 0.050382518 ubox
17 69 0.007285623 ubox
17 70 0.017450635 ubox
17 72 0.164205580 ubox
17 75 0.040281830 ubox
17 79 0.037260207 ubox
18 25 0.039172095 ubox
18 28 0.220201445 ubox
18 31 0.083707970 ubox
18 33 0.102804830 ubox
18 34 0.083738750 ubox
18 38 0.158204620 ubox
18 42 0.052077825 ubox
18 46 0.009054324 ubox
18 49 0.017197545 ubox
18 56 0.011239306 ubox
18 68 0.009857355 ubox
18 74 0.038973212 ubox
18 78 0.031240103 ubox
19 25 0.187311903 ubox
19 30 0.087964342 ubox
19 32 0.146549522 ubox
19 33 0.065885349 ubox
19 34 0.009439681 ubox
19 38 0.105183728 ubox
19 53 0.014578770 ubox
20 24 0.169615996 ubox
20 31 0.180792531 ubox
20 32 0.039706646 ubox
20 33 0.008050270 ubox
20 34 0.012081888 ubox
20 37 0.098428127 ubox
20 52 0.014723758 ubox
21 30 0.183580956 ubox
21 32 0.011223021 ubox
21 33 0.015389389 ubox
21 34 0.235325024 ubox
21 51 0.014603547 ubox
22 32 0.015307043 ubox
22 33 0.236858529 ubox
22 34 0.010083300 ubox
23 32 0.236860393 ubox
23 33 0.010061881 ubox
23 51 0.014039372 ubox
23 74 0.027087484 ubox
24 50 0.021073796 ubox
24 58 0.524306473 ubox
24 62 0.006468408 ubox
24 63 0.004852484 ubox
24 71 0.021598460 ubox
24 73 0.026469221 ubox
24 76 0.013554413 ubox
25 35 0.011118873 ubox
25 39 0.226786552 ubox
25 43 0.151812385 ubox
25 47 0.003887530 ubox
25 50 0.081077601 ubox
25 54 0.011682858 ubox
25 57 0.556040551 ubox
25 61 0.004694624 ubox
25 70 0.022267878 ubox
25 72 0.025527745 ubox
25 75 0.014463501 ubox
25 79 0.027513648 ubox
26 34 0.011097794 ubox
26 37 0.239315695 ubox
26 38 0.185309891 ubox
26 41 0.200792473 ubox
26 42 0.124397023 ubox
26 49 0.097338723 ubox
26 52 0.006823652 ubox
26 53 0.011470067 ubox
26 56 0.556052101 ubox
26 74 0.014339529 ubox
26 78 0.021745969 ubox
27 31 0.003856865 ubox
27 33 0.010768093 ubox
27 36 0.294677646 ubox
27 37 0.129941970 ubox
27 40 0.241375994 ubox
27 41 0.087144843 ubox
27 49 0.205351756 ubox
27 51 0.007499624 ubox
27 52 0.010818854 ubox
27 55 0.556094306 ubox
27 68 0.031080354 ubox
28 35 0.326436352 ubox
28 39 0.260272943 ubox
28 47 0.254677935 ubox
28 48 0.225091483 ubox
28 50 0.050475539 ubox
28 54 0.556403314 ubox
28 67 0.031888586 ubox
28 75 0.013353129 ubox
29 34 0.326415456 ubox
29 38 0.260309983 ubox
29 46 0.318311852 ubox
29 51 0.007698833 ubox
29 53 0.556100496 ubox
29 74 0.013364977 ubox
30 45 0.311636016 ubox
30 48 0.623506167 ubox
30 50 0.010855095 ubox
30 63 0.032519061 ubox
30 64 0.014545164 ubox
30 70 0.016024133 ubox
30 72 0.008079105 ubox
30 73 0.005563145 ubox
31 47 0.609274905 ubox
31 62 0.034134554 ubox
31 63 0.012832168 ubox
31 69 0.016001585 ubox
31 71 0.008115381 ubox
32 44 0.311275635 ubox
32 45 0.714359098 ubox
32 48 0.007839037 ubox
32 61 0.034909143 ubox
32 62 0.010797621 ubox
32 66 0.007463841 ubox
32 67 0.017710037 ubox
32 70 0.004830405 ubox
32 77 0.009205854 ubox
33 43 0.311112040 ubox
33 44 0.716929244 ubox
33 45 0.176895352 ubox
33 47 0.005389772 ubox
33 48 0.168638508 ubox
33 60 0.034920453 ubox
33 61 0.010787254 ubox
33 65 0.007722437 ubox
33 66 0.017996897 ubox
33 76 0.009742636 ubox
33 80 0.007600493 ubox
34 43 0.716745692 ubox
34 44 0.174354565 ubox
34 47 0.169145499 ubox
34 59 0.034846571 ubox
34 60 0.010730401 ubox
34 64 0.007751995 ubox
34 65 0.017976048 ubox
34 75 0.009979747 ubox
34 79 0.007834478 ubox
35 46 0.169230425 ubox
35 51 0.004359326 ubox
35 74 0.009982301 ubox
36 50 0.004644647 ubox
36 63 0.018047307 ubox
36 73 0.008679259 ubox
37 58 0.005565944 ubox
37 62 0.019242514 ubox
37 71 0.004050776 ubox
37 73 0.004480038 ubox
37 76 0.009813078 ubox
38 47 0.104092820 ubox
38 54 0.034977019 ubox
38 57 0.005756160 ubox
38 61 0.019066505 ubox
38 70 0.004084644 ubox
38 72 0.006295751 ubox
38 75 0.010446841 ubox
39 46 0.107991921 ubox
39 51 0.004359540 ubox
39 53 0.034995137 ubox
39 74 0.010448003 ubox
40 50 0.004608262 ubox
40 73 0.010023578 ubox
45 51 0.005573264 ubox
46 50 0.005038791 ubox
46 54 0.012688306 ubox
46 57 0.004307637 ubox
46 75 0.004050134 ubox
46 79 0.079319325 ubox
47 53 0.012436526 ubox
47 56 0.004271696 ubox
47 78 0.058144628 ubox
48 74 0.004080746 ubox
49 73 0.004073905 ubox
50 78 0.714206599 ubox
51 59 0.019596435 ubox
51 63 0.005347261 ubox
51 64 0.006062647 ubox
51 72 0.007602784 ubox
51 77 0.828826319 ubox
52 58 0.019658896 ubox
52 62 0.005769205 ubox
52 63 0.005997495 ubox
52 71 0.007605818 ubox
52 76 0.829080858 ubox
53 57 0.019234590 ubox
53 61 0.005834547 ubox
53 62 0.005613848 ubox
53 70 0.007503597 ubox
53 75 0.829244541 ubox
54 74 0.829150195 ubox
55 63 0.009990098 ubox
55 73 0.775614440 ubox
56 62 0.018281609 ubox
67 74 0.069770639 ubox
68 73 0.061380476 ubox
2 14 0.9500000 lbox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
6 10 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
26 56 0.9500000 lbox
27 55 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
showpage
end
%%EOF
