%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCACGCUUUGACGUCACGUCCGGCGCGGAGACGGUGGAGUCUCCGCACUGUCGGCGGGGUACGCAUAGCCGGGCACUAGGUUCGUGGGCUGUGGAGGCGACGGAGCAGGGGGCCAGUGGGGCCAGCUCAGGGAGGACCUGCCUGGGAGCUUUCUCUUGCAUACCCUCGCUUAGGCUGGCCGGGGUGUCACUUCUGCCUCCCUGCCCUCCAGACC\
) } def
/len { sequence length } bind def

/coor [
[383.13867188 128.56869507]
[379.03787231 114.14012146]
[380.95416260 99.26303101]
[388.57745361 86.34461975]
[400.67660522 77.47407532]
[385.69088745 78.12836456]
[370.70516968 78.78265381]
[355.71945190 79.43694305]
[340.73370361 80.09123230]
[325.74798584 80.74552917]
[313.37033081 89.03061676]
[299.24578857 81.90263367]
[284.26007080 82.55693054]
[269.27435303 83.21121979]
[254.29972839 84.08338928]
[239.33937073 85.17326355]
[224.37902832 86.26313019]
[209.41867065 87.35299683]
[194.56163025 89.41899109]
[179.87152100 92.45225525]
[165.18141174 95.48551941]
[150.49130249 98.51878357]
[135.80119324 101.55204773]
[121.11107635 104.58530426]
[106.42096710 107.61856842]
[92.36325836 112.85124207]
[79.26517487 120.16151428]
[66.16709137 127.47179413]
[53.06900024 134.78207397]
[39.97091675 142.09234619]
[26.87282944 149.40261841]
[13.77474308 156.71289062]
[0.67665684 164.02317810]
[-3.39371920 179.29431152]
[-17.11191177 187.14202881]
[-32.33915710 182.91043091]
[-40.04140472 169.11003113]
[-35.64904785 153.92837524]
[-21.76799011 146.37246704]
[-6.63361931 150.92507935]
[6.46446705 143.61480713]
[19.56255341 136.30453491]
[32.66064072 128.99426270]
[45.75872803 121.68398285]
[58.85681152 114.37371063]
[71.95489502 107.06343079]
[85.05298615 99.75315857]
[83.80436707 92.35781860]
[69.01370239 94.85504913]
[55.71854019 101.80046082]
[45.00476837 91.30212402]
[51.67870712 77.86863708]
[66.51647186 80.06438446]
[81.30714417 77.56715393]
[80.05852509 70.17182159]
[65.28640747 67.56710052]
[50.51429367 64.96237183]
[36.60075378 72.94942474]
[21.73485374 66.91746521]
[17.32043648 51.49370193]
[26.74386978 38.50992584]
[42.77629852 37.92617416]
[53.11901855 50.19025803]
[67.89113617 52.79497910]
[82.66325378 55.39970398]
[93.73229218 62.67379379]
[101.05815887 72.17388916]
[104.28278351 82.67791748]
[103.38770294 92.92845917]
[118.07781219 89.89519501]
[132.76792908 86.86193848]
[147.45803833 83.82867432]
[162.14814758 80.79541016]
[176.83825684 77.76214600]
[191.52836609 74.72888184]
[178.11582947 68.01292419]
[170.37409973 55.16514206]
[170.70335388 40.16875839]
[179.00151062 27.67313385]
[192.69586182 21.55231857]
[207.54074097 23.70396614]
[218.93374634 33.46099091]
[223.34266663 47.79840469]
[219.40060425 62.27114105]
[208.32879639 72.39264679]
[223.28915405 71.30278015]
[238.24951172 70.21290588]
[253.20985413 69.12303925]
[258.88034058 65.73526001]
[264.55862427 65.71928406]
[268.62005615 68.22549438]
[283.60577393 67.57120514]
[298.59149170 66.91691589]
[312.04104614 58.58502197]
[325.09368896 65.75980377]
[340.07943726 65.10551453]
[355.06515503 64.45121765]
[370.05087280 63.79693222]
[385.03659058 63.14263916]
[400.02230835 62.48834991]
[406.65875244 57.37688828]
[414.14886475 56.78890610]
[419.97161865 60.00942612]
[434.66174316 56.97616196]
[442.42977905 52.17773056]
[449.58749390 54.00724411]
[464.32015991 51.18795395]
[479.05282593 48.36865997]
[493.78549194 45.54936981]
[508.51815796 42.73007965]
[523.25085449 39.91078949]
[537.96264648 36.98443222]
[552.65270996 33.95116806]
[567.34283447 30.91790581]
[581.78588867 16.85165596]
[599.85791016 23.73448753]
[614.45355225 20.27524948]
[629.04925537 16.81601143]
[643.64489746 13.35677242]
[658.24060059 9.89753437]
[672.67150879 5.80493450]
[686.91015625 1.08676314]
[701.14874268 -3.63140821]
[715.38739014 -8.34957981]
[729.62603760 -13.06775093]
[743.86468506 -17.78592300]
[758.10333252 -22.50409317]
[772.34197998 -27.22226524]
[784.26342773 -41.25877380]
[801.29888916 -37.03773880]
[815.46740723 -41.96249390]
[825.96228027 -53.80173111]
[840.52435303 -50.67190933]
[854.69287109 -55.59666824]
[868.86138916 -60.52142715]
[883.02990723 -65.44618225]
[887.61657715 -80.15224457]
[899.84033203 -89.23155212]
[914.88842773 -89.37048340]
[926.98797607 -80.72534180]
[941.15649414 -85.65009308]
[955.32501221 -90.57485199]
[962.26416016 -104.52069092]
[976.70318604 -109.31326294]
[989.95562744 -102.61192322]
[1004.12414551 -107.53668213]
[1018.29266357 -112.46144104]
[1032.46118164 -117.38619995]
[1042.76867676 -130.14106750]
[1058.92419434 -127.32498932]
[1064.30834961 -111.83488464]
[1053.38232422 -99.60565948]
[1037.38598633 -103.21768951]
[1023.21740723 -98.29293060]
[1009.04888916 -93.36817169]
[994.88037109 -88.44341278]
[988.64135742 -74.96713257]
[974.34265137 -69.77089691]
[960.24975586 -76.40634155]
[946.08123779 -71.48158264]
[931.91271973 -66.55682373]
[927.78369141 -52.27085876]
[915.89355469 -43.04648972]
[900.67376709 -42.58684158]
[887.95465088 -51.27767181]
[873.78613281 -46.35291290]
[859.61761475 -41.42815399]
[845.44909668 -36.50339890]
[835.96765137 -25.01641273]
[820.39215088 -27.79398155]
[806.22363281 -22.86922455]
[800.67370605 -12.12362480]
[788.91302490 -7.90346861]
[777.06011963 -12.98362541]
[762.82147217 -8.26545429]
[748.58288574 -3.54728246]
[734.34423828 1.17088878]
[720.10559082 5.88906002]
[705.86694336 10.60723114]
[691.62829590 15.32540321]
[677.38964844 20.04357338]
[690.28588867 27.70438004]
[694.11822510 42.20654678]
[686.69030762 55.23826981]
[672.25933838 59.33051682]
[659.09631348 52.13784790]
[654.74548340 37.78268433]
[661.69982910 24.49320793]
[647.10418701 27.95244598]
[632.50848389 31.41168404]
[617.91284180 34.87092209]
[603.31713867 38.33015823]
[598.75946045 47.47052383]
[589.73437500 52.70504379]
[579.09899902 52.09771729]
[570.37609863 45.60801315]
[555.68597412 48.64127731]
[540.99591064 51.67454147]
[535.08312988 56.10392761]
[526.07012939 54.64345932]
[511.33746338 57.46274948]
[496.60479736 60.28203964]
[481.87213135 63.10133362]
[467.13943481 65.92062378]
[452.40676880 68.73991394]
[437.69500732 71.66626740]
[423.00488281 74.69953156]
[436.90493774 80.33767700]
[447.45883179 90.99673462]
[452.95886230 104.95200348]
[452.51513672 119.94543457]
[446.19943237 133.55101013]
[435.03363037 143.56727600]
[420.82449341 148.37351990]
[405.87109375 147.19207764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 100]
[6 99]
[7 98]
[8 97]
[9 96]
[10 95]
[12 93]
[13 92]
[14 91]
[15 88]
[16 87]
[17 86]
[18 85]
[19 75]
[20 74]
[21 73]
[22 72]
[23 71]
[24 70]
[25 69]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[55 65]
[56 64]
[57 63]
[103 207]
[104 206]
[106 205]
[107 204]
[108 203]
[109 202]
[110 201]
[111 200]
[112 198]
[113 197]
[114 196]
[116 192]
[117 191]
[118 190]
[119 189]
[120 188]
[121 181]
[122 180]
[123 179]
[124 178]
[125 177]
[126 176]
[127 175]
[128 174]
[130 171]
[131 170]
[133 168]
[134 167]
[135 166]
[136 165]
[140 161]
[141 160]
[142 159]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
