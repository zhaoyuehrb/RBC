%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VAV2)
} def

/sequence { (\
ACUUUGGCUCGAGCACUGCCCUGAGCCGGUCGGGCCCGCGGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.214926652 ubox
2 13 0.102663682 ubox
2 25 0.010754233 ubox
2 29 0.245855739 ubox
2 33 0.167926755 ubox
2 34 0.005489226 ubox
2 41 0.025675123 ubox
2 42 0.026984748 ubox
3 12 0.102487156 ubox
3 13 0.040862510 ubox
3 24 0.011111564 ubox
3 28 0.201422350 ubox
3 29 0.043271989 ubox
3 32 0.161704632 ubox
3 33 0.011603323 ubox
3 40 0.024958910 ubox
3 41 0.027017953 ubox
4 11 0.096160191 ubox
4 12 0.056467177 ubox
4 13 0.014950468 ubox
4 23 0.011012406 ubox
4 28 0.042031529 ubox
4 29 0.561818690 ubox
4 32 0.010493456 ubox
4 33 0.009044798 ubox
4 40 0.025759819 ubox
5 11 0.059220697 ubox
5 12 0.019788436 ubox
5 15 0.060677399 ubox
5 28 0.767051264 ubox
5 32 0.010922049 ubox
5 38 0.016784651 ubox
5 44 0.014254691 ubox
6 10 0.058556390 ubox
6 14 0.064505765 ubox
6 17 0.024734452 ubox
6 20 0.015087859 ubox
6 27 0.901611956 ubox
6 31 0.017395655 ubox
6 36 0.059105352 ubox
6 37 0.015099469 ubox
6 43 0.016784286 ubox
6 46 0.221016358 ubox
7 14 0.214130918 ubox
7 16 0.026937189 ubox
7 19 0.015254261 ubox
7 26 0.902042487 ubox
7 30 0.017366666 ubox
7 35 0.060214339 ubox
7 36 0.010716639 ubox
7 43 0.152511718 ubox
7 45 0.223498441 ubox
8 13 0.214929139 ubox
8 18 0.015323399 ubox
8 25 0.902038853 ubox
8 29 0.017371681 ubox
8 34 0.061148329 ubox
8 41 0.013918772 ubox
8 42 0.152988999 ubox
8 44 0.222159668 ubox
9 24 0.901883458 ubox
9 28 0.004198510 ubox
9 33 0.061170067 ubox
9 40 0.013435124 ubox
9 41 0.152836004 ubox
9 42 0.033958251 ubox
10 23 0.901457380 ubox
10 28 0.016933309 ubox
10 32 0.061230066 ubox
10 38 0.017415125 ubox
10 40 0.152259901 ubox
10 41 0.034815704 ubox
10 44 0.003473155 ubox
11 17 0.010045648 ubox
11 22 0.783704526 ubox
11 27 0.017166216 ubox
11 31 0.061202813 ubox
11 37 0.019054209 ubox
11 39 0.144850089 ubox
11 43 0.003480128 ubox
12 22 0.251038377 ubox
12 30 0.055442230 ubox
13 19 0.773162832 ubox
13 21 0.283311810 ubox
13 26 0.021938330 ubox
13 30 0.012187909 ubox
13 35 0.100272728 ubox
13 39 0.067244935 ubox
13 43 0.133646471 ubox
13 45 0.099911792 ubox
14 18 0.769015299 ubox
14 23 0.006539673 ubox
14 25 0.021832527 ubox
14 29 0.023190836 ubox
14 34 0.100351259 ubox
14 38 0.070208781 ubox
14 42 0.133636583 ubox
14 44 0.099329673 ubox
15 22 0.009140747 ubox
15 30 0.021755011 ubox
16 25 0.034322073 ubox
16 29 0.033477329 ubox
16 33 0.102413182 ubox
16 41 0.134520889 ubox
16 42 0.003921941 ubox
17 24 0.034412952 ubox
17 28 0.033365915 ubox
17 32 0.102464653 ubox
17 38 0.005296307 ubox
17 40 0.134665030 ubox
17 44 0.229360591 ubox
18 26 0.036698149 ubox
18 27 0.028392430 ubox
18 30 0.012410570 ubox
18 31 0.101951135 ubox
18 35 0.123148573 ubox
18 37 0.004745978 ubox
18 39 0.134679691 ubox
18 43 0.370201303 ubox
18 45 0.023280587 ubox
19 25 0.040672625 ubox
19 29 0.048990117 ubox
19 34 0.121863170 ubox
19 38 0.134481462 ubox
19 41 0.004086649 ubox
19 42 0.370370019 ubox
19 44 0.023341811 ubox
20 28 0.048720793 ubox
20 29 0.090973899 ubox
20 33 0.120371089 ubox
20 34 0.128650339 ubox
20 40 0.004458320 ubox
20 41 0.370338877 ubox
20 42 0.024095935 ubox
21 28 0.091079798 ubox
21 29 0.009540771 ubox
21 32 0.118752633 ubox
21 33 0.130367758 ubox
21 40 0.370171938 ubox
21 41 0.024689839 ubox
22 28 0.010581130 ubox
22 32 0.131669342 ubox
22 38 0.355551322 ubox
22 40 0.025062642 ubox
23 27 0.014211905 ubox
23 31 0.174152923 ubox
23 37 0.362955891 ubox
23 39 0.038003504 ubox
24 30 0.172165354 ubox
25 35 0.372552014 ubox
25 39 0.029524138 ubox
25 43 0.007364778 ubox
26 33 0.010926133 ubox
26 34 0.372735478 ubox
26 38 0.028976180 ubox
26 42 0.007458012 ubox
27 32 0.014119484 ubox
27 33 0.372576732 ubox
27 38 0.007428872 ubox
27 41 0.007454218 ubox
27 44 0.007929276 ubox
28 36 0.030080424 ubox
28 37 0.010844199 ubox
28 43 0.042337451 ubox
28 46 0.198916589 ubox
29 35 0.030126154 ubox
29 36 0.010742714 ubox
29 39 0.007914307 ubox
29 43 0.020359817 ubox
29 45 0.203102028 ubox
30 34 0.028204455 ubox
30 41 0.044438053 ubox
30 42 0.018481917 ubox
30 44 0.196379826 ubox
31 38 0.008085554 ubox
31 40 0.047342173 ubox
31 41 0.016354739 ubox
31 44 0.047514196 ubox
32 37 0.008267516 ubox
32 39 0.048012686 ubox
32 43 0.026014071 ubox
32 46 0.806591891 ubox
33 45 0.811755756 ubox
33 46 0.154176424 ubox
34 43 0.885500605 ubox
34 45 0.156929387 ubox
35 41 0.020807397 ubox
35 42 0.886294663 ubox
35 44 0.157034573 ubox
36 40 0.022747448 ubox
36 41 0.885658134 ubox
36 42 0.155193308 ubox
37 41 0.154376366 ubox
37 44 0.009614295 ubox
38 43 0.010270470 ubox
38 45 0.039940024 ubox
39 44 0.039964891 ubox
40 46 0.006942244 ubox
41 45 0.006885628 ubox
4 29 0.9500000 lbox
5 28 0.9500000 lbox
6 27 0.9500000 lbox
7 26 0.9500000 lbox
8 25 0.9500000 lbox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
13 19 0.9500000 lbox
14 18 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
showpage
end
%%EOF
