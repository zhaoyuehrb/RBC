%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGAGGGGAGGCCGAGUCCUGGAAGCGGAGCUCCGCGCUGGGACUGGUUCCUUCGCAGCCAUUUUCUGUCCAACCAAACAGCCGAUUGGAGACGGGAGCCAACCAGGGCUGCAUUGGAGGUUGAAAUCACAAAGAUUAGACACCUUUUUAGAUAGGUGUUCUUCAGCACCACUGACAACACGGUUCUGACAGUAUUUC\
) } def
/len { sequence length } bind def

/coor [
[60.94745255 134.27195740]
[48.36315918 142.43502808]
[47.70067215 159.33296204]
[37.20307541 172.37855530]
[21.15971375 176.55717468]
[5.94015789 170.41438293]
[-6.51566219 178.77217102]
[-18.97148132 187.12995911]
[-31.42730141 195.48773193]
[-43.88312149 203.84552002]
[-56.33893967 212.20330811]
[-59.59520721 217.97071838]
[-64.53549194 220.79814148]
[-69.31465149 220.62026978]
[-82.02436829 228.58663940]
[-94.73409271 236.55300903]
[-100.34860229 243.76762390]
[-107.70399475 244.54264832]
[-120.53607178 252.31039429]
[-133.36814880 260.07815552]
[-146.20022583 267.84588623]
[-159.03230286 275.61361694]
[-171.86437988 283.38137817]
[-184.69644165 291.14910889]
[-197.52851868 298.91687012]
[-201.36231995 311.23706055]
[-212.21609497 317.44152832]
[-223.99691772 314.67584229]
[-236.94824219 322.24307251]
[-249.89956665 329.81033325]
[-262.85089111 337.37756348]
[-270.50231934 351.88232422]
[-286.89761353 352.23788452]
[-295.17068481 338.07852173]
[-286.81094360 323.97012329]
[-270.41812134 324.42623901]
[-257.46679688 316.85900879]
[-244.51547241 309.29174805]
[-231.56414795 301.72451782]
[-223.70701599 286.03616333]
[-205.29626465 286.08477783]
[-192.46418762 278.31704712]
[-179.63211060 270.54928589]
[-166.80004883 262.78155518]
[-153.96797180 255.01380920]
[-141.13589478 247.24606323]
[-128.30381775 239.47831726]
[-115.47174072 231.71057129]
[-102.70045471 223.84327698]
[-89.99073792 215.87692261]
[-77.28101349 207.91055298]
[-64.69672394 199.74748230]
[-52.24090576 191.38970947]
[-39.78508377 183.03192139]
[-27.32926559 174.67413330]
[-14.87344646 166.31634521]
[-2.41762638 157.95857239]
[-3.15892029 144.62442017]
[2.83501625 132.56932068]
[14.09354210 124.99137878]
[27.73413467 123.95975494]
[40.20009613 129.85073853]
[52.78438950 121.68767548]
[48.04286575 99.64611816]
[53.08419037 77.67118835]
[66.95914459 59.90048981]
[59.19139862 47.06841278]
[51.42365265 34.23633957]
[43.65591049 21.40426445]
[35.88816452 8.57218933]
[28.12042046 -4.25988579]
[20.35267639 -17.09196091]
[12.58493233 -29.92403603]
[1.88120079 -31.90833282]
[-5.80246305 -39.30659103]
[-8.09364128 -49.49901962]
[-4.47063065 -59.06290054]
[-11.83554173 -72.13034058]
[-19.20045280 -85.19778442]
[-26.56536484 -98.26522827]
[-41.99467468 -99.91327667]
[-53.48595047 -110.34065247]
[-56.62056732 -125.53781891]
[-50.19319534 -139.66114807]
[-36.67529678 -147.27993774]
[-21.26477242 -145.46461487]
[-9.88728905 -134.91319275]
[-6.91771793 -119.68291473]
[-13.49792099 -105.63014221]
[-6.13300943 -92.56269836]
[1.23190153 -79.49525452]
[8.59681320 -66.42781067]
[25.91624832 -57.83930206]
[25.41700745 -37.69178009]
[33.18475342 -24.85970497]
[40.95249557 -12.02762985]
[48.72024155 0.80444467]
[56.48798370 13.63651943]
[64.25572968 26.46859550]
[72.02347565 39.30067062]
[79.79122162 52.13274384]
[94.38878632 48.34553909]
[109.45906830 48.90993118]
[123.73247528 53.77837753]
[136.00656128 62.54073334]
[145.24728394 74.45882416]
[150.67619324 88.52861023]
[165.63085938 87.36335754]
[180.58552551 86.19809723]
[195.54020691 85.03283691]
[210.49487305 83.86758423]
[225.44953918 82.70232391]
[240.40422058 81.53706360]
[255.35888672 80.37181091]
[270.24291992 78.51033020]
[285.02395630 75.95667267]
[297.30545044 65.98293304]
[311.16415405 71.44054413]
[325.94519043 68.88689423]
[340.72622681 66.33324432]
[348.78860474 56.25937271]
[361.15750122 54.43997192]
[371.11865234 61.31110382]
[385.93759155 58.98762894]
[400.75656128 56.66415787]
[415.57550049 54.34068298]
[430.39447021 52.01721191]
[444.48541260 46.87473297]
[457.31750488 39.10698700]
[470.14956665 31.33924484]
[482.98162842 23.57149887]
[488.19256592 8.39830303]
[503.35217285 3.14796853]
[516.83129883 11.84810448]
[518.28991699 27.82471085]
[506.60913086 38.82190323]
[490.74938965 36.40357590]
[477.91729736 44.17131805]
[465.08523560 51.93906403]
[452.25317383 59.70680618]
[454.15670776 66.96121979]
[459.86740112 88.72444916]
[474.86013794 89.19094086]
[489.85290527 89.65744019]
[504.84564209 90.12393951]
[519.83837891 90.59043884]
[534.83111572 91.05693817]
[549.82385254 91.52342987]
[559.22381592 79.17753601]
[574.09484863 74.74688721]
[588.71887207 79.93515778]
[597.47259521 92.74735260]
[596.98999023 108.25692749]
[587.45666504 120.50012207]
[572.53845215 124.76918793]
[557.97155762 119.42257690]
[549.35736084 106.51617432]
[534.36462402 106.04968262]
[519.37188721 105.58318329]
[504.37915039 105.11668396]
[489.38638306 104.65018463]
[474.39364624 104.18368530]
[459.40090942 103.71718597]
[441.20803833 94.63806915]
[432.19055176 80.49352264]
[432.71792603 66.83616638]
[417.89898682 69.15963745]
[403.08001709 71.48311615]
[388.26107788 73.80658722]
[373.44210815 76.13005829]
[360.40521240 87.87305450]
[343.27987671 81.11427307]
[328.49884033 83.66792297]
[313.71780396 86.22158051]
[302.49356079 96.01266479]
[287.57760620 90.73770142]
[272.79660034 93.29135895]
[284.36715698 102.83713531]
[285.94219971 117.75421143]
[276.62036133 129.50595093]
[261.73629761 131.36714172]
[249.80772400 122.27268982]
[247.66105652 107.42708588]
[256.52413940 95.32647705]
[241.56947327 96.49173737]
[226.61480713 97.65699768]
[211.66012573 98.82225037]
[196.70545959 99.98751068]
[181.75079346 101.15277100]
[166.79611206 102.31802368]
[151.84144592 103.48328400]
[150.16801453 113.52182007]
[146.56988525 123.04159546]
[141.18510437 131.67738342]
[134.22026062 139.09785461]
[125.94255829 145.01835632]
[116.66957092 149.21173096]
[106.75706482 151.51708984]
[96.58531189 151.84600830]
[86.54457092 150.18585205]
[77.02005005 146.60032654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 63]
[2 62]
[6 57]
[7 56]
[8 55]
[9 54]
[10 53]
[11 52]
[14 51]
[15 50]
[16 49]
[18 48]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[24 42]
[25 41]
[28 39]
[29 38]
[30 37]
[31 36]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[77 92]
[78 91]
[79 90]
[80 89]
[107 191]
[108 190]
[109 189]
[110 188]
[111 187]
[112 186]
[113 185]
[114 184]
[115 177]
[116 176]
[118 174]
[119 173]
[120 172]
[123 170]
[124 169]
[125 168]
[126 167]
[127 166]
[128 140]
[129 139]
[130 138]
[131 137]
[142 163]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
