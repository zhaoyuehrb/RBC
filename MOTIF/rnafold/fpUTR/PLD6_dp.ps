%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLD6)
} def

/sequence { (\
GACUCCGCUGCGGCGGCGUGGCUGUGGGUCCCGGAUUAGCGGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.367389502 ubox
1 37 0.004441276 ubox
2 19 0.363078789 ubox
2 25 0.016289458 ubox
2 29 0.370616546 ubox
2 36 0.004646072 ubox
3 16 0.008052881 ubox
3 18 0.380214066 ubox
3 21 0.005300597 ubox
3 24 0.016704376 ubox
3 27 0.020817785 ubox
3 28 0.370378467 ubox
3 45 0.078820542 ubox
4 15 0.005827379 ubox
4 16 0.005506057 ubox
4 20 0.006456753 ubox
4 26 0.019945761 ubox
4 27 0.302852079 ubox
4 28 0.042375292 ubox
4 35 0.015463327 ubox
4 44 0.077491099 ubox
4 45 0.008722645 ubox
5 13 0.006461199 ubox
5 15 0.005276566 ubox
5 16 0.588578870 ubox
5 20 0.012015274 ubox
5 21 0.014691854 ubox
5 26 0.301984831 ubox
5 27 0.248522378 ubox
5 28 0.004079833 ubox
5 34 0.016457071 ubox
5 42 0.096131417 ubox
5 44 0.007999137 ubox
5 45 0.678114617 ubox
6 12 0.006517713 ubox
6 15 0.592862847 ubox
6 18 0.020679300 ubox
6 20 0.016088865 ubox
6 24 0.245644348 ubox
6 26 0.249359017 ubox
6 27 0.004571025 ubox
6 33 0.016460577 ubox
6 41 0.096576245 ubox
6 44 0.686239713 ubox
7 11 0.006099307 ubox
7 14 0.592977523 ubox
7 17 0.029237052 ubox
7 19 0.016082215 ubox
7 22 0.301672210 ubox
7 23 0.051593096 ubox
7 25 0.243195957 ubox
7 29 0.003245367 ubox
7 32 0.016346069 ubox
7 40 0.096589369 ubox
7 43 0.686456213 ubox
7 46 0.078958140 ubox
8 13 0.592884085 ubox
8 16 0.029253922 ubox
8 18 0.016077321 ubox
8 21 0.306241316 ubox
8 24 0.242622654 ubox
8 27 0.074500006 ubox
8 28 0.003493585 ubox
8 39 0.096583632 ubox
8 42 0.686342305 ubox
8 45 0.079535975 ubox
9 15 0.029148456 ubox
9 18 0.008672048 ubox
9 20 0.305129147 ubox
9 26 0.074773298 ubox
9 38 0.095499893 ubox
9 41 0.685811679 ubox
9 44 0.079481780 ubox
10 14 0.027773681 ubox
10 17 0.022013723 ubox
10 19 0.305615430 ubox
10 22 0.240641087 ubox
10 25 0.086455784 ubox
10 29 0.004170468 ubox
10 37 0.092270360 ubox
10 40 0.686264923 ubox
10 43 0.079537676 ubox
11 16 0.022038035 ubox
11 18 0.306255062 ubox
11 20 0.004345156 ubox
11 21 0.241153409 ubox
11 24 0.087943255 ubox
11 28 0.004389981 ubox
11 33 0.099070922 ubox
11 39 0.684877074 ubox
11 42 0.079499132 ubox
12 17 0.304919399 ubox
12 19 0.005336182 ubox
12 23 0.095586501 ubox
12 25 0.003792826 ubox
12 30 0.009595653 ubox
12 31 0.008862386 ubox
12 32 0.133770740 ubox
12 37 0.041216701 ubox
13 19 0.238672287 ubox
13 22 0.096111724 ubox
13 25 0.070525357 ubox
13 29 0.009186324 ubox
13 30 0.008536591 ubox
13 31 0.133755805 ubox
13 36 0.044955490 ubox
13 40 0.079527181 ubox
14 18 0.237598975 ubox
14 20 0.004163385 ubox
14 21 0.096073873 ubox
14 24 0.075106265 ubox
14 28 0.010002733 ubox
14 33 0.310144031 ubox
14 39 0.079538879 ubox
15 23 0.075279201 ubox
15 30 0.133815408 ubox
15 31 0.011519006 ubox
15 32 0.310317921 ubox
15 37 0.013218207 ubox
16 22 0.075358749 ubox
16 25 0.009697611 ubox
16 29 0.134287900 ubox
16 30 0.014952812 ubox
16 31 0.309627672 ubox
16 36 0.013187177 ubox
16 46 0.009303732 ubox
17 21 0.074815861 ubox
17 24 0.011203037 ubox
17 26 0.010652673 ubox
17 28 0.138220624 ubox
17 33 0.602315827 ubox
17 44 0.141383299 ubox
17 45 0.010846342 ubox
18 23 0.007969738 ubox
18 25 0.008179201 ubox
18 29 0.013850834 ubox
18 32 0.602297371 ubox
18 43 0.143217170 ubox
18 46 0.426241582 ubox
19 24 0.003460271 ubox
19 26 0.124106653 ubox
19 28 0.018870571 ubox
19 33 0.012490762 ubox
19 42 0.142979690 ubox
19 44 0.007467764 ubox
19 45 0.435066523 ubox
20 25 0.101299247 ubox
20 30 0.620332768 ubox
20 31 0.265907082 ubox
20 32 0.012545490 ubox
20 43 0.016622717 ubox
21 29 0.623967964 ubox
21 30 0.264551898 ubox
21 31 0.012173341 ubox
21 40 0.143409019 ubox
21 43 0.572294007 ubox
21 46 0.029547349 ubox
22 28 0.668451592 ubox
22 34 0.003869645 ubox
22 39 0.143416319 ubox
22 42 0.572776124 ubox
22 45 0.029892628 ubox
23 27 0.602218864 ubox
23 33 0.003917392 ubox
23 38 0.142317881 ubox
23 41 0.572346418 ubox
23 44 0.029835447 ubox
24 32 0.004145784 ubox
24 36 0.020585727 ubox
24 37 0.133759572 ubox
24 40 0.572668825 ubox
24 43 0.029692681 ubox
25 33 0.111283469 ubox
25 35 0.026186298 ubox
25 38 0.020156691 ubox
25 39 0.570497718 ubox
25 41 0.005401410 ubox
25 42 0.017404587 ubox
26 32 0.126189510 ubox
26 37 0.021634221 ubox
26 40 0.007605110 ubox
27 31 0.124210671 ubox
27 36 0.026631013 ubox
27 37 0.407297599 ubox
28 36 0.573656598 ubox
28 40 0.009124392 ubox
28 43 0.004481891 ubox
28 46 0.151141731 ubox
29 35 0.576681655 ubox
29 39 0.008881212 ubox
29 45 0.154693149 ubox
30 34 0.571974306 ubox
30 42 0.003711240 ubox
30 44 0.161951822 ubox
30 45 0.004974774 ubox
31 41 0.003678096 ubox
31 42 0.371275727 ubox
31 44 0.005977710 ubox
31 45 0.148045398 ubox
32 41 0.374018059 ubox
32 44 0.149309670 ubox
33 40 0.373083063 ubox
33 43 0.148946073 ubox
36 42 0.005366611 ubox
37 41 0.005151292 ubox
39 46 0.036779585 ubox
40 45 0.037084620 ubox
5 45 0.9500000 lbox
6 44 0.9500000 lbox
7 43 0.9500000 lbox
8 42 0.9500000 lbox
9 41 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
23 27 0.9500000 lbox
showpage
end
%%EOF
