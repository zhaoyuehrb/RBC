%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGAAGCGUUCCGUGCGUGCAAGUGCUGCGAACCACGUGGGUCCCGGGCGCGUUUCGGGUGCUGGCGGCUGCAGCCGGAGUUCAAACCUAAGCAGCUGGAAGGGCCCUGUGGCUAGGUACCAUAGAGUCUCUACACAGGACUAAGUCAGCCUGGUGUGCAGGGGAGGCAGACACACAAACAGAAAAUUGGACUACAGUGCUAAGAUGCUGUAAGAAGAGGUUAACUAAAGGACAGGAAGAUGGGGCCAAGAG\
) } def
/len { sequence length } bind def

/coor [
[391.90441895 418.78982544]
[381.21069336 402.19653320]
[374.03042603 383.80368042]
[370.65216064 364.34600830]
[371.21255493 344.60110474]
[375.69082642 325.35842896]
[383.90951538 307.38760376]
[371.58099365 298.84317017]
[356.71301270 297.95263672]
[349.77804565 283.73233032]
[337.44952393 275.18789673]
[325.12100220 266.64346313]
[312.79248047 258.09899902]
[297.92449951 257.20846558]
[290.98953247 242.98818970]
[278.66101074 234.44374084]
[266.33248901 225.89929199]
[254.00396729 217.35484314]
[241.67544556 208.81039429]
[229.34692383 200.26596069]
[217.01840210 191.72151184]
[202.15043640 190.83097839]
[195.21545410 176.61068726]
[182.88693237 168.06623840]
[175.61929321 166.84257507]
[170.45965576 159.33909607]
[158.23776245 150.64282227]
[146.01586914 141.94654846]
[133.79396057 133.25027466]
[122.74401855 141.59713745]
[109.75350189 146.39485168]
[95.93079376 147.23403931]
[82.45528412 144.04310608]
[70.47672272 137.09432983]
[61.01715851 126.98056793]
[54.88370132 114.56475830]
[52.59966660 100.90625763]
[54.35993958 87.17043304]
[40.74362564 80.87790680]
[27.12730789 74.58537292]
[13.51099205 68.29284668]
[-1.16543758 73.51205444]
[-14.88467884 66.93656921]
[-19.76995277 52.91267014]
[-33.38626862 46.62014008]
[-49.15924835 47.85450745]
[-57.46667480 35.49182510]
[-71.08299255 29.19929314]
[-86.85597229 30.43366241]
[-95.16339874 18.07097816]
[-108.77970886 11.77844906]
[-122.39602661 5.48591900]
[-136.01234436 -0.80661076]
[-140.25903320 -0.27219364]
[-144.07801819 -1.02570570]
[-147.12036133 -2.77860928]
[-149.16499329 -5.15940189]
[-150.13453674 -7.76185703]
[-163.42300415 -14.72006416]
[-176.71145630 -21.67827225]
[-189.99992371 -28.63648033]
[-205.81465149 -28.18365479]
[-213.50053406 -40.94204330]
[-226.78900146 -47.90025330]
[-241.70558167 -43.41323090]
[-255.08285522 -50.65914536]
[-259.26861572 -64.90747833]
[-272.55709839 -71.86568451]
[-285.84555054 -78.82389069]
[-299.13400269 -85.78209686]
[-312.42248535 -92.74031067]
[-325.71093750 -99.69851685]
[-338.99942017 -106.65672302]
[-350.84524536 -99.63975525]
[-364.50286865 -99.38713074]
[-376.41000366 -105.85795593]
[-383.51361084 -117.27157593]
[-384.05249023 -130.59619141]
[-397.25387573 -137.71821594]
[-411.18258667 -130.87930298]
[-426.46517944 -133.56675720]
[-437.22515869 -144.74719238]
[-439.32513428 -160.12150574]
[-431.95758057 -173.77798462]
[-417.95550537 -180.46539307]
[-402.70300293 -177.61231995]
[-392.06491089 -166.31581116]
[-390.13186646 -150.91961670]
[-376.93048096 -143.79757690]
[-362.35415649 -151.37528992]
[-345.97076416 -148.73526001]
[-334.28051758 -136.72390747]
[-332.04119873 -119.94519043]
[-318.75274658 -112.98698425]
[-305.46426392 -106.02877045]
[-292.17581177 -99.07056427]
[-278.88732910 -92.11235809]
[-265.59887695 -85.15415192]
[-252.31040955 -78.19594574]
[-238.21534729 -82.87193298]
[-224.63983154 -76.00461578]
[-219.83079529 -61.18872070]
[-206.54232788 -54.23051071]
[-191.67808533 -55.18103409]
[-183.04171753 -41.92494583]
[-169.75325012 -34.96673965]
[-156.46478271 -28.00853157]
[-143.17631531 -21.05032349]
[-129.71981812 -14.42292690]
[-116.10350037 -8.13039684]
[-102.48718262 -1.83786750]
[-88.87086487 4.45466232]
[-74.07181549 2.77020955]
[-64.79045868 15.58297729]
[-51.17414474 21.87550735]
[-36.37509537 20.19105530]
[-27.09374046 33.00382233]
[-13.47742367 39.29635239]
[0.36914492 33.92903137]
[14.26766586 40.11658096]
[19.80352211 54.67652893]
[33.41983795 60.96905899]
[47.03615570 67.26158905]
[60.65246964 73.55411530]
[71.69975281 61.96437454]
[85.97498322 54.71300888]
[101.84992218 52.62711334]
[104.79901886 37.91987610]
[107.74811554 23.21263695]
[110.69721222 8.50539970]
[113.64630890 -6.20183754]
[103.73661804 -18.29861641]
[103.97270203 -33.93441772]
[114.24309540 -45.72649384]
[129.69842529 -48.10698700]
[143.04116821 -39.95190430]
[147.97126770 -25.11182022]
[142.16090393 -10.59377384]
[128.35354614 -3.25274086]
[125.40444946 11.45449638]
[122.45535278 26.16173363]
[119.50625610 40.86897278]
[116.55715942 55.57621002]
[130.23165894 63.48069382]
[140.55059814 75.43862152]
[146.36865234 90.12273407]
[147.04003906 105.90316772]
[142.49023438 121.02837372]
[154.71212769 129.72465515]
[166.93403625 138.42092896]
[179.15592957 147.11720276]
[191.43138123 155.73771667]
[203.75990295 164.28216553]
[219.50967407 165.78385925]
[225.56285095 179.39299011]
[237.89137268 187.93743896]
[250.21989441 196.48187256]
[262.54840088 205.02632141]
[274.87692261 213.57077026]
[287.20544434 222.11521912]
[299.53396606 230.65966797]
[315.28375244 232.16134644]
[321.33691406 245.77047729]
[333.66543579 254.31492615]
[345.99395752 262.85937500]
[358.32247925 271.40380859]
[374.07226562 272.90551758]
[380.12542725 286.51464844]
[392.45394897 295.05908203]
[399.72793579 287.05514526]
[407.83212280 279.89459229]
[416.66931152 273.66305542]
[426.13351440 268.43493652]
[436.11129761 264.27261353]
[446.48312378 261.22573853]
[457.12469482 259.33056641]
[467.90853882 258.60952759]
[478.70556641 259.07107544]
[489.38641357 260.70941162]
[499.82327271 263.50469971]
[509.89123535 267.42324829]
[519.46978760 272.41787720]
[528.44439697 278.42861938]
[536.70764160 285.38327026]
[544.16082764 293.19839478]
[550.71478271 301.78021240]
[556.29132080 311.02584839]
[560.82373047 320.82449341]
[564.25805664 331.05865479]
[566.55334473 341.60574341]
[567.68237305 352.33941650]
[567.63183594 363.13110352]
[566.40258789 373.85159302]
[564.00958252 384.37252808]
[560.48168945 394.56799316]
[555.86138916 404.31597900]
[550.20416260 413.49984741]
[543.57806396 422.00973511]
[554.11883545 432.68173218]
[569.32135010 437.06292725]
[572.76025391 451.55511475]
[583.30102539 462.22711182]
[593.84185791 472.89910889]
[608.26831055 468.03723145]
[623.31378174 469.91351318]
[636.00073242 478.10266113]
[643.84179688 490.93539429]
[645.32739258 505.83847046]
[640.21624756 519.85064697]
[650.75708008 530.52264404]
[661.29785156 541.19464111]
[671.83868408 551.86663818]
[685.00817871 546.77746582]
[699.08013916 547.08599854]
[711.93469238 552.71270752]
[721.64776611 562.77960205]
[726.77941895 575.74664307]
[726.58697510 589.64752197]
[721.13226318 602.38787842]
[731.54028320 613.18945312]
[747.48937988 614.92352295]
[755.95562744 628.55072021]
[750.44458008 643.61749268]
[735.18371582 648.56585693]
[721.87994385 639.59985352]
[720.73876953 623.59747314]
[710.33074951 612.79589844]
[695.23779297 618.08331299]
[679.29266357 616.24621582]
[665.69927979 607.60253906]
[657.21112061 593.84295654]
[655.57397461 577.70043945]
[661.16668701 562.40747070]
[650.62585449 551.73547363]
[640.08508301 541.06347656]
[629.54425049 530.39147949]
[615.46990967 535.32891846]
[600.58636475 533.65911865]
[587.85156250 525.65991211]
[579.81994629 512.87268066]
[578.12988281 497.80514526]
[583.16986084 483.43991089]
[572.62902832 472.76791382]
[562.08825684 462.09591675]
[547.63970947 458.47805786]
[543.44683838 443.22253418]
[532.90606689 432.55053711]
[516.68408203 443.74237061]
[498.55612183 451.48483276]
[479.24621582 455.46682739]
[459.52600098 455.52764893]
[440.18392944 451.66317749]
[421.99353027 444.02639771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 169]
[8 168]
[10 166]
[11 165]
[12 164]
[13 163]
[15 161]
[16 160]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[23 153]
[24 152]
[26 151]
[27 150]
[28 149]
[29 148]
[38 124]
[39 123]
[40 122]
[41 121]
[44 118]
[45 117]
[47 115]
[48 114]
[50 112]
[51 111]
[52 110]
[53 109]
[58 108]
[59 107]
[60 106]
[61 105]
[63 103]
[64 102]
[67 99]
[68 98]
[69 97]
[70 96]
[71 95]
[72 94]
[73 93]
[78 89]
[79 88]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[198 247]
[199 246]
[201 244]
[202 243]
[203 242]
[209 236]
[210 235]
[211 234]
[212 233]
[219 227]
[220 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
