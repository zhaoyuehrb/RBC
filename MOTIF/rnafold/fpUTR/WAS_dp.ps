%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WAS)
} def

/sequence { (\
UCCUCUUCUUACCCUGCACCCAGAGCCUCGCCAGAGAAGACAAGGGCAGAAAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 37 0.004032538 ubox
1 40 0.015825193 ubox
1 45 0.026872935 ubox
1 46 0.208392178 ubox
1 50 0.021473121 ubox
2 36 0.003302410 ubox
2 39 0.017357830 ubox
2 44 0.035139408 ubox
2 45 0.448612800 ubox
2 46 0.044563039 ubox
2 49 0.022276878 ubox
3 25 0.024965582 ubox
3 36 0.021960568 ubox
3 39 0.014944618 ubox
3 44 0.449558793 ubox
3 45 0.046234307 ubox
3 46 0.042736364 ubox
3 49 0.010553325 ubox
3 53 0.140168170 ubox
4 24 0.025441273 ubox
4 35 0.022208867 ubox
4 37 0.018310295 ubox
4 38 0.014095180 ubox
4 40 0.338194154 ubox
4 43 0.402896095 ubox
4 44 0.029716281 ubox
4 45 0.044187160 ubox
4 46 0.003740627 ubox
4 48 0.010208815 ubox
4 50 0.024833147 ubox
4 52 0.139658881 ubox
5 23 0.025465593 ubox
5 34 0.022213874 ubox
5 36 0.019228000 ubox
5 39 0.388769166 ubox
5 44 0.048106490 ubox
5 45 0.006357958 ubox
5 46 0.005440161 ubox
5 49 0.025727088 ubox
5 53 0.118772203 ubox
6 22 0.024184406 ubox
6 25 0.006673595 ubox
6 33 0.021238601 ubox
6 35 0.015666823 ubox
6 36 0.012666619 ubox
6 38 0.388733404 ubox
6 40 0.005893224 ubox
6 43 0.046305211 ubox
6 44 0.006291087 ubox
6 45 0.004818597 ubox
6 46 0.008455543 ubox
6 48 0.024190593 ubox
6 50 0.014201169 ubox
6 51 0.260447403 ubox
6 52 0.106713107 ubox
6 53 0.009956115 ubox
7 24 0.009753769 ubox
7 34 0.010443878 ubox
7 35 0.018733905 ubox
7 37 0.388671415 ubox
7 40 0.377149955 ubox
7 42 0.023886599 ubox
7 45 0.010461392 ubox
7 46 0.010089692 ubox
7 49 0.007487685 ubox
7 50 0.287903887 ubox
7 51 0.088180089 ubox
7 52 0.010482381 ubox
8 23 0.010127971 ubox
8 25 0.005897801 ubox
8 34 0.021958380 ubox
8 36 0.388086789 ubox
8 39 0.379345138 ubox
8 44 0.011336610 ubox
8 45 0.010549178 ubox
8 46 0.008167186 ubox
8 49 0.294849020 ubox
8 53 0.320586866 ubox
9 22 0.009616924 ubox
9 24 0.006075259 ubox
9 33 0.021375519 ubox
9 34 0.013430516 ubox
9 35 0.384796509 ubox
9 37 0.009072787 ubox
9 38 0.376807842 ubox
9 40 0.012142747 ubox
9 43 0.011260461 ubox
9 44 0.010421843 ubox
9 45 0.007755805 ubox
9 48 0.280930682 ubox
9 49 0.051206793 ubox
9 50 0.022016809 ubox
9 51 0.036556941 ubox
9 52 0.325014276 ubox
9 53 0.031522398 ubox
10 16 0.003534237 ubox
10 23 0.004278498 ubox
10 24 0.004180341 ubox
10 33 0.019437386 ubox
10 34 0.334859760 ubox
10 35 0.013354008 ubox
10 36 0.010179318 ubox
10 37 0.357205664 ubox
10 38 0.007756526 ubox
10 39 0.011811216 ubox
10 42 0.010313890 ubox
10 43 0.009408277 ubox
10 44 0.006862254 ubox
10 48 0.075760206 ubox
10 49 0.013357800 ubox
10 50 0.040813822 ubox
10 51 0.317842790 ubox
10 52 0.035241646 ubox
11 15 0.005064819 ubox
12 45 0.075276739 ubox
12 46 0.294334964 ubox
13 44 0.074916384 ubox
13 45 0.294866746 ubox
13 46 0.016502329 ubox
14 23 0.368442117 ubox
14 25 0.072951072 ubox
14 34 0.206841328 ubox
14 36 0.012432114 ubox
14 39 0.007611290 ubox
14 44 0.294674169 ubox
14 45 0.016490323 ubox
14 49 0.775182124 ubox
14 53 0.005852283 ubox
15 22 0.369479917 ubox
15 24 0.073830294 ubox
15 30 0.026986236 ubox
15 33 0.214362385 ubox
15 35 0.012286130 ubox
15 38 0.007517851 ubox
15 42 0.037838548 ubox
15 43 0.285053195 ubox
15 44 0.015837698 ubox
15 48 0.777614987 ubox
15 52 0.005362700 ubox
15 55 0.013975952 ubox
16 21 0.366052924 ubox
16 26 0.383046079 ubox
16 29 0.021420879 ubox
16 31 0.207358524 ubox
16 32 0.168921563 ubox
16 41 0.047617931 ubox
16 47 0.778387242 ubox
16 54 0.015768038 ubox
17 25 0.384132038 ubox
17 30 0.245129194 ubox
17 46 0.774160606 ubox
17 53 0.015749773 ubox
19 45 0.746985457 ubox
19 46 0.078906162 ubox
20 44 0.745769370 ubox
20 45 0.113612914 ubox
20 46 0.004689170 ubox
21 44 0.116246699 ubox
21 45 0.006641332 ubox
22 28 0.041803095 ubox
23 27 0.042555095 ubox
23 29 0.061994139 ubox
24 28 0.054071977 ubox
25 31 0.167800264 ubox
25 47 0.022804536 ubox
25 54 0.022105779 ubox
26 30 0.166948391 ubox
26 45 0.005859473 ubox
26 46 0.022797657 ubox
26 53 0.022090339 ubox
27 34 0.029160212 ubox
27 36 0.893417665 ubox
27 39 0.054534936 ubox
27 44 0.005917941 ubox
27 45 0.022619633 ubox
27 49 0.014932562 ubox
28 33 0.027485830 ubox
28 35 0.897348457 ubox
28 37 0.108324988 ubox
28 38 0.039055634 ubox
28 40 0.019000245 ubox
28 43 0.004917727 ubox
28 44 0.017157764 ubox
28 48 0.014881627 ubox
28 50 0.020224031 ubox
29 34 0.897633002 ubox
29 36 0.117715841 ubox
29 39 0.020251717 ubox
29 44 0.010482675 ubox
29 49 0.020716107 ubox
30 47 0.027727347 ubox
31 45 0.004057035 ubox
31 46 0.027744555 ubox
32 44 0.004364794 ubox
32 45 0.027680623 ubox
44 57 0.285497644 ubox
45 56 0.288072502 ubox
45 57 0.010916673 ubox
46 54 0.451765355 ubox
46 56 0.012515542 ubox
47 53 0.452308528 ubox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
16 47 0.9500000 lbox
17 46 0.9500000 lbox
19 45 0.9500000 lbox
20 44 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
showpage
end
%%EOF
