%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CST6)
} def

/sequence { (\
GCGGCCGCAAGCUCGGCACUCACGGCUCUGAGGGCUCCGACGGCACUGACGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 39 0.005521638 ubox
3 36 0.009426355 ubox
3 38 0.005353758 ubox
3 54 0.992495542 ubox
4 17 0.011702576 ubox
4 35 0.010623263 ubox
4 37 0.004638271 ubox
4 44 0.009527900 ubox
4 53 0.999769125 ubox
5 16 0.011720989 ubox
5 33 0.003803770 ubox
5 34 0.010845851 ubox
5 43 0.009584523 ubox
5 52 0.999803434 ubox
6 15 0.011721537 ubox
6 32 0.003933820 ubox
6 33 0.010799511 ubox
6 42 0.009585286 ubox
6 51 0.999784327 ubox
7 14 0.011241684 ubox
7 41 0.009564717 ubox
7 44 0.010784124 ubox
7 50 0.999050614 ubox
8 30 0.015895434 ubox
8 43 0.011787544 ubox
8 48 0.973861622 ubox
9 29 0.015726781 ubox
9 47 0.943120417 ubox
10 27 0.023079309 ubox
10 36 0.016132748 ubox
10 47 0.162306539 ubox
11 17 0.007108621 ubox
11 26 0.024009009 ubox
11 35 0.016390553 ubox
11 44 0.983432379 ubox
11 46 0.131938704 ubox
12 16 0.007073421 ubox
12 25 0.023872423 ubox
12 32 0.027132131 ubox
12 34 0.016350221 ubox
12 43 0.984399947 ubox
13 24 0.005026203 ubox
13 31 0.027380648 ubox
13 33 0.016121702 ubox
13 40 0.734062047 ubox
13 42 0.606881076 ubox
13 43 0.055679612 ubox
13 49 0.033231761 ubox
14 24 0.024558386 ubox
14 30 0.027460538 ubox
14 32 0.015259803 ubox
14 39 0.955287450 ubox
14 42 0.166716622 ubox
14 48 0.033350863 ubox
15 23 0.025045627 ubox
15 27 0.016254840 ubox
15 28 0.006106716 ubox
15 29 0.025350522 ubox
15 36 0.252015823 ubox
15 37 0.112810815 ubox
15 38 0.941269861 ubox
15 41 0.153204704 ubox
15 47 0.031672600 ubox
16 26 0.018552309 ubox
16 28 0.024841780 ubox
16 35 0.436905866 ubox
16 36 0.020436649 ubox
16 37 0.889734928 ubox
16 44 0.069460525 ubox
16 46 0.028247056 ubox
17 25 0.018744541 ubox
17 30 0.003170440 ubox
17 34 0.511511520 ubox
17 43 0.069929404 ubox
19 25 0.023659898 ubox
19 32 0.840359303 ubox
19 33 0.072936220 ubox
19 34 0.344156015 ubox
19 43 0.025006188 ubox
20 24 0.021361431 ubox
20 31 0.845835651 ubox
20 32 0.035074616 ubox
20 33 0.343268502 ubox
20 34 0.008242168 ubox
20 40 0.096156148 ubox
20 42 0.023483939 ubox
21 30 0.846706403 ubox
21 32 0.341289602 ubox
21 33 0.013846517 ubox
21 39 0.097066923 ubox
21 42 0.003594174 ubox
22 29 0.762796705 ubox
23 30 0.300318188 ubox
23 39 0.023325657 ubox
24 29 0.230997312 ubox
24 36 0.397743387 ubox
24 37 0.015830242 ubox
24 38 0.021973766 ubox
24 54 0.010945561 ubox
25 35 0.402991154 ubox
25 37 0.017337738 ubox
25 53 0.011031852 ubox
26 32 0.004481424 ubox
26 33 0.006806457 ubox
26 34 0.403148088 ubox
26 52 0.011017357 ubox
27 31 0.004643377 ubox
27 32 0.008185177 ubox
27 33 0.400966138 ubox
27 34 0.004750463 ubox
27 51 0.010385989 ubox
28 32 0.387056685 ubox
28 33 0.027096092 ubox
28 34 0.010372314 ubox
28 43 0.005686237 ubox
29 33 0.009408432 ubox
29 42 0.005779362 ubox
30 41 0.005819360 ubox
31 47 0.016374577 ubox
32 38 0.007046361 ubox
32 46 0.017061865 ubox
32 47 0.009754275 ubox
33 37 0.006979367 ubox
33 46 0.014116361 ubox
34 44 0.036509838 ubox
35 43 0.036642853 ubox
36 42 0.033793965 ubox
37 42 0.011607372 ubox
37 43 0.011877028 ubox
37 52 0.006319192 ubox
38 42 0.012113907 ubox
38 51 0.006479086 ubox
39 50 0.006485957 ubox
41 48 0.007715088 ubox
42 47 0.005961222 ubox
42 54 0.010205653 ubox
43 53 0.010283156 ubox
44 52 0.010275982 ubox
3 54 0.9500000 lbox
4 53 0.9500000 lbox
5 52 0.9500000 lbox
6 51 0.9500000 lbox
7 50 0.9500000 lbox
8 48 0.9500000 lbox
9 47 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
showpage
end
%%EOF
