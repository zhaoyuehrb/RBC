%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCAUCCGGGUGCUGCGGCGCGAAUAAGAGCCGGACCGCGCUUGCGCAUUGAGUCCCACUCCUUCGACCUCUGCCGCAGCCCGUGCCGCCGCCGCCUCCUGGGAAGAGAGGAAGCGGGAGAGGAGCCCACGUCGCCUGUCACCCAAUAUCUCCAGCCGCGCAGUCCCGAAGAGUGUAAG\
) } def
/len { sequence length } bind def

/coor [
[100.58045959 158.34059143]
[98.50432587 143.48497009]
[96.42818451 128.62934875]
[94.35205078 113.77371979]
[90.90158081 128.37145996]
[77.79681396 135.66976929]
[63.56967545 130.91702271]
[57.48280716 117.20754242]
[63.49908829 103.46693420]
[77.70114899 98.64105225]
[62.71527100 97.99037170]
[53.97878265 100.75019073]
[47.47560501 97.19611359]
[32.50327682 96.28543854]
[17.53094482 95.37476349]
[2.55861473 94.46408844]
[-12.41371536 93.55341339]
[-27.38604546 92.64273834]
[-42.35837555 91.73206329]
[-57.33070755 90.82138824]
[-72.30303955 89.91071320]
[-87.30077362 89.65037537]
[-102.29569244 90.04085541]
[-117.29061127 90.43134308]
[-132.28552246 90.82183075]
[-139.32945251 99.15438843]
[-149.58979797 102.15821838]
[-159.59497070 99.06946564]
[-166.09724426 91.14436340]
[-181.09667969 91.01419067]
[-196.09611511 90.88401031]
[-207.32336426 101.68154144]
[-222.53308105 101.33585358]
[-232.75767517 90.56584167]
[-247.75711060 90.43566895]
[-262.75653076 90.30548859]
[-277.75598145 90.17531586]
[-292.74185181 90.82599640]
[-307.67355347 92.25576019]
[-322.60525513 93.68553162]
[-335.63986206 103.63697052]
[-350.66915894 97.07552338]
[-352.23229980 80.75104523]
[-338.72125244 71.45675659]
[-324.03503418 78.75382233]
[-309.10333252 77.32405853]
[-294.17163086 75.89429474]
[-304.89697266 65.40776825]
[-305.22656250 50.41138458]
[-294.97235107 39.46374130]
[-279.98648071 38.81275940]
[-268.82156372 48.82996750]
[-267.84951782 63.79843521]
[-277.62579346 75.17588043]
[-262.62637329 75.30605316]
[-247.62693787 75.43623352]
[-232.62750244 75.56640625]
[-222.21751404 64.97547913]
[-207.00410461 64.89382172]
[-195.96594238 75.88457489]
[-180.96650696 76.01475525]
[-165.96707153 76.14492798]
[-149.90878296 65.40180206]
[-132.67601013 75.82691193]
[-117.68109894 75.43642426]
[-102.68618011 75.04594421]
[-87.69126129 74.65545654]
[-96.48168182 62.50109482]
[-92.63164520 48.00360489]
[-78.96915436 41.81196594]
[-65.52985382 48.47418213]
[-62.18543243 63.09658813]
[-71.39236450 74.93838501]
[-56.42003250 75.84906006]
[-41.44770050 76.75973511]
[-26.47537041 77.67041016]
[-11.50304031 78.58108521]
[3.46928978 79.49176025]
[18.44161987 80.40243530]
[33.41395187 81.31311035]
[48.38628006 82.22378540]
[63.36595154 83.00449371]
[78.35182953 83.65516663]
[113.46501160 78.34014893]
[127.01962280 71.91579437]
[140.57424927 65.49143219]
[154.12886047 59.06707764]
[163.28544617 46.16485596]
[178.10014343 47.70562744]
[191.65476990 41.28127289]
[189.17446899 27.02740097]
[190.47460938 12.63007259]
[195.45994568 -0.92607075]
[203.78338623 -12.71555519]
[214.87025452 -21.93525696]
[227.95782471 -27.95911789]
[242.14788818 -30.38064384]
[256.46835327 -29.04034042]
[269.93984985 -24.03619385]
[281.64273071 -15.71654606]
[290.77981567 -4.65584135]
[304.44390869 -10.84397697]
[318.10797119 -17.03211212]
[331.77206421 -23.22024727]
[337.05017090 -35.00834656]
[348.58004761 -39.87429810]
[359.95410156 -35.70701981]
[373.72351074 -41.65707016]
[383.32238770 -54.23372650]
[398.07467651 -52.17971039]
[411.84411621 -58.12976074]
[425.61352539 -64.07981110]
[431.51174927 -78.49676514]
[445.56066895 -84.33480835]
[459.26867676 -78.62289429]
[473.03808594 -84.57294464]
[486.80752563 -90.52299500]
[500.52478027 -96.59231567]
[514.18884277 -102.78044891]
[517.18634033 -118.00524902]
[528.58319092 -128.53578186]
[543.99700928 -130.32284546]
[557.50091553 -122.67926025]
[563.90234375 -108.54416656]
[560.73986816 -93.35277557]
[549.22949219 -82.94649506]
[533.79718018 -81.32675171]
[520.37701416 -89.11637115]
[506.71292114 -82.92823792]
[501.90393066 -77.28942108]
[492.75756836 -76.75357819]
[478.98815918 -70.80352783]
[465.21871948 -64.85347748]
[459.98428345 -50.95613480]
[446.10488892 -44.72578812]
[431.56356812 -50.31039047]
[417.79415894 -44.36034012]
[404.02471924 -38.41028976]
[395.41073608 -26.25922203]
[379.67355347 -27.88764954]
[365.90414429 -21.93760109]
[356.22470093 -7.31322002]
[337.96020508 -9.55617046]
[324.29611206 -3.36803532]
[310.63204956 2.82009983]
[296.96795654 9.00823498]
[299.27670288 24.42026901]
[297.15548706 39.87387466]
[290.76748657 54.12027740]
[280.62103271 66.00593567]
[267.52905273 74.56594086]
[252.54411316 79.10236359]
[236.87367249 79.24113464]
[221.78283691 74.96289062]
[208.49218750 66.60518646]
[198.07911682 54.83588791]
[184.52450562 61.26024628]
[176.33743286 73.70295715]
[160.55322266 72.62169647]
[146.99859619 79.04605103]
[133.44398499 85.47040558]
[119.88936615 91.89476776]
[134.74365234 89.80902863]
[147.16191101 98.22252655]
[150.73255920 112.79134369]
[143.61209106 125.99356842]
[129.47679138 131.01286316]
[115.62475586 125.25775909]
[109.20767212 111.69757843]
[111.28381348 126.55320740]
[113.35994720 141.40882874]
[115.43608856 156.26446533]
[129.48669434 162.63502502]
[137.84342957 175.60299683]
[137.83970642 191.03034973]
[129.47669983 203.99429321]
[115.42301178 210.35804749]
[100.16313171 208.09098816]
[88.56642151 197.91650391]
[84.33336639 183.08125305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 172]
[2 171]
[3 170]
[4 169]
[10 83]
[11 82]
[13 81]
[14 80]
[15 79]
[16 78]
[17 77]
[18 76]
[19 75]
[20 74]
[21 73]
[22 67]
[23 66]
[24 65]
[25 64]
[29 62]
[30 61]
[31 60]
[34 57]
[35 56]
[36 55]
[37 54]
[38 47]
[39 46]
[40 45]
[84 162]
[85 161]
[86 160]
[87 159]
[89 157]
[90 156]
[101 146]
[102 145]
[103 144]
[104 143]
[107 141]
[108 140]
[110 138]
[111 137]
[112 136]
[115 133]
[116 132]
[117 131]
[118 129]
[119 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
