%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGCUCAGGCCUCCCUCAAACUAGCCAAUGAGAAGUGCACGGGUCCUGGUCGCCUAGGAAACCGCGUGACAACAAGAUGGCGGCGCUGCGGGACGGCUAGCGGCCCUGCGUGUACUUUCCCAAGCACCACCAGGCCAAAGGUCUCUCAGUUCAGAGCAGAAAGCCGUAUACCCAGAGGAGCAGGCAGAUAACAGAAACUUCCAGAAACCUCUGUGGAGACAGUGGAAGAGGCAAAAGGGAGUUCCUGACAGCUG\
GAUUCUAGAAGUAGAACU\
) } def
/len { sequence length } bind def

/coor [
[69.80472565 538.98956299]
[66.39509583 524.38220215]
[62.98546219 509.77487183]
[59.57582855 495.16754150]
[55.01229477 489.38992310]
[56.21185684 480.37319946]
[52.96992874 465.72772217]
[49.72800064 451.08224487]
[46.48606873 436.43676758]
[43.24414062 421.79129028]
[30.71319580 409.48281860]
[36.45198441 391.96759033]
[33.04235077 377.36026001]
[29.63271904 362.75292969]
[26.22308540 348.14556885]
[22.81345177 333.53823853]
[19.40381813 318.93090820]
[9.30443001 317.12652588]
[0.33802262 312.06289673]
[-6.47258043 304.28866577]
[-10.34092426 294.66326904]
[-10.80768585 284.26199341]
[-7.79507017 274.25579834]
[-1.61841393 265.77957153]
[7.04662657 259.80331421]
[4.31027555 245.05500793]
[1.57392418 230.30671692]
[-12.90513134 228.92982483]
[-26.47180176 223.68727112]
[-38.11433792 214.97003174]
[-46.96448898 203.42820740]
[-52.36223984 189.92253113]
[-53.90505219 175.46022034]
[-68.68375397 172.89314270]
[-83.46246338 170.32606506]
[-98.24116516 167.75898743]
[-113.01987457 165.19190979]
[-127.79857635 162.62483215]
[-142.57728577 160.05776978]
[-157.35598755 157.49069214]
[-172.13468933 154.92361450]
[-186.95535278 152.61106873]
[-201.81359863 150.55375671]
[-216.67184448 148.49644470]
[-231.53009033 146.43913269]
[-246.38833618 144.38182068]
[-261.25814819 142.40971375]
[-276.13900757 140.52288818]
[-291.01983643 138.63606262]
[-305.90069580 136.74923706]
[-320.78155518 134.86242676]
[-335.66241455 132.97560120]
[-350.54327393 131.08877563]
[-365.43469238 129.28729248]
[-380.33621216 127.57120514]
[-395.23773193 125.85511780]
[-411.98138428 133.56007385]
[-425.64266968 122.51956177]
[-440.56286621 120.97444153]
[-449.95147705 130.60072327]
[-462.97760010 133.03840637]
[-474.85812378 127.61978912]
[-481.36071777 116.52085114]
[-496.26223755 114.80476379]
[-511.16372681 113.08868408]
[-526.06524658 111.37259674]
[-533.42028809 124.67567444]
[-545.30944824 134.14755249]
[-559.91967773 138.34384155]
[-575.02307129 136.62463379]
[-588.31646729 129.25210571]
[-597.77270508 117.35049438]
[-601.94976807 102.73473358]
[-600.21069336 87.63360596]
[-592.82067871 74.34992218]
[-580.90667725 64.90936279]
[-566.28540039 60.75152588]
[-551.18658447 62.51045990]
[-537.91265869 69.91793823]
[-528.48773193 81.84438324]
[-524.34918213 96.47108459]
[-509.44766235 98.18717194]
[-494.54614258 99.90325165]
[-479.64462280 101.61933899]
[-466.90887451 90.61001587]
[-449.81628418 92.26890564]
[-439.01776123 106.05423737]
[-424.09756470 107.59935760]
[-414.53643799 100.22745514]
[-402.11532593 101.36816406]
[-393.52163696 110.95361328]
[-378.62014771 112.66969299]
[-363.71862793 114.38578033]
[-356.74050903 112.03793335]
[-348.65646362 116.20791626]
[-333.77560425 118.09474182]
[-318.89474487 119.98156738]
[-304.01388550 121.86838531]
[-289.13302612 123.75521088]
[-274.25216675 125.64203644]
[-259.37130737 127.52885437]
[-252.36672974 125.26116943]
[-244.33102417 129.52357483]
[-229.47277832 131.58088684]
[-214.61453247 133.63819885]
[-199.75628662 135.69551086]
[-184.89804077 137.75282288]
[-181.90295410 135.95970154]
[-177.90002441 135.50708008]
[-173.51916504 136.84890747]
[-169.56761169 140.14491272]
[-154.78890991 142.71197510]
[-140.01020813 145.27905273]
[-125.23149872 147.84613037]
[-110.45279694 150.41320801]
[-95.67409515 152.98028564]
[-80.89538574 155.54736328]
[-66.11668396 158.11444092]
[-51.33797836 160.68151855]
[-46.41908646 149.71092224]
[-39.15804672 140.11178589]
[-29.91977882 132.37628174]
[-19.17075920 126.90274811]
[-7.45548391 123.97505188]
[4.63111258 123.74796295]
[16.47387505 126.23894501]
[27.46873474 131.32698059]
[37.05352020 138.75842285]
[48.96253967 129.63838196]
[60.87155914 120.51833344]
[72.78057861 111.39828491]
[56.22320175 81.02300262]
[77.01765442 38.21980667]
[77.70535278 23.23558044]
[78.39305115 8.25135326]
[79.08074951 -6.73287392]
[79.76844788 -21.71710205]
[74.45463562 -37.81678391]
[88.45412445 -47.37976456]
[101.51882935 -36.57467651]
[94.75267792 -21.02940178]
[94.06497955 -6.04517508]
[93.37727356 8.93905258]
[92.68957520 23.92328072]
[92.00187683 38.90750885]
[106.73425293 41.72836304]
[111.63041687 27.54994392]
[116.52658844 13.37152672]
[109.38661957 -0.72799045]
[114.38708496 -15.72035027]
[128.56130981 -22.71085167]
[143.49995422 -17.55215454]
[150.34020996 -3.30482268]
[145.02386475 11.57845592]
[130.70500183 18.26769447]
[125.80883789 32.44611359]
[120.91266632 46.62453079]
[127.09442902 50.87139511]
[135.58816528 38.50788116]
[144.08207703 26.14449501]
[156.44532776 34.63860703]
[147.95167542 47.00160980]
[139.45794678 59.36512756]
[145.63969421 63.61199188]
[157.11807251 53.95554733]
[168.59645081 44.29910278]
[180.01927185 34.57701492]
[191.38618469 24.78959846]
[191.56327820 13.96118641]
[197.52989197 5.18692350]
[207.13034058 1.20973790]
[217.12339783 3.11239648]
[228.71174622 -6.41180944]
[233.96766663 -21.94587898]
[250.09938049 -24.89538956]
[260.51196289 -12.22613525]
[254.49385071 3.02883959]
[238.23594666 5.17652512]
[226.64761353 14.70073128]
[221.14736938 33.26043320]
[201.17359924 36.15650177]
[189.80668640 45.94391632]
[186.79978943 52.66442108]
[178.25289917 55.77747726]
[166.77452087 65.43392181]
[155.29614258 75.09037018]
[157.58103943 82.23384857]
[171.86799622 77.66406250]
[186.15495300 73.09428406]
[200.44190979 68.52450562]
[214.72886658 63.95472717]
[229.01588440 59.38516998]
[233.58522034 73.67226410]
[219.29864502 78.24168396]
[205.01168823 82.81146240]
[190.72473145 87.38124084]
[176.43777466 91.95101929]
[162.15081787 96.52079773]
[164.43569946 103.66427612]
[179.38742065 104.86688232]
[194.33912659 106.06948853]
[209.29084778 107.27208710]
[224.24920654 108.38895416]
[239.21372986 109.42005157]
[254.17825317 110.45114899]
[269.14276123 111.48224640]
[283.62918091 103.79615021]
[297.38323975 112.72686005]
[296.25598145 129.08721924]
[281.40701294 136.04708862]
[268.11166382 126.44676208]
[253.14715576 125.41566467]
[238.18263245 124.38457489]
[223.21810913 123.35347748]
[216.35496521 126.01877594]
[208.08824158 122.22380066]
[193.13653564 121.02120209]
[178.18481445 119.81859589]
[163.23310852 118.61598969]
[140.68873596 139.65277100]
[114.65072632 145.40805054]
[93.31208038 138.02770996]
[81.90062714 123.30730438]
[69.99160767 132.42735291]
[58.08258820 141.54739380]
[46.17356873 150.66744995]
[52.30855179 168.45237732]
[51.93721771 187.22523499]
[45.13045120 204.68507385]
[32.74637222 218.70060730]
[16.32222557 227.57035828]
[19.05857658 242.31866455]
[21.79492760 257.06695557]
[40.29591751 264.76153564]
[50.26622772 281.97436523]
[47.77232361 301.56283569]
[34.01115799 315.52127075]
[37.42079163 330.12860107]
[40.83042526 344.73593140]
[44.24005890 359.34329224]
[47.64969254 373.95062256]
[51.05932617 388.55795288]
[61.56500244 395.99859619]
[64.11927032 408.20764160]
[57.88961411 418.54937744]
[61.13154221 433.19485474]
[64.37347412 447.84030151]
[67.61540222 462.48577881]
[70.85733032 477.13125610]
[74.18316650 491.75790405]
[77.59280396 506.36526489]
[81.00243378 520.97259521]
[84.41207123 535.57995605]
[95.08372498 547.26007080]
[90.44199371 561.41296387]
[93.85162354 576.02032471]
[98.83215332 583.63177490]
[97.21559143 590.81463623]
[100.45752716 605.46014404]
[103.69945526 620.10559082]
[106.94138336 634.75109863]
[110.18331146 649.39654541]
[121.65158081 661.11877441]
[116.97398376 676.83666992]
[100.96243286 680.38098145]
[90.08824158 668.10565186]
[95.53784180 652.63848877]
[92.29591370 637.99298096]
[89.05397797 623.34753418]
[85.81204987 608.70202637]
[82.57012177 594.05657959]
[79.24428558 579.42993164]
[75.83464813 564.82257080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 253]
[2 252]
[3 251]
[4 250]
[6 249]
[7 248]
[8 247]
[9 246]
[10 245]
[12 242]
[13 241]
[14 240]
[15 239]
[16 238]
[17 237]
[25 233]
[26 232]
[27 231]
[33 119]
[34 118]
[35 117]
[36 116]
[37 115]
[38 114]
[39 113]
[40 112]
[41 111]
[42 107]
[43 106]
[44 105]
[45 104]
[46 103]
[47 101]
[48 100]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[54 93]
[55 92]
[56 91]
[58 88]
[59 87]
[63 84]
[64 83]
[65 82]
[66 81]
[128 226]
[129 225]
[130 224]
[131 223]
[133 145]
[134 144]
[135 143]
[136 142]
[137 141]
[146 157]
[147 156]
[148 155]
[164 186]
[165 185]
[166 184]
[167 182]
[168 181]
[172 179]
[173 178]
[199 219]
[200 218]
[201 217]
[202 216]
[203 214]
[204 213]
[205 212]
[206 211]
[255 273]
[256 272]
[258 271]
[259 270]
[260 269]
[261 268]
[262 267]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
