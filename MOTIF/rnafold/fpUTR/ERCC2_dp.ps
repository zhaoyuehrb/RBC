%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ERCC2)
} def

/sequence { (\
UUCAUGAGGGAGGCGGGUCGACCCCGCUGCACAGUCCGGCCGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.031776792 ubox
1 8 0.029099709 ubox
1 9 0.007562752 ubox
1 10 0.067470742 ubox
1 11 0.108949083 ubox
1 12 0.084634001 ubox
1 34 0.004356949 ubox
1 39 0.003296574 ubox
1 43 0.004120356 ubox
2 6 0.030944553 ubox
2 7 0.029421632 ubox
2 8 0.016986962 ubox
2 9 0.085984846 ubox
2 10 0.117400647 ubox
2 11 0.144654132 ubox
2 13 0.004114568 ubox
2 33 0.004107451 ubox
2 38 0.004978741 ubox
2 39 0.011430283 ubox
2 42 0.004834274 ubox
2 43 0.026371638 ubox
3 8 0.139597303 ubox
3 9 0.120793844 ubox
3 10 0.149330683 ubox
3 12 0.020021901 ubox
3 29 0.006040765 ubox
3 38 0.017310226 ubox
3 42 0.034246295 ubox
4 28 0.004418845 ubox
4 35 0.074349047 ubox
5 31 0.022405153 ubox
5 33 0.099256442 ubox
5 34 0.076956671 ubox
5 38 0.010844688 ubox
5 42 0.021991694 ubox
5 45 0.019173433 ubox
6 25 0.005114732 ubox
6 30 0.025433803 ubox
6 32 0.109888150 ubox
6 36 0.192139573 ubox
6 37 0.055390033 ubox
6 41 0.030581497 ubox
6 44 0.026942404 ubox
7 28 0.008014975 ubox
7 35 0.192649163 ubox
8 23 0.008860416 ubox
8 24 0.014936357 ubox
8 25 0.004711522 ubox
8 27 0.007680036 ubox
8 28 0.006693053 ubox
8 36 0.069759779 ubox
8 37 0.206130506 ubox
8 41 0.034675470 ubox
8 47 0.092127832 ubox
9 22 0.008891471 ubox
9 23 0.014969028 ubox
9 24 0.004750583 ubox
9 25 0.013664492 ubox
9 27 0.005734502 ubox
9 28 0.010130095 ubox
9 35 0.068939334 ubox
9 36 0.203711772 ubox
9 37 0.828876191 ubox
9 40 0.033725561 ubox
9 41 0.016824267 ubox
9 46 0.091635019 ubox
9 47 0.258083014 ubox
10 22 0.014930712 ubox
10 23 0.004437469 ubox
10 24 0.013787283 ubox
10 27 0.009673410 ubox
10 35 0.155133256 ubox
10 36 0.830262574 ubox
10 40 0.016441211 ubox
10 46 0.261448607 ubox
11 28 0.039316727 ubox
11 35 0.827296905 ubox
12 19 0.014443709 ubox
12 23 0.014219501 ubox
12 25 0.016945442 ubox
12 27 0.030173958 ubox
12 28 0.912669498 ubox
12 37 0.010062182 ubox
12 41 0.010896329 ubox
12 47 0.180277054 ubox
13 18 0.009801088 ubox
13 22 0.014303819 ubox
13 24 0.017097561 ubox
13 27 0.927390940 ubox
13 30 0.023482681 ubox
13 36 0.006954437 ubox
13 40 0.010820968 ubox
13 44 0.320444836 ubox
13 46 0.182119385 ubox
14 20 0.015431209 ubox
14 26 0.927992871 ubox
14 29 0.023150847 ubox
14 39 0.010686478 ubox
14 42 0.007616004 ubox
14 43 0.320493089 ubox
14 45 0.181951964 ubox
15 19 0.014453098 ubox
15 23 0.019098152 ubox
15 24 0.058814529 ubox
15 25 0.927021082 ubox
15 28 0.019176076 ubox
15 41 0.007099586 ubox
15 44 0.168021044 ubox
15 47 0.025171088 ubox
16 22 0.019522689 ubox
16 23 0.078008374 ubox
16 24 0.925677040 ubox
16 25 0.006545437 ubox
16 27 0.018422001 ubox
16 28 0.004775839 ubox
16 37 0.009771804 ubox
16 40 0.005675271 ubox
16 41 0.360411083 ubox
16 46 0.025331000 ubox
16 47 0.006647333 ubox
17 22 0.092083559 ubox
17 23 0.921341208 ubox
17 24 0.007612048 ubox
17 27 0.006374187 ubox
17 36 0.009654039 ubox
17 40 0.360951593 ubox
17 44 0.057636300 ubox
17 46 0.006731625 ubox
18 39 0.360793693 ubox
18 43 0.065845283 ubox
19 26 0.013669228 ubox
19 38 0.360413936 ubox
19 42 0.069105922 ubox
19 45 0.006517491 ubox
20 25 0.014004741 ubox
20 36 0.225835349 ubox
20 37 0.280637697 ubox
20 41 0.069044906 ubox
20 44 0.006682081 ubox
21 35 0.318606053 ubox
22 34 0.318230410 ubox
22 39 0.065991855 ubox
22 43 0.007334220 ubox
23 38 0.066003550 ubox
23 39 0.008517184 ubox
23 42 0.007195917 ubox
23 43 0.016666573 ubox
24 38 0.008657994 ubox
24 39 0.017347243 ubox
24 42 0.016882963 ubox
24 43 0.016122282 ubox
25 38 0.017452643 ubox
25 42 0.016715620 ubox
25 45 0.025552174 ubox
26 35 0.126263388 ubox
26 37 0.016026305 ubox
26 40 0.026198279 ubox
26 41 0.012160587 ubox
26 44 0.044112538 ubox
27 34 0.128931282 ubox
27 39 0.028648664 ubox
27 43 0.044174256 ubox
28 33 0.121177564 ubox
28 38 0.028624074 ubox
28 42 0.043813267 ubox
28 45 0.013655431 ubox
29 35 0.033133114 ubox
29 37 0.030141928 ubox
29 40 0.046044644 ubox
29 41 0.031974482 ubox
29 44 0.033566348 ubox
29 46 0.052788102 ubox
30 34 0.037356241 ubox
30 39 0.055232426 ubox
30 43 0.033523636 ubox
30 45 0.052926640 ubox
34 40 0.024458856 ubox
34 44 0.091392479 ubox
34 46 0.046505580 ubox
35 39 0.022963451 ubox
35 43 0.078062113 ubox
35 45 0.046088432 ubox
36 42 0.077507965 ubox
36 43 0.073318175 ubox
37 42 0.073652621 ubox
37 45 0.032088958 ubox
38 44 0.039789359 ubox
38 47 0.903335621 ubox
39 46 0.910012721 ubox
40 45 0.907528994 ubox
9 37 0.9500000 lbox
10 36 0.9500000 lbox
11 35 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
