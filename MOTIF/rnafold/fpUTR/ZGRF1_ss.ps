%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGCGAUUUGAAAGCGGCGGUUUUUGGCUUAGGCGGAGGUGGGCGGGCCAAGUUUUGGGUCCUCAUCUGGUGAGGUCCCGCGUUAAUGACGUCACGUUGUUUCGCGGGAGAAAUUCGAAAGUGGAUUUUGUGCAAUUUGACAGGUGGUAUAAAUAGUUGAAUAUUUCCUAUUUUCUGGACCCAGCUGGUUUAUAACUUCAGAAGAAAUA\
) } def
/len { sequence length } bind def

/coor [
[252.21554565 176.59361267]
[248.51705933 162.05671692]
[252.89320374 147.70927429]
[264.07519531 137.71112061]
[278.81851196 134.96087646]
[263.87777710 133.62893677]
[248.93702698 132.29699707]
[233.99627686 130.96505737]
[242.76731873 143.13340759]
[240.50062561 157.96116638]
[228.49481201 166.95339966]
[213.62806702 164.95841980]
[204.41764832 153.11917114]
[206.14024353 138.21839905]
[217.80805969 128.79315186]
[203.04460144 126.13980103]
[188.28114319 123.48644257]
[173.51768494 120.83309174]
[158.75422668 118.17973328]
[143.99076843 115.52638245]
[129.22731018 112.87303162]
[121.16195679 130.01646423]
[102.99675751 141.40751648]
[79.04589844 141.29302979]
[56.69250870 127.11375427]
[42.87722778 132.95652771]
[29.06194878 138.79930115]
[15.24666691 144.64207458]
[1.43138576 150.48484802]
[-12.38389492 156.32762146]
[-26.19917679 162.17039490]
[-40.01445770 168.01318359]
[-44.29746246 173.04815674]
[-49.67321777 174.88862610]
[-54.32675934 173.81765747]
[-68.30911255 179.24847412]
[-72.13560486 194.28634644]
[-84.09182739 204.17716980]
[-99.58037567 205.11772156]
[-112.64557648 196.74633789]
[-118.26360321 182.28198242]
[-114.27420044 167.28651428]
[-102.21138763 157.52597046]
[-86.71355438 156.75349426]
[-73.73992920 165.26612854]
[-59.75757599 159.83531189]
[-45.85723114 154.19789124]
[-32.04195023 148.35511780]
[-18.22666931 142.51234436]
[-4.41138840 136.66957092]
[9.40389252 130.82679749]
[23.21917343 124.98402405]
[37.03445435 119.14125061]
[50.84973526 113.29847717]
[51.23855591 105.80856323]
[36.25873947 105.03067017]
[37.03687668 90.05087280]
[52.01619720 90.82873535]
[52.40501404 83.33882141]
[39.26899338 76.09693909]
[26.13296700 68.85504913]
[10.31216621 68.96826172]
[2.90195775 56.04780960]
[-10.23406601 48.80592728]
[-23.37009048 41.56404495]
[-36.50611496 34.32215881]
[-49.64213943 27.08027649]
[-62.77816391 19.83839417]
[-79.56816864 17.48637581]
[-81.95600891 0.70142436]
[-66.48803711 -6.23963070]
[-55.53628159 6.70237017]
[-42.40025711 13.94425297]
[-29.26423073 21.18613625]
[-16.12820816 28.42801857]
[-2.99218345 35.66990280]
[10.14384079 42.91178513]
[25.02506638 42.28059006]
[33.37485123 55.71902847]
[46.51087570 62.96091080]
[59.64690018 70.20279694]
[70.09516144 59.44018555]
[62.46719742 46.52453232]
[54.83922958 33.60887909]
[47.21126556 20.69322395]
[39.58329773 7.77756882]
[26.32244301 -2.78586292]
[32.80208206 -18.45272636]
[49.65042114 -16.56333351]
[52.49895096 0.14960213]
[60.12691879 13.06525612]
[67.75488281 25.98091125]
[75.38285065 38.89656448]
[83.01081848 51.81221771]
[112.26467896 57.00628281]
[129.89323425 76.02023315]
[131.88067627 98.10956573]
[146.64413452 100.76292419]
[161.40759277 103.41627502]
[176.17105103 106.06963348]
[190.93450928 108.72298431]
[205.69796753 111.37634277]
[220.46142578 114.02969360]
[235.32821655 116.02430725]
[250.26896667 117.35624695]
[265.20971680 118.68818665]
[280.15045166 120.02012634]
[294.70428467 116.38890076]
[307.26818848 108.19447327]
[319.83209229 100.00005341]
[332.39596558 91.80562592]
[344.95986938 83.61119843]
[357.52374268 75.41677094]
[364.85583496 61.39709854]
[379.74295044 60.92496109]
[392.30685425 52.73053360]
[404.87072754 44.53610992]
[417.43463135 36.34168243]
[429.99850464 28.14725685]
[442.56240845 19.95283127]
[440.75588989 10.22656918]
[441.95016479 0.43604150]
[446.01742554 -8.51699734]
[452.56600952 -15.81330013]
[460.97811890 -20.79108047]
[470.46813965 -23.00602341]
[480.15582275 -22.27089500]
[489.14813232 -18.67123985]
[496.62145996 -12.55584812]
[509.75747681 -19.79773140]
[522.89349365 -27.03961372]
[536.02954102 -34.28149796]
[549.16552734 -41.52338028]
[562.30157471 -48.76526260]
[575.43762207 -56.00714493]
[583.78741455 -69.44558716]
[598.66857910 -68.81439209]
[611.80462646 -76.05627441]
[624.94067383 -83.29815674]
[638.07666016 -90.54003906]
[649.02844238 -103.48204041]
[664.49639893 -96.54098511]
[662.10858154 -79.75603485]
[645.31854248 -77.40401459]
[632.18255615 -70.16213226]
[619.04650879 -62.92024994]
[605.91052246 -55.67836380]
[598.50030518 -42.75791168]
[582.67950439 -42.87112045]
[569.54345703 -35.62923813]
[556.40740967 -28.38735580]
[543.27142334 -21.14547348]
[530.13537598 -13.90359020]
[516.99938965 -6.66170692]
[503.86334229 0.58017612]
[502.86511230 20.86808777]
[489.71414185 36.53111267]
[469.63314819 41.08676147]
[450.75683594 32.51672363]
[438.19293213 40.71115112]
[425.62905884 48.90557480]
[413.06515503 57.10000229]
[400.50128174 65.29442596]
[387.93737793 73.48885345]
[381.50396729 86.92240906]
[365.71817017 87.98066711]
[353.15429688 96.17508698]
[340.59039307 104.36951447]
[328.02648926 112.56394196]
[315.46261597 120.75836945]
[302.89871216 128.95278931]
[307.23980713 131.88903809]
[310.44537354 136.72169495]
[319.54736328 148.64451599]
[328.64938354 160.56733704]
[337.75137329 172.49014282]
[346.85339355 184.41296387]
[355.95538330 196.33578491]
[365.05737305 208.25859070]
[374.84970093 219.62126160]
[385.29797363 230.38388062]
[395.74624634 241.14648438]
[406.19451904 251.90908813]
[422.14993286 253.58357239]
[430.66705322 267.17910767]
[425.21224976 282.26632690]
[409.97000122 287.27166748]
[396.63284302 278.35540771]
[395.43191528 262.35736084]
[384.98364258 251.59474182]
[374.53536987 240.83213806]
[364.08709717 230.06953430]
[364.87252808 245.04895020]
[356.79965210 257.69128418]
[342.87988281 263.28054810]
[328.30572510 259.73178101]
[318.51376343 248.36878967]
[317.15670776 233.43029785]
[324.74081421 220.48883057]
[338.43692017 214.37193298]
[353.13455200 217.36059570]
[344.03256226 205.43777466]
[334.93057251 193.51496887]
[325.82855225 181.59214783]
[316.72656250 169.66932678]
[307.62454224 157.74652100]
[298.52255249 145.82369995]
[304.06753540 159.76116943]
[301.58105469 174.55364990]
[291.78399658 185.91224670]
[277.51690674 190.54370117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 107]
[6 106]
[7 105]
[8 104]
[15 103]
[16 102]
[17 101]
[18 100]
[19 99]
[20 98]
[21 97]
[25 54]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[35 46]
[36 45]
[59 81]
[60 80]
[61 79]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[108 171]
[109 170]
[110 169]
[111 168]
[112 167]
[113 166]
[115 164]
[116 163]
[117 162]
[118 161]
[119 160]
[120 159]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[137 147]
[138 146]
[139 145]
[140 144]
[173 207]
[174 206]
[175 205]
[176 204]
[177 203]
[178 202]
[179 201]
[180 192]
[181 191]
[182 190]
[183 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
