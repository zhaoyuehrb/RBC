%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPR3)
} def

/sequence { (\
CGGCCGCGGGGGCUUCUCGGGGUCCACGCACGCCCUGCGCCGCCAGGACCCGAGCGGAGCCUCCCCGCGGCCCGGCCGCGCCUGGUCCUGAGCGGUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 74 0.530235528 ubox
1 90 0.003362508 ubox
1 94 0.004481537 ubox
2 72 0.896566150 ubox
2 73 0.439406871 ubox
3 71 0.950439484 ubox
3 72 0.310723201 ubox
3 96 0.007976587 ubox
4 70 0.999949007 ubox
4 95 0.008225263 ubox
5 69 0.999941943 ubox
5 94 0.008227392 ubox
6 68 0.999944775 ubox
6 93 0.008210612 ubox
7 67 0.999869636 ubox
7 92 0.008197559 ubox
8 64 0.115218848 ubox
8 65 0.189158181 ubox
8 66 0.975045453 ubox
9 63 0.129319417 ubox
9 64 0.266492116 ubox
9 65 0.954998739 ubox
10 62 0.206085356 ubox
10 63 0.325066744 ubox
10 64 0.920638306 ubox
10 65 0.003751622 ubox
11 61 0.738713093 ubox
11 62 0.046650520 ubox
11 63 0.669210807 ubox
11 64 0.003857289 ubox
12 60 0.972609553 ubox
12 61 0.192658773 ubox
12 62 0.113912542 ubox
12 63 0.003399801 ubox
13 57 0.074015615 ubox
13 59 0.996586397 ubox
14 56 0.074737409 ubox
14 57 0.042029681 ubox
14 58 0.993490220 ubox
14 59 0.027517010 ubox
15 56 0.084860773 ubox
15 57 0.936500366 ubox
15 58 0.045531378 ubox
16 54 0.799272223 ubox
16 56 0.587930672 ubox
16 57 0.055369112 ubox
16 59 0.005144281 ubox
17 53 0.919249854 ubox
17 56 0.043576159 ubox
17 57 0.013320641 ubox
17 58 0.004997208 ubox
18 52 0.929454037 ubox
18 56 0.034879207 ubox
18 57 0.004185170 ubox
19 51 0.806484069 ubox
19 55 0.036936021 ubox
20 50 0.661072316 ubox
20 51 0.590965468 ubox
21 49 0.472801549 ubox
21 50 0.750274965 ubox
22 49 0.881095871 ubox
23 47 0.008851208 ubox
23 48 0.994767746 ubox
24 46 0.015683954 ubox
24 47 0.999757737 ubox
25 46 0.998885995 ubox
27 39 0.066621152 ubox
27 42 0.136223858 ubox
28 38 0.067396560 ubox
28 40 0.036623592 ubox
28 41 0.132687580 ubox
28 43 0.985486931 ubox
29 37 0.067463063 ubox
29 39 0.045611834 ubox
29 42 0.985740381 ubox
30 36 0.062434173 ubox
31 37 0.041598447 ubox
31 39 0.979769362 ubox
31 42 0.008224854 ubox
32 36 0.025696344 ubox
32 38 0.982090009 ubox
32 40 0.163495811 ubox
32 41 0.010307158 ubox
32 43 0.005355653 ubox
33 37 0.974967845 ubox
33 39 0.163630570 ubox
33 42 0.005367779 ubox
35 46 0.003168391 ubox
36 45 0.003310157 ubox
40 47 0.008848281 ubox
41 46 0.009053252 ubox
66 80 0.005931757 ubox
66 90 0.004441596 ubox
67 79 0.006273382 ubox
67 89 0.004388815 ubox
68 78 0.006275620 ubox
69 77 0.006277456 ubox
69 87 0.005065844 ubox
70 76 0.006277398 ubox
70 86 0.005098947 ubox
71 75 0.006231774 ubox
71 85 0.005478233 ubox
72 84 0.005652959 ubox
72 85 0.004160647 ubox
72 95 0.003603124 ubox
73 80 0.014995997 ubox
73 84 0.012509735 ubox
73 90 0.019801427 ubox
73 94 0.006875179 ubox
74 79 0.015530997 ubox
74 82 0.168734733 ubox
74 83 0.006326649 ubox
74 87 0.076655798 ubox
74 88 0.041460206 ubox
74 89 0.009542375 ubox
74 93 0.005618279 ubox
74 99 0.134065489 ubox
75 81 0.169049446 ubox
75 82 0.005989841 ubox
75 86 0.078787002 ubox
75 87 0.041342092 ubox
75 88 0.008119836 ubox
75 96 0.954049334 ubox
75 98 0.127628095 ubox
76 80 0.167836381 ubox
76 85 0.089364916 ubox
76 92 0.003225234 ubox
76 95 0.980490756 ubox
77 84 0.089329575 ubox
77 90 0.003727631 ubox
77 94 0.980713893 ubox
78 83 0.060558237 ubox
78 86 0.005997047 ubox
78 93 0.980667064 ubox
78 96 0.005666416 ubox
79 85 0.007158244 ubox
79 90 0.010647220 ubox
79 92 0.980128894 ubox
79 94 0.024751863 ubox
79 95 0.005389178 ubox
80 86 0.085775187 ubox
80 89 0.033776816 ubox
80 93 0.026387649 ubox
80 96 0.007288715 ubox
81 85 0.085537617 ubox
81 92 0.024582212 ubox
81 95 0.007532098 ubox
82 92 0.026096898 ubox
82 94 0.007457504 ubox
82 95 0.005913093 ubox
83 90 0.062555021 ubox
83 91 0.052663185 ubox
83 94 0.007297383 ubox
84 89 0.065368143 ubox
84 93 0.009836794 ubox
84 99 0.167784279 ubox
85 93 0.005262918 ubox
85 96 0.003606929 ubox
85 98 0.170009163 ubox
86 92 0.005204948 ubox
86 97 0.167955869 ubox
87 94 0.003998348 ubox
87 95 0.166876329 ubox
88 94 0.166961913 ubox
88 95 0.037868035 ubox
89 94 0.035528890 ubox
90 96 0.003208720 ubox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
75 96 0.9500000 lbox
76 95 0.9500000 lbox
77 94 0.9500000 lbox
78 93 0.9500000 lbox
79 92 0.9500000 lbox
showpage
end
%%EOF
