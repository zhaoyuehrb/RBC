%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KTI12)
} def

/sequence { (\
UUGGCGCAGCGCGGUUGCCAAUGGUCGCUCCCUGAGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.005491861 ubox
1 14 0.006214030 ubox
1 21 0.700478128 ubox
1 24 0.015920490 ubox
1 35 0.108811930 ubox
1 36 0.027552345 ubox
1 37 0.029948873 ubox
1 38 0.027631549 ubox
1 39 0.013469801 ubox
2 8 0.009004153 ubox
2 11 0.006928639 ubox
2 13 0.009477345 ubox
2 17 0.005377713 ubox
2 20 0.841431293 ubox
2 23 0.015667986 ubox
2 27 0.177204758 ubox
2 34 0.114503982 ubox
2 35 0.030150527 ubox
2 36 0.031643440 ubox
2 37 0.033194251 ubox
2 38 0.023286967 ubox
3 7 0.010701082 ubox
3 10 0.013465650 ubox
3 12 0.015920385 ubox
3 16 0.012316818 ubox
3 19 0.863133103 ubox
3 22 0.016738816 ubox
3 26 0.240993038 ubox
3 29 0.092671881 ubox
3 30 0.023850503 ubox
3 31 0.146048412 ubox
3 32 0.275904399 ubox
3 33 0.104907174 ubox
4 10 0.035720170 ubox
4 12 0.130234300 ubox
4 15 0.014088873 ubox
4 18 0.859852710 ubox
4 25 0.241625942 ubox
4 28 0.102469202 ubox
4 29 0.009178564 ubox
4 30 0.147079720 ubox
4 31 0.276105980 ubox
4 32 0.105414827 ubox
5 9 0.035533993 ubox
5 11 0.130535194 ubox
5 13 0.071726317 ubox
5 14 0.013513101 ubox
5 17 0.854615993 ubox
5 23 0.015433597 ubox
5 24 0.241308702 ubox
5 27 0.102701068 ubox
5 34 0.044878239 ubox
6 10 0.122211443 ubox
6 12 0.151862344 ubox
6 15 0.523090333 ubox
6 16 0.605486273 ubox
6 18 0.236601758 ubox
6 22 0.006243642 ubox
6 25 0.010929998 ubox
6 26 0.095234082 ubox
6 28 0.097309541 ubox
6 33 0.043384050 ubox
7 11 0.151817679 ubox
7 14 0.742582116 ubox
7 17 0.247426346 ubox
7 23 0.147374595 ubox
7 24 0.048350627 ubox
7 27 0.097267239 ubox
7 34 0.132098410 ubox
8 16 0.280764784 ubox
8 22 0.147419924 ubox
8 29 0.338924271 ubox
8 33 0.132218090 ubox
9 15 0.343067347 ubox
9 18 0.077968014 ubox
9 25 0.084635437 ubox
9 28 0.346957329 ubox
9 32 0.131748156 ubox
10 14 0.343849049 ubox
10 17 0.078029998 ubox
10 23 0.014266454 ubox
10 24 0.085438747 ubox
10 27 0.347065016 ubox
10 34 0.013439310 ubox
11 16 0.053054268 ubox
11 18 0.151936249 ubox
11 22 0.011773164 ubox
11 25 0.100508720 ubox
11 26 0.339629654 ubox
11 28 0.122038192 ubox
11 33 0.013327359 ubox
12 17 0.151947411 ubox
12 23 0.068956239 ubox
12 24 0.343973109 ubox
12 27 0.122217982 ubox
12 34 0.006756963 ubox
13 19 0.057119807 ubox
13 22 0.066923744 ubox
13 26 0.122097302 ubox
13 29 0.112873041 ubox
13 30 0.030703575 ubox
13 31 0.036018358 ubox
13 32 0.074023391 ubox
13 33 0.004806883 ubox
14 18 0.056301359 ubox
14 22 0.338442578 ubox
14 25 0.072122551 ubox
14 28 0.126922428 ubox
14 29 0.007328069 ubox
14 30 0.036086447 ubox
14 31 0.074101902 ubox
14 32 0.004679900 ubox
15 21 0.336954673 ubox
15 24 0.052164931 ubox
15 27 0.125864415 ubox
15 38 0.003204849 ubox
16 20 0.280567998 ubox
16 23 0.050270689 ubox
16 27 0.020953338 ubox
16 37 0.003948494 ubox
17 22 0.025586388 ubox
17 25 0.180927960 ubox
17 26 0.024688981 ubox
17 28 0.079076489 ubox
18 24 0.189033851 ubox
18 27 0.079035363 ubox
18 39 0.005421766 ubox
19 23 0.187969851 ubox
19 34 0.030396914 ubox
19 38 0.007096275 ubox
20 33 0.029366719 ubox
22 34 0.017407455 ubox
23 29 0.020724737 ubox
23 30 0.034358782 ubox
23 31 0.206895946 ubox
23 32 0.218716576 ubox
23 33 0.027524666 ubox
24 28 0.022429403 ubox
24 29 0.025495368 ubox
24 30 0.208263196 ubox
24 31 0.217767493 ubox
24 32 0.028446062 ubox
25 35 0.079147240 ubox
25 37 0.065703768 ubox
25 39 0.283559641 ubox
26 34 0.084597512 ubox
26 36 0.069622418 ubox
26 38 0.454357674 ubox
27 33 0.068647415 ubox
28 36 0.542436957 ubox
28 38 0.563557188 ubox
28 39 0.022026204 ubox
29 35 0.544176775 ubox
29 37 0.565898931 ubox
29 38 0.019789030 ubox
29 39 0.009456687 ubox
30 34 0.539758123 ubox
30 36 0.565354153 ubox
30 38 0.017753094 ubox
30 39 0.113430402 ubox
31 38 0.115444154 ubox
31 39 0.241983505 ubox
32 38 0.249680755 ubox
32 39 0.056512816 ubox
33 37 0.225187801 ubox
33 38 0.057517748 ubox
1 21 0.9500000 lbox
2 20 0.9500000 lbox
3 19 0.9500000 lbox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
showpage
end
%%EOF
