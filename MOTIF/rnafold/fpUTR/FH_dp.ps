%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FH)
} def

/sequence { (\
GACAACCGGCGUGGAGGCGUGGCCACAGCCGCCCAGAAAUUCUACCCAAGCUCCCUCAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 42 0.003339688 ubox
1 53 0.058757916 ubox
1 57 0.056810511 ubox
2 12 0.003989151 ubox
2 41 0.003203435 ubox
2 52 0.057611621 ubox
2 56 0.055478152 ubox
3 11 0.004152336 ubox
3 13 0.003431958 ubox
5 12 0.004077877 ubox
6 11 0.004553394 ubox
6 14 0.017258479 ubox
7 13 0.017332534 ubox
7 31 0.042142614 ubox
8 12 0.010695253 ubox
8 30 0.043810370 ubox
8 33 0.008659775 ubox
8 34 0.004399389 ubox
8 43 0.003962773 ubox
8 46 0.017111352 ubox
8 47 0.986505292 ubox
8 52 0.098380256 ubox
8 53 0.025199449 ubox
8 54 0.014107919 ubox
8 55 0.008939643 ubox
8 57 0.003271755 ubox
8 63 0.058529463 ubox
9 18 0.004383138 ubox
9 29 0.043814471 ubox
9 32 0.008692810 ubox
9 33 0.004355434 ubox
9 42 0.004159154 ubox
9 45 0.015329949 ubox
9 46 0.987417515 ubox
9 51 0.107702297 ubox
9 53 0.013620034 ubox
9 54 0.008152210 ubox
9 60 0.029310874 ubox
9 62 0.058909853 ubox
10 17 0.004394759 ubox
10 28 0.043788506 ubox
10 31 0.008708539 ubox
10 50 0.107735484 ubox
10 59 0.029355670 ubox
11 26 0.039954803 ubox
11 30 0.007769926 ubox
11 32 0.004298594 ubox
11 40 0.004580496 ubox
11 45 0.991629226 ubox
11 51 0.011317744 ubox
11 60 0.057092498 ubox
11 62 0.006407704 ubox
12 25 0.040206845 ubox
12 27 0.017627008 ubox
12 28 0.003997190 ubox
12 31 0.004296084 ubox
12 35 0.004548085 ubox
12 39 0.004688625 ubox
12 44 0.991526526 ubox
12 48 0.089405390 ubox
12 50 0.009664311 ubox
12 58 0.006902331 ubox
12 59 0.054615429 ubox
12 61 0.006421412 ubox
13 24 0.040171691 ubox
13 26 0.018487435 ubox
13 30 0.004196681 ubox
13 33 0.004287451 ubox
13 34 0.005304842 ubox
13 42 0.041063287 ubox
13 43 0.990754151 ubox
13 46 0.011931799 ubox
13 47 0.093520639 ubox
13 54 0.025451054 ubox
13 55 0.022584576 ubox
13 56 0.003362633 ubox
13 57 0.006702748 ubox
13 60 0.006175344 ubox
14 23 0.040127366 ubox
14 29 0.004179489 ubox
14 32 0.004352460 ubox
14 33 0.005256244 ubox
14 41 0.041630852 ubox
14 42 0.991146413 ubox
14 45 0.012406967 ubox
14 46 0.093237394 ubox
14 53 0.025599438 ubox
14 54 0.022486523 ubox
14 55 0.004100163 ubox
14 56 0.004966491 ubox
14 57 0.053564670 ubox
15 40 0.074175998 ubox
15 41 0.984089855 ubox
15 43 0.006503192 ubox
15 52 0.024967226 ubox
15 56 0.054238717 ubox
16 24 0.019874131 ubox
16 30 0.016227683 ubox
16 33 0.104171586 ubox
16 34 0.974398175 ubox
16 40 0.177629440 ubox
16 42 0.005120596 ubox
16 51 0.017890598 ubox
16 52 0.020828441 ubox
16 53 0.004835234 ubox
16 54 0.003313272 ubox
16 55 0.053597906 ubox
17 23 0.019936055 ubox
17 29 0.016344678 ubox
17 32 0.104635301 ubox
17 33 0.980628893 ubox
17 40 0.003402688 ubox
17 41 0.004092931 ubox
17 51 0.024638964 ubox
17 53 0.003930279 ubox
17 54 0.052526311 ubox
18 22 0.019823364 ubox
18 28 0.016328193 ubox
18 31 0.103850520 ubox
18 50 0.027015178 ubox
19 26 0.003711500 ubox
19 29 0.009427539 ubox
19 30 0.056275066 ubox
19 32 0.992604986 ubox
19 51 0.004253309 ubox
20 25 0.003531162 ubox
20 27 0.036544292 ubox
20 28 0.010304331 ubox
20 31 0.992468877 ubox
20 35 0.024967354 ubox
20 50 0.003970510 ubox
21 26 0.039578000 ubox
21 30 0.996640792 ubox
21 33 0.023031017 ubox
21 34 0.021091926 ubox
22 29 0.997550288 ubox
22 32 0.026685386 ubox
22 33 0.016173056 ubox
23 28 0.994317210 ubox
23 31 0.029843402 ubox
35 41 0.009817230 ubox
35 43 0.100043240 ubox
35 52 0.006187184 ubox
36 40 0.014524201 ubox
36 42 0.105146060 ubox
36 51 0.006619828 ubox
36 53 0.016786572 ubox
37 41 0.091586033 ubox
37 52 0.016579167 ubox
40 49 0.015081623 ubox
41 48 0.013858649 ubox
42 50 0.012716947 ubox
43 49 0.012721718 ubox
49 56 0.036004915 ubox
50 55 0.037567901 ubox
50 60 0.944165914 ubox
51 59 0.945055052 ubox
52 58 0.906174492 ubox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
11 45 0.9500000 lbox
12 44 0.9500000 lbox
13 43 0.9500000 lbox
14 42 0.9500000 lbox
15 41 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
52 58 0.9500000 lbox
showpage
end
%%EOF
