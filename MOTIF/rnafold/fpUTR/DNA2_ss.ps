%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCGCGAGGUGCGCAGGCUCGCGCCUUUUUCCCUUUUCUAAGCUUUCUGUGUUACCCCCGGUUCCGCUGUCUUUUCUGUCUACAGUUUGCGAUCCCCGCGUCCAGG\
) } def
/len { sequence length } bind def

/coor [
[93.88758087 408.60946655]
[102.15013885 394.44393921]
[101.72180176 379.45004272]
[93.62421417 366.94891357]
[100.96427917 352.93341064]
[100.53594208 337.93954468]
[100.10759735 322.94564819]
[99.67926025 307.95178223]
[99.25091553 292.95788574]
[91.15333557 280.45675659]
[98.49340057 266.44125366]
[98.06505585 251.44738770]
[87.09391022 241.43890381]
[86.44591522 226.23908997]
[97.01811218 214.79939270]
[96.58976746 199.80551147]
[96.16143036 184.81163025]
[95.73308563 169.81774902]
[95.30474854 154.82386780]
[94.87640381 139.82997131]
[94.44806671 124.83609772]
[94.01972198 109.84220886]
[80.51483917 113.80059814]
[64.54077911 107.47272491]
[50.89630127 101.24150085]
[40.85484314 112.54019928]
[27.92828560 120.37572479]
[13.26605129 124.05136108]
[-1.82810402 123.24026489]
[-16.01201820 118.01456451]
[-28.02446938 108.83892059]
[-36.79731369 96.52922821]
[-41.55048370 82.18005371]
[-41.86132050 67.06731415]
[-37.70219421 52.53483200]
[-29.44292450 39.87482071]
[-17.81792450 30.21299934]
[-3.86088014 24.40849113]
[11.18715858 22.97743034]
[25.98813057 26.04706573]
[39.22594070 33.34444427]
[49.72349548 44.22069550]
[56.54735947 57.70869827]
[59.09075546 72.60912323]
[57.12752914 87.59702301]
[70.77201080 93.82824707]
[77.68043518 90.90872192]
[67.85766602 79.57235718]
[75.60395050 66.72731018]
[90.21399689 70.12531281]
[91.49729156 85.06967163]
[98.40571594 82.15014648]
[103.44645691 68.02247620]
[108.48719788 53.89481354]
[101.96750641 39.74803543]
[107.28078461 25.49237823]
[120.80775452 19.36402893]
[125.84849548 5.23636389]
[130.88923645 -8.89130116]
[130.51725769 -25.84116745]
[146.70173645 -30.89080048]
[156.03434753 -16.73668861]
[145.01690674 -3.85056043]
[139.97616577 10.27710533]
[134.93542480 24.40476990]
[141.52789307 37.71171951]
[136.61711121 52.11098862]
[122.61486053 58.93555450]
[117.57411957 73.06321716]
[112.53338623 87.19088745]
[120.79103088 74.66845703]
[132.74713135 65.61022186]
[147.03713989 61.04999161]
[162.03013611 61.50823593]
[176.01498413 66.93264771]
[187.39556885 76.70414734]
[194.87304688 89.70750427]
[197.59400940 104.45864868]
[195.24792480 119.27404022]
[188.10252380 132.46279907]
[176.97332764 142.51968384]
[163.13052368 148.29692078]
[148.15396118 149.13514709]
[133.75292969 144.93869019]
[121.57100677 136.18649292]
[112.99852753 123.87744904]
[109.01360321 109.41387177]
[109.44194794 124.40775299]
[109.87028503 139.40164185]
[110.29862976 154.39552307]
[110.72696686 169.38940430]
[111.15531158 184.38328552]
[111.58364868 199.37716675]
[112.01199341 214.37104797]
[123.22002411 225.18853760]
[123.44082642 240.40055847]
[113.05894470 251.01904297]
[113.48728180 266.01290894]
[121.61550903 279.58651733]
[114.24480438 292.52954102]
[114.67314148 307.52343750]
[115.10147858 322.51730347]
[115.52982330 337.51119995]
[115.95816040 352.50506592]
[124.08638763 366.07867432]
[116.71568298 379.02169800]
[117.14402008 394.01559448]
[126.20180511 407.68630981]
[118.65028381 422.24331665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 107]
[3 106]
[5 104]
[6 103]
[7 102]
[8 101]
[9 100]
[11 98]
[12 97]
[15 94]
[16 93]
[17 92]
[18 91]
[19 90]
[20 89]
[21 88]
[22 87]
[24 46]
[25 45]
[52 70]
[53 69]
[54 68]
[57 65]
[58 64]
[59 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
