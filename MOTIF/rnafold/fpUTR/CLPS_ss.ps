%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCACCACAGCUGGCUCUGUCUCCCGCCACCCACACCAGCUGUCCCACUCACCAUGGAGAAGAUCCUGAUCCUCCUGCUUGUCGCCCUCUCUGUGGCCUAUGCAGCUCCUGGCCCCCGGGGGAUCAUUAUCAACCUGGCUGGAGUGUAGUGGCACAAUCUCGGCUCACUGCAAUCUCUGCUUCCCGGGUUCAA\
) } def
/len { sequence length } bind def

/coor [
[133.21464539 180.28991699]
[122.02816010 190.28305054]
[107.68145752 194.66166687]
[92.82134247 192.61793518]
[80.18932343 184.52891541]
[72.11587524 171.88694763]
[70.09045410 157.02432251]
[74.48673248 142.68301392]
[84.49575043 131.50733948]
[90.24074554 117.65111542]
[78.55600739 127.05680084]
[66.87126923 136.46247864]
[55.18653107 145.86816406]
[43.50179291 155.27384949]
[31.81705475 164.67953491]
[20.13231659 174.08522034]
[8.44757938 183.49090576]
[6.55714083 188.38116455]
[3.30115056 191.71697998]
[-0.49647066 193.23823547]
[-4.02834988 193.05085754]
[-16.14952850 201.88697815]
[-28.27070808 210.72309875]
[-25.47076797 225.72720337]
[-29.46643066 240.45802307]
[-39.46435928 251.99076843]
[-53.47945023 258.03558350]
[-68.72900391 257.39230347]
[-82.18521118 250.18859863]
[-91.17633057 237.85479736]
[-93.91716003 222.83978271]
[-89.86351776 208.12480164]
[-79.82025146 196.63151550]
[-65.78146362 190.64193726]
[-50.53456116 191.34527588]
[-37.10682678 198.60191345]
[-24.98564911 189.76579285]
[-12.86446953 180.92967224]
[-0.95810497 171.80616760]
[10.72663307 162.40048218]
[22.41137123 152.99479675]
[34.09611130 143.58911133]
[45.78084946 134.18342590]
[57.46558762 124.77774048]
[69.15032196 115.37206268]
[80.83506012 105.96637726]
[79.17448425 98.65251923]
[64.54672241 101.97344971]
[61.22602081 87.34563446]
[75.85333252 84.02481079]
[74.19275665 76.71095276]
[59.59199142 73.27326965]
[44.99122620 69.83558655]
[31.68577766 78.36440277]
[16.26469612 74.90524292]
[7.87703419 61.51036453]
[11.49904251 46.12671661]
[24.98184776 37.88114166]
[40.32634354 41.66559219]
[48.42890549 55.23482132]
[63.02967072 58.67250443]
[77.63043976 62.11018753]
[86.44406891 69.92527771]
[93.21998596 79.09503937]
[97.78102112 89.26165771]
[98.25935364 74.26928711]
[98.73768616 59.27691650]
[88.20369720 47.80203629]
[88.90236664 32.60445404]
[99.90682983 22.63262177]
[100.38516235 7.64025021]
[100.86349487 -7.35212088]
[101.34183502 -22.34449196]
[101.82016754 -37.33686447]
[102.29850006 -52.32923508]
[88.88130951 -51.34371948]
[74.56175232 -59.95929718]
[65.28944397 -78.03457642]
[62.67163467 -92.80437469]
[60.05382538 -107.57418060]
[57.43601608 -122.34397888]
[41.50823593 -132.58505249]
[38.16930771 -150.90011597]
[49.07821274 -165.59045410]
[45.99074173 -180.26927185]
[42.90327072 -194.94807434]
[39.81579971 -209.62689209]
[36.72832870 -224.30570984]
[22.85244370 -231.51637268]
[16.90561295 -245.97906494]
[21.69574738 -260.86492920]
[34.96109009 -269.14529419]
[50.43815613 -266.91046143]
[60.81914520 -255.21562195]
[61.20246887 -239.58273315]
[51.40713882 -227.39317322]
[54.49460983 -212.71435547]
[57.58208084 -198.03555298]
[60.66955185 -183.35673523]
[63.75702286 -168.67791748]
[74.44825745 -164.65653992]
[81.94419861 -155.87933350]
[84.29117584 -144.45552063]
[80.79161072 -133.20489502]
[72.20581818 -124.96179199]
[74.82363129 -110.19198608]
[77.44143677 -95.42218781]
[80.05924988 -80.65238190]
[87.39865112 -79.10865021]
[102.07746124 -76.02117920]
[109.41687012 -74.47743988]
[117.76284790 -86.94116974]
[126.10883331 -99.40490723]
[134.45480347 -111.86863708]
[142.80079651 -124.33236694]
[146.58966064 -140.85752869]
[163.51788330 -141.79133606]
[169.10139465 -125.78319550]
[155.26452637 -115.98638916]
[146.91854858 -103.52265930]
[138.57255554 -91.05892181]
[130.22657776 -78.59519196]
[121.88059998 -66.13146210]
[117.29087067 -51.85090256]
[116.81253815 -36.85852814]
[116.33420563 -21.86615753]
[115.85586548 -6.87378693]
[115.37753296 8.11858463]
[114.89920044 23.11095619]
[125.24562073 33.76399231]
[124.97409821 48.97520065]
[113.73005676 59.75524902]
[113.25172424 74.74761963]
[112.77339172 89.73999023]
[120.10009766 102.82889557]
[133.13017273 110.25973511]
[146.16023254 117.69057465]
[159.19029236 125.12141418]
[172.22036743 132.55226135]
[185.25042725 139.98309326]
[198.28048706 147.41394043]
[217.33724976 141.08232117]
[234.64886475 150.64305115]
[239.29315186 169.55249023]
[252.66368103 176.35168457]
[266.03421021 183.15087891]
[279.40472412 189.95008850]
[292.88195801 196.53520203]
[306.46252441 202.90457153]
[320.04306030 209.27394104]
[333.62359619 215.64331055]
[347.20413208 222.01268005]
[360.78469849 228.38204956]
[374.36523438 234.75141907]
[387.99612427 241.01229858]
[401.67651367 247.16429138]
[414.54986572 238.66252136]
[429.97628784 238.49308777]
[443.03329468 246.71005249]
[449.55441284 260.69140625]
[447.45877075 275.97579956]
[437.41510010 287.68597412]
[422.62829590 292.08526611]
[407.81677246 287.76992798]
[397.70681763 276.11691284]
[395.52450562 260.84469604]
[381.84411621 254.69268799]
[374.44580078 254.81674194]
[367.99584961 248.33195496]
[354.41531372 241.96258545]
[340.83477783 235.59321594]
[327.25424194 229.22384644]
[313.67367554 222.85449219]
[300.09313965 216.48512268]
[286.51260376 210.11575317]
[281.78640747 210.87248230]
[276.53585815 208.66020203]
[272.60552979 203.32060242]
[259.23501587 196.52140808]
[245.86447144 189.72221375]
[232.49395752 182.92300415]
[223.93382263 188.62413025]
[213.69873047 190.26443481]
[203.62991333 187.48081970]
[195.56700134 180.71220398]
[191.01199341 171.13175964]
[190.84965515 160.44400024]
[177.81958008 153.01316833]
[164.78952026 145.58232117]
[151.75946045 138.15147400]
[138.72938538 130.72064209]
[125.69932556 123.28979492]
[112.66925812 115.85895538]
[120.54167938 128.62707520]
[132.19673157 138.06951904]
[138.81558228 151.53024292]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 46]
[11 45]
[12 44]
[13 43]
[14 42]
[15 41]
[16 40]
[17 39]
[21 38]
[22 37]
[23 36]
[51 62]
[52 61]
[53 60]
[65 134]
[66 133]
[67 132]
[70 129]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[78 108]
[79 107]
[80 106]
[81 105]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[135 193]
[136 192]
[137 191]
[138 190]
[139 189]
[140 188]
[141 187]
[144 181]
[145 180]
[146 179]
[147 178]
[148 175]
[149 174]
[150 173]
[151 172]
[152 171]
[153 170]
[154 169]
[155 167]
[156 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
