%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AHRR)
} def

/sequence { (\
GGCACGUGGACUCCCUUUAAUCCAGUGACUGUCAGGUCGAUCAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.009458716 ubox
1 13 0.005346102 ubox
1 14 0.018196938 ubox
1 15 0.027162231 ubox
1 16 0.003593821 ubox
1 22 0.037219540 ubox
1 23 0.324138436 ubox
1 30 0.510715316 ubox
1 33 0.302726155 ubox
1 38 0.067104549 ubox
1 42 0.062970558 ubox
2 11 0.011302842 ubox
2 12 0.003631782 ubox
2 13 0.018129915 ubox
2 14 0.026988217 ubox
2 15 0.004057374 ubox
2 21 0.034694760 ubox
2 22 0.323808629 ubox
2 26 0.084197177 ubox
2 29 0.545767344 ubox
2 32 0.303103106 ubox
2 37 0.064981724 ubox
2 41 0.047119647 ubox
3 25 0.090186068 ubox
3 27 0.682530519 ubox
3 31 0.300457210 ubox
3 36 0.062749421 ubox
4 26 0.766538464 ubox
4 30 0.280941569 ubox
4 32 0.019730974 ubox
4 37 0.033358746 ubox
5 25 0.784805751 ubox
5 27 0.205929379 ubox
5 31 0.020001102 ubox
5 36 0.035341838 ubox
5 39 0.018157654 ubox
6 21 0.023283000 ubox
6 26 0.192479182 ubox
6 29 0.098139079 ubox
6 30 0.018246794 ubox
6 38 0.014443829 ubox
6 41 0.046642235 ubox
6 44 0.019214030 ubox
7 19 0.049456294 ubox
7 20 0.023102763 ubox
7 24 0.880337580 ubox
7 25 0.015533215 ubox
7 27 0.006927876 ubox
7 28 0.083031286 ubox
7 31 0.003633341 ubox
7 34 0.036522528 ubox
7 36 0.004373410 ubox
7 40 0.049033071 ubox
7 43 0.020660955 ubox
8 14 0.048410867 ubox
8 15 0.324453212 ubox
8 16 0.105581519 ubox
8 17 0.013521897 ubox
8 18 0.049242481 ubox
8 22 0.009272085 ubox
8 23 0.925713323 ubox
8 30 0.005266450 ubox
8 33 0.030658649 ubox
8 42 0.020716287 ubox
9 13 0.048040150 ubox
9 14 0.323666850 ubox
9 15 0.106961534 ubox
9 16 0.012001949 ubox
9 17 0.049066878 ubox
9 18 0.013846178 ubox
9 21 0.006641392 ubox
9 22 0.925618443 ubox
9 29 0.005554056 ubox
9 32 0.021693863 ubox
9 33 0.053697584 ubox
9 38 0.051556727 ubox
9 41 0.016543570 ubox
9 42 0.008429274 ubox
10 16 0.046925361 ubox
10 17 0.018099360 ubox
10 21 0.865812604 ubox
10 26 0.059615120 ubox
10 32 0.057396070 ubox
10 37 0.051551918 ubox
10 41 0.008414534 ubox
11 25 0.060649447 ubox
11 31 0.058544062 ubox
11 36 0.050218866 ubox
12 24 0.057750983 ubox
12 28 0.039698433 ubox
12 34 0.003270019 ubox
12 35 0.046125921 ubox
12 40 0.010262890 ubox
13 27 0.041887962 ubox
13 35 0.012442051 ubox
13 36 0.007351066 ubox
13 39 0.010385280 ubox
14 35 0.007830328 ubox
14 36 0.019297791 ubox
15 25 0.043637932 ubox
15 35 0.020349539 ubox
16 24 0.042119651 ubox
16 25 0.008419918 ubox
16 28 0.006746573 ubox
16 34 0.019909653 ubox
17 24 0.009003902 ubox
17 25 0.011999282 ubox
17 27 0.006859367 ubox
17 28 0.019105806 ubox
17 34 0.003339053 ubox
18 24 0.011900959 ubox
18 27 0.019957175 ubox
18 31 0.024699651 ubox
19 26 0.018686369 ubox
19 30 0.024435138 ubox
20 26 0.011442566 ubox
20 32 0.003874900 ubox
20 37 0.003262345 ubox
20 41 0.031205400 ubox
20 44 0.013389746 ubox
21 25 0.010841203 ubox
21 28 0.030036366 ubox
21 36 0.003191834 ubox
21 40 0.033441467 ubox
21 43 0.014387546 ubox
22 27 0.030511674 ubox
22 35 0.003477083 ubox
22 36 0.004995982 ubox
22 39 0.033208443 ubox
23 31 0.022693277 ubox
23 35 0.005134221 ubox
24 30 0.022939610 ubox
25 29 0.022519795 ubox
25 41 0.091168914 ubox
25 44 0.066728735 ubox
26 34 0.025940868 ubox
26 39 0.410999684 ubox
26 40 0.094761120 ubox
26 43 0.072349960 ubox
27 33 0.028363892 ubox
27 38 0.652819888 ubox
27 42 0.075223168 ubox
28 32 0.024803010 ubox
28 37 0.686441756 ubox
28 41 0.073884257 ubox
29 35 0.048010324 ubox
29 36 0.690346202 ubox
30 34 0.044938110 ubox
30 35 0.672444191 ubox
30 39 0.090957246 ubox
30 43 0.132594533 ubox
31 37 0.005383251 ubox
31 38 0.118545221 ubox
31 41 0.347595810 ubox
31 42 0.168943780 ubox
31 44 0.009099105 ubox
32 36 0.008832324 ubox
32 40 0.401683247 ubox
32 43 0.008998270 ubox
33 39 0.405765538 ubox
35 42 0.109608295 ubox
36 41 0.074708970 ubox
36 44 0.017826006 ubox
37 43 0.018498889 ubox
1 30 0.9500000 lbox
2 29 0.9500000 lbox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
showpage
end
%%EOF
