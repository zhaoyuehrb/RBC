%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MIEN1)
} def

/sequence { (\
CCCGCCCCGUCACGUGCCCGCGGUUCGCGUCACACCCGGAAGCAGGGGCCCGAGCGGAGCCGGCCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 46 0.113044829 ubox
1 47 0.153141075 ubox
1 48 0.022207963 ubox
1 63 0.564292357 ubox
2 23 0.007195444 ubox
2 39 0.010323638 ubox
2 45 0.113340621 ubox
2 46 0.166395930 ubox
2 47 0.022397009 ubox
2 48 0.003277708 ubox
2 57 0.011213178 ubox
2 62 0.571586127 ubox
2 63 0.495279169 ubox
3 9 0.050735398 ubox
3 14 0.033795753 ubox
3 16 0.034805985 ubox
3 22 0.007246993 ubox
3 29 0.006716149 ubox
3 38 0.010353551 ubox
3 45 0.166414712 ubox
3 46 0.022130262 ubox
3 47 0.003299633 ubox
3 52 0.081670122 ubox
3 56 0.011245570 ubox
3 62 0.499724715 ubox
3 66 0.037513242 ubox
3 68 0.061192154 ubox
4 8 0.048543261 ubox
4 10 0.024974479 ubox
4 13 0.034999543 ubox
4 15 0.038982131 ubox
4 17 0.019944422 ubox
4 21 0.007311042 ubox
4 28 0.006873527 ubox
4 37 0.010290789 ubox
4 43 0.200598826 ubox
4 49 0.529953384 ubox
4 51 0.034227704 ubox
4 55 0.010919318 ubox
4 60 0.680425813 ubox
4 61 0.357345594 ubox
4 64 0.108397896 ubox
4 65 0.029187369 ubox
4 67 0.064221120 ubox
5 9 0.025912847 ubox
5 14 0.039320489 ubox
5 16 0.019951713 ubox
5 20 0.007299156 ubox
5 27 0.006868611 ubox
5 42 0.200848078 ubox
5 46 0.004416845 ubox
5 47 0.005334966 ubox
5 48 0.532067231 ubox
5 54 0.010838932 ubox
5 59 0.764763756 ubox
5 63 0.111511335 ubox
5 66 0.063557504 ubox
6 39 0.016155910 ubox
6 45 0.004456138 ubox
6 46 0.006681716 ubox
6 47 0.532078042 ubox
6 48 0.008399220 ubox
6 57 0.049463160 ubox
6 62 0.111386443 ubox
6 63 0.028618092 ubox
7 23 0.007982425 ubox
7 38 0.014952842 ubox
7 39 0.202969033 ubox
7 45 0.007002006 ubox
7 46 0.532052444 ubox
7 47 0.008965008 ubox
7 48 0.003351913 ubox
7 56 0.039267900 ubox
7 57 0.774686902 ubox
7 62 0.028705152 ubox
7 63 0.038645711 ubox
8 14 0.024496532 ubox
8 16 0.003810683 ubox
8 22 0.008035694 ubox
8 38 0.203388053 ubox
8 45 0.531439551 ubox
8 46 0.009469746 ubox
8 47 0.003320741 ubox
8 52 0.004719068 ubox
8 56 0.775851672 ubox
8 62 0.038721489 ubox
8 66 0.007675489 ubox
8 68 0.037434353 ubox
9 13 0.035632159 ubox
9 15 0.004211440 ubox
9 17 0.020604871 ubox
9 19 0.003185256 ubox
9 21 0.008255426 ubox
9 26 0.006104884 ubox
9 33 0.038704662 ubox
9 35 0.023065318 ubox
9 37 0.201924509 ubox
9 43 0.248459773 ubox
9 49 0.005156437 ubox
9 51 0.004594967 ubox
9 55 0.776159410 ubox
9 60 0.034745839 ubox
9 61 0.034809009 ubox
9 64 0.030999284 ubox
9 65 0.010097260 ubox
9 67 0.039931519 ubox
10 14 0.003715570 ubox
10 16 0.020019004 ubox
10 20 0.007739837 ubox
10 23 0.004369557 ubox
10 32 0.038968169 ubox
10 34 0.023828522 ubox
10 39 0.042646971 ubox
10 40 0.124932125 ubox
10 42 0.229132391 ubox
10 48 0.005163251 ubox
10 53 0.084622069 ubox
10 54 0.759413650 ubox
10 57 0.003284697 ubox
10 58 0.022890705 ubox
10 59 0.037086612 ubox
10 63 0.030454809 ubox
10 66 0.030038172 ubox
11 22 0.007210971 ubox
11 38 0.083964320 ubox
11 39 0.162145467 ubox
11 45 0.009618577 ubox
11 46 0.004005212 ubox
11 47 0.005086341 ubox
11 52 0.094616000 ubox
11 56 0.003551310 ubox
11 57 0.023773425 ubox
11 62 0.022177545 ubox
12 30 0.047741401 ubox
13 20 0.012239851 ubox
13 22 0.020560505 ubox
13 27 0.010592057 ubox
13 29 0.048822958 ubox
13 38 0.206027558 ubox
13 52 0.756091494 ubox
13 56 0.044900928 ubox
13 62 0.033350311 ubox
13 66 0.095020850 ubox
13 68 0.203959073 ubox
14 19 0.012351837 ubox
14 21 0.021352383 ubox
14 26 0.013899953 ubox
14 28 0.048829555 ubox
14 33 0.235265550 ubox
14 35 0.235639357 ubox
14 37 0.140407805 ubox
14 43 0.274797057 ubox
14 49 0.092832662 ubox
14 51 0.760444436 ubox
14 55 0.044840355 ubox
14 60 0.008048207 ubox
14 61 0.036716217 ubox
14 64 0.003479619 ubox
14 65 0.099993247 ubox
14 67 0.214294825 ubox
15 20 0.020477448 ubox
15 27 0.048085059 ubox
15 32 0.244504452 ubox
15 34 0.256434195 ubox
15 38 0.008991540 ubox
15 42 0.277135475 ubox
15 44 0.327167351 ubox
15 48 0.092344532 ubox
15 54 0.044569335 ubox
15 56 0.009736970 ubox
15 59 0.008014188 ubox
15 63 0.003431822 ubox
15 66 0.213787282 ubox
15 68 0.045651938 ubox
16 24 0.037329535 ubox
16 26 0.033623409 ubox
16 30 0.006187016 ubox
16 31 0.243984226 ubox
16 33 0.258472551 ubox
16 37 0.009015017 ubox
16 43 0.330075597 ubox
16 49 0.768973172 ubox
16 55 0.010368180 ubox
16 60 0.042998709 ubox
16 64 0.141135481 ubox
16 65 0.190278340 ubox
16 67 0.079405513 ubox
17 23 0.049165102 ubox
17 29 0.019325650 ubox
17 39 0.028456826 ubox
17 42 0.328667261 ubox
17 46 0.086916350 ubox
17 47 0.104929424 ubox
17 48 0.765602579 ubox
17 54 0.010430127 ubox
17 59 0.043014126 ubox
17 63 0.170198041 ubox
17 66 0.079422720 ubox
18 22 0.048910434 ubox
18 38 0.026192215 ubox
18 39 0.433320483 ubox
18 45 0.086874980 ubox
18 46 0.132007417 ubox
18 47 0.760969175 ubox
18 48 0.003328636 ubox
18 57 0.043723358 ubox
18 62 0.160158460 ubox
18 63 0.125036197 ubox
19 27 0.008401445 ubox
19 29 0.358713474 ubox
19 38 0.434826550 ubox
19 45 0.154288533 ubox
19 46 0.754101980 ubox
19 47 0.004273926 ubox
19 52 0.013884554 ubox
19 56 0.043738315 ubox
19 62 0.118505410 ubox
19 66 0.006164664 ubox
19 68 0.047072046 ubox
20 26 0.008416230 ubox
20 28 0.362645547 ubox
20 30 0.059655264 ubox
20 37 0.434640343 ubox
20 43 0.552520468 ubox
20 51 0.013960212 ubox
20 55 0.043494674 ubox
20 60 0.111906761 ubox
20 61 0.077222146 ubox
20 64 0.053563362 ubox
20 65 0.006170599 ubox
20 67 0.050326898 ubox
21 27 0.362638561 ubox
21 29 0.061956351 ubox
21 38 0.041234888 ubox
21 42 0.554725861 ubox
21 54 0.043302384 ubox
21 59 0.114992583 ubox
21 62 0.148436891 ubox
21 63 0.038048972 ubox
21 66 0.050292494 ubox
22 26 0.339252341 ubox
22 28 0.061886746 ubox
22 36 0.435141268 ubox
22 37 0.041578678 ubox
22 50 0.035162044 ubox
22 51 0.005670348 ubox
22 61 0.211173288 ubox
22 65 0.050083602 ubox
23 33 0.012282687 ubox
23 35 0.435094008 ubox
23 36 0.040858632 ubox
23 43 0.302616072 ubox
23 49 0.035261084 ubox
23 50 0.005214900 ubox
23 55 0.028661707 ubox
23 60 0.215395470 ubox
23 64 0.050032213 ubox
24 29 0.003636163 ubox
24 32 0.013697555 ubox
24 34 0.414245079 ubox
24 39 0.020158238 ubox
24 40 0.605405890 ubox
24 41 0.336336775 ubox
24 42 0.294088589 ubox
24 45 0.010303431 ubox
24 47 0.004567124 ubox
24 48 0.034971144 ubox
24 54 0.028912496 ubox
24 57 0.005330849 ubox
24 58 0.137050390 ubox
24 59 0.203348028 ubox
24 63 0.045650510 ubox
25 38 0.005956057 ubox
25 39 0.626550087 ubox
25 40 0.349537453 ubox
25 41 0.277139562 ubox
25 44 0.010532375 ubox
25 45 0.006327298 ubox
25 46 0.006729581 ubox
25 47 0.033952153 ubox
25 53 0.040002412 ubox
25 57 0.155399607 ubox
25 58 0.197275020 ubox
25 62 0.028134164 ubox
25 63 0.007452745 ubox
26 38 0.634540037 ubox
26 39 0.352345569 ubox
26 45 0.010471192 ubox
26 46 0.032909046 ubox
26 52 0.040235014 ubox
26 56 0.191984481 ubox
26 57 0.166476972 ubox
26 62 0.010553175 ubox
26 68 0.004256563 ubox
27 37 0.634695008 ubox
27 43 0.043339579 ubox
27 49 0.006393323 ubox
27 51 0.040163772 ubox
27 55 0.219315420 ubox
27 60 0.017731210 ubox
27 61 0.009818283 ubox
27 67 0.004666261 ubox
28 38 0.422102372 ubox
28 42 0.043470452 ubox
28 48 0.006411507 ubox
28 54 0.219277147 ubox
28 56 0.122817916 ubox
28 59 0.017941679 ubox
28 66 0.004666593 ubox
29 35 0.615186368 ubox
29 37 0.417689185 ubox
29 43 0.013507000 ubox
29 49 0.039390627 ubox
29 51 0.004413110 ubox
29 55 0.122988096 ubox
29 60 0.003832417 ubox
29 65 0.003975937 ubox
30 34 0.555708282 ubox
30 39 0.022284756 ubox
30 40 0.039106234 ubox
30 42 0.012683525 ubox
30 48 0.038390266 ubox
30 53 0.184820198 ubox
30 54 0.092718183 ubox
30 57 0.013479647 ubox
30 58 0.010866569 ubox
30 59 0.003444507 ubox
31 38 0.028014581 ubox
31 39 0.041442839 ubox
31 45 0.003913238 ubox
31 47 0.015526050 ubox
31 52 0.194553637 ubox
31 56 0.013740008 ubox
31 57 0.011021199 ubox
35 46 0.018054669 ubox
35 47 0.190456946 ubox
35 48 0.179328176 ubox
36 45 0.018763821 ubox
36 46 0.192938144 ubox
36 47 0.179601462 ubox
36 48 0.004508590 ubox
37 45 0.193266721 ubox
37 46 0.179555741 ubox
37 47 0.004505623 ubox
37 52 0.014879753 ubox
38 51 0.015103899 ubox
39 50 0.015029360 ubox
42 49 0.014508860 ubox
42 64 0.005690764 ubox
42 67 0.015779370 ubox
43 48 0.014548582 ubox
43 63 0.005694956 ubox
43 66 0.015760264 ubox
45 65 0.014310157 ubox
46 61 0.003395641 ubox
46 64 0.014244429 ubox
47 60 0.003276205 ubox
47 61 0.045419582 ubox
47 65 0.125000678 ubox
48 55 0.014766747 ubox
48 60 0.048496273 ubox
48 64 0.129226792 ubox
48 67 0.063903408 ubox
49 54 0.014780322 ubox
49 57 0.004274266 ubox
49 59 0.048526056 ubox
49 63 0.109554012 ubox
49 66 0.063664689 ubox
50 56 0.004343262 ubox
50 57 0.049892446 ubox
50 62 0.085352150 ubox
50 63 0.119312237 ubox
51 56 0.049887497 ubox
51 62 0.138119551 ubox
51 66 0.026033075 ubox
51 68 0.025370885 ubox
52 61 0.154134043 ubox
52 65 0.027156533 ubox
52 67 0.011926093 ubox
54 60 0.155402076 ubox
54 64 0.023990000 ubox
54 67 0.543893397 ubox
55 59 0.154292958 ubox
55 62 0.016033316 ubox
55 63 0.023470861 ubox
55 66 0.544664794 ubox
56 61 0.016720552 ubox
56 65 0.544692234 ubox
57 64 0.543195938 ubox
59 67 0.017516966 ubox
60 66 0.017521414 ubox
61 68 0.059325815 ubox
62 67 0.063611932 ubox
1 63 0.9500000 lbox
2 62 0.9500000 lbox
4 60 0.9500000 lbox
5 59 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
13 52 0.9500000 lbox
14 51 0.9500000 lbox
16 49 0.9500000 lbox
17 48 0.9500000 lbox
18 47 0.9500000 lbox
19 46 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
29 35 0.9500000 lbox
30 34 0.9500000 lbox
showpage
end
%%EOF
