%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DTWD2)
} def

/sequence { (\
AUUGCGCUACGCGGCGCGGGCCGGUUUCUACAGCGCGUGGCGCCCCCCGGCGGCAGCCGGGCUUCAAUGCCACGGCCUGACCGGAGUGUCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.003572752 ubox
1 38 0.015058625 ubox
1 87 0.008093429 ubox
2 14 0.207149733 ubox
2 19 0.109921525 ubox
2 20 0.006376841 ubox
2 24 0.003955565 ubox
2 33 0.010481077 ubox
2 37 0.011135917 ubox
2 86 0.008349757 ubox
3 9 0.014642097 ubox
3 11 0.004575443 ubox
3 13 0.281587054 ubox
3 16 0.012654459 ubox
3 18 0.190667039 ubox
3 19 0.006364850 ubox
3 23 0.004348382 ubox
3 32 0.013764659 ubox
3 35 0.004893362 ubox
3 37 0.078434174 ubox
3 85 0.007796265 ubox
3 92 0.005045528 ubox
4 8 0.013524747 ubox
4 10 0.044683154 ubox
4 12 0.336762779 ubox
4 15 0.178557314 ubox
4 17 0.276275512 ubox
4 22 0.004562664 ubox
4 31 0.014192743 ubox
4 34 0.030860187 ubox
4 36 0.639754006 ubox
4 43 0.146342139 ubox
4 89 0.055934793 ubox
4 91 0.004842122 ubox
4 93 0.044293484 ubox
5 11 0.336946348 ubox
5 13 0.152669131 ubox
5 14 0.151952982 ubox
5 16 0.278984228 ubox
5 33 0.030881253 ubox
5 35 0.640550400 ubox
5 42 0.146833462 ubox
5 88 0.058870055 ubox
5 92 0.044388001 ubox
6 10 0.316070779 ubox
6 12 0.181060943 ubox
6 15 0.302527917 ubox
6 21 0.005034407 ubox
6 34 0.641984312 ubox
6 41 0.146909453 ubox
6 87 0.058982420 ubox
6 89 0.004208727 ubox
6 91 0.043375668 ubox
6 93 0.011943400 ubox
7 11 0.179912468 ubox
7 14 0.302502734 ubox
7 20 0.005147880 ubox
7 33 0.641950840 ubox
7 40 0.146912128 ubox
7 86 0.059110028 ubox
7 88 0.005909583 ubox
7 92 0.011345225 ubox
8 13 0.282991962 ubox
8 19 0.004659348 ubox
8 30 0.033544297 ubox
8 32 0.634865996 ubox
8 39 0.146838193 ubox
8 85 0.057220766 ubox
8 88 0.026338574 ubox
9 25 0.604801672 ubox
9 29 0.047364132 ubox
9 38 0.146844834 ubox
9 87 0.028319413 ubox
9 89 0.017624110 ubox
10 18 0.007769746 ubox
10 24 0.607623616 ubox
10 37 0.146895918 ubox
10 42 0.007658807 ubox
10 83 0.005233580 ubox
10 86 0.028407579 ubox
10 88 0.018082291 ubox
10 92 0.047298739 ubox
11 17 0.007880941 ubox
11 25 0.047476037 ubox
11 36 0.146705480 ubox
11 41 0.007922819 ubox
11 43 0.067482943 ubox
11 82 0.004880554 ubox
11 87 0.012516271 ubox
11 91 0.048938569 ubox
11 93 0.549601299 ubox
12 16 0.007824112 ubox
12 23 0.640502709 ubox
12 24 0.034224260 ubox
12 35 0.143339807 ubox
12 40 0.007922820 ubox
12 42 0.067625132 ubox
12 83 0.005006930 ubox
12 86 0.012415770 ubox
12 92 0.550761337 ubox
13 22 0.651125610 ubox
13 26 0.004174564 ubox
13 28 0.003939290 ubox
13 34 0.093005462 ubox
13 41 0.067734127 ubox
13 44 0.009012134 ubox
13 82 0.005150562 ubox
13 90 0.091457434 ubox
13 91 0.549475021 ubox
13 94 0.107636679 ubox
14 21 0.651607898 ubox
14 25 0.011925116 ubox
14 27 0.004552685 ubox
14 34 0.050477689 ubox
14 36 0.007779039 ubox
14 38 0.007916055 ubox
14 43 0.009040783 ubox
14 81 0.005145506 ubox
14 89 0.105946769 ubox
14 90 0.546912573 ubox
14 93 0.110105870 ubox
15 20 0.651393495 ubox
15 24 0.011989901 ubox
15 33 0.071259329 ubox
15 35 0.008165643 ubox
15 37 0.007939791 ubox
15 39 0.067846259 ubox
15 42 0.009039199 ubox
15 83 0.005704983 ubox
15 88 0.472163898 ubox
15 92 0.109797365 ubox
16 25 0.015110060 ubox
16 34 0.009582545 ubox
16 36 0.007969223 ubox
16 38 0.067959680 ubox
16 41 0.008906625 ubox
16 82 0.005591933 ubox
16 87 0.472094793 ubox
16 89 0.296275902 ubox
16 91 0.094626354 ubox
16 93 0.397892149 ubox
17 23 0.009008779 ubox
17 24 0.015261200 ubox
17 33 0.009833655 ubox
17 35 0.007965890 ubox
17 37 0.068059050 ubox
17 40 0.008148997 ubox
17 79 0.007893489 ubox
17 86 0.471202680 ubox
17 88 0.307168227 ubox
17 92 0.400695592 ubox
18 22 0.008515342 ubox
18 27 0.003440062 ubox
18 28 0.018474340 ubox
18 29 0.087085680 ubox
18 34 0.007597446 ubox
18 36 0.072972038 ubox
18 38 0.004095302 ubox
18 45 0.003929258 ubox
18 78 0.009620312 ubox
18 87 0.297209927 ubox
18 90 0.039438217 ubox
18 91 0.432385333 ubox
18 94 0.012060299 ubox
19 26 0.003748140 ubox
19 27 0.017950768 ubox
19 28 0.090268319 ubox
19 29 0.032940162 ubox
19 44 0.003943538 ubox
19 77 0.010046364 ubox
19 89 0.029165822 ubox
19 90 0.432537132 ubox
19 91 0.074762819 ubox
19 93 0.011329011 ubox
19 94 0.125632052 ubox
20 26 0.015232892 ubox
20 27 0.071062695 ubox
20 28 0.032959860 ubox
20 34 0.108496536 ubox
20 36 0.008113370 ubox
20 38 0.004640654 ubox
20 43 0.003937359 ubox
20 51 0.004588526 ubox
20 76 0.010050439 ubox
20 87 0.022201125 ubox
20 89 0.425411204 ubox
20 90 0.075033640 ubox
20 93 0.128265965 ubox
21 33 0.108522031 ubox
21 35 0.007651707 ubox
21 37 0.004636937 ubox
21 42 0.003462476 ubox
21 50 0.004633519 ubox
21 75 0.010050370 ubox
21 84 0.677147361 ubox
21 86 0.015075949 ubox
21 88 0.269112123 ubox
21 92 0.096212578 ubox
22 35 0.004735616 ubox
22 49 0.004651177 ubox
22 74 0.009876499 ubox
22 83 0.725485588 ubox
22 88 0.043323251 ubox
22 92 0.086452510 ubox
23 29 0.017621810 ubox
23 34 0.015864125 ubox
23 36 0.003875079 ubox
23 44 0.005133616 ubox
23 48 0.004635590 ubox
23 73 0.007610384 ubox
23 82 0.725865512 ubox
23 87 0.057395204 ubox
23 90 0.039910860 ubox
23 91 0.120742211 ubox
24 28 0.019052730 ubox
24 31 0.158192322 ubox
24 34 0.073862356 ubox
24 43 0.005172665 ubox
24 47 0.004600540 ubox
24 81 0.725850567 ubox
24 87 0.013997538 ubox
24 89 0.038083676 ubox
24 90 0.120628003 ubox
25 30 0.154323835 ubox
25 33 0.073540918 ubox
25 42 0.005097484 ubox
25 80 0.719204469 ubox
25 84 0.006232289 ubox
25 85 0.056887557 ubox
25 86 0.051442834 ubox
25 88 0.037658803 ubox
26 32 0.065238278 ubox
26 33 0.005839313 ubox
26 79 0.362581276 ubox
26 80 0.045573701 ubox
26 83 0.005750687 ubox
26 84 0.056040030 ubox
26 85 0.054187378 ubox
26 86 0.118968805 ubox
27 32 0.007203607 ubox
27 79 0.029603101 ubox
27 80 0.054292155 ubox
27 83 0.049471834 ubox
27 84 0.054262854 ubox
27 85 0.133213497 ubox
28 40 0.008106404 ubox
28 75 0.003231301 ubox
28 79 0.071397281 ubox
28 83 0.054041032 ubox
28 84 0.133995767 ubox
28 86 0.012119889 ubox
29 39 0.008215910 ubox
29 79 0.035492854 ubox
29 83 0.132420354 ubox
29 85 0.011758127 ubox
30 38 0.008468854 ubox
30 78 0.054811053 ubox
31 37 0.008553882 ubox
31 79 0.639554991 ubox
32 78 0.675217454 ubox
33 43 0.012098795 ubox
33 62 0.003208099 ubox
33 76 0.362031716 ubox
33 77 0.647102591 ubox
33 93 0.003549909 ubox
34 42 0.012126785 ubox
34 61 0.003206344 ubox
34 75 0.410615119 ubox
34 92 0.003553096 ubox
35 41 0.012131299 ubox
35 76 0.274067725 ubox
35 91 0.003509856 ubox
35 93 0.102374722 ubox
36 40 0.012043307 ubox
36 59 0.003188930 ubox
36 74 0.715681034 ubox
36 75 0.194389758 ubox
36 92 0.103505462 ubox
37 73 0.742434531 ubox
37 91 0.118984895 ubox
37 93 0.628518714 ubox
38 55 0.013616431 ubox
38 72 0.742631719 ubox
38 92 0.630334193 ubox
39 54 0.015206235 ubox
39 71 0.742789857 ubox
39 90 0.155504295 ubox
39 91 0.628870614 ubox
39 94 0.038045512 ubox
40 70 0.742793669 ubox
40 89 0.171065200 ubox
40 90 0.624965095 ubox
40 93 0.038489666 ubox
41 52 0.016234867 ubox
41 69 0.742569755 ubox
41 88 0.645020548 ubox
41 92 0.038454852 ubox
42 51 0.018546452 ubox
42 62 0.069774767 ubox
42 68 0.666034687 ubox
42 87 0.645150621 ubox
42 89 0.055155447 ubox
42 91 0.035958666 ubox
43 50 0.018672809 ubox
43 61 0.065959970 ubox
43 86 0.645027409 ubox
43 88 0.057172219 ubox
44 49 0.018689946 ubox
44 50 0.005778359 ubox
44 60 0.060387851 ubox
44 61 0.007690629 ubox
44 84 0.035628773 ubox
45 49 0.005813571 ubox
45 59 0.054263322 ubox
45 60 0.007986463 ubox
45 61 0.039110863 ubox
45 83 0.032095772 ubox
45 84 0.058801820 ubox
46 59 0.007908839 ubox
46 60 0.032103597 ubox
46 61 0.737555697 ubox
46 83 0.052698518 ubox
46 84 0.043396875 ubox
47 59 0.022785094 ubox
47 60 0.739629534 ubox
47 61 0.004940540 ubox
47 83 0.031791530 ubox
47 84 0.661411289 ubox
48 59 0.740457707 ubox
48 60 0.003508000 ubox
48 83 0.663066768 ubox
48 92 0.014660504 ubox
49 58 0.742842977 ubox
49 82 0.666161641 ubox
49 91 0.015194658 ubox
49 94 0.050193703 ubox
50 57 0.742857821 ubox
50 81 0.666043032 ubox
50 90 0.015181426 ubox
50 93 0.050567153 ubox
51 56 0.742566464 ubox
51 79 0.646691419 ubox
51 83 0.025090736 ubox
51 92 0.050544190 ubox
52 77 0.018647998 ubox
52 78 0.645928112 ubox
52 82 0.042694848 ubox
52 90 0.004237663 ubox
52 91 0.045469893 ubox
53 76 0.015656638 ubox
53 77 0.638895911 ubox
53 81 0.042925303 ubox
53 89 0.005997673 ubox
53 90 0.045114583 ubox
54 75 0.012435119 ubox
54 79 0.159274214 ubox
54 88 0.038240656 ubox
55 78 0.159096070 ubox
55 87 0.036497572 ubox
56 76 0.656854147 ubox
56 77 0.112569753 ubox
57 75 0.669263978 ubox
57 84 0.006953389 ubox
58 74 0.669339586 ubox
58 83 0.006955981 ubox
59 73 0.666797906 ubox
59 82 0.006892051 ubox
60 71 0.668811222 ubox
60 81 0.006691692 ubox
61 70 0.669408618 ubox
62 69 0.669193996 ubox
64 80 0.006796411 ubox
65 79 0.006954422 ubox
66 78 0.006744831 ubox
67 89 0.004839072 ubox
68 88 0.005024965 ubox
69 76 0.007177177 ubox
69 87 0.005486823 ubox
70 75 0.007181535 ubox
70 86 0.005525506 ubox
73 83 0.005767603 ubox
74 82 0.006120219 ubox
74 90 0.003304960 ubox
74 94 0.015243598 ubox
75 81 0.006110015 ubox
75 89 0.003358351 ubox
75 93 0.015367017 ubox
76 84 0.003603916 ubox
76 88 0.004208429 ubox
76 92 0.015304435 ubox
77 83 0.005283977 ubox
77 84 0.010089719 ubox
77 86 0.020083874 ubox
78 83 0.009470003 ubox
78 85 0.020100066 ubox
79 90 0.015358760 ubox
80 87 0.008203493 ubox
80 89 0.016026038 ubox
81 86 0.008591177 ubox
81 88 0.015991570 ubox
82 92 0.016108424 ubox
83 91 0.032081255 ubox
84 90 0.032393818 ubox
85 89 0.028278990 ubox
86 93 0.045778336 ubox
87 92 0.043983603 ubox
4 36 0.9500000 lbox
5 35 0.9500000 lbox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
8 32 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
37 93 0.9500000 lbox
38 92 0.9500000 lbox
39 91 0.9500000 lbox
40 90 0.9500000 lbox
41 88 0.9500000 lbox
42 87 0.9500000 lbox
43 86 0.9500000 lbox
47 84 0.9500000 lbox
48 83 0.9500000 lbox
49 82 0.9500000 lbox
50 81 0.9500000 lbox
51 79 0.9500000 lbox
52 78 0.9500000 lbox
53 77 0.9500000 lbox
56 76 0.9500000 lbox
57 75 0.9500000 lbox
58 74 0.9500000 lbox
59 73 0.9500000 lbox
60 71 0.9500000 lbox
61 70 0.9500000 lbox
62 69 0.9500000 lbox
showpage
end
%%EOF
