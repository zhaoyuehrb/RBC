%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGUCGGCUGCCGCGCUGCCGAGUCACUGGGGUGGGAGGAGCAUAAGCAGGGGGAGGGGUGCAUGCCGGAGUGCGCAGGCGCAACGCGACUCCCGAGGCGCGGGCCGCCCCCUUGGCUGGUUUGGAUCCGGGUCAGUCGGGUGCCGAGAUUUGGGAGAGACGCUCUGAACUGACUGCCCCGCAUCACCGGAGCGUCCCAGCUGCGAGGAGUGUAAACAGGAACAUCGAUAAGUAGUGUAAAAACUUGCACA\
) } def
/len { sequence length } bind def

/coor [
[382.16751099 555.03594971]
[392.33242798 542.38769531]
[384.53866577 529.57141113]
[376.74490356 516.75512695]
[370.60092163 512.68408203]
[368.93508911 503.73092651]
[361.30108643 490.81884766]
[353.66705322 477.90676880]
[346.03305054 464.99472046]
[338.39901733 452.08264160]
[330.76501465 439.17056274]
[316.31982422 435.72488403]
[308.39392090 422.73895264]
[312.10595703 407.61090088]
[304.47195435 394.69882202]
[296.83792114 381.78674316]
[289.20391846 368.87466431]
[281.56988525 355.96258545]
[275.47692871 351.81558228]
[273.92239380 342.84243774]
[266.44927979 329.83657837]
[258.97619629 316.83068848]
[252.93519592 312.60836792]
[251.49218750 303.61660767]
[244.18116760 290.51892090]
[227.81594849 289.08288574]
[215.41365051 278.05746460]
[212.00273132 261.64733887]
[219.12416077 246.29103088]
[211.65106201 233.28515625]
[204.17796326 220.27928162]
[196.70486450 207.27340698]
[189.23176575 194.26753235]
[181.75866699 181.26165771]
[174.28555298 168.25578308]
[166.81245422 155.24990845]
[152.41117859 151.62515259]
[144.64712524 138.54180908]
[148.54673767 123.46100616]
[141.07363892 110.45512390]
[131.04103088 125.85149384]
[116.05276489 134.89332581]
[99.49015808 136.41790771]
[84.73833466 130.86735535]
[74.49579620 120.05827332]
[70.28296661 106.68447876]
[72.23862457 93.67748260]
[59.00706100 86.61166382]
[45.77549744 79.54584503]
[32.45722198 72.64486694]
[19.05427933 65.90979767]
[5.65133810 59.17472839]
[-7.75160313 52.43965912]
[-21.15454483 45.70458984]
[-34.55748749 38.96952057]
[-50.36243057 39.68668365]
[-58.26053619 27.05857468]
[-71.66347504 20.32350349]
[-86.50296021 25.05928230]
[-99.99950409 18.03803444]
[-104.42288971 3.86167359]
[-117.82583618 -2.87339640]
[-131.22877502 -9.60846615]
[-137.79675293 -9.60749531]
[-142.66261292 -12.47739410]
[-144.87780762 -16.68082047]
[-158.10935974 -23.74663925]
[-171.34092712 -30.81245613]
[-184.70179749 -37.63061142]
[-198.18733215 -44.19873428]
[-211.67286682 -50.76686096]
[-225.15840149 -57.33498764]
[-238.64393616 -63.90311432]
[-247.70225525 -64.84167480]
[-252.25538635 -70.63743591]
[-265.65832520 -77.37250519]
[-279.06127930 -84.10757446]
[-292.28860474 -76.16771698]
[-307.70803833 -76.66235352]
[-320.39929199 -85.43365479]
[-326.31262207 -99.68272400]
[-323.56112671 -114.86273956]
[-313.02276611 -126.12980652]
[-298.06033325 -129.88865662]
[-283.44827271 -124.93984222]
[-273.84921265 -112.86251831]
[-272.32620239 -97.51051331]
[-258.92324829 -90.77544403]
[-245.52030945 -84.04037476]
[-232.07582092 -77.38864899]
[-218.59028625 -70.82052612]
[-205.10473633 -64.25239563]
[-191.61920166 -57.68427277]
[-178.13366699 -51.11614609]
[-174.72135925 -51.89731598]
[-170.76295471 -51.08117676]
[-167.00578308 -48.42964172]
[-164.27510071 -44.04401779]
[-151.04354858 -36.97819901]
[-137.81198120 -29.91238213]
[-124.49370575 -23.01140785]
[-111.09076691 -16.27633667]
[-97.68782043 -9.54126740]
[-83.67291260 -14.45225430]
[-69.98448181 -7.81286573]
[-64.92840576 6.92056322]
[-51.52546692 13.65563297]
[-36.67919159 12.45673180]
[-27.82241631 25.56657982]
[-14.41947460 32.30164719]
[-1.01653326 39.03672028]
[12.38640785 45.77178955]
[25.78934860 52.50685883]
[39.19229126 59.24192810]
[43.90381622 58.62763214]
[49.05448914 60.94788742]
[52.84131622 66.31428528]
[66.07287598 73.38010406]
[79.30444336 80.44591522]
[84.36114502 70.81692505]
[93.60886383 62.79864883]
[106.40362549 58.10313416]
[109.72846222 43.47626114]
[113.05330658 28.84938812]
[116.37815094 14.22251415]
[119.70298767 -0.40435910]
[122.93695831 -15.05159378]
[126.07991791 -29.71862411]
[129.22288513 -44.38565445]
[132.36584473 -59.05268478]
[135.50880432 -73.71971893]
[138.65176392 -88.38674927]
[131.17864990 -102.58294678]
[137.74998474 -117.21842194]
[153.32481384 -121.06608582]
[165.95544434 -111.17433929]
[165.95275879 -95.13128662]
[153.31880188 -85.24378204]
[150.17584229 -70.57675171]
[147.03286743 -55.90972137]
[143.88990784 -41.24269104]
[140.74694824 -26.57566071]
[137.60398865 -11.90863037]
[139.27099609 -4.72929668]
[134.32986450 2.92048287]
[131.00502014 17.54735565]
[127.68017578 32.17422867]
[124.35533905 46.80110168]
[121.03049469 61.42797470]
[127.46271515 65.28499603]
[140.32714844 72.99903107]
[146.75935364 76.85604858]
[158.09561157 67.03314209]
[163.45822144 52.14848709]
[178.14370728 49.66135788]
[189.47994995 39.83844757]
[200.81619263 30.01553726]
[212.15243530 20.19262505]
[214.72653198 4.35742521]
[228.78195190 -3.37722468]
[243.53657532 2.92203736]
[247.67192078 18.42295647]
[238.01570129 31.23455429]
[221.97535706 31.52886963]
[210.63911438 41.35177994]
[199.30285645 51.17469025]
[187.96661377 60.99760056]
[183.41484070 75.17965698]
[167.91851807 78.36938477]
[156.58227539 88.19229126]
[154.07951355 102.98202515]
[161.55261230 115.98789978]
[176.54542542 120.21323395]
[183.93893433 133.50949097]
[179.81832886 147.77680969]
[187.29144287 160.78268433]
[194.76454163 173.78855896]
[202.23764038 186.79443359]
[209.71073914 199.80030823]
[217.18383789 212.80618286]
[224.65693665 225.81205750]
[232.13003540 238.81793213]
[245.89135742 239.26008606]
[257.54837036 246.38166809]
[264.11782837 258.23504639]
[263.98043823 271.67828369]
[257.27883911 283.20791626]
[264.58987427 296.30557251]
[271.98205566 309.35760498]
[279.45516968 322.36346436]
[286.92825317 335.36935425]
[294.48196411 348.32855225]
[302.11599731 361.24063110]
[309.75000000 374.15270996]
[317.38403320 387.06478882]
[325.01803589 399.97686768]
[340.06216431 404.01571655]
[347.62020874 417.21914673]
[343.67709351 431.53652954]
[351.31109619 444.44860840]
[358.94512939 457.36068726]
[366.57913208 470.27276611]
[374.21316528 483.18484497]
[381.84716797 496.09692383]
[389.56121826 508.96136475]
[397.35498047 521.77764893]
[405.14871216 534.59393311]
[421.05545044 531.38769531]
[437.73419189 537.23370361]
[450.05053711 551.86291504]
[453.48190308 572.15051270]
[464.81814575 581.97338867]
[476.15438843 591.79632568]
[487.49063110 601.61920166]
[502.57336426 597.97363281]
[516.90551758 603.92077637]
[524.97607422 617.17395020]
[523.68176270 632.63690186]
[513.52026367 644.36395264]
[498.39883423 647.84570312]
[484.13204956 641.74340820]
[476.20571899 628.40350342]
[477.66772461 612.95544434]
[466.33148193 603.13256836]
[454.99523926 593.30963135]
[443.65899658 583.48675537]
[437.25082397 587.38360596]
[445.04458618 600.19989014]
[452.83834839 613.01617432]
[460.63211060 625.83245850]
[460.97387695 640.82861328]
[447.81582642 633.62622070]
[440.02206421 620.80993652]
[432.22830200 607.99365234]
[424.43453979 595.17736816]
[418.02639771 599.07427979]
[421.53262329 613.65869141]
[425.03881836 628.24316406]
[428.54501343 642.82763672]
[432.05123901 657.41210938]
[435.55743408 671.99658203]
[447.23577881 683.50952148]
[442.84313965 699.30944824]
[426.89831543 703.14270020]
[415.80392456 691.06597900]
[420.97299194 675.50274658]
[417.46676636 660.91833496]
[413.96057129 646.33386230]
[410.45434570 631.74938965]
[406.94815063 617.16491699]
[403.44192505 602.58044434]
[387.00756836 590.20019531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[6 204]
[7 203]
[8 202]
[9 201]
[10 200]
[11 199]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[20 191]
[21 190]
[22 189]
[24 188]
[25 187]
[29 182]
[30 181]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[39 172]
[40 171]
[47 119]
[48 118]
[49 117]
[50 114]
[51 113]
[52 112]
[53 111]
[54 110]
[55 109]
[57 107]
[58 106]
[61 103]
[62 102]
[63 101]
[66 100]
[67 99]
[68 98]
[69 94]
[70 93]
[71 92]
[72 91]
[73 90]
[75 89]
[76 88]
[77 87]
[122 149]
[123 148]
[124 147]
[125 146]
[126 145]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[152 170]
[153 169]
[155 167]
[156 166]
[157 165]
[158 164]
[211 226]
[212 225]
[213 224]
[214 223]
[236 251]
[237 250]
[238 249]
[239 248]
[240 247]
[241 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
