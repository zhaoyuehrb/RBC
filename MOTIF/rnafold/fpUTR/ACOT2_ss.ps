%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCAAACCUAGGAAGUAGCUUUCCAACAUAAAGUGGAGGUUUCAACACAGGAGACUUUAAGCAAGUUCCAGUGUGUCUAUAUUUGGUCUGGCUGAUCGGCUGGACUCUGGCCUUCCCCGCUCACGUUAGCAGACAGCUCUGCCCUAGUGGGCGCUUAGCCUGCGACGGCAGCCCGAGAGG\
) } def
/len { sequence length } bind def

/coor [
[115.32642365 193.07073975]
[111.11588287 207.91239929]
[99.53462982 218.10446167]
[84.27820587 220.39468384]
[70.21488190 214.05224609]
[61.83220673 201.10102844]
[61.80506516 185.67369080]
[70.14212036 172.69303894]
[84.18304443 166.30117798]
[86.23663330 151.44241333]
[88.29022217 136.58364868]
[72.62660980 113.56016541]
[78.62313080 92.41095734]
[66.94167328 83.00119781]
[55.26021194 73.59143829]
[43.57875443 64.18168640]
[31.89729500 54.77192688]
[25.39488983 53.37056732]
[21.21883965 49.46994400]
[19.98363876 44.83312988]
[8.63207817 35.02792358]
[-2.71948195 25.22271729]
[-17.62619209 23.55238914]
[-30.86637497 30.60204124]
[-44.10655594 37.65169144]
[-57.34673691 44.70134354]
[-70.58692169 51.75099564]
[-72.60424042 67.13637543]
[-83.30399323 78.37447357]
[-98.57191467 81.14401245]
[-112.53716278 74.38003540]
[-119.82983398 60.68344498]
[-117.64572906 45.32085037]
[-106.82469177 34.19948578]
[-91.52762604 31.59574127]
[-77.63657379 38.51081085]
[-64.39639282 31.46116066]
[-51.15620804 24.41151047]
[-37.91602707 17.36185837]
[-24.67584419 10.31220722]
[-24.48273468 2.81469369]
[-39.48186874 2.65366316]
[-54.46942139 2.04270220]
[-54.08391190 -12.95234299]
[-39.08405304 -12.79165363]
[-24.09651566 -12.18033314]
[-23.90340614 -19.67784691]
[-36.76312637 -27.39973831]
[-49.62284470 -35.12163162]
[-62.48256302 -42.84352112]
[-78.29676056 -43.31445312]
[-85.22492981 -56.49966049]
[-98.08464813 -64.22154999]
[-110.94436646 -71.94344330]
[-123.80408478 -79.66533661]
[-132.79676819 -81.40763092]
[-136.81666565 -87.63177490]
[-149.54193115 -95.57328796]
[-162.26721191 -103.51479340]
[-178.15835571 -101.31233978]
[-189.68855286 -112.46734619]
[-188.01281738 -128.42263794]
[-174.41662598 -136.93869019]
[-159.32981873 -131.48271179]
[-154.32569885 -116.24005890]
[-141.60043335 -108.29855347]
[-128.87516785 -100.35704803]
[-116.08219910 -92.52505493]
[-103.22247314 -84.80316162]
[-90.36275482 -77.08126831]
[-77.50303650 -69.35938263]
[-62.60865402 -69.44077301]
[-54.76067352 -55.70324326]
[-41.90095139 -47.98134995]
[-29.04123306 -40.25945663]
[-16.18151474 -32.53756714]
[-9.30913734 -35.54096985]
[-16.89253044 -48.48284531]
[-24.47592354 -61.42472076]
[-34.78994370 -72.31604767]
[-31.80576324 -87.01620483]
[-18.06125069 -93.02356720]
[-5.24531746 -85.22921753]
[-4.25769615 -70.26060486]
[0.08896022 -55.90419006]
[4.43561649 -41.54777908]
[11.30799294 -44.55118179]
[14.37627411 -59.23402023]
[17.44455528 -73.91685486]
[20.51283646 -88.59968567]
[23.58111763 -103.28252411]
[26.64939880 -117.96536255]
[29.71767998 -132.64819336]
[32.78596115 -147.33102417]
[35.85424042 -162.01387024]
[30.22186852 -177.41543579]
[40.94994354 -189.81867981]
[57.00234222 -186.46420288]
[61.86573410 -170.80279541]
[50.53707504 -158.94558716]
[47.46879578 -144.26275635]
[44.40051270 -129.57991028]
[41.33223343 -114.89707947]
[38.26395416 -100.21424103]
[35.19567108 -85.53141022]
[32.12739182 -70.84857178]
[29.05910873 -56.16573715]
[25.99082947 -41.48290253]
[29.54784775 -15.93389606]
[21.46501350 3.92163062]
[7.08572483 13.87115765]
[18.43728447 23.67636490]
[29.78884506 33.48157120]
[41.30705261 43.09046936]
[52.98851013 52.50022507]
[64.66996765 61.90998077]
[76.35142517 71.31974030]
[88.03289032 80.72949219]
[114.87979889 73.32093811]
[138.41189575 100.09404755]
[153.41134644 100.22280121]
[168.41078186 100.35155487]
[183.41023254 100.48030853]
[198.40968323 100.60905457]
[213.40913391 100.73780823]
[228.40858459 100.86656189]
[236.25796509 87.73894501]
[249.53666687 80.35160828]
[264.62985229 80.60100555]
[277.48568726 88.32003021]
[284.70312500 101.34978485]
[299.70254517 101.47853851]
[314.70199585 101.60728455]
[329.70144653 101.73603821]
[344.70089722 101.86479187]
[358.69854736 93.32092285]
[372.96508789 101.40780640]
[372.82434082 117.80635071]
[358.42108154 125.64714050]
[344.57214355 116.86424255]
[329.57269287 116.73548889]
[314.57324219 116.60673523]
[299.57379150 116.47798157]
[284.57437134 116.34922791]
[277.13433838 129.25315857]
[264.14788818 136.75036621]
[249.05264282 136.74063110]
[235.90270996 129.12643433]
[228.27983093 115.86601257]
[213.28038025 115.73725891]
[198.28092957 115.60850525]
[183.28147888 115.47975159]
[168.28202820 115.35099792]
[153.28259277 115.22224426]
[138.28314209 115.09349823]
[130.78314209 128.08387756]
[138.39436340 141.00939941]
[146.00559998 153.93493652]
[161.32603455 155.54440308]
[172.62899780 165.74716187]
[175.72030640 180.47494507]
[169.61956787 194.03662109]
[177.23078918 206.96214294]
[184.84202576 219.88768005]
[192.45324707 232.81320190]
[206.98391724 240.41526794]
[207.39523315 256.80926514]
[193.26406860 265.13043213]
[179.12734985 256.81869507]
[179.52772522 240.42442322]
[171.91648865 227.49890137]
[164.30526733 214.57337952]
[156.69404602 201.64784241]
[141.87539673 200.40461731]
[130.49569702 190.55744934]
[127.05619049 175.72427368]
[133.08006287 161.54615784]
[125.46884155 148.62063599]
[117.85761261 135.69509888]
[103.14898682 138.63723755]
[101.09539032 153.49600220]
[99.04180145 168.35476685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 182]
[10 181]
[11 180]
[13 118]
[14 117]
[15 116]
[16 115]
[17 114]
[20 113]
[21 112]
[22 111]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[47 76]
[48 75]
[49 74]
[50 73]
[52 71]
[53 70]
[54 69]
[55 68]
[57 67]
[58 66]
[59 65]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[120 155]
[121 154]
[122 153]
[123 152]
[124 151]
[125 150]
[126 149]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
[156 179]
[157 178]
[158 177]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
