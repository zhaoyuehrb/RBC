%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCGCGAGCACUGGCGGGUUCUGGGUCCUGUGACCGGUCAGGCGGCGUCAGCGGGCGCGGCGGAGGGCUGGCCGGCCUCGGGGGAGUUUCCGCGGCCGCCGGGGGCGCGGCGGCAGAGCGCGAGGCCGGGCAGGGGGCCAGACUCGGAGUCGAGGCGCGCCCGACAGCCGCAGCGCUC\
) } def
/len { sequence length } bind def

/coor [
[202.08673096 177.76658630]
[189.96824646 166.22454834]
[187.07905579 149.57180786]
[173.52444458 143.14746094]
[159.96983337 136.72309875]
[146.41520691 130.29873657]
[132.86059570 123.87438965]
[119.30597687 117.45002747]
[108.21078491 124.69427490]
[94.98679352 125.53609467]
[83.06257629 119.75722504]
[75.52967834 108.85594177]
[74.34115601 95.65859985]
[60.90007782 88.99995422]
[47.45900345 82.34131622]
[34.01792908 75.68267059]
[20.57685471 69.02402496]
[7.13578129 62.36538315]
[-6.30529308 55.70674133]
[-18.01993179 62.99911118]
[-31.69989204 63.53949738]
[-43.76084518 57.29352951]
[-51.09563446 45.99094009]
[-51.87455368 32.64802933]
[-65.19803619 25.75710487]
[-78.52151489 18.86618233]
[-91.84500122 11.97525978]
[-105.34335327 5.43351316]
[-119.00743103 -0.75462168]
[-132.67150879 -6.94275665]
[-146.33558655 -13.13089180]
[-162.09864807 -11.77584267]
[-170.50045776 -24.07458496]
[-184.16453552 -30.26272011]
[-197.82859802 -36.45085526]
[-211.59802246 -42.40090561]
[-225.46864319 -48.11107635]
[-239.33924866 -53.82124710]
[-253.20986938 -59.53141785]
[-267.08047485 -65.24159241]
[-280.95111084 -70.95175934]
[-294.82171631 -76.66193390]
[-308.69232178 -82.37210083]
[-322.84133911 -87.35260773]
[-337.23040771 -91.58995056]
[-352.65420532 -88.06619263]
[-362.67739868 -99.08367920]
[-377.06643677 -103.32101440]
[-391.45550537 -107.55835724]
[-405.84454346 -111.79570007]
[-420.23361206 -116.03304291]
[-436.03771973 -111.65554047]
[-447.53948975 -123.34490204]
[-442.90689087 -139.07611084]
[-426.90554810 -142.66625977]
[-415.99627686 -130.42210388]
[-401.60720825 -126.18475342]
[-387.21817017 -121.94741821]
[-372.82910156 -117.71007538]
[-358.44003296 -113.47273254]
[-344.04544067 -117.29957581]
[-332.99304199 -105.97901154]
[-318.60400391 -101.74166870]
[-324.64916992 -115.46958923]
[-319.36679077 -129.50869751]
[-305.77160645 -135.84674072]
[-291.62249756 -130.86651611]
[-284.99450684 -117.41030121]
[-289.67028809 -103.15769196]
[-302.98214722 -96.24271393]
[-289.11154175 -90.53254700]
[-275.24093628 -84.82237244]
[-261.37030029 -79.11220551]
[-247.49969482 -73.40203094]
[-233.62908936 -67.69186401]
[-219.75846863 -61.98168945]
[-205.88784790 -56.27151871]
[-201.19050598 -57.26091003]
[-195.82365417 -55.29090881]
[-191.64047241 -50.11493301]
[-177.97639465 -43.92679596]
[-164.31231689 -37.73866272]
[-149.52659607 -39.53632736]
[-140.14744568 -26.79496765]
[-126.48337555 -20.60683250]
[-112.81929779 -14.41869831]
[-99.15522003 -8.23056316]
[-95.72277832 -9.14199734]
[-91.67601013 -8.41929340]
[-87.79559326 -5.79102802]
[-84.95407867 -1.34822285]
[-71.63059235 5.54270029]
[-58.30711365 12.43362331]
[-44.98363113 19.32454681]
[-30.56907082 11.49556828]
[-14.16271210 13.81466389]
[-2.24637461 25.56529427]
[0.35334969 42.26566696]
[13.79442406 48.92430878]
[27.23549843 55.58295441]
[40.67657089 62.24159622]
[54.11764526 68.90023804]
[67.55872345 75.55888367]
[80.99979401 82.21752167]
[95.24870300 74.41387939]
[111.34928894 76.58168030]
[123.02682495 87.87607574]
[125.73033142 103.89541626]
[139.28494263 110.31977081]
[152.83956909 116.74412537]
[166.39418030 123.16847992]
[179.94880676 129.59283447]
[193.50341797 136.01719666]
[205.08972168 128.52259827]
[218.75823975 127.74487305]
[230.92578125 133.78056335]
[238.45564270 144.95414734]
[239.46601868 158.28153992]
[252.90708923 164.94018555]
[266.34817505 171.59881592]
[279.78924561 178.25746155]
[293.23031616 184.91610718]
[306.67138672 191.57475281]
[323.12667847 185.67626953]
[338.46099854 193.34072876]
[343.42065430 209.39788818]
[356.97525024 215.82223511]
[370.52987671 222.24659729]
[384.24713135 228.31591797]
[398.11776733 234.02609253]
[411.98837280 239.73626709]
[425.85897827 245.44642639]
[439.72958374 251.15660095]
[448.28176880 244.69987488]
[458.66665649 242.40733337]
[468.98410034 244.62951660]
[477.37478638 250.89706421]
[482.35549927 260.01794434]
[483.08087158 270.30368042]
[496.63549805 276.72805786]
[510.19012451 283.15240479]
[528.49078369 281.22677612]
[537.91497803 296.01696777]
[551.57904053 302.20510864]
[565.24310303 308.39324951]
[578.90722656 314.58135986]
[595.83001709 315.60784912]
[599.52838135 332.15350342]
[584.65319824 340.28759766]
[572.71905518 328.24545288]
[559.05499268 322.05731201]
[545.39093018 315.86917114]
[531.72680664 309.68103027]
[520.28216553 313.65029907]
[508.83847046 308.58496094]
[503.76577759 296.70703125]
[490.21115112 290.28265381]
[476.65652466 283.85830688]
[458.87185669 291.75354004]
[440.71835327 283.94274902]
[434.01943970 265.02722168]
[420.14880371 259.31704712]
[406.27819824 253.60687256]
[392.40759277 247.89669800]
[378.53695679 242.18653870]
[375.13821411 243.21655273]
[371.06881714 242.63473511]
[367.09951782 240.14271545]
[364.10552979 235.80120850]
[350.55090332 229.37686157]
[336.99627686 222.95249939]
[325.57049561 228.94282532]
[312.58804321 227.22459412]
[302.82785034 218.20387268]
[300.01275635 205.01582336]
[286.57168579 198.35717773]
[273.13061523 191.69853210]
[259.68951416 185.03990173]
[246.24845886 178.38125610]
[232.80737305 171.72261047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 113]
[4 112]
[5 111]
[6 110]
[7 109]
[8 108]
[13 104]
[14 103]
[15 102]
[16 101]
[17 100]
[18 99]
[19 98]
[24 94]
[25 93]
[26 92]
[27 91]
[28 87]
[29 86]
[30 85]
[31 84]
[33 82]
[34 81]
[35 80]
[36 77]
[37 76]
[38 75]
[39 74]
[40 73]
[41 72]
[42 71]
[43 70]
[44 63]
[45 62]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[118 180]
[119 179]
[120 178]
[121 177]
[122 176]
[123 175]
[126 171]
[127 170]
[128 169]
[129 165]
[130 164]
[131 163]
[132 162]
[133 161]
[139 158]
[140 157]
[141 156]
[143 153]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
