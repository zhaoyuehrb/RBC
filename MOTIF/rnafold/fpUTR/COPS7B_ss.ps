%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGUGGGAGGCUUCCGGGGGAGCUGCACGGGCGACGGGUCGGCGGAGACAGAAAAGCGCCGGACGCCGGGGUGAUCAUGGACGCUUGACAACCUGCGGGCAGGCGCCGGGAGGCCGAGCCAGCGACUAAGAGGACCGAGAGGUGGCGUGGACAGAUUUCAAGGCCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[64.69406128 75.02710724]
[54.13571930 64.37246704]
[43.48107529 53.81412506]
[32.73100281 43.35296249]
[17.44473648 39.27367020]
[13.71954155 24.85243034]
[2.96947050 14.39126587]
[-7.78060102 3.93010139]
[-25.24768829 4.49809313]
[-37.49294662 -7.49354219]
[-37.29811096 -24.29411316]
[-48.23637009 -34.55834579]
[-59.17462540 -44.82258224]
[-70.11288452 -55.08681488]
[-81.05113983 -65.35105133]
[-91.98940277 -75.61528778]
[-102.92765808 -85.87952423]
[-118.28547668 -89.68056488]
[-122.27192688 -104.03178406]
[-133.21018982 -114.29601288]
[-146.53918457 -110.70630646]
[-159.79389954 -114.15312958]
[-169.53033447 -123.63013458]
[-173.27357483 -136.57876587]
[-170.14631653 -149.57836914]
[-180.89639282 -160.03953552]
[-191.64646912 -170.50070190]
[-202.39653015 -180.96186829]
[-214.06759644 -178.48455811]
[-225.36494446 -181.92971802]
[-233.50041199 -190.32562256]
[-236.52514648 -201.49406433]
[-233.79571533 -212.61471558]
[-244.15884399 -223.45932007]
[-254.52197266 -234.30393982]
[-269.40615845 -230.78140259]
[-283.95901489 -235.15309143]
[-294.30096436 -246.14900208]
[-297.72750854 -260.74746704]
[-293.41589355 -275.00491333]
[-303.77902222 -285.84954834]
[-314.14215088 -296.69415283]
[-324.50527954 -307.53875732]
[-334.96643066 -318.28881836]
[-345.52478027 -328.94348145]
[-356.08312988 -339.59811401]
[-367.79724121 -337.33312988]
[-379.03018188 -340.98287964]
[-387.01184082 -349.52514648]
[-389.83328247 -360.74667358]
[-386.90237427 -371.81591797]
[-397.06686401 -382.84692383]
[-411.65322876 -378.48809814]
[-426.62463379 -380.88482666]
[-439.02001953 -389.50888062]
[-446.41146851 -402.60574341]
[-447.37954712 -417.55139160]
[-441.78570557 -431.37796021]
[-451.95019531 -442.40896606]
[-466.99166870 -447.31457520]
[-469.92608643 -461.91723633]
[-480.09057617 -472.94824219]
[-490.25506592 -483.97924805]
[-500.41955566 -495.01025391]
[-515.59918213 -502.56115723]
[-512.54547119 -519.23785400]
[-495.67520142 -520.92004395]
[-489.38854980 -505.17474365]
[-479.22406006 -494.14373779]
[-469.05957031 -483.11276245]
[-458.89508057 -472.08175659]
[-444.58062744 -467.96514893]
[-440.91918945 -452.57345581]
[-430.75469971 -441.54244995]
[-416.51763916 -445.98901367]
[-401.70089722 -443.80419922]
[-389.25109863 -435.36834717]
[-381.66763306 -422.31036377]
[-380.50094604 -407.19329834]
[-386.03585815 -393.01141357]
[-375.87136841 -381.98040771]
[-357.59497070 -382.35867310]
[-344.59753418 -369.05535889]
[-345.42846680 -350.15646362]
[-334.87014771 -339.50183105]
[-324.31179810 -328.84716797]
[-317.34515381 -326.30023193]
[-313.66067505 -317.90188599]
[-303.29754639 -307.05728149]
[-292.93441772 -296.21267700]
[-282.57128906 -285.36804199]
[-268.13284302 -289.02816772]
[-253.70492554 -284.94262695]
[-243.18969727 -274.11230469]
[-239.48297119 -259.37603760]
[-243.67736816 -244.66706848]
[-233.31423950 -233.82244873]
[-222.95111084 -222.97784424]
[-204.68461609 -223.68792725]
[-191.44772339 -210.62281799]
[-191.93536377 -191.71194458]
[-181.18530273 -181.25077820]
[-170.43522644 -170.78961182]
[-159.68515015 -160.32844543]
[-143.62316895 -163.63798523]
[-128.59757996 -156.66348267]
[-120.59909821 -141.96781921]
[-122.94595337 -125.23427582]
[-112.00769043 -114.97003937]
[-97.43225098 -111.90316772]
[-92.66342163 -96.81777954]
[-81.72516632 -86.55354309]
[-70.78691101 -76.28930664]
[-59.84864807 -66.02507782]
[-48.91039276 -55.76084137]
[-37.97213364 -45.49660492]
[-27.03387642 -35.23237228]
[-14.31783104 -37.43835068]
[-2.48116279 -31.82374382]
[4.04673338 -20.24102402]
[2.68056369 -6.81997013]
[13.43063545 3.64119434]
[24.18070602 14.10235882]
[38.69805527 17.43339539]
[43.19216919 32.60289001]
[53.94223785 43.06405258]
[60.95397186 45.48408508]
[64.79036713 53.81412506]
[75.34870148 64.46877289]
[88.47397614 57.54637909]
[103.41156769 55.39466858]
[118.45285034 58.43087387]
[131.81979370 66.46886444]
[141.87500000 78.72165680]
[147.32162476 93.87600708]
[147.36885071 110.23229218]
[161.24003601 115.94107056]
[175.11122131 121.64984894]
[191.28448486 118.93732452]
[201.51008606 131.75798035]
[195.26881409 146.92301941]
[178.98114014 148.83195496]
[169.40245056 135.52104187]
[155.53126526 129.81225586]
[141.66006470 124.10347748]
[132.21673584 135.75781250]
[140.67724609 148.14408875]
[149.13777161 160.53034973]
[165.90711975 168.09753418]
[166.58993530 185.61801147]
[175.27395630 197.84860229]
[183.95799255 210.07920837]
[192.64202881 222.30979919]
[208.15524292 226.39881897]
[214.49855042 241.13456726]
[206.80592346 255.21301270]
[190.97846985 257.83441162]
[179.15768433 246.98782349]
[180.41143799 230.99383545]
[171.72740173 218.76324463]
[163.04336548 206.53263855]
[154.35932922 194.30204773]
[142.46871948 191.96070862]
[135.13771057 181.81121826]
[136.75149536 168.99085999]
[128.29098511 156.60459900]
[119.83046722 144.21832275]
[102.33748627 147.65895081]
[85.06561279 144.53366089]
[70.35725403 135.47032166]
[60.13248444 121.88792419]
[55.63907623 105.77779388]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 129]
[2 128]
[3 126]
[4 125]
[6 123]
[7 122]
[8 121]
[11 117]
[12 116]
[13 115]
[14 114]
[15 113]
[16 112]
[17 111]
[19 109]
[20 108]
[25 104]
[26 103]
[27 102]
[28 101]
[33 98]
[34 97]
[35 96]
[40 91]
[41 90]
[42 89]
[43 88]
[44 86]
[45 85]
[46 84]
[51 81]
[52 80]
[58 74]
[59 73]
[61 71]
[62 70]
[63 69]
[64 68]
[136 145]
[137 144]
[138 143]
[146 167]
[147 166]
[148 165]
[150 162]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
