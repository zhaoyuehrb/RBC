%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MUC6)
} def

/sequence { (\
GGCAGCAGCAGGCCUGCCGGGCCCAGCGCGAGCUCCUCUCCACUGUGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.026010138 ubox
1 18 0.880703085 ubox
1 23 0.083332596 ubox
1 24 0.013930815 ubox
1 34 0.139548780 ubox
1 35 0.045296501 ubox
1 36 0.147561582 ubox
1 37 0.018105159 ubox
1 38 0.011286420 ubox
1 39 0.005560324 ubox
1 40 0.005359500 ubox
1 41 0.032221498 ubox
1 44 0.003630944 ubox
1 51 0.080783476 ubox
2 9 0.097618472 ubox
2 13 0.026055037 ubox
2 17 0.881376094 ubox
2 22 0.083974516 ubox
2 23 0.009527138 ubox
2 29 0.025234610 ubox
2 33 0.166944497 ubox
2 34 0.006222650 ubox
2 35 0.147469634 ubox
2 36 0.022254001 ubox
2 37 0.005553575 ubox
2 38 0.006594860 ubox
2 39 0.004314501 ubox
2 40 0.031871353 ubox
2 43 0.003773480 ubox
2 46 0.134391022 ubox
2 48 0.343551318 ubox
2 50 0.080630043 ubox
3 8 0.097614375 ubox
3 12 0.026049591 ubox
3 16 0.881367471 ubox
3 21 0.084307087 ubox
3 28 0.025185017 ubox
3 32 0.167207250 ubox
3 45 0.139087230 ubox
3 47 0.343601379 ubox
4 15 0.879222762 ubox
4 34 0.148132997 ubox
4 37 0.015630384 ubox
4 39 0.019720568 ubox
4 44 0.139211572 ubox
4 46 0.279538430 ubox
5 13 0.523885734 ubox
5 14 0.707807757 ubox
5 17 0.083540581 ubox
5 22 0.003891508 ubox
5 27 0.025186684 ubox
5 29 0.184612703 ubox
5 33 0.148986373 ubox
5 36 0.016161777 ubox
5 38 0.019370107 ubox
5 43 0.138585554 ubox
5 46 0.209657770 ubox
5 48 0.065637618 ubox
6 12 0.738209958 ubox
6 16 0.083712164 ubox
6 21 0.003906890 ubox
6 26 0.025175838 ubox
6 28 0.184202403 ubox
6 32 0.148691994 ubox
6 45 0.343198583 ubox
6 47 0.065610540 ubox
7 15 0.083723993 ubox
7 34 0.020419369 ubox
7 37 0.010666309 ubox
7 39 0.127738570 ubox
7 44 0.343296033 ubox
7 46 0.054515325 ubox
8 14 0.083219153 ubox
8 17 0.022217165 ubox
8 27 0.195880417 ubox
8 29 0.139728357 ubox
8 33 0.020905511 ubox
8 36 0.010566008 ubox
8 38 0.129880360 ubox
8 43 0.340934166 ubox
8 46 0.034865810 ubox
8 48 0.018050861 ubox
9 16 0.022297825 ubox
9 26 0.196092868 ubox
9 28 0.139530045 ubox
9 32 0.020912912 ubox
9 45 0.058580051 ubox
9 47 0.018065426 ubox
10 15 0.020093882 ubox
10 37 0.181702962 ubox
10 39 0.197387441 ubox
10 44 0.056816377 ubox
10 46 0.016214324 ubox
11 18 0.008084478 ubox
11 23 0.349052486 ubox
11 24 0.055326785 ubox
11 34 0.004438574 ubox
11 35 0.003499146 ubox
11 36 0.185166803 ubox
11 37 0.013902954 ubox
11 38 0.199105801 ubox
11 39 0.042291236 ubox
11 40 0.063521670 ubox
11 41 0.074999620 ubox
11 43 0.045697829 ubox
12 17 0.008081822 ubox
12 22 0.353396865 ubox
12 23 0.039595157 ubox
12 29 0.020586675 ubox
12 33 0.005851449 ubox
12 34 0.003270578 ubox
12 35 0.184987329 ubox
12 36 0.034116286 ubox
12 37 0.181869240 ubox
12 38 0.055291342 ubox
12 39 0.049086841 ubox
12 40 0.074995245 ubox
13 20 0.011795917 ubox
13 21 0.355363537 ubox
13 28 0.020581623 ubox
13 32 0.005801407 ubox
14 19 0.015854867 ubox
14 20 0.355093475 ubox
14 21 0.007747263 ubox
14 26 0.020341235 ubox
14 32 0.008526930 ubox
15 19 0.319898349 ubox
15 20 0.008232244 ubox
15 25 0.020298062 ubox
15 30 0.004561492 ubox
15 31 0.008112872 ubox
15 42 0.011772748 ubox
15 49 0.011438431 ubox
16 22 0.004442766 ubox
16 24 0.019886101 ubox
16 27 0.003417866 ubox
16 29 0.004964457 ubox
16 33 0.295516217 ubox
16 41 0.011915517 ubox
16 48 0.012901529 ubox
17 21 0.004806584 ubox
17 26 0.003428975 ubox
17 28 0.004242765 ubox
17 32 0.295629889 ubox
17 47 0.012898700 ubox
18 28 0.004335987 ubox
18 30 0.295901321 ubox
18 45 0.012428437 ubox
19 27 0.005219471 ubox
19 29 0.297163071 ubox
19 35 0.023835434 ubox
19 36 0.033301950 ubox
19 37 0.066927035 ubox
19 38 0.081274120 ubox
19 39 0.014828277 ubox
19 40 0.079011362 ubox
19 41 0.114589076 ubox
19 44 0.011306410 ubox
19 51 0.817698392 ubox
20 34 0.024086778 ubox
20 35 0.033269922 ubox
20 36 0.075156121 ubox
20 37 0.078363677 ubox
20 38 0.016301528 ubox
20 39 0.079741632 ubox
20 40 0.114543566 ubox
20 41 0.023567260 ubox
20 43 0.010861705 ubox
20 50 0.822959118 ubox
20 51 0.033179399 ubox
21 27 0.297206430 ubox
21 29 0.012298834 ubox
21 33 0.028565330 ubox
21 34 0.015487900 ubox
21 35 0.075200641 ubox
21 36 0.078732879 ubox
21 37 0.013896269 ubox
21 38 0.097642249 ubox
21 39 0.091914918 ubox
21 40 0.023623412 ubox
21 48 0.847278001 ubox
21 50 0.032818521 ubox
22 26 0.295075231 ubox
22 28 0.012318911 ubox
22 32 0.028568496 ubox
22 47 0.847077379 ubox
24 45 0.846748428 ubox
24 47 0.011573766 ubox
25 34 0.274437533 ubox
25 37 0.003542699 ubox
25 44 0.847222564 ubox
25 46 0.010975802 ubox
26 33 0.289580744 ubox
26 43 0.843750177 ubox
26 46 0.034445272 ubox
26 48 0.203585643 ubox
27 32 0.289789356 ubox
27 45 0.035250296 ubox
27 47 0.203814017 ubox
28 44 0.033930356 ubox
28 46 0.203779423 ubox
28 48 0.012777711 ubox
29 45 0.203711049 ubox
29 47 0.012784518 ubox
30 38 0.533568428 ubox
30 40 0.678815963 ubox
30 44 0.098671344 ubox
30 46 0.009404971 ubox
31 37 0.533977910 ubox
31 39 0.680682233 ubox
31 44 0.078071991 ubox
32 36 0.522358537 ubox
32 38 0.674042444 ubox
32 43 0.089524760 ubox
32 46 0.006889375 ubox
32 48 0.027133871 ubox
33 45 0.007628585 ubox
33 47 0.027153925 ubox
41 47 0.026997718 ubox
42 46 0.022120905 ubox
1 18 0.9500000 lbox
2 17 0.9500000 lbox
3 16 0.9500000 lbox
4 15 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
showpage
end
%%EOF
