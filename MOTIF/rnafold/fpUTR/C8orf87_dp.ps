%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C8orf87)
} def

/sequence { (\
AUCAAAGCAACAAGAAGCUAGGGCAGAGGAUUUAGAGGGCAAGCAAGCAUGGGCCAGGACUUUGACAGCAUUCAUCCAGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.006564644 ubox
1 75 0.004952071 ubox
2 15 0.089667058 ubox
2 22 0.077261169 ubox
2 23 0.167497451 ubox
2 27 0.013881930 ubox
2 30 0.007693128 ubox
2 65 0.040039997 ubox
2 74 0.005607264 ubox
3 14 0.095770238 ubox
3 21 0.107123698 ubox
3 22 0.388687440 ubox
3 26 0.014676796 ubox
3 29 0.007878560 ubox
3 51 0.003614265 ubox
3 64 0.043810792 ubox
4 50 0.003385657 ubox
4 63 0.043761638 ubox
4 72 0.011792647 ubox
5 62 0.043600510 ubox
5 71 0.012629688 ubox
5 72 0.008074567 ubox
6 19 0.555069161 ubox
6 61 0.043209313 ubox
6 71 0.008828986 ubox
7 18 0.568791805 ubox
7 24 0.024176829 ubox
7 40 0.012802458 ubox
7 44 0.008932431 ubox
7 48 0.004066285 ubox
7 54 0.005513906 ubox
7 60 0.042808157 ubox
7 69 0.044131957 ubox
7 80 0.513514302 ubox
7 83 0.053477928 ubox
8 17 0.568796783 ubox
8 23 0.024188902 ubox
8 39 0.012813740 ubox
8 43 0.008928547 ubox
8 47 0.004064697 ubox
8 53 0.005573267 ubox
8 68 0.044113105 ubox
8 79 0.513308465 ubox
8 82 0.053850100 ubox
11 51 0.004290564 ubox
11 64 0.010918583 ubox
12 50 0.004084746 ubox
12 63 0.010043697 ubox
12 72 0.005381724 ubox
13 19 0.017204126 ubox
13 33 0.006605454 ubox
13 62 0.008320852 ubox
13 63 0.009958826 ubox
13 71 0.005767937 ubox
13 72 0.006007229 ubox
14 18 0.017379549 ubox
14 32 0.007338999 ubox
14 33 0.010860043 ubox
14 61 0.005516173 ubox
14 62 0.010036695 ubox
14 63 0.042716122 ubox
14 71 0.006033481 ubox
14 72 0.053813805 ubox
14 73 0.561773865 ubox
14 76 0.010986945 ubox
15 31 0.007353068 ubox
15 32 0.011255753 ubox
15 33 0.004701922 ubox
15 61 0.009696803 ubox
15 62 0.043681161 ubox
15 71 0.058661152 ubox
15 72 0.562191375 ubox
15 75 0.010561638 ubox
16 31 0.009281876 ubox
16 32 0.004878877 ubox
16 61 0.044221324 ubox
16 71 0.554829646 ubox
16 72 0.005336155 ubox
17 24 0.052599115 ubox
17 31 0.004841794 ubox
17 40 0.008729337 ubox
17 44 0.016284982 ubox
17 48 0.007763145 ubox
17 54 0.008663364 ubox
17 60 0.044403024 ubox
17 69 0.569450459 ubox
17 80 0.557303773 ubox
17 83 0.147319631 ubox
18 23 0.052493650 ubox
18 26 0.008415745 ubox
18 28 0.009179949 ubox
18 29 0.013719940 ubox
18 35 0.053649911 ubox
18 39 0.008697001 ubox
18 43 0.016300074 ubox
18 47 0.007771724 ubox
18 53 0.008664311 ubox
18 57 0.005844142 ubox
18 58 0.043229116 ubox
18 68 0.570212525 ubox
18 79 0.557868941 ubox
18 82 0.148574935 ubox
19 25 0.008245382 ubox
19 27 0.009079338 ubox
19 28 0.013668606 ubox
19 34 0.054029793 ubox
19 38 0.008404621 ubox
19 42 0.015634659 ubox
19 46 0.007471159 ubox
19 52 0.008572003 ubox
19 56 0.005541394 ubox
19 57 0.042695516 ubox
19 64 0.005330273 ubox
19 67 0.552923487 ubox
19 78 0.550944608 ubox
19 81 0.144059384 ubox
20 33 0.054166445 ubox
20 61 0.003479286 ubox
20 62 0.005903302 ubox
20 63 0.010143436 ubox
20 72 0.004070413 ubox
21 32 0.053800062 ubox
21 55 0.006352351 ubox
21 60 0.003514420 ubox
21 61 0.006109379 ubox
21 62 0.010382372 ubox
21 71 0.003830112 ubox
21 73 0.006857331 ubox
21 76 0.074976867 ubox
21 77 0.543790566 ubox
22 31 0.053035778 ubox
22 33 0.003247773 ubox
22 54 0.005860817 ubox
22 55 0.056494419 ubox
22 60 0.006113029 ubox
22 61 0.010477939 ubox
22 72 0.006488860 ubox
22 73 0.006375755 ubox
22 75 0.073166735 ubox
22 76 0.543032937 ubox
22 77 0.227411627 ubox
23 32 0.003447524 ubox
23 40 0.023050267 ubox
23 44 0.012478895 ubox
23 48 0.009540184 ubox
23 54 0.056607428 ubox
23 60 0.010471562 ubox
23 69 0.026026059 ubox
23 71 0.006018293 ubox
23 72 0.006624908 ubox
23 75 0.501019452 ubox
23 76 0.229407396 ubox
23 80 0.464080617 ubox
23 83 0.102213429 ubox
24 39 0.023054745 ubox
24 43 0.012486925 ubox
24 47 0.009537028 ubox
24 51 0.003850636 ubox
24 53 0.056623240 ubox
24 64 0.595037996 ubox
24 68 0.025439287 ubox
24 79 0.464678823 ubox
24 82 0.103899214 ubox
25 32 0.005025196 ubox
25 33 0.010422045 ubox
25 50 0.004067160 ubox
25 61 0.003822429 ubox
25 63 0.595091985 ubox
25 72 0.040151212 ubox
26 31 0.003821354 ubox
26 32 0.011610556 ubox
26 33 0.012081012 ubox
26 60 0.003975870 ubox
26 62 0.594953121 ubox
26 63 0.032502926 ubox
26 71 0.039755035 ubox
26 72 0.151721497 ubox
26 73 0.501784567 ubox
26 76 0.153521976 ubox
27 31 0.010102886 ubox
27 32 0.011650175 ubox
27 33 0.006370539 ubox
27 61 0.595286439 ubox
27 62 0.037024413 ubox
27 71 0.157277040 ubox
27 72 0.501276057 ubox
27 75 0.153930337 ubox
28 32 0.004685589 ubox
28 55 0.019374425 ubox
28 60 0.594615306 ubox
28 61 0.039439933 ubox
28 62 0.003166833 ubox
28 63 0.010943986 ubox
28 71 0.488033140 ubox
28 72 0.007575803 ubox
28 73 0.222780486 ubox
28 77 0.512612792 ubox
29 54 0.019708909 ubox
29 60 0.045473229 ubox
29 62 0.012154666 ubox
29 63 0.011067183 ubox
29 71 0.010352331 ubox
29 72 0.225152189 ubox
29 73 0.025760449 ubox
29 76 0.512963390 ubox
30 50 0.008418712 ubox
30 61 0.012127155 ubox
30 62 0.011024765 ubox
30 71 0.226191999 ubox
30 72 0.023891521 ubox
30 75 0.512241824 ubox
31 37 0.007984489 ubox
31 38 0.004261578 ubox
31 42 0.003942560 ubox
31 43 0.003236268 ubox
31 46 0.008714675 ubox
31 47 0.005217215 ubox
31 49 0.008319746 ubox
31 52 0.005276401 ubox
31 53 0.015671234 ubox
31 57 0.440362946 ubox
31 58 0.139343155 ubox
31 59 0.093334165 ubox
31 65 0.029869263 ubox
31 68 0.083320774 ubox
31 70 0.224008162 ubox
31 74 0.502685843 ubox
32 36 0.008323950 ubox
32 37 0.008996405 ubox
32 38 0.004597647 ubox
32 39 0.003673115 ubox
32 41 0.004229262 ubox
32 42 0.004551292 ubox
32 43 0.003854861 ubox
32 45 0.008005333 ubox
32 46 0.005860504 ubox
32 51 0.006421886 ubox
32 52 0.016966836 ubox
32 53 0.012223344 ubox
32 56 0.424690161 ubox
32 57 0.154408023 ubox
32 58 0.098528977 ubox
32 59 0.148912792 ubox
32 64 0.025077361 ubox
32 65 0.687886693 ubox
32 67 0.054976229 ubox
32 68 0.028759387 ubox
33 37 0.007208173 ubox
33 38 0.005382290 ubox
33 41 0.004631651 ubox
33 42 0.005075958 ubox
33 45 0.005640624 ubox
33 51 0.017133406 ubox
33 52 0.016281824 ubox
33 56 0.155014824 ubox
33 57 0.072149112 ubox
33 58 0.150363102 ubox
33 64 0.709868749 ubox
33 67 0.019861196 ubox
34 50 0.014257298 ubox
34 61 0.025693328 ubox
34 62 0.005283856 ubox
34 63 0.712773562 ubox
34 72 0.010928852 ubox
35 60 0.026880934 ubox
35 61 0.004680905 ubox
35 62 0.714223833 ubox
35 63 0.088973569 ubox
35 71 0.010174168 ubox
35 72 0.036214220 ubox
35 73 0.315415220 ubox
35 76 0.005384397 ubox
36 61 0.714738890 ubox
36 62 0.090189600 ubox
36 63 0.022241199 ubox
36 71 0.036387421 ubox
36 72 0.314778852 ubox
36 75 0.005337826 ubox
37 55 0.126024060 ubox
37 60 0.713955520 ubox
37 61 0.090553862 ubox
37 62 0.022797939 ubox
37 71 0.249031673 ubox
37 72 0.006277702 ubox
37 73 0.034246337 ubox
37 77 0.013874674 ubox
38 54 0.122099633 ubox
38 55 0.787509031 ubox
38 60 0.090283164 ubox
38 61 0.022491522 ubox
38 71 0.009965048 ubox
38 72 0.033547308 ubox
38 73 0.013987501 ubox
38 76 0.013875739 ubox
38 77 0.004685000 ubox
39 48 0.271572867 ubox
39 54 0.788595193 ubox
39 60 0.022522225 ubox
39 69 0.316196631 ubox
39 71 0.031489165 ubox
39 72 0.012429994 ubox
39 75 0.012571351 ubox
39 76 0.004688984 ubox
39 80 0.005721174 ubox
39 83 0.004511395 ubox
40 47 0.271488986 ubox
40 51 0.083773612 ubox
40 53 0.787623652 ubox
40 64 0.017636388 ubox
40 68 0.316069565 ubox
40 79 0.005722056 ubox
40 82 0.004557660 ubox
41 50 0.092161691 ubox
41 62 0.034987137 ubox
41 63 0.018210789 ubox
41 72 0.010959157 ubox
42 61 0.035916122 ubox
42 62 0.016889286 ubox
42 71 0.012665932 ubox
43 54 0.424183288 ubox
43 60 0.036219163 ubox
43 61 0.012543289 ubox
43 69 0.051624326 ubox
43 80 0.006956846 ubox
43 83 0.022706725 ubox
44 51 0.553288213 ubox
44 53 0.424690196 ubox
44 64 0.296206978 ubox
44 68 0.051736753 ubox
44 79 0.006956962 ubox
44 82 0.022874580 ubox
45 50 0.483632195 ubox
45 62 0.071708598 ubox
45 63 0.288440964 ubox
46 61 0.097182076 ubox
46 62 0.273734381 ubox
46 63 0.012709295 ubox
47 54 0.154835852 ubox
47 60 0.115443384 ubox
47 61 0.165482152 ubox
47 62 0.013151249 ubox
47 69 0.007142970 ubox
47 80 0.038808502 ubox
47 83 0.006636817 ubox
48 53 0.155456980 ubox
48 64 0.086522057 ubox
48 68 0.007153986 ubox
48 79 0.038795979 ubox
48 82 0.006674735 ubox
49 63 0.086099875 ubox
49 71 0.008586380 ubox
49 75 0.004959486 ubox
50 56 0.138808230 ubox
50 67 0.013617871 ubox
50 70 0.009467308 ubox
50 74 0.005646049 ubox
50 78 0.039513425 ubox
50 81 0.004800741 ubox
51 55 0.137585705 ubox
51 61 0.147256729 ubox
51 62 0.039333440 ubox
51 66 0.013832551 ubox
51 69 0.009696380 ubox
51 73 0.006256098 ubox
51 77 0.039888481 ubox
51 80 0.004713829 ubox
52 60 0.159861462 ubox
52 61 0.062531072 ubox
52 72 0.005266248 ubox
52 76 0.039869036 ubox
53 60 0.065798747 ubox
53 69 0.014086889 ubox
53 75 0.036691185 ubox
53 80 0.024451239 ubox
53 83 0.003727778 ubox
54 68 0.014132380 ubox
54 79 0.024464122 ubox
54 82 0.003766714 ubox
55 64 0.065670311 ubox
56 62 0.004576495 ubox
56 63 0.064361992 ubox
56 72 0.010415206 ubox
57 61 0.004168863 ubox
57 62 0.052305250 ubox
57 63 0.003883200 ubox
57 71 0.011318258 ubox
57 73 0.033966037 ubox
57 77 0.086431495 ubox
58 62 0.003365058 ubox
58 72 0.033618754 ubox
58 73 0.018079570 ubox
58 76 0.086520601 ubox
59 71 0.031945203 ubox
59 72 0.017645718 ubox
59 75 0.085580502 ubox
60 68 0.027726738 ubox
60 79 0.003624671 ubox
61 67 0.026750735 ubox
61 68 0.005853309 ubox
61 78 0.003543106 ubox
62 67 0.005741072 ubox
62 68 0.007134032 ubox
63 67 0.006114544 ubox
63 70 0.049578973 ubox
63 74 0.083643855 ubox
64 69 0.051197035 ubox
64 72 0.004378028 ubox
64 73 0.091589287 ubox
65 71 0.006108242 ubox
65 72 0.085770928 ubox
68 80 0.084854701 ubox
68 83 0.023225854 ubox
69 79 0.084878690 ubox
69 82 0.023407508 ubox
71 79 0.003699608 ubox
72 78 0.005257871 ubox
72 81 0.003654756 ubox
7 80 0.9500000 lbox
8 79 0.9500000 lbox
14 73 0.9500000 lbox
15 72 0.9500000 lbox
16 71 0.9500000 lbox
17 69 0.9500000 lbox
18 68 0.9500000 lbox
19 67 0.9500000 lbox
24 64 0.9500000 lbox
25 63 0.9500000 lbox
26 62 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
38 55 0.9500000 lbox
39 54 0.9500000 lbox
40 53 0.9500000 lbox
showpage
end
%%EOF
