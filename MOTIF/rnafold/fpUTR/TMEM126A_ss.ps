%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCUCCGUCCCGCAGUCCAAUUAGCAGCCGCGACCCGGCGCCCGCCCACGCCGCGUCACGAGUCAGCCAAAGAUGGCUGCGCCCAGGUAAUUUGAGCAAAGGCCACAGUGAACUCCGGCGUGGCUGAGGAAGGAGGAGGCACCCACAGGCUGCUGGGAGGAGAGCAUAAGGCUCAAA\
) } def
/len { sequence length } bind def

/coor [
[89.28742218 312.44848633]
[94.26799011 298.29949951]
[106.53636932 289.66891479]
[121.53607941 289.76214600]
[133.69616699 298.54446411]
[130.56031799 283.87591553]
[127.42448425 269.20733643]
[122.93831635 263.30642700]
[124.36470795 254.25392151]
[121.48678589 239.53259277]
[118.60885620 224.81126404]
[115.73093414 210.08993530]
[112.72393036 195.39442444]
[109.58808899 180.72587585]
[106.45225525 166.05731201]
[103.31641388 151.38876343]
[100.18057251 136.72021484]
[97.04473114 122.05165100]
[90.40145874 118.57071686]
[91.01565552 133.55813599]
[78.34332275 141.58383179]
[65.05664825 134.62219238]
[64.44217682 119.63478851]
[77.11491394 111.60883331]
[70.47164154 108.12789154]
[56.62607956 113.89853668]
[49.88483810 120.10645294]
[42.48653030 119.64659119]
[28.54182053 125.17335510]
[14.59711266 130.70011902]
[0.65240461 136.22688293]
[-7.00808334 150.32286072]
[-22.82950211 152.98034668]
[-34.67501068 142.16076660]
[-33.45775223 126.16396332]
[-20.11150169 117.26131439]
[-4.87435865 122.28217316]
[9.07034969 116.75541687]
[23.01505661 111.22865295]
[36.95976639 105.70188904]
[50.85543823 100.05296326]
[64.70100403 94.28232574]
[72.80054474 81.65705872]
[72.27413177 66.66629791]
[62.15032196 51.30091095]
[70.94960022 36.13168335]
[70.16017914 21.15247154]
[69.23934174 6.18076277]
[68.18715668 -8.78228855]
[64.45415497 -17.15171623]
[67.25016022 -24.01675987]
[66.46073914 -38.99597168]
[65.67131805 -53.97518539]
[64.88189697 -68.95439911]
[64.09247589 -83.93360901]
[63.30305481 -98.91282654]
[62.51363373 -113.89203644]
[61.72421265 -128.87124634]
[52.66554260 -138.07962036]
[52.33179855 -150.59112549]
[60.35600281 -159.66744995]
[59.82958984 -174.65821838]
[59.30317307 -189.64897156]
[58.77675629 -204.63973999]
[47.49820328 -215.38366699]
[47.17789459 -230.59393311]
[57.49009323 -241.28009033]
[56.96367645 -256.27084351]
[48.19769669 -260.57907104]
[41.65440750 -267.75253296]
[38.20949554 -276.76818848]
[38.30085754 -286.36111450]
[41.87339020 -295.20193481]
[48.39249420 -302.08093262]
[56.92364120 -306.07373047]
[57.45005798 -321.06448364]
[57.97647095 -336.05523682]
[58.50288773 -351.04602051]
[59.02930450 -366.03677368]
[46.87279892 -378.59674072]
[47.53356552 -395.72607422]
[60.11644745 -406.86471558]
[60.37969589 -421.86239624]
[52.88578033 -435.79623413]
[60.84524918 -448.38577271]
[61.10849762 -463.38345337]
[61.37174606 -478.38116455]
[51.30769348 -490.87490845]
[54.94137192 -506.50103760]
[69.48533630 -513.27252197]
[83.78269958 -505.99481201]
[86.86575317 -490.25079346]
[76.36943817 -478.11788940]
[76.10618591 -463.12020874]
[75.84294128 -448.12252808]
[83.35569000 -435.26141357]
[75.37738800 -421.59915161]
[75.11413574 -406.60147095]
[85.28383636 -398.66159058]
[89.07144165 -386.12432861]
[84.87619781 -373.51211548]
[74.02006531 -365.51034546]
[73.49365234 -350.51959229]
[72.96723175 -335.52883911]
[72.44081879 -320.53808594]
[71.91439819 -305.54730225]
[87.07161713 -291.87060547]
[87.27131653 -271.16375732]
[71.95443726 -256.79727173]
[72.48085022 -241.80650330]
[83.51724243 -231.87002563]
[84.26464844 -216.67475891]
[73.76751709 -205.16615295]
[74.29393005 -190.17539978]
[74.82035065 -175.18463135]
[75.34676361 -160.19387817]
[85.44163513 -145.85420227]
[76.70342255 -129.66067505]
[77.49284363 -114.68145752]
[78.28226471 -99.70224762]
[79.07168579 -84.72303009]
[79.86110687 -69.74382019]
[80.65052795 -54.76460648]
[81.43994904 -39.78539276]
[82.22937012 -24.80618095]
[83.15020752 -9.83447170]
[84.20239258 5.12857962]
[87.81861115 11.59923840]
[85.13938904 20.36305046]
[85.92881012 35.34226227]
[94.71760559 43.68041611]
[95.48166656 56.17303467]
[87.26489258 66.13988495]
[87.79130554 81.13064575]
[108.66136932 69.98588562]
[136.28379822 83.15541840]
[150.92427063 86.41986084]
[164.12773132 77.73399353]
[179.58871460 81.01019287]
[188.13450623 94.30474091]
[184.69502258 109.73022461]
[171.31086731 118.13497162]
[155.92260742 114.53260040]
[147.65983582 101.06033325]
[133.01936340 97.79589081]
[127.69284058 103.07587433]
[131.51155090 117.58164215]
[117.03980255 113.63583374]
[111.71328735 118.91580963]
[114.84912872 133.58436584]
[117.98497009 148.25292969]
[121.12080383 162.92147827]
[124.25664520 177.59002686]
[127.39248657 192.25859070]
[132.26000977 200.02323914]
[130.45225525 207.21200562]
[133.33018494 221.93333435]
[136.20811462 236.65466309]
[139.08604431 251.37599182]
[142.09303284 266.07150269]
[145.22888184 280.74005127]
[148.36471558 295.40863037]
[152.52177429 309.82107544]
[157.67955017 323.90643311]
[162.83732605 337.99179077]
[167.99510193 352.07714844]
[181.88455200 360.10601807]
[184.12464905 375.99191284]
[172.99700928 387.54852295]
[157.03778076 385.91058350]
[148.48953247 372.33462524]
[153.90974426 357.23492432]
[148.75196838 343.14956665]
[143.59419250 329.06420898]
[138.43641663 314.97885132]
[132.82128906 328.88821411]
[120.17528534 336.95535278]
[105.19512177 336.18411255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 162]
[6 161]
[7 160]
[9 159]
[10 158]
[11 157]
[12 156]
[13 154]
[14 153]
[15 152]
[16 151]
[17 150]
[18 149]
[25 42]
[26 41]
[28 40]
[29 39]
[30 38]
[31 37]
[43 134]
[44 133]
[46 130]
[47 129]
[48 127]
[49 126]
[51 125]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[61 116]
[62 115]
[63 114]
[64 113]
[67 110]
[68 109]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[82 98]
[83 97]
[85 95]
[86 94]
[87 93]
[136 145]
[137 144]
[163 175]
[164 174]
[165 173]
[166 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
