%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCCUGACAGCAGGCUGGCCCUGAUAGAUAACGGAAGUGAGGAAGGGUGAGAGUUAUCUAUCUUCUCUGUUUUAUAGACUACUUCAGCUUCUGCUGUUACCAAUGCCUCAGCAACCACUGAAAGUUCAGAUAUCACCCUUCUUGUAACUAAUCAAAUCAAGGAAGAGAUCUACAAAAUAGUGGUGGUGGUUCCAGCUAGAAAUUUUCACUCACA\
) } def
/len { sequence length } bind def

/coor [
[89.71819305 107.39216614]
[74.71974945 107.17601013]
[59.72130966 106.95984650]
[51.79555511 120.04150391]
[38.47402573 127.35133362]
[23.38255310 127.01399231]
[10.57191467 119.22017670]
[3.43054700 106.14859009]
[-11.56789494 105.93243408]
[-26.56633759 105.71627808]
[-41.56478119 105.50011444]
[-56.56322098 105.28395844]
[-71.56166840 105.06780243]
[-86.56010437 104.85164642]
[-101.55854797 104.63549042]
[-116.55699158 104.41933441]
[-131.55699158 104.41933441]
[-146.55543518 104.63549042]
[-161.55387878 104.85164642]
[-176.55232239 105.06780243]
[-191.55076599 105.28395844]
[-197.39408875 120.26535797]
[-208.51319885 131.82882690]
[-223.18356323 138.22364807]
[-239.14620972 138.49739075]
[-253.95553589 132.63771057]
[-265.35397339 121.56967926]
[-271.61614990 107.00990295]
[-286.60992432 107.44217682]
[-295.40991211 120.08599854]
[-309.79940796 125.06549835]
[-324.19161987 120.66911316]
[-333.12835693 108.78330231]
[-348.12213135 109.21556854]
[-363.11590576 109.64783478]
[-378.10968018 110.08010864]
[-393.10345459 110.51237488]
[-408.09722900 110.94464874]
[-412.53118896 113.67935944]
[-417.11285400 114.37395477]
[-421.04159546 113.31304169]
[-423.74526978 111.05739594]
[-438.74371338 110.84123993]
[-453.74215698 110.62508392]
[-468.74060059 110.40892792]
[-483.73904419 110.19277191]
[-497.64926147 117.73040009]
[-510.26373291 109.81050110]
[-525.26214600 109.59433746]
[-540.26062012 109.37818146]
[-555.25903320 109.16202545]
[-570.25750732 108.94586945]
[-585.25592041 108.72971344]
[-601.18054199 114.54717255]
[-611.17901611 100.85533142]
[-600.79016113 87.45730591]
[-585.03979492 93.73126984]
[-570.04132080 93.94742584]
[-555.04290771 94.16358185]
[-540.04443359 94.37973785]
[-525.04602051 94.59590149]
[-510.04757690 94.81205750]
[-497.21011353 87.25896454]
[-483.52285767 95.19432831]
[-468.52444458 95.41048431]
[-453.52600098 95.62664032]
[-438.52755737 95.84279633]
[-423.52911377 96.05895996]
[-408.52947998 95.95087433]
[-393.53573608 95.51860809]
[-378.54196167 95.08633423]
[-363.54818726 94.65406799]
[-348.55441284 94.22180176]
[-333.56063843 93.78952789]
[-325.32351685 81.40859222]
[-311.20849609 76.19034576]
[-296.55599976 80.33256531]
[-287.04217529 92.44840240]
[-272.04840088 92.01613617]
[-267.55804443 78.72323608]
[-258.78198242 67.73759460]
[-246.75813293 60.39109421]
[-232.91967773 57.58328247]
[-218.92428589 59.67129898]
[-206.45550537 66.42457581]
[-197.02032471 77.05010986]
[-191.76692200 90.28551483]
[-176.76847839 90.06935883]
[-161.77003479 89.85320282]
[-146.77159119 89.63704681]
[-131.77314758 89.42089081]
[-127.86481476 86.68434143]
[-122.19701385 86.37042236]
[-116.34083557 89.42089081]
[-101.34239197 89.63704681]
[-86.34394836 89.85320282]
[-71.34550476 90.06935883]
[-56.34706497 90.28551483]
[-41.34862137 90.50167847]
[-26.35018158 90.71783447]
[-11.35173798 90.93399048]
[3.64670420 91.15014648]
[11.16180229 78.28978729]
[24.19172096 70.86838531]
[39.28664780 70.96608734]
[52.39199066 78.65678406]
[59.93746567 91.96141052]
[74.93590546 92.17756653]
[89.93434906 92.39372253]
[97.85160828 87.64440155]
[106.82478333 89.56862640]
[120.93652344 84.48348999]
[135.04827881 79.39835358]
[145.40823364 67.44084930]
[160.00485229 70.40530396]
[174.11659241 65.32016754]
[181.12471008 59.46982193]
[188.46849060 60.26503372]
[202.65205383 55.38378143]
[216.83561707 50.50252914]
[231.01918030 45.62128067]
[245.20274353 40.74002838]
[259.38629150 35.85877609]
[259.84167480 21.62617493]
[265.11599731 8.43124008]
[274.55697632 -2.14915419]
[287.01574707 -8.85809135]
[300.98660278 -10.90791130]
[314.78900146 -8.07264042]
[326.76959229 -0.71270299]
[335.50045776 10.27075672]
[349.75289917 5.59440422]
[364.00531006 0.91805148]
[378.25775146 -3.75830102]
[388.95800781 -15.41228771]
[403.46310425 -12.02841282]
[417.71554565 -16.70476532]
[424.89736938 -30.52718353]
[439.41796875 -35.06663895]
[452.55126953 -28.13468742]
[466.80371094 -32.81103897]
[481.05612183 -37.48739243]
[495.30856323 -42.16374588]
[508.06857300 -57.77404022]
[526.80340576 -52.97706223]
[540.91510010 -58.06219864]
[555.02685547 -63.14733505]
[559.22222900 -78.08650208]
[571.41815186 -87.68015289]
[586.92517090 -88.23931885]
[599.78045654 -79.54899597]
[605.04089355 -64.95079803]
[600.68371582 -50.05801773]
[588.38439941 -40.59724045]
[572.87225342 -40.20632553]
[560.11199951 -49.03559113]
[546.00024414 -43.95045471]
[531.88848877 -38.86531830]
[528.39282227 -29.27037430]
[520.01861572 -23.05053329]
[509.38461304 -22.45133781]
[499.98492432 -27.91131592]
[485.73248291 -23.23496437]
[471.48007202 -18.55861092]
[457.22763062 -13.88225937]
[450.75399780 -0.51709300]
[436.36660767 4.42842484]
[422.39190674 -2.45233703]
[408.13946533 2.22401547]
[398.45864868 13.54351807]
[382.93411255 10.49412727]
[368.68167114 15.17048073]
[354.42926025 19.84683228]
[340.17681885 24.52318573]
[339.22134399 40.34371185]
[332.25006104 54.62049484]
[320.30419922 65.15367889]
[305.19400024 70.30763245]
[289.22448730 69.26488495]
[274.84368896 62.15563583]
[264.26754761 50.04233551]
[250.08398438 54.92358780]
[235.90043640 59.80484009]
[221.71687317 64.68608856]
[207.53330994 69.56734467]
[193.34974670 74.44859314]
[179.20172119 79.43191528]
[165.08998108 84.51705170]
[155.73939514 96.11083221]
[140.13340759 93.51009369]
[126.02165985 98.59523010]
[111.90991974 103.68036652]
[126.81886292 105.33061218]
[141.00622559 110.20079803]
[153.78541565 118.05525208]
[164.53797913 128.51385498]
[172.74356079 141.07046509]
[178.00505066 155.11740112]
[180.06784058 169.97488403]
[178.83206177 184.92390442]
[174.35755920 199.24098206]
[166.86085510 212.23326111]
[156.70475769 223.27198792]
[144.38075256 231.82295227]
[130.48526001 237.47233582]
[115.69076538 239.94673157]
[100.71321106 239.12638855]
[86.27744293 235.05101013]
[73.08207703 227.91783142]
[61.76568985 218.07205200]
[52.87593460 205.99015808]
[46.84302902 192.25683594]
[43.95893097 177.53671265]
[44.36321640 162.54216003]
[48.03631592 147.99884033]
[54.80047607 134.61054993]
[64.32834625 123.02523041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[8 102]
[9 101]
[10 100]
[11 99]
[12 98]
[13 97]
[14 96]
[15 95]
[16 94]
[17 91]
[18 90]
[19 89]
[20 88]
[21 87]
[28 79]
[29 78]
[33 74]
[34 73]
[35 72]
[36 71]
[37 70]
[38 69]
[42 68]
[43 67]
[44 66]
[45 65]
[46 64]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[111 192]
[112 191]
[113 190]
[115 188]
[116 187]
[118 186]
[119 185]
[120 184]
[121 183]
[122 182]
[123 181]
[131 174]
[132 173]
[133 172]
[134 171]
[136 169]
[137 168]
[140 165]
[141 164]
[142 163]
[143 162]
[145 158]
[146 157]
[147 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
