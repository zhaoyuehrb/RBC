%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCACGUCACUGGCUCAGGCUCAGCUGCUGGGUCACCAGGAGAAUGGACCCUUCCUCCACCUCAGCUCAGAGCACAGUGAUGAUUCGUGACUUUCCCAAUAGAACUUCAAAUCUCUGAGGACGGGGGGUGGGGGGAUGUGCUUGAGUGUUUGUACUCAUGGUCUUGUUCUCGGAGUGACAAAGCUGGAACACAAUACCUCUAUGC\
) } def
/len { sequence length } bind def

/coor [
[67.97708130 610.32550049]
[64.57557678 624.93469238]
[61.17407227 639.54394531]
[57.77257156 654.15319824]
[66.33432007 667.43743896]
[62.91336823 682.86706543]
[49.53931427 691.28790283]
[34.14673996 687.70397949]
[25.86779213 674.24163818]
[29.61421967 658.88781738]
[43.16333389 650.75170898]
[46.56483841 636.14245605]
[49.96633911 621.53320312]
[53.36784363 606.92395020]
[34.69784546 595.52209473]
[21.62920189 577.94525146]
[16.07353210 556.73126221]
[18.85592270 534.95233154]
[29.59245682 515.77014160]
[46.74305725 501.97692871]
[67.83235931 495.58886719]
[68.28980255 480.59582520]
[68.74724579 465.60281372]
[69.20468903 450.60977173]
[69.66213226 435.61676025]
[70.11957550 420.62374878]
[61.32635117 415.31436157]
[55.48649979 406.76614380]
[53.71013641 396.48510742]
[56.38417435 386.31668091]
[63.09053040 378.11441040]
[72.66993713 373.40209961]
[73.81261444 358.44567871]
[74.95528412 343.48928833]
[76.09796143 328.53286743]
[77.24063873 313.57644653]
[65.79190063 304.08621216]
[62.08283615 289.50173950]
[67.73897552 275.36450195]
[80.78581238 267.17388916]
[81.92848969 252.21748352]
[83.07115936 237.26106262]
[84.21383667 222.30465698]
[85.35651398 207.34823608]
[86.49919128 192.39183044]
[87.64186859 177.43540955]
[88.67046356 162.47071838]
[89.58492279 147.49862671]
[90.49938202 132.52651978]
[91.41384125 117.55442810]
[76.02581024 97.34886169]
[93.32794189 72.08744049]
[89.26184082 57.64905930]
[85.19573975 43.21068192]
[81.12963104 28.77230072]
[77.06352997 14.33392048]
[72.99742889 -0.10445927]
[68.93132782 -14.54283905]
[64.86522675 -28.98121834]
[60.79912186 -43.41959763]
[56.73302078 -57.85797882]
[52.66691971 -72.29635620]
[48.60081482 -86.73474121]
[30.57985306 -95.61042023]
[24.97653961 -114.58326721]
[34.97105026 -131.30137634]
[30.24885559 -145.53868103]
[25.52666473 -159.77598572]
[20.80447197 -174.01329041]
[16.08227921 -188.25059509]
[11.36008739 -202.48789978]
[6.63789463 -216.72520447]
[-5.67439842 -218.91337585]
[-15.82821274 -226.08834839]
[-21.93096924 -236.83760071]
[-22.87726021 -249.08975220]
[-18.54861450 -260.51361084]
[-9.82437897 -268.96173096]
[-14.11019135 -283.33642578]
[-18.39600372 -297.71112061]
[-30.90488625 -302.71173096]
[-38.14305115 -313.84194946]
[-37.65511322 -326.91497803]
[-29.84322739 -337.16500854]
[-33.90932846 -351.60339355]
[-37.97543335 -366.04177856]
[-53.08737946 -367.45367432]
[-66.66707611 -374.23278809]
[-76.87796783 -385.46231079]
[-82.33912659 -399.62350464]
[-82.31196594 -414.80126953]
[-76.80017090 -428.94284058]
[-66.54915619 -440.13574219]
[-52.94528961 -446.86621094]
[-37.82838440 -448.22402954]
[-23.24287605 -444.02551270]
[-11.16133690 -434.83853149]
[-3.21769547 -421.90551758]
[-0.48626259 -406.97555542]
[-3.33644295 -392.06781006]
[-11.38277245 -379.19842529]
[-23.53705215 -370.10787964]
[-19.47094917 -355.66949463]
[-15.40484810 -341.23110962]
[-0.39759800 -333.64419556]
[4.57888937 -317.22814941]
[-4.02131128 -301.99691772]
[0.26450160 -287.62222290]
[4.55031443 -273.24755859]
[21.45999146 -268.16571045]
[32.02954102 -253.82615662]
[31.87717247 -235.85560608]
[20.87520027 -221.44740295]
[25.59739304 -207.21009827]
[30.31958580 -192.97279358]
[35.04177856 -178.73548889]
[39.76396942 -164.49816895]
[44.48616409 -150.26086426]
[49.20835495 -136.02355957]
[59.29053497 -134.05892944]
[67.71208191 -128.03782654]
[72.91297150 -118.99316406]
[73.89574432 -108.52504730]
[70.41612244 -98.51781464]
[63.03919601 -90.80084229]
[67.10530090 -76.36245728]
[71.17140198 -61.92407990]
[75.23750305 -47.48570251]
[79.30360413 -33.04732132]
[83.36970520 -18.60894203]
[87.43580627 -4.17056131]
[91.50191498 10.26781845]
[95.56801605 24.70619774]
[99.63411713 39.14457703]
[103.70021820 53.58295822]
[107.76631927 68.02133942]
[107.06114197 53.03792191]
[116.58538818 41.44962311]
[131.42167664 39.23950195]
[143.90998840 47.54865265]
[147.60258484 62.08703995]
[140.59298706 75.34846497]
[126.49818420 80.48598480]
[141.38668823 78.66046143]
[156.27519226 76.83494568]
[171.16368103 75.00942993]
[186.05218506 73.18391418]
[200.94068909 71.35839844]
[213.70661926 61.06454849]
[228.90473938 67.22483826]
[230.90052795 83.50209045]
[217.64089966 93.15165710]
[202.76620483 86.24689484]
[187.87770081 88.07241821]
[172.98921204 89.89793396]
[158.10070801 91.72344971]
[143.21220398 93.54896545]
[128.32369995 95.37448120]
[120.71287537 112.35990143]
[106.38594055 118.46888733]
[105.47148132 133.44097900]
[104.55702209 148.41308594]
[103.64256287 163.38517761]
[106.24372864 172.14564514]
[102.59828186 178.57809448]
[101.45560455 193.53450012]
[100.31292725 208.49092102]
[99.17024994 223.44732666]
[98.02757263 238.40374756]
[96.88490295 253.36015320]
[95.74222565 268.31655884]
[107.39336395 278.39413452]
[110.83621216 293.22653198]
[104.95460510 307.07827759]
[92.19705200 314.71911621]
[91.05437469 329.67553711]
[89.91169739 344.63195801]
[88.76902771 359.58837891]
[87.62635040 374.54476929]
[101.50025940 389.07226562]
[100.24309540 408.81524658]
[85.11259460 421.08117676]
[84.65515137 436.07418823]
[84.19770813 451.06723022]
[83.74026489 466.06024170]
[83.28282928 481.05328369]
[82.82538605 496.04629517]
[91.47156525 498.16326904]
[99.68741608 501.57958984]
[107.27904510 506.21334839]
[114.06749725 511.95397949]
[119.89293671 518.66479492]
[124.61845398 526.18640137]
[128.13325500 534.34014893]
[130.35525513 542.93286133]
[131.23301697 551.76086426]
[130.74691772 560.61535645]
[128.90960693 569.28692627]
[125.76566315 577.57067871]
[121.39053345 585.27111816]
[115.88870239 592.20666504]
[109.39118958 598.21405029]
[102.05248260 603.15191650]
[94.04678345 606.90447998]
[85.56394958 609.38409424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[46 165]
[47 163]
[48 162]
[49 161]
[50 160]
[52 136]
[53 135]
[54 134]
[55 133]
[56 132]
[57 131]
[58 130]
[59 129]
[60 128]
[61 127]
[62 126]
[63 125]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[78 109]
[79 108]
[80 107]
[84 104]
[85 103]
[86 102]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
