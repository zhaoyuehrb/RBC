%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRTAP5-3)
} def

/sequence { (\
GGGCUCAGAGAACUCCACACCUGCACACCUCCCUCUCACCUGCUCCUCUACCUGCUCCACCCUCAACCCACCAGAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.012160986 ubox
1 16 0.021388892 ubox
1 21 0.013213367 ubox
1 22 0.017978901 ubox
1 29 0.031592863 ubox
1 30 0.015106684 ubox
1 31 0.007218720 ubox
1 32 0.006148564 ubox
1 33 0.032538247 ubox
1 34 0.012982752 ubox
1 35 0.011119005 ubox
1 37 0.033871664 ubox
1 40 0.052953945 ubox
1 41 0.094581990 ubox
1 44 0.008053901 ubox
1 45 0.587302513 ubox
1 46 0.429776425 ubox
1 47 0.053882446 ubox
1 48 0.031671957 ubox
1 49 0.007048606 ubox
1 52 0.020264266 ubox
1 53 0.062159125 ubox
1 56 0.004305034 ubox
1 57 0.313244505 ubox
1 58 0.347150800 ubox
1 61 0.029166567 ubox
1 62 0.362037581 ubox
1 63 0.050630644 ubox
1 64 0.094687365 ubox
1 68 0.014831902 ubox
1 69 0.238192878 ubox
1 72 0.028528665 ubox
1 78 0.013324977 ubox
2 14 0.012391442 ubox
2 15 0.021363420 ubox
2 16 0.005510211 ubox
2 20 0.013225059 ubox
2 21 0.019055729 ubox
2 28 0.031635027 ubox
2 29 0.018089795 ubox
2 30 0.005430622 ubox
2 31 0.006121451 ubox
2 32 0.032580868 ubox
2 33 0.016062777 ubox
2 34 0.009568713 ubox
2 35 0.003442269 ubox
2 36 0.033869712 ubox
2 37 0.004629046 ubox
2 39 0.053001392 ubox
2 40 0.100239430 ubox
2 41 0.011382058 ubox
2 43 0.008917599 ubox
2 44 0.597880353 ubox
2 45 0.428855159 ubox
2 46 0.066481590 ubox
2 47 0.016958467 ubox
2 48 0.006831874 ubox
2 51 0.019930466 ubox
2 52 0.065900465 ubox
2 53 0.003801651 ubox
2 55 0.004731430 ubox
2 56 0.319628101 ubox
2 57 0.346058905 ubox
2 58 0.037434016 ubox
2 60 0.028942278 ubox
2 61 0.362646594 ubox
2 62 0.067462629 ubox
2 63 0.088509553 ubox
2 64 0.005376190 ubox
2 67 0.014772171 ubox
2 68 0.238333188 ubox
2 69 0.010822307 ubox
2 71 0.028245022 ubox
2 72 0.012206337 ubox
2 77 0.013387540 ubox
2 78 0.015124766 ubox
3 13 0.018062548 ubox
3 14 0.014301180 ubox
3 15 0.005530369 ubox
3 20 0.019037961 ubox
3 24 0.012790996 ubox
3 28 0.018123589 ubox
3 29 0.006114725 ubox
3 30 0.004566452 ubox
3 31 0.031840084 ubox
3 32 0.016086229 ubox
3 33 0.009571647 ubox
3 35 0.033849967 ubox
3 36 0.004110294 ubox
3 39 0.100141785 ubox
3 40 0.013156241 ubox
3 43 0.735089665 ubox
3 44 0.058014295 ubox
3 45 0.066039087 ubox
3 46 0.015214357 ubox
3 51 0.065883165 ubox
3 52 0.004383423 ubox
3 55 0.467565168 ubox
3 56 0.058794871 ubox
3 57 0.037546764 ubox
3 60 0.361635129 ubox
3 61 0.067432990 ubox
3 62 0.088278756 ubox
3 63 0.004367675 ubox
3 67 0.237054072 ubox
3 68 0.010846739 ubox
3 71 0.012177087 ubox
3 77 0.015288154 ubox
4 10 0.014010853 ubox
4 23 0.013050123 ubox
4 42 0.736366898 ubox
4 54 0.469014125 ubox
4 74 0.004783766 ubox
5 9 0.012695362 ubox
5 11 0.022964248 ubox
5 73 0.004505080 ubox
5 75 0.016580325 ubox
6 10 0.023403731 ubox
6 23 0.056862790 ubox
6 42 0.074922755 ubox
6 54 0.071091230 ubox
6 74 0.016871735 ubox
7 14 0.017773031 ubox
7 22 0.057936475 ubox
7 30 0.012454177 ubox
7 34 0.018588845 ubox
7 36 0.298474845 ubox
7 41 0.076917090 ubox
7 44 0.003859736 ubox
7 47 0.014861404 ubox
7 49 0.425475107 ubox
7 53 0.073339169 ubox
7 56 0.034650568 ubox
7 63 0.035415211 ubox
8 13 0.018755683 ubox
8 15 0.033106820 ubox
8 21 0.057904020 ubox
8 29 0.012665732 ubox
8 31 0.091907577 ubox
8 33 0.018934841 ubox
8 35 0.310074465 ubox
8 37 0.724268748 ubox
8 40 0.056712606 ubox
8 43 0.003816765 ubox
8 45 0.019806704 ubox
8 46 0.014535499 ubox
8 48 0.438719531 ubox
8 52 0.072030665 ubox
8 55 0.034360713 ubox
8 57 0.348489962 ubox
8 62 0.027929204 ubox
8 64 0.071042248 ubox
9 14 0.031146444 ubox
9 22 0.029364866 ubox
9 30 0.092892811 ubox
9 34 0.310050532 ubox
9 36 0.726738242 ubox
9 41 0.008499358 ubox
9 44 0.020651387 ubox
9 47 0.438584924 ubox
9 49 0.174721949 ubox
9 53 0.024294244 ubox
9 56 0.349452895 ubox
9 63 0.071123951 ubox
10 21 0.030119116 ubox
10 29 0.092732666 ubox
10 31 0.026664963 ubox
10 33 0.308808638 ubox
10 35 0.726793765 ubox
10 37 0.025898192 ubox
10 40 0.008701182 ubox
10 43 0.020551693 ubox
10 45 0.094363673 ubox
10 46 0.427125820 ubox
10 48 0.177810946 ubox
10 52 0.024315022 ubox
10 55 0.349105290 ubox
10 57 0.015583985 ubox
10 62 0.070698039 ubox
11 30 0.028981553 ubox
11 34 0.696976738 ubox
11 36 0.025038282 ubox
11 44 0.130325595 ubox
11 47 0.172293419 ubox
11 56 0.015714975 ubox
16 23 0.109443605 ubox
16 42 0.084882012 ubox
16 54 0.018274652 ubox
17 22 0.095042983 ubox
17 41 0.077140841 ubox
17 53 0.017425126 ubox
18 42 0.051015292 ubox
18 54 0.024718725 ubox
19 41 0.049235228 ubox
19 53 0.023615631 ubox
22 38 0.050387849 ubox
22 50 0.008624347 ubox
23 37 0.050932944 ubox
23 43 0.488507928 ubox
23 49 0.005319085 ubox
23 55 0.035860097 ubox
24 42 0.488814833 ubox
24 54 0.035966999 ubox
25 41 0.446684414 ubox
25 53 0.032452309 ubox
26 42 0.017541747 ubox
27 41 0.017046917 ubox
34 75 0.005984726 ubox
35 74 0.006296417 ubox
36 73 0.006001240 ubox
37 54 0.008502534 ubox
38 53 0.008504477 ubox
40 74 0.017500788 ubox
41 50 0.014971859 ubox
41 59 0.011835984 ubox
41 65 0.006699808 ubox
41 73 0.017588525 ubox
42 49 0.015014009 ubox
42 55 0.280215693 ubox
42 58 0.011551902 ubox
42 64 0.006967288 ubox
42 72 0.017289253 ubox
43 54 0.280665386 ubox
43 74 0.003250804 ubox
44 75 0.004725517 ubox
45 74 0.005119754 ubox
46 74 0.025897478 ubox
47 73 0.024415086 ubox
47 75 0.129927498 ubox
48 74 0.136339800 ubox
49 73 0.130610143 ubox
52 74 0.352751586 ubox
53 59 0.059091892 ubox
53 65 0.047256379 ubox
53 70 0.061216400 ubox
53 73 0.353651769 ubox
54 58 0.065566095 ubox
54 64 0.050534451 ubox
54 69 0.064438457 ubox
54 72 0.351413292 ubox
55 74 0.038433005 ubox
56 73 0.036466752 ubox
56 75 0.050950079 ubox
57 74 0.053398786 ubox
62 74 0.091854301 ubox
63 73 0.087807545 ubox
63 75 0.169678195 ubox
64 74 0.178085755 ubox
1 45 0.9500000 lbox
2 44 0.9500000 lbox
3 43 0.9500000 lbox
4 42 0.9500000 lbox
8 37 0.9500000 lbox
9 36 0.9500000 lbox
10 35 0.9500000 lbox
11 34 0.9500000 lbox
showpage
end
%%EOF
