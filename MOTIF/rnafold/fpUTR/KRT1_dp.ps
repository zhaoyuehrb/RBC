%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT1)
} def

/sequence { (\
AGAGGAGUGUUUAGCUCCUUCCCUUACUCUACCUUGCUCCUACUUUUCUCUAAGUCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.021864793 ubox
1 24 0.052816810 ubox
1 25 0.024350938 ubox
1 28 0.016835893 ubox
1 30 0.039553299 ubox
1 34 0.011057178 ubox
1 35 0.005857054 ubox
1 38 0.007852541 ubox
1 41 0.011061568 ubox
1 44 0.059017710 ubox
1 45 0.004225965 ubox
1 49 0.188163478 ubox
1 51 0.206025180 ubox
2 19 0.018920565 ubox
2 20 0.838396680 ubox
2 21 0.255888318 ubox
2 23 0.057159886 ubox
2 24 0.013420681 ubox
2 25 0.010088905 ubox
2 27 0.018205985 ubox
2 29 0.041052538 ubox
2 33 0.012279367 ubox
2 34 0.003582460 ubox
2 35 0.017736692 ubox
2 37 0.008510307 ubox
2 39 0.015187735 ubox
2 40 0.010784321 ubox
2 43 0.067873495 ubox
2 44 0.003769452 ubox
2 45 0.003589563 ubox
2 48 0.216311590 ubox
2 50 0.218119949 ubox
2 56 0.017570689 ubox
3 19 0.908232297 ubox
3 20 0.182292558 ubox
3 24 0.008078683 ubox
3 28 0.033933358 ubox
3 34 0.019310984 ubox
3 38 0.014881671 ubox
3 41 0.177830052 ubox
3 47 0.216295849 ubox
3 49 0.218035587 ubox
3 55 0.006304778 ubox
4 18 0.932590344 ubox
4 19 0.028619210 ubox
4 22 0.004383729 ubox
4 23 0.006088251 ubox
4 27 0.017259948 ubox
4 30 0.023431954 ubox
4 33 0.019465781 ubox
4 37 0.013846068 ubox
4 40 0.182886669 ubox
4 46 0.215706722 ubox
4 48 0.217619624 ubox
5 17 0.933010733 ubox
5 18 0.020331802 ubox
5 21 0.004535684 ubox
5 22 0.005163696 ubox
5 29 0.025340811 ubox
5 32 0.019161763 ubox
5 35 0.007383730 ubox
5 39 0.182946719 ubox
5 45 0.222076984 ubox
5 46 0.009435485 ubox
5 47 0.210079408 ubox
5 48 0.003742795 ubox
6 16 0.933102722 ubox
6 19 0.003681779 ubox
6 20 0.004298088 ubox
6 24 0.003449346 ubox
6 28 0.025794863 ubox
6 30 0.018417602 ubox
6 34 0.008239343 ubox
6 35 0.009327613 ubox
6 38 0.182910612 ubox
6 44 0.226892396 ubox
6 45 0.011092640 ubox
6 46 0.205166616 ubox
6 47 0.004486539 ubox
7 15 0.933175732 ubox
7 18 0.003990897 ubox
7 19 0.003348510 ubox
7 23 0.003455138 ubox
7 27 0.025840370 ubox
7 29 0.018452345 ubox
7 33 0.008663930 ubox
7 34 0.008574772 ubox
7 37 0.182894858 ubox
7 43 0.229560647 ubox
7 44 0.009333137 ubox
7 45 0.170689488 ubox
7 46 0.004238363 ubox
8 14 0.926388891 ubox
8 26 0.025788640 ubox
8 36 0.181300388 ubox
8 42 0.228707697 ubox
9 15 0.011440407 ubox
9 25 0.025258742 ubox
9 27 0.029184235 ubox
9 32 0.105989451 ubox
9 35 0.114746272 ubox
9 37 0.003168582 ubox
9 41 0.212044399 ubox
9 43 0.196773775 ubox
10 14 0.011270846 ubox
10 26 0.028872765 ubox
10 31 0.105842880 ubox
10 36 0.003347567 ubox
10 42 0.192832334 ubox
12 26 0.006499815 ubox
12 31 0.095855737 ubox
12 42 0.004357332 ubox
13 19 0.013204589 ubox
13 20 0.005007389 ubox
13 24 0.032937726 ubox
13 25 0.006656939 ubox
13 28 0.099396417 ubox
13 30 0.101827651 ubox
13 34 0.019013355 ubox
13 35 0.004064714 ubox
13 38 0.291603186 ubox
13 41 0.005181187 ubox
14 18 0.013124934 ubox
14 19 0.004111522 ubox
14 23 0.033507316 ubox
14 24 0.005317466 ubox
14 27 0.099822947 ubox
14 29 0.100819723 ubox
14 33 0.019175760 ubox
14 34 0.003540298 ubox
14 37 0.306659601 ubox
14 40 0.004667014 ubox
15 36 0.306599803 ubox
20 57 0.005074458 ubox
23 54 0.092661167 ubox
24 53 0.093199484 ubox
24 58 0.014618198 ubox
25 31 0.029831952 ubox
25 36 0.031457653 ubox
25 42 0.007737773 ubox
25 52 0.092508661 ubox
25 53 0.003521815 ubox
25 57 0.016641119 ubox
26 30 0.028256590 ubox
26 35 0.034389387 ubox
26 41 0.008773018 ubox
26 51 0.087501603 ubox
26 55 0.043700871 ubox
27 54 0.046785776 ubox
28 53 0.044716834 ubox
29 54 0.015959084 ubox
30 36 0.022858430 ubox
30 42 0.011522438 ubox
30 52 0.015796384 ubox
30 53 0.015564799 ubox
31 35 0.021198383 ubox
31 41 0.013101898 ubox
31 51 0.015332323 ubox
31 55 0.023427989 ubox
32 54 0.020904782 ubox
33 54 0.108679330 ubox
34 53 0.110139064 ubox
34 54 0.008715091 ubox
34 58 0.271232996 ubox
35 42 0.033356402 ubox
35 52 0.108795213 ubox
35 53 0.010952320 ubox
35 57 0.318125012 ubox
36 41 0.033555878 ubox
36 51 0.099542067 ubox
36 55 0.084557849 ubox
36 56 0.324348332 ubox
37 54 0.152217874 ubox
38 53 0.144773248 ubox
40 54 0.055502672 ubox
41 52 0.065752900 ubox
41 53 0.052751847 ubox
42 51 0.069747302 ubox
42 55 0.774978797 ubox
43 54 0.829446961 ubox
44 53 0.828577242 ubox
44 54 0.036101284 ubox
44 58 0.021326057 ubox
45 52 0.803662026 ubox
45 53 0.053386332 ubox
45 54 0.019774809 ubox
45 57 0.024418171 ubox
45 58 0.010457211 ubox
46 52 0.061594706 ubox
46 53 0.025324040 ubox
46 54 0.009161811 ubox
46 57 0.011677896 ubox
46 58 0.007584809 ubox
47 52 0.023655685 ubox
47 53 0.010963538 ubox
47 57 0.007994190 ubox
48 54 0.044650997 ubox
49 53 0.040576199 ubox
2 20 0.9500000 lbox
3 19 0.9500000 lbox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
showpage
end
%%EOF
