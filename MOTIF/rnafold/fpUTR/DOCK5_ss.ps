%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCGGCGCGGGCACGGGCACGGGCGCGGGCGGCGCGGCGAGGAGGCGGCCCGCGGAGUCCAGCGAAGUUUGGCGGAACAUGGCGGAAGCGUCUGGGGCACGCAGGAGCGCGGGGCGGCGGCGGCCGGAGCCCGAGGAGCUGUAGCAGCCUUAGUCGCCGCCGCCGCGGGGCGAGGUCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-11.37763691 351.91357422]
[-20.31624031 363.95938110]
[-35.13086700 366.31030273]
[-47.35950089 357.62350464]
[-50.01719284 342.86065674]
[-59.55134583 354.44082642]
[-62.34959412 370.01260376]
[-76.41245270 374.92028809]
[-85.94660187 386.50042725]
[-88.74485779 402.07220459]
[-102.80770874 406.97988892]
[-112.34185791 418.56005859]
[-115.14011383 434.13183594]
[-129.20297241 439.03952026]
[-138.73712158 450.61965942]
[-141.53536987 466.19143677]
[-155.59822083 471.09912109]
[-165.13237000 482.67929077]
[-167.29402161 498.93533325]
[-182.55415344 504.94036865]
[-195.21446228 494.51690674]
[-192.25111389 478.38772583]
[-176.71253967 473.14514160]
[-167.17837524 461.56497192]
[-165.06207275 446.82150269]
[-150.31727600 441.08551025]
[-140.78312683 429.50537109]
[-138.66682434 414.76187134]
[-123.92201233 409.02590942]
[-114.38786316 397.44573975]
[-112.27156067 382.70227051]
[-97.52675629 376.96627808]
[-87.99260712 365.38613892]
[-85.87630463 350.64263916]
[-71.13150024 344.90667725]
[-61.59735107 333.32650757]
[-52.65869904 321.28076172]
[-44.33824539 308.79995728]
[-36.01779175 296.31918335]
[-27.69733810 283.83837891]
[-19.37688446 271.35760498]
[-11.05643082 258.87680054]
[-2.73597789 246.39602661]
[-8.59969711 235.73948669]
[-9.37254620 223.52841187]
[-4.84601593 212.08323669]
[4.17549133 203.60516357]
[16.01689529 199.75279236]
[28.44326973 201.31791687]
[37.17830276 189.12368774]
[38.29981613 174.27136230]
[52.62617111 167.55824280]
[61.36120224 155.36401367]
[70.09623718 143.16978455]
[78.83126831 130.97555542]
[87.56629944 118.78132629]
[73.86636353 124.88965607]
[60.95233917 117.25893402]
[59.69378662 102.31182098]
[71.15000916 92.62911224]
[85.67852783 96.36065674]
[75.02746582 85.79869843]
[64.37641144 75.23673248]
[56.06083679 71.40529633]
[53.63701630 64.40674591]
[43.16489410 53.66734314]
[27.82945824 56.03463364]
[14.04680824 48.90594482]
[7.11665297 35.02241135]
[9.70377922 19.72252846]
[20.81338310 8.88941574]
[36.17359543 6.68862724]
[49.87810516 13.96640968]
[56.65724182 27.92430687]
[53.90429306 43.19522476]
[64.37641144 53.93462372]
[74.93837738 64.58567810]
[85.58943176 75.14763641]
[96.24048615 85.70960236]
[93.36914825 70.98698425]
[103.70830536 60.11952209]
[118.55563354 62.25420761]
[125.41433716 75.59430695]
[118.51146698 88.91168213]
[131.70672607 81.77830505]
[144.90199280 74.64492798]
[158.09725952 67.51155090]
[171.29251099 60.37817383]
[175.90515137 45.49995422]
[189.38864136 38.45366669]
[203.54431152 42.94279861]
[216.73957825 35.80942154]
[229.93484497 28.67604256]
[238.39509583 15.30687332]
[253.27061462 16.06069183]
[266.46588135 8.92731285]
[279.66113281 1.79393506]
[292.85638428 -5.33944273]
[306.05166626 -12.47282028]
[319.24691772 -19.60619926]
[332.44216919 -26.73957634]
[337.14199829 -45.07561874]
[353.46170044 -54.01966858]
[370.84027100 -48.31450653]
[383.78845215 -55.88713455]
[396.73663330 -63.45976257]
[409.68481445 -71.03238678]
[408.54348755 -86.21325684]
[414.08395386 -100.32672882]
[425.15747070 -110.59305573]
[439.53125000 -115.01524353]
[454.33856201 -112.76738739]
[466.65048218 -104.34827423]
[479.59866333 -111.92089844]
[492.54684448 -119.49353027]
[505.49502563 -127.06615448]
[514.65081787 -145.01008606]
[533.96289062 -144.33067322]
[546.64941406 -152.33399963]
[559.33587646 -160.33732605]
[572.02233887 -168.34065247]
[579.17608643 -183.09722900]
[595.54974365 -184.01019287]
[604.29962158 -170.14036560]
[596.42449951 -155.75584412]
[580.02569580 -155.65417480]
[567.33923340 -147.65084839]
[554.65270996 -139.64752197]
[541.96624756 -131.64419556]
[540.60913086 -121.49073029]
[533.73461914 -113.60225677]
[523.43835449 -110.75207520]
[513.06762695 -114.11798096]
[500.11947632 -106.54534912]
[487.17129517 -98.97272491]
[474.22311401 -91.40009308]
[475.52481079 -76.54172516]
[470.22439575 -62.53404236]
[459.32312012 -52.17435074]
[444.94628906 -47.55626297]
[429.92907715 -49.64674377]
[417.25744629 -58.08421326]
[404.30926514 -50.51158524]
[391.36108398 -42.93895721]
[378.41290283 -35.36632919]
[377.97839355 -23.94120026]
[372.01278687 -14.04715157]
[361.90359497 -8.21003056]
[350.11233521 -7.98507690]
[339.57556152 -13.54431534]
[326.38027954 -6.41093731]
[313.18502808 0.72244054]
[299.98977661 7.85581827]
[286.79452515 14.98919678]
[273.59924316 22.12257385]
[260.40399170 29.25595284]
[252.88754272 42.11489487]
[237.06822205 41.87130356]
[223.87295532 49.00468063]
[210.67768860 56.13806152]
[206.68077087 70.44051361]
[193.40052795 77.86274719]
[178.42588806 73.57343292]
[165.23063660 80.70681000]
[152.03536987 87.84018707]
[138.84010315 94.97356415]
[125.64484406 102.10694885]
[99.76052856 127.51635742]
[91.02549744 139.71058655]
[82.29046631 151.90481567]
[73.55543518 164.09904480]
[64.82040405 176.29327393]
[63.07410049 192.01780701]
[49.37253189 197.85871887]
[40.63750076 210.05294800]
[46.87010574 227.06137085]
[41.70610428 244.26026917]
[27.38785553 254.83587646]
[9.74480915 254.71647644]
[1.42435622 267.19726562]
[-6.89609718 279.67803955]
[-15.21654987 292.15884399]
[-23.53700447 304.63961792]
[-31.85745621 317.12042236]
[-40.17790985 329.60119629]
[-25.27851868 327.86682129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 36]
[6 35]
[8 33]
[9 32]
[11 30]
[12 29]
[14 27]
[15 26]
[17 24]
[18 23]
[37 185]
[38 184]
[39 183]
[40 182]
[41 181]
[42 180]
[43 179]
[49 175]
[50 174]
[52 172]
[53 171]
[54 170]
[55 169]
[56 168]
[61 79]
[62 78]
[63 77]
[65 76]
[66 75]
[84 167]
[85 166]
[86 165]
[87 164]
[88 163]
[91 160]
[92 159]
[93 158]
[95 156]
[96 155]
[97 154]
[98 153]
[99 152]
[100 151]
[101 150]
[104 145]
[105 144]
[106 143]
[107 142]
[113 136]
[114 135]
[115 134]
[116 133]
[118 129]
[119 128]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
