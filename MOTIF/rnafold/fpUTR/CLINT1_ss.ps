%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGCUCCACGCAGCGCCUGUGCUGCCGCGUCUCGACGUGUCACCGGCGGCGCCGCUGCUGUGGCAAAGGAAGGAGCUGACUGGGGGAGUUCGAGGCGGCGGGCGGCGGUGACCCCGGCCUGGAACUGCCCCGGUACGGAAGUGUUCCGGGGUCCGUGGGGAGCAGGAGAGGGAGGCGGCGGACCGUCCCGCGCGGGGCACG\
) } def
/len { sequence length } bind def

/coor [
[82.93438721 128.57843018]
[72.68918610 119.02843475]
[58.76624680 124.60980988]
[44.84330368 130.19117737]
[30.92036247 135.77255249]
[16.99742126 141.35392761]
[13.08571911 157.80783081]
[0.26571366 168.58216858]
[-16.28416061 169.58352661]
[-30.03131294 160.61502075]
[-43.86751938 166.40806580]
[-57.70372772 172.20112610]
[-71.53993225 177.99417114]
[-85.33156586 183.89254761]
[-99.07781982 189.89591980]
[-112.82407379 195.89929199]
[-126.57032776 201.90266418]
[-140.31658936 207.90603638]
[-154.06283569 213.90940857]
[-157.16390991 218.11805725]
[-161.16952515 220.47778320]
[-165.22286987 220.95382690]
[-168.57778931 219.85696411]
[-182.58422852 225.22535706]
[-196.59066772 230.59376526]
[-210.59710693 235.96215820]
[-224.60354614 241.33056641]
[-238.60997009 246.69895935]
[-252.61640930 252.06736755]
[-266.62286377 257.43576050]
[-280.62930298 262.80416870]
[-287.52581787 268.79992676]
[-294.89047241 268.14584351]
[-308.97714233 273.30001831]
[-315.68890381 287.35668945]
[-330.04821777 292.38308716]
[-343.40774536 285.89785767]
[-357.49441528 291.05203247]
[-370.29153442 302.17272949]
[-384.52023315 292.95425415]
[-379.60092163 276.72967529]
[-362.64859009 276.96536255]
[-348.56192017 271.81115723]
[-342.54254150 258.23535156]
[-328.33007812 252.80761719]
[-314.13131714 259.21334839]
[-300.04464722 254.05915833]
[-285.99768066 248.79772949]
[-271.99124146 243.42932129]
[-257.98480225 238.06092834]
[-243.97837830 232.69252014]
[-229.97193909 227.32412720]
[-215.96549988 221.95571899]
[-201.95906067 216.58732605]
[-187.95262146 211.21891785]
[-173.94619751 205.85052490]
[-160.06620789 200.16314697]
[-146.31996155 194.15977478]
[-132.57369995 188.15640259]
[-118.82744598 182.15303040]
[-105.08119202 176.14965820]
[-91.33493805 170.14628601]
[-86.46141052 164.58621216]
[-77.33297729 164.15795898]
[-63.49677277 158.36491394]
[-49.66056442 152.57186890]
[-35.82435989 146.77882385]
[-33.97537994 133.55453491]
[-25.76679039 122.88578796]
[-13.25852299 117.62529755]
[0.32279414 119.24611664]
[11.41604996 127.43098450]
[25.33899117 121.84960938]
[39.26193237 116.26824188]
[53.18487167 110.68686676]
[67.10781097 105.10549927]
[68.02307129 90.75673676]
[74.90460968 78.13259888]
[86.46846771 69.58849335]
[100.55706024 66.71859741]
[104.18095398 52.16293335]
[107.80484772 37.60726929]
[111.31764984 23.02439499]
[114.71915436 8.41515923]
[118.12065125 -6.19407749]
[121.52215576 -20.80331421]
[124.92366028 -35.41254807]
[128.32516479 -50.02178574]
[131.72666931 -64.63101959]
[127.32035065 -79.82624817]
[137.74220276 -90.46739960]
[141.14370728 -105.07663727]
[144.54521179 -119.68587494]
[147.94671631 -134.29510498]
[151.34822083 -148.90434265]
[146.94190979 -164.09957886]
[157.36376953 -174.74072266]
[160.76525879 -189.34996033]
[164.16676331 -203.95919800]
[167.56826782 -218.56843567]
[159.18186951 -229.11103821]
[158.41114807 -242.36541748]
[165.31384277 -253.47827148]
[177.17872620 -258.50949097]
[180.80261230 -273.06515503]
[184.42651367 -287.62081909]
[187.93931580 -302.20370483]
[191.34082031 -316.81292725]
[186.06027222 -332.33865356]
[197.06771851 -344.49462891]
[213.03965759 -340.77584839]
[217.54551697 -325.00787354]
[205.95005798 -313.41143799]
[202.54855347 -298.80218506]
[204.09407043 -291.57189941]
[198.98217773 -283.99691772]
[195.35827637 -269.44125366]
[191.73439026 -254.88560486]
[201.00900269 -240.85847473]
[197.19572449 -224.13391113]
[182.17750549 -215.16693115]
[178.77600098 -200.55769348]
[175.37449646 -185.94845581]
[171.97299194 -171.33921814]
[176.62261963 -157.18894958]
[165.95745850 -145.50283813]
[162.55595398 -130.89360046]
[159.15444946 -116.28437042]
[155.75294495 -101.67513275]
[152.35144043 -87.06590271]
[157.00105286 -72.91561890]
[146.33590698 -61.22951889]
[142.93440247 -46.62028503]
[139.53289795 -32.01104736]
[136.13139343 -17.40181160]
[132.72988892 -2.79257488]
[129.32838440 11.81666183]
[125.92688751 26.42589760]
[127.47240448 33.65619278]
[122.36051178 41.23116684]
[118.73661804 55.78683090]
[115.11272430 70.34249115]
[127.36972046 81.05638885]
[133.07995605 96.30153656]
[130.87756348 112.43135071]
[143.17211914 121.02458191]
[155.46669006 129.61781311]
[167.76126099 138.21104431]
[180.05581665 146.80427551]
[192.35038757 155.39752197]
[204.64494324 163.99075317]
[216.93951416 172.58398438]
[230.04348755 163.27212524]
[247.48243713 161.74758911]
[264.60656738 169.83605957]
[276.15612793 186.61956787]
[290.59451294 190.68566895]
[305.03289795 194.75177002]
[314.14559937 194.06590271]
[319.65954590 198.99154663]
[334.03424072 203.27735901]
[348.77380371 196.94291687]
[362.84762573 204.64402771]
[365.45950317 220.47303772]
[354.60580444 232.28729248]
[338.61254883 231.02391052]
[329.74844360 217.65203857]
[315.37374878 213.36622620]
[300.96679688 209.19015503]
[286.52841187 205.12405396]
[272.09002686 201.05795288]
[267.93515015 207.30191040]
[274.59512329 220.74230957]
[259.62539673 219.78981018]
[255.47050476 226.03376770]
[264.79727173 237.78158569]
[272.58737183 242.55928040]
[274.17507935 249.78042603]
[283.32159424 261.66909790]
[292.46813965 273.55780029]
[301.61468506 285.44647217]
[310.76123047 297.33517456]
[326.11819458 303.08801270]
[328.54730225 319.30627441]
[315.54968262 329.30596924]
[300.49615479 322.80026245]
[298.87252808 306.48168945]
[289.72598267 294.59301758]
[280.57946777 282.70431519]
[271.43292236 270.81564331]
[262.28637695 258.92697144]
[253.04945374 247.10836792]
[243.72268677 235.36053467]
[223.36926270 231.04556274]
[209.17854309 217.90718079]
[204.16625977 200.74998474]
[208.34628296 184.87854004]
[196.05171204 176.28530884]
[183.75715637 167.69207764]
[171.46258545 159.09884644]
[159.16801453 150.50561523]
[146.87345886 141.91238403]
[134.57888794 133.31915283]
[122.28432465 124.72591400]
[110.14039612 131.70385742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 76]
[3 75]
[4 74]
[5 73]
[6 72]
[10 67]
[11 66]
[12 65]
[13 64]
[14 62]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[23 56]
[24 55]
[25 54]
[26 53]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[33 47]
[34 46]
[37 43]
[38 42]
[80 142]
[81 141]
[82 140]
[83 138]
[84 137]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[91 130]
[92 129]
[93 128]
[94 127]
[95 126]
[97 124]
[98 123]
[99 122]
[100 121]
[104 118]
[105 117]
[106 116]
[107 114]
[108 113]
[145 204]
[146 203]
[147 202]
[148 201]
[149 200]
[150 199]
[151 198]
[152 197]
[156 171]
[157 170]
[158 169]
[160 168]
[161 167]
[175 193]
[176 192]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
