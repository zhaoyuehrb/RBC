%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TYROBP)
} def

/sequence { (\
AGACUUCCUCCUUCACUUGCCUGGACGCUGCGCCACAUCCCACCGGCCCUUACACUGUGGUGUCCAGCAGCAUCCGGCUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.124320186 ubox
1 12 0.147320491 ubox
1 13 0.013101487 ubox
1 17 0.037141974 ubox
1 18 0.012348618 ubox
1 79 0.005349143 ubox
1 80 0.003907121 ubox
2 8 0.142619401 ubox
2 10 0.180816658 ubox
2 11 0.168528633 ubox
2 12 0.013103794 ubox
2 13 0.044045712 ubox
2 14 0.155087576 ubox
2 16 0.042438006 ubox
2 17 0.011793803 ubox
2 18 0.013814356 ubox
2 78 0.005499618 ubox
2 79 0.004932342 ubox
2 80 0.010238815 ubox
2 81 0.014329614 ubox
3 9 0.173377922 ubox
3 12 0.047914991 ubox
3 13 0.146058876 ubox
3 17 0.013821948 ubox
3 79 0.010745131 ubox
3 80 0.013551592 ubox
7 77 0.007784297 ubox
8 76 0.007840052 ubox
8 77 0.003259103 ubox
9 77 0.003696452 ubox
10 76 0.004918697 ubox
10 77 0.031439288 ubox
11 76 0.031768060 ubox
11 77 0.007237505 ubox
12 76 0.007031748 ubox
13 77 0.011820734 ubox
14 76 0.015406111 ubox
16 70 0.012226946 ubox
16 77 0.007760323 ubox
17 69 0.008926874 ubox
17 70 0.033022061 ubox
17 76 0.007628587 ubox
18 69 0.042980163 ubox
18 72 0.029260322 ubox
19 68 0.048244860 ubox
19 71 0.031052734 ubox
19 78 0.985144148 ubox
20 67 0.034218958 ubox
20 70 0.030919649 ubox
20 77 0.973581204 ubox
21 67 0.047071161 ubox
21 76 0.959675681 ubox
21 77 0.218759383 ubox
22 66 0.058342895 ubox
22 76 0.272446622 ubox
23 65 0.058489781 ubox
23 74 0.017672168 ubox
23 75 0.997591785 ubox
24 64 0.058490521 ubox
24 73 0.015355983 ubox
24 74 0.998082259 ubox
25 63 0.058467230 ubox
25 73 0.990844539 ubox
26 62 0.058456981 ubox
27 61 0.058386356 ubox
27 68 0.016193117 ubox
27 71 0.997109288 ubox
28 60 0.058398135 ubox
28 67 0.016255720 ubox
28 70 0.998141499 ubox
29 59 0.058152424 ubox
29 66 0.016133031 ubox
29 69 0.997896575 ubox
30 58 0.058196893 ubox
30 63 0.043964134 ubox
30 65 0.013884788 ubox
30 68 0.997187325 ubox
31 57 0.058273853 ubox
31 62 0.083662236 ubox
31 67 0.994494512 ubox
32 47 0.087539852 ubox
32 56 0.015797171 ubox
32 61 0.250108546 ubox
32 63 0.013465326 ubox
32 68 0.005886281 ubox
33 46 0.087969014 ubox
33 60 0.250879603 ubox
33 62 0.011472512 ubox
33 67 0.006469203 ubox
34 45 0.087903361 ubox
34 59 0.250910442 ubox
34 62 0.053764486 ubox
35 58 0.250844810 ubox
35 61 0.053805939 ubox
35 63 0.922127996 ubox
36 57 0.250626108 ubox
36 59 0.004985195 ubox
36 60 0.029072403 ubox
36 62 0.946435907 ubox
37 56 0.232544202 ubox
37 58 0.005614236 ubox
37 61 0.889574402 ubox
37 63 0.120417646 ubox
38 46 0.035040616 ubox
38 57 0.005030189 ubox
38 60 0.307248685 ubox
38 62 0.121565239 ubox
39 45 0.035548550 ubox
39 46 0.122223339 ubox
39 59 0.253610718 ubox
39 60 0.308457224 ubox
40 45 0.122131222 ubox
40 46 0.059298686 ubox
40 59 0.274313029 ubox
40 60 0.855375555 ubox
41 45 0.059035279 ubox
41 57 0.158586655 ubox
41 59 0.886398426 ubox
41 62 0.036702580 ubox
42 56 0.139577821 ubox
42 58 0.901951626 ubox
42 61 0.038967065 ubox
43 57 0.660749744 ubox
43 60 0.040625400 ubox
44 57 0.677617945 ubox
44 59 0.040532294 ubox
45 51 0.018509458 ubox
45 56 0.915961290 ubox
45 58 0.035157777 ubox
45 64 0.013652596 ubox
46 50 0.013640240 ubox
46 55 0.924366123 ubox
46 58 0.017687458 ubox
46 61 0.003204296 ubox
46 63 0.013796954 ubox
47 57 0.021195459 ubox
47 60 0.003817016 ubox
47 62 0.014068235 ubox
48 59 0.003837231 ubox
48 60 0.019593367 ubox
49 59 0.019689129 ubox
49 60 0.005806332 ubox
50 59 0.005584161 ubox
50 60 0.004451231 ubox
50 66 0.004683889 ubox
51 57 0.006184987 ubox
51 59 0.006944345 ubox
51 62 0.007050145 ubox
51 66 0.004267998 ubox
52 56 0.006745053 ubox
52 58 0.010931050 ubox
52 61 0.007967494 ubox
52 63 0.058265652 ubox
53 57 0.011073800 ubox
53 59 0.003613150 ubox
53 60 0.008035642 ubox
53 62 0.062929318 ubox
54 61 0.062882071 ubox
54 63 0.005544386 ubox
55 60 0.062617121 ubox
55 62 0.005917623 ubox
58 66 0.016134853 ubox
59 65 0.017978630 ubox
60 64 0.017695122 ubox
69 79 0.019825011 ubox
70 78 0.026706025 ubox
71 77 0.026761598 ubox
19 78 0.9500000 lbox
20 77 0.9500000 lbox
21 76 0.9500000 lbox
23 75 0.9500000 lbox
24 74 0.9500000 lbox
25 73 0.9500000 lbox
27 71 0.9500000 lbox
28 70 0.9500000 lbox
29 69 0.9500000 lbox
30 68 0.9500000 lbox
31 67 0.9500000 lbox
35 63 0.9500000 lbox
36 62 0.9500000 lbox
37 61 0.9500000 lbox
40 60 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
43 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
showpage
end
%%EOF
