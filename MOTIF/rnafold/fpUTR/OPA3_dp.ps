%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OPA3)
} def

/sequence { (\
ACUGACGCACGCAUGGCCACGAGAGGGCGGGGGAGGAGUGAAGAGGUUGAGGCGCCCCGCCCAGUCAGCAAGGUUGCGCGUGCCCUGUGAGACCGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 88 0.107860968 ubox
2 68 0.005415630 ubox
2 87 0.114364521 ubox
2 91 0.888005269 ubox
2 100 0.030190706 ubox
3 67 0.005494822 ubox
3 87 0.016891545 ubox
3 89 0.011862551 ubox
3 90 0.891053180 ubox
3 95 0.005571015 ubox
3 98 0.049726664 ubox
3 99 0.027392330 ubox
4 66 0.005509172 ubox
4 86 0.032238308 ubox
4 88 0.016202937 ubox
4 94 0.007526884 ubox
4 97 0.054799910 ubox
5 65 0.005505987 ubox
5 81 0.004941364 ubox
5 88 0.892224665 ubox
6 64 0.005495405 ubox
6 80 0.005079409 ubox
6 82 0.012602001 ubox
6 87 0.893329796 ubox
6 89 0.011843976 ubox
6 95 0.020104897 ubox
7 17 0.004240851 ubox
7 79 0.005080429 ubox
7 81 0.013077991 ubox
7 83 0.991674816 ubox
7 86 0.116886934 ubox
7 88 0.008287350 ubox
7 94 0.016552945 ubox
7 96 0.005968983 ubox
8 16 0.004203066 ubox
8 78 0.004918043 ubox
8 80 0.013144128 ubox
8 82 0.999474805 ubox
8 87 0.008222108 ubox
8 89 0.004078695 ubox
8 95 0.005967688 ubox
9 81 0.999304738 ubox
9 86 0.007833438 ubox
9 88 0.004070400 ubox
10 76 0.003894712 ubox
10 78 0.014343886 ubox
10 80 0.999460760 ubox
10 87 0.004058803 ubox
10 89 0.019669240 ubox
11 74 0.004006224 ubox
11 77 0.016057676 ubox
11 79 0.999458822 ubox
11 83 0.011990016 ubox
11 88 0.019889348 ubox
12 73 0.004926732 ubox
12 76 0.016328981 ubox
12 78 0.999244404 ubox
12 82 0.012011425 ubox
12 87 0.019909932 ubox
13 74 0.010549185 ubox
13 75 0.015874597 ubox
13 81 0.012006549 ubox
13 86 0.019720899 ubox
14 21 0.006206791 ubox
14 67 0.007975841 ubox
14 73 0.010531811 ubox
14 76 0.952939719 ubox
14 80 0.011951638 ubox
14 98 0.011294634 ubox
15 20 0.038197434 ubox
15 66 0.008825459 ubox
15 75 0.971686834 ubox
15 77 0.009229663 ubox
15 79 0.011674813 ubox
15 84 0.018556458 ubox
15 85 0.008327318 ubox
15 97 0.012534735 ubox
16 65 0.008812648 ubox
16 69 0.021376056 ubox
16 74 0.995122458 ubox
16 77 0.022363383 ubox
16 83 0.018584718 ubox
16 84 0.008300833 ubox
16 96 0.012535940 ubox
17 64 0.008796481 ubox
17 68 0.021461553 ubox
17 73 0.996189277 ubox
17 76 0.022346952 ubox
17 78 0.003190656 ubox
17 82 0.013379819 ubox
17 95 0.012509522 ubox
18 72 0.994742760 ubox
18 82 0.015363661 ubox
19 65 0.020138251 ubox
19 74 0.021709536 ubox
19 81 0.020064936 ubox
20 64 0.020214726 ubox
20 73 0.022037446 ubox
20 80 0.020097991 ubox
21 66 0.978705078 ubox
21 79 0.015102470 ubox
22 65 0.980134580 ubox
23 66 0.172723863 ubox
24 65 0.164892018 ubox
25 62 0.999654263 ubox
26 61 0.999972999 ubox
26 66 0.005534903 ubox
27 60 0.999977052 ubox
27 65 0.005553355 ubox
28 59 0.999960273 ubox
28 64 0.005553655 ubox
29 58 0.999202052 ubox
29 62 0.003836174 ubox
30 56 0.004156964 ubox
30 57 0.998464628 ubox
30 58 0.038738578 ubox
30 61 0.003847751 ubox
30 62 0.003625548 ubox
31 55 0.005078855 ubox
31 56 0.997521488 ubox
31 57 0.054707181 ubox
31 60 0.003843503 ubox
31 61 0.003637045 ubox
32 55 0.995459141 ubox
32 56 0.066927376 ubox
32 58 0.004634983 ubox
32 60 0.003633463 ubox
33 47 0.004240565 ubox
33 48 0.029926999 ubox
33 55 0.077000304 ubox
33 57 0.004789269 ubox
34 47 0.029741585 ubox
34 48 0.009470081 ubox
35 47 0.013103528 ubox
35 48 0.039710023 ubox
35 56 0.019319997 ubox
35 57 0.003979383 ubox
36 47 0.033555042 ubox
36 48 0.202529493 ubox
36 55 0.026873135 ubox
36 56 0.004432411 ubox
37 47 0.201143189 ubox
37 48 0.208835183 ubox
38 47 0.200578973 ubox
38 53 0.133960802 ubox
38 55 0.030673805 ubox
39 46 0.168001654 ubox
39 49 0.293725613 ubox
39 52 0.134011182 ubox
39 54 0.049320150 ubox
40 48 0.321151089 ubox
40 53 0.049711231 ubox
41 47 0.309337866 ubox
41 48 0.310884137 ubox
42 47 0.301112191 ubox
42 48 0.076583438 ubox
43 47 0.053877693 ubox
45 56 0.005218512 ubox
46 53 0.043306829 ubox
46 55 0.007375273 ubox
47 52 0.041723671 ubox
47 54 0.009510528 ubox
48 54 0.017704204 ubox
49 53 0.018234415 ubox
64 77 0.007470206 ubox
66 76 0.009015596 ubox
67 75 0.009948803 ubox
68 74 0.010200866 ubox
68 77 0.078665559 ubox
68 79 0.005023794 ubox
69 73 0.010163092 ubox
69 76 0.078750638 ubox
69 78 0.005036760 ubox
70 75 0.070949389 ubox
72 94 0.013594135 ubox
73 93 0.013611527 ubox
74 92 0.013594588 ubox
75 91 0.011665667 ubox
77 89 0.013346564 ubox
78 88 0.013599586 ubox
79 87 0.013605423 ubox
80 86 0.011320709 ubox
85 91 0.035694120 ubox
85 100 0.099443962 ubox
86 90 0.032260857 ubox
86 95 0.021691255 ubox
86 98 0.098367334 ubox
86 99 0.092940511 ubox
87 93 0.022176137 ubox
87 94 0.029118003 ubox
87 96 0.357998742 ubox
87 97 0.078516201 ubox
88 92 0.020216030 ubox
88 95 0.366282321 ubox
88 98 0.042947380 ubox
89 94 0.364164366 ubox
89 97 0.048598738 ubox
2 91 0.9500000 lbox
3 90 0.9500000 lbox
5 88 0.9500000 lbox
6 87 0.9500000 lbox
7 83 0.9500000 lbox
8 82 0.9500000 lbox
9 81 0.9500000 lbox
10 80 0.9500000 lbox
11 79 0.9500000 lbox
12 78 0.9500000 lbox
14 76 0.9500000 lbox
15 75 0.9500000 lbox
16 74 0.9500000 lbox
17 73 0.9500000 lbox
18 72 0.9500000 lbox
21 66 0.9500000 lbox
22 65 0.9500000 lbox
25 62 0.9500000 lbox
26 61 0.9500000 lbox
27 60 0.9500000 lbox
28 59 0.9500000 lbox
29 58 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
32 55 0.9500000 lbox
showpage
end
%%EOF
