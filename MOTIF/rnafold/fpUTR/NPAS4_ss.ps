%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAUAUAAGGCGGCGUGAGGCAGGCGAGGGGGGCAGCGCAGCCGAGCGGAGCCCAGGAGAGCAGAGAGCGAGCCUGAGCGAGAGACGGGGAAGCACGGAGGAGGAAGCCGCCGGUGCGUCGGGACGGGAGCGCAGGUGCUCGGGCACCCGAGCUGGAGCUCCGCAGCCGCCGGUC\
) } def
/len { sequence length } bind def

/coor [
[98.06752014 497.25781250]
[83.56488800 501.81213379]
[68.42376709 500.46487427]
[54.95308685 493.42150879]
[45.20701981 481.75607300]
[40.67176819 467.24743652]
[42.03893280 452.10812378]
[49.10002136 438.64669800]
[60.77827835 428.91598511]
[75.29284668 424.39984131]
[76.62228394 409.45886230]
[77.95172119 394.51788330]
[79.28115845 379.57693481]
[80.61059570 364.63595581]
[81.94003296 349.69497681]
[83.13682556 334.74279785]
[84.20087433 319.78057861]
[85.26492310 304.81838989]
[78.44995117 291.57431030]
[87.14669800 278.35775757]
[88.21075439 263.39553833]
[89.27480316 248.43333435]
[79.54991913 231.74162292]
[91.01695251 215.18731689]
[91.54931641 200.19677734]
[92.08167267 185.20622253]
[81.77371216 174.51596069]
[82.10005951 159.30583191]
[93.38287354 148.56637573]
[93.91522980 133.57582092]
[94.44759369 118.58528137]
[83.88816071 107.93171692]
[68.89347839 108.33102417]
[53.89879227 108.73033142]
[38.90410995 109.12963867]
[28.06494904 120.31670380]
[12.85251808 120.50804901]
[2.25416279 110.10562897]
[-12.74052143 110.50493622]
[-27.73520470 110.90424347]
[-38.42582703 122.54409790]
[-54.21918106 123.13182068]
[-65.74536133 112.31874084]
[-66.16607666 96.52005005]
[-55.23173141 85.10884094]
[-39.42948151 84.85517883]
[-28.13451385 95.90956116]
[-13.13982964 95.51025391]
[1.85485494 95.11093903]
[11.88455009 84.15919495]
[27.08560371 83.54063416]
[38.50480270 94.13495636]
[53.49948502 93.73564911]
[68.49417114 93.33634186]
[83.48885345 92.93703461]
[69.75019836 86.91629028]
[63.59549713 73.23712158]
[68.20244598 58.96210861]
[81.19245911 51.46147156]
[95.85876465 54.60780334]
[104.62911987 66.77664948]
[102.97442627 81.68703461]
[110.81758118 68.90090942]
[106.18915558 56.23218918]
[109.66139221 43.40075302]
[119.74693298 35.04350662]
[132.61169434 34.04594803]
[140.68054199 21.40104103]
[148.74938965 8.75613308]
[156.81823730 -3.88877487]
[157.49743652 -10.51605511]
[160.92359924 -15.09944153]
[165.40457153 -16.83217812]
[173.91711426 -29.18275070]
[182.42965698 -41.53332138]
[190.94219971 -53.88389206]
[199.45474243 -66.23446655]
[200.91569519 -81.98807526]
[214.50914001 -88.07640839]
[223.02168274 -100.42697906]
[217.36351013 -110.45790863]
[215.87895203 -121.82666779]
[218.74574280 -132.87463379]
[225.50965881 -142.00450134]
[235.15589905 -147.91119385]
[246.26127625 -149.76840210]
[257.20410156 -147.34391785]
[266.36190796 -159.22393799]
[263.19952393 -177.87844849]
[274.45776367 -192.68692017]
[292.64480591 -194.56301880]
[301.37521362 -206.76055908]
[303.11553955 -222.48574829]
[316.81488037 -228.33186340]
[325.54528809 -240.52941895]
[334.27569580 -252.72695923]
[343.00610352 -264.92449951]
[351.62789917 -277.19903564]
[360.14044189 -289.54962158]
[361.60140991 -305.30322266]
[375.19485474 -311.39157104]
[383.70739746 -323.74212646]
[380.60183716 -339.23828125]
[389.43273926 -352.34518433]
[404.96087646 -355.28674316]
[417.97366333 -346.31774902]
[420.75088501 -330.75939941]
[411.64480591 -317.84213257]
[396.05795288 -315.22958374]
[387.54541016 -302.87902832]
[386.69332886 -288.00881958]
[372.49102783 -281.03707886]
[363.97848511 -268.68649292]
[362.76766968 -261.37182617]
[355.20364380 -256.19409180]
[346.47323608 -243.99655151]
[337.74282837 -231.79901123]
[329.01242065 -219.60147095]
[327.89657593 -204.74871826]
[313.57275391 -198.03015137]
[304.84234619 -185.83261108]
[309.11132812 -175.21307373]
[307.69506836 -163.73457336]
[300.83184814 -154.27677917]
[290.14096069 -149.26887512]
[278.24191284 -150.06613159]
[269.08410645 -138.18612671]
[275.39447021 -120.62757111]
[269.83819580 -102.65944672]
[254.47549438 -91.55265045]
[235.37225342 -91.91443634]
[226.85971069 -79.56386566]
[226.00761414 -64.69364929]
[211.80531311 -57.72192383]
[203.29277039 -45.37135315]
[194.78022766 -33.02077866]
[186.26768494 -20.67020798]
[177.75514221 -8.31963634]
[169.46313477 4.18007278]
[161.39428711 16.82498169]
[153.32543945 29.46988869]
[145.25659180 42.11479568]
[149.58824158 58.35062027]
[140.67466736 72.99183655]
[123.60369873 76.74406433]
[115.76055145 89.53018188]
[119.42937469 105.22948456]
[109.43814850 119.11763763]
[108.90578461 134.10818481]
[108.37342072 149.09873962]
[118.86598969 160.61151123]
[118.11254883 175.80647278]
[107.07222748 185.73858643]
[106.53986359 200.72912598]
[106.00749969 215.71968079]
[113.89472961 223.26672363]
[116.26033020 233.69821167]
[112.55550385 243.49763489]
[104.23701477 249.49739075]
[103.17296600 264.45959473]
[102.10890961 279.42181396]
[108.84777832 293.73608398]
[100.22714233 305.88244629]
[99.16308594 320.84463501]
[98.09903717 335.80685425]
[100.61743927 344.62054443]
[96.88100433 351.02441406]
[95.55156708 365.96539307]
[94.22212982 380.90637207]
[92.89269257 395.84732056]
[91.56325531 410.78829956]
[90.23381805 425.72927856]
[103.72298431 432.73718262]
[113.49971008 444.37695312]
[118.07311249 458.87359619]
[116.74578857 474.01644897]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[15 167]
[16 165]
[17 164]
[18 163]
[20 161]
[21 160]
[22 159]
[24 155]
[25 154]
[26 153]
[29 150]
[30 149]
[31 148]
[32 55]
[33 54]
[34 53]
[35 52]
[38 49]
[39 48]
[40 47]
[62 146]
[63 145]
[67 142]
[68 141]
[69 140]
[70 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[79 132]
[80 131]
[87 127]
[88 126]
[91 121]
[92 120]
[94 118]
[95 117]
[96 116]
[97 115]
[98 113]
[99 112]
[101 110]
[102 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
