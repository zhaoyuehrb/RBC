%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IQCC)
} def

/sequence { (\
AAUGACGUACUUCGCAGGCGCGCGGGCGGGCCUGGCAGUUGGCGCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.006209847 ubox
1 40 0.004947371 ubox
2 8 0.012525704 ubox
2 11 0.007674819 ubox
2 39 0.005258636 ubox
3 7 0.011902296 ubox
3 9 0.007019599 ubox
3 14 0.083445637 ubox
3 16 0.227684989 ubox
3 22 0.032828970 ubox
3 24 0.012788122 ubox
3 37 0.004052094 ubox
3 38 0.005036369 ubox
3 41 0.021031326 ubox
3 44 0.125290474 ubox
4 8 0.006647233 ubox
4 12 0.009430908 ubox
4 13 0.122267823 ubox
4 15 0.254513396 ubox
4 21 0.046397710 ubox
4 23 0.093346966 ubox
4 27 0.003445201 ubox
4 36 0.004468599 ubox
4 40 0.038155991 ubox
4 43 0.166429251 ubox
5 11 0.010506401 ubox
5 12 0.114420518 ubox
5 39 0.039431435 ubox
6 14 0.288955527 ubox
6 20 0.057339456 ubox
6 22 0.130703363 ubox
6 24 0.013044990 ubox
6 28 0.052096853 ubox
6 38 0.039433926 ubox
6 41 0.211068210 ubox
6 44 0.830924933 ubox
7 13 0.289040732 ubox
7 15 0.060152566 ubox
7 19 0.058958954 ubox
7 21 0.131971142 ubox
7 23 0.017847757 ubox
7 27 0.069785404 ubox
7 36 0.025266643 ubox
7 40 0.199575880 ubox
7 43 0.846670958 ubox
7 45 0.087817832 ubox
8 14 0.059100696 ubox
8 18 0.056449485 ubox
8 20 0.130233871 ubox
8 22 0.012090251 ubox
8 26 0.066274249 ubox
8 35 0.025205715 ubox
8 41 0.122002232 ubox
8 42 0.823286424 ubox
8 44 0.086945691 ubox
9 39 0.636478613 ubox
9 40 0.145656292 ubox
10 17 0.067085359 ubox
10 18 0.121467682 ubox
10 25 0.070666024 ubox
10 26 0.022665130 ubox
10 35 0.009611220 ubox
10 38 0.669569429 ubox
10 42 0.081122631 ubox
11 16 0.061729646 ubox
11 17 0.119573444 ubox
11 18 0.004076321 ubox
11 24 0.069875275 ubox
11 25 0.019697417 ubox
11 26 0.032707454 ubox
11 34 0.003991941 ubox
11 35 0.004344217 ubox
11 37 0.611016532 ubox
11 38 0.199275850 ubox
11 41 0.080599665 ubox
12 16 0.091259484 ubox
12 17 0.005567494 ubox
12 18 0.007482118 ubox
12 24 0.015230796 ubox
12 25 0.049873807 ubox
12 35 0.049805195 ubox
12 37 0.272983160 ubox
12 41 0.004341967 ubox
12 42 0.010156129 ubox
13 17 0.008036613 ubox
13 20 0.006637449 ubox
13 22 0.127810430 ubox
13 24 0.063754708 ubox
13 34 0.030470917 ubox
13 41 0.014965449 ubox
13 44 0.053298404 ubox
14 19 0.007642149 ubox
14 21 0.132972712 ubox
14 23 0.076055291 ubox
14 33 0.014257630 ubox
14 36 0.513468655 ubox
14 39 0.006355260 ubox
14 40 0.012178649 ubox
14 43 0.056352768 ubox
14 45 0.007245881 ubox
15 20 0.132798103 ubox
15 22 0.076021814 ubox
15 34 0.828781515 ubox
15 35 0.371294851 ubox
15 38 0.005358282 ubox
15 41 0.005335687 ubox
15 42 0.055782153 ubox
15 44 0.006517762 ubox
16 33 0.905849796 ubox
16 40 0.006883511 ubox
17 32 0.912879602 ubox
17 33 0.003316875 ubox
17 39 0.006717652 ubox
17 40 0.043261623 ubox
17 46 0.166512464 ubox
17 47 0.290187117 ubox
18 27 0.011561916 ubox
18 31 0.912885413 ubox
18 39 0.054820217 ubox
18 45 0.166853222 ubox
18 46 0.292667145 ubox
19 26 0.011572304 ubox
19 28 0.045148233 ubox
19 30 0.911690724 ubox
19 38 0.054984667 ubox
19 44 0.166790031 ubox
20 27 0.109644443 ubox
20 36 0.052946472 ubox
20 43 0.166054940 ubox
20 45 0.299700790 ubox
21 26 0.110011636 ubox
21 28 0.905699925 ubox
21 35 0.053106803 ubox
21 38 0.003461351 ubox
21 41 0.013426122 ubox
21 42 0.165246207 ubox
21 44 0.299830085 ubox
22 27 0.882449455 ubox
22 31 0.007975975 ubox
22 36 0.089562775 ubox
22 39 0.051004917 ubox
22 40 0.015002366 ubox
22 43 0.300087513 ubox
23 30 0.007986809 ubox
23 34 0.076869394 ubox
23 35 0.075154262 ubox
23 38 0.053384284 ubox
23 41 0.087304844 ubox
23 42 0.300112216 ubox
24 32 0.020662127 ubox
24 33 0.092294516 ubox
24 40 0.079990560 ubox
24 46 0.010047528 ubox
24 47 0.185694455 ubox
25 31 0.020723378 ubox
25 32 0.095880325 ubox
25 33 0.048825021 ubox
25 39 0.063234027 ubox
25 40 0.298640647 ubox
25 45 0.010050461 ubox
25 46 0.190545345 ubox
26 31 0.095351346 ubox
26 32 0.048516874 ubox
26 36 0.121652299 ubox
26 39 0.302805726 ubox
26 43 0.011853884 ubox
26 45 0.190646474 ubox
27 34 0.012583029 ubox
27 35 0.121574965 ubox
27 38 0.303951377 ubox
27 42 0.011906638 ubox
27 44 0.189961136 ubox
28 33 0.011074836 ubox
28 43 0.082445766 ubox
28 46 0.057230118 ubox
28 47 0.055137387 ubox
29 40 0.021589614 ubox
29 45 0.059552657 ubox
29 46 0.063024219 ubox
30 36 0.283379414 ubox
30 39 0.026514325 ubox
30 43 0.185939404 ubox
30 45 0.062839273 ubox
31 35 0.281609253 ubox
31 38 0.026680853 ubox
31 42 0.201481313 ubox
31 44 0.062627365 ubox
32 38 0.010787222 ubox
32 41 0.201711191 ubox
32 42 0.054528392 ubox
33 37 0.010067196 ubox
33 41 0.053981121 ubox
34 40 0.046127077 ubox
34 43 0.006411954 ubox
34 46 0.078152029 ubox
35 39 0.030722261 ubox
35 43 0.134824408 ubox
35 45 0.103862631 ubox
35 46 0.004499747 ubox
36 42 0.134865710 ubox
36 44 0.103974074 ubox
38 45 0.021839571 ubox
39 44 0.020675394 ubox
41 47 0.028592283 ubox
42 46 0.028808526 ubox
6 44 0.9500000 lbox
7 43 0.9500000 lbox
8 42 0.9500000 lbox
9 39 0.9500000 lbox
10 38 0.9500000 lbox
11 37 0.9500000 lbox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
showpage
end
%%EOF
