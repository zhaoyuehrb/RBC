%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POGLUT1)
} def

/sequence { (\
GUGCUGCGGCUCCCGGGCCAUCUUUGUGCGGGGCCGCGCUUCCGCCAGCGCCGCAGCGGGGAAUCUGCAGUAGGUCUGCCGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.089281625 ubox
1 45 0.010397105 ubox
1 51 0.012614920 ubox
1 83 0.023943508 ubox
2 38 0.084329473 ubox
2 44 0.010412001 ubox
2 50 0.012652453 ubox
2 58 0.020931844 ubox
2 72 0.013219435 ubox
2 82 0.019630947 ubox
2 84 0.025598292 ubox
3 37 0.049864450 ubox
3 39 0.932858900 ubox
3 43 0.011330292 ubox
3 45 0.005639560 ubox
3 49 0.014915936 ubox
3 57 0.028985567 ubox
3 71 0.014472249 ubox
3 83 0.043540846 ubox
4 36 0.045552380 ubox
4 38 0.913379544 ubox
4 44 0.005747717 ubox
4 48 0.014943694 ubox
4 56 0.029099979 ubox
4 70 0.014550957 ubox
4 82 0.043289960 ubox
5 38 0.318275429 ubox
5 47 0.014093916 ubox
5 55 0.029103442 ubox
5 69 0.014542691 ubox
5 81 0.034842428 ubox
6 37 0.997678954 ubox
6 39 0.003319866 ubox
6 46 0.006132705 ubox
6 54 0.029111743 ubox
6 68 0.014493887 ubox
6 80 0.009523911 ubox
7 36 0.998359766 ubox
7 53 0.029090099 ubox
7 67 0.014487553 ubox
7 78 0.003799918 ubox
8 19 0.008353250 ubox
8 35 0.999687384 ubox
8 52 0.017370768 ubox
8 66 0.013072971 ubox
9 18 0.008370469 ubox
9 34 0.999734843 ubox
9 51 0.015586177 ubox
9 65 0.013032852 ubox
10 17 0.008364513 ubox
10 33 0.993617282 ubox
10 50 0.015509983 ubox
11 16 0.007688945 ubox
11 32 0.170596848 ubox
11 33 0.109688268 ubox
11 61 0.005070003 ubox
11 62 0.011858869 ubox
12 31 0.147476840 ubox
12 32 0.985058562 ubox
12 60 0.005321582 ubox
12 61 0.012073975 ubox
13 30 0.119803274 ubox
13 31 0.988911032 ubox
13 32 0.003525340 ubox
13 59 0.005346005 ubox
13 60 0.012064314 ubox
14 26 0.005144395 ubox
14 28 0.021359284 ubox
14 30 0.992605527 ubox
14 31 0.003603025 ubox
14 58 0.005367035 ubox
14 59 0.012043728 ubox
15 23 0.004391696 ubox
15 24 0.003540036 ubox
15 25 0.005039187 ubox
15 27 0.019155104 ubox
15 29 0.994400680 ubox
15 57 0.005072025 ubox
16 22 0.005755983 ubox
16 23 0.007742776 ubox
16 24 0.005310544 ubox
16 25 0.005107119 ubox
17 21 0.003737080 ubox
17 22 0.007702911 ubox
17 23 0.004449392 ubox
17 24 0.004755020 ubox
17 27 0.987432032 ubox
17 29 0.098873944 ubox
17 57 0.011411927 ubox
18 26 0.901075984 ubox
18 28 0.102043754 ubox
18 56 0.011427690 ubox
19 26 0.425044972 ubox
19 28 0.036089510 ubox
20 25 0.566844429 ubox
20 27 0.036476016 ubox
21 26 0.033896747 ubox
21 62 0.008331074 ubox
22 61 0.008901591 ubox
23 60 0.008893761 ubox
24 59 0.008860357 ubox
25 58 0.009085856 ubox
26 57 0.009135197 ubox
27 55 0.014428888 ubox
27 56 0.005351309 ubox
28 54 0.015748858 ubox
29 53 0.015758597 ubox
30 52 0.015760405 ubox
31 51 0.015757139 ubox
33 49 0.020478483 ubox
34 48 0.020471986 ubox
36 45 0.021112995 ubox
36 49 0.003572673 ubox
36 51 0.024856509 ubox
37 44 0.021168498 ubox
37 48 0.003564738 ubox
37 50 0.025039288 ubox
38 43 0.020783867 ubox
38 45 0.017519991 ubox
38 49 0.027937842 ubox
38 68 0.003442576 ubox
38 83 0.024545523 ubox
39 44 0.017548919 ubox
39 48 0.028007333 ubox
39 61 0.006279198 ubox
39 67 0.003454380 ubox
39 82 0.022392971 ubox
40 47 0.026441085 ubox
40 60 0.004491055 ubox
40 61 0.023607223 ubox
40 62 0.004876579 ubox
40 63 0.064046189 ubox
40 81 0.018102686 ubox
41 60 0.028789806 ubox
41 61 0.004315806 ubox
41 62 0.073731325 ubox
41 82 0.007735374 ubox
42 59 0.031213943 ubox
42 60 0.003806671 ubox
42 61 0.074693900 ubox
42 81 0.010177375 ubox
42 82 0.260833453 ubox
43 58 0.031313074 ubox
43 60 0.074611253 ubox
43 81 0.264441053 ubox
43 84 0.897265690 ubox
44 57 0.031406534 ubox
44 79 0.027373247 ubox
44 80 0.263421031 ubox
44 83 0.959173801 ubox
45 56 0.031365926 ubox
45 59 0.074047185 ubox
45 60 0.003245461 ubox
45 61 0.003423947 ubox
45 78 0.023754616 ubox
45 82 0.959309851 ubox
46 58 0.073795230 ubox
46 59 0.003679847 ubox
46 60 0.003453374 ubox
46 78 0.265403473 ubox
46 81 0.958036681 ubox
47 77 0.271457094 ubox
48 54 0.030003832 ubox
48 57 0.074458773 ubox
48 76 0.271202229 ubox
48 79 0.956290507 ubox
49 53 0.029821502 ubox
49 56 0.074476266 ubox
49 58 0.009323422 ubox
49 74 0.010708342 ubox
49 78 0.954159097 ubox
49 84 0.030666317 ubox
50 57 0.010901996 ubox
50 71 0.013516122 ubox
50 75 0.895495932 ubox
50 77 0.351129944 ubox
50 83 0.035888268 ubox
51 56 0.010870364 ubox
51 59 0.006917582 ubox
51 60 0.004849783 ubox
51 70 0.014552686 ubox
51 74 0.994033298 ubox
51 82 0.035901358 ubox
52 58 0.006973370 ubox
52 59 0.004881702 ubox
52 73 0.993831924 ubox
52 81 0.035899830 ubox
52 84 0.011477729 ubox
53 57 0.006529895 ubox
53 68 0.063493836 ubox
53 71 0.847549889 ubox
53 75 0.006858656 ubox
53 79 0.012335809 ubox
53 80 0.032985011 ubox
53 83 0.012268245 ubox
54 67 0.063531265 ubox
54 70 0.905057287 ubox
54 74 0.006947091 ubox
54 78 0.017417959 ubox
54 82 0.012250891 ubox
55 66 0.063453674 ubox
55 77 0.017187945 ubox
56 65 0.063103046 ubox
56 68 0.991882307 ubox
56 71 0.004173033 ubox
56 76 0.012765603 ubox
56 79 0.032349272 ubox
56 83 0.003563966 ubox
57 67 0.993265092 ubox
57 70 0.004296413 ubox
57 74 0.006489691 ubox
57 78 0.032473483 ubox
57 81 0.007547648 ubox
57 82 0.003411560 ubox
58 65 0.039433653 ubox
58 66 0.990720159 ubox
58 77 0.031971362 ubox
58 80 0.011683993 ubox
59 64 0.036227834 ubox
59 65 0.989557851 ubox
59 66 0.039440571 ubox
59 76 0.031788848 ubox
59 79 0.011663255 ubox
59 80 0.005737398 ubox
60 64 0.641031160 ubox
60 65 0.054813678 ubox
60 66 0.007451055 ubox
60 75 0.021163120 ubox
60 77 0.011569229 ubox
60 79 0.005665228 ubox
60 80 0.003687673 ubox
61 65 0.008592675 ubox
61 76 0.013313880 ubox
61 79 0.003588908 ubox
62 75 0.009690331 ubox
63 71 0.003187185 ubox
63 75 0.027728410 ubox
64 70 0.003304695 ubox
64 74 0.033985633 ubox
64 82 0.041913540 ubox
65 73 0.034394590 ubox
65 74 0.007222714 ubox
65 81 0.061225354 ubox
65 82 0.028757848 ubox
66 72 0.034067976 ubox
66 73 0.007115865 ubox
66 81 0.029105546 ubox
66 84 0.004452865 ubox
67 71 0.028362472 ubox
67 79 0.083151189 ubox
67 80 0.021055624 ubox
67 83 0.008030044 ubox
68 78 0.085916950 ubox
68 82 0.008029636 ubox
69 77 0.085975565 ubox
70 76 0.085878712 ubox
70 79 0.008692768 ubox
70 83 0.004424384 ubox
71 78 0.008660293 ubox
71 82 0.004218151 ubox
72 77 0.007934442 ubox
73 80 0.008370615 ubox
74 79 0.008332411 ubox
74 83 0.013730602 ubox
75 82 0.013716747 ubox
76 81 0.013618060 ubox
3 39 0.9500000 lbox
4 38 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
43 84 0.9500000 lbox
44 83 0.9500000 lbox
45 82 0.9500000 lbox
46 81 0.9500000 lbox
48 79 0.9500000 lbox
49 78 0.9500000 lbox
50 75 0.9500000 lbox
51 74 0.9500000 lbox
52 73 0.9500000 lbox
53 71 0.9500000 lbox
54 70 0.9500000 lbox
56 68 0.9500000 lbox
57 67 0.9500000 lbox
58 66 0.9500000 lbox
59 65 0.9500000 lbox
showpage
end
%%EOF
