%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCCGUCAAGUGCGUAAUGACGUAUCAAUCUCCUGAAGACCCCGGAAGUGCAACUCGAACUUGGUCGGGGCGCGGAUCCCGAGAGGGAAAGUCAUAACAACCGCACGAGGGAGUUCGACUGGCGAACUGGAAGGCCACGCCUCCUCCCGCCUGCCCCCUCAGCCCUGUGGCUGGGGGCAGAGCUCAGACUGUCUUCUGAAGAUUG\
) } def
/len { sequence length } bind def

/coor [
[50.88424683 295.13949585]
[65.22563934 299.53543091]
[76.29885101 309.65393066]
[81.96657562 323.54193115]
[81.13484192 338.51885986]
[73.96418762 351.69390869]
[61.83867645 360.52407837]
[47.09871674 363.30502319]
[32.58935928 359.49993896]
[21.11114311 349.84332275]
[14.87954807 336.19900513]
[15.09737396 321.20056152]
[6.76382065 333.67260742]
[-1.56973302 346.14465332]
[-9.90328693 358.61669922]
[-18.23683929 371.08874512]
[-26.57039261 383.56079102]
[-27.10243797 399.95129395]
[-41.68870926 407.44613647]
[-55.32410431 398.33526611]
[-53.98169327 381.99114990]
[-39.04243851 375.22723389]
[-30.70888329 362.75518799]
[-22.37532997 350.28314209]
[-14.04177761 337.81109619]
[-5.70822382 325.33905029]
[2.62532973 312.86700439]
[9.79598141 299.69198608]
[15.74488163 285.92205811]
[21.69378090 272.15213013]
[27.64268112 258.38223267]
[33.59158325 244.61230469]
[39.54048157 230.84239197]
[31.80442047 218.14233398]
[33.04474258 203.14482117]
[42.99464417 191.61863708]
[57.99705887 188.12097168]
[63.94596100 174.35104370]
[69.89485931 160.58113098]
[75.84375763 146.81121826]
[81.79266357 133.04130554]
[87.74156189 119.27138519]
[80.47161865 106.15087128]
[65.64238739 103.89390564]
[50.81315613 101.63693237]
[35.98392487 99.37996674]
[21.15469360 97.12300110]
[6.29306698 95.09025574]
[-8.59756565 93.28221130]
[-23.48819923 91.47415924]
[-38.37883377 89.66610718]
[-48.14365387 101.60980225]
[-62.82263947 106.35647583]
[-77.73178101 102.39148712]
[-88.11361694 90.98004913]
[-90.65534973 75.76350403]
[-84.54592133 61.59740448]
[-71.73481750 53.00209808]
[-56.31003189 52.72031403]
[-43.19354248 60.84196854]
[-36.57078171 74.77547455]
[-21.68014908 76.58352661]
[-6.78951597 78.39157867]
[8.10111713 80.19962311]
[12.34797573 78.01020050]
[18.01559258 78.46701050]
[23.41166115 82.29376984]
[38.24089432 84.55073547]
[53.07012558 86.80770111]
[67.89935303 89.06467438]
[82.72858429 91.32164001]
[78.30732727 87.29134369]
[74.35353851 82.66886139]
[70.92424011 77.49893188]
[64.76804352 63.82043457]
[58.61185455 50.14193726]
[52.45566177 36.46343994]
[43.22221756 29.32273483]
[42.75720215 18.96002769]
[34.42364883 6.48798418]
[26.09009361 -5.98405981]
[17.75654030 -18.45610428]
[2.81728435 -25.22002792]
[1.47487485 -41.56414032]
[15.11026764 -50.67501831]
[29.69653893 -43.18017197]
[30.22858429 -26.78965759]
[38.56213760 -14.31761360]
[46.89569092 -1.84556925]
[55.22924423 10.62647533]
[55.80556870 -4.36244917]
[62.61627197 -17.72711563]
[74.40499115 -27.00214577]
[88.99705505 -30.47657394]
[103.70066833 -27.50947380]
[115.80345917 -18.64818764]
[123.07283020 -5.52735281]
[124.16779327 9.43262863]
[118.88636780 23.47209167]
[108.20281219 34.00117874]
[94.08792114 39.07758713]
[79.14546967 37.76487350]
[66.13415527 30.30724907]
[72.29035187 43.98574829]
[78.44654083 57.66424561]
[84.60273743 71.34274292]
[91.96946716 72.75032806]
[94.78486633 58.01691055]
[109.51823425 60.83253860]
[106.70292664 75.56549835]
[114.06965637 76.97308350]
[124.83523560 66.52788544]
[135.60083008 56.08268738]
[144.94052124 44.34513092]
[152.70057678 31.50841331]
[160.46064758 18.67169380]
[168.22071838 5.83497429]
[175.98078918 -7.00174475]
[183.74084473 -19.83846283]
[181.31303406 -35.69675064]
[192.30323792 -47.38413620]
[208.28071594 -45.93506241]
[216.98890686 -32.46112823]
[211.74765015 -17.29838753]
[196.57757568 -12.07839680]
[188.81750488 0.75832266]
[181.05743408 13.59504128]
[173.29736328 26.43176079]
[165.53730774 39.26847839]
[157.77723694 52.10519791]
[168.30343628 62.79159927]
[181.25588989 55.22629166]
[194.20834351 47.66098404]
[200.04196167 40.62887573]
[207.41404724 40.08092499]
[220.47929382 32.71210861]
[233.54454041 25.34328842]
[244.37037659 12.29578304]
[259.90487671 19.08664131]
[257.67977905 35.89393997]
[240.91336060 38.40852737]
[227.84811401 45.77734756]
[214.78286743 53.14616776]
[201.77365112 60.61344147]
[188.82119751 68.17874908]
[175.86874390 75.74405670]
[156.99082947 76.31571960]
[146.04602051 66.84827423]
[135.28044128 77.29347229]
[124.51485443 87.73867035]
[127.55222321 102.42793274]
[141.57746887 107.74700165]
[155.64248657 112.96000671]
[169.74645996 118.06665039]
[183.85043335 123.17328644]
[197.95442200 128.27992249]
[212.05839539 133.38656616]
[226.16236877 138.49320984]
[240.26635742 143.59985352]
[254.37033081 148.70648193]
[260.93923950 147.92486572]
[266.13571167 150.23300171]
[268.81924438 154.18623352]
[282.76254272 159.71652222]
[296.70584106 165.24681091]
[310.64916992 170.77711487]
[326.78625488 167.85725403]
[337.17556763 180.54560852]
[331.12942505 195.78950500]
[314.86761475 197.90731812]
[305.11886597 184.72041321]
[291.17556763 179.19012451]
[277.23223877 173.65983582]
[263.28894043 168.12954712]
[249.26368713 162.81047058]
[235.15971375 157.70382690]
[221.05574036 152.59718323]
[206.95175171 147.49053955]
[192.84777832 142.38391113]
[178.74380493 137.27726746]
[164.63981628 132.17062378]
[150.53584290 127.06398773]
[143.17465210 127.74276733]
[136.25839233 121.77224731]
[122.23314667 116.45317078]
[135.83183289 122.78371429]
[142.71000671 136.11378479]
[139.98924255 150.86497498]
[128.80816650 160.86413574]
[113.84584808 161.92680359]
[101.36380005 153.60824585]
[96.58554077 139.38964844]
[101.51147461 125.22028351]
[95.56257629 138.99020386]
[89.61367798 152.76011658]
[83.66477966 166.53002930]
[77.71587372 180.29995728]
[71.76697540 194.06987000]
[79.50324249 207.39114380]
[77.93049622 222.53643799]
[67.86033630 233.71926880]
[53.31039810 236.79129028]
[47.36149979 250.56120300]
[41.41259766 264.33111572]
[35.46369934 278.10104370]
[29.51479721 291.87097168]
[23.56589699 305.64086914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[33 202]
[37 198]
[38 197]
[39 196]
[40 195]
[41 194]
[42 193]
[43 71]
[44 70]
[45 69]
[46 68]
[47 67]
[48 64]
[49 63]
[50 62]
[51 61]
[74 106]
[75 105]
[76 104]
[77 103]
[79 90]
[80 89]
[81 88]
[82 87]
[111 150]
[112 149]
[113 148]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[119 125]
[131 146]
[132 145]
[133 144]
[135 143]
[136 142]
[137 141]
[151 185]
[152 184]
[153 182]
[154 181]
[155 180]
[156 179]
[157 178]
[158 177]
[159 176]
[160 175]
[163 174]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
