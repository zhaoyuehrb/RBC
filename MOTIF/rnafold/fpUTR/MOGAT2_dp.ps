%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MOGAT2)
} def

/sequence { (\
AAAAACCUGUGGGUGCCUCAGACCACAGCAGAGCUCACAGAACCUGCGGGAGCCAGGCUGACCCGCCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
6 50 0.029226129 ubox
7 21 0.006484162 ubox
7 28 0.138590930 ubox
7 31 0.043328097 ubox
7 33 0.003395343 ubox
7 40 0.913695498 ubox
7 49 0.029357053 ubox
7 69 0.319362021 ubox
8 20 0.006502786 ubox
8 27 0.140636934 ubox
8 30 0.043389616 ubox
8 32 0.003362845 ubox
8 39 0.916454641 ubox
8 48 0.029312736 ubox
8 68 0.322122322 ubox
9 19 0.006494246 ubox
9 26 0.141357007 ubox
9 29 0.043292784 ubox
9 38 0.917156786 ubox
9 47 0.029312278 ubox
9 66 0.287749336 ubox
9 67 0.229342781 ubox
9 70 0.009746169 ubox
10 25 0.141217461 ubox
10 27 0.029057883 ubox
10 28 0.031735275 ubox
10 30 0.003321881 ubox
10 37 0.916978245 ubox
10 46 0.029250281 ubox
10 65 0.366711023 ubox
10 69 0.009363389 ubox
11 17 0.006396582 ubox
11 24 0.139395411 ubox
11 26 0.035989126 ubox
11 29 0.003338922 ubox
11 35 0.003992686 ubox
11 36 0.917003075 ubox
11 45 0.029189524 ubox
11 64 0.368458051 ubox
12 16 0.006307737 ubox
12 23 0.137427943 ubox
12 24 0.072466047 ubox
12 34 0.025581450 ubox
12 35 0.913104248 ubox
12 36 0.012003026 ubox
12 44 0.029304360 ubox
12 63 0.368463106 ubox
12 67 0.013906736 ubox
13 23 0.076184984 ubox
13 26 0.026274970 ubox
13 34 0.911045639 ubox
13 35 0.015629878 ubox
13 43 0.029253435 ubox
13 62 0.368395442 ubox
13 66 0.014032753 ubox
14 20 0.048930373 ubox
14 22 0.079286947 ubox
14 25 0.029451777 ubox
14 27 0.008936251 ubox
14 30 0.343013299 ubox
14 33 0.778770058 ubox
14 37 0.003767979 ubox
14 42 0.028826465 ubox
14 60 0.038441378 ubox
14 61 0.345024844 ubox
14 65 0.014073868 ubox
15 19 0.051438390 ubox
15 24 0.037463105 ubox
15 26 0.015244990 ubox
15 29 0.586371909 ubox
15 34 0.076826213 ubox
15 36 0.004856824 ubox
15 58 0.338031034 ubox
15 59 0.011513521 ubox
15 64 0.014033487 ubox
16 28 0.562865324 ubox
16 33 0.065335993 ubox
16 57 0.339199200 ubox
17 28 0.382461796 ubox
17 31 0.332709775 ubox
17 33 0.319043997 ubox
17 40 0.017976670 ubox
17 52 0.003988415 ubox
17 56 0.339139845 ubox
18 27 0.410659282 ubox
18 30 0.317727708 ubox
18 32 0.377024016 ubox
18 39 0.017670392 ubox
18 41 0.005990589 ubox
18 51 0.007652314 ubox
18 55 0.326993706 ubox
18 61 0.029347274 ubox
19 31 0.377426641 ubox
19 40 0.006026590 ubox
19 50 0.009154286 ubox
19 60 0.036754019 ubox
20 35 0.006314061 ubox
20 59 0.036699266 ubox
21 34 0.006439419 ubox
21 36 0.017406882 ubox
21 58 0.036642626 ubox
22 35 0.014870831 ubox
23 49 0.192679520 ubox
23 50 0.270103124 ubox
23 57 0.036207759 ubox
24 48 0.192729280 ubox
24 49 0.269735190 ubox
24 56 0.036142656 ubox
26 46 0.102138304 ubox
26 60 0.139236543 ubox
27 35 0.055835602 ubox
27 45 0.101895328 ubox
27 59 0.139419762 ubox
28 34 0.061916975 ubox
28 44 0.101106523 ubox
28 47 0.321253673 ubox
28 53 0.031186928 ubox
28 58 0.139558910 ubox
29 33 0.061693218 ubox
29 46 0.321763034 ubox
29 52 0.031063467 ubox
29 57 0.139529885 ubox
29 69 0.003491047 ubox
30 45 0.321626654 ubox
31 44 0.320273118 ubox
32 45 0.008315662 ubox
33 44 0.009074800 ubox
33 47 0.008076098 ubox
33 53 0.151952810 ubox
33 66 0.006995330 ubox
33 70 0.021655183 ubox
34 40 0.136006729 ubox
34 46 0.008072881 ubox
34 49 0.004699401 ubox
34 50 0.043713750 ubox
34 52 0.152106308 ubox
34 65 0.007001439 ubox
34 69 0.021788980 ubox
35 39 0.122967130 ubox
35 41 0.116370376 ubox
35 49 0.044558057 ubox
35 50 0.008703160 ubox
35 51 0.151531481 ubox
35 68 0.020762751 ubox
36 40 0.118506035 ubox
36 48 0.047501392 ubox
36 49 0.019758144 ubox
36 50 0.149630558 ubox
38 46 0.154403493 ubox
38 60 0.012571632 ubox
39 45 0.154789218 ubox
39 59 0.012623669 ubox
40 44 0.151455460 ubox
40 58 0.012492163 ubox
43 49 0.013083172 ubox
43 50 0.022167208 ubox
43 57 0.033398324 ubox
44 48 0.012998455 ubox
44 49 0.023041041 ubox
44 56 0.038062448 ubox
44 69 0.801917038 ubox
45 55 0.038032782 ubox
45 68 0.808838885 ubox
46 53 0.028256287 ubox
46 54 0.027367753 ubox
46 66 0.726387659 ubox
46 67 0.573285051 ubox
47 52 0.038673811 ubox
47 65 0.925970903 ubox
48 54 0.016815743 ubox
48 63 0.009540366 ubox
48 64 0.926125475 ubox
49 53 0.016576565 ubox
49 62 0.012863844 ubox
49 63 0.926081902 ubox
49 64 0.007776211 ubox
50 62 0.923010176 ubox
50 63 0.008013908 ubox
51 59 0.844161604 ubox
52 58 0.911750510 ubox
52 70 0.024301986 ubox
53 57 0.905181288 ubox
53 69 0.024484005 ubox
54 60 0.098014722 ubox
55 59 0.079531806 ubox
56 67 0.058455128 ubox
57 66 0.058533188 ubox
57 70 0.039913224 ubox
58 65 0.058463968 ubox
58 69 0.049616425 ubox
59 68 0.049715067 ubox
60 64 0.006169895 ubox
60 67 0.049647638 ubox
7 40 0.9500000 lbox
8 39 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
13 34 0.9500000 lbox
14 33 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
44 69 0.9500000 lbox
45 68 0.9500000 lbox
46 67 0.9500000 lbox
47 65 0.9500000 lbox
48 64 0.9500000 lbox
49 63 0.9500000 lbox
50 62 0.9500000 lbox
51 59 0.9500000 lbox
52 58 0.9500000 lbox
53 57 0.9500000 lbox
showpage
end
%%EOF
