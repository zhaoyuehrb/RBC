%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TNFAIP6)
} def

/sequence { (\
AGUCACAUUUCAGCCACUGCUCUGAGAAUUUGUGAGCAGCCCCUAACAGGCUGUUACUUCACUACAACUGACGAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.010153101 ubox
1 31 0.005400392 ubox
1 55 0.004363749 ubox
1 58 0.055589096 ubox
1 59 0.005535014 ubox
1 63 0.103641339 ubox
1 69 0.097947502 ubox
2 8 0.003494768 ubox
2 29 0.014498285 ubox
2 30 0.006030942 ubox
2 37 0.016752262 ubox
2 57 0.063850195 ubox
2 58 0.006054289 ubox
2 62 0.109629752 ubox
2 65 0.045260974 ubox
2 68 0.103583521 ubox
2 72 0.736522173 ubox
2 75 0.056546196 ubox
3 7 0.003592442 ubox
3 25 0.005555230 ubox
3 27 0.010583499 ubox
3 28 0.014607108 ubox
3 35 0.468426943 ubox
3 36 0.009074813 ubox
3 56 0.054716424 ubox
3 61 0.098973888 ubox
3 64 0.039175232 ubox
3 67 0.092680312 ubox
3 71 0.737105144 ubox
3 74 0.060960239 ubox
4 24 0.006128349 ubox
4 26 0.011437349 ubox
4 32 0.014109058 ubox
4 34 0.645724262 ubox
4 70 0.736009969 ubox
4 73 0.061146324 ubox
5 23 0.005909670 ubox
5 31 0.024141783 ubox
5 33 0.648818536 ubox
5 54 0.005753428 ubox
5 69 0.650342533 ubox
6 19 0.003565185 ubox
6 24 0.024389406 ubox
6 32 0.650268841 ubox
6 34 0.029796633 ubox
6 53 0.005125781 ubox
6 70 0.025189748 ubox
7 18 0.003312376 ubox
7 23 0.023677336 ubox
7 29 0.125549309 ubox
7 31 0.641514858 ubox
7 33 0.029826546 ubox
7 52 0.003827309 ubox
7 69 0.024404080 ubox
7 75 0.007705827 ubox
8 25 0.023868815 ubox
8 26 0.021129566 ubox
8 27 0.909039152 ubox
8 28 0.128554428 ubox
8 32 0.022516815 ubox
8 67 0.023376111 ubox
8 74 0.008625360 ubox
9 24 0.025094859 ubox
9 25 0.023872596 ubox
9 26 0.956320238 ubox
9 27 0.100080410 ubox
9 28 0.098130031 ubox
9 66 0.018865932 ubox
9 67 0.017775974 ubox
9 73 0.008552197 ubox
10 24 0.019911680 ubox
10 25 0.980602818 ubox
10 26 0.057368335 ubox
10 27 0.101611286 ubox
10 66 0.015782465 ubox
10 71 0.021383802 ubox
11 19 0.031045264 ubox
11 24 0.984609304 ubox
11 26 0.101793156 ubox
11 53 0.099955514 ubox
11 70 0.022852533 ubox
11 73 0.003306837 ubox
12 18 0.031423280 ubox
12 21 0.249039100 ubox
12 23 0.956311356 ubox
12 31 0.003443319 ubox
12 44 0.003847884 ubox
12 52 0.100659288 ubox
12 63 0.005241409 ubox
12 69 0.022681736 ubox
13 17 0.030923769 ubox
13 20 0.342080375 ubox
13 22 0.928911607 ubox
13 30 0.003245550 ubox
13 43 0.004124210 ubox
13 51 0.100894939 ubox
13 62 0.005300778 ubox
13 68 0.022473687 ubox
14 19 0.358888089 ubox
14 50 0.100880760 ubox
15 24 0.024864782 ubox
15 34 0.015319865 ubox
15 49 0.100657766 ubox
16 23 0.022457278 ubox
16 33 0.015351564 ubox
17 26 0.021020116 ubox
17 32 0.015341433 ubox
17 39 0.101449670 ubox
18 25 0.021071089 ubox
18 38 0.102004022 ubox
18 66 0.006900275 ubox
19 37 0.102232689 ubox
19 65 0.007185231 ubox
19 72 0.003212806 ubox
20 26 0.008716489 ubox
20 36 0.102267159 ubox
21 25 0.007907977 ubox
21 27 0.010608095 ubox
21 35 0.102259077 ubox
21 71 0.004458561 ubox
21 74 0.004401576 ubox
22 26 0.011926206 ubox
22 34 0.102249736 ubox
22 70 0.005015850 ubox
22 73 0.005211906 ubox
23 32 0.034677063 ubox
23 61 0.017160814 ubox
23 66 0.018952728 ubox
24 30 0.008941596 ubox
24 31 0.043075294 ubox
24 33 0.007113284 ubox
24 60 0.018915057 ubox
24 65 0.020423234 ubox
24 72 0.003331077 ubox
25 29 0.008104957 ubox
25 30 0.040349182 ubox
25 31 0.032459474 ubox
25 59 0.018815106 ubox
25 63 0.021729526 ubox
25 69 0.031154356 ubox
26 30 0.022880221 ubox
26 58 0.018234979 ubox
26 60 0.057476018 ubox
26 62 0.022840539 ubox
26 68 0.043720944 ubox
27 58 0.003783090 ubox
27 59 0.057441243 ubox
28 58 0.055847053 ubox
28 75 0.003417460 ubox
29 35 0.003437144 ubox
29 67 0.054927822 ubox
29 74 0.003641275 ubox
30 34 0.004349230 ubox
30 66 0.061827269 ubox
30 67 0.144039257 ubox
30 71 0.003336377 ubox
30 73 0.003209781 ubox
30 74 0.014010879 ubox
31 56 0.005248210 ubox
31 61 0.059183961 ubox
31 64 0.078041282 ubox
31 66 0.168843729 ubox
31 70 0.003585793 ubox
31 73 0.015161423 ubox
32 55 0.004610522 ubox
32 57 0.243310019 ubox
32 60 0.066428041 ubox
32 62 0.674132259 ubox
32 63 0.018290432 ubox
32 65 0.168943686 ubox
32 68 0.008519517 ubox
32 72 0.015543542 ubox
33 56 0.240614954 ubox
33 61 0.676800395 ubox
33 64 0.164846952 ubox
33 66 0.008150486 ubox
33 67 0.007077113 ubox
33 71 0.015239006 ubox
34 55 0.189668317 ubox
34 59 0.025554843 ubox
34 60 0.678420607 ubox
34 63 0.156803385 ubox
34 65 0.009802433 ubox
35 54 0.157609586 ubox
35 55 0.524276516 ubox
35 58 0.079434847 ubox
35 59 0.638282564 ubox
35 63 0.011173752 ubox
35 69 0.014314134 ubox
36 54 0.946511068 ubox
36 57 0.092712548 ubox
36 58 0.193917634 ubox
36 62 0.011779521 ubox
36 68 0.012344357 ubox
37 53 0.994183702 ubox
38 52 0.994414406 ubox
38 55 0.007428550 ubox
39 51 0.994733742 ubox
39 54 0.007949232 ubox
40 50 0.991785103 ubox
40 53 0.008009361 ubox
41 49 0.987598892 ubox
41 50 0.074404537 ubox
42 49 0.104537134 ubox
42 50 0.022019922 ubox
43 49 0.030943393 ubox
44 48 0.043969955 ubox
44 49 0.004221733 ubox
44 56 0.007535217 ubox
45 55 0.008134827 ubox
46 54 0.008250812 ubox
47 53 0.008266159 ubox
47 70 0.005663032 ubox
48 52 0.006699439 ubox
48 69 0.005740411 ubox
49 68 0.005752821 ubox
52 61 0.004887231 ubox
52 66 0.010173538 ubox
52 73 0.008157978 ubox
53 60 0.006660080 ubox
53 62 0.006656104 ubox
53 65 0.012408453 ubox
53 68 0.006300742 ubox
53 72 0.020267098 ubox
54 61 0.006891779 ubox
54 64 0.012295905 ubox
54 67 0.006929447 ubox
54 71 0.021691831 ubox
54 74 0.007628559 ubox
55 64 0.026140343 ubox
55 66 0.008050429 ubox
55 70 0.025579078 ubox
55 73 0.014781775 ubox
56 63 0.027961902 ubox
56 69 0.025276539 ubox
58 67 0.035914444 ubox
58 71 0.015550379 ubox
58 74 0.018176777 ubox
59 66 0.036956170 ubox
59 70 0.010968520 ubox
59 71 0.249810520 ubox
59 73 0.013065921 ubox
59 74 0.077063178 ubox
60 70 0.270626111 ubox
60 73 0.082346164 ubox
61 69 0.253281706 ubox
63 70 0.035415270 ubox
64 69 0.035136891 ubox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
32 62 0.9500000 lbox
33 61 0.9500000 lbox
34 60 0.9500000 lbox
35 59 0.9500000 lbox
36 54 0.9500000 lbox
37 53 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
showpage
end
%%EOF
