%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VWA5B2)
} def

/sequence { (\
GUGAGACUCUCGCGCUGGCCUCUGGAGCGCGGGGUGGGCGUCCCGUCACCCUGCGCCCAGCUUCCCCGGCCCGUUCCCGCAGGGCCGGCCUCCCGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.070653924 ubox
1 13 0.297971232 ubox
1 15 0.008012198 ubox
1 80 0.007892775 ubox
2 6 0.063800612 ubox
2 12 0.302379770 ubox
2 14 0.007999248 ubox
2 79 0.007893286 ubox
3 9 0.086054541 ubox
3 11 0.861018015 ubox
3 13 0.008021821 ubox
3 78 0.007858325 ubox
4 8 0.075024600 ubox
4 10 0.860636254 ubox
5 9 0.841803956 ubox
5 11 0.101515406 ubox
5 76 0.007527992 ubox
6 10 0.088454462 ubox
6 75 0.007048763 ubox
11 73 0.007675729 ubox
12 72 0.007801971 ubox
12 99 0.951080161 ubox
13 98 0.954337646 ubox
14 61 0.011809999 ubox
14 70 0.018634241 ubox
14 74 0.005980881 ubox
14 97 0.994776734 ubox
14 99 0.059883496 ubox
15 60 0.011814528 ubox
15 69 0.018687019 ubox
15 73 0.006265224 ubox
15 96 0.994860615 ubox
15 98 0.059833545 ubox
16 59 0.011774503 ubox
16 68 0.018666053 ubox
16 95 0.993817050 ubox
17 58 0.011739188 ubox
17 62 0.013179888 ubox
17 64 0.007285776 ubox
17 65 0.080728902 ubox
17 66 0.029568221 ubox
17 67 0.019041164 ubox
17 71 0.006890240 ubox
17 90 0.092324112 ubox
17 91 0.004543054 ubox
17 92 0.005217570 ubox
17 93 0.039403040 ubox
17 94 0.987759931 ubox
17 97 0.005471104 ubox
17 100 0.055926718 ubox
18 57 0.011702888 ubox
18 61 0.034101204 ubox
18 62 0.009071546 ubox
18 63 0.009542430 ubox
18 64 0.089177731 ubox
18 65 0.036498768 ubox
18 66 0.019030764 ubox
18 70 0.006914086 ubox
18 89 0.096924433 ubox
18 90 0.006971052 ubox
18 91 0.004813058 ubox
18 92 0.054412258 ubox
18 93 0.976703237 ubox
18 97 0.045886657 ubox
18 99 0.056565899 ubox
19 25 0.007300820 ubox
19 60 0.033498497 ubox
19 69 0.006924316 ubox
19 88 0.099185176 ubox
19 96 0.046322738 ubox
19 98 0.056454781 ubox
20 24 0.007277773 ubox
20 60 0.021292107 ubox
20 68 0.006911186 ubox
20 87 0.093563764 ubox
20 88 0.008407347 ubox
20 95 0.046272569 ubox
20 96 0.011958910 ubox
21 59 0.014818056 ubox
21 88 0.003751023 ubox
21 95 0.011111746 ubox
21 96 0.003292827 ubox
22 60 0.980233670 ubox
22 88 0.003620612 ubox
22 95 0.003316079 ubox
23 59 0.996744968 ubox
24 58 0.999805402 ubox
24 65 0.008287887 ubox
24 90 0.008079027 ubox
24 93 0.003382135 ubox
25 57 0.999696060 ubox
25 64 0.008315273 ubox
25 89 0.008044896 ubox
25 92 0.003530234 ubox
26 63 0.008229858 ubox
26 91 0.003403442 ubox
27 56 0.999886089 ubox
28 55 0.999978751 ubox
29 54 0.999981403 ubox
30 53 0.999968737 ubox
31 52 0.999234711 ubox
32 51 0.999982864 ubox
33 50 0.999989599 ubox
34 49 0.999972939 ubox
35 45 0.057600389 ubox
35 48 0.988653060 ubox
36 43 0.015642128 ubox
36 44 0.125373922 ubox
36 47 0.845800839 ubox
37 42 0.017921146 ubox
37 43 0.140079254 ubox
37 44 0.130611199 ubox
37 46 0.660028615 ubox
37 47 0.516905553 ubox
38 42 0.138223359 ubox
38 43 0.131175343 ubox
38 46 0.718638370 ubox
39 45 0.877155000 ubox
40 44 0.821623236 ubox
41 45 0.004401475 ubox
59 91 0.006995097 ubox
60 89 0.014952515 ubox
60 90 0.009768014 ubox
60 97 0.004229589 ubox
61 88 0.012338103 ubox
61 96 0.004366626 ubox
62 87 0.005827590 ubox
62 95 0.004211881 ubox
64 88 0.013835078 ubox
65 87 0.012511049 ubox
65 88 0.063437028 ubox
66 87 0.045442316 ubox
66 88 0.980350533 ubox
67 87 0.993750835 ubox
68 86 0.999541356 ubox
68 90 0.020981624 ubox
69 85 0.999570218 ubox
69 89 0.021008307 ubox
70 83 0.004486082 ubox
70 84 0.999557159 ubox
70 88 0.020334086 ubox
71 82 0.006350024 ubox
71 83 0.999576807 ubox
71 87 0.019624506 ubox
71 88 0.005374414 ubox
72 79 0.019405841 ubox
72 82 0.999049808 ubox
72 83 0.003622813 ubox
72 87 0.007603233 ubox
73 78 0.042557831 ubox
73 80 0.637097767 ubox
73 85 0.018079659 ubox
73 86 0.009205037 ubox
74 79 0.603953107 ubox
74 84 0.016009009 ubox
75 81 0.015783904 ubox
75 83 0.014323116 ubox
75 84 0.009517222 ubox
76 82 0.014353196 ubox
76 83 0.013082353 ubox
76 84 0.008976462 ubox
77 82 0.013135975 ubox
77 83 0.009513975 ubox
78 82 0.009468673 ubox
78 83 0.003208459 ubox
79 99 0.003221346 ubox
80 98 0.003225866 ubox
82 100 0.015714974 ubox
83 99 0.015843281 ubox
84 97 0.019898802 ubox
85 96 0.019938699 ubox
86 95 0.019942577 ubox
87 94 0.020202011 ubox
88 92 0.008181617 ubox
88 93 0.020045655 ubox
88 97 0.081350568 ubox
88 99 0.003831850 ubox
89 96 0.084996704 ubox
89 98 0.003973599 ubox
90 95 0.085008841 ubox
90 96 0.003603749 ubox
91 95 0.003324205 ubox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
5 9 0.9500000 lbox
12 99 0.9500000 lbox
13 98 0.9500000 lbox
14 97 0.9500000 lbox
15 96 0.9500000 lbox
16 95 0.9500000 lbox
17 94 0.9500000 lbox
18 93 0.9500000 lbox
22 60 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
27 56 0.9500000 lbox
28 55 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
33 50 0.9500000 lbox
34 49 0.9500000 lbox
35 48 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
39 45 0.9500000 lbox
40 44 0.9500000 lbox
66 88 0.9500000 lbox
67 87 0.9500000 lbox
68 86 0.9500000 lbox
69 85 0.9500000 lbox
70 84 0.9500000 lbox
71 83 0.9500000 lbox
72 82 0.9500000 lbox
showpage
end
%%EOF
