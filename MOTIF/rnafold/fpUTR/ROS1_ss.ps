%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGCUUUCAAGCAUUCAAAGGUCUAAAUGAAAAAGGCUAAGUAUUAUUUCAAAAGGCAAGUAUAUCCUAAUAUAGCAAAACAAACAAAGCAAAAUCCAUCAGCUACUCCUCCAAUUGAAGUGAUGAAGCCCAAAUAAUUCAUAUAGCAAAAUGGAGAAAAUUAGACCGGCCAUCUAAAAAUCUGCCAUUGGUGAAGUG\
) } def
/len { sequence length } bind def

/coor [
[102.19281006 161.78823853]
[99.84629059 146.97291565]
[97.49977112 132.15757751]
[90.09210968 133.33084106]
[86.13401794 147.79920959]
[82.17591858 162.26756287]
[86.85844421 177.98399353]
[75.39384460 189.70982361]
[59.57592773 185.38252258]
[55.67680359 169.45365906]
[67.70755768 158.30946350]
[71.66564941 143.84111023]
[75.62374878 129.37274170]
[70.49697113 121.57247925]
[67.62470245 113.10496521]
[67.01058960 104.57789612]
[68.50351715 96.55812073]
[71.81812286 89.53421021]
[76.56394958 83.88674927]
[82.28052521 79.86795807]
[88.47579193 77.59188843]
[85.89685059 62.81525040]
[83.31791687 48.03860855]
[80.73898315 33.26197052]
[78.16004181 18.48533058]
[75.58110809 3.70869017]
[73.00217438 -11.06794930]
[55.65820694 -12.69841766]
[39.47588730 -19.10964012]
[25.74401665 -29.78236580]
[15.55382156 -43.85829163]
[9.71222878 -60.20908737]
[8.67797756 -77.52683258]
[12.52560711 -94.42864990]
[20.94014168 -109.56712341]
[33.24285889 -121.73772430]
[25.81097984 -134.76719666]
[18.37909889 -147.79667664]
[10.94721889 -160.82614136]
[0.29657158 -163.08836365]
[-7.19306087 -170.68595886]
[-9.21719170 -180.93690491]
[-5.34356833 -190.40428162]
[-12.36251545 -203.66076660]
[-19.38146210 -216.91725159]
[-26.40040970 -230.17373657]
[-33.41935730 -243.43022156]
[-40.43830490 -256.68670654]
[-47.45725250 -269.94320679]
[-54.47620010 -283.19967651]
[-61.49514771 -296.45617676]
[-68.51409149 -309.71264648]
[-75.53304291 -322.96911621]
[-90.37079620 -327.71032715]
[-97.30016327 -341.25427246]
[-92.68872070 -355.37057495]
[-99.70767212 -368.62707520]
[-116.51572418 -373.46020508]
[-124.47525024 -388.65289307]
[-119.09620667 -404.58303833]
[-126.32250977 -417.72763062]
[-133.54881287 -430.87222290]
[-140.77511597 -444.01684570]
[-155.70039368 -439.71279907]
[-171.20170593 -438.82876587]
[-186.50578308 -441.40576172]
[-200.84991455 -447.31216431]
[-213.51988220 -456.25061035]
[-223.88560486 -467.77273560]
[-231.43240356 -481.30187988]
[-235.78662109 -496.16177368]
[-236.73405457 -511.61050415]
[-234.23054504 -526.87738037]
[-228.40399170 -541.20153809]
[-219.54785156 -553.86968994]
[-208.10632324 -564.25189209]
[-215.53820801 -577.28137207]
[-230.76074219 -576.16906738]
[-244.95523071 -581.77972412]
[-255.30332947 -592.99932861]
[-259.75042725 -607.60021973]
[-257.41354370 -622.68341064]
[-248.75669861 -635.25408936]
[-235.49867249 -642.81628418]
[-220.27188110 -643.86865234]
[-206.09959412 -638.20214844]
[-195.79576111 -626.94189453]
[-191.40618896 -612.32354736]
[-193.80244446 -597.24975586]
[-202.50874329 -584.71325684]
[-195.07685852 -571.68377686]
[-181.24900818 -576.06262207]
[-166.80601501 -577.46264648]
[-152.38252258 -575.81976318]
[-138.61283875 -571.20367432]
[-126.10304260 -563.81488037]
[-115.40433502 -553.97607422]
[-106.98871613 -542.11773682]
[-101.22817230 -528.75982666]
[-98.37825775 -514.48840332]
[-98.56673431 -499.93035889]
[-101.78784180 -485.72564697]
[-107.90245819 -472.49926758]
[-116.64409637 -460.83367920]
[-127.63052368 -451.24313354]
[-120.40422058 -438.09854126]
[-113.17790985 -424.95394897]
[-105.95160675 -411.80932617]
[-93.19176483 -409.97909546]
[-83.67573547 -400.99774170]
[-81.03394318 -387.98345947]
[-86.45118713 -375.64599609]
[-79.43223572 -362.38952637]
[-65.16490173 -358.26901245]
[-57.85784531 -344.92504883]
[-62.27655411 -329.98806763]
[-55.25761032 -316.73159790]
[-48.23866272 -303.47509766]
[-41.21971512 -290.21862793]
[-34.20076752 -276.96212769]
[-27.18181992 -263.70565796]
[-20.16287231 -250.44917297]
[-13.14392567 -237.19268799]
[-6.12497807 -223.93620300]
[0.89396906 -210.67971802]
[7.91291618 -197.42323303]
[25.00063705 -188.38459778]
[23.97669220 -168.25802612]
[31.40857124 -155.22854614]
[38.84045029 -142.19908142]
[46.27233124 -129.16960144]
[59.20824432 -132.96293640]
[72.66072845 -133.83341980]
[85.97763824 -131.73886108]
[98.51337433 -126.78079224]
[109.66022491 -119.19957733]
[118.87780762 -109.36273956]
[125.71926880 -97.74716187]
[129.85293579 -84.91595459]
[144.80670166 -86.09284210]
[159.76045227 -87.26972198]
[174.71421814 -88.44660950]
[189.66796875 -89.62349701]
[197.66049194 -102.92384338]
[211.95745850 -108.95515442]
[227.06137085 -105.39827728]
[237.16447449 -93.62088776]
[238.38192749 -78.15164948]
[230.24559021 -64.93878937]
[215.88406372 -59.06292725]
[200.81961060 -62.78344727]
[190.84486389 -74.66973877]
[175.89109802 -73.49285126]
[160.93734741 -72.31596375]
[145.98358154 -71.13907623]
[131.02981567 -69.96218872]
[129.26678467 -57.53041077]
[125.00092316 -45.70447540]
[118.40542603 -34.98332214]
[109.75193787 -25.82065392]
[99.39932251 -18.60573959]
[87.77880859 -13.64688587]
[90.35774994 1.12975371]
[92.93668365 15.90639400]
[95.51561737 30.68303299]
[98.09455872 45.45967484]
[100.67349243 60.23631287]
[103.25243378 75.01295471]
[128.68347168 86.54142761]
[132.25987244 120.40246582]
[140.49520874 132.93957520]
[148.73056030 145.47668457]
[156.96589661 158.01379395]
[171.71195984 154.50245667]
[186.76931763 156.24942017]
[200.31971741 163.04371643]
[210.72688293 174.06489563]
[216.73410034 187.98213196]
[217.61598206 203.11480713]
[213.26600647 217.63560486]
[204.20948792 229.79106140]
[191.54000854 238.11334229]
[176.78750610 241.59750366]
[161.73339844 239.82279968]
[148.19554138 233.00354004]
[137.80870056 221.96319580]
[131.82713318 208.03492737]
[130.97315979 192.90065002]
[135.34986877 178.38787842]
[144.42878723 166.24914551]
[136.19345093 153.71203613]
[127.95809937 141.17491150]
[119.72276306 128.63780212]
[112.31509399 129.81106567]
[114.66161346 144.62638855]
[117.00813293 159.44171143]
[119.35464478 174.25704956]
[121.70093536 189.07240295]
[106.88553619 191.41845703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 13]
[5 12]
[6 11]
[21 168]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 162]
[36 131]
[37 130]
[38 129]
[39 128]
[43 126]
[44 125]
[45 124]
[46 123]
[47 122]
[48 121]
[49 120]
[50 119]
[51 118]
[52 117]
[53 116]
[56 113]
[57 112]
[60 108]
[61 107]
[62 106]
[63 105]
[76 91]
[77 90]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
[170 193]
[171 192]
[172 191]
[173 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
