%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUCUGCCCGGCUGCGGCGCUUCGGGCAGGCGGCGGCGGCGGCGGCGGCGGCGGCAGAGGGAGUUUCCGCUUUGUACUCCACCCCGGUAGCAGCUCCGCGGCAGGGACAGCUUCCUCCGGACGCUUGGCGGGCUUCGCUCUCGCCUUACGACAGCCCGGUCGGAUC\
) } def
/len { sequence length } bind def

/coor [
[94.23280334 349.75302124]
[79.75699615 343.83822632]
[72.51561737 329.97833252]
[75.92784119 314.71759033]
[88.38250732 305.26162720]
[88.94005585 290.27197266]
[89.49761200 275.28234863]
[90.05516052 260.29272461]
[90.47336578 245.29853821]
[90.75218964 230.30113220]
[83.25279999 217.43223572]
[91.24528503 203.77827454]
[91.52410889 188.78086853]
[91.80293274 173.78346252]
[92.08175659 158.78604126]
[92.36058044 143.78863525]
[92.50000000 128.78929138]
[92.50000000 113.78929138]
[89.18161011 99.16094971]
[82.70926666 85.62918091]
[76.23691559 72.09741211]
[69.68434143 65.67404938]
[69.77265167 58.25342178]
[63.55295944 44.60367966]
[57.33326721 30.95394135]
[51.11357498 17.30420113]
[44.89387894 3.65446043]
[28.34708595 -22.43747330]
[18.82445145 -34.02709961]
[6.06199121 -36.06784058]
[-1.62930381 -45.95090866]
[-0.54377115 -58.02407837]
[-9.84932899 -69.78871155]
[-19.15488625 -81.55334473]
[-28.46044350 -93.31797791]
[-36.27167892 -98.13258362]
[-37.82719421 -105.38888550]
[-46.91246033 -117.32446289]
[-55.99772644 -129.26004028]
[-70.51288605 -135.55453491]
[-72.06498718 -150.36805725]
[-81.15025330 -162.30363464]
[-98.50727081 -164.32278442]
[-108.84658051 -177.98915100]
[-106.17603302 -194.57510376]
[-115.48159790 -206.33973694]
[-124.78715515 -218.10437012]
[-132.59838867 -222.91897583]
[-134.15390015 -230.17527771]
[-143.23916626 -242.11085510]
[-157.75431824 -248.40536499]
[-159.30642700 -263.21887207]
[-168.39169312 -275.15444946]
[-185.74871826 -277.17361450]
[-196.08801270 -290.83996582]
[-193.41748047 -307.42593384]
[-202.72303772 -319.19055176]
[-212.02859497 -330.95520020]
[-221.33415222 -342.71981812]
[-230.63970947 -354.48446655]
[-239.94526672 -366.24908447]
[-249.35977173 -377.92672729]
[-258.88241577 -389.51635742]
[-268.40502930 -401.10598755]
[-283.13204956 -409.50549316]
[-279.13763428 -425.98217773]
[-262.19909668 -426.70507812]
[-256.81539917 -410.62863159]
[-247.29277039 -399.03900146]
[-237.77014160 -387.44937134]
[-231.06706238 -384.26467896]
[-228.18063354 -375.55465698]
[-218.87507629 -363.79000854]
[-209.56951904 -352.02539062]
[-200.26396179 -340.26074219]
[-190.95840454 -328.49612427]
[-181.65284729 -316.73147583]
[-168.74778748 -317.03814697]
[-157.86708069 -309.73657227]
[-153.12051392 -297.31414795]
[-156.45611572 -284.23971558]
[-147.37084961 -272.30413818]
[-133.50553894 -266.86334229]
[-131.30358887 -251.19612122]
[-122.21833038 -239.26054382]
[-113.02252197 -227.40992737]
[-103.71695709 -215.64529419]
[-94.41139984 -203.88066101]
[-81.50634766 -204.18731689]
[-70.62564850 -196.88575745]
[-65.87907410 -184.46331787]
[-69.21467590 -171.38890076]
[-60.12940979 -159.45332336]
[-46.26409149 -154.01252747]
[-44.06214905 -138.34530640]
[-34.97688675 -126.40972900]
[-25.89161873 -114.47415161]
[-16.69581032 -102.62353516]
[-7.39025259 -90.85890198]
[1.91530478 -79.09426880]
[11.22086239 -67.32963562]
[27.84610176 -61.76507950]
[30.41407967 -43.54973602]
[39.93671417 -31.96010780]
[54.74985123 -29.59982109]
[67.40280151 -37.65604782]
[80.05575562 -45.71227646]
[92.70870972 -53.76850510]
[105.36165619 -61.82472992]
[112.45368958 -76.61104584]
[128.82345581 -77.59236908]
[137.63113403 -63.75918961]
[129.81614685 -49.34190750]
[113.41788483 -49.17177963]
[100.76493073 -41.11555099]
[88.11198425 -33.05932617]
[75.45903015 -25.00309753]
[62.80607605 -16.94686890]
[58.54362106 -2.56523323]
[64.76331329 11.08450699]
[70.98300934 24.73424721]
[77.20269775 38.38398743]
[83.42239380 52.03372955]
[89.76868439 65.62506866]
[96.24103546 79.15683746]
[102.71337891 92.68860626]
[111.28495789 84.45822144]
[123.99472809 80.98642731]
[138.74760437 83.73536682]
[152.45457458 89.82791901]
[166.16152954 95.92047882]
[179.86848450 102.01303864]
[193.57545471 108.10559082]
[207.28240967 114.19815063]
[221.25277710 107.17226410]
[236.45886230 110.82038879]
[245.72082520 123.41999054]
[244.66546631 139.02191162]
[233.79106140 150.25942993]
[218.23220825 151.82649231]
[205.33528137 142.98321533]
[201.18984985 127.90511322]
[187.48289490 121.81255341]
[173.77593994 115.71999359]
[160.06896973 109.62744141]
[146.36201477 103.53488159]
[132.65505981 97.44232178]
[126.36628723 101.52906799]
[127.15599823 116.50826263]
[113.78876495 109.70254517]
[107.50000000 113.78929138]
[107.50000000 128.78929138]
[110.63957977 137.41128540]
[107.35799408 144.06745911]
[107.07917023 159.06486511]
[106.80034637 174.06228638]
[106.52152252 189.05969238]
[106.24269867 204.05709839]
[113.72213745 217.99870300]
[105.74959564 230.57995605]
[105.47077179 245.57736206]
[108.44954681 254.25622559]
[105.04479218 260.85025024]
[104.48724365 275.83990479]
[103.92969513 290.82952881]
[103.37214661 305.81915283]
[115.08992767 316.17425537]
[117.35901642 331.64633179]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 166]
[6 165]
[7 164]
[8 163]
[9 161]
[10 160]
[12 158]
[13 157]
[14 156]
[15 155]
[16 154]
[17 152]
[18 151]
[19 126]
[20 125]
[21 124]
[23 123]
[24 122]
[25 121]
[26 120]
[27 119]
[28 104]
[29 103]
[32 101]
[33 100]
[34 99]
[35 98]
[37 97]
[38 96]
[39 95]
[41 93]
[42 92]
[45 88]
[46 87]
[47 86]
[49 85]
[50 84]
[52 82]
[53 81]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 70]
[63 69]
[64 68]
[105 118]
[106 117]
[107 116]
[108 115]
[109 114]
[129 147]
[130 146]
[131 145]
[132 144]
[133 143]
[134 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
