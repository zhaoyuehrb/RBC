%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUACUGGAGCCCCAGGACGCAGCCGAGCGGCCCUCGCCGACUCCUUCCCGAGCCUGGCUGUGGCGUCACGUGACCCGCGGCGCGGCCAAUCCGCGCAGCCCUCUAUGCUAUUCAAAUCGGCGGCGGGGCCAACGGUUGUGCCGAGACUCGCCACUGCCGCGGCCGCUGGGCCUGAGUGUCGCCUUCGCCGCCAUGGACGCCACCGGGCGCUGACAGACCU\
) } def
/len { sequence length } bind def

/coor [
[12.26411629 432.62350464]
[6.07909870 438.13171387]
[-1.04966128 442.33096313]
[-8.84957504 445.06451416]
[-17.02313614 446.23165894]
[-25.25926781 445.79132080]
[-30.03497887 460.01077271]
[-34.81068802 474.23022461]
[-39.58639908 488.44964600]
[-35.80659866 504.40725708]
[-47.92042160 515.46112061]
[-63.46620560 510.23992920]
[-66.45178223 494.11483765]
[-53.80584335 483.67395020]
[-49.03013229 469.45449829]
[-44.25442123 455.23504639]
[-39.47871399 441.01562500]
[-55.52272415 425.72814941]
[-61.66923141 404.36453247]
[-56.16844177 382.75436401]
[-40.45875168 366.83117676]
[-18.79143524 361.00332642]
[-16.05963516 346.25418091]
[-13.32783318 331.50503540]
[-10.59603214 316.75588989]
[-22.98733330 308.30157471]
[-35.37752533 299.84799194]
[-48.11439514 307.77087402]
[-60.85126495 315.69375610]
[-73.53201294 323.70617676]
[-86.15600586 331.80767822]
[-98.77999878 339.90921021]
[-111.40399170 348.01074219]
[-118.44297791 362.82238770]
[-134.80911255 363.86239624]
[-143.66632080 350.06088257]
[-135.90307617 335.61566162]
[-119.50552368 335.38674927]
[-106.88153076 327.28521729]
[-94.25753784 319.18368530]
[-81.63354492 311.08218384]
[-77.70539093 304.82965088]
[-68.77415466 302.95687866]
[-56.03728104 295.03399658]
[-43.30041122 287.11111450]
[-58.29743958 287.40972900]
[-70.87097168 279.23010254]
[-76.67594910 265.39889526]
[-73.70632172 250.69578552]
[-62.98831940 240.20176697]
[-48.22578430 237.54328918]
[-34.52024460 243.63902283]
[-26.60795212 256.38247681]
[-27.22329903 271.37020874]
[-19.03304863 258.80358887]
[-10.84279728 246.23696899]
[-2.65254593 233.67034912]
[5.53770494 221.10374451]
[13.72795582 208.53712463]
[13.36673737 205.03800964]
[14.67693710 201.18998718]
[17.80420113 197.77807617]
[22.53918076 195.62274170]
[31.25307083 183.41339111]
[39.96696091 171.20404053]
[48.68084717 158.99470520]
[57.39473724 146.78535461]
[66.10862732 134.57600403]
[74.82251740 122.36666107]
[55.35785294 104.37466431]
[51.68090439 71.62522888]
[39.05691147 63.52370071]
[26.43291664 55.42217255]
[13.80892372 47.32064056]
[-2.78692317 43.85449219]
[-4.05041885 26.94769096]
[11.84588718 21.05330467]
[21.91045380 34.69664764]
[34.53444672 42.79817963]
[47.15843964 50.89970779]
[59.78243256 59.00123978]
[70.20062256 48.20951080]
[61.65959549 35.87862015]
[53.11856842 23.54772949]
[44.57754135 11.21683884]
[36.03651428 -1.11405182]
[27.49548721 -13.44494247]
[12.03095150 -17.71433067]
[5.85966587 -32.52293777]
[13.71571159 -46.51086426]
[29.57260513 -48.94776917]
[41.26629257 -37.96427155]
[39.82637787 -21.98596954]
[48.36740494 -9.65507793]
[56.90843201 2.67581224]
[65.44945526 15.00670338]
[73.99048615 27.33759308]
[82.53150940 39.66848373]
[96.37957764 33.90383911]
[93.64777374 19.15469360]
[90.91596985 4.40554857]
[77.21841431 -3.13838387]
[71.62286377 -17.74057007]
[76.77136993 -32.50630188]
[90.23296356 -40.46365738]
[105.65149689 -37.85541153]
[115.74680328 -25.91310120]
[115.75218964 -10.27551842]
[105.66511536 1.67374742]
[108.39691925 16.42289162]
[111.12871552 31.17203712]
[117.49715424 35.13348007]
[122.17089081 20.88019180]
[122.80941772 5.89378929]
[134.33648682 -3.70446587]
[149.19073486 -1.61843121]
[157.62823486 10.78352261]
[154.11428833 25.36611938]
[140.95335388 32.56369781]
[130.23402405 43.05636597]
[136.60246277 47.01781082]
[151.04000854 42.94874573]
[165.47755432 38.87968063]
[179.91510010 34.81061554]
[194.35264587 30.74155235]
[208.79019165 26.67248917]
[223.22773743 22.60342407]
[237.66528320 18.53435898]
[252.07380676 14.36369991]
[266.45260620 10.09165192]
[280.83139038 5.81960392]
[286.02923584 -16.17364120]
[302.94171143 -30.98704338]
[325.19625854 -33.21871185]
[344.51113892 -22.17407036]
[357.35836792 -29.91674042]
[370.20556641 -37.65941238]
[383.05279541 -45.40208435]
[390.87857056 -59.15228271]
[405.77307129 -59.09497070]
[418.62026978 -66.83763885]
[431.46749878 -74.58031464]
[439.29327393 -88.33051300]
[454.18774414 -88.27320099]
[467.03497314 -96.01586914]
[479.88220215 -103.75853729]
[490.32711792 -117.11293030]
[506.05105591 -110.77305603]
[504.31176758 -93.90856171]
[487.62487793 -90.91132355]
[474.77764893 -83.16864777]
[461.93041992 -75.42597961]
[455.02359009 -62.22958755]
[439.21017456 -61.73309326]
[426.36294556 -53.99042130]
[413.51571655 -46.24774933]
[406.60888672 -33.05135727]
[390.79547119 -32.55486298]
[377.94824219 -24.81219292]
[365.10104370 -17.06952095]
[352.25381470 -9.32684994]
[353.11224365 -6.49414492]
[353.73770142 -3.60107160]
[368.72839355 -3.07288599]
[383.71911621 -2.54470038]
[398.70980835 -2.01651502]
[412.93005371 -10.18455505]
[426.97613525 -1.72058010]
[426.39868164 14.66839695]
[411.79171753 22.12280273]
[398.18161011 12.97418308]
[383.19091797 12.44599724]
[368.20022583 11.91781139]
[353.20953369 11.38962650]
[349.71505737 20.45941353]
[343.93441772 28.30144310]
[336.26904297 34.35098267]
[327.25659180 38.16846466]
[317.53320312 39.47141266]
[307.78875732 38.15531540]
[298.71774292 34.30189133]
[290.96984863 28.17413712]
[285.10342407 20.19839478]
[270.72463989 24.47044182]
[256.34585571 28.74249077]
[250.83412170 33.65626526]
[241.73434448 32.97190475]
[227.29679871 37.04096985]
[212.85925293 41.11003494]
[198.42170715 45.17909622]
[183.98416138 49.24816132]
[169.54661560 53.31722641]
[155.10906982 57.38629150]
[140.67152405 61.45535660]
[150.29421997 96.09957886]
[136.92570496 125.46666718]
[111.07315826 137.67309570]
[87.03186035 131.08055115]
[78.31797028 143.28990173]
[69.60408783 155.49923706]
[60.89019394 167.70858765]
[52.17630386 179.91793823]
[43.46241760 192.12728882]
[34.74852753 204.33662415]
[26.29456902 216.72737122]
[18.10431862 229.29399109]
[9.91406822 241.86061096]
[1.72381735 254.42721558]
[-6.46643353 266.99383545]
[-14.65668488 279.56045532]
[4.15311241 319.48770142]
[1.42131102 334.23684692]
[-1.31049037 348.98599243]
[-4.04229164 363.73513794]
[3.45017076 367.46148682]
[10.07052898 372.56542969]
[15.56923199 378.85034180]
[19.73983002 386.07522583]
[22.42671585 393.96383667]
[23.53093529 402.21536255]
[23.01382637 410.51577759]
[20.89835739 418.54986572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 17]
[7 16]
[8 15]
[9 14]
[22 214]
[23 213]
[24 212]
[25 211]
[27 45]
[28 44]
[29 43]
[30 41]
[31 40]
[32 39]
[33 38]
[54 210]
[55 209]
[56 208]
[57 207]
[58 206]
[59 205]
[63 204]
[64 203]
[65 202]
[66 201]
[67 200]
[68 199]
[69 198]
[71 81]
[72 80]
[73 79]
[74 78]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[99 111]
[100 110]
[101 109]
[121 194]
[122 193]
[123 192]
[124 191]
[125 190]
[126 189]
[127 188]
[128 187]
[129 185]
[130 184]
[131 183]
[135 161]
[136 160]
[137 159]
[138 158]
[140 156]
[141 155]
[142 154]
[144 152]
[145 151]
[146 150]
[163 174]
[164 173]
[165 172]
[166 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
