%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGUGGCGGAGCGCGGCUGCCGGUGUGCGGCCGGGAGCGAUCGCCGCGGGGCAGGGGCGCGGCGGGCACCGCGCAGAGCGCGCAGAACAGACGGACGGCGGCGGGGACCCGACGGCGGCGCCUCGGCACUCCCCAGACUCCGGCCAGCGCCCCCCUGCCAGCCGCAAGCACCCAGCCCCGGCCCACCCCGGGCUCUCG\
) } def
/len { sequence length } bind def

/coor [
[-18.90554047 770.30291748]
[-29.43241882 759.61718750]
[-33.30643463 745.12561035]
[-38.80213547 759.08258057]
[-44.29783630 773.03955078]
[-49.79353714 786.99652100]
[-47.65035629 802.67193604]
[-59.51266479 811.67944336]
[-65.00836182 825.63641357]
[-70.50406647 839.59338379]
[-70.68129730 856.54638672]
[-87.02085114 861.06915283]
[-95.89009857 846.62017822]
[-84.46104431 834.09765625]
[-78.96534729 820.14068604]
[-73.46964264 806.18371582]
[-76.00591278 791.50665283]
[-63.75051880 781.50085449]
[-58.25481796 767.54388428]
[-52.75911713 753.58691406]
[-47.26341629 739.62988281]
[-42.87410355 725.28649902]
[-39.61797333 710.64416504]
[-36.36184311 696.00183105]
[-33.10571289 681.35949707]
[-37.89573669 667.25616455]
[-27.34725571 655.46459961]
[-24.09112549 640.82232666]
[-20.83499527 626.17999268]
[-22.45307350 618.96240234]
[-17.41185760 611.33508301]
[-13.92727757 596.74548340]
[-10.44269753 582.15582275]
[-6.95811653 567.56616211]
[-3.47353625 552.97650146]
[0.01104399 538.38690186]
[3.49562430 523.79724121]
[1.99054837 516.55523682]
[7.15035677 509.00765991]
[10.86253548 494.47427368]
[-0.96750605 483.47235107]
[-5.66425514 467.91680908]
[-1.85587347 452.02374268]
[9.51078224 440.15066528]
[25.40336037 435.60192871]
[28.88794136 421.01226807]
[22.98249054 404.49041748]
[35.74319458 391.21984863]
[38.99932480 376.57751465]
[42.25545502 361.93518066]
[45.51158524 347.29287720]
[48.53847122 332.60144043]
[51.33537292 317.86450195]
[54.13227463 303.12756348]
[56.92917633 288.39062500]
[59.72607422 273.65368652]
[62.52297592 258.91674805]
[65.31987762 244.17980957]
[68.11677551 229.44287109]
[62.88829803 215.49610901]
[73.06308746 203.38066101]
[75.85998535 188.64372253]
[74.01711273 181.48020935]
[78.81748199 173.69909668]
[81.84436798 159.00767517]
[76.83450317 144.98089600]
[87.19740295 133.02593994]
[90.22428894 118.33451843]
[93.25117493 103.64309692]
[82.22025299 105.46990204]
[70.61837006 103.00525665]
[59.71322632 96.17744446]
[50.01167679 84.73716736]
[40.31013107 73.29689026]
[30.60858154 61.85661316]
[20.90703201 50.41633606]
[6.05130482 42.24665451]
[9.78923702 25.70990181]
[26.71448898 24.72392654]
[32.34730911 40.71478653]
[42.04885864 52.15506744]
[51.75040817 63.59534454]
[61.45195770 75.03562164]
[71.15350342 86.47589874]
[78.63885498 86.00730896]
[75.60970306 71.31635284]
[66.64414215 59.29059982]
[69.90193939 44.64864731]
[83.12065887 37.55884171]
[97.12035370 42.94481659]
[102.17868805 57.06619263]
[94.78289032 70.11609650]
[93.60955048 85.07012939]
[101.09489441 84.60153961]
[109.29395294 72.04067230]
[117.49300385 59.47980118]
[125.69206238 46.91893005]
[118.87184906 33.22835159]
[119.81380463 18.06228828]
[128.16500854 5.48756218]
[141.59922791 -1.17411363]
[156.46400452 -0.22336267]
[164.66305542 -12.78423309]
[166.73599243 -21.68884850]
[173.08970642 -25.47595978]
[181.48406982 -37.90715408]
[189.87844849 -50.33834457]
[198.27281189 -62.76953506]
[195.47436523 -78.09293365]
[204.16455078 -90.58034515]
[218.79031372 -93.15380859]
[227.18467712 -105.58499908]
[235.57905579 -118.01618958]
[243.97341919 -130.44738770]
[246.18527222 -139.31851196]
[252.59739685 -143.00585938]
[261.18502808 -155.30433655]
[269.77267456 -167.60281372]
[273.88333130 -184.05087280]
[290.82653809 -184.65412903]
[296.09658813 -168.54006958]
[282.07113647 -159.01516724]
[273.48352051 -146.71669006]
[264.89587402 -134.41822815]
[256.40460205 -122.05300903]
[248.01023865 -109.62181854]
[239.61587524 -97.19062805]
[231.22149658 -84.75943756]
[234.29919434 -70.23141479]
[225.96319580 -57.50483704]
[210.70401001 -54.37516403]
[202.30964661 -41.94397354]
[193.91526794 -29.51278114]
[185.52090454 -17.08158875]
[177.22392273 -4.58517647]
[169.02487183 7.97569418]
[175.87754822 21.20091629]
[175.18574524 36.18014908]
[167.03523254 48.88587952]
[153.53065491 55.85174942]
[138.25292969 55.11798859]
[130.05387878 67.67885590]
[121.85482025 80.23973083]
[113.65576172 92.80059814]
[107.94259644 106.66998291]
[104.91571045 121.36140442]
[101.88883209 136.05282593]
[106.68218994 151.13043213]
[96.53578949 162.03456116]
[93.50891113 176.72598267]
[90.59692383 191.44061279]
[87.80002594 206.17755127]
[92.82845306 221.17840576]
[82.85371399 232.23977661]
[80.05681610 246.97671509]
[77.25991058 261.71365356]
[74.46301270 276.45059204]
[71.66611481 291.18753052]
[68.86920929 305.92446899]
[66.07231140 320.66140747]
[63.27540970 335.39834595]
[65.09509277 341.76806641]
[63.63790894 347.27163696]
[60.15390778 350.54901123]
[56.89777756 365.19131470]
[53.64164734 379.83364868]
[50.38551712 394.47595215]
[56.63906097 405.76278687]
[53.62003708 417.89535522]
[43.47758484 424.49685669]
[39.99300385 439.08648682]
[50.63903809 448.16659546]
[56.30559540 460.88775635]
[55.93831635 474.74288940]
[49.66593933 487.02810669]
[38.76401520 495.37051392]
[25.39593697 498.18646240]
[21.68375778 512.71984863]
[18.08526802 527.28179932]
[14.60068798 541.87145996]
[11.11610699 556.46112061]
[7.63152695 571.05072021]
[4.14694643 585.64038086]
[0.66236615 600.23004150]
[-2.82221413 614.81970215]
[-6.19267273 629.43609619]
[-9.44880295 644.07843018]
[-12.70493412 658.72076416]
[-8.14780807 673.87145996]
[-18.46338844 684.61566162]
[-21.71951866 699.25799561]
[-24.97564888 713.90026855]
[-28.23178101 728.54260254]
[-16.91177940 718.70098877]
[-2.20771742 715.73608398]
[12.04157352 720.42199707]
[22.11598778 731.53533936]
[25.38536835 746.17468262]
[20.99616814 760.51818848]
[10.09428883 770.82104492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[6 18]
[8 16]
[9 15]
[10 14]
[22 193]
[23 192]
[24 191]
[25 190]
[27 188]
[28 187]
[29 186]
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
[36 180]
[37 179]
[39 178]
[40 177]
[45 171]
[46 170]
[48 167]
[49 166]
[50 165]
[51 164]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 154]
[61 152]
[62 151]
[64 150]
[65 149]
[67 147]
[68 146]
[69 145]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[94 144]
[95 143]
[96 142]
[97 141]
[102 136]
[103 135]
[105 134]
[106 133]
[107 132]
[108 131]
[111 128]
[112 127]
[113 126]
[114 125]
[116 124]
[117 123]
[118 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
