%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCUUCCCUCAGUCUUCUCGAGCACAUCGUCGCAAACGGGGCCGGAAAGCGUGGCAGCGCAGGCGCAAGCGCAGAGAGCGGAGGCGGUGGUGGUGGCGGCCGCUGGCCAGUUCCUUCAGUGAAUCUACAGACCUAUUUUCUCAGGAGCUCAGCCUGGCCUUACUUCAGUGAUAAAAGGAGGAAAGGCUGGCUACAGCAAACAUCAUUCAAG\
) } def
/len { sequence length } bind def

/coor [
[256.66442871 78.60245514]
[250.62606812 77.10434723]
[245.21009827 73.96165466]
[240.85739136 69.40423584]
[226.35429382 73.23307037]
[211.85118103 77.06190491]
[197.34808350 80.89073944]
[182.84497070 84.71957397]
[168.37049866 88.65525818]
[153.92544556 92.69757843]
[139.48039246 96.73989868]
[139.19326782 109.88602448]
[134.56240845 122.47444916]
[125.92920685 133.08251953]
[114.09616852 140.45355225]
[100.25419617 143.64448547]
[85.86326599 142.14347839]
[72.49855042 135.94305420]
[61.03162003 145.61308289]
[49.56468964 155.28312683]
[38.09775925 164.95315552]
[32.11069107 184.20303345]
[12.94535255 186.77416992]
[1.76862073 196.77819824]
[3.47897673 212.20072937]
[-4.23168373 225.66644287]
[-18.39845467 231.99749756]
[-33.57392120 228.75947571]
[-43.92280960 217.19746399]
[-45.46576309 201.75729370]
[-37.60947800 188.37602234]
[-23.37486076 182.19902039]
[-8.23541260 185.60147095]
[2.94131923 175.59744263]
[2.58600998 165.38722229]
[8.02284431 156.47937012]
[17.66313362 151.94015503]
[28.42772865 153.48622131]
[39.89465714 143.81619263]
[51.36158752 134.14616394]
[62.82851791 124.47612762]
[56.80841827 110.73719025]
[41.92614365 112.61280060]
[27.04387093 114.48841095]
[12.16159630 116.36401367]
[3.83933520 129.60311890]
[-11.06158257 134.34619141]
[-25.50539970 128.35368347]
[-32.67218781 114.45507812]
[-29.17800713 99.21287537]
[-16.67270279 89.82397461]
[-1.06090021 90.72153473]
[10.28598785 101.48174286]
[25.16826248 99.60613251]
[40.05053711 97.73052216]
[54.93281174 95.85491943]
[57.92918396 94.44410706]
[60.96223068 93.26337433]
[46.93096161 87.96021271]
[32.89969254 82.65705872]
[18.86842155 77.35389709]
[5.97292233 85.98441315]
[-9.53131008 85.35321808]
[-21.68258095 75.70302582]
[-25.80847931 60.74452591]
[-20.32251358 46.22957611]
[-7.33414841 37.73946381]
[8.16232395 38.53881454]
[20.20819473 48.32025909]
[24.17157936 63.32263184]
[38.20285034 68.62578583]
[52.23411942 73.92894745]
[66.26538849 79.23210144]
[81.44863129 64.99748230]
[101.75229645 60.42400742]
[121.57230377 66.77402496]
[135.43806458 82.29483795]
[149.88313293 78.25251770]
[164.32818604 74.21019745]
[171.74763489 68.88469696]
[179.01614380 70.21646881]
[193.51924133 66.38763428]
[208.02235413 62.55879974]
[222.52545166 58.72996521]
[237.02856445 54.90113068]
[252.53317261 36.05359268]
[275.26525879 42.73847580]
[289.29650879 37.43531799]
[303.32778931 32.13216019]
[317.35903931 26.82900238]
[331.39031982 21.52584648]
[345.42160034 16.22268867]
[359.45285034 10.91953087]
[373.23580933 5.00091410]
[386.74349976 -1.52157617]
[400.25115967 -8.04406643]
[413.75881958 -14.56655693]
[427.26651001 -21.08904648]
[434.76651001 -34.07942963]
[433.66131592 -49.03865814]
[432.55612183 -63.99788666]
[431.45092773 -78.95711517]
[424.25399780 -94.30770874]
[437.01235962 -105.47283936]
[451.27304077 -96.30387878]
[446.41015625 -80.06230927]
[447.51535034 -65.10308075]
[448.62054443 -50.14384842]
[449.72573853 -35.18461990]
[464.01193237 -30.61253357]
[473.59713745 -42.15046310]
[483.18234253 -53.68839645]
[492.76754761 -65.22632599]
[502.35275269 -76.76425934]
[511.93795776 -88.30218506]
[521.52319336 -99.84011841]
[521.11499023 -112.73082733]
[529.33477783 -122.14328003]
[541.36584473 -123.39096832]
[551.12017822 -134.78627014]
[554.21636963 -150.30155945]
[568.37066650 -154.93882751]
[578.12500000 -166.33413696]
[587.87933350 -177.72944641]
[597.63366699 -189.12475586]
[592.44720459 -203.58143616]
[595.19970703 -218.69168091]
[605.15081787 -230.39088440]
[619.62371826 -235.53202820]
[634.72521973 -232.73216248]
[646.39318848 -222.74444580]
[651.48895264 -208.25552368]
[648.64172363 -193.16284180]
[638.61749268 -181.52624512]
[624.11267090 -176.47593689]
[609.02899170 -179.37042236]
[599.27465820 -167.97511292]
[589.52032471 -156.57980347]
[579.76599121 -145.18449402]
[577.36749268 -130.48426819]
[562.51550293 -125.03194427]
[552.76116943 -113.63663483]
[550.47753906 -96.23621368]
[533.06109619 -90.25491333]
[523.47589111 -78.71697998]
[513.89068604 -67.17905426]
[504.30548096 -55.64112091]
[494.72027588 -44.10319138]
[485.13507080 -32.56525803]
[475.54986572 -21.02732849]
[479.69860840 -6.61247587]
[493.95071411 -1.93515897]
[508.20285034 2.74215794]
[522.45495605 7.41947460]
[536.70703125 12.09679127]
[550.95916748 16.77410889]
[564.93438721 9.89429188]
[579.32141113 14.84078312]
[585.79412842 28.20638657]
[600.04626465 32.88370514]
[614.29833984 37.56101990]
[628.55047607 42.23833847]
[637.67846680 41.94078827]
[642.97741699 47.09116364]
[657.15899658 51.97817230]
[671.34051514 56.86518097]
[683.39050293 47.23183823]
[698.73815918 45.66519547]
[712.48602295 52.66517258]
[720.24725342 65.99809265]
[719.54522705 81.40947723]
[710.60406494 93.98160553]
[696.27673340 99.70275879]
[681.13513184 96.74733734]
[670.01080322 86.05840302]
[666.45355225 71.04676056]
[652.27197266 66.15975189]
[638.09039307 61.27274323]
[623.87316895 56.49045181]
[609.62103271 51.81313324]
[595.36889648 47.13581467]
[581.11682129 42.45849991]
[567.98303223 49.38956070]
[553.46276855 44.84912491]
[546.28186035 31.02622032]
[532.02972412 26.34890366]
[517.77764893 21.67158699]
[503.52551270 16.99427032]
[489.27340698 12.31695366]
[475.02130127 7.63963652]
[433.78900146 -7.58137798]
[420.28131104 -1.05888784]
[406.77365112 5.46360254]
[393.26599121 11.98609257]
[379.75830078 18.50858307]
[393.53216553 24.44834137]
[399.19842529 38.33694839]
[393.51052856 52.21670914]
[379.72741699 58.13499069]
[365.74636841 52.70082092]
[359.57803345 39.02779388]
[364.75601196 24.95079994]
[350.72476196 30.25395775]
[336.69348145 35.55711365]
[322.66220093 40.86027145]
[308.63095093 46.16342926]
[294.59967041 51.46658707]
[280.56838989 56.76974487]
[279.86212158 62.70732880]
[277.51235962 68.24955750]
[273.68487549 72.94797516]
[268.66586304 76.41564178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 85]
[5 84]
[6 83]
[7 82]
[8 81]
[9 79]
[10 78]
[11 77]
[18 41]
[19 40]
[20 39]
[21 38]
[23 34]
[24 33]
[42 56]
[43 55]
[44 54]
[45 53]
[58 73]
[59 72]
[60 71]
[61 70]
[87 208]
[88 207]
[89 206]
[90 205]
[91 204]
[92 203]
[93 202]
[94 195]
[95 194]
[96 193]
[97 192]
[98 191]
[99 109]
[100 108]
[101 107]
[102 106]
[110 150]
[111 149]
[112 148]
[113 147]
[114 146]
[115 145]
[116 144]
[119 142]
[120 141]
[122 139]
[123 138]
[124 137]
[125 136]
[151 190]
[152 189]
[153 188]
[154 187]
[155 186]
[156 185]
[159 182]
[160 181]
[161 180]
[162 179]
[164 178]
[165 177]
[166 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
