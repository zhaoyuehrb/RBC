%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCACCACAGGUAGCUUUUGGCAUGGUAGGUAUAGGGCUGUGGAUAUCGUCAGUUUGACCAAGUAUUCCAAGAGGCCCCAUGGAGUUUGUCAUCUGUAAUAGAGGACGUUAGUGCAUUAGUGAUGAAAAAACUGCUUACCACUGACUAUUGUGAUCUCCCAGGGAGUAUAAGGCAGCUCCGCACUUGAAAUCCAUGGCCCAAAAUGACUCUACCAGUGGAGACUCUCUUCUGUGAAGAAGACGACCAGAUAAGA\
GGUUGGG\
) } def
/len { sequence length } bind def

/coor [
[238.39793396 646.24139404]
[230.90007019 646.42053223]
[227.52484131 661.03588867]
[224.14959717 675.65118408]
[220.86172485 690.28643799]
[217.66130066 704.94104004]
[214.46089172 719.59564209]
[216.98854065 736.36010742]
[201.57896423 743.42987061]
[190.51971436 730.57958984]
[199.80628967 716.39520264]
[203.00669861 701.74060059]
[206.20712280 687.08599854]
[204.56922913 679.90399170]
[209.53427124 672.27600098]
[212.90951538 657.66064453]
[216.28474426 643.04534912]
[215.92642212 628.04962158]
[211.85697937 613.61218262]
[207.78752136 599.17474365]
[196.88754272 589.02386475]
[200.59071350 573.64215088]
[196.52125549 559.20471191]
[191.69740295 553.63745117]
[192.49053955 544.57049561]
[188.59382629 530.08551025]
[184.69711304 515.60046387]
[180.80041504 501.11547852]
[176.90370178 486.63046265]
[173.00700378 472.14544678]
[169.02384949 457.68395996]
[164.95440674 443.24652100]
[147.05313110 437.76678467]
[136.01411438 422.46017456]
[136.47305298 403.44287109]
[148.42558289 388.45068359]
[143.84147644 374.16830444]
[139.25738525 359.88595581]
[134.67327881 345.60357666]
[130.08917236 331.32122803]
[125.50507355 317.03884888]
[120.92096710 302.75646973]
[116.33686829 288.47412109]
[111.75276184 274.19174194]
[107.16866302 259.90939331]
[102.58455658 245.62701416]
[94.41186523 245.38464355]
[86.37513733 242.00506592]
[79.69464111 235.59040833]
[75.51961517 226.71795654]
[61.01158142 230.52807617]
[46.50355148 234.33821106]
[31.99551964 238.14833069]
[18.21169853 248.01963806]
[4.91042852 237.50714111]
[11.32993412 221.81553650]
[28.18539619 223.64030457]
[42.69342422 219.83016968]
[57.20145798 216.02005005]
[71.70948792 212.20993042]
[79.84648895 199.60876465]
[77.34967041 184.81802368]
[74.85284424 170.02729797]
[72.35602570 155.23655701]
[69.85920715 140.44581604]
[59.73820496 129.37489319]
[45.23017502 125.56477356]
[30.72214317 121.75465393]
[16.21411133 117.94452667]
[1.70608163 114.13439941]
[-12.80194950 110.32427979]
[-23.55097198 121.29487610]
[-38.34950256 125.40572357]
[-53.21681213 121.55102539]
[-64.15366364 110.76766968]
[-68.21810150 95.95632172]
[-64.31681824 81.10117340]
[-53.49923325 70.19817352]
[-38.67522049 66.18017578]
[-23.83237267 70.12800598]
[-12.96333408 80.97971344]
[-8.99182510 95.81624603]
[5.51620579 99.62637329]
[20.02423668 103.43649292]
[34.53226852 107.24662018]
[49.04029846 111.05674744]
[63.54832840 114.86686707]
[67.31124878 108.37915802]
[74.83709717 95.40373230]
[78.60002136 88.91602325]
[68.08886719 78.21482086]
[57.57771683 67.51362610]
[42.38743973 63.09026337]
[38.98878098 48.58859634]
[28.47762489 37.88739777]
[17.96647263 27.18619728]
[7.45531797 16.48500061]
[-7.95739079 9.42208672]
[-5.43716192 -7.34349632]
[11.37088490 -9.56293392]
[18.15651703 5.97384596]
[28.66767120 16.67504501]
[39.17882538 27.37624359]
[49.68997955 38.07744217]
[64.12842560 41.73538208]
[68.27891541 57.00247192]
[78.79006958 67.70366669]
[89.30122375 78.40486908]
[102.93553162 72.15142822]
[101.68274689 57.20383453]
[100.42996216 42.25624084]
[99.17716980 27.30864716]
[97.92438507 12.36105537]
[96.67160034 -2.58653760]
[95.41880798 -17.53413010]
[79.62241364 -26.48908615]
[72.44969940 -42.99871826]
[76.61064911 -60.34951019]
[90.24787140 -71.60950470]
[88.63836670 -86.52290344]
[87.02886963 -101.43630219]
[85.41937256 -116.34970093]
[71.57534027 -123.15751648]
[63.62915421 -136.38104248]
[64.11641693 -151.80070496]
[72.88164520 -164.49615479]
[87.12788391 -170.41630554]
[102.30921173 -167.67207336]
[113.58132172 -157.13911438]
[117.34732056 -142.17846680]
[112.40550232 -127.56403351]
[100.33277130 -117.95920563]
[101.94226837 -103.04579926]
[103.55177307 -88.13240051]
[105.16127014 -73.21900177]
[116.43873596 -68.82383728]
[124.83621979 -60.00735092]
[128.72323608 -48.39274597]
[127.30760956 -36.15451431]
[120.79601288 -25.61137009]
[110.36640167 -18.78691673]
[111.61919403 -3.83932447]
[112.87197876 11.10826778]
[114.12476349 26.05586052]
[115.37754822 41.00345230]
[116.63034058 55.95104599]
[117.88312531 70.89863586]
[124.64316559 74.14700317]
[130.71000671 60.42863464]
[136.77684021 46.71026993]
[142.84367371 32.99190521]
[148.91050720 19.27354050]
[154.97734070 5.55517673]
[155.63658142 -9.43033028]
[168.50651550 -17.13517761]
[182.02656555 -10.63838673]
[184.05216980 4.22421503]
[172.76394653 14.10207081]
[165.84381104 27.41040039]
[158.92367554 40.71873093]
[152.00352478 54.02706146]
[145.08338928 67.33539581]
[138.16325378 80.64372253]
[144.92329407 83.89208221]
[157.37663269 75.53061676]
[169.82998657 67.16915131]
[182.28332520 58.80768585]
[194.73667908 50.44621658]
[195.17655945 34.93537903]
[204.67610168 22.66597939]
[219.58256531 18.35585403]
[234.16409302 23.66233444]
[242.81378174 36.54497147]
[242.20567322 52.05012512]
[232.57357788 64.21575165]
[217.62124634 68.36391449]
[203.09814453 62.89956665]
[190.64480591 71.26103210]
[178.19145203 79.62249756]
[165.73809814 87.98396301]
[153.28475952 96.34542847]
[140.47979736 128.05598450]
[112.90233612 143.20870972]
[84.64994049 137.94900513]
[87.14676666 152.73973083]
[89.64358521 167.53047180]
[92.14040375 182.32121277]
[94.63722229 197.11195374]
[118.43903351 202.52008057]
[127.38101196 223.22111511]
[116.86692810 241.04290771]
[121.45102692 255.32527161]
[126.03513336 269.60763550]
[130.61923218 283.89001465]
[135.20333862 298.17239380]
[139.78744507 312.45474243]
[144.37153625 326.73712158]
[148.95564270 341.01947021]
[153.53974915 355.30184937]
[158.12385559 369.58422852]
[162.70794678 383.86657715]
[174.00103760 385.48803711]
[183.83673096 391.16751099]
[190.82307434 400.05728149]
[193.98776245 410.85848999]
[192.91334534 422.01098633]
[187.79185486 431.91842651]
[179.39183044 439.17706299]
[183.46128845 453.61450195]
[188.78500366 460.99664307]
[187.49201965 468.24871826]
[191.38871765 482.73373413]
[195.28543091 497.21875000]
[199.18212891 511.70376587]
[203.07884216 526.18878174]
[206.97555542 540.67382812]
[210.95869446 555.13531494]
[215.02815247 569.57275391]
[226.21920776 580.75622559]
[222.22496033 595.10528564]
[226.29440308 609.54272461]
[230.36386108 623.98016357]
[238.81002808 614.76037598]
[251.55593872 609.07971191]
[267.26742554 608.38226318]
[284.19119263 613.65057373]
[300.30432129 625.29479980]
[309.74645996 636.95013428]
[319.18856812 648.60540771]
[328.63070679 660.26074219]
[338.07284546 671.91607666]
[347.51495361 683.57135010]
[363.01153564 688.93688965]
[365.84704590 705.08898926]
[353.10455322 715.41186523]
[337.89245605 709.28613281]
[335.85964966 693.01348877]
[326.41751099 681.35815430]
[316.97540283 669.70288086]
[307.53326416 658.04754639]
[298.09115601 646.39227295]
[288.64901733 634.73693848]
[275.32894897 641.63446045]
[279.39840698 656.07189941]
[283.46786499 670.50933838]
[287.53729248 684.94677734]
[291.60675049 699.38421631]
[306.21002197 704.63055420]
[314.91271973 717.47747803]
[314.36849976 732.98498535]
[304.78659058 745.19018555]
[289.85150146 749.39990234]
[275.30599976 743.99548340]
[266.74316406 731.05493164]
[267.45559692 715.55419922]
[277.16931152 703.45367432]
[273.09985352 689.01623535]
[269.03042603 674.57879639]
[264.96096802 660.14135742]
[260.89151001 645.70391846]
[253.39364624 645.88305664]
[253.75172424 660.87878418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[5 13]
[6 12]
[7 11]
[18 222]
[19 221]
[20 220]
[22 218]
[23 217]
[25 216]
[26 215]
[27 214]
[28 213]
[29 212]
[30 211]
[31 209]
[32 208]
[36 201]
[37 200]
[38 199]
[39 198]
[40 197]
[41 196]
[42 195]
[43 194]
[44 193]
[45 192]
[46 191]
[50 60]
[51 59]
[52 58]
[53 57]
[61 188]
[62 187]
[63 186]
[64 185]
[65 184]
[66 87]
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
[90 108]
[91 107]
[92 106]
[94 104]
[95 103]
[96 102]
[97 101]
[109 147]
[110 146]
[111 145]
[112 144]
[113 143]
[114 142]
[115 141]
[119 135]
[120 134]
[121 133]
[122 132]
[164 181]
[165 180]
[166 179]
[167 178]
[168 177]
[227 242]
[228 241]
[229 240]
[230 239]
[231 238]
[232 237]
[243 260]
[244 259]
[245 258]
[246 257]
[247 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
