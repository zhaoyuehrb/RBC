%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUCUAAAAUACUUAGGGAACUCUUGGGACUGUGGAAGCCCAGGAGACCAGAUUUCGUUUCCUGCAUCUCCAAACAUGGCGACCUAGGAGAAGGGGAAGAACAAUUUUUUCUCCUCUUUUGGGAAGGUUUGUGUCUAGUAGUGCCUGUGCCCCUGGGCAGAUUGGAGAGAAGAGGGACGACUGGAGAAUCGUCGAGAACCAGCGGAGAAAAGAAAAAGCAACGUUUAAUUCUAGAAGGCCUCCUGUCCCUGCC\
UGCUCUGGGUGCUC\
) } def
/len { sequence length } bind def

/coor [
[316.89532471 140.94474792]
[302.09390259 138.51206970]
[287.29248047 136.07940674]
[272.49105835 133.64672852]
[258.67745972 139.21752930]
[246.31480408 129.34457397]
[231.51338196 126.91190338]
[216.71195984 124.47923279]
[202.47401428 136.02612305]
[184.00514221 133.41822815]
[173.15438843 117.85488892]
[158.30036926 115.76728821]
[143.44635010 113.67969513]
[128.59231567 111.59209442]
[107.28968811 129.97929382]
[79.92270660 123.42647552]
[67.68568420 132.10145569]
[55.44866562 140.77644348]
[43.21164703 149.45143127]
[30.97462845 158.12641907]
[18.73760986 166.80140686]
[6.50059032 175.47637939]
[-5.73642874 184.15136719]
[-17.39361763 193.59117126]
[-28.42325401 203.75715637]
[-39.45288849 213.92314148]
[-50.48252487 224.08911133]
[-61.51215744 234.25509644]
[-72.54179382 244.42108154]
[-83.57142639 254.58705139]
[-87.74070740 262.67361450]
[-94.78903961 264.80624390]
[-105.93621063 274.84320068]
[-108.20836639 290.72451782]
[-122.11397552 298.72537231]
[-136.98585510 292.70816040]
[-141.41555786 277.28878784]
[-132.00502014 264.29568481]
[-115.97317505 263.69601440]
[-104.82600403 253.65905762]
[-93.73741150 243.55741882]
[-82.70777130 233.39144897]
[-71.67813873 223.22546387]
[-60.64850235 213.05947876]
[-49.61886978 202.89350891]
[-38.58923340 192.72752380]
[-27.55959892 182.56153870]
[-42.34120941 185.11184692]
[-56.63690186 180.56947327]
[-67.23542023 169.95478821]
[-71.75599670 155.65219116]
[-69.18316650 140.87448120]
[-60.09487915 128.94120789]
[-46.53264236 122.53295898]
[-31.54295921 123.08921814]
[-18.49298668 130.48504639]
[-10.31415939 143.05909729]
[-8.84369850 157.98684692]
[-14.41141415 171.91435242]
[-2.17439485 163.23936462]
[10.06262398 154.56437683]
[22.29964256 145.88940430]
[34.53666306 137.21441650]
[46.77368164 128.53942871]
[59.01070023 119.86444092]
[71.24771881 111.18946075]
[68.07327271 108.87958527]
[65.09484100 106.04212952]
[62.38650131 102.69538116]
[47.71428680 99.57670593]
[32.60700607 104.27571106]
[21.76652908 94.06134033]
[7.09431553 90.94266510]
[-7.57789850 87.82398987]
[-22.99871826 93.40345001]
[-35.36505508 82.63285065]
[-31.95547867 66.59206390]
[-16.27747345 61.78247452]
[-4.45922327 73.15177917]
[10.21299076 76.27045441]
[24.88520432 79.38912964]
[38.94303131 74.46705627]
[50.83296204 84.90449524]
[65.50517273 88.02317047]
[73.23074341 75.16565704]
[63.58893204 63.67499161]
[53.94711685 52.18432617]
[44.30530548 40.69366074]
[34.66349030 29.20299149]
[25.02167511 17.71232605]
[15.37986088 6.22165918]
[5.73804712 -5.26900768]
[-3.90376711 -16.75967407]
[-11.78757572 -21.30066490]
[-13.58997536 -28.44058990]
[-23.09744072 -40.04266357]
[-32.60490417 -51.64473724]
[-42.11236954 -63.24681091]
[-51.61983490 -74.84888458]
[-61.12729645 -86.45095825]
[-70.63476562 -98.05303192]
[-80.14222717 -109.65510559]
[-89.64968872 -121.25717926]
[-105.17615509 -126.53552246]
[-108.10237122 -142.67149353]
[-95.41809845 -153.06578064]
[-80.17182922 -147.02563477]
[-78.04761505 -130.76464844]
[-68.54015350 -119.16257477]
[-59.03268814 -107.56050110]
[-49.52522278 -95.95841980]
[-40.01776123 -84.35634613]
[-30.51029587 -72.75427246]
[-21.00283051 -61.15220261]
[-11.49536610 -49.55012894]
[-1.98790181 -37.94805527]
[7.58689928 -26.40148926]
[17.22871399 -14.91082191]
[26.87052727 -3.42015505]
[36.51234055 8.07051182]
[46.15415573 19.56117821]
[55.79597092 31.05184555]
[65.43778229 42.54251099]
[75.07959747 54.03317642]
[84.72141266 65.52384186]
[93.33334351 63.75519943]
[101.91954803 64.05554199]
[110.00099182 66.31473541]
[117.14842987 70.31591034]
[123.00518036 75.75247192]
[127.30471802 82.24980164]
[129.88226318 89.38996124]
[130.67991638 96.73807526]
[145.53393555 98.82566833]
[160.38795471 100.91326904]
[175.24198914 103.00086212]
[183.13099670 94.16381073]
[194.18733215 90.25646210]
[205.64103699 92.13559723]
[214.68093872 99.22330475]
[219.14462280 109.67781067]
[233.94604492 112.11048126]
[248.74746704 114.54314423]
[263.61978149 109.14636230]
[274.92373657 118.84531403]
[289.72515869 121.27798462]
[304.52658081 123.71064758]
[319.32800293 126.14331818]
[334.16961670 128.31729126]
[349.04693604 130.23191833]
[363.92422485 132.14654541]
[378.80154419 134.06117249]
[393.67883301 135.97579956]
[408.55615234 137.89042664]
[419.20236206 130.65013123]
[431.53469849 132.52848816]
[439.04382324 141.98368835]
[453.89785767 144.07128906]
[468.75186157 146.15888977]
[483.60589600 148.24647522]
[498.45989990 150.33407593]
[513.31390381 152.42167664]
[524.91394043 140.08843994]
[541.41784668 137.14192200]
[556.27105713 144.55059814]
[563.69470215 159.21006775]
[578.57202148 161.12469482]
[593.44934082 163.03932190]
[608.12420654 157.12678528]
[619.75982666 166.42532349]
[634.63708496 168.33995056]
[640.82092285 166.16777039]
[646.35333252 167.25614929]
[649.83679199 170.47612000]
[664.66552734 172.73640442]
[679.49426270 174.99668884]
[694.32293701 177.25697327]
[709.23144531 175.60229492]
[723.20361328 170.14538574]
[737.17578125 164.68849182]
[751.14801025 159.23159790]
[765.12017822 153.77470398]
[768.91864014 138.72970581]
[780.85638428 128.81660461]
[796.34313965 127.84715271]
[809.42395020 136.19413757]
[815.06896973 150.64797974]
[811.10754395 165.65087891]
[799.06292725 175.43389893]
[783.56658936 176.23529053]
[770.57708740 167.74688721]
[756.60491943 173.20379639]
[742.63269043 178.66069031]
[728.66052246 184.11758423]
[714.68829346 189.57449341]
[714.95007324 197.06991577]
[715.73529053 219.55621338]
[730.05413818 224.02516174]
[744.37292480 228.49412537]
[758.69177246 232.96307373]
[774.05334473 224.55870056]
[790.41271973 229.77890015]
[797.77117920 244.91921997]
[812.14105225 249.22126770]
[826.51086426 253.52331543]
[840.88073730 257.82534790]
[849.68096924 245.50325012]
[862.00683594 236.70825195]
[876.52130127 232.39439392]
[891.64990234 233.02958679]
[905.75164795 238.54493713]
[917.29687500 248.34219360]
[925.03326416 261.35861206]
[928.12158203 276.18228149]
[926.22686768 291.20523071]
[919.55462646 304.79788208]
[908.82867432 315.48577881]
[895.21234131 322.10964966]
[880.18280029 323.95092773]
[865.37017822 320.80990601]
[852.38134766 313.02728271]
[842.62524414 301.44726562]
[837.16003418 287.32598877]
[836.57867432 272.19519043]
[822.20880127 267.89315796]
[807.83898926 263.59109497]
[793.46911621 259.28906250]
[783.11425781 266.92276001]
[770.05853271 267.21395874]
[759.05059814 259.83312988]
[754.22277832 247.28189087]
[739.90399170 242.81292725]
[725.58514404 238.34397888]
[711.26635742 233.87503052]
[699.05175781 242.58160400]
[684.05987549 243.07392883]
[671.30041504 235.18748474]
[665.03717041 221.55766296]
[667.36315918 206.73910522]
[677.50103760 195.68367004]
[692.06268311 192.08570862]
[677.23394775 189.82542419]
[662.40521240 187.56513977]
[647.57647705 185.30485535]
[632.72247314 183.21725464]
[617.84515381 181.30262756]
[604.23437500 187.35211182]
[591.53472900 177.91662598]
[576.65740967 176.00199890]
[561.78009033 174.08737183]
[553.57415771 184.59358215]
[541.15222168 189.72256470]
[527.70983887 188.03939819]
[516.76257324 179.87673950]
[511.22631836 167.27569580]
[496.37231445 165.18809509]
[481.51828003 163.10049438]
[466.66427612 161.01290894]
[451.81024170 158.92530823]
[436.95623779 156.83770752]
[421.04220581 164.27009583]
[406.64154053 152.76773071]
[391.76422119 150.85310364]
[376.88690186 148.93847656]
[362.00961304 147.02384949]
[347.13229370 145.10922241]
[332.25500488 143.19459534]
[329.27615356 145.01795959]
[325.27542114 145.50906372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[6 143]
[7 142]
[8 141]
[11 136]
[12 135]
[13 134]
[14 133]
[16 66]
[17 65]
[18 64]
[19 63]
[20 62]
[21 61]
[22 60]
[23 59]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[29 42]
[30 41]
[32 40]
[33 39]
[69 84]
[70 83]
[72 81]
[73 80]
[74 79]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[149 267]
[150 266]
[151 265]
[152 264]
[153 263]
[154 262]
[157 260]
[158 259]
[159 258]
[160 257]
[161 256]
[162 255]
[166 250]
[167 249]
[168 248]
[170 246]
[171 245]
[174 244]
[175 243]
[176 242]
[177 241]
[178 195]
[179 194]
[180 193]
[181 192]
[182 191]
[197 234]
[198 233]
[199 232]
[200 231]
[203 227]
[204 226]
[205 225]
[206 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
