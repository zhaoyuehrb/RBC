%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGUAACGCGACUACAGGGGGCUGGAAACAGUUCAGUCUUUGAUUGGUUGCUGAGAGGCGGGGCUACUCGACUGCUCUGGAGGUAGCGGCCGCGGUGAGGAGAGCC\
) } def
/len { sequence length } bind def

/coor [
[107.43738556 138.35966492]
[98.93974304 138.58772278]
[90.69760895 136.97845459]
[83.09851837 133.65306091]
[76.48980713 128.81236267]
[71.16274261 122.72514343]
[67.33981323 115.71353149]
[65.16560364 108.13612366]
[64.70172882 100.36970520]
[50.01161575 97.33644104]
[35.32150650 94.30317688]
[20.63139725 91.26991272]
[5.94128799 88.23664856]
[-8.74882126 85.20339203]
[-23.43893051 82.17012787]
[-37.78990173 92.04253387]
[-54.52768707 88.62497711]
[-63.49982834 74.48363495]
[-78.27194214 71.87891388]
[-93.04405975 69.27418518]
[-107.81617737 66.66946411]
[-122.58829498 64.06474304]
[-137.36041260 61.46002197]
[-152.13252258 58.85529709]
[-166.90464783 56.25057602]
[-181.67675781 53.64585114]
[-196.44888306 51.04113007]
[-210.36241150 59.02817917]
[-225.22831726 52.99621964]
[-229.64273071 37.57245636]
[-220.21929932 24.58868027]
[-204.18687439 24.00493050]
[-193.84414673 36.26901245]
[-179.07203674 38.87373734]
[-164.29992676 41.47845840]
[-149.52780151 44.08318329]
[-134.75569153 46.68790436]
[-119.98357391 49.29262543]
[-105.21145630 51.89735031]
[-90.43933868 54.50207138]
[-75.66722107 57.10679626]
[-60.89510727 59.71151733]
[-51.39766693 50.87123489]
[-38.34168625 49.13745880]
[-26.52024841 55.37501526]
[-20.40566635 67.48001862]
[-5.71555758 70.51328278]
[8.97455215 73.54653931]
[23.66466141 76.57980347]
[38.35477066 79.61306763]
[53.04487991 82.64633179]
[67.73498535 85.67959595]
[74.96728516 74.16399384]
[86.19791412 66.05035400]
[99.90053558 62.67823792]
[114.12186432 64.72603607]
[126.76004028 72.08504486]
[135.87513733 83.84786224]
[139.98614502 98.41670227]
[154.47502136 94.53441620]
[168.96391296 90.65213013]
[183.45280457 86.76984406]
[196.07009888 73.45705414]
[212.81860352 78.46937561]
[227.18844604 74.16732025]
[241.55828857 69.86527252]
[255.92813110 65.56322479]
[270.29797363 61.26117706]
[284.60372925 56.75059128]
[298.84237671 52.03242111]
[301.86956787 36.97481155]
[312.03207397 25.45876122]
[326.59616089 20.58202744]
[341.64422607 23.65642738]
[353.12835693 33.85496140]
[357.95941162 48.43427658]
[354.83786011 63.47261047]
[344.60339355 74.92472839]
[330.00900269 79.71006012]
[314.98052979 76.54138947]
[303.56054688 66.27105713]
[289.32189941 70.98922729]
[283.87850952 76.16055298]
[274.60000610 75.63101959]
[260.23016357 79.93306732]
[245.86033630 84.23511505]
[231.49049377 88.53717041]
[217.12065125 92.83921814]
[211.03349304 103.40468597]
[198.97494507 107.04644775]
[187.33508301 101.25873566]
[172.84619141 105.14102173]
[158.35731506 109.02330780]
[143.86842346 112.90559387]
[137.33210754 126.40657043]
[143.27330017 140.17980957]
[149.21449280 153.95304871]
[164.24601746 158.26432800]
[172.94670105 171.25788879]
[171.20832825 186.79853821]
[159.85171509 197.54849243]
[144.23910522 198.43193054]
[131.74229431 189.03172302]
[128.26190186 173.78637695]
[135.44125366 159.89425659]
[129.50006104 146.12101746]
[123.55886078 132.34776306]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 52]
[10 51]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[59 94]
[60 93]
[61 92]
[62 91]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[69 82]
[70 81]
[95 107]
[96 106]
[97 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
