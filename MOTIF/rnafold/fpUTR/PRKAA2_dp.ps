%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRKAA2)
} def

/sequence { (\
CUGUGGGUAGGCGGCGGCGGCGGCGGCUACGCGGAGCGGCAGGCGGUGGAGCGAGGCCGCGCGCGCCGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.015369370 ubox
1 10 0.086838137 ubox
1 11 0.021948411 ubox
1 14 0.817942110 ubox
1 17 0.006167776 ubox
1 34 0.055748393 ubox
1 36 0.473350677 ubox
1 39 0.008245303 ubox
1 42 0.006515946 ubox
1 71 0.023979537 ubox
2 6 0.014052344 ubox
2 9 0.086223792 ubox
2 10 0.022064402 ubox
2 13 0.833082905 ubox
2 16 0.006334388 ubox
2 31 0.003958675 ubox
2 33 0.055530815 ubox
2 35 0.482712986 ubox
2 38 0.008443678 ubox
2 41 0.006602548 ubox
2 70 0.024330799 ubox
3 8 0.073546547 ubox
3 12 0.841839641 ubox
3 15 0.014318311 ubox
3 30 0.006795231 ubox
3 32 0.054674647 ubox
3 37 0.008987801 ubox
3 40 0.006615242 ubox
3 66 0.004623750 ubox
4 11 0.835766570 ubox
4 13 0.044619718 ubox
4 14 0.012422178 ubox
4 29 0.006826872 ubox
4 31 0.053124449 ubox
4 33 0.483402060 ubox
4 36 0.008381538 ubox
4 39 0.006141667 ubox
4 65 0.004643417 ubox
4 68 0.029376745 ubox
5 12 0.059038795 ubox
5 28 0.006708292 ubox
5 30 0.029721458 ubox
5 32 0.487760449 ubox
5 64 0.004149977 ubox
5 67 0.035966112 ubox
6 27 0.006589553 ubox
6 28 0.013677639 ubox
6 66 0.035791358 ubox
6 67 0.009171197 ubox
7 15 0.011058247 ubox
7 27 0.015132962 ubox
7 30 0.493139738 ubox
7 62 0.004023242 ubox
7 64 0.008714593 ubox
7 66 0.008948767 ubox
8 14 0.011226359 ubox
8 26 0.015063058 ubox
8 29 0.493835144 ubox
8 61 0.003860426 ubox
8 63 0.008686374 ubox
8 65 0.007565604 ubox
9 28 0.493885578 ubox
10 27 0.493832126 ubox
10 28 0.007533888 ubox
10 67 0.051351967 ubox
11 24 0.028914330 ubox
11 27 0.011795739 ubox
11 60 0.009687424 ubox
11 62 0.004548308 ubox
11 64 0.005495191 ubox
11 66 0.051431233 ubox
12 23 0.028992419 ubox
12 25 0.493267207 ubox
12 26 0.014202172 ubox
12 59 0.009692984 ubox
12 61 0.004541267 ubox
12 63 0.005510634 ubox
12 65 0.051387533 ubox
12 68 0.110859054 ubox
13 24 0.493204761 ubox
13 28 0.003988295 ubox
13 58 0.009693751 ubox
13 62 0.005199376 ubox
13 64 0.044452729 ubox
13 67 0.113229604 ubox
14 21 0.035972130 ubox
14 24 0.015565050 ubox
14 27 0.004673184 ubox
14 57 0.009694007 ubox
14 60 0.005711870 ubox
14 62 0.035747095 ubox
14 64 0.025511050 ubox
14 66 0.113235896 ubox
15 20 0.036025557 ubox
15 22 0.492716853 ubox
15 23 0.016305816 ubox
15 26 0.004736383 ubox
15 56 0.009676951 ubox
15 59 0.006479510 ubox
15 61 0.035758898 ubox
15 63 0.035995912 ubox
15 65 0.113095551 ubox
15 68 0.848033171 ubox
16 21 0.490638931 ubox
16 58 0.006484106 ubox
16 60 0.025290998 ubox
16 62 0.035755392 ubox
16 64 0.088678700 ubox
16 67 0.860047372 ubox
17 24 0.005062152 ubox
17 52 0.008014986 ubox
17 57 0.006483649 ubox
17 60 0.044540220 ubox
17 62 0.047896177 ubox
17 64 0.068752118 ubox
17 66 0.860086493 ubox
18 23 0.005116265 ubox
18 51 0.008048470 ubox
18 53 0.005202467 ubox
18 56 0.006476483 ubox
18 59 0.051196628 ubox
18 61 0.047962554 ubox
18 63 0.096966511 ubox
18 65 0.859392998 ubox
18 68 0.011419961 ubox
19 52 0.005120167 ubox
19 58 0.051239543 ubox
19 60 0.032720896 ubox
19 62 0.077984129 ubox
19 64 0.745567536 ubox
19 67 0.011657598 ubox
20 52 0.003183126 ubox
20 57 0.051241045 ubox
20 60 0.056354670 ubox
20 62 0.604660430 ubox
20 64 0.425573981 ubox
20 66 0.011636221 ubox
21 48 0.008862935 ubox
21 51 0.003281132 ubox
21 53 0.004850981 ubox
21 56 0.051226623 ubox
21 59 0.064836539 ubox
21 61 0.606857111 ubox
21 63 0.600870626 ubox
21 65 0.011615745 ubox
22 47 0.008973756 ubox
22 52 0.004436807 ubox
22 58 0.064864472 ubox
22 60 0.429650444 ubox
22 62 0.599558129 ubox
22 64 0.011471344 ubox
23 32 0.015259637 ubox
23 40 0.007927493 ubox
23 47 0.005736646 ubox
23 52 0.007831323 ubox
23 57 0.064859353 ubox
23 60 0.750275839 ubox
24 31 0.015317119 ubox
24 39 0.007934664 ubox
24 45 0.009231537 ubox
24 46 0.005821280 ubox
24 51 0.008052572 ubox
24 53 0.040246993 ubox
24 56 0.064684679 ubox
24 59 0.864316915 ubox
25 30 0.015290493 ubox
25 44 0.009255108 ubox
25 52 0.034002456 ubox
25 58 0.865010665 ubox
26 37 0.008034922 ubox
26 44 0.006032582 ubox
26 52 0.070678737 ubox
26 57 0.865025308 ubox
27 36 0.008038594 ubox
27 42 0.009301269 ubox
27 43 0.006043849 ubox
27 49 0.026971601 ubox
27 51 0.074052335 ubox
27 55 0.049665296 ubox
27 56 0.863798099 ubox
28 35 0.007795250 ubox
28 41 0.008956321 ubox
28 42 0.005768551 ubox
28 48 0.027032463 ubox
28 50 0.057036051 ubox
28 54 0.067132634 ubox
28 55 0.840352317 ubox
29 47 0.026710247 ubox
30 38 0.015385265 ubox
30 45 0.017817915 ubox
30 46 0.021572487 ubox
30 48 0.073048934 ubox
30 53 0.860639163 ubox
30 65 0.012682142 ubox
31 37 0.015576294 ubox
31 40 0.014164622 ubox
31 44 0.023828695 ubox
31 47 0.073771276 ubox
31 52 0.865068751 ubox
31 64 0.042760214 ubox
31 66 0.023201302 ubox
32 36 0.015465465 ubox
32 39 0.014163473 ubox
32 43 0.023857782 ubox
32 45 0.014463854 ubox
32 46 0.073448108 ubox
32 48 0.012939507 ubox
32 51 0.864788001 ubox
32 53 0.008285595 ubox
32 63 0.042807949 ubox
32 65 0.023392140 ubox
32 68 0.027465116 ubox
33 44 0.014315177 ubox
33 47 0.038076334 ubox
33 52 0.008220574 ubox
33 62 0.042572378 ubox
33 64 0.023394277 ubox
33 67 0.037409885 ubox
34 66 0.037299354 ubox
36 44 0.357606330 ubox
36 47 0.701223239 ubox
36 52 0.003847139 ubox
36 60 0.051886800 ubox
36 64 0.037387748 ubox
36 66 0.035764697 ubox
37 43 0.357730170 ubox
37 45 0.381808112 ubox
37 46 0.686058180 ubox
37 48 0.073176004 ubox
37 51 0.003968757 ubox
37 59 0.052113215 ubox
37 63 0.037438136 ubox
37 65 0.037124731 ubox
37 68 0.480604416 ubox
38 44 0.411899984 ubox
38 47 0.067961478 ubox
38 58 0.052131529 ubox
38 62 0.031813988 ubox
38 64 0.033517142 ubox
38 67 0.487316307 ubox
39 47 0.048656041 ubox
39 57 0.052133347 ubox
39 60 0.021581388 ubox
39 62 0.032804736 ubox
39 64 0.027709174 ubox
39 66 0.487202651 ubox
40 46 0.054491945 ubox
40 48 0.016794449 ubox
40 56 0.052065434 ubox
40 59 0.021524562 ubox
40 61 0.037925026 ubox
40 63 0.033588359 ubox
40 65 0.486033584 ubox
41 47 0.016512923 ubox
42 58 0.022765537 ubox
42 67 0.029105228 ubox
43 52 0.053516989 ubox
43 57 0.022776765 ubox
43 60 0.292286167 ubox
43 62 0.261801892 ubox
43 64 0.292006999 ubox
43 66 0.029151971 ubox
44 51 0.053552617 ubox
44 53 0.013023465 ubox
44 56 0.022715233 ubox
44 59 0.292561324 ubox
44 61 0.261218076 ubox
44 63 0.293303565 ubox
44 65 0.029148426 ubox
44 68 0.021050147 ubox
45 52 0.013626948 ubox
45 58 0.293495709 ubox
45 60 0.190242754 ubox
45 62 0.291660554 ubox
45 64 0.027603298 ubox
45 67 0.021529061 ubox
46 52 0.007179069 ubox
46 57 0.293719525 ubox
46 60 0.341760950 ubox
46 62 0.030641902 ubox
46 64 0.011599281 ubox
46 66 0.021531006 ubox
47 51 0.006762023 ubox
47 53 0.006927061 ubox
47 56 0.293208431 ubox
47 59 0.385039837 ubox
47 61 0.035343763 ubox
47 63 0.014793493 ubox
47 65 0.021517551 ubox
48 52 0.009890520 ubox
48 58 0.390877509 ubox
48 60 0.035055860 ubox
48 62 0.015065069 ubox
48 64 0.021393420 ubox
49 57 0.389439673 ubox
51 57 0.044377903 ubox
51 60 0.027444019 ubox
51 62 0.012714273 ubox
52 56 0.049639557 ubox
52 59 0.027813554 ubox
52 61 0.012730049 ubox
53 58 0.027436821 ubox
53 60 0.012579869 ubox
1 14 0.9500000 lbox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
15 68 0.9500000 lbox
16 67 0.9500000 lbox
17 66 0.9500000 lbox
18 65 0.9500000 lbox
19 64 0.9500000 lbox
20 62 0.9500000 lbox
21 61 0.9500000 lbox
22 60 0.9500000 lbox
24 59 0.9500000 lbox
25 58 0.9500000 lbox
26 57 0.9500000 lbox
27 56 0.9500000 lbox
28 55 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
showpage
end
%%EOF
