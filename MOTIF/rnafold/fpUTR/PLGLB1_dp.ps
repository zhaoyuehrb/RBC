%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLGLB1)
} def

/sequence { (\
AUGUAAGUCAACAACAUCCUGGGAUUGGGACACACUUUCUGGGCACUGCUGGCCAGUCCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.032757351 ubox
1 17 0.312869438 ubox
1 25 0.004537655 ubox
2 7 0.035744328 ubox
2 10 0.162465910 ubox
2 13 0.516013519 ubox
2 16 0.367359405 ubox
2 24 0.006866011 ubox
2 32 0.013759072 ubox
2 34 0.031427920 ubox
2 55 0.003163552 ubox
3 9 0.180129141 ubox
3 12 0.572788637 ubox
3 15 0.383329782 ubox
3 17 0.016064800 ubox
3 25 0.004399262 ubox
3 31 0.015803119 ubox
3 33 0.036117052 ubox
3 35 0.034282277 ubox
3 54 0.003506257 ubox
4 11 0.555660630 ubox
4 14 0.373375872 ubox
4 16 0.016233918 ubox
4 21 0.004783655 ubox
4 24 0.004972336 ubox
4 30 0.014988479 ubox
4 32 0.034055159 ubox
4 34 0.033879297 ubox
5 20 0.004997403 ubox
5 26 0.007723123 ubox
5 37 0.011997356 ubox
6 20 0.030913489 ubox
6 25 0.009329706 ubox
6 26 0.120509295 ubox
6 36 0.013808450 ubox
6 40 0.006816414 ubox
7 15 0.153682584 ubox
7 17 0.019858753 ubox
7 19 0.034315195 ubox
7 25 0.184554670 ubox
7 31 0.059551517 ubox
7 33 0.004303603 ubox
7 35 0.013994787 ubox
7 39 0.008162020 ubox
7 53 0.014292349 ubox
8 14 0.148514006 ubox
8 16 0.020263293 ubox
8 22 0.046665137 ubox
8 23 0.017796086 ubox
8 24 0.200944596 ubox
8 28 0.015144593 ubox
8 30 0.059634448 ubox
8 32 0.004155039 ubox
8 34 0.013528183 ubox
8 52 0.014314922 ubox
9 21 0.059255108 ubox
9 22 0.022403489 ubox
9 23 0.203601389 ubox
9 27 0.015933852 ubox
9 29 0.059415419 ubox
9 51 0.014336664 ubox
10 20 0.056168531 ubox
10 26 0.016094626 ubox
10 37 0.004913573 ubox
10 50 0.014159595 ubox
11 25 0.014967751 ubox
11 36 0.005050509 ubox
12 21 0.217902483 ubox
12 27 0.055907972 ubox
12 48 0.013780355 ubox
13 20 0.204201532 ubox
13 26 0.054518919 ubox
13 47 0.013384259 ubox
14 25 0.038451930 ubox
15 21 0.066459144 ubox
15 27 0.008645063 ubox
16 20 0.054084147 ubox
16 25 0.081847792 ubox
16 26 0.007072904 ubox
17 23 0.014825698 ubox
17 24 0.105667056 ubox
17 29 0.009936640 ubox
17 30 0.063982037 ubox
17 43 0.004371627 ubox
18 22 0.020679694 ubox
18 23 0.109015470 ubox
18 28 0.018326378 ubox
18 29 0.070455393 ubox
18 42 0.004797574 ubox
18 43 0.014038552 ubox
19 27 0.018389459 ubox
19 28 0.070496312 ubox
19 41 0.004825445 ubox
19 42 0.014072264 ubox
20 27 0.068562546 ubox
20 41 0.014008899 ubox
20 61 0.831520963 ubox
21 26 0.042497871 ubox
21 39 0.018106312 ubox
21 40 0.015356947 ubox
21 60 0.898874193 ubox
22 38 0.018222975 ubox
22 39 0.016381928 ubox
22 40 0.005543665 ubox
22 59 0.899031202 ubox
23 37 0.018343752 ubox
23 38 0.016244339 ubox
23 39 0.007217479 ubox
23 58 0.899027887 ubox
24 36 0.018484613 ubox
24 37 0.015840922 ubox
24 38 0.007454178 ubox
24 57 0.898399286 ubox
25 56 0.892661594 ubox
25 62 0.321522590 ubox
25 63 0.013993710 ubox
26 32 0.007569209 ubox
26 34 0.049143014 ubox
26 41 0.011215748 ubox
26 55 0.890506636 ubox
26 61 0.397145702 ubox
26 62 0.014537395 ubox
27 31 0.008518178 ubox
27 33 0.054980269 ubox
27 36 0.051833305 ubox
27 37 0.019429362 ubox
27 38 0.005087034 ubox
27 39 0.027125364 ubox
27 40 0.043511446 ubox
27 54 0.888534904 ubox
27 60 0.425925064 ubox
28 35 0.057212455 ubox
28 36 0.026035648 ubox
28 37 0.006639799 ubox
28 38 0.027749633 ubox
28 39 0.049293529 ubox
28 40 0.023966270 ubox
28 49 0.004442788 ubox
28 50 0.020280318 ubox
28 53 0.885886958 ubox
28 54 0.053334384 ubox
28 59 0.425995187 ubox
29 35 0.045356044 ubox
29 36 0.016289766 ubox
29 37 0.039609786 ubox
29 38 0.061295389 ubox
29 39 0.059257519 ubox
29 46 0.010464777 ubox
29 49 0.082767984 ubox
29 53 0.070437588 ubox
29 58 0.425983836 ubox
30 36 0.038658848 ubox
30 37 0.058134621 ubox
30 38 0.057147535 ubox
30 57 0.424624648 ubox
31 41 0.069855833 ubox
31 48 0.205143900 ubox
31 51 0.469744359 ubox
31 56 0.315410590 ubox
32 40 0.065558510 ubox
32 47 0.197739400 ubox
32 50 0.454625850 ubox
32 57 0.005368862 ubox
33 41 0.111478211 ubox
33 48 0.484065757 ubox
33 51 0.026566296 ubox
33 56 0.006315255 ubox
34 40 0.103416647 ubox
34 47 0.464346676 ubox
34 50 0.023207400 ubox
34 57 0.009091118 ubox
35 42 0.335909199 ubox
35 43 0.292964567 ubox
35 52 0.053363773 ubox
35 56 0.012896059 ubox
36 41 0.328144118 ubox
36 42 0.287859747 ubox
36 43 0.071497850 ubox
36 51 0.052618973 ubox
36 52 0.011813651 ubox
36 55 0.014469179 ubox
36 62 0.003469414 ubox
36 63 0.005319204 ubox
37 41 0.212130388 ubox
37 42 0.060770629 ubox
37 43 0.042900716 ubox
37 51 0.011942990 ubox
37 52 0.015099884 ubox
37 55 0.006321173 ubox
37 62 0.006920420 ubox
37 63 0.009288838 ubox
38 42 0.036963956 ubox
38 51 0.013855855 ubox
38 52 0.070135971 ubox
38 55 0.005920360 ubox
38 61 0.003844189 ubox
38 62 0.012300810 ubox
39 51 0.071432127 ubox
39 52 0.488620655 ubox
39 56 0.302657591 ubox
40 48 0.014177005 ubox
40 51 0.483818658 ubox
40 55 0.434647183 ubox
40 61 0.090000979 ubox
41 47 0.024935041 ubox
41 50 0.487444611 ubox
41 54 0.439636802 ubox
41 60 0.097928583 ubox
42 46 0.027430614 ubox
42 49 0.487289306 ubox
42 50 0.407234686 ubox
42 53 0.439601449 ubox
42 54 0.061187219 ubox
42 59 0.097946641 ubox
43 49 0.429266359 ubox
43 53 0.064355712 ubox
43 58 0.097929796 ubox
43 59 0.003186957 ubox
44 48 0.430220430 ubox
44 51 0.439854248 ubox
44 52 0.065838441 ubox
45 50 0.374909549 ubox
45 57 0.097675069 ubox
46 52 0.018584069 ubox
46 56 0.098001993 ubox
47 51 0.016902972 ubox
47 55 0.097959472 ubox
48 54 0.097467173 ubox
20 61 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
23 58 0.9500000 lbox
24 57 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
27 54 0.9500000 lbox
28 53 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
showpage
end
%%EOF
