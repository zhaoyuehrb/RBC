%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGAGCCCAAGCCGCCGGCUACGCGCCCUGCGCCCCCUUGGUGCCGCGUCCAGUGCCCAGCGCGCUUUGAUGCUGCAGCUCCGGGCCGGGCCGCUCUGCUUCUCUGCUCGCUGGGACGCUCUCCGACGGCUCCGCCCUCGCCUCUCGCCCCGAGUCCCUGCUGACCCCGGGGAGGUGGGGUCCGGGCCGGGCACAGCCCCGCUGAGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[222.02069092 176.74517822]
[217.04496765 164.84646606]
[203.53729248 158.32397461]
[190.02963257 151.80148315]
[176.52195740 145.27900696]
[163.01429749 138.75651550]
[149.50662231 132.23402405]
[135.99894714 125.71153259]
[123.26351929 139.61314392]
[105.29734802 147.34449768]
[85.03495789 147.01669312]
[78.21524048 160.37675476]
[71.39553070 173.73683167]
[64.57582092 187.09690857]
[62.75990295 203.95332336]
[46.05954361 206.87469482]
[38.62922287 191.63569641]
[51.21574783 180.27719116]
[58.03546143 166.91711426]
[64.85517120 153.55705261]
[71.67488098 140.19697571]
[60.87454605 129.78771973]
[47.77496338 137.09530640]
[34.67538071 144.40290833]
[21.57579613 151.71049500]
[8.47621250 159.01808167]
[6.38550043 162.81979370]
[3.48587584 165.49066162]
[0.23185934 166.91529846]
[-2.93120623 167.13764954]
[-5.61830664 166.34422302]
[-19.12597656 172.86671448]
[-32.63364410 179.38920593]
[-46.14131546 185.91169739]
[-59.64898300 192.43418884]
[-66.26813507 207.04809570]
[-81.85544586 210.84481812]
[-94.45367432 200.91183472]
[-94.39853668 184.86888123]
[-81.73232269 175.02273560]
[-66.17147064 178.92651367]
[-52.66380310 172.40402222]
[-39.15613556 165.88153076]
[-25.64846611 159.35903931]
[-12.14079666 152.83654785]
[1.16861939 145.91850281]
[14.26820278 138.61091614]
[27.36778641 131.30331421]
[40.46736908 123.99572754]
[53.56695175 116.68813324]
[52.40840530 97.85434723]
[58.34189606 80.63521576]
[69.98893738 67.49856567]
[61.82862854 54.91248322]
[53.66832352 42.32640457]
[45.50801468 29.74032402]
[37.25511551 17.21476555]
[28.91006851 4.75040817]
[20.56502151 -7.71394873]
[12.21997452 -20.17830467]
[3.87492752 -32.64266205]
[-4.47011948 -45.10701752]
[-12.81516647 -57.57137680]
[-26.92207146 -64.73418427]
[-27.57335091 -79.61454773]
[-35.91839981 -92.07890320]
[-51.30621719 -92.80084229]
[-63.17958832 -102.33375549]
[-67.11635590 -116.85842133]
[-61.80906677 -130.74980164]
[-70.15411377 -143.21415710]
[-84.26101685 -150.37696838]
[-84.91230011 -165.25733948]
[-93.25734711 -177.72169495]
[-111.72862244 -185.79722595]
[-112.16831970 -205.12927246]
[-120.87735748 -217.34207153]
[-135.18939209 -224.08569336]
[-136.27926636 -238.94036865]
[-144.98831177 -251.15318298]
[-152.51756287 -256.32226562]
[-153.73417664 -263.61093140]
[-162.26214600 -275.95086670]
[-170.79011536 -288.29080200]
[-184.76925659 -297.88348389]
[-179.42124939 -313.97186279]
[-162.48115540 -313.28652954]
[-158.45019531 -296.81875610]
[-149.92222595 -284.47885132]
[-141.39425659 -272.13891602]
[-132.77551270 -259.86221313]
[-124.06646729 -247.64941406]
[-110.37736511 -241.77934265]
[-108.66455841 -226.05111694]
[-99.95551300 -213.83831787]
[-89.76847076 -213.06430054]
[-81.51525879 -206.67732239]
[-78.06802368 -196.59486389]
[-80.79299164 -186.06674194]
[-72.44794464 -173.60238647]
[-58.93793106 -167.33110046]
[-57.68975830 -151.55920410]
[-49.34471130 -139.09484863]
[-34.47899246 -138.70954895]
[-22.54955864 -129.53608704]
[-18.25909042 -114.92631531]
[-23.45404243 -100.42395020]
[-15.10899448 -87.95959473]
[-1.59898424 -81.68831635]
[-0.35080984 -65.91641998]
[7.99423742 -53.45206451]
[16.33928490 -40.98770905]
[24.68433189 -28.52335167]
[33.02937698 -16.05899620]
[41.37442398 -3.59463882]
[49.71947098 8.86971760]
[56.05181122 12.67842579]
[58.09409714 21.58001709]
[66.25440216 34.16609955]
[74.41471100 46.75217819]
[82.57501221 59.33825684]
[94.57386017 56.09596252]
[107.00103760 56.31941986]
[118.87555695 59.99099350]
[129.26005554 66.82084656]
[137.33479309 76.26983643]
[142.46234131 87.59206390]
[144.23794556 99.89376831]
[142.52143860 112.20385742]
[156.02911377 118.72634888]
[169.53678894 125.24884033]
[183.04444885 131.77133179]
[196.55212402 138.29382324]
[210.05978394 144.81631470]
[223.56745911 151.33880615]
[241.89590454 149.55683899]
[251.19160461 164.44238281]
[264.79400635 170.76495361]
[278.39639282 177.08750916]
[287.49597168 177.86657715]
[292.15173340 183.60493469]
[305.65939331 190.12742615]
[319.16708374 196.64991760]
[332.67474365 203.17240906]
[346.18240356 209.69490051]
[350.55520630 197.44683838]
[363.49691772 187.95529175]
[382.80981445 186.14932251]
[397.63031006 188.46305847]
[412.45077515 190.77679443]
[427.27127075 193.09053040]
[442.09173584 195.40426636]
[456.91223145 197.71800232]
[469.59255981 188.67109680]
[484.58969116 191.22868347]
[493.13638306 203.37321472]
[507.95684814 205.68695068]
[522.77734375 208.00068665]
[537.59783936 210.31442261]
[552.41827393 212.62814331]
[567.23876953 214.94187927]
[578.89807129 204.52102661]
[594.52960205 204.08432007]
[606.75250244 213.83796692]
[609.79565430 229.17658997]
[602.22204590 242.85777283]
[587.60772705 248.42166138]
[572.85321045 243.24116516]
[564.92504883 229.76235962]
[550.10455322 227.44862366]
[535.28405762 225.13490295]
[520.46362305 222.82116699]
[505.64312744 220.50743103]
[490.82263184 218.19369507]
[478.98092651 227.15524292]
[463.91790771 225.01991272]
[454.59848022 212.53846741]
[439.77801514 210.22474670]
[424.95751953 207.91101074]
[410.13705444 205.59727478]
[395.31655884 203.28353882]
[380.49609375 200.96980286]
[376.27770996 207.17105103]
[382.80047607 220.67857361]
[367.84097290 219.57351685]
[363.62258911 225.77476501]
[371.21820068 238.70947266]
[378.81378174 251.64419556]
[392.47381592 259.62631226]
[392.24658203 274.51919556]
[399.84216309 287.45391846]
[407.43777466 300.38864136]
[415.03335571 313.32336426]
[428.26770020 323.91995239]
[421.74884033 339.57055664]
[404.90530396 337.63897705]
[402.09863281 320.91894531]
[394.50305176 307.98422241]
[386.90744019 295.04949951]
[379.31185913 282.11480713]
[366.19512939 275.05783081]
[365.87908936 259.23977661]
[358.28347778 246.30506897]
[350.68789673 233.37034607]
[339.65991211 223.20256042]
[326.15225220 216.68006897]
[312.64459229 210.15757751]
[299.13690186 203.63510132]
[285.62924194 197.11260986]
[272.07385254 190.68991089]
[258.47143555 184.36734009]
[244.86904907 178.04478455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 135]
[3 134]
[4 133]
[5 132]
[6 131]
[7 130]
[8 129]
[11 21]
[12 20]
[13 19]
[14 18]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[53 121]
[54 120]
[55 119]
[56 118]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[65 108]
[66 107]
[70 103]
[71 102]
[73 100]
[74 99]
[76 95]
[77 94]
[79 92]
[80 91]
[82 90]
[83 89]
[84 88]
[137 212]
[138 211]
[139 210]
[141 209]
[142 208]
[143 207]
[144 206]
[145 205]
[148 182]
[149 181]
[150 180]
[151 179]
[152 178]
[153 177]
[156 174]
[157 173]
[158 172]
[159 171]
[160 170]
[161 169]
[186 204]
[187 203]
[188 202]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
