%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUUCCGAUAUCAACUUCCUCAAACCUCUGAUGAGCUGCUGCUGCUCGACUCUGAGGUGCAUUCUUUUUUUGAUGAGAGGCAUCUCUAGGUACCAUCCCUGACCUGGUCCUC\
) } def
/len { sequence length } bind def

/coor [
[118.87076569 152.17848206]
[120.37901306 167.10246277]
[119.37742615 182.06898499]
[115.89407349 196.65892029]
[110.02648926 210.46368408]
[101.93900299 223.09667969]
[91.85809326 234.20411682]
[80.06607819 243.47496033]
[66.89318848 250.64955139]
[52.70831680 255.52699280]
[37.90871048 257.97070312]
[22.90882492 257.91220093]
[8.12872505 255.35317993]
[-6.01768017 250.36528015]
[-19.13422585 243.08816528]
[-30.85359001 233.72566223]
[-40.84757614 222.53994751]
[-48.83630371 209.84426880]
[-54.59605789 195.99417114]
[-57.96553802 181.37751770]
[-58.85038376 166.40364075]
[-57.22581100 151.49186707]
[-53.13731766 137.05981445]
[-46.69940186 123.51163483]
[-38.09235382 111.22673798]
[-27.55720711 100.54915619]
[-15.38899803 91.77791595]
[-1.92848933 85.15864563]
[12.44736195 80.87672424]
[27.33596802 79.05205536]
[42.32037735 79.73574066]
[56.98096466 82.90863037]
[70.90715790 88.48188019]
[83.70963287 96.29988861]
[72.13088226 86.76403809]
[60.55213165 77.22817993]
[48.97338104 67.69232178]
[33.63304138 70.72679901]
[19.95612526 63.14551544]
[14.40044785 48.52811050]
[19.58923340 33.77648544]
[33.07249451 25.85589981]
[48.48384857 28.50621605]
[58.54652405 40.47603226]
[58.50923538 56.11357117]
[70.08798981 65.64942932]
[81.66673279 75.18528748]
[93.24548340 84.72113800]
[83.70567322 73.14565277]
[84.39072418 58.16130066]
[94.94692993 47.50454712]
[109.92411804 46.67749405]
[121.58951569 56.10715103]
[123.92025757 70.92496490]
[115.71131897 83.48166656]
[126.17076874 72.72992706]
[136.63021851 61.97819138]
[147.08967590 51.22645569]
[157.54913330 40.47471619]
[168.00857544 29.72297859]
[178.46803284 18.97124100]
[182.28045654 10.51447582]
[189.36691284 8.07235336]
[200.11865234 -2.38709855]
[210.87039185 -12.84655094]
[221.62213135 -23.30600357]
[232.37387085 -33.76545334]
[230.02465820 -49.10366821]
[237.16958618 -62.87790680]
[251.06129456 -69.79168701]
[266.35812378 -67.18653107]
[277.17813110 -56.06415939]
[279.36080933 -40.70136261]
[272.06686401 -27.00544548]
[258.10098267 -20.24276733]
[242.83332825 -23.01371765]
[232.08158875 -12.55426502]
[221.32984924 -2.09481287]
[210.57810974 8.36463928]
[199.82637024 18.82409096]
[189.21977234 29.43069267]
[178.76031494 40.18243027]
[168.30087280 50.93416977]
[157.84141541 61.68590546]
[147.38195801 72.43764496]
[136.92251587 83.18938446]
[126.46305847 93.94111633]
[119.15982819 99.22148895]
[111.08773804 101.60614014]
[121.24696350 112.64199829]
[131.40618896 123.67785645]
[139.64009094 127.95036316]
[141.68812561 135.16059875]
[151.53941345 146.47219849]
[161.39068604 157.78379822]
[171.24197388 169.09538269]
[186.49153137 166.75990295]
[200.57360840 173.06056213]
[208.99468994 185.98686218]
[209.06761169 201.41404724]
[200.76911926 214.41937256]
[186.74722290 220.85289001]
[171.47627258 218.66168213]
[159.82916260 208.54495239]
[155.52243042 193.73091125]
[159.93037415 178.94667053]
[150.07908630 167.63507080]
[140.22781372 156.32347107]
[130.37652588 145.01187134]
[120.37032318 133.83708191]
[110.21109772 122.80122375]
[100.05187988 111.76536560]
[108.56286621 124.11700439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 48]
[35 47]
[36 46]
[37 45]
[55 87]
[56 86]
[57 85]
[58 84]
[59 83]
[60 82]
[61 81]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[89 112]
[90 111]
[91 110]
[93 109]
[94 108]
[95 107]
[96 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
