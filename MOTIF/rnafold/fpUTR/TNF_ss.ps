%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:05:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGACGCUCCCUCAGCAAGGACAGCAGAGGACCAGCUAAGAGGGAGAGAAGCAACUACAGACCCCCCCUGAAAACAACCCUCAGACGCCACAUCCCCUGACAAGCUGCCAGGCAGGUUCUCUUCCUCUCACAUACUGACCCACGGCUCCACCCUCUCUCCCCUGGAAAGGACACC\
) } def
/len { sequence length } bind def

/coor [
[84.99326324 452.21008301]
[69.91320801 453.92950439]
[55.23134232 450.08148193]
[42.93326950 441.18643188]
[34.68220520 428.44732666]
[31.59403419 413.58706665]
[34.08640671 398.61532593]
[41.82225037 385.55697632]
[53.75535583 376.17797852]
[68.27187347 371.74679565]
[69.34195709 356.78503418]
[70.41204834 341.82324219]
[58.91739655 332.38867188]
[55.13760376 317.82238770]
[60.72507477 303.65786743]
[73.73201752 295.40402222]
[74.80210114 280.44226074]
[72.13433075 273.52371216]
[76.02716064 265.22372437]
[77.36413574 250.28343201]
[67.64540100 239.05480957]
[68.78844452 223.88418579]
[80.63195038 213.76641846]
[81.96891785 198.82611084]
[79.42506409 191.86106873]
[83.46542358 183.63188171]
[85.06884766 168.71783447]
[86.67227173 153.80377197]
[88.27570343 138.88972473]
[89.87912750 123.97566986]
[77.63324738 113.30387878]
[74.10100555 97.44917297]
[80.65847778 82.58821106]
[94.75102234 74.51052856]
[96.08798981 59.57023239]
[97.42495728 44.62993622]
[98.76193237 29.68963623]
[94.41300201 19.79607201]
[98.09230042 10.94033623]
[95.69290161 -3.86651778]
[93.29351044 -18.67337227]
[90.89411926 -33.48022461]
[88.49472809 -48.28707886]
[86.09533691 -63.09393311]
[83.69594574 -77.90078735]
[81.29654694 -92.70764160]
[78.89715576 -107.51449585]
[76.49776459 -122.32135010]
[74.09837341 -137.12820435]
[71.69898224 -151.93505859]
[65.35530090 -138.34249878]
[53.80798340 -128.76860046]
[39.27552795 -125.05271912]
[24.54993820 -127.90876770]
[12.46032524 -136.78802490]
[5.32937193 -149.98460388]
[4.52709150 -164.96313477]
[10.20761967 -178.84591675]
[21.27960205 -188.96575928]
[35.61586380 -193.37841797]
[50.46209717 -191.23611450]
[62.96600723 -182.95045471]
[70.72447205 -170.11581421]
[71.52733612 -185.09431458]
[61.24428940 -196.79460144]
[62.27188492 -211.97348022]
[73.48969269 -221.70469666]
[74.29255676 -236.68319702]
[75.09542084 -251.66168213]
[75.89828491 -266.64019775]
[62.85159302 -271.12741089]
[51.42870331 -278.84207153]
[42.40994644 -289.24923706]
[36.40932846 -301.63015747]
[33.83274841 -315.13217163]
[34.85053635 -328.82730103]
[39.38621521 -341.77603149]
[47.12219620 -353.09173584]
[57.52202225 -362.00152588]
[69.86755371 -367.89889526]
[83.30856323 -370.38500977]
[84.64553070 -385.32531738]
[85.98249817 -400.26559448]
[87.31947327 -415.20590210]
[74.18654633 -422.98336792]
[65.73586273 -435.69357300]
[63.64530563 -450.81283569]
[68.32995605 -465.33923340]
[78.85967255 -476.38858032]
[93.14377594 -481.76696777]
[108.34613800 -480.40655518]
[121.44833374 -472.57742310]
[129.84890747 -459.83407593]
[131.87991333 -444.70669556]
[127.13809204 -430.19882202]
[116.56494141 -419.19104004]
[102.25977325 -413.86892700]
[100.92279816 -398.92864990]
[99.58583069 -383.98834229]
[98.24885559 -369.04803467]
[113.32376099 -362.91223145]
[125.78908539 -352.41833496]
[134.42466736 -338.57855225]
[138.38058472 -322.73333740]
[137.26086426 -306.42156982]
[131.16297913 -291.23104858]
[120.66960907 -278.64398193]
[106.79287720 -269.89236450]
[90.87678528 -265.83731079]
[90.07392120 -250.85882568]
[89.27105713 -235.88032532]
[88.46819305 -220.90182495]
[98.58150482 -210.02725220]
[97.98065948 -194.82548523]
[86.50583649 -184.29144287]
[85.70297241 -169.31294250]
[86.50583649 -154.33444214]
[88.90522766 -139.52758789]
[91.30461884 -124.72074127]
[93.70401001 -109.91388702]
[96.10340118 -95.10703278]
[98.50279236 -80.30017853]
[100.90219116 -65.49332428]
[103.30158234 -50.68647003]
[105.70097351 -35.87961578]
[108.10036469 -21.07276344]
[110.49975586 -6.26591015]
[112.89914703 8.54094315]
[118.94287872 -5.18761635]
[129.42285156 -15.91935635]
[143.00408936 -22.28723526]
[157.95658875 -23.48009491]
[172.37564087 -19.34598541]
[184.42451477 -10.41152096]
[192.56837463 2.18519950]
[195.76986694 16.83956909]
[193.62112427 31.68486977]
[186.39590454 44.83006287]
[175.01455688 54.60067749]
[160.92687988 59.75210571]
[145.92738342 59.62813568]
[131.92677307 54.24456406]
[120.70847321 44.28716660]
[113.70222473 31.02660751]
[112.36525726 45.96690369]
[111.02828979 60.90720367]
[109.69131470 75.84750366]
[120.32946777 83.75261688]
[125.69480133 95.87178802]
[124.39570618 109.06169128]
[116.76913452 119.90127563]
[104.79318237 125.57909393]
[103.18975830 140.49314880]
[101.58632660 155.40721130]
[99.98290253 170.32125854]
[98.37947845 185.23532104]
[96.90921783 200.16308594]
[95.57225037 215.10337830]
[105.43112946 227.16323853]
[103.86241913 242.29579163]
[92.30442810 251.62040710]
[90.96746063 266.56069946]
[89.76388550 281.51232910]
[88.69379425 296.47412109]
[100.39369965 306.49502563]
[103.90847778 321.31054688]
[98.09416199 335.19064331]
[85.37382507 342.89334106]
[84.30374146 357.85510254]
[83.23365021 372.81689453]
[96.97178650 379.26889038]
[107.44866180 390.25067139]
[113.24736786 404.27703857]
[113.58367157 419.45108032]
[108.41210175 433.72061157]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 170]
[11 169]
[12 168]
[16 164]
[17 163]
[19 162]
[20 161]
[23 158]
[24 157]
[26 156]
[27 155]
[28 154]
[29 153]
[30 152]
[34 147]
[35 146]
[36 145]
[37 144]
[39 128]
[40 127]
[41 126]
[42 125]
[43 124]
[44 123]
[45 122]
[46 121]
[47 120]
[48 119]
[49 118]
[50 117]
[63 116]
[64 115]
[67 112]
[68 111]
[69 110]
[70 109]
[81 100]
[82 99]
[83 98]
[84 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
