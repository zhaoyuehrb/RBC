%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGUACGCUCGCUGGCCCCGCCCCCUAGCGCCGCGGUCGGAGCCAUUUCGCCGAUUCCUCCAUGCGAGUUGCUGUGCGUUUCUCUGUUGUCUCGGUAGAAGGCCAGAGUCACACACGGUCCUAAGAGCUGGGCACCAGGAAGCGAAGGCUGAUCUGAAGAAGACACUUGAAUC\
) } def
/len { sequence length } bind def

/coor [
[79.94996643 159.01011658]
[84.42929840 144.69453430]
[88.90862274 130.37896729]
[81.45904541 129.51072693]
[70.66481781 139.92633057]
[70.21813202 155.49674988]
[59.12287521 165.90588379]
[44.28160477 165.38407898]
[33.48737335 175.79966736]
[22.69314575 186.21527100]
[18.03978920 204.01631165]
[0.87898499 207.62055969]
[-9.72761631 218.22715759]
[-20.33421898 228.83375549]
[-30.94082069 239.44036865]
[-41.54742050 250.04696655]
[-52.15402222 260.65356445]
[-48.77429581 275.70617676]
[-54.09059906 290.18859863]
[-66.40651703 299.47952271]
[-81.79209137 300.61428833]
[-95.33783722 293.23077393]
[-102.72135925 279.68502808]
[-101.58659363 264.29946899]
[-92.29565430 251.98353577]
[-77.81323242 246.66723633]
[-62.76062393 250.04696655]
[-52.15402222 239.44036865]
[-41.54742050 228.83375549]
[-30.94082069 218.22715759]
[-20.33421898 207.62055969]
[-9.72761631 197.01396179]
[-9.40784073 184.90136719]
[-0.62980276 175.97680664]
[12.27755070 175.42103577]
[23.07178116 165.00544739]
[33.86600876 154.58984375]
[33.87426376 139.73941040]
[44.67277145 129.02275085]
[60.24922180 129.13209534]
[71.04344940 118.71649933]
[75.15730286 86.63248444]
[99.78759766 78.05821991]
[104.77787018 63.91265106]
[109.76814270 49.76707840]
[114.75841522 35.62150955]
[113.91642761 29.01113701]
[116.21485138 23.76907921]
[120.18750763 21.06555367]
[125.67948914 7.10711145]
[131.17147827 -6.85133171]
[136.66345215 -20.80977440]
[142.15544128 -34.76821899]
[141.36714172 -39.99368286]
[142.56262207 -44.53454208]
[145.14151001 -47.74469376]
[148.33309937 -49.31386948]
[154.56433105 -62.95835114]
[160.79556274 -76.60282898]
[167.02677917 -90.24731445]
[173.25801086 -103.89179230]
[178.99826050 -117.74998474]
[184.24021912 -131.80422974]
[177.92320251 -146.04266357]
[183.43949890 -160.22099304]
[197.05261230 -166.15556335]
[202.29457092 -180.20980835]
[190.18472290 -192.34577942]
[184.60040283 -208.49678040]
[186.61492920 -225.41119385]
[195.77682495 -239.70584106]
[210.20991516 -248.54275513]
[226.99734497 -250.19250488]
[231.73434448 -264.42489624]
[236.47134399 -278.65728760]
[241.20832825 -292.88967896]
[245.94532776 -307.12207031]
[250.68231201 -321.35446167]
[247.69905090 -336.89184570]
[259.05966187 -346.52438354]
[263.79666138 -360.75677490]
[256.97546387 -374.76065063]
[261.98220825 -389.12683105]
[275.37481689 -395.54351807]
[280.11181641 -409.77590942]
[284.84878540 -424.00830078]
[289.58578491 -438.24069214]
[294.32278442 -452.47305298]
[293.36294556 -459.06735229]
[295.56744385 -464.34960938]
[299.49121094 -467.12359619]
[304.73315430 -481.17785645]
[309.97512817 -495.23208618]
[315.09146118 -509.33258057]
[320.08172607 -523.47814941]
[316.54376221 -539.49108887]
[328.82342529 -550.36041260]
[344.28845215 -544.90466309]
[347.02972412 -528.73626709]
[334.22729492 -518.48785400]
[329.23703003 -504.34228516]
[329.97937012 -496.96447754]
[324.02935791 -489.99014282]
[318.78741455 -475.93588257]
[313.54544067 -461.88165283]
[308.55517578 -447.73608398]
[303.81817627 -433.50369263]
[299.08117676 -419.27130127]
[294.34417725 -405.03890991]
[289.60720825 -390.80651855]
[296.48315430 -377.64382935]
[291.88192749 -363.14266968]
[278.02905273 -356.01977539]
[273.29205322 -341.78738403]
[276.61413574 -327.26797485]
[264.91470337 -316.61746216]
[260.17770386 -302.38507080]
[255.44071960 -288.15267944]
[250.70372009 -273.92028809]
[245.96673584 -259.68789673]
[241.22973633 -245.45550537]
[251.28540039 -237.17774963]
[257.93734741 -225.94281006]
[260.37161255 -213.08268738]
[258.27578735 -200.13067627]
[251.87892151 -188.63862610]
[241.92666626 -179.99092102]
[229.59449768 -175.23782349]
[216.34881592 -174.96784973]
[211.10685730 -160.91360474]
[217.50863647 -147.51387024]
[212.39274597 -133.18618774]
[198.29446411 -126.56226349]
[193.05250549 -112.50801849]
[194.12153625 -109.88339996]
[194.19813538 -106.67063904]
[193.05046082 -103.25199127]
[190.59162903 -100.08727264]
[186.90248108 -97.66056824]
[180.67126465 -84.01608276]
[174.44003296 -70.37160492]
[168.20881653 -56.72712708]
[161.97758484 -43.08264542]
[156.11387634 -29.27623558]
[150.62190247 -15.31779289]
[145.12991333 -1.35934961]
[139.63793945 12.59909344]
[134.14595032 26.55753708]
[128.90399170 40.61178207]
[123.91371918 54.75735474]
[118.92344666 68.90292358]
[113.93316650 83.04849243]
[124.79605865 91.78495026]
[129.41015625 107.28982544]
[123.87615204 124.87405396]
[131.98576355 137.49285889]
[140.09536743 150.11166382]
[155.40306091 154.91314697]
[161.05868530 169.92625427]
[152.72373962 183.63421631]
[136.79208374 185.52145386]
[125.48510742 174.14024353]
[127.47657013 158.22126770]
[119.36695862 145.60247803]
[111.25734711 132.98367310]
[103.80776978 132.11543274]
[104.87484741 147.07742310]
[105.94192505 162.03942871]
[107.00900269 177.00141907]
[112.00610352 191.14459229]
[107.06235504 205.30648804]
[94.34906769 213.26716614]
[79.44996643 211.53027344]
[68.90879059 200.85864258]
[67.35524750 185.93931580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 41]
[5 40]
[8 37]
[9 36]
[10 35]
[12 32]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[43 152]
[44 151]
[45 150]
[46 149]
[49 148]
[50 147]
[51 146]
[52 145]
[53 144]
[57 143]
[58 142]
[59 141]
[60 140]
[61 139]
[62 134]
[63 133]
[66 130]
[67 129]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 116]
[80 114]
[81 113]
[84 110]
[85 109]
[86 108]
[87 107]
[88 106]
[91 105]
[92 104]
[93 103]
[94 101]
[95 100]
[155 165]
[156 164]
[157 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
