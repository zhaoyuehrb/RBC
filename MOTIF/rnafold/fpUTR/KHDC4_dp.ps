%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KHDC4)
} def

/sequence { (\
CGUUGGGGGCGGAAGUGACGAGAGGUGGUAGUCGGAUAGUUGGCGGGUGGUUGAGUAGAAGCGGUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.644895763 ubox
1 17 0.015030600 ubox
1 20 0.201395670 ubox
1 27 0.017247079 ubox
1 34 0.043480245 ubox
1 42 0.019831360 ubox
1 45 0.050457846 ubox
2 10 0.654101807 ubox
2 16 0.014329220 ubox
2 19 0.205476773 ubox
2 26 0.016354583 ubox
2 33 0.043246495 ubox
2 37 0.123438009 ubox
2 40 0.035170939 ubox
2 41 0.025121380 ubox
2 44 0.051194540 ubox
3 9 0.647187326 ubox
3 12 0.089949162 ubox
3 13 0.019098309 ubox
3 14 0.025263448 ubox
3 15 0.011406028 ubox
3 18 0.205074483 ubox
3 21 0.079581559 ubox
3 22 0.011051921 ubox
3 23 0.010982925 ubox
3 24 0.005227193 ubox
3 25 0.011049828 ubox
3 28 0.005054393 ubox
3 31 0.026348468 ubox
3 35 0.019041148 ubox
3 36 0.127831159 ubox
3 39 0.097850797 ubox
3 43 0.051017813 ubox
4 8 0.476092764 ubox
4 11 0.116269357 ubox
4 12 0.018952434 ubox
4 13 0.028591720 ubox
4 14 0.013256887 ubox
4 17 0.202600379 ubox
4 20 0.085770249 ubox
4 21 0.013600901 ubox
4 22 0.011623080 ubox
4 23 0.006277072 ubox
4 24 0.011728421 ubox
4 27 0.006094278 ubox
4 30 0.027363007 ubox
4 34 0.024381485 ubox
4 35 0.126888427 ubox
4 38 0.125641058 ubox
4 42 0.049497463 ubox
4 45 0.004411024 ubox
5 10 0.129099672 ubox
5 16 0.119479779 ubox
5 19 0.088945459 ubox
5 26 0.006735992 ubox
5 29 0.026489008 ubox
5 33 0.026350082 ubox
5 37 0.127252270 ubox
5 41 0.052257851 ubox
5 44 0.005331864 ubox
5 69 0.035041654 ubox
6 32 0.023297624 ubox
6 33 0.114682736 ubox
6 40 0.051906525 ubox
6 41 0.027959903 ubox
6 68 0.035392311 ubox
6 69 0.005234909 ubox
7 32 0.104968186 ubox
7 33 0.016185535 ubox
7 40 0.027514463 ubox
7 41 0.033958263 ubox
7 66 0.008600727 ubox
7 68 0.004958819 ubox
7 69 0.004599383 ubox
8 32 0.013905449 ubox
8 33 0.181322732 ubox
8 40 0.030993109 ubox
8 41 0.444945820 ubox
8 65 0.008547671 ubox
8 66 0.034547208 ubox
8 68 0.003644300 ubox
8 69 0.048643488 ubox
9 16 0.206780453 ubox
9 26 0.039042526 ubox
9 29 0.083471677 ubox
9 32 0.185461205 ubox
9 40 0.522613674 ubox
9 44 0.046035817 ubox
9 65 0.034310654 ubox
9 68 0.049239301 ubox
10 15 0.212108444 ubox
10 17 0.027349130 ubox
10 20 0.062690270 ubox
10 25 0.039350021 ubox
10 27 0.028177174 ubox
10 28 0.083964088 ubox
10 31 0.186587677 ubox
10 34 0.298135366 ubox
10 39 0.528490275 ubox
10 42 0.024626456 ubox
10 43 0.046119588 ubox
10 63 0.012107102 ubox
10 64 0.033340889 ubox
10 67 0.049284301 ubox
11 16 0.025528506 ubox
11 19 0.063755702 ubox
11 26 0.026024867 ubox
11 33 0.301274490 ubox
11 41 0.033637060 ubox
11 62 0.014438268 ubox
11 66 0.048722575 ubox
12 32 0.293036364 ubox
12 33 0.169163447 ubox
12 40 0.047664207 ubox
12 41 0.109809646 ubox
12 65 0.044719997 ubox
13 32 0.168621182 ubox
13 40 0.112910177 ubox
13 41 0.196181548 ubox
13 65 0.003725127 ubox
14 40 0.204136978 ubox
14 41 0.028430984 ubox
15 26 0.017746436 ubox
15 29 0.070483166 ubox
15 32 0.012066387 ubox
15 37 0.074636320 ubox
15 40 0.028798890 ubox
15 62 0.041082325 ubox
15 68 0.012665971 ubox
16 25 0.022742534 ubox
16 27 0.035786312 ubox
16 28 0.280736972 ubox
16 30 0.040741034 ubox
16 31 0.021023159 ubox
16 34 0.685155404 ubox
16 36 0.069334927 ubox
16 38 0.200777092 ubox
16 39 0.022200409 ubox
16 42 0.013269238 ubox
16 57 0.007444738 ubox
16 61 0.039241780 ubox
16 67 0.012687635 ubox
17 26 0.018261179 ubox
17 29 0.031121514 ubox
17 33 0.794856638 ubox
17 37 0.187883026 ubox
17 41 0.114304085 ubox
17 56 0.005897004 ubox
17 66 0.012723764 ubox
18 26 0.382113402 ubox
18 29 0.143392796 ubox
18 32 0.794907816 ubox
18 40 0.120033305 ubox
18 56 0.032478627 ubox
18 65 0.012682835 ubox
19 25 0.384250044 ubox
19 27 0.039921063 ubox
19 28 0.148548016 ubox
19 31 0.794572758 ubox
19 34 0.305224410 ubox
19 39 0.120544098 ubox
19 42 0.010394958 ubox
19 55 0.034267147 ubox
19 64 0.012401753 ubox
20 26 0.035476532 ubox
20 33 0.306652713 ubox
20 41 0.013173024 ubox
21 32 0.302373055 ubox
21 40 0.013935921 ubox
21 41 0.008059042 ubox
22 33 0.155293205 ubox
22 40 0.007859324 ubox
22 41 0.009246608 ubox
22 52 0.028165820 ubox
23 32 0.155003048 ubox
23 40 0.009847792 ubox
23 41 0.030757047 ubox
23 51 0.027725947 ubox
23 52 0.023700566 ubox
24 33 0.072595514 ubox
24 40 0.032689774 ubox
24 41 0.003906598 ubox
24 51 0.024588335 ubox
24 52 0.006333647 ubox
24 69 0.089579416 ubox
25 32 0.058128210 ubox
25 37 0.020261443 ubox
25 40 0.004037346 ubox
25 51 0.005774426 ubox
25 62 0.003996821 ubox
25 68 0.090350948 ubox
26 31 0.033787754 ubox
26 34 0.054278964 ubox
26 36 0.020551907 ubox
26 38 0.033268377 ubox
26 39 0.004531273 ubox
26 49 0.025004292 ubox
26 50 0.006158946 ubox
26 61 0.003998064 ubox
26 67 0.090312131 ubox
27 33 0.062745606 ubox
27 37 0.032018483 ubox
27 41 0.007110951 ubox
27 44 0.003325731 ubox
27 48 0.023956769 ubox
27 66 0.090203999 ubox
27 69 0.015098907 ubox
28 32 0.040723300 ubox
28 37 0.022286494 ubox
28 40 0.007208831 ubox
28 48 0.006333635 ubox
28 65 0.085127437 ubox
28 68 0.015273500 ubox
29 36 0.023359407 ubox
29 38 0.027947151 ubox
29 39 0.003191050 ubox
29 42 0.003995507 ubox
29 47 0.003372910 ubox
29 49 0.015987176 ubox
29 57 0.007744783 ubox
29 64 0.027901819 ubox
29 67 0.015069465 ubox
30 37 0.029365956 ubox
30 41 0.008012786 ubox
30 48 0.016490431 ubox
30 56 0.007843700 ubox
31 37 0.010135635 ubox
31 40 0.008354404 ubox
31 44 0.046431339 ubox
31 62 0.071641076 ubox
31 65 0.013047827 ubox
32 36 0.009680622 ubox
32 39 0.005005022 ubox
32 43 0.046451203 ubox
32 46 0.016706851 ubox
32 54 0.007947409 ubox
32 59 0.007180587 ubox
32 61 0.070431357 ubox
32 64 0.053490938 ubox
33 42 0.047841813 ubox
33 45 0.017045419 ubox
33 53 0.007971309 ubox
33 58 0.008009750 ubox
33 63 0.057769330 ubox
34 41 0.047282140 ubox
34 44 0.017029829 ubox
34 52 0.007596855 ubox
34 62 0.058166312 ubox
35 40 0.036907838 ubox
35 41 0.027502797 ubox
35 51 0.006886647 ubox
36 40 0.024680444 ubox
37 49 0.006786595 ubox
37 57 0.097545079 ubox
38 48 0.006950840 ubox
38 56 0.098380621 ubox
40 46 0.006367595 ubox
40 54 0.099285670 ubox
41 45 0.004730234 ubox
41 53 0.099034046 ubox
42 52 0.097978000 ubox
42 69 0.979125421 ubox
43 51 0.099662570 ubox
43 62 0.004641934 ubox
43 68 0.991189380 ubox
44 50 0.099734251 ubox
44 61 0.004661590 ubox
44 67 0.991239560 ubox
45 66 0.991131829 ubox
45 69 0.004400082 ubox
46 65 0.987104326 ubox
46 66 0.013335142 ubox
46 68 0.003466705 ubox
46 69 0.069304429 ubox
47 62 0.007062680 ubox
47 65 0.017192993 ubox
47 68 0.070167597 ubox
48 57 0.004207175 ubox
48 61 0.007032037 ubox
48 63 0.988036476 ubox
48 64 0.025947516 ubox
48 67 0.070192579 ubox
49 56 0.004219259 ubox
49 62 0.987339189 ubox
49 66 0.070182531 ubox
50 62 0.076740739 ubox
50 65 0.066395341 ubox
51 58 0.009381599 ubox
51 59 0.045069586 ubox
51 60 0.974576166 ubox
51 61 0.092860457 ubox
51 64 0.063045838 ubox
52 57 0.011450834 ubox
52 58 0.054126312 ubox
52 59 0.969725364 ubox
52 60 0.093609854 ubox
52 63 0.067539141 ubox
53 62 0.067540179 ubox
55 62 0.017168538 ubox
56 61 0.016847096 ubox
8 41 0.9500000 lbox
9 40 0.9500000 lbox
10 39 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
42 69 0.9500000 lbox
43 68 0.9500000 lbox
44 67 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
48 63 0.9500000 lbox
49 62 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
showpage
end
%%EOF
