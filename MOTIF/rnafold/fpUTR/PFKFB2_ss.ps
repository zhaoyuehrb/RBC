%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCCCGGCCACAAGCUGUCGGCUCGGUUCGGUCGCGUUACAGGGCAGGCGCCGGGGCCAAGGCAGGGAGGGAUCUUAGGAGAGAUCGUAGGACAUCUGAAGAGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[84.62686920 105.36679840]
[69.77954865 103.23207855]
[54.93222427 101.09735870]
[40.08490372 98.96263123]
[25.23758316 96.82791138]
[10.39026165 94.69319153]
[-4.45706034 92.55846405]
[-19.30438232 90.42374420]
[-34.15170288 88.28902435]
[-25.35192299 100.43660736]
[-25.15348625 115.43529510]
[-33.62881470 127.81143188]
[-47.68490219 133.04846191]
[-62.19209671 129.23515320]
[-71.85611725 117.76315308]
[-73.15015411 102.81907654]
[-65.60196686 89.85663605]
[-51.96630096 83.60638428]
[-65.94425964 78.16426849]
[-79.92221832 72.72215271]
[-95.58925629 74.92545319]
[-104.64218903 63.09779358]
[-118.62015533 57.65567780]
[-132.59811401 52.21356201]
[-146.57608032 46.77144623]
[-162.24310303 48.97475052]
[-171.29605103 37.14708328]
[-185.27400208 31.70496941]
[-203.32554626 34.97116852]
[-213.85920715 21.01534653]
[-227.98687744 15.97460556]
[-244.01235962 19.45537949]
[-254.83776855 7.13699579]
[-249.32684326 -8.30844879]
[-233.14875793 -10.99200439]
[-222.94613647 1.84694052]
[-208.81846619 6.88768148]
[-197.66120911 1.97745192]
[-185.78944397 6.17738962]
[-179.83189392 17.72700882]
[-165.85392761 23.16912460]
[-151.18669128 20.57656479]
[-141.13395691 32.79348373]
[-127.15599823 38.23559952]
[-113.17803955 43.67771530]
[-99.20007324 49.11983109]
[-84.53283691 46.52727127]
[-74.48010254 58.74419403]
[-60.50214386 64.18630981]
[-46.52418518 69.62842560]
[-32.01697922 73.44169617]
[-17.16965866 75.57642365]
[-2.32233787 77.71114349]
[12.52498341 79.84587097]
[27.37230492 81.98059082]
[42.21962738 84.11531067]
[57.06694794 86.25003815]
[71.91426849 88.38475800]
[86.76158905 90.51947784]
[96.57824707 84.08059692]
[108.17364502 85.91712952]
[115.52011871 95.07438660]
[130.30043030 97.63221741]
[145.08073425 100.19004822]
[159.86103821 102.74787903]
[174.64134216 105.30571747]
[185.45288086 91.61483765]
[201.59399414 85.23272705]
[218.67089844 87.80167389]
[232.08255005 98.54019928]
[238.26034546 114.47781372]
[253.16256714 116.18768311]
[268.06478882 117.89756012]
[283.00976562 119.18118286]
[297.98529053 120.03751373]
[312.96084595 120.89384460]
[327.93637085 121.75017548]
[342.91192627 122.60651398]
[357.13128662 115.66966248]
[369.39608765 124.12093353]
[384.37164307 124.97726440]
[398.76733398 117.12258148]
[412.62472534 125.89211273]
[411.68850708 142.26451111]
[396.92178345 149.39726257]
[383.51528931 139.95280457]
[368.53976440 139.09646606]
[355.39154053 146.09455872]
[342.05557251 137.58204651]
[327.08004761 136.72570801]
[312.10452271 135.86938477]
[297.12896729 135.01304626]
[282.15344238 134.15672302]
[277.95864868 136.71408081]
[272.08801270 136.55749512]
[266.35491943 132.79978943]
[251.45269775 131.08990479]
[236.55046082 129.38003540]
[230.06385803 140.41012573]
[219.81838989 148.15458679]
[207.34609985 151.41030884]
[194.52926636 149.64878845]
[183.31643677 143.10148621]
[175.42613220 132.73023987]
[172.08351135 120.08602142]
[157.30320740 117.52819061]
[142.52290344 114.97035980]
[127.74259186 112.41252136]
[112.96228027 109.85469055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 59]
[2 58]
[3 57]
[4 56]
[5 55]
[6 54]
[7 53]
[8 52]
[9 51]
[18 50]
[19 49]
[20 48]
[22 46]
[23 45]
[24 44]
[25 43]
[27 41]
[28 40]
[30 37]
[31 36]
[62 109]
[63 108]
[64 107]
[65 106]
[66 105]
[71 98]
[72 97]
[73 96]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[80 87]
[81 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
