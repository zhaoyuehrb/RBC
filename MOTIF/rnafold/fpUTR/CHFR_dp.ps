%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CHFR)
} def

/sequence { (\
AGCUGAGGGAGCCGCAAUGUCUCUUGACAGCGGCGGCGGCGCAGCCGGUUCCGGGUUCGGCGCGGGGCGGGGAUGUGAAUCCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 12 0.026702418 ubox
2 31 0.061389188 ubox
2 37 0.035429053 ubox
2 40 0.138886541 ubox
2 42 0.014210166 ubox
2 45 0.873332308 ubox
2 56 0.003173902 ubox
2 61 0.023207358 ubox
2 68 0.051548788 ubox
3 9 0.027430953 ubox
3 11 0.032504974 ubox
3 30 0.061659041 ubox
3 36 0.036717656 ubox
3 39 0.141014427 ubox
3 41 0.013988364 ubox
3 44 0.875658673 ubox
3 55 0.003232832 ubox
3 60 0.023563528 ubox
3 66 0.003900132 ubox
3 67 0.051543356 ubox
4 8 0.024828255 ubox
4 10 0.033732640 ubox
4 29 0.061638562 ubox
4 35 0.036441122 ubox
4 38 0.140906767 ubox
4 41 0.005246452 ubox
4 43 0.875410222 ubox
4 59 0.023554169 ubox
4 65 0.004268535 ubox
4 66 0.048548055 ubox
4 69 0.004422113 ubox
4 84 0.010045945 ubox
5 25 0.003166679 ubox
5 28 0.061518574 ubox
5 34 0.010366407 ubox
5 37 0.139812973 ubox
5 40 0.014684719 ubox
5 42 0.874677531 ubox
5 58 0.023567886 ubox
5 83 0.012378770 ubox
6 24 0.008844456 ubox
6 57 0.023247808 ubox
7 23 0.008968248 ubox
7 25 0.060439127 ubox
7 46 0.010376046 ubox
7 52 0.008443568 ubox
7 56 0.020776004 ubox
7 82 0.014857140 ubox
7 83 0.407980315 ubox
8 22 0.008966388 ubox
8 24 0.060824462 ubox
8 45 0.010386696 ubox
8 51 0.008480474 ubox
8 52 0.021951223 ubox
8 81 0.014790850 ubox
8 82 0.408493541 ubox
8 83 0.012715302 ubox
9 21 0.009012526 ubox
9 23 0.060982825 ubox
9 50 0.008197416 ubox
9 51 0.021970977 ubox
9 80 0.009545391 ubox
9 81 0.408366522 ubox
9 82 0.012405617 ubox
10 20 0.008604194 ubox
10 22 0.060970791 ubox
10 49 0.007603480 ubox
10 50 0.021464113 ubox
10 80 0.382012680 ubox
11 20 0.005207236 ubox
11 21 0.060668053 ubox
11 34 0.284109612 ubox
11 37 0.954255669 ubox
11 40 0.024519615 ubox
11 49 0.016027228 ubox
12 19 0.030928511 ubox
12 33 0.287377187 ubox
12 36 0.954935512 ubox
12 39 0.025078503 ubox
12 48 0.015536851 ubox
13 19 0.049135563 ubox
13 32 0.288350000 ubox
13 35 0.955017837 ubox
13 38 0.025080208 ubox
13 47 0.014316813 ubox
13 77 0.009108397 ubox
14 18 0.030515322 ubox
14 20 0.011607830 ubox
14 31 0.288412278 ubox
14 34 0.955051508 ubox
14 37 0.025058983 ubox
14 46 0.009384965 ubox
14 76 0.009121750 ubox
15 19 0.012025316 ubox
15 30 0.287597669 ubox
15 33 0.954459273 ubox
15 36 0.025030521 ubox
15 44 0.004087128 ubox
15 75 0.009123551 ubox
16 74 0.008097329 ubox
18 29 0.981080977 ubox
18 32 0.005864526 ubox
18 35 0.011243093 ubox
19 28 0.997865306 ubox
19 31 0.006419310 ubox
19 34 0.013862358 ubox
20 27 0.997765877 ubox
20 30 0.004264810 ubox
20 33 0.013862030 ubox
21 26 0.997254716 ubox
21 30 0.004813669 ubox
21 32 0.013855857 ubox
22 29 0.004592004 ubox
23 30 0.013518349 ubox
24 29 0.012360070 ubox
30 42 0.007060254 ubox
30 45 0.009314195 ubox
31 41 0.007059090 ubox
31 44 0.009524087 ubox
31 47 0.006746620 ubox
32 40 0.005611268 ubox
32 46 0.017280836 ubox
33 40 0.004647997 ubox
33 42 0.011606713 ubox
33 45 0.017301348 ubox
33 68 0.005125273 ubox
34 39 0.006681573 ubox
34 41 0.011766973 ubox
34 44 0.017238879 ubox
34 47 0.073703673 ubox
34 67 0.005124386 ubox
34 84 0.004707059 ubox
35 40 0.015297908 ubox
35 46 0.136445256 ubox
35 68 0.004742007 ubox
35 82 0.018140818 ubox
35 83 0.019499496 ubox
36 42 0.017722242 ubox
36 45 0.136586132 ubox
36 49 0.003989447 ubox
36 63 0.042548206 ubox
36 68 0.048492984 ubox
36 81 0.018233700 ubox
36 82 0.019450671 ubox
37 41 0.017679062 ubox
37 44 0.136566452 ubox
37 47 0.118186109 ubox
37 62 0.042639481 ubox
37 67 0.048530556 ubox
37 69 0.005711814 ubox
37 77 0.003946869 ubox
37 84 0.008995136 ubox
38 46 0.137419539 ubox
38 61 0.042638584 ubox
38 68 0.006477855 ubox
38 81 0.013878858 ubox
38 82 0.014142851 ubox
38 83 0.016673241 ubox
39 45 0.137466721 ubox
39 63 0.017487424 ubox
39 68 0.005486622 ubox
39 76 0.022155732 ubox
39 80 0.012364962 ubox
39 81 0.014234538 ubox
39 82 0.016640273 ubox
40 44 0.136470665 ubox
40 47 0.003615692 ubox
40 59 0.042620487 ubox
40 62 0.017574627 ubox
40 64 0.061454022 ubox
40 67 0.005238129 ubox
40 69 0.033560984 ubox
40 75 0.022936579 ubox
40 77 0.404352636 ubox
41 46 0.006556141 ubox
41 58 0.042563050 ubox
41 61 0.017550744 ubox
41 63 0.072886215 ubox
41 68 0.064537520 ubox
41 74 0.019265268 ubox
41 76 0.409467391 ubox
42 60 0.017512696 ubox
42 62 0.072674609 ubox
42 67 0.064414338 ubox
42 75 0.409904748 ubox
43 57 0.039417097 ubox
43 74 0.402033140 ubox
44 56 0.040725985 ubox
44 61 0.073585630 ubox
44 68 0.059411321 ubox
45 54 0.023447367 ubox
45 55 0.039950673 ubox
45 60 0.073644692 ubox
45 65 0.043615875 ubox
45 66 0.057653939 ubox
45 67 0.057106126 ubox
45 70 0.037890475 ubox
45 71 0.396617059 ubox
45 72 0.102377960 ubox
46 53 0.024932391 ubox
46 54 0.039076634 ubox
46 59 0.073667670 ubox
46 64 0.043762595 ubox
46 65 0.062287231 ubox
46 66 0.054480352 ubox
46 69 0.355947214 ubox
46 70 0.410147839 ubox
46 71 0.097169761 ubox
46 84 0.017030837 ubox
47 52 0.025922040 ubox
47 58 0.073639368 ubox
47 63 0.039028994 ubox
47 68 0.268370645 ubox
47 83 0.005295339 ubox
48 57 0.072232503 ubox
48 61 0.011658204 ubox
48 63 0.081488968 ubox
48 68 0.952902815 ubox
49 60 0.005482726 ubox
49 62 0.082881087 ubox
49 66 0.066855841 ubox
49 67 0.982495133 ubox
49 73 0.003186013 ubox
50 59 0.003880088 ubox
50 65 0.014910696 ubox
50 66 0.985648134 ubox
50 67 0.004039076 ubox
50 72 0.003206970 ubox
51 60 0.090606319 ubox
51 64 0.013152699 ubox
51 65 0.991585106 ubox
51 66 0.004393342 ubox
51 71 0.003220492 ubox
52 59 0.090794719 ubox
52 62 0.011270610 ubox
52 64 0.991632652 ubox
52 65 0.003229081 ubox
52 70 0.003217475 ubox
53 58 0.089557752 ubox
53 61 0.011377834 ubox
53 63 0.991420299 ubox
55 61 0.988283150 ubox
55 68 0.005254512 ubox
56 60 0.924580951 ubox
56 62 0.003555471 ubox
56 67 0.005251486 ubox
57 66 0.005240412 ubox
58 65 0.005249364 ubox
60 68 0.003627400 ubox
61 67 0.003715422 ubox
61 69 0.006617429 ubox
62 68 0.014690212 ubox
63 67 0.014596390 ubox
63 69 0.005711772 ubox
64 68 0.005720363 ubox
64 83 0.004406703 ubox
65 82 0.004407376 ubox
66 81 0.004402636 ubox
67 76 0.004186928 ubox
68 75 0.004432879 ubox
68 77 0.003256882 ubox
68 84 0.018810813 ubox
69 74 0.004112893 ubox
69 76 0.003557302 ubox
69 82 0.005564826 ubox
69 83 0.075435805 ubox
70 81 0.005592641 ubox
70 82 0.066403915 ubox
70 83 0.901538010 ubox
71 80 0.005510291 ubox
71 81 0.055793515 ubox
71 82 0.908582055 ubox
71 83 0.012456647 ubox
72 80 0.035344552 ubox
72 81 0.909434839 ubox
72 82 0.009596717 ubox
73 80 0.908194626 ubox
74 79 0.898007033 ubox
77 83 0.003435954 ubox
2 45 0.9500000 lbox
3 44 0.9500000 lbox
4 43 0.9500000 lbox
5 42 0.9500000 lbox
11 37 0.9500000 lbox
12 36 0.9500000 lbox
13 35 0.9500000 lbox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
21 26 0.9500000 lbox
48 68 0.9500000 lbox
49 67 0.9500000 lbox
50 66 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
55 61 0.9500000 lbox
56 60 0.9500000 lbox
70 83 0.9500000 lbox
71 82 0.9500000 lbox
72 81 0.9500000 lbox
73 80 0.9500000 lbox
74 79 0.9500000 lbox
showpage
end
%%EOF
