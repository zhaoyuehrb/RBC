%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CELSR2)
} def

/sequence { (\
AGGAGCCGGAGGAGGAGCCGCCGCCGCCGUUGACCCGGCCGCCGGCCGGGAGCUGGGAGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.024850538 ubox
1 54 0.037337604 ubox
2 19 0.361579972 ubox
2 22 0.032098276 ubox
2 25 0.302395760 ubox
2 28 0.317576106 ubox
2 30 0.027975718 ubox
2 31 0.014991081 ubox
2 35 0.004965807 ubox
2 53 0.039113706 ubox
2 54 0.029566455 ubox
3 18 0.362035687 ubox
3 21 0.031967988 ubox
3 24 0.301285086 ubox
3 27 0.317649753 ubox
3 30 0.017480618 ubox
3 31 0.049141716 ubox
3 34 0.006917396 ubox
3 53 0.031599760 ubox
4 30 0.047085016 ubox
4 31 0.242980543 ubox
4 54 0.514683500 ubox
5 18 0.004307152 ubox
5 21 0.047442719 ubox
5 24 0.227140446 ubox
5 27 0.086878040 ubox
5 30 0.262287305 ubox
5 39 0.006027556 ubox
5 46 0.003322691 ubox
5 53 0.528406274 ubox
6 12 0.005196605 ubox
6 15 0.362791162 ubox
6 17 0.003789713 ubox
6 20 0.033837178 ubox
6 23 0.163317122 ubox
6 26 0.082914356 ubox
6 29 0.188467707 ubox
6 38 0.006092331 ubox
6 45 0.003811452 ubox
6 49 0.004739262 ubox
6 50 0.006185803 ubox
6 52 0.527231869 ubox
6 56 0.107909056 ubox
6 57 0.083058603 ubox
7 11 0.005186953 ubox
7 14 0.362729813 ubox
7 20 0.116454162 ubox
7 23 0.471055180 ubox
7 26 0.191137524 ubox
7 29 0.688812563 ubox
7 32 0.058830595 ubox
7 37 0.006089611 ubox
7 44 0.003815546 ubox
7 48 0.004790587 ubox
7 55 0.107739659 ubox
7 56 0.082332108 ubox
8 19 0.121948093 ubox
8 22 0.502127561 ubox
8 25 0.200818325 ubox
8 28 0.741846106 ubox
8 31 0.058087128 ubox
8 36 0.006028920 ubox
8 43 0.003793007 ubox
8 47 0.004766896 ubox
8 54 0.069793321 ubox
9 18 0.121878538 ubox
9 21 0.501331613 ubox
9 24 0.200491124 ubox
9 27 0.740709862 ubox
9 30 0.057355401 ubox
9 31 0.003774164 ubox
9 35 0.005883334 ubox
9 42 0.003767300 ubox
9 46 0.003172128 ubox
9 53 0.068788432 ubox
10 30 0.006217475 ubox
10 54 0.004494291 ubox
11 19 0.501020166 ubox
11 22 0.200158260 ubox
11 25 0.741856873 ubox
11 28 0.077853751 ubox
11 31 0.004560193 ubox
11 53 0.004593919 ubox
12 18 0.501193946 ubox
12 21 0.200496345 ubox
12 24 0.742334291 ubox
12 27 0.077768786 ubox
12 30 0.005324361 ubox
12 53 0.003163033 ubox
13 54 0.006088738 ubox
14 22 0.742115700 ubox
14 25 0.077354948 ubox
14 28 0.009081173 ubox
14 47 0.004892559 ubox
14 53 0.006502664 ubox
15 21 0.742370422 ubox
15 24 0.077188877 ubox
15 27 0.009068594 ubox
15 46 0.003325580 ubox
16 31 0.013770719 ubox
16 54 0.005964194 ubox
17 24 0.015536136 ubox
17 30 0.014878191 ubox
17 46 0.011732370 ubox
17 53 0.006133821 ubox
18 23 0.016815327 ubox
18 29 0.014968301 ubox
18 45 0.012349509 ubox
18 49 0.019270497 ubox
18 50 0.004760190 ubox
18 52 0.005998272 ubox
19 26 0.004220385 ubox
19 44 0.012354507 ubox
19 48 0.019361819 ubox
19 49 0.004671249 ubox
20 25 0.017958233 ubox
20 27 0.061847770 ubox
20 28 0.004589552 ubox
20 30 0.006378215 ubox
20 43 0.012016858 ubox
20 46 0.037059452 ubox
20 47 0.013816110 ubox
20 53 0.010055207 ubox
21 26 0.064217262 ubox
21 29 0.006375227 ubox
21 41 0.003368880 ubox
21 45 0.043306488 ubox
21 49 0.006520236 ubox
21 52 0.010050146 ubox
21 56 0.071366562 ubox
21 57 0.048462519 ubox
22 29 0.013758986 ubox
22 32 0.007016997 ubox
22 41 0.005940846 ubox
22 44 0.043329517 ubox
22 48 0.006531393 ubox
22 55 0.071604355 ubox
22 56 0.045263492 ubox
23 28 0.014209082 ubox
23 30 0.012214855 ubox
23 31 0.005395942 ubox
23 39 0.004010634 ubox
23 40 0.005839542 ubox
23 42 0.030403469 ubox
23 43 0.033339957 ubox
23 46 0.004733457 ubox
23 47 0.004637181 ubox
23 53 0.037140850 ubox
23 54 0.057328448 ubox
24 29 0.013820789 ubox
24 38 0.004115118 ubox
24 41 0.041298060 ubox
24 45 0.006601128 ubox
24 49 0.004646022 ubox
24 52 0.037848289 ubox
24 56 0.185469441 ubox
24 57 0.140751007 ubox
25 32 0.022300681 ubox
25 37 0.004114534 ubox
25 41 0.017583643 ubox
25 44 0.006596221 ubox
25 48 0.004645455 ubox
25 55 0.186931982 ubox
25 56 0.138999967 ubox
26 31 0.015315805 ubox
26 36 0.004006242 ubox
26 39 0.045545543 ubox
26 40 0.012511928 ubox
26 43 0.004002555 ubox
26 46 0.003345857 ubox
26 47 0.003289718 ubox
26 53 0.073788863 ubox
26 54 0.146246399 ubox
27 38 0.047306267 ubox
27 41 0.004061967 ubox
27 45 0.004679361 ubox
27 49 0.003793369 ubox
27 52 0.074625476 ubox
27 56 0.406537248 ubox
27 57 0.289804010 ubox
28 37 0.047306142 ubox
28 44 0.004679211 ubox
28 48 0.003769086 ubox
28 55 0.409603346 ubox
28 56 0.290787345 ubox
29 36 0.046411894 ubox
29 39 0.004363254 ubox
29 43 0.004622953 ubox
29 47 0.003614644 ubox
29 53 0.511675272 ubox
29 54 0.197893898 ubox
30 38 0.004551714 ubox
30 51 0.030071229 ubox
30 52 0.511526086 ubox
30 56 0.023882835 ubox
30 57 0.015706286 ubox
30 58 0.016885162 ubox
30 59 0.018892290 ubox
30 60 0.138977265 ubox
30 61 0.078955250 ubox
31 37 0.004500182 ubox
31 41 0.004297213 ubox
31 50 0.006257962 ubox
31 51 0.404782598 ubox
31 55 0.029830739 ubox
31 56 0.019613705 ubox
31 57 0.016736701 ubox
31 58 0.018891033 ubox
31 59 0.150446516 ubox
31 60 0.122889471 ubox
32 36 0.004307508 ubox
32 40 0.004423212 ubox
32 54 0.033456751 ubox
34 49 0.008662939 ubox
34 50 0.933214182 ubox
34 56 0.006902344 ubox
34 57 0.345785164 ubox
35 45 0.003794658 ubox
35 48 0.006134166 ubox
35 49 0.936525410 ubox
35 50 0.004598441 ubox
35 55 0.004907586 ubox
35 56 0.346910438 ubox
36 44 0.003820384 ubox
36 48 0.936568688 ubox
36 49 0.003278977 ubox
36 55 0.346934749 ubox
37 43 0.003832943 ubox
37 47 0.936597326 ubox
37 54 0.346699685 ubox
38 42 0.003771322 ubox
38 46 0.936613522 ubox
38 53 0.346959584 ubox
39 45 0.936593889 ubox
39 49 0.004016233 ubox
39 50 0.003684019 ubox
39 52 0.346833209 ubox
40 44 0.929779914 ubox
40 48 0.005916266 ubox
40 49 0.005383660 ubox
41 47 0.005808976 ubox
42 49 0.339119424 ubox
42 50 0.072603967 ubox
42 56 0.013743212 ubox
43 48 0.338648712 ubox
43 49 0.072677809 ubox
43 55 0.015037255 ubox
44 54 0.015064672 ubox
45 53 0.015082497 ubox
46 52 0.015061113 ubox
46 56 0.016799739 ubox
46 57 0.005776651 ubox
47 55 0.025685263 ubox
47 56 0.009189726 ubox
48 54 0.025623595 ubox
49 53 0.025093054 ubox
53 59 0.061966880 ubox
53 61 0.091227159 ubox
54 58 0.056195120 ubox
54 60 0.094346168 ubox
4 54 0.9500000 lbox
5 53 0.9500000 lbox
6 52 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
40 44 0.9500000 lbox
showpage
end
%%EOF
