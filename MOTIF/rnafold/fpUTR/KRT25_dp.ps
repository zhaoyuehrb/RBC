%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT25)
} def

/sequence { (\
AAGAAGGCACUCCAUUCUGGCUUUCACAAAUACAGCUCUGCAACGCGUUUGCCCUGAUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.008078380 ubox
1 50 0.003460400 ubox
2 11 0.005641903 ubox
2 18 0.144038818 ubox
2 22 0.010172759 ubox
2 24 0.010463412 ubox
2 39 0.008662361 ubox
2 49 0.003433481 ubox
2 50 0.003441955 ubox
2 55 0.028914955 ubox
3 10 0.005944211 ubox
3 12 0.008139975 ubox
3 16 0.006305965 ubox
3 17 0.148851889 ubox
3 21 0.010373680 ubox
3 23 0.010550894 ubox
3 24 0.167136398 ubox
3 25 0.965841202 ubox
3 38 0.008719358 ubox
3 50 0.022280387 ubox
3 54 0.028587254 ubox
4 11 0.007739394 ubox
4 15 0.008236006 ubox
4 16 0.148653256 ubox
4 22 0.007589823 ubox
4 23 0.187202635 ubox
4 24 0.965264819 ubox
4 37 0.007372361 ubox
4 49 0.024230475 ubox
5 11 0.003392878 ubox
5 15 0.146470444 ubox
5 18 0.010134409 ubox
5 22 0.197305411 ubox
5 23 0.962492452 ubox
5 39 0.005454657 ubox
5 48 0.024522879 ubox
5 55 0.025184249 ubox
6 10 0.003817341 ubox
6 12 0.008796719 ubox
6 13 0.145567363 ubox
6 15 0.003436953 ubox
6 17 0.010371467 ubox
6 18 0.008065848 ubox
6 21 0.204833120 ubox
6 22 0.962294388 ubox
6 25 0.005635152 ubox
6 37 0.006277124 ubox
6 38 0.005594361 ubox
6 53 0.070141465 ubox
6 54 0.023058694 ubox
6 61 0.004733084 ubox
7 11 0.005851775 ubox
7 12 0.143453997 ubox
7 16 0.009711288 ubox
7 17 0.007991380 ubox
7 21 0.963128144 ubox
7 24 0.005210916 ubox
7 36 0.009258418 ubox
7 41 0.006453581 ubox
7 46 0.025330869 ubox
7 52 0.071336750 ubox
7 53 0.019591169 ubox
7 60 0.004753794 ubox
8 19 0.292283426 ubox
8 20 0.924145311 ubox
8 35 0.009246833 ubox
8 40 0.006476684 ubox
8 45 0.025298314 ubox
8 51 0.072269817 ubox
9 18 0.349937998 ubox
9 39 0.006260519 ubox
9 48 0.016196325 ubox
9 50 0.064590849 ubox
10 20 0.019127719 ubox
10 35 0.004652422 ubox
10 47 0.022706243 ubox
11 19 0.035950840 ubox
11 20 0.015972642 ubox
11 34 0.004745360 ubox
12 19 0.108165082 ubox
12 20 0.173595954 ubox
13 19 0.251293591 ubox
13 40 0.020857447 ubox
14 18 0.204040436 ubox
14 31 0.009156688 ubox
14 39 0.020109449 ubox
14 48 0.004189875 ubox
14 58 0.010292539 ubox
15 29 0.005921015 ubox
15 30 0.009583672 ubox
15 43 0.009800993 ubox
15 47 0.004262301 ubox
15 57 0.010691165 ubox
16 28 0.006176680 ubox
16 29 0.009385340 ubox
16 42 0.009893536 ubox
16 56 0.010408790 ubox
16 57 0.016676112 ubox
17 35 0.032072329 ubox
17 56 0.017964058 ubox
18 26 0.013801270 ubox
18 28 0.020164643 ubox
18 34 0.033854878 ubox
18 40 0.006284454 ubox
18 42 0.008425983 ubox
19 25 0.018155702 ubox
19 27 0.024817571 ubox
19 33 0.034536598 ubox
19 37 0.086570409 ubox
19 38 0.031985543 ubox
19 41 0.007813771 ubox
19 53 0.074153388 ubox
19 54 0.013607520 ubox
19 61 0.046301316 ubox
20 24 0.011792666 ubox
20 36 0.100458620 ubox
20 37 0.003914994 ubox
20 41 0.022128801 ubox
20 46 0.008534823 ubox
20 52 0.074541260 ubox
20 53 0.012617821 ubox
20 60 0.046711854 ubox
21 35 0.100565274 ubox
21 40 0.022348655 ubox
21 45 0.008565826 ubox
21 51 0.073895759 ubox
22 29 0.007458462 ubox
22 30 0.025042419 ubox
22 34 0.095651900 ubox
22 43 0.004355698 ubox
22 57 0.007642634 ubox
23 28 0.007856784 ubox
23 29 0.026804746 ubox
23 30 0.019714431 ubox
23 34 0.004901028 ubox
23 42 0.004160468 ubox
23 43 0.005242973 ubox
23 56 0.007993650 ubox
23 57 0.019512196 ubox
24 28 0.022497786 ubox
24 29 0.017796284 ubox
24 42 0.005317930 ubox
24 56 0.015366173 ubox
24 57 0.068147771 ubox
25 40 0.006804477 ubox
25 51 0.003426631 ubox
25 56 0.080402537 ubox
26 39 0.006708603 ubox
26 48 0.023192831 ubox
26 50 0.004200494 ubox
26 55 0.079787851 ubox
27 40 0.020428857 ubox
27 47 0.023943517 ubox
27 51 0.433997799 ubox
27 56 0.044694496 ubox
28 39 0.019654780 ubox
28 49 0.006156564 ubox
28 50 0.435640094 ubox
28 55 0.043090703 ubox
29 48 0.005390101 ubox
29 49 0.431248742 ubox
29 50 0.044140024 ubox
30 48 0.411693363 ubox
30 49 0.045612165 ubox
30 58 0.295176314 ubox
31 40 0.008446986 ubox
31 47 0.401874695 ubox
31 51 0.022583313 ubox
31 56 0.025277624 ubox
31 57 0.305824847 ubox
31 59 0.213020014 ubox
32 39 0.010891376 ubox
32 48 0.160653349 ubox
32 50 0.023329898 ubox
32 55 0.030105703 ubox
32 58 0.228724230 ubox
33 40 0.049452612 ubox
33 47 0.176436823 ubox
33 51 0.044713345 ubox
33 56 0.715038044 ubox
34 39 0.045274190 ubox
34 49 0.026602651 ubox
34 50 0.042900442 ubox
34 55 0.716980622 ubox
35 41 0.131298290 ubox
35 46 0.464855338 ubox
35 48 0.032767529 ubox
35 49 0.026583330 ubox
35 52 0.130785152 ubox
35 54 0.712063453 ubox
36 40 0.130596430 ubox
36 45 0.465070509 ubox
36 47 0.035200116 ubox
36 51 0.133906709 ubox
37 57 0.242740362 ubox
38 56 0.259811025 ubox
39 45 0.018754992 ubox
39 47 0.072792574 ubox
39 51 0.006941322 ubox
39 56 0.013738787 ubox
39 59 0.041725136 ubox
40 44 0.023086992 ubox
40 46 0.088435697 ubox
40 48 0.163417143 ubox
40 50 0.004671604 ubox
40 52 0.818786109 ubox
40 55 0.004407952 ubox
40 58 0.045771728 ubox
41 45 0.082763106 ubox
41 47 0.165475072 ubox
41 51 0.820375422 ubox
41 56 0.139081424 ubox
42 49 0.043226287 ubox
42 50 0.812238504 ubox
42 55 0.137043513 ubox
43 48 0.048148850 ubox
43 49 0.731507567 ubox
44 51 0.016639061 ubox
44 56 0.011442055 ubox
45 50 0.011957114 ubox
45 52 0.197051121 ubox
45 55 0.004904458 ubox
46 51 0.197039182 ubox
46 56 0.009662518 ubox
47 55 0.008482535 ubox
47 58 0.048971072 ubox
47 60 0.027764359 ubox
48 57 0.050868821 ubox
48 59 0.027265260 ubox
49 56 0.050664975 ubox
49 57 0.014016605 ubox
50 56 0.014610099 ubox
50 59 0.007657567 ubox
51 55 0.007221453 ubox
51 58 0.007872768 ubox
3 25 0.9500000 lbox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
6 22 0.9500000 lbox
7 21 0.9500000 lbox
8 20 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
40 52 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
showpage
end
%%EOF
