%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TDO2)
} def

/sequence { (\
GGAAGGUCAAUGAUAGCAUCUGCCUAGAGUCAAACCUCCGUGCUUCUCAGACAGUGCCUUUUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.051852726 ubox
1 24 0.004853475 ubox
1 39 0.456414891 ubox
1 58 0.110164053 ubox
1 59 0.007501019 ubox
1 61 0.009238293 ubox
1 62 0.201221932 ubox
1 63 0.695917937 ubox
1 66 0.052631231 ubox
2 7 0.038231970 ubox
2 8 0.043822622 ubox
2 23 0.004848776 ubox
2 31 0.005589524 ubox
2 38 0.456712220 ubox
2 46 0.003993892 ubox
2 57 0.110214710 ubox
2 58 0.008586065 ubox
2 60 0.010141802 ubox
2 61 0.317624701 ubox
2 62 0.688105382 ubox
2 63 0.078061650 ubox
2 65 0.052621710 ubox
3 7 0.038247900 ubox
3 30 0.005596897 ubox
3 37 0.323273003 ubox
3 45 0.003913553 ubox
3 59 0.007878575 ubox
3 60 0.348639106 ubox
3 61 0.678819870 ubox
3 62 0.074344585 ubox
4 21 0.004273425 ubox
4 25 0.068388115 ubox
4 37 0.322117650 ubox
4 59 0.370938580 ubox
4 60 0.667638396 ubox
4 61 0.060283349 ubox
4 62 0.003415794 ubox
5 20 0.004799157 ubox
5 24 0.071997810 ubox
5 36 0.455931343 ubox
5 58 0.389681956 ubox
5 59 0.657751636 ubox
5 60 0.049950373 ubox
5 61 0.003514476 ubox
5 62 0.003672551 ubox
5 63 0.017092511 ubox
5 66 0.358986956 ubox
6 14 0.088349883 ubox
6 19 0.004503695 ubox
6 23 0.072063282 ubox
6 35 0.455974760 ubox
6 52 0.118722950 ubox
6 57 0.382068924 ubox
6 58 0.655977329 ubox
6 59 0.033176399 ubox
6 60 0.003477178 ubox
6 62 0.016512362 ubox
6 65 0.362043960 ubox
7 13 0.116323329 ubox
7 16 0.003354369 ubox
7 18 0.004244672 ubox
7 22 0.067780774 ubox
7 34 0.448194165 ubox
7 51 0.123572672 ubox
7 54 0.010374451 ubox
7 56 0.332627636 ubox
7 64 0.344204624 ubox
8 12 0.120239967 ubox
8 22 0.025936514 ubox
8 50 0.127476245 ubox
8 56 0.196460222 ubox
9 21 0.025851047 ubox
9 55 0.188048692 ubox
9 60 0.008842084 ubox
9 61 0.020919850 ubox
9 62 0.150793156 ubox
10 19 0.106658796 ubox
10 30 0.209421779 ubox
10 55 0.031118359 ubox
10 59 0.008570093 ubox
10 60 0.021603800 ubox
10 61 0.134735574 ubox
11 18 0.111731864 ubox
11 26 0.005762040 ubox
11 29 0.217901406 ubox
11 32 0.382939065 ubox
11 49 0.325454460 ubox
11 53 0.134796388 ubox
11 54 0.029796164 ubox
11 64 0.177059464 ubox
12 17 0.112733516 ubox
12 20 0.019172010 ubox
12 25 0.005835889 ubox
12 31 0.387634292 ubox
12 46 0.093617380 ubox
12 48 0.331665084 ubox
12 52 0.135461208 ubox
12 55 0.006424141 ubox
12 60 0.086123855 ubox
12 61 0.287914199 ubox
12 62 0.034842813 ubox
12 63 0.217271680 ubox
13 19 0.019507185 ubox
13 30 0.383944259 ubox
13 45 0.091368125 ubox
13 47 0.328362163 ubox
13 55 0.009975358 ubox
13 59 0.085690504 ubox
13 60 0.298258194 ubox
13 61 0.039964267 ubox
13 62 0.214247266 ubox
14 18 0.017387991 ubox
14 22 0.012500804 ubox
14 26 0.267512418 ubox
14 29 0.353845937 ubox
14 54 0.008941841 ubox
14 56 0.005248018 ubox
15 21 0.019559445 ubox
15 25 0.300445828 ubox
15 44 0.342895888 ubox
15 45 0.037925646 ubox
15 47 0.013905412 ubox
15 55 0.012012799 ubox
15 59 0.102306352 ubox
15 60 0.058466985 ubox
15 61 0.013720632 ubox
16 20 0.019288676 ubox
16 23 0.275696213 ubox
16 24 0.225103564 ubox
16 30 0.048600350 ubox
16 43 0.349372837 ubox
16 44 0.009011839 ubox
16 46 0.014685523 ubox
16 55 0.042401469 ubox
16 57 0.778076823 ubox
16 58 0.076420034 ubox
16 59 0.009203744 ubox
17 22 0.340157222 ubox
17 29 0.065215450 ubox
17 42 0.349394972 ubox
17 54 0.042340750 ubox
17 56 0.783847762 ubox
18 30 0.003235005 ubox
18 41 0.337059973 ubox
18 55 0.770084357 ubox
19 28 0.267524380 ubox
19 40 0.305670132 ubox
19 51 0.125978965 ubox
19 54 0.126581293 ubox
20 27 0.269965527 ubox
20 29 0.088289060 ubox
20 50 0.130097713 ubox
20 54 0.789058496 ubox
21 26 0.252683925 ubox
21 28 0.088433965 ubox
21 32 0.017059086 ubox
21 40 0.089815114 ubox
21 42 0.010183995 ubox
21 49 0.130052355 ubox
21 53 0.798222879 ubox
22 30 0.017416913 ubox
22 31 0.017529107 ubox
22 39 0.163692420 ubox
22 41 0.083707508 ubox
22 43 0.070029786 ubox
22 48 0.128662479 ubox
22 52 0.797256154 ubox
22 55 0.003435300 ubox
23 29 0.021469978 ubox
23 40 0.103086035 ubox
23 42 0.070439552 ubox
23 54 0.003544615 ubox
24 50 0.792419920 ubox
25 42 0.004601149 ubox
25 49 0.788965011 ubox
26 37 0.096785767 ubox
26 41 0.005089621 ubox
26 44 0.013692540 ubox
26 45 0.004705523 ubox
26 47 0.442538926 ubox
26 61 0.003762081 ubox
27 36 0.099104753 ubox
27 38 0.319680556 ubox
27 43 0.012883033 ubox
27 44 0.003186953 ubox
27 45 0.100025681 ubox
27 46 0.445965288 ubox
27 48 0.669850849 ubox
27 60 0.004686359 ubox
28 37 0.320326235 ubox
28 44 0.175075641 ubox
28 45 0.421868695 ubox
28 47 0.669990669 ubox
28 59 0.004797798 ubox
29 35 0.075285257 ubox
29 36 0.317244867 ubox
29 43 0.225988763 ubox
29 44 0.369877760 ubox
29 46 0.669034409 ubox
29 52 0.006577031 ubox
29 58 0.004806387 ubox
30 34 0.072527421 ubox
30 40 0.004288938 ubox
30 42 0.149863552 ubox
30 51 0.006609114 ubox
31 42 0.444549509 ubox
31 50 0.006606621 ubox
32 41 0.432451961 ubox
32 45 0.021304187 ubox
33 44 0.022749620 ubox
33 45 0.010236257 ubox
34 41 0.646522475 ubox
34 44 0.008963795 ubox
35 40 0.650539370 ubox
40 52 0.048859155 ubox
40 55 0.003538044 ubox
40 57 0.442540644 ubox
40 65 0.045036993 ubox
41 49 0.009370934 ubox
41 51 0.048693084 ubox
41 53 0.031457843 ubox
41 56 0.442396858 ubox
41 64 0.045118428 ubox
42 48 0.010484761 ubox
42 52 0.034963220 ubox
42 55 0.444186208 ubox
42 57 0.043915108 ubox
42 63 0.044320127 ubox
43 50 0.052575286 ubox
43 54 0.445229489 ubox
43 56 0.044150969 ubox
44 49 0.048165510 ubox
44 50 0.007056423 ubox
44 51 0.016573274 ubox
44 53 0.438638857 ubox
44 54 0.005902136 ubox
45 49 0.010058691 ubox
45 50 0.023401040 ubox
45 51 0.247613258 ubox
45 53 0.012489238 ubox
46 50 0.247738534 ubox
46 54 0.027402919 ubox
47 53 0.026508514 ubox
48 56 0.039253615 ubox
49 55 0.038750349 ubox
49 59 0.012813481 ubox
49 62 0.006463059 ubox
50 58 0.013430394 ubox
50 60 0.003381941 ubox
50 61 0.007045138 ubox
50 62 0.004168720 ubox
50 63 0.012515625 ubox
51 59 0.003260639 ubox
51 60 0.006990173 ubox
51 61 0.004336418 ubox
51 62 0.012144927 ubox
53 59 0.008403524 ubox
53 60 0.007762070 ubox
53 61 0.005063286 ubox
53 62 0.004109893 ubox
54 58 0.008643540 ubox
54 59 0.006309699 ubox
54 60 0.005317524 ubox
54 61 0.004728179 ubox
54 65 0.090426349 ubox
55 64 0.090697842 ubox
56 63 0.089938653 ubox
1 63 0.9500000 lbox
2 62 0.9500000 lbox
3 61 0.9500000 lbox
4 60 0.9500000 lbox
5 59 0.9500000 lbox
6 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
18 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
