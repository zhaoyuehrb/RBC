%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATOX1)
} def

/sequence { (\
GCGCACUCUCGGAAGCGCAGCCGAACCCGCCCUCCGAAUCCAGAGAGGCGCUGCUGACACCGCCGCCACACCGCCGCCACACCGCCGCUGCCUCAGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.011260546 ubox
1 30 0.007585162 ubox
1 51 0.996565733 ubox
1 54 0.006014814 ubox
1 66 0.003439130 ubox
1 74 0.004016828 ubox
1 77 0.005024600 ubox
1 85 0.003947385 ubox
1 88 0.004946951 ubox
1 91 0.011029787 ubox
1 97 0.004413109 ubox
2 17 0.011287385 ubox
2 29 0.007609605 ubox
2 50 0.998261162 ubox
2 53 0.005979692 ubox
2 65 0.003447868 ubox
2 73 0.004029773 ubox
2 76 0.005039891 ubox
2 84 0.003952262 ubox
2 87 0.004958554 ubox
2 90 0.011052764 ubox
2 96 0.004822673 ubox
3 16 0.011337443 ubox
3 28 0.007555324 ubox
3 30 0.003659758 ubox
3 49 0.998441495 ubox
3 51 0.008590066 ubox
3 72 0.003801150 ubox
3 75 0.004316251 ubox
3 83 0.003522250 ubox
3 86 0.004158296 ubox
3 88 0.005457961 ubox
3 89 0.004127606 ubox
3 91 0.010308995 ubox
3 97 0.006355882 ubox
4 15 0.011321464 ubox
4 29 0.003662563 ubox
4 48 0.997707959 ubox
4 50 0.008666488 ubox
4 73 0.003444450 ubox
4 87 0.005566201 ubox
4 90 0.010326782 ubox
4 96 0.006621970 ubox
5 89 0.009179214 ubox
5 97 0.008311367 ubox
6 12 0.003870679 ubox
6 43 0.005077461 ubox
6 45 0.074106216 ubox
6 47 0.994181244 ubox
6 96 0.008879794 ubox
7 11 0.003502769 ubox
7 13 0.004384626 ubox
7 42 0.004908555 ubox
7 44 0.078160752 ubox
7 46 0.995777185 ubox
7 95 0.008169883 ubox
8 12 0.004450442 ubox
8 43 0.078595918 ubox
8 45 0.995944831 ubox
9 24 0.008880204 ubox
9 37 0.046242862 ubox
9 42 0.075418071 ubox
9 44 0.995595620 ubox
10 23 0.009132482 ubox
10 36 0.052583304 ubox
10 43 0.994884340 ubox
10 65 0.003189632 ubox
11 22 0.009215039 ubox
11 35 0.057162737 ubox
11 41 0.994242425 ubox
11 61 0.003537370 ubox
11 64 0.003236658 ubox
11 67 0.005188370 ubox
11 92 0.004877825 ubox
12 21 0.009205385 ubox
12 34 0.057167951 ubox
12 40 0.998015312 ubox
12 60 0.003533323 ubox
12 63 0.003218224 ubox
12 66 0.005194584 ubox
12 91 0.004868776 ubox
13 33 0.051401749 ubox
13 39 0.993498769 ubox
14 33 0.051850414 ubox
14 89 0.004423053 ubox
15 21 0.006653030 ubox
15 30 0.049819500 ubox
15 32 0.056811697 ubox
15 63 0.005311263 ubox
15 88 0.004965523 ubox
16 20 0.006625071 ubox
16 23 0.004439847 ubox
16 29 0.049922549 ubox
16 36 0.995658450 ubox
16 62 0.005324694 ubox
16 87 0.004963348 ubox
17 22 0.004342149 ubox
17 28 0.048626471 ubox
17 30 0.059622503 ubox
17 35 0.993585248 ubox
17 54 0.005523702 ubox
17 61 0.005236729 ubox
17 86 0.003773215 ubox
17 91 0.003765517 ubox
18 29 0.059975258 ubox
18 53 0.005618186 ubox
18 56 0.007222700 ubox
18 90 0.003780764 ubox
19 33 0.893647169 ubox
19 52 0.005726279 ubox
19 55 0.007359506 ubox
19 89 0.003851239 ubox
20 30 0.327733283 ubox
20 32 0.904146087 ubox
20 51 0.005737799 ubox
20 54 0.007375896 ubox
20 88 0.003857895 ubox
21 29 0.294056944 ubox
21 50 0.005250381 ubox
21 53 0.007240496 ubox
21 87 0.003663127 ubox
22 29 0.924968024 ubox
22 36 0.004619819 ubox
23 28 0.930684813 ubox
23 34 0.050136568 ubox
23 35 0.004458896 ubox
24 33 0.049683569 ubox
28 36 0.005379717 ubox
28 50 0.009893900 ubox
29 35 0.005338615 ubox
29 49 0.011737823 ubox
30 48 0.011739591 ubox
31 47 0.011744104 ubox
32 45 0.012044106 ubox
33 44 0.012439337 ubox
34 43 0.012475443 ubox
43 98 0.006862710 ubox
44 97 0.006607524 ubox
45 94 0.048863789 ubox
46 93 0.050266134 ubox
47 64 0.009393781 ubox
47 67 0.007667384 ubox
47 86 0.007198924 ubox
47 92 0.050570848 ubox
48 63 0.010472981 ubox
48 66 0.008275455 ubox
48 85 0.008021507 ubox
48 91 0.050680331 ubox
49 62 0.010478470 ubox
49 65 0.008277755 ubox
49 84 0.008025626 ubox
49 90 0.050658217 ubox
50 61 0.010471860 ubox
50 64 0.007823664 ubox
50 66 0.013265588 ubox
50 83 0.008015214 ubox
50 88 0.049687676 ubox
50 89 0.012157075 ubox
50 91 0.004610788 ubox
51 62 0.003380353 ubox
51 65 0.013581287 ubox
51 87 0.050839592 ubox
51 90 0.004829661 ubox
52 59 0.030739683 ubox
52 62 0.004595696 ubox
52 65 0.013076194 ubox
52 68 0.016856305 ubox
52 70 0.012003802 ubox
52 79 0.009129562 ubox
52 81 0.025560757 ubox
52 84 0.022827111 ubox
52 87 0.018412002 ubox
52 95 0.005202457 ubox
53 58 0.034088475 ubox
53 61 0.009073385 ubox
53 63 0.062496092 ubox
53 64 0.017286620 ubox
53 66 0.042371256 ubox
53 67 0.017526670 ubox
53 69 0.013399261 ubox
53 72 0.005479602 ubox
53 74 0.007044101 ubox
53 77 0.005142091 ubox
53 78 0.010243416 ubox
53 80 0.028548550 ubox
53 83 0.031215924 ubox
53 85 0.153550583 ubox
53 86 0.042803950 ubox
53 88 0.037519997 ubox
53 91 0.012483340 ubox
53 94 0.005312088 ubox
53 97 0.916667064 ubox
54 62 0.062759898 ubox
54 65 0.042913550 ubox
54 73 0.007072955 ubox
54 76 0.005181630 ubox
54 84 0.153325694 ubox
54 87 0.037544050 ubox
54 90 0.012502866 ubox
54 96 0.962772633 ubox
55 62 0.025483358 ubox
55 65 0.017262707 ubox
55 68 0.014769717 ubox
55 70 0.007180871 ubox
55 79 0.035982774 ubox
55 81 0.048971039 ubox
55 84 0.053493445 ubox
55 87 0.003902973 ubox
55 95 0.963095127 ubox
56 61 0.045543061 ubox
56 64 0.025879551 ubox
56 67 0.015402941 ubox
56 69 0.007661513 ubox
56 72 0.004190088 ubox
56 75 0.003430522 ubox
56 78 0.037079570 ubox
56 80 0.051830144 ubox
56 83 0.102286609 ubox
56 86 0.008997669 ubox
56 94 0.963219144 ubox
56 98 0.046030633 ubox
57 93 0.930749015 ubox
57 97 0.046574371 ubox
58 90 0.362206973 ubox
58 96 0.046506616 ubox
59 89 0.351746935 ubox
59 97 0.007689712 ubox
60 96 0.008223381 ubox
61 73 0.009451958 ubox
61 76 0.058373053 ubox
61 84 0.013580441 ubox
61 87 0.255240077 ubox
61 90 0.206182747 ubox
62 72 0.023033901 ubox
62 74 0.046340415 ubox
62 75 0.063510211 ubox
62 77 0.445540771 ubox
62 83 0.008431733 ubox
62 85 0.064561204 ubox
62 86 0.229873697 ubox
62 88 0.735245736 ubox
62 89 0.106095307 ubox
62 91 0.329654162 ubox
62 97 0.012121153 ubox
63 73 0.042388639 ubox
63 76 0.447847962 ubox
63 84 0.082751442 ubox
63 87 0.735512644 ubox
63 90 0.328149942 ubox
63 96 0.012629210 ubox
64 73 0.085477821 ubox
64 76 0.061160493 ubox
64 84 0.180734971 ubox
64 87 0.077894419 ubox
64 90 0.036513514 ubox
65 72 0.102391432 ubox
65 74 0.493400517 ubox
65 75 0.048135719 ubox
65 77 0.048375093 ubox
65 83 0.169494662 ubox
65 85 0.717775721 ubox
65 86 0.079852551 ubox
65 88 0.287259809 ubox
65 89 0.044548834 ubox
65 91 0.087539868 ubox
65 97 0.015917280 ubox
66 73 0.495318385 ubox
66 76 0.049781270 ubox
66 84 0.717357780 ubox
66 87 0.284141132 ubox
66 90 0.078631360 ubox
66 96 0.016584344 ubox
67 90 0.055604706 ubox
68 89 0.068600244 ubox
68 97 0.009440204 ubox
69 90 0.091009200 ubox
69 96 0.010079789 ubox
70 89 0.091526150 ubox
70 97 0.004923422 ubox
71 96 0.005252645 ubox
72 84 0.078516468 ubox
72 87 0.088882104 ubox
72 90 0.047421992 ubox
73 83 0.081143555 ubox
73 85 0.124937366 ubox
73 86 0.124792161 ubox
73 88 0.283584995 ubox
73 89 0.013994544 ubox
73 91 0.068869949 ubox
74 84 0.113378249 ubox
74 87 0.284312175 ubox
74 90 0.069028974 ubox
75 84 0.143498773 ubox
75 87 0.031905365 ubox
75 90 0.007066561 ubox
76 83 0.155729942 ubox
76 85 0.380324080 ubox
76 86 0.030121474 ubox
76 88 0.079588393 ubox
76 91 0.017177370 ubox
77 84 0.381172736 ubox
77 87 0.079577796 ubox
77 90 0.016839004 ubox
78 90 0.030472800 ubox
79 89 0.028286992 ubox
79 97 0.011024329 ubox
80 90 0.056572709 ubox
80 96 0.011761075 ubox
81 89 0.053186286 ubox
81 97 0.005121164 ubox
82 96 0.005455583 ubox
83 90 0.044268871 ubox
84 89 0.030880770 ubox
84 91 0.343906887 ubox
84 97 0.004754832 ubox
85 90 0.343053524 ubox
85 96 0.004860296 ubox
87 97 0.208165874 ubox
88 96 0.217648278 ubox
89 95 0.217782974 ubox
90 94 0.214382448 ubox
90 97 0.020854870 ubox
91 96 0.021974325 ubox
1 51 0.9500000 lbox
2 50 0.9500000 lbox
3 49 0.9500000 lbox
4 48 0.9500000 lbox
6 47 0.9500000 lbox
7 46 0.9500000 lbox
8 45 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
11 41 0.9500000 lbox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
53 97 0.9500000 lbox
54 96 0.9500000 lbox
55 95 0.9500000 lbox
56 94 0.9500000 lbox
57 93 0.9500000 lbox
62 88 0.9500000 lbox
63 87 0.9500000 lbox
65 85 0.9500000 lbox
66 84 0.9500000 lbox
showpage
end
%%EOF
