%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ADAM18)
} def

/sequence { (\
AACGCUGCUCAACGGUCUCUGUCCUUGGCUGUGGCUCCUGCGCUCUGGCUGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 22 0.009507984 ubox
2 32 0.165582496 ubox
3 14 0.009814174 ubox
3 21 0.010061243 ubox
3 31 0.170505584 ubox
3 33 0.623511449 ubox
3 40 0.034178005 ubox
3 42 0.044952688 ubox
4 13 0.010462942 ubox
4 16 0.037437891 ubox
4 20 0.005690341 ubox
4 29 0.094295484 ubox
4 30 0.127386067 ubox
4 32 0.747699707 ubox
4 35 0.068049269 ubox
4 39 0.028789550 ubox
4 41 0.126919551 ubox
4 43 0.004519565 ubox
4 49 0.005668322 ubox
4 54 0.015295715 ubox
5 15 0.039131891 ubox
5 28 0.095419781 ubox
5 31 0.754030563 ubox
5 34 0.068142404 ubox
5 40 0.126571529 ubox
5 42 0.004458873 ubox
5 48 0.005681739 ubox
5 53 0.015300473 ubox
6 14 0.039119702 ubox
6 27 0.091346651 ubox
6 31 0.011696374 ubox
6 33 0.067524950 ubox
6 47 0.005579190 ubox
6 52 0.014378703 ubox
7 13 0.038962854 ubox
7 16 0.010644341 ubox
7 22 0.007486031 ubox
7 26 0.063961258 ubox
7 29 0.784276973 ubox
7 30 0.012769635 ubox
7 32 0.057838508 ubox
7 35 0.161016214 ubox
7 41 0.021146385 ubox
7 43 0.006122133 ubox
7 49 0.008454562 ubox
7 54 0.085348419 ubox
8 15 0.010937791 ubox
8 21 0.007607832 ubox
8 28 0.781547413 ubox
8 31 0.057476751 ubox
8 34 0.161074663 ubox
8 40 0.021148729 ubox
8 42 0.006135123 ubox
8 48 0.008457479 ubox
8 53 0.085626671 ubox
9 14 0.009993051 ubox
9 27 0.216672312 ubox
9 28 0.102455864 ubox
9 33 0.116505030 ubox
9 34 0.034168695 ubox
9 47 0.005904704 ubox
9 52 0.085613102 ubox
10 21 0.017553889 ubox
10 27 0.757605888 ubox
10 33 0.130221227 ubox
10 40 0.006094698 ubox
10 47 0.005950036 ubox
10 51 0.085577876 ubox
11 20 0.017284660 ubox
11 26 0.765306562 ubox
11 32 0.094746460 ubox
11 39 0.006148202 ubox
11 46 0.005574275 ubox
11 50 0.076599887 ubox
12 22 0.233832972 ubox
12 25 0.740920179 ubox
12 32 0.577078129 ubox
13 21 0.250345364 ubox
13 27 0.005796775 ubox
13 31 0.602358626 ubox
13 47 0.006521677 ubox
14 20 0.248656440 ubox
14 23 0.165985065 ubox
14 24 0.734223208 ubox
14 25 0.025784587 ubox
14 26 0.004288674 ubox
14 30 0.602710471 ubox
14 36 0.011094459 ubox
14 46 0.006374393 ubox
14 50 0.004136388 ubox
14 55 0.026671922 ubox
15 19 0.243365966 ubox
15 22 0.128700157 ubox
15 23 0.733703469 ubox
15 24 0.029771571 ubox
15 25 0.003273520 ubox
15 29 0.603241522 ubox
15 35 0.011780439 ubox
15 45 0.006338819 ubox
15 49 0.005564074 ubox
15 54 0.026967872 ubox
16 21 0.102264341 ubox
16 28 0.601611668 ubox
16 34 0.011783303 ubox
16 48 0.005475393 ubox
16 53 0.004193760 ubox
17 27 0.600666915 ubox
17 28 0.039152087 ubox
17 33 0.011877829 ubox
17 47 0.005444335 ubox
17 53 0.028798301 ubox
18 27 0.035592976 ubox
18 28 0.008114415 ubox
18 52 0.029116956 ubox
19 27 0.025118955 ubox
19 28 0.008633354 ubox
19 51 0.028964814 ubox
20 27 0.009787580 ubox
20 42 0.004172040 ubox
21 26 0.025010172 ubox
21 29 0.018783869 ubox
21 41 0.004628141 ubox
21 43 0.004198092 ubox
21 49 0.028483357 ubox
21 54 0.004299880 ubox
22 28 0.018780739 ubox
22 40 0.004558026 ubox
22 42 0.004125203 ubox
22 48 0.012858712 ubox
23 27 0.018246098 ubox
23 47 0.012405137 ubox
23 48 0.028548890 ubox
24 47 0.028736226 ubox
24 53 0.035771871 ubox
25 52 0.036334278 ubox
26 51 0.036295066 ubox
27 36 0.006082023 ubox
27 44 0.030704867 ubox
27 45 0.005186863 ubox
27 50 0.041378090 ubox
28 35 0.006547245 ubox
28 43 0.031484981 ubox
28 49 0.044705640 ubox
29 34 0.006534455 ubox
29 42 0.030862754 ubox
29 48 0.044719351 ubox
30 42 0.006843721 ubox
30 47 0.044336194 ubox
31 41 0.030201169 ubox
31 43 0.007098547 ubox
31 46 0.037291313 ubox
32 40 0.030144916 ubox
32 42 0.006978567 ubox
33 39 0.030191618 ubox
33 41 0.007943608 ubox
33 44 0.049997259 ubox
33 45 0.010992473 ubox
33 50 0.010521509 ubox
33 55 0.738626389 ubox
34 38 0.029775922 ubox
34 41 0.283092727 ubox
34 43 0.052867038 ubox
34 49 0.013564564 ubox
34 54 0.933381507 ubox
35 40 0.283248214 ubox
35 42 0.052833526 ubox
35 48 0.013324505 ubox
35 53 0.934218672 ubox
36 47 0.011958331 ubox
36 52 0.934004944 ubox
37 48 0.019095263 ubox
37 51 0.933187516 ubox
38 47 0.022161186 ubox
38 48 0.017651344 ubox
38 53 0.005183799 ubox
39 47 0.017545993 ubox
39 51 0.003547065 ubox
39 52 0.005249700 ubox
40 46 0.012035844 ubox
40 49 0.932009418 ubox
40 50 0.015832696 ubox
41 47 0.047262155 ubox
41 48 0.931918792 ubox
42 46 0.031843811 ubox
42 49 0.075867473 ubox
42 54 0.338379743 ubox
43 48 0.075744524 ubox
43 53 0.341184875 ubox
44 52 0.341171936 ubox
45 51 0.341130845 ubox
47 55 0.026180016 ubox
48 54 0.026489363 ubox
49 53 0.026298234 ubox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
37 51 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
showpage
end
%%EOF
