%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF480)
} def

/sequence { (\
AGUUUCCCACAAACCCGGAAGCGGAUCGCGUGGAGUGAAGGUCACGCCGCGGCGCGAUUGACUUCUAAAGAGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.061687478 ubox
2 14 0.184178183 ubox
2 22 0.936357438 ubox
2 62 0.003550487 ubox
3 9 0.059235095 ubox
3 12 0.012218141 ubox
3 13 0.184385894 ubox
3 20 0.004283156 ubox
3 21 0.936865783 ubox
3 61 0.003493355 ubox
3 68 0.003848361 ubox
3 69 0.008681671 ubox
3 70 0.003192005 ubox
3 71 0.004312700 ubox
3 72 0.003422442 ubox
4 11 0.013260982 ubox
4 12 0.182829636 ubox
4 13 0.012165588 ubox
4 19 0.004818683 ubox
4 20 0.936082627 ubox
4 21 0.005355726 ubox
4 67 0.004340854 ubox
4 68 0.009935626 ubox
4 69 0.003822604 ubox
4 70 0.004587634 ubox
4 71 0.004237371 ubox
4 72 0.013452796 ubox
5 11 0.169457288 ubox
5 12 0.013713049 ubox
5 18 0.004558582 ubox
5 19 0.937749353 ubox
5 20 0.006538589 ubox
5 67 0.010051439 ubox
5 68 0.003660110 ubox
5 69 0.004089525 ubox
5 70 0.004039694 ubox
5 71 0.017651005 ubox
6 17 0.006311728 ubox
6 18 0.930262572 ubox
6 70 0.018004514 ubox
7 17 0.921014190 ubox
7 18 0.124443862 ubox
7 33 0.004897258 ubox
8 17 0.174048290 ubox
8 32 0.004996049 ubox
9 31 0.005077951 ubox
9 73 0.056508376 ubox
10 30 0.005063429 ubox
10 72 0.060207181 ubox
13 73 0.035436405 ubox
14 24 0.003522144 ubox
14 72 0.037428656 ubox
15 24 0.075308924 ubox
16 23 0.076885188 ubox
17 22 0.076604790 ubox
17 65 0.010008105 ubox
17 66 0.319846920 ubox
18 64 0.007611301 ubox
18 65 0.335916884 ubox
19 63 0.006219653 ubox
19 64 0.336195414 ubox
20 63 0.336257494 ubox
21 55 0.004304860 ubox
21 62 0.336243922 ubox
22 54 0.004306994 ubox
22 56 0.005415993 ubox
22 60 0.087286350 ubox
23 53 0.004266836 ubox
23 55 0.014178659 ubox
23 59 0.083236645 ubox
23 63 0.009450772 ubox
23 65 0.010395384 ubox
23 66 0.008343481 ubox
23 74 0.006251725 ubox
24 58 0.049588513 ubox
24 59 0.941679919 ubox
24 62 0.009638497 ubox
24 64 0.008103080 ubox
24 65 0.008656710 ubox
24 73 0.004132594 ubox
24 74 0.004843750 ubox
25 58 0.987948878 ubox
25 63 0.006267099 ubox
25 64 0.007692833 ubox
25 73 0.004735471 ubox
26 38 0.005365273 ubox
26 52 0.005061514 ubox
26 57 0.995412317 ubox
26 71 0.008011544 ubox
26 72 0.003293306 ubox
27 37 0.005738459 ubox
27 51 0.005650425 ubox
27 54 0.077334647 ubox
27 56 0.996366665 ubox
27 70 0.008525105 ubox
28 36 0.005746437 ubox
28 50 0.005599252 ubox
28 53 0.092166153 ubox
28 55 0.995188582 ubox
29 35 0.005748473 ubox
29 49 0.005560703 ubox
29 51 0.233662412 ubox
29 52 0.066886376 ubox
29 54 0.969695338 ubox
30 45 0.003559030 ubox
30 48 0.003644996 ubox
30 50 0.557026057 ubox
30 53 0.829893383 ubox
31 44 0.003569946 ubox
31 49 0.636616962 ubox
31 51 0.081810760 ubox
31 52 0.760854573 ubox
32 43 0.003566736 ubox
32 48 0.990138484 ubox
32 50 0.093879238 ubox
32 65 0.008944931 ubox
33 42 0.003343474 ubox
33 47 0.989115668 ubox
33 64 0.008980512 ubox
34 63 0.009179511 ubox
35 45 0.992393502 ubox
35 47 0.061429609 ubox
35 50 0.022331120 ubox
35 62 0.009320277 ubox
36 44 0.997357752 ubox
36 46 0.061330043 ubox
36 49 0.022320345 ubox
36 51 0.008232378 ubox
36 61 0.009163176 ubox
37 43 0.997266819 ubox
37 45 0.060740352 ubox
37 48 0.016777239 ubox
37 50 0.008238946 ubox
38 42 0.867640128 ubox
38 59 0.006770089 ubox
39 58 0.003766120 ubox
40 48 0.021506968 ubox
40 59 0.007412656 ubox
41 47 0.022018767 ubox
41 58 0.010870824 ubox
42 46 0.020599366 ubox
42 57 0.011741089 ubox
43 56 0.011796572 ubox
45 54 0.011956835 ubox
46 53 0.012433127 ubox
47 52 0.012440734 ubox
55 72 0.003485242 ubox
56 65 0.006442344 ubox
56 74 0.007627298 ubox
57 64 0.006366412 ubox
57 73 0.007703659 ubox
58 69 0.003762530 ubox
58 72 0.007662463 ubox
59 68 0.004379352 ubox
59 71 0.007182455 ubox
60 66 0.003202257 ubox
60 74 0.919003589 ubox
61 73 0.931402628 ubox
62 70 0.031821181 ubox
62 72 0.932434320 ubox
63 69 0.032342741 ubox
63 70 0.030006598 ubox
63 71 0.908134835 ubox
63 72 0.049269396 ubox
64 68 0.028922785 ubox
64 69 0.039560423 ubox
64 70 0.854588618 ubox
64 71 0.207088373 ubox
65 70 0.286863325 ubox
65 72 0.018451566 ubox
66 71 0.018322527 ubox
2 22 0.9500000 lbox
3 21 0.9500000 lbox
4 20 0.9500000 lbox
5 19 0.9500000 lbox
6 18 0.9500000 lbox
7 17 0.9500000 lbox
24 59 0.9500000 lbox
25 58 0.9500000 lbox
26 57 0.9500000 lbox
27 56 0.9500000 lbox
28 55 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
60 74 0.9500000 lbox
61 73 0.9500000 lbox
62 72 0.9500000 lbox
63 71 0.9500000 lbox
64 70 0.9500000 lbox
showpage
end
%%EOF
