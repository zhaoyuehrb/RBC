%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCCUUUUCCUCUGUGCCCCUCCCACACGCCUGUCUCCACGAUCCCGACAGGCCCAGCGGCUAGGAGAGUCACGUGAGAGUGGGCGGAGGGGGUGGAGGUUUGUCUCCGCUGUUUCAUCUCUAUGGCUGUCAGAGGUGGGCGGCUUUGACCGAGAGGCUGCUGGAGCUCGUGUUUGGACGCG\
) } def
/len { sequence length } bind def

/coor [
[109.60413361 197.68220520]
[105.80436707 183.17146301]
[102.00460815 168.66072083]
[98.20484161 154.14996338]
[94.40508270 139.63922119]
[79.48678589 133.13557434]
[68.76203156 121.47991180]
[63.80161667 106.89663696]
[65.12013245 91.98616028]
[72.14373779 79.26242065]
[57.40751648 76.46176910]
[42.67129135 73.66110992]
[27.93506622 70.86045837]
[13.19884109 68.05979919]
[-1.80328929 73.08440399]
[-12.86211777 63.10684967]
[-27.59834290 60.30619049]
[-42.33456802 57.50553513]
[-57.07079315 54.70487976]
[-71.80701447 51.90422440]
[-86.56661224 49.22946930]
[-101.34850311 46.68081284]
[-116.13040161 44.13216019]
[-131.04455566 49.41216278]
[-142.27212524 39.62487030]
[-157.05401611 37.07621384]
[-171.83590698 34.52755737]
[-182.60139465 49.90895844]
[-203.45333862 55.11927795]
[-225.11056519 44.26881790]
[-239.97085571 46.31131744]
[-254.83114624 48.35381699]
[-269.69143677 50.39631653]
[-284.55172729 52.43881607]
[-299.41201782 54.48131561]
[-314.27230835 56.52381516]
[-319.41345215 70.94002533]
[-330.67315674 81.30718994]
[-345.46395874 85.24302673]
[-360.38705444 81.84309387]
[-372.01324463 71.88868713]
[-377.67089844 57.66724014]
[-376.05993652 42.44674683]
[-367.55053711 29.72476387]
[-354.09811401 22.42470932]
[-338.79391479 22.22407913]
[-325.15475464 29.16898155]
[-316.31478882 41.66352463]
[-301.45449829 39.62102509]
[-286.59420776 37.57852554]
[-271.73391724 35.53602600]
[-256.87362671 33.49352646]
[-242.01335144 31.45102692]
[-227.15306091 29.40852737]
[-225.12959290 22.18664742]
[-240.11700439 22.80094910]
[-245.33242798 8.73683357]
[-233.56819153 -0.56923479]
[-221.08264160 7.74288893]
[-219.05915833 0.52100909]
[-230.69482422 -8.94530964]
[-242.33050537 -18.41162872]
[-253.96617126 -27.87794876]
[-270.00793457 -27.67425346]
[-280.05712891 -40.17996597]
[-276.40490723 -55.80176926]
[-261.85293579 -62.55595779]
[-247.56420898 -55.26129150]
[-244.49984741 -39.51361847]
[-232.86418152 -30.04729843]
[-221.22851562 -20.58098030]
[-209.59283447 -11.11466026]
[-187.66787720 -9.65665340]
[-172.86572266 3.05837893]
[-169.28724670 19.74566650]
[-154.50535583 22.29432106]
[-139.72346497 24.84297752]
[-125.86660767 19.38067627]
[-113.58174133 29.35026550]
[-98.79985046 31.89892197]
[-84.01795959 34.44757843]
[-76.87508392 32.48098755]
[-69.00636292 37.16799927]
[-54.27013779 39.96865463]
[-39.53391266 42.76931000]
[-24.79768562 45.56996918]
[-10.06146145 48.37062454]
[3.88663602 43.14569855]
[15.99949741 53.32357407]
[30.73572350 56.12422943]
[45.47194672 58.92488480]
[60.20817184 61.72554398]
[74.94439697 64.52619934]
[88.01930237 57.17454529]
[93.28307343 43.12845230]
[98.54684448 29.08235931]
[103.81061554 15.03626728]
[109.07438660 0.99017501]
[114.33815765 -13.05591774]
[107.56781769 -27.33660507]
[112.95705414 -42.19364929]
[127.30852509 -48.81262589]
[142.10775757 -43.26661301]
[148.57463074 -28.84596634]
[142.87246704 -14.10619545]
[128.38424683 -7.79214668]
[123.12048340 6.25394583]
[117.85671234 20.30003929]
[112.59294128 34.34613037]
[107.32917023 48.39222336]
[102.06539917 62.43831635]
[107.32323456 67.78669739]
[114.24710083 54.48030853]
[129.04179382 56.95358276]
[131.26119995 71.78848267]
[117.83889771 78.48345947]
[123.09673309 83.83184052]
[137.23065186 78.80864716]
[151.36456299 73.78545380]
[165.49847412 68.76226044]
[179.63238525 63.73906326]
[193.76629639 58.71586990]
[207.90022278 53.69267654]
[211.31291199 38.64751053]
[222.33389282 27.85206604]
[237.44639587 24.75113487]
[251.82807922 30.33420753]
[260.88980103 42.81975174]
[261.73999023 58.22367096]
[254.10737610 71.63063049]
[240.42747498 78.76251984]
[225.06550598 77.34358215]
[212.92341614 67.82659149]
[198.78948975 72.84978485]
[184.65557861 77.87297821]
[170.52166748 82.89617157]
[156.38775635 87.91936493]
[142.25384521 92.94255829]
[128.11993408 97.96575165]
[127.22408295 112.93898010]
[140.65823364 119.61156464]
[154.09239197 126.28414917]
[167.52655029 132.95674133]
[180.96070862 139.62931824]
[194.39486694 146.30191040]
[207.82902527 152.97450256]
[221.26318359 159.64707947]
[234.69734192 166.31967163]
[249.59552002 161.04522705]
[263.82354736 167.92555237]
[268.94018555 182.87866211]
[261.90982056 197.03315735]
[246.90344238 201.99140930]
[232.82408142 194.81178284]
[228.02476501 179.75382996]
[214.59060669 173.08123779]
[201.15644836 166.40866089]
[187.72229004 159.73606873]
[174.28813171 153.06347656]
[160.85397339 146.39089966]
[147.41981506 139.71830750]
[133.98565674 133.04571533]
[120.55149841 126.37313843]
[108.91582489 135.83946228]
[112.71559143 150.35020447]
[116.51535034 164.86094666]
[120.31511688 179.37170410]
[124.11487579 193.88244629]
[135.09564209 205.27250671]
[130.83474731 219.54464722]
[134.63450623 234.05540466]
[138.43426514 248.56614685]
[142.23403931 263.07690430]
[146.03379822 277.58764648]
[157.94206238 288.86264038]
[153.86911011 304.74792480]
[138.00485229 308.90213013]
[126.66906738 297.05172729]
[131.52304077 281.38739014]
[127.72328186 266.87664795]
[123.92352295 252.36590576]
[120.12375641 237.85516357]
[116.32399750 223.34440613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[5 164]
[10 93]
[11 92]
[12 91]
[13 90]
[14 89]
[16 87]
[17 86]
[18 85]
[19 84]
[20 83]
[21 81]
[22 80]
[23 79]
[25 77]
[26 76]
[27 75]
[30 54]
[31 53]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[60 72]
[61 71]
[62 70]
[63 69]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[117 139]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
[148 155]
[170 183]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
