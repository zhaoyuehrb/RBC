%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCAUUUCGAACCCGCAAUGGAAGAAAGGGGAGGGGUUUAUGCGGGGCGGGGUCUGGAGUUAGUGUUUUGGGAGUGGGAGGUAGUUACAGUGAUGUCUGUUUUUUCCCGUUCAAGAAUUAAGUGUGUACCUGCAGACGUGUAUUCAUUCAUAUAUUCUUGUUCUGAAGAGGGUCACUCCCUCACUGGCUGCCAUUGAAAGAGUCCACUUCUCAGUGACUCCUAGCUGGGCACUGGAUGCAGUUGAGGAUUGCUG\
GUCAAU\
) } def
/len { sequence length } bind def

/coor [
[93.49745178 222.01718140]
[92.95798492 207.02688599]
[92.41851807 192.03659058]
[91.87904358 177.04629517]
[91.33957672 162.05599976]
[80.05985260 158.43965149]
[69.82439423 152.82749939]
[60.97537613 145.48133850]
[53.79418945 136.71939087]
[48.49271393 126.90282440]
[45.20734024 116.42110443]
[43.99604416 105.67672729]
[44.83845901 95.06974792]
[47.63893890 84.98297119]
[52.23234177 75.76808167]
[58.39230728 67.73341370]
[65.84160614 61.13370514]
[57.67705154 48.55038071]
[49.51249313 35.96706009]
[41.34793854 23.38373566]
[33.18338013 10.80041313]
[25.01882553 -1.78290927]
[11.01660919 -9.14826870]
[10.57983685 -24.03646851]
[2.41527987 -36.61979294]
[-12.78383350 -40.02929306]
[-20.88460159 -52.90687943]
[-17.54049683 -67.37590027]
[-25.70505333 -79.95922089]
[-34.09460449 -92.39366913]
[-42.70643234 -104.67521667]
[-51.31826401 -116.95676422]
[-59.93009186 -129.23831177]
[-68.54192352 -141.51985168]
[-77.22723389 -153.74954224]
[-85.98570251 -165.92695618]
[-100.32495117 -172.61250305]
[-101.47502899 -187.46264648]
[-110.23350525 -199.64004517]
[-118.99197388 -211.81744385]
[-134.39535522 -212.02279663]
[-146.58183289 -221.15205383]
[-151.00361633 -235.53646851]
[-146.16531372 -249.59808350]
[-154.92378235 -261.77548218]
[-163.68225098 -273.95288086]
[-172.44071960 -286.13027954]
[-181.19920349 -298.30767822]
[-189.95767212 -310.48510742]
[-198.71614075 -322.66250610]
[-207.47462463 -334.83990479]
[-216.23309326 -347.01730347]
[-226.31896973 -358.12023926]
[-237.60150146 -368.00479126]
[-248.88403320 -377.88934326]
[-260.16656494 -387.77389526]
[-271.44909668 -397.65844727]
[-286.92782593 -400.93258667]
[-291.40222168 -415.13925171]
[-302.68478394 -425.02380371]
[-314.42825317 -434.35604858]
[-326.60565186 -443.11450195]
[-338.78305054 -451.87298584]
[-350.96044922 -460.63143921]
[-363.13784790 -469.38992310]
[-371.90164185 -471.84823608]
[-375.40792847 -478.32714844]
[-387.47943115 -487.23098755]
[-399.55093384 -496.13485718]
[-411.62243652 -505.03872681]
[-423.69396973 -513.94256592]
[-435.76547241 -522.84643555]
[-447.83697510 -531.75030518]
[-454.30319214 -532.85839844]
[-458.61138916 -536.50341797]
[-460.08776855 -541.01519775]
[-471.94229126 -550.20599365]
[-483.79681396 -559.39672852]
[-495.65133667 -568.58752441]
[-507.50588989 -577.77825928]
[-519.36041260 -586.96905518]
[-531.21496582 -596.15979004]
[-541.07867432 -592.24127197]
[-551.59942627 -592.74963379]
[-560.89605713 -597.52722168]
[-567.33404541 -605.65917969]
[-569.81250000 -615.64752197]
[-567.95214844 -625.68731689]
[-579.46850586 -635.29846191]
[-590.98480225 -644.90966797]
[-602.50109863 -654.52081299]
[-618.21704102 -652.85198975]
[-630.45727539 -662.84960938]
[-631.95983887 -678.58233643]
[-621.83331299 -690.71612549]
[-606.08563232 -692.05230713]
[-594.05957031 -681.79809570]
[-592.88995361 -666.03710938]
[-581.37365723 -656.42596436]
[-569.85729980 -646.81481934]
[-558.34100342 -637.20361328]
[-539.08764648 -640.34167480]
[-523.52392578 -628.07916260]
[-522.02416992 -608.01434326]
[-510.16964722 -598.82354736]
[-498.31512451 -589.63281250]
[-486.46057129 -580.44201660]
[-474.60604858 -571.25128174]
[-462.75152588 -562.06054688]
[-450.89700317 -552.86975098]
[-438.93310547 -543.82177734]
[-426.86160278 -534.91790771]
[-414.79010010 -526.01409912]
[-402.71859741 -517.11022949]
[-390.64709473 -508.20635986]
[-378.57556152 -499.30252075]
[-366.50405884 -490.39865112]
[-354.37939453 -481.56732178]
[-342.20199585 -472.80886841]
[-330.02456665 -464.05038452]
[-317.84716797 -455.29190063]
[-305.66976929 -446.53344727]
[-309.32562256 -461.08111572]
[-303.81869507 -475.03366089]
[-291.21252441 -483.16293335]
[-276.23080444 -482.42276001]
[-264.48733521 -473.09051514]
[-260.38253784 -458.66308594]
[-265.45452881 -444.54660034]
[-277.80279541 -436.03067017]
[-292.80023193 -436.30633545]
[-281.51766968 -426.42178345]
[-266.84597778 -423.85464478]
[-261.56454468 -408.94097900]
[-250.28202820 -399.05642700]
[-238.99948120 -389.17187500]
[-227.71694946 -379.28732300]
[-216.43441772 -369.40277100]
[-201.82200623 -372.79067993]
[-196.04023743 -386.63159180]
[-190.25848389 -400.47253418]
[-184.47671509 -414.31344604]
[-178.69494629 -428.15435791]
[-172.91317749 -441.99530029]
[-179.14849854 -456.51754761]
[-173.21124268 -471.16421509]
[-158.62385559 -477.24563599]
[-144.04080200 -471.15386963]
[-138.11392212 -456.50302124]
[-144.35954285 -441.98516846]
[-159.07225037 -436.21353149]
[-164.85401917 -422.37258911]
[-170.63578796 -408.53167725]
[-176.41755676 -394.69076538]
[-182.19932556 -380.84982300]
[-187.98109436 -367.00891113]
[-195.35221863 -359.09930420]
[-204.05569458 -355.77578735]
[-195.29721069 -343.59838867]
[-186.53874207 -331.42095947]
[-177.78027344 -319.24356079]
[-169.02178955 -307.06616211]
[-160.26332092 -294.88876343]
[-151.50485229 -282.71136475]
[-142.74638367 -270.53396606]
[-133.98789978 -258.35653687]
[-119.11763000 -258.47015381]
[-106.88717651 -249.70201111]
[-102.10903168 -235.24440002]
[-106.81457520 -220.57592773]
[-98.05609894 -208.39851379]
[-89.29763031 -196.22111511]
[-75.58484650 -190.40657043]
[-73.80830383 -174.68542480]
[-65.04982758 -162.50802612]
[-58.61343002 -158.92431641]
[-56.26037598 -150.13168335]
[-47.64854813 -137.85014343]
[-39.03671646 -125.56858826]
[-30.42488670 -113.28704071]
[-21.81305695 -101.00550079]
[-18.45449638 -100.03413391]
[-15.39194870 -97.40584564]
[-13.39101219 -93.27378845]
[-13.12173080 -88.12377930]
[-4.95717382 -75.54045868]
[9.61883736 -72.69871521]
[18.07811356 -60.05374146]
[14.99860287 -44.78434753]
[23.16316032 -32.20102692]
[36.58139038 -25.73571014]
[37.60214615 -9.94746590]
[45.76670456 2.63585687]
[53.93126297 15.21918011]
[62.09581757 27.80250168]
[70.26037598 40.38582611]
[78.42493439 52.96914673]
[99.38808441 46.44105530]
[121.93587494 49.14805603]
[142.05242920 61.22525406]
[155.90727234 81.08790588]
[160.57839966 105.61854553]
[154.64837646 130.65132141]
[167.23170471 138.81587219]
[179.81503296 146.98043823]
[192.39834595 155.14498901]
[204.98167419 163.30955505]
[219.40766907 157.90614319]
[234.07774353 161.98562622]
[243.42218018 173.78161621]
[244.02166748 188.64024353]
[256.60501099 196.80479431]
[269.18832397 204.96936035]
[281.77163696 213.13391113]
[294.35494995 221.29847717]
[306.93829346 229.46302795]
[321.37365723 223.77091980]
[336.38937378 227.68339539]
[346.21163940 239.69601440]
[347.06353760 255.18968201]
[338.61752319 268.20678711]
[324.12127686 273.74194336]
[309.14886475 269.66680908]
[299.45751953 257.54833984]
[298.77374268 242.04635620]
[286.19039917 233.88179016]
[273.60708618 225.71723938]
[261.02377319 217.55267334]
[248.44044495 209.38812256]
[235.85711670 201.22357178]
[222.04365540 206.73049927]
[207.46376038 203.00344849]
[197.76072693 191.26869202]
[196.81712341 175.89286804]
[184.23379517 167.72831726]
[171.65046692 159.56376648]
[159.06715393 151.39920044]
[146.48382568 143.23464966]
[134.91009521 152.77659607]
[140.52548218 166.68585205]
[146.14088440 180.59509277]
[151.75627136 194.50434875]
[157.37165833 208.41360474]
[162.98706055 222.32286072]
[174.52325439 234.74671936]
[165.77845764 249.27136230]
[149.40066528 244.88912964]
[149.07780457 227.93826294]
[143.46240234 214.02900696]
[137.84701538 200.11975098]
[132.23162842 186.21049500]
[126.61622620 172.30123901]
[121.00083923 158.39198303]
[106.32987213 161.51652527]
[106.86933899 176.50682068]
[107.40881348 191.49711609]
[107.94828033 206.48741150]
[108.48775482 221.47770691]
[117.64661407 235.08091736]
[110.20320892 249.69349670]
[93.81466675 250.28329468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 258]
[2 257]
[3 256]
[4 255]
[5 254]
[17 197]
[18 196]
[19 195]
[20 194]
[21 193]
[22 192]
[24 190]
[25 189]
[28 186]
[29 185]
[30 181]
[31 180]
[32 179]
[33 178]
[34 177]
[35 175]
[36 174]
[38 172]
[39 171]
[40 170]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[52 158]
[53 138]
[54 137]
[55 136]
[56 135]
[57 134]
[59 132]
[60 131]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
[67 117]
[68 116]
[69 115]
[70 114]
[71 113]
[72 112]
[73 111]
[76 110]
[77 109]
[78 108]
[79 107]
[80 106]
[81 105]
[82 104]
[88 101]
[89 100]
[90 99]
[91 98]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[203 238]
[204 237]
[205 236]
[206 235]
[207 234]
[211 230]
[212 229]
[213 228]
[214 227]
[215 226]
[216 225]
[239 253]
[240 252]
[241 251]
[242 250]
[243 249]
[244 248]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
