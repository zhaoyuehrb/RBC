%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NCAPH)
} def

/sequence { (\
GGCCCGCCGGCGACGUCACGCGGCCGUUACGGCGCUCAGGCGUCUCGACGCGCGCGAUUUAAAACCAGCUCAGGAGACGCCAAGGAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.028465917 ubox
1 17 0.003911771 ubox
1 25 0.077187878 ubox
1 28 0.005115929 ubox
1 36 0.682312904 ubox
1 37 0.462358934 ubox
1 81 0.021775290 ubox
2 7 0.028312086 ubox
2 11 0.031686938 ubox
2 16 0.003783589 ubox
2 24 0.077318574 ubox
2 27 0.006140045 ubox
2 33 0.203191279 ubox
2 35 0.924568025 ubox
2 36 0.120080745 ubox
2 55 0.004607737 ubox
2 80 0.021729734 ubox
3 10 0.031717475 ubox
3 15 0.003768143 ubox
3 23 0.070956605 ubox
3 26 0.006198551 ubox
3 32 0.192523527 ubox
3 34 0.925227229 ubox
3 54 0.004607556 ubox
3 79 0.021655289 ubox
3 85 0.074832580 ubox
4 9 0.031631786 ubox
4 22 0.063952255 ubox
4 23 0.030893254 ubox
4 31 0.180808273 ubox
4 32 0.921372099 ubox
4 74 0.014898680 ubox
4 84 0.074833010 ubox
4 85 0.044256783 ubox
5 12 0.003832951 ubox
5 20 0.054144733 ubox
5 22 0.044188054 ubox
5 26 0.049283373 ubox
5 31 0.923809317 ubox
5 34 0.289194451 ubox
5 52 0.004659797 ubox
5 73 0.014896821 ubox
5 84 0.043878519 ubox
6 11 0.003765603 ubox
6 19 0.054037284 ubox
6 21 0.053815638 ubox
6 24 0.061544464 ubox
6 25 0.035089532 ubox
6 27 0.060368338 ubox
6 30 0.922993418 ubox
6 33 0.321660833 ubox
6 41 0.006163140 ubox
6 51 0.004678494 ubox
6 69 0.013990398 ubox
7 20 0.052461982 ubox
7 23 0.072654480 ubox
7 26 0.047563993 ubox
7 32 0.321874717 ubox
7 40 0.006172017 ubox
7 50 0.004636745 ubox
7 68 0.013996259 ubox
7 74 0.013141707 ubox
7 85 0.013462197 ubox
8 15 0.047412505 ubox
8 20 0.012603966 ubox
8 22 0.072557129 ubox
8 26 0.934268341 ubox
8 31 0.321496323 ubox
8 39 0.006159689 ubox
8 47 0.005498759 ubox
8 73 0.013111678 ubox
8 84 0.013471343 ubox
9 14 0.047436051 ubox
9 17 0.056601957 ubox
9 19 0.017125047 ubox
9 21 0.051795557 ubox
9 25 0.938291946 ubox
9 28 0.048881499 ubox
9 30 0.317376134 ubox
9 36 0.032080397 ubox
9 37 0.012173301 ubox
9 46 0.005583965 ubox
9 66 0.014134172 ubox
9 70 0.012316984 ubox
9 71 0.006031148 ubox
9 81 0.029842814 ubox
10 16 0.056836206 ubox
10 21 0.055276999 ubox
10 24 0.938390436 ubox
10 27 0.147733594 ubox
10 35 0.036799924 ubox
10 45 0.005495125 ubox
10 65 0.014119877 ubox
10 69 0.014450194 ubox
10 80 0.029897097 ubox
11 15 0.056524740 ubox
11 20 0.075375947 ubox
11 22 0.154764944 ubox
11 23 0.925010489 ubox
11 26 0.153188254 ubox
11 34 0.036848023 ubox
11 68 0.014465477 ubox
11 79 0.029526810 ubox
12 19 0.075736077 ubox
12 21 0.218619214 ubox
12 25 0.151885775 ubox
12 28 0.267457907 ubox
12 33 0.035657412 ubox
12 37 0.006121941 ubox
12 44 0.005876313 ubox
12 60 0.003645757 ubox
12 78 0.027105799 ubox
13 27 0.278868981 ubox
13 36 0.006098475 ubox
13 43 0.005942103 ubox
13 59 0.003947221 ubox
14 20 0.849692610 ubox
14 22 0.342868303 ubox
14 26 0.279384879 ubox
14 31 0.036673923 ubox
14 34 0.006059931 ubox
14 42 0.005957636 ubox
14 79 0.014770261 ubox
15 19 0.795682201 ubox
15 21 0.348881449 ubox
15 24 0.209653683 ubox
15 25 0.202079429 ubox
15 30 0.037156000 ubox
15 33 0.006092518 ubox
15 41 0.005959831 ubox
15 58 0.022487566 ubox
15 65 0.004753528 ubox
15 78 0.018370670 ubox
16 20 0.326424084 ubox
16 23 0.284612019 ubox
16 29 0.036660745 ubox
16 32 0.006088258 ubox
16 40 0.005955732 ubox
16 57 0.023535234 ubox
16 64 0.004491381 ubox
16 75 0.003351112 ubox
16 77 0.020135521 ubox
17 22 0.283871093 ubox
17 31 0.006026262 ubox
17 39 0.005890245 ubox
17 56 0.023591921 ubox
17 74 0.003214312 ubox
17 76 0.020141027 ubox
18 27 0.036683190 ubox
19 26 0.037494259 ubox
19 54 0.023453206 ubox
19 56 0.031390992 ubox
20 25 0.035705741 ubox
20 27 0.003733749 ubox
20 35 0.025096277 ubox
20 53 0.023473262 ubox
20 55 0.032116866 ubox
21 26 0.003786094 ubox
21 34 0.025112557 ubox
21 52 0.023461558 ubox
21 54 0.032111309 ubox
22 33 0.017785665 ubox
22 51 0.021242020 ubox
22 53 0.030749588 ubox
23 33 0.023488371 ubox
23 51 0.015861624 ubox
23 53 0.009611566 ubox
24 32 0.029533402 ubox
24 50 0.012930278 ubox
24 52 0.013283861 ubox
25 31 0.029571612 ubox
25 34 0.011584392 ubox
25 50 0.037474659 ubox
26 30 0.018301164 ubox
26 33 0.026648576 ubox
26 35 0.017608264 ubox
26 49 0.039881152 ubox
27 32 0.025391159 ubox
27 34 0.017018154 ubox
27 48 0.039830237 ubox
28 47 0.038932825 ubox
31 37 0.006798236 ubox
31 44 0.039642531 ubox
31 81 0.009444358 ubox
32 36 0.004428476 ubox
32 43 0.039856918 ubox
32 80 0.009454420 ubox
33 42 0.039927615 ubox
33 79 0.009453966 ubox
34 41 0.039986099 ubox
34 78 0.009399223 ubox
35 40 0.039957765 ubox
35 76 0.009346441 ubox
35 84 0.100720357 ubox
35 85 0.206691292 ubox
35 89 0.010047385 ubox
36 75 0.009338030 ubox
36 83 0.099285417 ubox
36 84 0.206028561 ubox
36 85 0.102574501 ubox
36 86 0.211594160 ubox
36 88 0.008404881 ubox
37 74 0.009302163 ubox
37 84 0.161501763 ubox
37 85 0.244778471 ubox
39 71 0.003715473 ubox
39 81 0.997997365 ubox
40 51 0.006052265 ubox
40 53 0.006204524 ubox
40 69 0.003413336 ubox
40 80 0.999102667 ubox
41 50 0.006058827 ubox
41 52 0.006210922 ubox
41 68 0.003417349 ubox
41 79 0.999093778 ubox
42 49 0.006045589 ubox
42 51 0.006209838 ubox
42 58 0.003178528 ubox
42 78 0.999094583 ubox
43 48 0.005594806 ubox
43 50 0.005990498 ubox
43 57 0.003223049 ubox
43 77 0.999004435 ubox
44 56 0.003235979 ubox
44 74 0.003743433 ubox
44 76 0.999111854 ubox
45 57 0.004598147 ubox
45 73 0.004671790 ubox
45 74 0.042173617 ubox
45 75 0.997977805 ubox
46 54 0.004465833 ubox
46 56 0.006790091 ubox
46 73 0.097171261 ubox
46 74 0.992268266 ubox
47 51 0.010011565 ubox
47 53 0.017656514 ubox
47 55 0.007448927 ubox
47 59 0.010280879 ubox
47 60 0.003430363 ubox
47 71 0.484749173 ubox
48 58 0.010433861 ubox
48 59 0.003178118 ubox
48 70 0.486211924 ubox
49 56 0.026613882 ubox
50 55 0.026244587 ubox
50 69 0.793042598 ubox
51 68 0.793522571 ubox
52 69 0.553307280 ubox
53 68 0.553970411 ubox
54 69 0.215686921 ubox
55 68 0.216002021 ubox
56 71 0.012042303 ubox
57 70 0.011806890 ubox
58 64 0.079817094 ubox
58 68 0.003373790 ubox
59 63 0.071219737 ubox
59 67 0.008255745 ubox
59 68 0.008996555 ubox
60 67 0.014647643 ubox
65 74 0.033589525 ubox
65 85 0.008047526 ubox
66 73 0.035149820 ubox
66 84 0.008079259 ubox
68 80 0.008737243 ubox
69 76 0.003587734 ubox
69 79 0.008741195 ubox
70 75 0.003350927 ubox
70 77 0.010105226 ubox
71 76 0.010371925 ubox
73 81 0.003552310 ubox
74 80 0.003549272 ubox
1 36 0.9500000 lbox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
39 81 0.9500000 lbox
40 80 0.9500000 lbox
41 79 0.9500000 lbox
42 78 0.9500000 lbox
43 77 0.9500000 lbox
44 76 0.9500000 lbox
45 75 0.9500000 lbox
46 74 0.9500000 lbox
50 69 0.9500000 lbox
51 68 0.9500000 lbox
showpage
end
%%EOF
