%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAAACCGUCCUCGGGCGCGGCGGGGAGAAGCCGAGCUGAGCGGAUCCUCACACGACUGUGAUCCGAUUCUUUCCAGCGGCUUCUGCAACCAAGCGGGUCUUACCCCCGGUCCUCCGCGUCUCCAGUCCUCGCACCUGGAACCCCAACGUCCCCGAGAGUCCCCGAAUCCCCGCUCCCAGGCUACCUAAGAGG\
) } def
/len { sequence length } bind def

/coor [
[176.24168396 462.82623291]
[161.84425354 456.37872314]
[148.96496582 447.26159668]
[138.09280396 435.81887817]
[129.64097595 422.48287964]
[123.93117523 407.75799561]
[121.18138885 392.20147705]
[121.49750519 376.40246582]
[124.86928558 360.95962524]
[131.17070007 346.45840454]
[140.16456604 333.44897461]
[151.51155090 322.42520142]
[164.78295898 313.80606079]
[159.15394592 299.90231323]
[153.52494812 285.99856567]
[147.89593506 272.09481812]
[142.26693726 258.19107056]
[136.63793945 244.28730774]
[124.68997192 235.39373779]
[126.68305969 219.69857788]
[121.05405426 205.79483032]
[115.42504883 191.89106750]
[101.65288544 186.33561707]
[95.74620819 172.31542969]
[101.66665649 157.90757751]
[96.03765106 144.00382996]
[90.40864563 130.10008240]
[84.77964020 116.19632721]
[73.67546844 106.11180878]
[59.29545212 101.84389496]
[44.91543579 97.57598114]
[30.53541756 93.30806732]
[16.15539932 89.04015350]
[1.77538168 84.77223969]
[-12.60463619 80.50432587]
[-19.13223648 81.67404175]
[-24.46506310 79.66499329]
[-27.37310982 75.86229706]
[-41.60894775 71.13567352]
[-55.84478378 66.40905762]
[-70.08061981 61.68243027]
[-84.35388184 57.07004929]
[-98.66364288 52.57220078]
[-114.14887238 55.81539536]
[-123.97041321 44.61777878]
[-138.28018188 40.11993027]
[-152.58993530 35.62208557]
[-166.89970398 31.12423897]
[-181.20947266 26.62639236]
[-200.65730286 31.90057564]
[-213.12135315 17.12707520]
[-227.56791687 13.09019089]
[-242.01449585 9.05330563]
[-256.46109009 5.01642084]
[-270.90765381 0.97953600]
[-286.64935303 5.57633924]
[-298.31253052 -5.95198679]
[-293.89910889 -21.74608994]
[-277.94921875 -25.55834961]
[-266.87075806 -13.46704006]
[-252.42419434 -9.43015480]
[-237.97761536 -5.39327049]
[-223.53103638 -1.35638559]
[-209.08445740 2.68049932]
[-200.65449524 -3.12118435]
[-190.20324707 -3.32260752]
[-181.18447876 2.38467860]
[-176.71162415 12.31662655]
[-162.40185547 16.81447220]
[-148.09208679 21.31231880]
[-133.78233337 25.81016541]
[-119.47256470 30.30801201]
[-105.01086426 26.74310303]
[-94.16579437 38.26243591]
[-79.85603333 42.76028442]
[-72.52315521 41.76557541]
[-65.35399628 47.44659424]
[-51.11816025 52.17321777]
[-36.88232422 56.89984131]
[-22.64648819 61.62646484]
[-8.33672237 66.12431335]
[6.04329538 70.39222717]
[20.42331314 74.66014099]
[34.80332947 78.92805481]
[49.18334961 83.19596863]
[63.56336594 87.46388245]
[77.94338226 91.73179626]
[89.12801361 81.73659515]
[86.49698639 66.96913910]
[73.39299011 58.13394165]
[70.45654297 42.60484695]
[79.42978668 29.59498978]
[94.98905945 26.82288933]
[107.90332031 35.93318176]
[110.51076508 51.52089691]
[101.26444244 64.33811188]
[103.89546967 79.10556793]
[118.89498901 78.98535156]
[121.28898621 64.17762756]
[123.68298340 49.36990356]
[126.07698822 34.56217575]
[122.63607025 17.96107674]
[137.63584900 10.05899525]
[149.38146973 22.28506470]
[140.88470459 36.95617294]
[138.49070740 51.76390076]
[136.09671021 66.57162476]
[133.70271301 81.37935638]
[140.76176453 83.91310120]
[161.93890381 91.51434326]
[169.50819397 78.56421661]
[177.07749939 65.61408997]
[176.62399292 49.22121811]
[190.73370361 40.86369705]
[204.89176941 49.13903427]
[204.53358459 65.53427124]
[190.02761841 73.18338776]
[182.45832825 86.13351440]
[174.88902283 99.08364105]
[179.97561646 104.59513855]
[190.99876404 94.42212677]
[201.17160034 105.44543457]
[190.14878845 115.61813354]
[195.23538208 121.12963104]
[208.74992371 114.62136841]
[222.26445007 108.11311340]
[235.77897644 101.60485840]
[249.29351807 95.09660339]
[251.07501221 79.77244568]
[260.87622070 67.85859680]
[275.56961060 63.15671921]
[290.46658325 67.16716766]
[300.81356812 78.61022186]
[303.30886841 93.83444977]
[297.15625000 107.98184967]
[284.31900024 116.53803253]
[268.89343262 116.77276611]
[255.80177307 108.61113739]
[242.28724670 115.11939240]
[228.77270508 121.62764740]
[215.25817871 128.13591003]
[201.74363708 134.64416504]
[131.34056091 150.06391907]
[98.68339539 110.56732178]
[104.31240082 124.47106934]
[109.94139862 138.37481689]
[115.57040405 152.27857971]
[129.84664917 158.50968933]
[135.35719299 172.69026184]
[129.32879639 186.26206970]
[134.95780945 200.16581726]
[140.58680725 214.06956482]
[152.93739319 223.95762634]
[150.54168701 238.65829468]
[156.17068481 252.56205750]
[161.79969788 266.46578979]
[167.42869568 280.36956787]
[173.05770874 294.27331543]
[178.68670654 308.17706299]
[192.66716003 305.29949951]
[206.93182373 304.91143799]
[221.04096985 307.02359009]
[234.55986023 311.56961060]
[247.07220459 318.40817261]
[258.19290161 327.32742310]
[267.57995605 338.05139160]
[274.94497681 350.24874878]
[280.06198120 363.54284668]
[282.77441406 377.52343750]
[282.99990845 391.75939941]
[280.73275757 405.81182861]
[276.04409790 419.24777222]
[269.07962036 431.65356445]
[260.05508423 442.64733887]
[249.24966431 451.89102173]
[236.99720764 459.10067749]
[242.17768860 473.17770386]
[247.35816956 487.25473022]
[261.42733765 493.94021606]
[266.48056030 508.29013062]
[260.02026367 521.66174316]
[265.20074463 535.73876953]
[270.38122559 549.81579590]
[281.52578735 562.59210205]
[272.33389282 576.83801270]
[256.10015869 571.94897461]
[256.30419922 554.99627686]
[251.12371826 540.91925049]
[245.94323730 526.84222412]
[232.35621643 520.84820557]
[226.90193176 506.64587402]
[233.28114319 492.43521118]
[228.10066223 478.35818481]
[222.92018127 464.28115845]
[207.36958313 466.85198975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 159]
[14 158]
[15 157]
[16 156]
[17 155]
[18 154]
[20 152]
[21 151]
[22 150]
[25 147]
[26 146]
[27 145]
[28 144]
[29 87]
[30 86]
[31 85]
[32 84]
[33 83]
[34 82]
[35 81]
[38 80]
[39 79]
[40 78]
[41 77]
[42 75]
[43 74]
[45 72]
[46 71]
[47 70]
[48 69]
[49 68]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[88 97]
[89 96]
[98 108]
[99 107]
[100 106]
[101 105]
[110 119]
[111 118]
[112 117]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
[176 194]
[177 193]
[178 192]
[181 189]
[182 188]
[183 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
