%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BFSP2)
} def

/sequence { (\
CGUGACCAGGCCACAGGGAUGCUGGGGCUGUAAACCAAAAGCCACUGGACUCUGUAAACCCACUGGGCACCACAGAGGCAGAAGGGGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.005909380 ubox
1 89 0.019410060 ubox
2 11 0.031898280 ubox
2 14 0.010178808 ubox
2 22 0.003174490 ubox
2 28 0.014412867 ubox
2 29 0.004095149 ubox
2 31 0.011871192 ubox
2 35 0.746111206 ubox
2 42 0.009337463 ubox
2 45 0.007380735 ubox
2 70 0.039935525 ubox
2 73 0.004079242 ubox
2 79 0.012936221 ubox
2 88 0.010792898 ubox
3 10 0.031724204 ubox
3 13 0.010552352 ubox
3 27 0.014154948 ubox
3 32 0.063917860 ubox
3 34 0.744152399 ubox
3 37 0.070702580 ubox
3 41 0.009453867 ubox
3 44 0.007735393 ubox
3 69 0.040244214 ubox
3 72 0.004060206 ubox
3 78 0.012544686 ubox
3 80 0.008839222 ubox
3 87 0.005309204 ubox
3 89 0.010909869 ubox
4 12 0.011620282 ubox
4 31 0.059455587 ubox
4 36 0.078248436 ubox
4 43 0.007553027 ubox
4 68 0.039203477 ubox
4 71 0.003977261 ubox
4 79 0.009785887 ubox
4 88 0.009613131 ubox
5 31 0.236994348 ubox
5 88 0.144881848 ubox
6 17 0.005652149 ubox
6 25 0.095382387 ubox
6 30 0.190203430 ubox
6 48 0.026978854 ubox
6 66 0.043316159 ubox
6 67 0.003762420 ubox
6 78 0.005199854 ubox
6 85 0.035205008 ubox
6 86 0.035588824 ubox
6 87 0.148774605 ubox
7 16 0.005665320 ubox
7 24 0.095603049 ubox
7 30 0.930354320 ubox
7 47 0.027100867 ubox
7 54 0.004304167 ubox
7 65 0.043630676 ubox
7 84 0.035023522 ubox
7 85 0.034661920 ubox
7 86 0.143600547 ubox
7 89 0.008357842 ubox
8 20 0.003204277 ubox
8 23 0.095393463 ubox
8 29 0.945962005 ubox
8 46 0.026940896 ubox
8 53 0.004408692 ubox
8 64 0.043321938 ubox
8 88 0.007586412 ubox
9 22 0.094435446 ubox
9 23 0.007792682 ubox
9 28 0.940545032 ubox
9 29 0.270613433 ubox
9 36 0.003433921 ubox
9 43 0.035391494 ubox
9 45 0.025911797 ubox
9 52 0.004398472 ubox
9 60 0.014882539 ubox
9 61 0.013270948 ubox
9 63 0.039072865 ubox
10 22 0.013295452 ubox
10 28 0.302691820 ubox
10 42 0.035631795 ubox
10 51 0.003229661 ubox
10 59 0.016939971 ubox
10 60 0.014902291 ubox
10 68 0.003401112 ubox
10 79 0.036330361 ubox
10 88 0.021613177 ubox
11 17 0.011405150 ubox
11 18 0.088222038 ubox
11 21 0.015707619 ubox
11 25 0.049662434 ubox
11 26 0.934630038 ubox
11 27 0.320842676 ubox
11 41 0.035576432 ubox
11 48 0.004167213 ubox
11 67 0.003405146 ubox
11 78 0.036327666 ubox
11 85 0.028641305 ubox
11 86 0.007648358 ubox
11 87 0.022292986 ubox
12 16 0.011556340 ubox
12 17 0.088369896 ubox
12 21 0.011159330 ubox
12 24 0.050551990 ubox
12 25 0.934142873 ubox
12 26 0.315472520 ubox
12 47 0.004172255 ubox
12 66 0.003389418 ubox
12 77 0.035585407 ubox
12 84 0.028637920 ubox
12 85 0.007812846 ubox
12 86 0.022225898 ubox
13 20 0.011027227 ubox
13 23 0.050620144 ubox
13 46 0.003754284 ubox
13 55 0.081466010 ubox
14 21 0.055240620 ubox
14 24 0.986318879 ubox
14 47 0.007865934 ubox
14 54 0.085195855 ubox
15 20 0.053394469 ubox
15 23 0.987857833 ubox
15 46 0.007898165 ubox
15 53 0.085333441 ubox
16 22 0.986307125 ubox
16 23 0.043814068 ubox
16 36 0.035326478 ubox
16 45 0.007907305 ubox
16 52 0.085357491 ubox
17 22 0.066515640 ubox
17 23 0.004657274 ubox
17 35 0.035384184 ubox
17 36 0.003976516 ubox
17 43 0.007832905 ubox
17 51 0.085237270 ubox
17 53 0.007247949 ubox
18 22 0.005492588 ubox
18 35 0.003975960 ubox
18 42 0.007804991 ubox
18 50 0.084913531 ubox
18 52 0.007669674 ubox
19 51 0.007682550 ubox
20 32 0.035201558 ubox
20 80 0.003949028 ubox
21 31 0.035459343 ubox
21 42 0.003810641 ubox
21 79 0.004031675 ubox
22 30 0.035470789 ubox
22 41 0.003953160 ubox
22 48 0.087084819 ubox
22 78 0.003700159 ubox
23 37 0.007140357 ubox
23 40 0.003738773 ubox
23 47 0.086882669 ubox
24 36 0.007467898 ubox
24 46 0.087003009 ubox
25 35 0.007435682 ubox
25 36 0.010178252 ubox
25 43 0.003183536 ubox
25 45 0.087357544 ubox
26 35 0.010328600 ubox
26 36 0.007012249 ubox
26 43 0.145451490 ubox
27 35 0.007013716 ubox
27 42 0.146123620 ubox
28 41 0.146162149 ubox
28 81 0.005350876 ubox
29 37 0.020482403 ubox
29 40 0.145121510 ubox
29 80 0.006673937 ubox
30 36 0.030035550 ubox
30 42 0.013514416 ubox
30 43 0.004571362 ubox
30 79 0.008008045 ubox
31 41 0.013902511 ubox
31 78 0.007864036 ubox
31 89 0.022794086 ubox
32 88 0.026083393 ubox
34 88 0.397387974 ubox
35 48 0.060046701 ubox
35 85 0.042713314 ubox
35 86 0.046858869 ubox
35 87 0.409963435 ubox
36 47 0.060598204 ubox
36 84 0.042837514 ubox
36 85 0.046953315 ubox
36 86 0.409502544 ubox
36 89 0.170705790 ubox
37 46 0.059586728 ubox
37 88 0.169112679 ubox
40 46 0.004934373 ubox
40 51 0.003747187 ubox
41 45 0.005477633 ubox
41 50 0.004067477 ubox
41 79 0.056349683 ubox
41 88 0.553156392 ubox
42 48 0.019631886 ubox
42 78 0.056408311 ubox
42 85 0.579158452 ubox
42 86 0.488784241 ubox
42 87 0.578370558 ubox
43 47 0.019610575 ubox
43 77 0.051799622 ubox
43 84 0.579293462 ubox
43 85 0.493448217 ubox
43 86 0.571101414 ubox
43 89 0.042097175 ubox
44 88 0.042984667 ubox
45 75 0.032345410 ubox
45 81 0.852575976 ubox
45 84 0.415778115 ubox
45 85 0.218714030 ubox
45 86 0.007800411 ubox
45 87 0.042009425 ubox
46 62 0.003363560 ubox
46 72 0.010951426 ubox
46 74 0.031619210 ubox
46 80 0.859889067 ubox
46 83 0.413213778 ubox
46 84 0.214341096 ubox
46 85 0.008534184 ubox
46 86 0.040415935 ubox
47 61 0.003525144 ubox
47 71 0.013351834 ubox
47 73 0.030862259 ubox
47 79 0.859903139 ubox
48 60 0.003520077 ubox
48 70 0.013886026 ubox
49 88 0.016278375 ubox
50 67 0.025298495 ubox
50 77 0.992882283 ubox
50 78 0.023407164 ubox
50 81 0.003998170 ubox
50 84 0.005318497 ubox
50 86 0.004002949 ubox
50 87 0.016701213 ubox
51 66 0.025332769 ubox
51 67 0.004698232 ubox
51 76 0.995072893 ubox
51 77 0.010198715 ubox
51 82 0.014323743 ubox
51 83 0.003781475 ubox
51 85 0.004057037 ubox
51 86 0.016656295 ubox
52 65 0.025111859 ubox
52 66 0.005235116 ubox
52 75 0.995384053 ubox
52 81 0.015172835 ubox
52 84 0.004103204 ubox
52 85 0.016654786 ubox
53 62 0.003795447 ubox
53 65 0.004945184 ubox
53 69 0.013135611 ubox
53 72 0.008452847 ubox
53 74 0.995132162 ubox
53 80 0.015175131 ubox
53 83 0.004101865 ubox
53 84 0.016522679 ubox
54 61 0.004107255 ubox
54 63 0.024308975 ubox
54 68 0.013621073 ubox
54 70 0.016812514 ubox
54 71 0.009236136 ubox
54 73 0.995075918 ubox
54 79 0.015170519 ubox
55 62 0.023455868 ubox
55 67 0.009312807 ubox
55 69 0.020085473 ubox
55 72 0.968836381 ubox
55 78 0.008339005 ubox
58 88 0.062855362 ubox
59 66 0.126441084 ubox
59 67 0.956257036 ubox
59 78 0.010556699 ubox
59 85 0.004497963 ubox
59 86 0.009263445 ubox
59 87 0.064813165 ubox
60 65 0.125960793 ubox
60 66 0.957596063 ubox
60 67 0.240388720 ubox
60 77 0.010613870 ubox
60 78 0.019757481 ubox
60 84 0.004494995 ubox
60 85 0.009476708 ubox
60 86 0.064820794 ubox
61 65 0.950650427 ubox
61 66 0.240484085 ubox
61 77 0.020246345 ubox
61 84 0.009525099 ubox
61 85 0.064759243 ubox
63 75 0.029617028 ubox
63 81 0.028781628 ubox
63 84 0.054069620 ubox
64 72 0.014540914 ubox
64 74 0.029729475 ubox
64 80 0.028892645 ubox
64 83 0.053590688 ubox
65 71 0.020446710 ubox
65 73 0.029725439 ubox
65 79 0.028749170 ubox
66 70 0.020133870 ubox
67 79 0.048479757 ubox
67 88 0.004212703 ubox
68 78 0.047728107 ubox
68 87 0.004324128 ubox
68 89 0.015243736 ubox
69 88 0.015743062 ubox
70 78 0.040634373 ubox
70 85 0.005261955 ubox
70 86 0.003948195 ubox
70 87 0.015809696 ubox
71 77 0.041912209 ubox
71 84 0.005543415 ubox
71 85 0.004271558 ubox
71 86 0.015829249 ubox
71 89 0.017899029 ubox
72 88 0.018182686 ubox
73 87 0.018189658 ubox
78 88 0.014119537 ubox
79 87 0.014560745 ubox
79 89 0.007517574 ubox
80 88 0.007561709 ubox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
42 86 0.9500000 lbox
43 85 0.9500000 lbox
45 81 0.9500000 lbox
46 80 0.9500000 lbox
47 79 0.9500000 lbox
50 77 0.9500000 lbox
51 76 0.9500000 lbox
52 75 0.9500000 lbox
53 74 0.9500000 lbox
54 73 0.9500000 lbox
55 72 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
showpage
end
%%EOF
