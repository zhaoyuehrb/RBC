%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUCUGAGUCGUCUUGGUCCCAGGAGCCAGUAGUGAAGGCAACAGUCUGCCCACCUGUGGACACCAGAUCCUGGGAGCUCCUGGUUAGCAAGUGAGAUCUCUGGGAUGUCAGUGAGGCUGGUUGAAGACCAGAGGUAAACUGCAGAGGUCACCACCCCCACC\
) } def
/len { sequence length } bind def

/coor [
[439.91174316 327.38110352]
[438.51342773 316.53683472]
[426.13134766 308.07015991]
[413.74926758 299.60351562]
[401.28713989 291.25512695]
[388.74612427 283.02575684]
[376.20507812 274.79638672]
[361.31933594 274.28280640]
[354.02633667 260.24276733]
[341.48529053 252.01339722]
[326.99920654 255.28280640]
[314.16360474 247.11569214]
[310.83255005 231.89920044]
[298.29153442 223.66981506]
[285.75051880 215.44044495]
[273.20947266 207.21107483]
[260.66845703 198.98170471]
[248.12741089 190.75233459]
[235.35650635 182.88442993]
[222.36611938 175.38442993]
[203.11166382 176.84509277]
[193.21040344 159.32000732]
[179.94390869 152.31999207]
[166.67741394 145.31999207]
[153.41091919 138.31997681]
[140.14442444 131.31996155]
[126.87793732 124.31995392]
[113.61144257 117.31994629]
[100.34494781 110.31993866]
[86.03562164 105.82070160]
[71.15034485 103.96903992]
[56.26507187 102.11737823]
[49.96755981 104.35987854]
[44.34098053 103.22327423]
[40.85239792 99.90137482]
[26.04841232 97.48435974]
[11.24442387 95.06735229]
[4.86610556 97.06847382]
[-0.71312594 95.71849060]
[-4.07271004 92.26617432]
[-18.77394867 89.28732300]
[-33.47518539 86.30846405]
[-48.17642593 83.32960510]
[-61.20831680 92.27082062]
[-76.73014069 89.29618073]
[-85.53307343 76.17048645]
[-82.39449310 60.68097687]
[-69.17646027 52.01730728]
[-53.72100449 55.31947708]
[-45.19756699 68.62836456]
[-30.49633026 71.60722351]
[-15.79509163 74.58608246]
[-1.09385288 77.56494141]
[13.66143513 80.26335907]
[28.46542358 82.68037415]
[43.26940918 85.09738159]
[58.11673355 87.23210907]
[73.00200653 89.08376312]
[87.88727570 90.93542480]
[92.29566956 84.86779785]
[80.12034607 76.10643768]
[68.02550507 67.23429871]
[76.84252930 55.09922791]
[89.01750946 63.86053467]
[101.11244965 72.73254395]
[105.52083588 66.66491699]
[99.16000366 53.08037567]
[92.79916382 39.49583435]
[86.43833160 25.91129303]
[74.24587250 14.13078785]
[82.19078064 -0.84635293]
[98.78197479 2.64198184]
[100.02287292 19.55045700]
[106.38370514 33.13499832]
[112.74454498 46.71953964]
[119.10537720 60.30408096]
[120.50881958 75.42624664]
[116.14741516 88.26578522]
[107.34495544 97.05344391]
[120.61145020 104.05345154]
[133.87794495 111.05345917]
[147.14443970 118.05347443]
[160.41093445 125.05348206]
[173.67742920 132.05349731]
[186.94392395 139.05349731]
[200.21041870 146.05351257]
[210.45401001 142.22955322]
[220.89094543 144.65003967]
[228.10289001 152.27285767]
[229.86611938 162.39405823]
[242.85650635 169.89405823]
[248.16725159 169.88748169]
[252.49775696 171.75750732]
[255.29176331 174.80511475]
[256.35678101 178.21130371]
[268.89782715 186.44067383]
[281.43884277 194.67004395]
[293.97988892 202.89941406]
[306.52090454 211.12879944]
[319.06195068 219.35816956]
[334.34701538 216.35748291]
[346.94818115 224.88189697]
[349.71466064 239.47236633]
[362.25570679 247.70173645]
[378.03845215 248.80393982]
[384.43444824 262.25537109]
[396.97549438 270.48474121]
[409.51651001 278.71411133]
[418.45233154 280.82110596]
[422.21591187 287.22143555]
[434.59799194 295.68807983]
[446.98007202 304.15475464]
[467.10043335 304.73336792]
[474.79400635 322.44427490]
[487.48944092 330.43338013]
[500.18487549 338.42251587]
[515.98577881 339.22402954]
[522.63671875 352.55123901]
[535.33215332 360.54034424]
[551.13299561 361.34185791]
[557.78393555 374.66906738]
[570.47937012 382.65817261]
[583.17480469 390.64730835]
[595.87023926 398.63641357]
[600.31585693 398.63894653]
[604.13006592 399.94903564]
[606.97436523 402.19967651]
[608.66729736 404.95071411]
[609.19512939 407.74774170]
[621.24591064 416.67962646]
[633.29663086 425.61154175]
[645.34741211 434.54345703]
[658.17791748 429.43685913]
[671.74694824 431.33355713]
[682.51367188 439.63031006]
[687.72204590 452.06796265]
[686.10626221 465.34576416]
[697.98480225 474.50549316]
[709.86334229 483.66519165]
[726.09857178 488.54922485]
[725.89978027 505.50201416]
[709.55450439 510.00396729]
[700.70361328 495.54373169]
[688.82507324 486.38403320]
[676.94653320 477.22430420]
[661.37475586 482.35406494]
[645.65112305 477.15493774]
[636.01562500 463.48220825]
[636.41552734 446.59420776]
[624.36474609 437.66232300]
[612.31396484 428.73040771]
[600.26324463 419.79849243]
[587.88116455 411.33184814]
[575.18572998 403.34274292]
[562.49029541 395.35360718]
[549.79486084 387.36450195]
[534.90203857 387.13442993]
[527.34301758 373.23577881]
[514.64758301 365.24667358]
[499.75476074 365.01657104]
[492.19573975 351.11795044]
[479.50030518 343.12881470]
[466.80487061 335.13970947]
[457.03051758 338.30349731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 112]
[3 111]
[4 110]
[5 108]
[6 107]
[7 106]
[9 104]
[10 103]
[13 100]
[14 99]
[15 98]
[16 97]
[17 96]
[18 95]
[19 91]
[20 90]
[22 86]
[23 85]
[24 84]
[25 83]
[26 82]
[27 81]
[28 80]
[29 79]
[30 59]
[31 58]
[32 57]
[35 56]
[36 55]
[37 54]
[40 53]
[41 52]
[42 51]
[43 50]
[66 76]
[67 75]
[68 74]
[69 73]
[114 163]
[115 162]
[116 161]
[118 159]
[119 158]
[121 156]
[122 155]
[123 154]
[124 153]
[129 152]
[130 151]
[131 150]
[132 149]
[137 145]
[138 144]
[139 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
