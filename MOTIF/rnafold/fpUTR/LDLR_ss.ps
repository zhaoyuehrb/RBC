%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUGCAGUGAGGUGAAGACAUUUGAAAAUCACCCCACUGCAAACUCCUCCCCCUGCUAGAAACCUCACAUUGAAAUGCUGUAAAUGACGUGGGCCCCGAGUGCAAUCGCGGGAAGCCAGGGUUUCCAGCUAGGACACAGCAGGUCGUGAUCCGGGUCGGGACACUGCCUGGCAGAGGCUGCGAGC\
) } def
/len { sequence length } bind def

/coor [
[89.24956512 205.87220764]
[88.99891663 190.87429810]
[88.74826813 175.87638855]
[74.89007568 170.13613892]
[64.10771942 180.56402588]
[53.32536697 190.99191284]
[42.54301071 201.41979980]
[31.76065636 211.84768677]
[20.97830009 222.27557373]
[10.19594574 232.70346069]
[-0.58640993 243.13134766]
[-5.12738800 258.28686523]
[-19.65496445 261.57302856]
[-30.43732071 272.00091553]
[-41.21967697 282.42880249]
[-52.00202942 292.85668945]
[-62.78438568 303.28457642]
[-57.52553940 317.57669067]
[-58.54094696 332.77169800]
[-65.65467834 346.23703003]
[-77.63424683 355.63967896]
[-92.40411377 359.35058594]
[-107.40531158 356.72686768]
[-120.03878784 348.22302246]
[-128.11572266 335.31243896]
[-130.23674011 320.23196411]
[-126.03434753 305.59432983]
[-116.23664856 293.93566895]
[-102.54114532 287.27584839]
[-87.32067871 286.76873779]
[-73.21227264 292.50222778]
[-62.42991638 282.07434082]
[-51.64756393 271.64645386]
[-40.86520767 261.21856689]
[-30.08285141 250.79066467]
[-26.31309891 236.38101196]
[-11.01429653 232.34899902]
[-0.23194107 221.92111206]
[10.55041409 211.49322510]
[21.33276939 201.06533813]
[32.11512375 190.63745117]
[42.89748001 180.20956421]
[53.67983627 169.78167725]
[64.46218872 159.35379028]
[52.12851715 147.69726562]
[43.27214813 133.68518066]
[38.28040314 118.29201508]
[37.28015900 102.53533936]
[40.14096451 87.40889740]
[46.49470139 73.82005310]
[55.76985550 62.53532791]
[67.23764038 54.13749313]
[80.06640625 48.99645996]
[93.38043213 47.25540924]
[93.63107300 32.25750351]
[93.88172150 17.25959778]
[94.00704956 2.26012063]
[94.00704956 -12.73987961]
[94.00704956 -27.73987961]
[86.26975250 -41.54005051]
[94.00704956 -54.26732254]
[94.00704956 -69.26732635]
[94.00704956 -84.26732635]
[94.00704956 -99.26732635]
[94.00704956 -114.26732635]
[94.00704956 -129.26731873]
[94.00704956 -144.26731873]
[82.17201233 -140.87759399]
[67.98902893 -144.54014587]
[55.06853485 -156.11053467]
[47.85980606 -169.26478577]
[40.65108109 -182.41903687]
[33.44235611 -195.57328796]
[18.14060593 -195.23408508]
[4.43911314 -202.05520630]
[-4.51361990 -214.46920776]
[-6.66032028 -229.62341309]
[-1.50769305 -244.03553772]
[9.76022625 -254.39375305]
[24.55415344 -258.31781006]
[39.47454834 -254.90602112]
[51.09281921 -244.94236755]
[56.73917007 -230.71643066]
[55.11610794 -215.49722290]
[46.59660339 -202.78201294]
[53.80532837 -189.62776184]
[61.01405716 -176.47351074]
[68.22278595 -163.31925964]
[75.71336365 -163.69509888]
[82.55270386 -177.04513550]
[90.69451141 -164.44676208]
[98.18508911 -164.82258606]
[104.04093170 -178.63233948]
[109.89677429 -192.44207764]
[106.51461029 -212.30157471]
[122.40639496 -223.29670715]
[127.79751587 -237.29441833]
[133.18862915 -251.29212952]
[138.46260071 -265.33438110]
[143.61906433 -279.42022705]
[148.77552795 -293.50607300]
[141.89645386 -307.73468018]
[147.17218018 -322.63241577]
[161.47274780 -329.36068726]
[176.31385803 -323.92773438]
[182.89054871 -309.55682373]
[177.30099487 -294.77398682]
[162.86137390 -288.34960938]
[157.70491028 -274.26376343]
[152.54844666 -260.17791748]
[153.20275879 -252.80122375]
[147.18634033 -245.90100098]
[141.79522705 -231.90328979]
[136.40411377 -217.90559387]
[141.38198853 -208.95399475]
[140.58352661 -198.52212524]
[134.03190613 -190.08494568]
[123.70652008 -186.58624268]
[117.85067749 -172.77650452]
[111.99484253 -158.96675110]
[109.00704956 -144.26731873]
[109.00704956 -129.26731873]
[109.00704956 -114.26732635]
[109.00704956 -99.26732635]
[109.00704956 -84.26732635]
[109.00704956 -69.26732635]
[109.00704956 -54.26732254]
[116.74435425 -41.54005051]
[109.00704956 -27.73987961]
[109.00704956 -12.73987961]
[109.00704956 2.26012063]
[112.15734100 8.96232033]
[108.87963104 17.51024437]
[108.62898254 32.50814819]
[108.37833405 47.50605392]
[124.77046967 50.39350510]
[140.10758972 58.46920013]
[152.73449707 71.32907867]
[161.15476990 88.03990173]
[164.19935608 107.20200348]
[161.17063904 127.06532288]
[151.94515991 145.68925476]
[164.85118103 153.33351135]
[177.75720215 160.97775269]
[190.66323853 168.62200928]
[203.56925964 176.26625061]
[219.38600159 176.64186096]
[226.39350891 189.78507996]
[239.29953003 197.42933655]
[252.20556641 205.07357788]
[261.20364380 206.76019287]
[265.26184082 212.95494080]
[278.03833008 220.81376648]
[290.81481934 228.67260742]
[306.12854004 224.76551819]
[319.67691040 232.90295410]
[323.42187500 248.25712585]
[315.14163208 261.71868896]
[299.74871826 265.30111694]
[286.37548828 256.87902832]
[282.95599365 241.44909668]
[270.17950439 233.59025574]
[257.40301514 225.73141479]
[244.56130981 217.97959900]
[231.65528870 210.33535767]
[218.74926758 202.69110107]
[203.85563660 202.86225891]
[195.92500305 189.17228699]
[183.01898193 181.52803040]
[170.11296082 173.88377380]
[157.20693970 166.23953247]
[144.30091858 158.59527588]
[132.68589783 168.08694458]
[137.60627747 182.25697327]
[142.52665710 196.42701721]
[147.44702148 210.59704590]
[158.35444641 223.57643127]
[148.90176392 237.65065002]
[132.76081848 232.46351624]
[133.27699280 215.51742554]
[128.35661316 201.34738159]
[123.43624115 187.17735291]
[118.51586914 173.00730896]
[103.74617767 175.62574768]
[103.99682617 190.62365723]
[104.24746704 205.62155151]
[106.75979614 224.83973694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 186]
[2 185]
[3 184]
[4 44]
[5 43]
[6 42]
[7 41]
[8 40]
[9 39]
[10 38]
[11 37]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[54 135]
[55 134]
[56 133]
[57 131]
[58 130]
[59 129]
[61 127]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[70 88]
[71 87]
[72 86]
[73 85]
[92 120]
[93 119]
[94 118]
[96 114]
[97 113]
[98 112]
[99 110]
[100 109]
[101 108]
[142 172]
[143 171]
[144 170]
[145 169]
[146 168]
[148 166]
[149 165]
[150 164]
[152 163]
[153 162]
[154 161]
[173 183]
[174 182]
[175 181]
[176 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
