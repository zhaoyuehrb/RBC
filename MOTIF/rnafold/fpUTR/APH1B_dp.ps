%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (APH1B)
} def

/sequence { (\
ACCCACCGAACCCCGCCCGCGCCGGGAGCAUCUCGCGUCCCCAACGGGCCCCCGGGUCGGUUUCCGCGGUGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.024205730 ubox
2 69 0.025525875 ubox
2 72 0.088592025 ubox
3 68 0.025395279 ubox
3 69 0.015633367 ubox
3 71 0.063219290 ubox
3 72 0.982791141 ubox
4 68 0.015972711 ubox
4 71 0.993206672 ubox
5 61 0.090677919 ubox
5 70 0.994982829 ubox
6 60 0.096774358 ubox
6 69 0.995168009 ubox
7 59 0.096998316 ubox
7 66 0.015652181 ubox
7 68 0.994949971 ubox
8 14 0.003723139 ubox
8 58 0.099477742 ubox
8 62 0.007033463 ubox
8 63 0.190005451 ubox
8 64 0.223487565 ubox
8 65 0.030764596 ubox
8 67 0.947051065 ubox
9 57 0.073059385 ubox
9 61 0.016409873 ubox
9 62 0.503511910 ubox
9 63 0.263358389 ubox
10 57 0.260869870 ubox
10 61 0.515130702 ubox
10 62 0.247103466 ubox
11 55 0.020565846 ubox
11 56 0.283774858 ubox
11 60 0.513997457 ubox
11 72 0.010613642 ubox
12 54 0.020623510 ubox
12 55 0.283422319 ubox
12 56 0.124436086 ubox
12 59 0.504790484 ubox
12 60 0.291061999 ubox
12 71 0.010660055 ubox
13 54 0.282375996 ubox
13 55 0.139526434 ubox
13 56 0.055124024 ubox
13 59 0.296209958 ubox
13 60 0.736270892 ubox
13 69 0.010908050 ubox
13 72 0.003694264 ubox
14 54 0.140527214 ubox
14 55 0.055259915 ubox
14 59 0.738802166 ubox
14 66 0.008165255 ubox
14 68 0.010929256 ubox
14 71 0.003729869 ubox
15 22 0.004947828 ubox
15 49 0.327153505 ubox
15 53 0.058614872 ubox
15 57 0.588784789 ubox
15 58 0.725065473 ubox
15 61 0.057500446 ubox
15 65 0.007936382 ubox
15 67 0.011004894 ubox
15 70 0.003690963 ubox
15 73 0.006372541 ubox
16 21 0.005150160 ubox
16 48 0.332619091 ubox
16 56 0.939843174 ubox
16 60 0.055848708 ubox
16 66 0.011013600 ubox
16 72 0.006206301 ubox
17 47 0.332627703 ubox
17 48 0.003263988 ubox
17 55 0.939919972 ubox
17 56 0.007795170 ubox
17 59 0.052852260 ubox
17 60 0.048011784 ubox
17 71 0.006008942 ubox
18 46 0.332604889 ubox
18 47 0.003381281 ubox
18 54 0.939890769 ubox
18 55 0.007371142 ubox
18 59 0.051290267 ubox
19 38 0.037852072 ubox
19 45 0.330131763 ubox
19 49 0.049162090 ubox
19 53 0.935730122 ubox
19 57 0.049315653 ubox
19 58 0.054132618 ubox
19 67 0.003461985 ubox
20 37 0.057810318 ubox
20 46 0.017614996 ubox
20 48 0.053507099 ubox
20 56 0.053103508 ubox
20 66 0.003403439 ubox
20 68 0.005877951 ubox
21 36 0.061807375 ubox
21 38 0.013339306 ubox
21 45 0.018461493 ubox
21 49 0.933767582 ubox
21 57 0.006628535 ubox
21 67 0.006043190 ubox
22 35 0.044246387 ubox
22 37 0.013697743 ubox
22 47 0.101002018 ubox
22 48 0.931905297 ubox
22 55 0.074245150 ubox
22 56 0.006267945 ubox
22 66 0.004285744 ubox
23 35 0.046694482 ubox
23 37 0.015073043 ubox
23 46 0.120299097 ubox
23 47 0.929194247 ubox
23 54 0.074346188 ubox
23 55 0.005806546 ubox
23 66 0.006734511 ubox
24 33 0.008022997 ubox
24 34 0.065082952 ubox
24 36 0.018942571 ubox
24 40 0.123117453 ubox
24 41 0.967560099 ubox
24 42 0.180882090 ubox
24 45 0.059517483 ubox
24 51 0.007649090 ubox
24 52 0.029584181 ubox
24 53 0.074366952 ubox
24 65 0.008170486 ubox
25 32 0.008424364 ubox
25 33 0.065136516 ubox
25 39 0.123566160 ubox
25 40 0.971555708 ubox
25 41 0.171532034 ubox
25 42 0.004984467 ubox
25 50 0.007674661 ubox
25 51 0.029785220 ubox
25 52 0.074307708 ubox
25 64 0.008201169 ubox
26 31 0.004932219 ubox
26 32 0.065162237 ubox
26 34 0.021203264 ubox
26 38 0.120588676 ubox
26 39 0.973261817 ubox
26 40 0.160804634 ubox
26 41 0.004821427 ubox
26 49 0.007350202 ubox
26 50 0.029850106 ubox
26 51 0.073945890 ubox
26 63 0.008195515 ubox
27 31 0.056695884 ubox
27 33 0.021609581 ubox
27 38 0.949526231 ubox
27 62 0.008210584 ubox
28 32 0.021297092 ubox
28 36 0.983796358 ubox
28 38 0.105277758 ubox
28 49 0.042612188 ubox
28 61 0.008220662 ubox
29 35 0.984494096 ubox
29 37 0.118116744 ubox
29 48 0.040376551 ubox
29 60 0.008212428 ubox
30 38 0.004633191 ubox
31 37 0.005220989 ubox
31 47 0.014700677 ubox
32 46 0.014909596 ubox
32 47 0.010418499 ubox
32 48 0.012852810 ubox
32 56 0.008214237 ubox
33 46 0.004364381 ubox
33 47 0.023378280 ubox
33 48 0.003460863 ubox
33 55 0.008248339 ubox
34 46 0.025288192 ubox
34 47 0.022027849 ubox
34 54 0.008328274 ubox
35 45 0.025001795 ubox
35 53 0.008310580 ubox
36 46 0.029034455 ubox
37 45 0.030136500 ubox
37 49 0.068164141 ubox
38 44 0.029116281 ubox
38 48 0.062677671 ubox
39 46 0.003364555 ubox
39 47 0.063911838 ubox
39 48 0.063382490 ubox
40 46 0.063793875 ubox
40 47 0.064859970 ubox
40 48 0.011050702 ubox
41 46 0.066365636 ubox
41 47 0.011370486 ubox
42 46 0.017216443 ubox
43 62 0.003231831 ubox
44 61 0.003644390 ubox
45 54 0.007408308 ubox
45 60 0.003691117 ubox
46 52 0.007131271 ubox
46 53 0.012485624 ubox
47 51 0.007047828 ubox
47 52 0.012576235 ubox
47 53 0.004895624 ubox
47 58 0.004034937 ubox
48 52 0.004925037 ubox
48 57 0.004138080 ubox
49 56 0.004707705 ubox
50 54 0.003430573 ubox
50 55 0.005440672 ubox
50 56 0.013851973 ubox
51 55 0.013826938 ubox
51 60 0.004437164 ubox
52 59 0.004419176 ubox
52 60 0.013317423 ubox
53 59 0.013413427 ubox
53 66 0.079770897 ubox
54 58 0.012621168 ubox
54 65 0.082685324 ubox
55 64 0.082678371 ubox
55 65 0.006943616 ubox
56 63 0.076465658 ubox
56 64 0.007045669 ubox
56 67 0.006204461 ubox
58 66 0.268792924 ubox
59 65 0.282770708 ubox
59 67 0.005630751 ubox
60 64 0.278234703 ubox
60 67 0.012516970 ubox
61 66 0.012389780 ubox
64 71 0.003573261 ubox
64 72 0.026245796 ubox
65 71 0.026548862 ubox
66 70 0.016385123 ubox
66 73 0.082042279 ubox
67 72 0.082179316 ubox
68 74 0.006742594 ubox
69 73 0.006682555 ubox
3 72 0.9500000 lbox
4 71 0.9500000 lbox
5 70 0.9500000 lbox
6 69 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 56 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 41 0.9500000 lbox
25 40 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 36 0.9500000 lbox
29 35 0.9500000 lbox
showpage
end
%%EOF
