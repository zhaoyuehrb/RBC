%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAGUCGGGGUCGUCCGCUCCCGGCCGUUGAGCCACCGCCGCCACCCGGUAGUGUGUCCCGCUGCCCCAAUCCGCCUCAUCAACAAGCGCCUGGCACACUCAGCCAGGCCCGCGGGCAUCUGCUGCGUGUCCCGCUCCGGGCUCAGUGCCCUCGCCGCCGCCGGCACUGCCUCG\
) } def
/len { sequence length } bind def

/coor [
[53.09756088 907.62762451]
[52.31654739 922.91320801]
[44.51145554 936.07904053]
[31.47584343 944.09973145]
[16.20519638 945.13214111]
[2.20859933 938.93908691]
[-7.29763412 926.94366455]
[-10.12903976 911.90234375]
[-5.63498211 897.27148438]
[5.15183783 886.41314697]
[19.75268745 881.82257080]
[22.35741043 867.05041504]
[24.96213341 852.27832031]
[27.56685638 837.50622559]
[30.17157745 822.73406982]
[32.77630234 807.96197510]
[27.36661530 794.08447266]
[37.38274384 781.83752441]
[39.98746490 767.06542969]
[42.46318054 752.27111816]
[44.80969620 737.45581055]
[47.15621567 722.64050293]
[35.49504852 713.37316895]
[30.00171089 699.42047119]
[32.24469376 684.49279785]
[41.72063828 672.61407471]
[55.96294403 667.03698730]
[58.30945969 652.22167969]
[60.65597916 637.40631104]
[63.00249481 622.59100342]
[64.70054626 607.68743896]
[65.74688721 592.72399902]
[66.79323578 577.76049805]
[67.83958435 562.79705811]
[68.88593292 547.83361816]
[69.93228149 532.87011719]
[70.97862244 517.90667725]
[72.02497101 502.94320679]
[73.07131958 487.97973633]
[60.17094421 477.84875488]
[55.79757690 461.86740112]
[61.86223984 446.26995850]
[76.16359711 437.26358032]
[76.94863892 422.28411865]
[63.87342072 412.37982178]
[59.22180176 396.47720337]
[65.01332855 380.77633667]
[79.15532684 371.52169800]
[79.67882538 356.53085327]
[80.20231628 341.53997803]
[72.91390228 328.55044556]
[81.12811279 315.02868652]
[81.65160370 300.03784180]
[82.17509460 285.04696655]
[82.69858551 270.05612183]
[83.22207642 255.06524658]
[83.74557495 240.07438660]
[80.82852936 233.26077271]
[84.41128540 224.82711792]
[85.19631958 209.84767151]
[85.98136139 194.86822510]
[83.18367767 188.00474548]
[86.91307068 179.63490295]
[87.95941925 164.67144775]
[89.00576782 149.70797729]
[90.05210876 134.74452209]
[91.09845734 119.78105927]
[72.36830902 107.29076385]
[71.38645935 79.05018616]
[63.66088486 66.19267273]
[48.19170380 64.97447968]
[36.41480255 54.87080002]
[32.85864639 39.76671600]
[38.89064789 25.47005272]
[52.19137573 17.47816849]
[67.64643097 18.86410522]
[79.31303406 29.09494400]
[82.70513153 44.23671722]
[76.51839447 58.46710587]
[84.24396515 71.32461548]
[91.74139404 71.12828827]
[91.12578583 56.14092636]
[90.51017761 41.15356445]
[89.89456940 26.16620064]
[89.27896118 11.17883873]
[85.00821686 -3.20033765]
[97.06389618 -12.12561131]
[109.57015991 -3.84349227]
[106.05780029 10.73946953]
[106.22741699 25.73851013]
[106.39702606 40.73755264]
[106.56664276 55.73659134]
[106.73625946 70.73563385]
[114.23368835 70.53930664]
[121.27575684 57.29509354]
[128.31784058 44.05087662]
[135.35990906 30.80666542]
[142.40197754 17.56245041]
[149.44406128 4.31823683]
[156.48612976 -8.92597675]
[150.46081543 -23.35614395]
[155.17002869 -38.26779938]
[168.39019775 -46.62011337]
[183.87916565 -44.46938324]
[194.32353210 -32.83111191]
[194.79176331 -17.20054054]
[185.06280518 -4.95794487]
[169.73034668 -1.88390362]
[162.68826294 11.36031055]
[155.64619446 24.60452461]
[148.60412598 37.84873962]
[141.56204224 51.09295273]
[134.51997375 64.33716583]
[127.47789764 77.58138275]
[130.86131287 99.16519928]
[121.23263550 115.48952484]
[106.06192017 120.82740784]
[105.01557159 135.79086304]
[103.96922302 150.75433350]
[102.92288208 165.71778870]
[101.87653351 180.68124390]
[100.96080017 195.65327454]
[100.17576599 210.63272095]
[99.39072418 225.61215210]
[98.73643494 240.59788513]
[98.21294403 255.58874512]
[97.68944550 270.57958984]
[97.16595459 285.57046509]
[96.64246368 300.56134033]
[96.11897278 315.55218506]
[103.36994171 329.61398315]
[95.19317627 342.06347656]
[94.66968536 357.05435181]
[94.14619446 372.04519653]
[105.62083435 379.71072388]
[111.75422668 391.95129395]
[111.03689575 405.51522827]
[103.76357269 416.85815430]
[91.92808533 423.06918335]
[91.14304352 438.04861450]
[102.48215485 445.91323853]
[108.40098572 458.25897217]
[107.44703674 471.80831909]
[99.97686768 483.02258301]
[88.03478241 489.02609253]
[86.98843384 503.98956299]
[85.94208527 518.95300293]
[84.89573669 533.91650391]
[83.84939575 548.87994385]
[82.80304718 563.84338379]
[81.75669861 578.80688477]
[80.71035004 593.77032471]
[79.66400146 608.73376465]
[92.60685730 601.15203857]
[106.66764832 606.37640381]
[111.51975250 620.57000732]
[103.59965515 633.30859375]
[88.72409058 635.23669434]
[77.81781769 624.93756104]
[75.47130585 639.75286865]
[73.12478638 654.56817627]
[70.77826691 669.38348389]
[82.60009003 679.08874512]
[87.94152832 693.31427002]
[85.46183014 708.20446777]
[75.92572021 719.77679443]
[61.97153854 724.98699951]
[59.62502289 739.80230713]
[57.27850342 754.61767578]
[59.02951050 763.61193848]
[54.75958252 769.67016602]
[52.15486145 784.44226074]
[57.37823868 799.37634277]
[47.54841614 810.56671143]
[44.94369507 825.33880615]
[42.33897018 840.11090088]
[39.73424911 854.88305664]
[37.12952805 869.65515137]
[34.52480316 884.42730713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[16 174]
[18 172]
[19 171]
[20 169]
[21 168]
[22 167]
[27 162]
[28 161]
[29 160]
[30 159]
[31 153]
[32 152]
[33 151]
[34 150]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[43 140]
[44 139]
[48 134]
[49 133]
[50 132]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[57 125]
[59 124]
[60 123]
[61 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[69 80]
[70 79]
[94 114]
[95 113]
[96 112]
[97 111]
[98 110]
[99 109]
[100 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
