%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCUCCCUGUCCCCUCUCUGUCACCUCACAGUAGUCGUUGCCGGUAGCGGGUGUGGGGGCGCGAGCAGCGCAGGGCGGCCUCUCCCCCACCCCUCAGCCCGGGCCCGGGCUCGGUCCCCCCCUCUCCCUCCGCUUCGCACUCCCGUCGGGUACGGGAAGGUCCAAGCCGCUGCCGGGUGCCCGAGGGCCGUCGUGGCCGCCGUCGCCACGGGUCCCA\
) } def
/len { sequence length } bind def

/coor [
[119.12930298 411.69155884]
[113.06759644 397.97091675]
[107.00588226 384.25030518]
[100.94417572 370.52966309]
[94.88246155 356.80902100]
[88.82075500 343.08840942]
[81.42257690 341.85675049]
[80.16420746 356.80386353]
[78.90583801 371.75097656]
[82.41348267 386.33511353]
[72.19038391 397.31182861]
[57.39401627 394.84860229]
[51.27841949 381.15188599]
[59.32192612 368.49060059]
[62.97407532 353.94201660]
[66.62622833 339.39340210]
[59.22805405 338.16174316]
[49.04801941 349.17840576]
[38.94726181 360.26779175]
[28.92630386 371.42935181]
[18.90534592 382.59091187]
[8.88438702 393.75247192]
[9.98432255 409.51843262]
[-0.44902712 421.38943481]
[-16.22574043 422.32263184]
[-27.98577499 411.76434326]
[-28.75210953 395.97866821]
[-18.07008934 384.33090210]
[-2.27717185 383.73150635]
[7.74378633 372.56994629]
[17.76474380 361.40838623]
[27.78570175 350.24682617]
[29.91400337 343.17391968]
[38.03135300 338.99835205]
[48.21139145 327.98168945]
[45.78042603 306.06607056]
[55.78581238 288.92935181]
[72.04547119 282.07516479]
[72.04547119 267.07516479]
[61.36460114 256.75747681]
[61.15092087 241.54534912]
[72.04547119 230.41221619]
[72.04547119 215.41221619]
[72.04547119 200.41221619]
[72.04547119 185.41221619]
[72.04547119 170.41221619]
[72.04547119 155.41221619]
[72.04547119 140.41221619]
[72.04547119 125.41222382]
[64.35990143 112.53076172]
[51.15971756 105.40649414]
[37.95953369 98.28223419]
[28.92719269 96.96178436]
[24.62217140 90.95991516]
[11.52554226 83.64703369]
[-1.57108760 76.33414459]
[-14.66771698 69.02126312]
[-27.76434708 61.70837402]
[-40.86097717 54.39548874]
[-53.95760727 47.08260345]
[-64.22634125 50.64617157]
[-74.54930878 48.02726364]
[-81.58115387 40.32346725]
[-83.18058777 30.23850250]
[-96.06204987 22.55293274]
[-108.99829865 14.95995140]
[-121.98868561 7.45995092]
[-137.80863953 7.26056337]
[-144.96212769 -5.80377102]
[-157.95249939 -13.30377102]
[-173.75868225 -10.55711079]
[-185.66500854 -21.30973434]
[-184.53796387 -37.31315231]
[-171.24212646 -46.29090881]
[-155.97691345 -41.35603714]
[-150.45249939 -26.29415131]
[-137.46212769 -18.79415131]
[-122.57133484 -19.13121414]
[-114.48868561 -5.53042984]
[-101.49829865 1.96957004]
[-94.13834381 2.59138131]
[-88.37648010 9.67147255]
[-75.49501801 17.35704422]
[-56.18856812 16.22552872]
[-46.64472198 33.98597336]
[-33.54809189 41.29885864]
[-20.45146179 48.61174393]
[-7.35483170 55.92462921]
[5.74179792 63.23751450]
[18.83842659 70.55039978]
[31.93505669 77.86328888]
[45.08380127 85.08204651]
[58.28398514 92.20631409]
[71.48416901 99.33058167]
[74.92857361 89.80699158]
[81.24473572 82.56880188]
[89.29595184 78.35692596]
[87.15155029 63.51100159]
[85.00714874 48.66507339]
[82.86274719 33.81914520]
[80.71833801 18.97322083]
[78.57393646 4.12729359]
[68.00867462 -8.41492558]
[73.84159851 -23.74166679]
[90.07230377 -26.08609200]
[100.00402832 -13.03645802]
[93.41986084 1.98289025]
[95.56427002 16.82881737]
[97.70867157 31.67474365]
[99.85307312 46.52066803]
[101.99747467 61.36659622]
[104.14188385 76.21252441]
[108.31243134 77.33057404]
[112.21715546 79.17356873]
[123.45030212 69.23292542]
[128.65734863 54.29313278]
[143.31608582 51.65293121]
[154.54922485 41.71228790]
[155.66664124 26.17558479]
[167.20025635 16.25437927]
[182.00524902 17.41540718]
[193.23838806 7.47476339]
[204.47154236 -2.46588039]
[203.12413025 -17.81158638]
[210.97930908 -30.85572624]
[224.84512329 -36.70408249]
[239.32260132 -33.30691910]
[250.55574036 -43.24756241]
[261.78887939 -53.18820572]
[262.90631104 -68.72490692]
[274.43991089 -78.64611053]
[289.24490356 -77.48508453]
[300.47805786 -87.42572784]
[296.76150513 -102.27314758]
[300.38186646 -117.14431000]
[310.50720215 -128.62193298]
[324.81082153 -134.06855774]
[340.00579834 -132.23255920]
[352.60049438 -123.53586578]
[359.70068359 -109.97689819]
[359.67486572 -94.67141724]
[352.52890015 -81.13649750]
[339.90493774 -72.48237610]
[324.70382690 -70.69770050]
[310.41870117 -76.19258118]
[299.18554688 -66.25193787]
[298.53720093 -51.41565704]
[287.28680420 -41.17441177]
[271.72952271 -41.95505905]
[260.49639893 -32.01441574]
[249.26324463 -22.07377052]
[250.87425232 -7.29058313]
[243.38279724 5.76093102]
[229.48005676 11.97119808]
[214.41218567 8.76726723]
[203.17903137 18.70791054]
[191.94589233 28.64855385]
[191.29753113 43.48483658]
[180.04713440 53.72608185]
[164.48986816 52.94543457]
[153.25672913 62.88607788]
[148.85314941 77.11484528]
[133.39094543 80.46607208]
[122.15779877 90.40671539]
[124.87509918 99.99707794]
[123.49948883 110.16762543]
[118.02705383 119.19721222]
[109.16584778 125.46489716]
[98.25105286 127.73889160]
[87.04547119 125.41222382]
[87.04547119 140.41221619]
[87.04547119 155.41221619]
[87.04547119 170.41221619]
[87.04547119 185.41221619]
[87.04547119 200.41221619]
[87.04547119 215.41221619]
[87.04547119 230.41221619]
[97.94002533 241.54534912]
[97.72634888 256.75747681]
[87.04547119 267.07516479]
[87.04547119 282.07516479]
[105.19569397 291.64913940]
[112.80158234 313.46688843]
[102.54138184 337.02670288]
[108.60309601 350.74731445]
[114.66480255 364.46795654]
[120.72651672 378.18859863]
[126.78822327 391.90921021]
[132.84992981 405.62985229]
[153.72447205 411.97482300]
[162.94952393 431.43127441]
[154.86685181 451.08166504]
[161.89625549 464.33261108]
[168.92565918 477.58355713]
[175.95507812 490.83450317]
[182.98448181 504.08544922]
[190.01388550 517.33636475]
[197.04328918 530.58734131]
[212.37278748 533.67602539]
[222.09005737 545.92791748]
[221.60685730 561.55804443]
[211.15138245 573.18627930]
[195.66035461 575.32220459]
[182.44818115 566.95727539]
[177.75323486 552.04113770]
[183.79234314 537.61669922]
[176.76293945 524.36578369]
[169.73353577 511.11483765]
[162.70413208 497.86389160]
[155.67472839 484.61294556]
[148.64532471 471.36199951]
[141.61592102 458.11108398]
[133.02671814 458.50793457]
[124.73142242 456.08551025]
[117.63469696 451.07861328]
[112.51998138 444.00555420]
[109.96303558 435.61447144]
[110.26720428 426.80429077]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[5 185]
[6 184]
[17 35]
[18 34]
[19 32]
[20 31]
[21 30]
[22 29]
[38 181]
[39 180]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 94]
[51 93]
[52 92]
[54 91]
[55 90]
[56 89]
[57 88]
[58 87]
[59 86]
[60 85]
[64 83]
[65 82]
[66 80]
[67 79]
[69 77]
[70 76]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[102 107]
[114 164]
[115 163]
[117 161]
[118 160]
[121 157]
[122 156]
[123 155]
[127 151]
[128 150]
[129 149]
[132 146]
[133 145]
[192 212]
[193 211]
[194 210]
[195 209]
[196 208]
[197 207]
[198 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
