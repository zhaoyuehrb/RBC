%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MON1A)
} def

/sequence { (\
GCGGCGCCGGAUGAGGCAAUCGCGGACCCGGGUCAGGACCUGCCCACGGCUCUGCUGGGACUAGGAGCCCAGAACCAGUCCCUCGGCGCCGCAGGCGGCCAAACGCUAAGGACUACAUUUCCCACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 92 0.999211984 ubox
2 91 0.999952047 ubox
3 90 0.999978393 ubox
4 89 0.999995649 ubox
5 88 0.999981671 ubox
6 87 0.999980002 ubox
7 86 0.999993801 ubox
8 85 0.999953120 ubox
9 21 0.010922947 ubox
9 81 0.024279497 ubox
9 83 0.008464135 ubox
9 84 0.990518774 ubox
10 20 0.010987607 ubox
10 21 0.876501090 ubox
10 80 0.027010220 ubox
10 82 0.012307602 ubox
10 83 0.396486799 ubox
10 84 0.034100729 ubox
11 20 0.878978099 ubox
11 79 0.027173102 ubox
11 83 0.044985749 ubox
12 18 0.085020245 ubox
12 19 0.870759669 ubox
12 22 0.018735514 ubox
12 78 0.026887719 ubox
13 17 0.109070392 ubox
13 21 0.365491338 ubox
13 52 0.003826567 ubox
13 80 0.011374676 ubox
13 84 0.009098647 ubox
14 20 0.362273511 ubox
14 51 0.003772856 ubox
14 56 0.003648972 ubox
14 79 0.010881207 ubox
14 83 0.010803747 ubox
15 21 0.079635241 ubox
15 44 0.003425588 ubox
15 50 0.003501991 ubox
15 56 0.016488975 ubox
15 76 0.028108480 ubox
15 80 0.011897361 ubox
15 81 0.004079997 ubox
15 82 0.010282614 ubox
16 20 0.051918861 ubox
16 23 0.012388336 ubox
16 43 0.003429035 ubox
16 50 0.003350237 ubox
16 55 0.017775717 ubox
16 75 0.028056772 ubox
16 79 0.012035466 ubox
16 80 0.004096122 ubox
16 81 0.009397918 ubox
17 22 0.012814202 ubox
17 42 0.003429509 ubox
17 49 0.003612671 ubox
17 54 0.017810060 ubox
17 57 0.005027031 ubox
17 78 0.012647930 ubox
18 41 0.003321771 ubox
18 53 0.017268671 ubox
18 56 0.007622163 ubox
20 49 0.016557703 ubox
20 73 0.017253533 ubox
21 48 0.017362640 ubox
21 57 0.006888350 ubox
21 72 0.017382313 ubox
22 43 0.004617180 ubox
22 47 0.017470990 ubox
22 55 0.998123196 ubox
22 56 0.009148694 ubox
23 42 0.004628552 ubox
23 54 0.999645647 ubox
24 41 0.004604352 ubox
24 45 0.017622379 ubox
24 51 0.003774278 ubox
24 52 0.005930540 ubox
24 53 0.998998826 ubox
24 81 0.003311830 ubox
25 40 0.004606677 ubox
25 44 0.017613080 ubox
25 50 0.004780228 ubox
25 51 0.005284670 ubox
25 52 0.999729537 ubox
25 80 0.003326258 ubox
26 51 0.985191975 ubox
26 79 0.003325989 ubox
27 49 0.349480770 ubox
27 78 0.003306539 ubox
28 37 0.005059506 ubox
28 48 0.347723022 ubox
28 49 0.935373374 ubox
29 36 0.005066807 ubox
29 42 0.032626891 ubox
29 48 0.936402696 ubox
30 41 0.033407970 ubox
30 44 0.004952629 ubox
30 45 0.468442212 ubox
30 47 0.877096050 ubox
31 40 0.035336483 ubox
31 43 0.004906663 ubox
31 44 0.494432461 ubox
31 45 0.866716721 ubox
32 39 0.035335602 ubox
32 43 0.496754394 ubox
32 44 0.865349239 ubox
33 38 0.032725722 ubox
33 42 0.173421566 ubox
34 42 0.981747800 ubox
35 41 0.984965405 ubox
36 40 0.963513898 ubox
36 44 0.014423216 ubox
36 45 0.006354766 ubox
37 43 0.015283115 ubox
37 44 0.006393281 ubox
42 50 0.004146719 ubox
43 49 0.004238876 ubox
44 48 0.004210209 ubox
48 56 0.004140598 ubox
48 82 0.004704820 ubox
49 55 0.004396241 ubox
49 81 0.004711227 ubox
50 54 0.004368192 ubox
52 78 0.004985141 ubox
53 77 0.005004997 ubox
54 76 0.005007401 ubox
54 79 0.003679723 ubox
55 72 0.016024707 ubox
55 78 0.005667933 ubox
56 71 0.035547217 ubox
56 77 0.011819614 ubox
57 70 0.037870524 ubox
57 76 0.012568905 ubox
57 81 0.003579769 ubox
57 82 0.997318906 ubox
57 83 0.010377595 ubox
58 69 0.037876024 ubox
58 75 0.012569794 ubox
58 81 0.999132823 ubox
58 82 0.009314934 ubox
59 68 0.037863075 ubox
59 80 0.999165813 ubox
59 81 0.006606977 ubox
60 79 0.999066990 ubox
61 67 0.028140192 ubox
61 72 0.012873000 ubox
61 78 0.999133480 ubox
62 66 0.025359394 ubox
62 71 0.013215225 ubox
62 77 0.992586221 ubox
64 70 0.036473297 ubox
64 76 0.993518927 ubox
65 69 0.035974822 ubox
65 75 0.990582828 ubox
72 80 0.006845478 ubox
73 79 0.006588078 ubox
93 107 0.053168376 ubox
93 114 0.010426263 ubox
94 100 0.006927846 ubox
94 106 0.039579825 ubox
94 107 0.962349637 ubox
94 113 0.010113353 ubox
94 122 0.003318994 ubox
94 123 0.013507493 ubox
95 99 0.006823100 ubox
95 106 0.998417048 ubox
95 122 0.005353848 ubox
96 105 0.999350933 ubox
97 104 0.997677281 ubox
97 107 0.029825629 ubox
97 114 0.006507852 ubox
98 106 0.031333020 ubox
98 113 0.006865061 ubox
99 105 0.031302497 ubox
99 111 0.008321197 ubox
100 110 0.008321055 ubox
107 115 0.005261301 ubox
108 114 0.008905188 ubox
108 119 0.024776085 ubox
108 120 0.023905327 ubox
109 118 0.028286095 ubox
109 119 0.027191867 ubox
109 120 0.017934132 ubox
110 118 0.027278678 ubox
110 119 0.020561438 ubox
110 120 0.022711342 ubox
110 121 0.135683212 ubox
110 122 0.841519905 ubox
110 123 0.340463577 ubox
111 118 0.014826607 ubox
111 119 0.027397380 ubox
111 120 0.136456606 ubox
111 121 0.845341665 ubox
111 122 0.335273208 ubox
112 118 0.029848026 ubox
112 119 0.141453765 ubox
112 120 0.810346868 ubox
1 92 0.9500000 lbox
2 91 0.9500000 lbox
3 90 0.9500000 lbox
4 89 0.9500000 lbox
5 88 0.9500000 lbox
6 87 0.9500000 lbox
7 86 0.9500000 lbox
8 85 0.9500000 lbox
9 84 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
22 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
57 82 0.9500000 lbox
58 81 0.9500000 lbox
59 80 0.9500000 lbox
60 79 0.9500000 lbox
61 78 0.9500000 lbox
62 77 0.9500000 lbox
64 76 0.9500000 lbox
65 75 0.9500000 lbox
94 107 0.9500000 lbox
95 106 0.9500000 lbox
96 105 0.9500000 lbox
97 104 0.9500000 lbox
110 122 0.9500000 lbox
111 121 0.9500000 lbox
112 120 0.9500000 lbox
showpage
end
%%EOF
