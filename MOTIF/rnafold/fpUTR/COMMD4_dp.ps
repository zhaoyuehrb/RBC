%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:30:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COMMD4)
} def

/sequence { (\
CCCAGAGGCAGUUAGUCCAAGUCACGUGAUCGUCGACUCAGCUGACCCUGCGGGACCGGAAAAAGAAAUUCCCGGGCCCUGGCUUCUUGGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.005487565 ubox
1 53 0.052258437 ubox
1 54 0.190292896 ubox
1 82 0.006927756 ubox
1 90 0.600120426 ubox
2 7 0.009786636 ubox
2 8 0.003671632 ubox
2 52 0.053194016 ubox
2 53 0.191156731 ubox
2 54 0.006959367 ubox
2 81 0.008557170 ubox
2 82 0.118482602 ubox
2 89 0.607493234 ubox
2 90 0.715236827 ubox
3 7 0.005604349 ubox
3 50 0.151358420 ubox
3 52 0.190952942 ubox
3 53 0.006901881 ubox
3 81 0.163264936 ubox
3 89 0.721745964 ubox
4 49 0.153280921 ubox
4 80 0.163449909 ubox
4 87 0.787433756 ubox
4 88 0.512153935 ubox
5 48 0.153478893 ubox
5 79 0.162575981 ubox
5 85 0.029257248 ubox
5 86 0.944420543 ubox
5 87 0.070484514 ubox
5 88 0.011706964 ubox
6 49 0.200265342 ubox
6 84 0.046020725 ubox
6 85 0.945383463 ubox
6 87 0.018088771 ubox
7 47 0.153957525 ubox
7 48 0.201404594 ubox
7 49 0.007695917 ubox
7 78 0.162183136 ubox
7 83 0.055426492 ubox
7 84 0.943962173 ubox
7 85 0.005215829 ubox
7 86 0.020972570 ubox
8 46 0.153761751 ubox
8 47 0.200273926 ubox
8 48 0.008096955 ubox
8 51 0.132061744 ubox
8 77 0.162200259 ubox
8 83 0.942988163 ubox
8 85 0.005057393 ubox
8 93 0.013491247 ubox
9 44 0.154733601 ubox
9 50 0.135156383 ubox
9 76 0.161985143 ubox
9 81 0.104877781 ubox
9 82 0.935084856 ubox
9 92 0.013487671 ubox
10 43 0.155124653 ubox
10 49 0.139766690 ubox
10 80 0.131073748 ubox
11 42 0.155193782 ubox
11 46 0.976940967 ubox
11 48 0.100807622 ubox
11 51 0.014981158 ubox
11 79 0.018531195 ubox
12 41 0.154942369 ubox
12 45 0.984714904 ubox
12 50 0.013998865 ubox
13 40 0.149734776 ubox
13 44 0.985989836 ubox
13 50 0.004086803 ubox
13 81 0.003445522 ubox
14 38 0.146076225 ubox
14 43 0.986216050 ubox
14 49 0.004893420 ubox
14 80 0.003297219 ubox
15 37 0.147288639 ubox
15 42 0.986572900 ubox
15 46 0.027745299 ubox
15 48 0.004577069 ubox
15 51 0.006674058 ubox
15 77 0.010644603 ubox
16 36 0.147218233 ubox
16 41 0.965201400 ubox
16 45 0.027863239 ubox
16 50 0.006536737 ubox
16 76 0.010619749 ubox
17 35 0.146903107 ubox
17 44 0.027057084 ubox
17 75 0.010535361 ubox
18 28 0.004363689 ubox
18 44 0.007788061 ubox
18 50 0.004895623 ubox
18 74 0.010455737 ubox
19 27 0.004127027 ubox
19 43 0.010075623 ubox
19 49 0.004805150 ubox
20 38 0.948405007 ubox
21 30 0.135112937 ubox
21 33 0.004060323 ubox
21 37 0.988605039 ubox
21 46 0.016668524 ubox
22 29 0.139309238 ubox
22 36 0.988701381 ubox
22 45 0.016744688 ubox
23 28 0.139281926 ubox
23 35 0.988420017 ubox
23 44 0.016758472 ubox
24 33 0.983675996 ubox
24 43 0.016691893 ubox
25 32 0.988891926 ubox
25 35 0.005189361 ubox
26 31 0.977363868 ubox
26 34 0.008892369 ubox
27 40 0.016720624 ubox
28 34 0.009467219 ubox
28 39 0.016809957 ubox
29 33 0.008245906 ubox
29 38 0.016618400 ubox
30 36 0.009323266 ubox
31 35 0.009304151 ubox
39 44 0.003251904 ubox
39 50 0.016467078 ubox
40 49 0.016655875 ubox
41 48 0.016513083 ubox
41 51 0.027288711 ubox
42 50 0.027333860 ubox
44 51 0.004101995 ubox
46 53 0.005136655 ubox
46 54 0.023263142 ubox
46 82 0.003362280 ubox
47 52 0.009772055 ubox
47 53 0.031402755 ubox
47 54 0.169923744 ubox
47 75 0.004154370 ubox
47 76 0.011036455 ubox
47 81 0.038832560 ubox
47 82 0.047844227 ubox
48 52 0.031445556 ubox
48 53 0.170306510 ubox
48 54 0.005760815 ubox
48 74 0.003784402 ubox
48 75 0.011691541 ubox
48 76 0.003615018 ubox
48 81 0.132699856 ubox
48 82 0.024895897 ubox
49 53 0.005212725 ubox
49 74 0.009971859 ubox
49 75 0.003540751 ubox
49 81 0.078681439 ubox
49 94 0.007077011 ubox
50 73 0.009524312 ubox
50 80 0.108429067 ubox
50 83 0.022978144 ubox
50 93 0.034045344 ubox
51 74 0.019742996 ubox
51 81 0.568788661 ubox
51 82 0.022173899 ubox
51 92 0.034214430 ubox
52 72 0.009455224 ubox
52 73 0.021617473 ubox
52 78 0.027284584 ubox
52 79 0.807584049 ubox
52 80 0.523423664 ubox
53 71 0.009450545 ubox
53 72 0.021646893 ubox
53 77 0.027272893 ubox
53 78 0.809639738 ubox
53 79 0.522867348 ubox
53 80 0.004187166 ubox
54 70 0.009195018 ubox
54 71 0.021639856 ubox
54 77 0.795736584 ubox
54 78 0.520709945 ubox
54 79 0.004574577 ubox
55 69 0.008454973 ubox
55 70 0.020204421 ubox
56 75 0.984269515 ubox
56 76 0.133624602 ubox
57 74 0.990494493 ubox
57 75 0.121498765 ubox
58 71 0.008466427 ubox
58 72 0.305309041 ubox
58 73 0.951628996 ubox
58 93 0.003285966 ubox
59 70 0.011757817 ubox
59 71 0.414499915 ubox
59 72 0.908223798 ubox
60 69 0.043268877 ubox
60 70 0.495563253 ubox
61 69 0.458251238 ubox
61 70 0.554651071 ubox
62 69 0.531505103 ubox
62 70 0.098229021 ubox
63 69 0.098027302 ubox
63 70 0.210878223 ubox
63 88 0.004098016 ubox
64 69 0.208271146 ubox
64 70 0.020476130 ubox
64 87 0.004242149 ubox
65 69 0.017243715 ubox
65 71 0.102446742 ubox
65 86 0.004267771 ubox
66 70 0.089178896 ubox
66 85 0.004213710 ubox
67 84 0.003833017 ubox
72 82 0.004064270 ubox
73 81 0.005854840 ubox
73 94 0.049788159 ubox
74 80 0.005864074 ubox
74 93 0.053386986 ubox
75 79 0.005760671 ubox
76 83 0.005936820 ubox
76 91 0.099127624 ubox
76 93 0.161014467 ubox
77 82 0.005945611 ubox
77 90 0.098410166 ubox
77 92 0.161129819 ubox
78 89 0.097485909 ubox
78 90 0.153149875 ubox
79 89 0.153600661 ubox
79 90 0.034803137 ubox
80 89 0.034553251 ubox
80 92 0.009017726 ubox
80 94 0.055384671 ubox
81 87 0.126237060 ubox
81 88 0.033265609 ubox
81 91 0.009470910 ubox
81 93 0.099725198 ubox
82 86 0.128679097 ubox
82 87 0.025730731 ubox
82 91 0.220540704 ubox
82 93 0.055074937 ubox
83 90 0.223539466 ubox
83 92 0.056029151 ubox
84 89 0.217766749 ubox
84 90 0.007094909 ubox
85 89 0.006699076 ubox
88 94 0.004722007 ubox
89 93 0.007677763 ubox
1 90 0.9500000 lbox
2 89 0.9500000 lbox
4 87 0.9500000 lbox
5 86 0.9500000 lbox
6 85 0.9500000 lbox
7 84 0.9500000 lbox
8 83 0.9500000 lbox
9 82 0.9500000 lbox
11 46 0.9500000 lbox
12 45 0.9500000 lbox
13 44 0.9500000 lbox
14 43 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
52 79 0.9500000 lbox
53 78 0.9500000 lbox
54 77 0.9500000 lbox
56 75 0.9500000 lbox
57 74 0.9500000 lbox
58 73 0.9500000 lbox
59 72 0.9500000 lbox
showpage
end
%%EOF
