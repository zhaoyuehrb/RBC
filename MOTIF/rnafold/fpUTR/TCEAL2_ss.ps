%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGUCGGGUCCGGGCGCCCGCGCAGAAUCAGCUGUCUGAGCUGCCCAGGCGGCGGGGGAGCAGCGAGCGGGCUUCAGCGAGCCGCAGGAGGCACAGGCCUGUCCUGGGUCCCCGCAGGUCUGCGCGUCUGUUGUUCCCAGCGCUCUGAGAGGCCUGAAAAGGAAGAGCAACCUGUCCAGAAUCCCCGCAGGAAAGGAAAAGGAGGGGAAAUCUCGAC\
) } def
/len { sequence length } bind def

/coor [
[264.04278564 301.61691284]
[252.55189514 295.04425049]
[244.40806580 284.98306274]
[240.55328369 272.93432617]
[241.30964661 260.60086060]
[246.36259460 249.64720154]
[235.75599670 239.04060364]
[225.14938354 228.43400574]
[214.54278564 217.82740784]
[203.93618774 207.22079468]
[193.32958984 196.61419678]
[182.72297668 186.00759888]
[171.89163208 175.63059998]
[160.84051514 165.48797607]
[149.78939819 155.34535217]
[138.66615295 145.28189087]
[127.47132874 135.29811096]
[116.27650452 125.31432343]
[105.08168793 115.33054352]
[90.20539856 113.40805054]
[76.84029388 120.21790314]
[63.47520065 127.02776337]
[50.11010361 133.83761597]
[36.79396820 140.74272156]
[23.52747345 147.74273682]
[24.00483131 162.95896912]
[17.85335732 176.81704712]
[6.34211493 186.59004211]
[-8.21104336 190.38037109]
[-22.90607834 187.48808289]
[-34.83865356 178.53938293]
[-48.10514832 185.53938293]
[-61.37163925 192.53939819]
[-74.63813782 199.53941345]
[-87.90462494 206.53941345]
[-93.99845123 221.38006592]
[-109.44046783 225.73020935]
[-122.38488770 216.25277710]
[-122.90184784 200.21804810]
[-110.59479523 189.92649841]
[-94.90464020 193.27291870]
[-81.63814545 186.27291870]
[-68.37165070 179.27290344]
[-55.10515594 172.27290344]
[-41.83866119 165.27288818]
[-42.49029922 150.37185669]
[-36.58329391 136.60897827]
[-25.24005127 126.73517609]
[-10.67527390 122.74927521]
[4.23633814 125.49350739]
[16.52746201 134.47624207]
[29.79395676 127.47623444]
[34.23989487 121.57866669]
[43.30024338 120.47251892]
[56.66534042 113.66266632]
[70.03044128 106.85280609]
[83.39553833 100.04294586]
[89.13578796 86.18475342]
[84.50053406 71.91890717]
[79.86528015 57.65306091]
[75.23002625 43.38721466]
[70.59477234 29.12136459]
[65.95951843 14.85551739]
[61.32426071 0.58966970]
[56.68900681 -13.67617798]
[52.05374908 -27.94202614]
[42.60506058 -20.38349533]
[28.73888588 -17.89538956]
[12.89140987 -22.27743912]
[1.01287627 -31.43715668]
[-10.86565781 -40.59687424]
[-22.74419022 -49.75659180]
[-31.44470215 -52.51604462]
[-34.72570801 -59.13289642]
[-46.47223282 -68.46130371]
[-58.21876144 -77.78970337]
[-74.51041412 -79.66426849]
[-80.78368378 -94.81610870]
[-70.58515930 -107.65830994]
[-54.40621185 -104.97991943]
[-48.89035797 -89.53623199]
[-37.14382935 -80.20782471]
[-25.39730453 -70.87942505]
[-13.58447266 -61.63512802]
[-1.70593929 -52.47541046]
[10.17259407 -43.31568909]
[22.05112839 -34.15597153]
[28.78161621 -37.46512985]
[48.97307968 -47.39260483]
[48.97307968 -62.39260483]
[48.97307968 -77.39260864]
[41.23577881 -91.19277954]
[48.97307968 -103.92005157]
[48.97307968 -118.92005157]
[41.23577881 -132.72021484]
[48.97307968 -145.44749451]
[48.97307968 -160.44749451]
[48.97307968 -175.44749451]
[48.97307968 -190.44749451]
[48.97307968 -205.44749451]
[48.97307968 -220.44749451]
[48.97307968 -235.44749451]
[48.97307968 -250.44749451]
[48.97307968 -265.44747925]
[46.36883163 -269.95602417]
[45.80610657 -274.55340576]
[46.97787857 -278.44860840]
[49.30811691 -281.08645630]
[49.95051956 -296.07269287]
[41.89107895 -310.35476685]
[50.46184158 -324.33596802]
[66.84593964 -323.63363647]
[74.18881989 -308.97027588]
[64.93675995 -295.43029785]
[64.29435730 -280.44406128]
[63.97307968 -265.44747925]
[63.97307968 -250.44749451]
[63.97307968 -235.44749451]
[63.97307968 -220.44749451]
[63.97307968 -205.44749451]
[63.97307968 -190.44749451]
[63.97307968 -175.44749451]
[63.97307968 -160.44749451]
[63.97307968 -145.44749451]
[71.71038055 -132.72021484]
[63.97307968 -118.92005157]
[63.97307968 -103.92005157]
[71.71038055 -91.19277954]
[63.97307968 -77.39260864]
[63.97307968 -62.39260483]
[63.97307968 -47.39260483]
[66.31959534 -32.57728195]
[70.95484924 -18.31143379]
[75.59011078 -4.04558516]
[80.22536469 10.22026253]
[84.86061859 24.48611069]
[89.49587250 38.75195694]
[94.13112640 53.01780701]
[98.76638031 67.28365326]
[103.40163422 81.54949951]
[114.56356049 90.86368561]
[115.06546783 104.13571930]
[126.26029205 114.11950684]
[137.45510864 124.10328674]
[148.64993286 134.08706665]
[157.13142395 137.46017456]
[159.93202209 144.29423523]
[170.98313904 154.43685913]
[182.03425598 164.57948303]
[187.11680603 165.70938110]
[190.88438416 168.40344238]
[192.96182251 171.90057373]
[193.32958984 175.40100098]
[203.93618774 186.00759888]
[214.54278564 196.61419678]
[225.14938354 207.22079468]
[235.75599670 217.82740784]
[246.36259460 228.43400574]
[256.96920776 239.04060364]
[278.35391235 232.65713501]
[300.10021973 241.72782898]
[311.79254150 263.60729980]
[326.71768188 265.10418701]
[341.64279175 266.60110474]
[351.86984253 254.93118286]
[367.01052856 251.53416443]
[381.24291992 257.71627808]
[389.09439087 271.10037231]
[387.54589844 286.54000854]
[377.19284058 298.09829712]
[362.01620483 301.33084106]
[347.85171509 294.99468994]
[340.14590454 281.52621460]
[325.22076416 280.02932739]
[310.29565430 278.53240967]
[302.91964722 291.59362793]
[311.90881348 303.60174561]
[320.89797974 315.60986328]
[335.36215210 322.02066040]
[336.79528809 336.84616089]
[345.78445435 348.85427856]
[354.77362061 360.86239624]
[371.86648560 367.72015381]
[373.26119995 385.21646118]
[382.42092896 397.09500122]
[391.58062744 408.97351074]
[400.74035645 420.85205078]
[409.90008545 432.73059082]
[424.23681641 427.85855103]
[439.37869263 427.90814209]
[453.68319702 432.87393188]
[465.59875488 442.21731567]
[473.83279419 454.92477417]
[477.49215698 469.61788940]
[476.17993164 484.70288086]
[470.03842163 498.54342651]
[459.73382568 509.63821411]
[446.38394165 516.78375244]
[431.43679810 519.20495605]
[416.51382446 516.63922119]
[403.23370361 509.36480713]
[393.03695679 498.17080688]
[387.02969360 484.27148438]
[385.86352539 469.17449951]
[389.66491699 454.51748657]
[398.02154541 441.89031982]
[388.86181641 430.01177979]
[379.70208740 418.13323975]
[370.54238892 406.25469971]
[361.38265991 394.37619019]
[349.43405151 392.51715088]
[341.70523071 382.70172119]
[342.76550293 369.85156250]
[333.77633667 357.84344482]
[324.78717041 345.83532715]
[310.96597290 340.28341675]
[308.88986206 324.59902954]
[299.90069580 312.59088135]
[290.91152954 300.58276367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 159]
[7 158]
[8 157]
[9 156]
[10 155]
[11 154]
[12 153]
[13 149]
[14 148]
[15 147]
[16 145]
[17 144]
[18 143]
[19 142]
[20 57]
[21 56]
[22 55]
[23 54]
[24 52]
[25 51]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[69 87]
[70 86]
[71 85]
[72 84]
[74 83]
[75 82]
[76 81]
[89 131]
[90 130]
[91 129]
[93 127]
[94 126]
[96 124]
[97 123]
[98 122]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[108 115]
[109 114]
[162 175]
[163 174]
[164 173]
[176 219]
[177 218]
[178 217]
[180 215]
[181 214]
[182 213]
[184 210]
[185 209]
[186 208]
[187 207]
[188 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
