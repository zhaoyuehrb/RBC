%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POM121L2)
} def

/sequence { (\
CGUCCGAAACCUCGGAAGCCAAAACCGUGCUUGAACUCACUGCCCGCGCCUCAUCUCUCCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.004212571 ubox
1 27 0.017239604 ubox
1 33 0.008278259 ubox
1 42 0.007038117 ubox
1 46 0.023799615 ubox
1 48 0.066954436 ubox
2 10 0.008524220 ubox
2 13 0.005194767 ubox
2 19 0.170207316 ubox
2 25 0.031687599 ubox
2 26 0.031111980 ubox
2 30 0.003375631 ubox
2 32 0.005273540 ubox
2 36 0.015158317 ubox
2 40 0.014757792 ubox
2 41 0.005582755 ubox
2 43 0.011453318 ubox
2 45 0.024532911 ubox
2 47 0.070104899 ubox
2 49 0.023833037 ubox
2 54 0.008812302 ubox
3 9 0.008247511 ubox
3 16 0.917585480 ubox
3 18 0.122702727 ubox
3 24 0.020557449 ubox
3 35 0.013673475 ubox
3 39 0.012765562 ubox
3 42 0.009974764 ubox
3 46 0.049541994 ubox
3 48 0.017531836 ubox
3 53 0.007177386 ubox
4 15 0.997944776 ubox
5 14 0.998489401 ubox
5 33 0.004275617 ubox
6 13 0.997603794 ubox
6 32 0.004239343 ubox
6 52 0.003554398 ubox
7 12 0.933266810 ubox
7 31 0.004049350 ubox
7 51 0.003467153 ubox
13 27 0.005918057 ubox
13 46 0.005340107 ubox
14 20 0.005714212 ubox
14 26 0.007861403 ubox
14 45 0.005538517 ubox
14 50 0.004684656 ubox
14 58 0.004879076 ubox
14 60 0.050714763 ubox
15 19 0.005665649 ubox
15 25 0.007872434 ubox
15 44 0.005521730 ubox
15 49 0.004706597 ubox
15 52 0.017678432 ubox
15 55 0.003362786 ubox
15 57 0.007223406 ubox
15 59 0.051198290 ubox
15 60 0.004040476 ubox
16 32 0.132978651 ubox
16 51 0.021422926 ubox
16 54 0.003981086 ubox
16 56 0.008052616 ubox
16 58 0.048246008 ubox
16 61 0.004585018 ubox
17 31 0.179511866 ubox
17 32 0.012161138 ubox
17 37 0.018882509 ubox
17 41 0.008002073 ubox
17 51 0.063565738 ubox
17 56 0.125299958 ubox
17 58 0.139519051 ubox
17 61 0.062573319 ubox
18 28 0.021641358 ubox
18 30 0.184562390 ubox
18 31 0.009919093 ubox
18 36 0.019928119 ubox
18 40 0.008123913 ubox
18 43 0.041233228 ubox
18 47 0.102539753 ubox
18 49 0.179570388 ubox
18 50 0.062478082 ubox
18 55 0.131833677 ubox
18 57 0.147956766 ubox
18 60 0.065980677 ubox
19 27 0.022877721 ubox
19 29 0.171845195 ubox
19 42 0.039328181 ubox
19 46 0.101517791 ubox
19 48 0.181053206 ubox
20 29 0.069659937 ubox
20 33 0.065712719 ubox
20 42 0.034842605 ubox
21 28 0.088056099 ubox
21 32 0.065637908 ubox
21 41 0.036350205 ubox
22 31 0.064216657 ubox
22 32 0.006022439 ubox
23 31 0.006202263 ubox
23 32 0.006533208 ubox
24 31 0.006110932 ubox
26 33 0.027347087 ubox
26 42 0.047037216 ubox
26 46 0.378053807 ubox
26 48 0.384883882 ubox
27 32 0.024005080 ubox
27 36 0.083365950 ubox
27 40 0.226664183 ubox
27 41 0.011804534 ubox
27 43 0.019226889 ubox
27 45 0.391221849 ubox
27 47 0.398473196 ubox
27 49 0.749581021 ubox
27 54 0.010060724 ubox
28 35 0.083043677 ubox
28 39 0.227423266 ubox
28 42 0.018994807 ubox
28 46 0.386719848 ubox
28 48 0.750582906 ubox
28 53 0.010490107 ubox
29 38 0.227024848 ubox
29 41 0.013344303 ubox
29 43 0.526178131 ubox
29 45 0.208437704 ubox
29 47 0.751538408 ubox
29 49 0.053303238 ubox
29 52 0.009109976 ubox
30 42 0.535719805 ubox
30 46 0.750655127 ubox
30 48 0.053509708 ubox
32 39 0.447956534 ubox
32 42 0.077586017 ubox
32 46 0.050702619 ubox
32 48 0.005894310 ubox
32 53 0.034712880 ubox
33 38 0.454557932 ubox
33 41 0.074265099 ubox
33 45 0.117008295 ubox
33 47 0.008787744 ubox
33 52 0.040891442 ubox
33 55 0.021890729 ubox
33 57 0.042782189 ubox
33 59 0.028268642 ubox
33 62 0.004795003 ubox
34 51 0.039441474 ubox
34 54 0.021286770 ubox
34 56 0.041724045 ubox
34 58 0.027721629 ubox
34 61 0.004703502 ubox
41 48 0.021727630 ubox
41 53 0.013910271 ubox
42 47 0.028892618 ubox
42 49 0.172440271 ubox
42 52 0.014024313 ubox
43 48 0.172532952 ubox
3 16 0.9500000 lbox
4 15 0.9500000 lbox
5 14 0.9500000 lbox
6 13 0.9500000 lbox
7 12 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
showpage
end
%%EOF
