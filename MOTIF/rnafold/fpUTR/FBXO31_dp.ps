%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FBXO31)
} def

/sequence { (\
CGCGCUGGAGCGUGCGCACAGGCGGCAGCAGUGGCCGUCACUGGGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.064244641 ubox
1 14 0.114703633 ubox
1 16 0.058797146 ubox
1 24 0.023516889 ubox
1 33 0.827512443 ubox
1 47 0.017418059 ubox
2 11 0.067415958 ubox
2 13 0.138916418 ubox
2 15 0.062970732 ubox
2 17 0.042244724 ubox
2 23 0.023845985 ubox
2 26 0.003584846 ubox
2 29 0.006144719 ubox
2 32 0.835391285 ubox
2 35 0.006093750 ubox
2 46 0.017290612 ubox
2 49 0.003679863 ubox
3 10 0.067408056 ubox
3 12 0.141878095 ubox
3 14 0.063029365 ubox
3 16 0.042852274 ubox
3 22 0.023829897 ubox
3 24 0.004960776 ubox
3 28 0.006083462 ubox
3 31 0.835697068 ubox
3 33 0.496824942 ubox
3 34 0.005414483 ubox
3 45 0.017273235 ubox
3 47 0.004228226 ubox
3 48 0.003265383 ubox
4 11 0.142035241 ubox
4 13 0.062950663 ubox
4 15 0.042888272 ubox
4 23 0.005613332 ubox
4 26 0.005966587 ubox
4 29 0.843920196 ubox
4 32 0.500957704 ubox
4 46 0.004427611 ubox
5 10 0.141576712 ubox
5 12 0.062920423 ubox
5 14 0.042884481 ubox
5 21 0.024086198 ubox
5 22 0.005127542 ubox
5 25 0.005983353 ubox
5 28 0.846625972 ubox
5 31 0.501445023 ubox
5 44 0.015910617 ubox
5 45 0.004237421 ubox
6 12 0.006871428 ubox
6 20 0.024234072 ubox
6 21 0.004553066 ubox
6 24 0.005914154 ubox
6 27 0.846406147 ubox
6 30 0.501349981 ubox
6 43 0.015915478 ubox
6 44 0.003929877 ubox
7 11 0.009524330 ubox
7 19 0.024274134 ubox
7 23 0.003198652 ubox
7 26 0.845894666 ubox
7 29 0.501040300 ubox
7 42 0.015879052 ubox
8 41 0.015933036 ubox
10 17 0.024798098 ubox
10 23 0.846392344 ubox
10 26 0.499076736 ubox
10 29 0.019821211 ubox
10 38 0.015942325 ubox
10 49 0.013285954 ubox
11 16 0.024781968 ubox
11 22 0.846449736 ubox
11 24 0.039133942 ubox
11 25 0.497938900 ubox
11 28 0.022202205 ubox
11 37 0.016299426 ubox
11 48 0.013388218 ubox
12 19 0.016988370 ubox
12 23 0.047755376 ubox
12 26 0.017895207 ubox
12 36 0.016295781 ubox
12 49 0.007851331 ubox
13 18 0.016050706 ubox
13 20 0.842528448 ubox
13 22 0.047633983 ubox
13 24 0.431035978 ubox
13 25 0.016394599 ubox
13 27 0.018917733 ubox
13 47 0.054394576 ubox
13 48 0.006290691 ubox
14 19 0.838527375 ubox
14 23 0.486138088 ubox
14 26 0.020287023 ubox
14 35 0.016348443 ubox
14 46 0.099602774 ubox
14 49 0.012561252 ubox
15 22 0.486109336 ubox
15 24 0.112529873 ubox
15 25 0.014563659 ubox
15 33 0.003164996 ubox
15 34 0.016594710 ubox
15 45 0.100251368 ubox
15 47 0.113063611 ubox
15 48 0.009852932 ubox
16 23 0.113940606 ubox
16 46 0.115191080 ubox
17 22 0.113768876 ubox
17 33 0.072433647 ubox
17 43 0.100284091 ubox
17 45 0.113438353 ubox
18 32 0.073476708 ubox
18 42 0.099163375 ubox
19 31 0.073535000 ubox
19 33 0.017396155 ubox
19 43 0.112024638 ubox
20 32 0.017221782 ubox
20 42 0.110489653 ubox
21 36 0.008367464 ubox
21 39 0.119198551 ubox
21 41 0.094941059 ubox
21 42 0.003873328 ubox
22 29 0.076721956 ubox
22 35 0.008800089 ubox
22 38 0.149906270 ubox
22 41 0.004587294 ubox
22 49 0.036019767 ubox
23 28 0.076709604 ubox
23 34 0.008876108 ubox
23 37 0.152289760 ubox
23 48 0.036422972 ubox
24 36 0.152346318 ubox
24 39 0.015892528 ubox
25 32 0.011297560 ubox
25 35 0.152336982 ubox
25 38 0.016013658 ubox
25 46 0.039179735 ubox
25 49 0.003500720 ubox
26 31 0.011485397 ubox
26 33 0.041419450 ubox
26 34 0.146804663 ubox
26 37 0.016014333 ubox
26 45 0.039184205 ubox
26 48 0.003537452 ubox
27 32 0.055443475 ubox
28 35 0.016038614 ubox
29 34 0.016046676 ubox
29 43 0.039516120 ubox
30 42 0.039902172 ubox
31 41 0.039954595 ubox
31 49 0.031820159 ubox
32 40 0.039945723 ubox
32 48 0.031999971 ubox
33 39 0.039919379 ubox
33 46 0.003639660 ubox
34 38 0.025859484 ubox
34 46 0.045081382 ubox
34 49 0.974748040 ubox
35 44 0.004939294 ubox
35 45 0.045046796 ubox
35 48 0.986044361 ubox
36 43 0.005443915 ubox
36 44 0.044983011 ubox
36 47 0.986150593 ubox
37 42 0.004176140 ubox
37 46 0.986153404 ubox
38 44 0.017594832 ubox
38 45 0.985162511 ubox
39 43 0.024086499 ubox
39 44 0.976931022 ubox
1 33 0.9500000 lbox
2 32 0.9500000 lbox
3 31 0.9500000 lbox
4 29 0.9500000 lbox
5 28 0.9500000 lbox
6 27 0.9500000 lbox
7 26 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
34 49 0.9500000 lbox
35 48 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
showpage
end
%%EOF
