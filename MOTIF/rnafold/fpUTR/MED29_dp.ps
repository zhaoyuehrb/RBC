%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MED29)
} def

/sequence { (\
AUUGGCUUAAUUGCCUAGGGGGCGGGACUAACUAGCAAACGGGGACUAGAAAUAGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.018140504 ubox
1 53 0.054694567 ubox
2 10 0.023823217 ubox
2 18 0.037407658 ubox
2 19 0.011174270 ubox
2 20 0.006337660 ubox
2 21 0.004515237 ubox
2 25 0.006793689 ubox
2 26 0.013009178 ubox
2 27 0.005885305 ubox
2 31 0.221579760 ubox
2 35 0.119443251 ubox
2 38 0.061049517 ubox
2 39 0.056873075 ubox
2 42 0.022561194 ubox
2 43 0.005062657 ubox
2 44 0.007252700 ubox
2 45 0.035519021 ubox
2 49 0.461453989 ubox
2 50 0.061855510 ubox
2 51 0.032867984 ubox
2 52 0.053214081 ubox
2 55 0.013799576 ubox
2 56 0.008658276 ubox
2 57 0.007735558 ubox
3 9 0.025490514 ubox
3 17 0.046169725 ubox
3 18 0.011573488 ubox
3 19 0.008151770 ubox
3 20 0.005808872 ubox
3 21 0.003488785 ubox
3 24 0.009117042 ubox
3 25 0.019850068 ubox
3 26 0.006162248 ubox
3 30 0.266006056 ubox
3 34 0.156523858 ubox
3 37 0.068133424 ubox
3 38 0.053891913 ubox
3 41 0.030304375 ubox
3 42 0.005522235 ubox
3 43 0.007341877 ubox
3 44 0.037044929 ubox
3 48 0.681477524 ubox
3 49 0.049344685 ubox
3 50 0.028074928 ubox
3 51 0.041022610 ubox
3 54 0.016831586 ubox
3 55 0.008604383 ubox
3 56 0.009624371 ubox
4 8 0.021468839 ubox
4 12 0.003993329 ubox
4 15 0.263248825 ubox
4 16 0.010291103 ubox
4 23 0.010122668 ubox
4 29 0.271829591 ubox
4 33 0.161205091 ubox
4 36 0.056049296 ubox
4 40 0.033484171 ubox
4 47 0.708695366 ubox
4 53 0.016018100 ubox
5 11 0.004231528 ubox
5 14 0.273482183 ubox
5 15 0.007382101 ubox
5 23 0.023767360 ubox
5 28 0.272280904 ubox
5 32 0.161538942 ubox
5 36 0.182333885 ubox
5 46 0.711484007 ubox
6 13 0.273933832 ubox
6 19 0.007847982 ubox
6 21 0.010018571 ubox
6 22 0.023767152 ubox
6 25 0.017314695 ubox
6 26 0.206272435 ubox
6 35 0.187079823 ubox
6 42 0.095993720 ubox
6 43 0.383658972 ubox
6 44 0.719518375 ubox
6 49 0.022186892 ubox
6 55 0.017345077 ubox
6 56 0.082289717 ubox
6 57 0.022470015 ubox
7 18 0.008027154 ubox
7 20 0.009917461 ubox
7 21 0.023361389 ubox
7 24 0.015268506 ubox
7 25 0.194788487 ubox
7 26 0.045373841 ubox
7 27 0.120085650 ubox
7 31 0.122767168 ubox
7 34 0.179676792 ubox
7 38 0.003913242 ubox
7 39 0.008001776 ubox
7 41 0.092169765 ubox
7 42 0.386794940 ubox
7 43 0.714276156 ubox
7 44 0.047711615 ubox
7 45 0.037602674 ubox
7 48 0.021172407 ubox
7 49 0.017885695 ubox
7 50 0.008981130 ubox
7 51 0.013978198 ubox
7 52 0.004258905 ubox
7 54 0.016530255 ubox
7 55 0.081914649 ubox
7 56 0.022640254 ubox
8 17 0.008770615 ubox
8 19 0.009001334 ubox
8 20 0.020506291 ubox
8 24 0.112719161 ubox
8 25 0.035009572 ubox
8 26 0.116235522 ubox
8 30 0.141740540 ubox
8 34 0.012119082 ubox
8 38 0.007275627 ubox
8 41 0.360877070 ubox
8 42 0.667437247 ubox
8 43 0.050642726 ubox
8 44 0.037538302 ubox
8 48 0.021694094 ubox
8 49 0.008973795 ubox
8 50 0.015278103 ubox
8 51 0.004664638 ubox
8 54 0.080943727 ubox
8 55 0.019400032 ubox
8 56 0.004766936 ubox
9 16 0.008692615 ubox
9 29 0.133938907 ubox
9 33 0.014866886 ubox
9 47 0.022072744 ubox
9 53 0.072997505 ubox
10 53 0.036618172 ubox
11 18 0.008839442 ubox
11 19 0.004472922 ubox
11 25 0.331585181 ubox
11 26 0.015900685 ubox
11 27 0.033954116 ubox
11 31 0.010923985 ubox
11 38 0.739606123 ubox
11 39 0.096916823 ubox
11 42 0.007703618 ubox
11 45 0.027791704 ubox
11 49 0.017985113 ubox
11 50 0.007131654 ubox
11 51 0.029150610 ubox
11 52 0.046880717 ubox
12 17 0.007674440 ubox
12 18 0.005039165 ubox
12 19 0.003848813 ubox
12 24 0.406471266 ubox
12 25 0.014047279 ubox
12 26 0.026479068 ubox
12 30 0.009290393 ubox
12 37 0.825526642 ubox
12 38 0.092293128 ubox
12 41 0.008325440 ubox
12 44 0.028920214 ubox
12 48 0.018645466 ubox
12 49 0.006032661 ubox
12 50 0.026156058 ubox
12 51 0.046229024 ubox
12 54 0.003517587 ubox
13 23 0.444738688 ubox
13 29 0.004972261 ubox
13 36 0.833435342 ubox
13 40 0.008237208 ubox
13 47 0.016570262 ubox
13 53 0.003473706 ubox
14 20 0.008398745 ubox
14 21 0.013770556 ubox
14 22 0.444705583 ubox
14 25 0.011295795 ubox
14 26 0.022589992 ubox
14 35 0.594542877 ubox
14 42 0.028889042 ubox
14 43 0.035538039 ubox
14 44 0.087604356 ubox
14 56 0.030216089 ubox
15 19 0.008441283 ubox
15 20 0.016803287 ubox
15 21 0.444478375 ubox
15 22 0.003722942 ubox
15 24 0.011370353 ubox
15 25 0.022649449 ubox
15 26 0.003866204 ubox
15 35 0.599825867 ubox
15 41 0.028510973 ubox
15 42 0.036038848 ubox
15 43 0.089095943 ubox
15 44 0.009366580 ubox
15 49 0.078531071 ubox
15 55 0.030768887 ubox
16 20 0.400431375 ubox
16 21 0.006742335 ubox
16 24 0.022113702 ubox
16 25 0.004823056 ubox
16 30 0.056773849 ubox
16 34 0.844493821 ubox
16 41 0.035496720 ubox
16 42 0.090526392 ubox
16 43 0.014828683 ubox
16 48 0.108571048 ubox
16 54 0.031604465 ubox
17 29 0.059063461 ubox
17 33 0.847785202 ubox
17 47 0.110760602 ubox
17 53 0.031316985 ubox
18 28 0.059032609 ubox
18 29 0.045431363 ubox
18 32 0.847119597 ubox
18 33 0.032956229 ubox
18 46 0.110875960 ubox
18 47 0.021115414 ubox
19 28 0.059200635 ubox
19 29 0.128451136 ubox
19 32 0.036476463 ubox
19 33 0.012403625 ubox
19 46 0.022214710 ubox
19 47 0.013776067 ubox
20 28 0.137508536 ubox
20 29 0.616221070 ubox
20 32 0.013063729 ubox
20 33 0.011762508 ubox
20 46 0.014236652 ubox
20 47 0.007082302 ubox
21 28 0.638243085 ubox
21 29 0.520291110 ubox
21 32 0.012283928 ubox
21 33 0.004082686 ubox
21 46 0.007237030 ubox
21 47 0.003250987 ubox
22 28 0.521612687 ubox
22 32 0.004210780 ubox
22 36 0.194896885 ubox
22 46 0.003184167 ubox
23 35 0.194984361 ubox
23 41 0.108837921 ubox
24 33 0.146732172 ubox
24 40 0.108928450 ubox
24 47 0.062576326 ubox
25 32 0.165517458 ubox
25 33 0.096274181 ubox
25 46 0.067901176 ubox
25 47 0.010055107 ubox
26 32 0.103465153 ubox
26 46 0.010497139 ubox
28 35 0.065756246 ubox
28 42 0.012235164 ubox
28 43 0.068553553 ubox
28 44 0.011905221 ubox
28 49 0.020040149 ubox
28 55 0.213158946 ubox
28 56 0.024308282 ubox
28 57 0.009526881 ubox
29 34 0.061740251 ubox
29 41 0.012115511 ubox
29 42 0.066631388 ubox
29 43 0.011303946 ubox
29 48 0.020074738 ubox
29 54 0.213758197 ubox
29 55 0.021618039 ubox
29 56 0.009419640 ubox
30 47 0.018929072 ubox
30 53 0.211066383 ubox
32 42 0.038489216 ubox
32 43 0.071147648 ubox
32 44 0.023892528 ubox
32 49 0.328451085 ubox
32 55 0.049391668 ubox
32 56 0.009665127 ubox
32 57 0.005422617 ubox
33 41 0.037770020 ubox
33 42 0.070932394 ubox
33 43 0.023401936 ubox
33 48 0.329731550 ubox
33 54 0.049510162 ubox
33 55 0.008809795 ubox
33 56 0.005397010 ubox
34 47 0.329778140 ubox
34 53 0.048990407 ubox
35 46 0.328416910 ubox
41 47 0.028508571 ubox
42 46 0.029111954 ubox
46 55 0.505100373 ubox
46 56 0.077639070 ubox
46 57 0.047531094 ubox
47 54 0.506136491 ubox
47 55 0.072976581 ubox
47 56 0.047945371 ubox
48 53 0.497213766 ubox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
5 46 0.9500000 lbox
6 44 0.9500000 lbox
7 43 0.9500000 lbox
8 42 0.9500000 lbox
11 38 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
showpage
end
%%EOF
