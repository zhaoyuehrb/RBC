%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SSR3)
} def

/sequence { (\
GCCGCGCUGACGGGUCGUUAGCGGAUACGGCGGCCGCAGGGGCGGAGUCAAGGGCCUUUGCCCGCCUUGGCGGCCGGCUCUACGUUCCCUGUUCUCGCCUGCAGCUCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.079837525 ubox
1 102 0.012743601 ubox
1 105 0.011150902 ubox
1 110 0.782766511 ubox
2 24 0.004676435 ubox
2 30 0.080233586 ubox
2 101 0.012714454 ubox
2 104 0.011125691 ubox
2 109 0.745032389 ubox
3 23 0.004460854 ubox
3 29 0.080238069 ubox
3 109 0.396961789 ubox
4 22 0.003317262 ubox
4 28 0.080020032 ubox
4 98 0.012912334 ubox
4 102 0.010435738 ubox
4 105 0.011345116 ubox
4 108 0.473096611 ubox
4 110 0.369973147 ubox
5 23 0.081830952 ubox
5 97 0.012929851 ubox
5 101 0.010173907 ubox
5 104 0.010436462 ubox
5 109 0.370482031 ubox
6 22 0.083239378 ubox
6 96 0.012800123 ubox
6 98 0.003475293 ubox
6 102 0.003572177 ubox
6 105 0.983857064 ubox
6 108 0.150682698 ubox
7 21 0.083265592 ubox
7 97 0.003514475 ubox
7 101 0.003540055 ubox
7 104 0.996280249 ubox
8 20 0.083276902 ubox
8 103 0.996123220 ubox
9 19 0.083282890 ubox
9 93 0.012681379 ubox
9 94 0.003328559 ubox
9 102 0.996129024 ubox
9 107 0.003341357 ubox
10 18 0.083311991 ubox
10 92 0.013111464 ubox
10 106 0.003335841 ubox
11 17 0.083321456 ubox
11 91 0.013318009 ubox
11 97 0.004918223 ubox
11 101 0.995528655 ubox
12 16 0.077948807 ubox
12 89 0.005965809 ubox
12 90 0.011942730 ubox
12 96 0.005037970 ubox
12 99 0.012165371 ubox
12 100 0.995523057 ubox
13 88 0.006048961 ubox
13 89 0.011910693 ubox
13 95 0.005038199 ubox
13 98 0.011880348 ubox
13 99 0.996309803 ubox
13 100 0.003617957 ubox
14 87 0.006122567 ubox
14 88 0.011835043 ubox
14 94 0.005075322 ubox
14 98 0.996222125 ubox
14 99 0.004615977 ubox
15 97 0.323221292 ubox
16 29 0.003306924 ubox
16 84 0.012075889 ubox
16 91 0.007634726 ubox
16 97 0.940737950 ubox
17 28 0.003389168 ubox
17 83 0.012102180 ubox
17 90 0.005807055 ubox
17 92 0.003693412 ubox
17 96 0.961540839 ubox
18 27 0.003341991 ubox
18 82 0.011433943 ubox
18 91 0.010098881 ubox
19 82 0.003676164 ubox
19 91 0.260537456 ubox
20 79 0.009470472 ubox
20 81 0.005136455 ubox
20 86 0.012610662 ubox
20 90 0.279238341 ubox
20 93 0.930686062 ubox
20 95 0.011612081 ubox
21 78 0.009632021 ubox
21 80 0.005161233 ubox
21 85 0.014674809 ubox
21 89 0.280657966 ubox
21 92 0.952064330 ubox
21 94 0.011709157 ubox
21 110 0.004430651 ubox
22 29 0.004039768 ubox
22 77 0.009519791 ubox
22 84 0.015081665 ubox
22 91 0.951832661 ubox
22 109 0.004514363 ubox
23 28 0.009011698 ubox
23 81 0.008296354 ubox
23 83 0.015085081 ubox
23 87 0.067431505 ubox
23 88 0.495364607 ubox
23 89 0.677510843 ubox
23 90 0.529308108 ubox
23 94 0.005215851 ubox
23 95 0.004156331 ubox
23 108 0.006219024 ubox
24 80 0.009508793 ubox
24 85 0.004558433 ubox
24 86 0.070695282 ubox
24 87 0.503812412 ubox
24 88 0.684488419 ubox
24 89 0.510327435 ubox
24 93 0.005529386 ubox
24 94 0.004396302 ubox
24 107 0.006318993 ubox
25 79 0.009590821 ubox
25 85 0.100858273 ubox
25 86 0.496193448 ubox
25 92 0.005651172 ubox
25 93 0.004206208 ubox
25 106 0.006180556 ubox
26 82 0.204330617 ubox
26 84 0.100909897 ubox
26 91 0.005707291 ubox
26 101 0.003358494 ubox
27 81 0.207765617 ubox
27 85 0.932729185 ubox
27 90 0.005565999 ubox
27 92 0.004204667 ubox
27 100 0.003702725 ubox
28 76 0.011186206 ubox
28 84 0.947245489 ubox
28 91 0.004355615 ubox
28 101 0.003799487 ubox
28 109 0.003943172 ubox
29 75 0.011288472 ubox
29 79 0.497644569 ubox
29 80 0.139338222 ubox
29 81 0.076818670 ubox
29 83 0.837549634 ubox
29 86 0.004919534 ubox
29 87 0.005573617 ubox
29 88 0.031819890 ubox
29 89 0.004320510 ubox
29 90 0.004083510 ubox
29 99 0.017151681 ubox
29 108 0.004023442 ubox
29 111 0.007911105 ubox
30 74 0.011286850 ubox
30 78 0.949729907 ubox
30 79 0.068740057 ubox
30 80 0.137033495 ubox
30 85 0.005436119 ubox
30 86 0.004833362 ubox
30 87 0.031700031 ubox
30 88 0.004553755 ubox
30 89 0.004041957 ubox
30 98 0.017187067 ubox
30 107 0.003992363 ubox
30 110 0.007977608 ubox
31 73 0.011273933 ubox
31 76 0.731843155 ubox
31 77 0.673184073 ubox
31 84 0.005046072 ubox
31 97 0.017199933 ubox
31 109 0.007971975 ubox
32 75 0.997774419 ubox
32 80 0.005876917 ubox
32 96 0.017197661 ubox
32 99 0.015560672 ubox
32 106 0.009585513 ubox
32 108 0.007498085 ubox
32 111 0.004952358 ubox
33 71 0.011264724 ubox
33 74 0.999546842 ubox
33 78 0.003526641 ubox
33 94 0.003437480 ubox
33 95 0.015609940 ubox
33 98 0.015582936 ubox
33 105 0.010970294 ubox
33 107 0.006725654 ubox
33 110 0.004986299 ubox
34 70 0.011269325 ubox
34 73 0.999549556 ubox
34 77 0.003482660 ubox
34 97 0.015473362 ubox
34 104 0.011341967 ubox
34 109 0.004961165 ubox
35 69 0.011260777 ubox
35 72 0.999532799 ubox
35 76 0.003420474 ubox
36 68 0.009749712 ubox
36 71 0.999515535 ubox
36 92 0.022897102 ubox
36 102 0.011771606 ubox
36 105 0.006289135 ubox
37 69 0.055054102 ubox
37 70 0.994179206 ubox
37 91 0.023426051 ubox
37 101 0.011776493 ubox
37 104 0.006276451 ubox
38 67 0.020726946 ubox
38 68 0.074707605 ubox
38 90 0.023424966 ubox
38 100 0.010777873 ubox
39 66 0.022596923 ubox
39 67 0.068741185 ubox
39 68 0.782172269 ubox
39 89 0.023374097 ubox
39 99 0.009763536 ubox
40 63 0.038410826 ubox
40 65 0.016620668 ubox
40 66 0.055869958 ubox
40 67 0.991169535 ubox
40 68 0.013599779 ubox
40 88 0.023316269 ubox
40 98 0.009247717 ubox
40 100 0.007855792 ubox
41 62 0.041790624 ubox
41 63 0.006414765 ubox
41 65 0.039591348 ubox
41 66 0.997151311 ubox
41 87 0.023248533 ubox
41 90 0.005165363 ubox
41 93 0.004398140 ubox
41 96 0.003955137 ubox
41 99 0.009211798 ubox
41 111 0.003497630 ubox
42 61 0.042486570 ubox
42 62 0.004559475 ubox
42 65 0.997934294 ubox
42 85 0.016086835 ubox
42 86 0.016696095 ubox
42 89 0.005351096 ubox
42 92 0.005293110 ubox
42 98 0.009578654 ubox
42 110 0.003786091 ubox
43 60 0.042732782 ubox
43 64 0.998680406 ubox
43 84 0.022628007 ubox
43 91 0.005534261 ubox
43 97 0.009902449 ubox
43 109 0.003790753 ubox
44 59 0.042565969 ubox
44 62 0.006558964 ubox
44 63 0.997083075 ubox
44 81 0.011167164 ubox
44 83 0.019827764 ubox
44 88 0.008124788 ubox
44 96 0.008876258 ubox
44 108 0.003805826 ubox
45 58 0.042918265 ubox
45 61 0.009153534 ubox
45 62 0.996536874 ubox
45 80 0.022672476 ubox
45 87 0.008225082 ubox
45 94 0.007865608 ubox
45 96 0.004362522 ubox
45 107 0.003805896 ubox
46 57 0.049880239 ubox
46 58 0.005429280 ubox
46 59 0.007345655 ubox
46 79 0.022790150 ubox
46 86 0.008233615 ubox
46 93 0.007882015 ubox
46 95 0.006018521 ubox
46 106 0.003803209 ubox
47 55 0.031244442 ubox
47 56 0.044613659 ubox
47 58 0.006602274 ubox
47 61 0.967965085 ubox
47 78 0.022807967 ubox
47 83 0.004064438 ubox
47 85 0.007405691 ubox
47 92 0.007426601 ubox
47 94 0.006343416 ubox
47 105 0.003784660 ubox
48 54 0.038581929 ubox
48 60 0.661000992 ubox
48 77 0.022777584 ubox
48 82 0.003968639 ubox
48 84 0.003899035 ubox
49 53 0.037664486 ubox
49 60 0.737162878 ubox
49 76 0.022660852 ubox
49 91 0.007730541 ubox
50 58 0.612428498 ubox
50 59 0.745382159 ubox
50 90 0.006353519 ubox
51 57 0.649496248 ubox
51 58 0.718113576 ubox
51 59 0.035208909 ubox
51 81 0.010634577 ubox
51 90 0.008006426 ubox
52 56 0.639994730 ubox
52 57 0.580405352 ubox
52 58 0.041004477 ubox
52 59 0.020144244 ubox
52 62 0.004585793 ubox
52 63 0.057211504 ubox
52 80 0.011073849 ubox
52 89 0.009154838 ubox
53 57 0.030666917 ubox
53 58 0.018526085 ubox
53 59 0.009182665 ubox
53 61 0.006190113 ubox
53 62 0.063300038 ubox
53 75 0.019916485 ubox
53 79 0.011137997 ubox
53 88 0.009151096 ubox
54 58 0.006845457 ubox
54 61 0.068863478 ubox
54 74 0.019976817 ubox
54 78 0.011172188 ubox
54 87 0.009044805 ubox
55 60 0.068597997 ubox
55 73 0.020012770 ubox
55 77 0.011183016 ubox
55 84 0.004394743 ubox
56 72 0.019791467 ubox
56 76 0.011167791 ubox
59 72 0.004469006 ubox
60 71 0.020285737 ubox
60 74 0.010046616 ubox
60 78 0.009775210 ubox
61 70 0.020235704 ubox
61 73 0.008220120 ubox
61 77 0.009778445 ubox
62 69 0.020115293 ubox
62 72 0.005829808 ubox
62 73 0.006951175 ubox
62 76 0.009759672 ubox
63 72 0.009068963 ubox
64 71 0.010816913 ubox
64 74 0.014885623 ubox
65 70 0.010783545 ubox
65 73 0.014929658 ubox
66 72 0.014918290 ubox
76 83 0.010878679 ubox
76 86 0.009266285 ubox
76 87 0.004111640 ubox
76 88 0.007518133 ubox
76 99 0.063326839 ubox
76 106 0.011034576 ubox
76 108 0.005023325 ubox
76 111 0.029484158 ubox
77 85 0.033719830 ubox
77 86 0.004106602 ubox
77 87 0.007712613 ubox
77 98 0.063414444 ubox
77 105 0.012251078 ubox
77 107 0.004968933 ubox
77 110 0.029713494 ubox
78 84 0.035054203 ubox
78 97 0.063336456 ubox
78 104 0.012225702 ubox
78 109 0.029174002 ubox
79 103 0.011828435 ubox
81 101 0.009134471 ubox
82 92 0.059532572 ubox
82 100 0.008868839 ubox
83 91 0.060133560 ubox
83 97 0.006784528 ubox
83 109 0.019817607 ubox
84 90 0.050053682 ubox
84 96 0.006980747 ubox
84 98 0.008592813 ubox
84 102 0.004886949 ubox
84 105 0.011486506 ubox
84 108 0.023453558 ubox
84 110 0.012374598 ubox
85 97 0.008323339 ubox
85 101 0.004858745 ubox
85 104 0.007223165 ubox
85 109 0.012196605 ubox
86 103 0.004256174 ubox
89 104 0.043092633 ubox
90 97 0.004354855 ubox
90 103 0.043875506 ubox
91 96 0.006819027 ubox
91 98 0.004293206 ubox
91 102 0.044067027 ubox
92 97 0.004069611 ubox
92 101 0.043964005 ubox
97 105 0.004957230 ubox
98 104 0.004958593 ubox
100 109 0.003260581 ubox
101 108 0.004382726 ubox
101 110 0.050336393 ubox
102 109 0.050456395 ubox
104 110 0.018589683 ubox
105 109 0.018518281 ubox
1 110 0.9500000 lbox
2 109 0.9500000 lbox
6 105 0.9500000 lbox
7 104 0.9500000 lbox
8 103 0.9500000 lbox
9 102 0.9500000 lbox
11 101 0.9500000 lbox
12 100 0.9500000 lbox
13 99 0.9500000 lbox
14 98 0.9500000 lbox
16 97 0.9500000 lbox
17 96 0.9500000 lbox
20 93 0.9500000 lbox
21 92 0.9500000 lbox
22 91 0.9500000 lbox
23 89 0.9500000 lbox
24 88 0.9500000 lbox
27 85 0.9500000 lbox
28 84 0.9500000 lbox
29 83 0.9500000 lbox
30 78 0.9500000 lbox
31 77 0.9500000 lbox
32 75 0.9500000 lbox
33 74 0.9500000 lbox
34 73 0.9500000 lbox
35 72 0.9500000 lbox
36 71 0.9500000 lbox
37 70 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
42 65 0.9500000 lbox
43 64 0.9500000 lbox
44 63 0.9500000 lbox
45 62 0.9500000 lbox
47 61 0.9500000 lbox
48 60 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
52 56 0.9500000 lbox
showpage
end
%%EOF
