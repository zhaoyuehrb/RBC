%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TNNI3K)
} def

/sequence { (\
GCACUUGAACUUGGAAUCUUAUAACUUGAAGAACUGCCCUGGAGAAAGGAAGAAACUUAUAAUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 37 0.857928845 ubox
2 13 0.063486773 ubox
2 28 0.009079038 ubox
2 36 0.860692765 ubox
2 41 0.004756231 ubox
3 12 0.062051484 ubox
3 27 0.008483691 ubox
3 35 0.847783479 ubox
3 40 0.004655377 ubox
4 14 0.068428958 ubox
4 31 0.885053609 ubox
4 42 0.004955103 ubox
4 44 0.051634750 ubox
4 48 0.170085352 ubox
4 49 0.064515817 ubox
4 52 0.057938767 ubox
5 13 0.068049591 ubox
5 14 0.015794078 ubox
5 15 0.025640820 ubox
5 16 0.032547584 ubox
5 24 0.005098436 ubox
5 29 0.018959455 ubox
5 30 0.886276740 ubox
5 31 0.017807176 ubox
5 32 0.022593815 ubox
5 33 0.163937169 ubox
5 41 0.004892963 ubox
5 43 0.051871126 ubox
5 44 0.004774948 ubox
5 45 0.011958444 ubox
5 46 0.010979792 ubox
5 47 0.170277246 ubox
5 48 0.064506606 ubox
5 49 0.006943497 ubox
5 50 0.008058670 ubox
5 51 0.057852992 ubox
5 52 0.006054782 ubox
5 53 0.010610386 ubox
5 54 0.009078582 ubox
5 55 0.007007186 ubox
5 62 0.010831773 ubox
5 65 0.009615697 ubox
6 13 0.017844454 ubox
6 14 0.026968881 ubox
6 15 0.037379125 ubox
6 21 0.010663764 ubox
6 23 0.005730918 ubox
6 28 0.023202638 ubox
6 29 0.878216689 ubox
6 30 0.017510528 ubox
6 31 0.019453310 ubox
6 32 0.163637980 ubox
6 36 0.003955480 ubox
6 42 0.050375586 ubox
6 43 0.005614652 ubox
6 44 0.012636716 ubox
6 45 0.013370651 ubox
6 46 0.167938479 ubox
6 47 0.063071824 ubox
6 48 0.008538948 ubox
6 49 0.008677565 ubox
6 50 0.055268800 ubox
6 51 0.006883824 ubox
6 52 0.010872614 ubox
6 53 0.009685752 ubox
6 54 0.007870527 ubox
6 59 0.017778493 ubox
6 61 0.012122092 ubox
6 64 0.013372977 ubox
7 12 0.013585470 ubox
7 18 0.046967750 ubox
7 20 0.011595703 ubox
7 22 0.004959481 ubox
7 27 0.033231767 ubox
7 35 0.005249958 ubox
7 58 0.019273287 ubox
7 60 0.010697264 ubox
7 63 0.012611857 ubox
8 17 0.046448263 ubox
8 19 0.011192731 ubox
8 20 0.004666881 ubox
8 26 0.033092710 ubox
8 27 0.867129075 ubox
8 57 0.018348484 ubox
8 58 0.008599579 ubox
9 19 0.004462214 ubox
9 26 0.833507428 ubox
9 57 0.007963753 ubox
10 31 0.232140371 ubox
10 42 0.171349258 ubox
10 44 0.075055720 ubox
10 48 0.020688589 ubox
10 49 0.010924916 ubox
10 52 0.046257494 ubox
11 24 0.824906194 ubox
11 29 0.014921192 ubox
11 30 0.232792199 ubox
11 31 0.005217600 ubox
11 32 0.004240847 ubox
11 33 0.005905700 ubox
11 41 0.167461105 ubox
11 42 0.011242229 ubox
11 43 0.075160251 ubox
11 45 0.004183404 ubox
11 47 0.020672442 ubox
11 48 0.010893213 ubox
11 51 0.046236216 ubox
11 52 0.003804256 ubox
11 53 0.004483784 ubox
11 54 0.008247602 ubox
11 55 0.006784519 ubox
11 62 0.011921262 ubox
11 65 0.005653541 ubox
12 21 0.096466813 ubox
12 23 0.862816595 ubox
12 28 0.015680500 ubox
12 29 0.230971854 ubox
12 30 0.005837235 ubox
12 31 0.004382080 ubox
12 32 0.005434193 ubox
12 36 0.060758366 ubox
12 41 0.012564058 ubox
12 42 0.072891576 ubox
12 43 0.003177498 ubox
12 44 0.004367480 ubox
12 46 0.020253468 ubox
12 47 0.010590963 ubox
12 50 0.044037254 ubox
12 51 0.004156563 ubox
12 52 0.004230597 ubox
12 53 0.008418586 ubox
12 54 0.007216867 ubox
12 59 0.011440297 ubox
12 61 0.013441698 ubox
12 64 0.007843631 ubox
13 19 0.056696983 ubox
13 20 0.098558861 ubox
13 22 0.857605760 ubox
13 26 0.057946491 ubox
13 27 0.015961289 ubox
13 35 0.104834260 ubox
13 38 0.166987754 ubox
13 39 0.118895266 ubox
13 40 0.008311883 ubox
13 57 0.031840314 ubox
13 58 0.011372001 ubox
13 60 0.011968343 ubox
13 63 0.007344111 ubox
14 18 0.060783734 ubox
14 19 0.082288498 ubox
14 20 0.097128592 ubox
14 25 0.060492077 ubox
14 26 0.014656120 ubox
14 27 0.221872725 ubox
14 34 0.110288670 ubox
14 37 0.169646429 ubox
14 38 0.117477618 ubox
14 39 0.009074818 ubox
14 56 0.034452084 ubox
14 57 0.009053546 ubox
14 58 0.010513502 ubox
15 19 0.089700253 ubox
15 26 0.213755818 ubox
15 27 0.012661747 ubox
15 57 0.010551095 ubox
15 58 0.008490807 ubox
16 22 0.029880587 ubox
16 26 0.014871912 ubox
16 57 0.008277486 ubox
16 60 0.003362510 ubox
16 63 0.005342475 ubox
17 21 0.028794268 ubox
17 29 0.037579877 ubox
17 32 0.322638706 ubox
17 43 0.016840926 ubox
17 45 0.015598314 ubox
17 49 0.003698320 ubox
17 50 0.010103212 ubox
17 53 0.047680178 ubox
17 62 0.004365508 ubox
18 28 0.040801904 ubox
18 31 0.336689208 ubox
18 42 0.016949819 ubox
18 44 0.016109973 ubox
18 48 0.004858923 ubox
18 49 0.010764479 ubox
18 52 0.049710193 ubox
19 29 0.076252500 ubox
19 30 0.329443745 ubox
19 31 0.004281380 ubox
19 32 0.007694255 ubox
19 33 0.005736855 ubox
19 41 0.016612217 ubox
19 43 0.016033914 ubox
19 47 0.004845657 ubox
19 48 0.010659140 ubox
19 50 0.004081201 ubox
19 51 0.049329513 ubox
19 62 0.045431980 ubox
19 65 0.017362207 ubox
20 28 0.102738912 ubox
20 29 0.318323157 ubox
20 30 0.005968297 ubox
20 31 0.007828265 ubox
20 32 0.005958986 ubox
20 42 0.015380343 ubox
20 46 0.004467993 ubox
20 47 0.009597367 ubox
20 49 0.005380401 ubox
20 50 0.047598691 ubox
20 61 0.052260098 ubox
20 64 0.024528763 ubox
21 27 0.118884491 ubox
21 60 0.052808778 ubox
21 63 0.024939386 ubox
22 28 0.053948266 ubox
22 36 0.004294918 ubox
22 41 0.003362783 ubox
22 59 0.052693985 ubox
22 61 0.004264688 ubox
22 62 0.023144140 ubox
22 64 0.016302536 ubox
23 27 0.048500704 ubox
23 35 0.004557278 ubox
23 40 0.003807296 ubox
23 58 0.050408848 ubox
23 60 0.004683437 ubox
23 63 0.016535486 ubox
24 57 0.043521972 ubox
25 31 0.023415656 ubox
25 42 0.004446431 ubox
25 44 0.034899774 ubox
25 48 0.008939248 ubox
25 49 0.005228279 ubox
25 52 0.020609244 ubox
26 30 0.021224893 ubox
26 32 0.007650116 ubox
26 33 0.018214150 ubox
26 41 0.004419121 ubox
26 43 0.034925302 ubox
26 44 0.006440023 ubox
26 45 0.005832523 ubox
26 47 0.008949938 ubox
26 48 0.005199452 ubox
26 51 0.020590161 ubox
26 53 0.007191002 ubox
26 54 0.009306190 ubox
26 55 0.025170346 ubox
26 62 0.046227130 ubox
26 65 0.004531817 ubox
27 31 0.007300261 ubox
27 32 0.020735753 ubox
27 36 0.004987307 ubox
27 42 0.033880262 ubox
27 43 0.007122943 ubox
27 44 0.006060236 ubox
27 46 0.008810003 ubox
27 47 0.005072898 ubox
27 50 0.020151479 ubox
27 52 0.006551038 ubox
27 53 0.009945120 ubox
27 54 0.025274304 ubox
27 59 0.033275693 ubox
27 61 0.053114620 ubox
27 64 0.006323782 ubox
28 35 0.005879823 ubox
28 58 0.034083565 ubox
28 60 0.050070456 ubox
28 63 0.006401767 ubox
29 57 0.031172478 ubox
29 58 0.104277359 ubox
30 40 0.037127345 ubox
30 57 0.111840903 ubox
30 58 0.006898723 ubox
31 39 0.037576473 ubox
31 56 0.113281846 ubox
31 57 0.006190526 ubox
31 58 0.005200312 ubox
32 57 0.006242956 ubox
32 58 0.012910296 ubox
33 57 0.013503786 ubox
34 42 0.009677846 ubox
34 44 0.017022378 ubox
34 48 0.013982228 ubox
34 49 0.004157072 ubox
34 52 0.288180565 ubox
35 41 0.009506277 ubox
35 43 0.017057784 ubox
35 47 0.013935046 ubox
35 48 0.003988881 ubox
35 51 0.287610907 ubox
36 40 0.004466095 ubox
37 49 0.054391931 ubox
38 48 0.045873414 ubox
38 49 0.963635294 ubox
39 48 0.966492669 ubox
39 49 0.025424274 ubox
39 52 0.025935800 ubox
40 47 0.960993447 ubox
40 48 0.025102433 ubox
40 51 0.025880527 ubox
40 59 0.004328779 ubox
40 61 0.006943278 ubox
40 64 0.023268775 ubox
41 57 0.004437199 ubox
41 58 0.003892753 ubox
41 60 0.006658030 ubox
41 63 0.024530041 ubox
42 56 0.004806548 ubox
42 58 0.024663910 ubox
43 57 0.025681566 ubox
44 56 0.025697583 ubox
44 58 0.004100515 ubox
45 57 0.003433845 ubox
45 58 0.007966510 ubox
46 57 0.006139634 ubox
46 58 0.101301730 ubox
47 57 0.108541497 ubox
47 58 0.041292932 ubox
48 56 0.109542055 ubox
48 57 0.045897192 ubox
48 58 0.003189588 ubox
49 56 0.047883036 ubox
49 57 0.003807723 ubox
49 58 0.019155181 ubox
50 57 0.027209818 ubox
50 58 0.216491863 ubox
51 57 0.228478535 ubox
51 58 0.043907720 ubox
52 56 0.225091731 ubox
52 57 0.039356582 ubox
52 58 0.038339441 ubox
53 57 0.034000138 ubox
57 65 0.039121769 ubox
58 64 0.054747865 ubox
59 63 0.049676576 ubox
1 37 0.9500000 lbox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
showpage
end
%%EOF
