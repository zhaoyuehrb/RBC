%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATP4B)
} def

/sequence { (\
AGUCUGGGCGUAGAGGGUGCAGGGAGCAGACGGGAGGAUCUCAGGCCAGGGACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 27 0.019661597 ubox
2 31 0.051767771 ubox
2 39 0.008490470 ubox
2 46 0.168390089 ubox
2 53 0.968202775 ubox
3 14 0.009795271 ubox
3 23 0.076136777 ubox
3 24 0.005574045 ubox
3 25 0.007885212 ubox
3 26 0.017538457 ubox
3 30 0.051798991 ubox
3 38 0.010325199 ubox
3 45 0.168668172 ubox
3 50 0.081757039 ubox
3 51 0.079249291 ubox
3 52 0.968196095 ubox
4 13 0.010482783 ubox
4 22 0.100853393 ubox
4 23 0.005706320 ubox
4 24 0.008407019 ubox
4 29 0.051668191 ubox
4 37 0.010639580 ubox
4 44 0.168985505 ubox
4 49 0.106554601 ubox
4 50 0.124471205 ubox
4 51 0.964601340 ubox
5 12 0.010462408 ubox
5 21 0.101555448 ubox
5 22 0.003349382 ubox
5 23 0.007899284 ubox
5 28 0.051289464 ubox
5 36 0.010571602 ubox
5 43 0.168947716 ubox
5 48 0.110221879 ubox
5 49 0.138637491 ubox
5 50 0.949656382 ubox
6 11 0.010113546 ubox
6 20 0.102286177 ubox
6 27 0.050400586 ubox
6 42 0.168921612 ubox
6 47 0.102112427 ubox
7 40 0.017882363 ubox
7 41 0.167623881 ubox
7 46 0.087068402 ubox
7 47 0.972164597 ubox
8 18 0.103486300 ubox
8 20 0.025295582 ubox
8 27 0.013188495 ubox
8 39 0.016199842 ubox
8 40 0.166995366 ubox
8 46 0.974444481 ubox
9 17 0.104292831 ubox
9 19 0.025366018 ubox
9 26 0.013770674 ubox
9 32 0.031848423 ubox
9 45 0.975237871 ubox
9 54 0.013390511 ubox
10 18 0.022220294 ubox
10 20 0.240850210 ubox
10 27 0.016946404 ubox
10 31 0.059221708 ubox
10 39 0.068474720 ubox
10 46 0.017293209 ubox
10 53 0.014568481 ubox
11 17 0.021606663 ubox
11 19 0.240891256 ubox
11 26 0.016637483 ubox
11 30 0.055131559 ubox
11 38 0.068886678 ubox
11 45 0.017821098 ubox
11 52 0.014447302 ubox
12 18 0.237482138 ubox
12 41 0.307681631 ubox
13 40 0.328718376 ubox
13 42 0.720591012 ubox
14 39 0.327017459 ubox
14 41 0.722366811 ubox
15 40 0.716292617 ubox
15 41 0.097907920 ubox
15 42 0.091685136 ubox
15 47 0.003551777 ubox
16 39 0.575049960 ubox
16 40 0.131466404 ubox
16 41 0.091094204 ubox
16 42 0.013239692 ubox
16 46 0.003464919 ubox
16 47 0.022303114 ubox
17 27 0.082029598 ubox
17 31 0.279678151 ubox
17 39 0.154101060 ubox
17 40 0.091140531 ubox
17 41 0.010705604 ubox
17 46 0.022299884 ubox
18 26 0.081553384 ubox
18 28 0.816735854 ubox
18 30 0.207142512 ubox
18 32 0.020751285 ubox
18 38 0.146442674 ubox
18 43 0.003699212 ubox
18 45 0.021887712 ubox
19 27 0.907237929 ubox
19 31 0.020803690 ubox
19 42 0.004151568 ubox
19 46 0.004952374 ubox
20 26 0.906976146 ubox
20 45 0.005456404 ubox
21 41 0.008109666 ubox
22 40 0.008605534 ubox
22 41 0.004398420 ubox
22 42 0.174608264 ubox
22 47 0.006659185 ubox
23 39 0.008238853 ubox
23 40 0.004756351 ubox
23 41 0.175536080 ubox
23 42 0.007647612 ubox
23 46 0.006724828 ubox
23 47 0.022417206 ubox
24 39 0.003212897 ubox
24 40 0.175891307 ubox
24 42 0.030080014 ubox
24 46 0.021778660 ubox
25 39 0.173479427 ubox
25 41 0.029949602 ubox
26 40 0.029260478 ubox
26 46 0.062045788 ubox
27 45 0.062422119 ubox
28 41 0.037123417 ubox
29 40 0.045967532 ubox
29 42 0.060775132 ubox
30 39 0.046761323 ubox
30 41 0.059317105 ubox
31 54 0.012065298 ubox
32 40 0.065170869 ubox
32 41 0.039077970 ubox
32 42 0.485006736 ubox
32 47 0.024532771 ubox
32 53 0.012914417 ubox
33 39 0.065443877 ubox
33 40 0.045554207 ubox
33 41 0.487238174 ubox
33 42 0.032628303 ubox
33 46 0.024533983 ubox
33 47 0.007698479 ubox
34 39 0.028204300 ubox
34 40 0.488111482 ubox
34 41 0.023404813 ubox
34 42 0.177900959 ubox
34 46 0.007648398 ubox
35 39 0.424755786 ubox
35 41 0.178099624 ubox
36 40 0.174275466 ubox
36 42 0.017827343 ubox
36 47 0.020661493 ubox
37 41 0.011630564 ubox
37 46 0.020673629 ubox
39 45 0.008734187 ubox
39 50 0.003551254 ubox
39 52 0.065284536 ubox
40 44 0.009793395 ubox
40 49 0.004665087 ubox
40 51 0.071743289 ubox
41 48 0.004416638 ubox
41 50 0.071722081 ubox
41 52 0.003544639 ubox
42 49 0.071490617 ubox
42 51 0.003949352 ubox
2 53 0.9500000 lbox
3 52 0.9500000 lbox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
13 42 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
showpage
end
%%EOF
