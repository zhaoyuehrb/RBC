%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAACCGGAAGUAGACGUACCUCACGGAAGCCGGCUUUGGCCCUGCGGCUGCUACCGUCGCCGCGGAGAAAUUGUUGGAUCUGGCAGUCUAGGAAUGAAUCUCCUCUCAGCCUUUAAGCUCACCUGGUCAGAAUCCUUGGAUGAGCCUGUGGGACCGUUCCUCCUAGCCCGGUGGUUUGGAACCAGUGGCUUUGGGACUGUAAGAGG\
) } def
/len { sequence length } bind def

/coor [
[-0.92206448 201.74423218]
[-12.10931015 211.73649597]
[-26.97808647 213.71627808]
[-40.39015198 206.99940491]
[-47.71067047 193.90702820]
[-46.40973282 178.96321106]
[-53.74642944 192.04652405]
[-61.08312225 205.12982178]
[-68.32128143 218.26789856]
[-75.46049500 231.46000671]
[-75.22389221 247.27944946]
[-88.08615875 254.79020691]
[-95.22537231 267.98229980]
[-102.36457825 281.17440796]
[-101.37207794 297.54348755]
[-115.19923401 306.36062622]
[-129.62185669 298.55551147]
[-129.80319214 282.15734863]
[-115.55668640 274.03521729]
[-108.41748047 260.84310913]
[-101.27826691 247.65098572]
[-102.02550507 232.77514648]
[-88.65259552 224.32080078]
[-81.51338959 211.12869263]
[-81.09445953 203.74874878]
[-74.16642761 197.79313660]
[-66.82973480 184.70982361]
[-59.49304199 171.62652588]
[-62.96309662 164.97755432]
[-77.94950867 164.33921814]
[-69.90321350 151.67962646]
[-73.37326813 145.03067017]
[-88.30172729 143.56742859]
[-103.23018646 142.10418701]
[-118.15864563 140.64093018]
[-133.08711243 139.17768860]
[-139.67753601 152.80822754]
[-150.51342773 163.34176636]
[-164.27349854 169.52082825]
[-179.28907776 170.61724854]
[-193.74650574 166.51791382]
[-205.90611267 157.73620605]
[-214.31159973 145.34762573]
[-217.96446228 130.85826111]
[-232.89292908 129.39500427]
[-247.82139587 127.93176270]
[-262.74984741 126.46852112]
[-277.67831421 125.00527191]
[-292.60678101 123.54203033]
[-307.53521729 122.07878876]
[-322.02435303 128.43298340]
[-333.93615723 119.49104309]
[-348.86462402 118.02780151]
[-363.56713867 125.29191589]
[-377.05731201 115.96735382]
[-375.45758057 99.64642334]
[-360.41363525 93.11869049]
[-347.40136719 103.09933472]
[-332.47290039 104.56258392]
[-319.05157471 98.10372925]
[-306.07199097 107.15032959]
[-291.14352417 108.61357117]
[-276.21505737 110.07681274]
[-261.28659058 111.54006195]
[-246.35813904 113.00330353]
[-231.42968750 114.46655273]
[-216.50122070 115.92979431]
[-210.10449219 102.42546082]
[-199.45349121 91.90474701]
[-185.82017517 85.65117645]
[-170.84194946 84.43704987]
[-156.32502747 88.42815399]
[-144.02661133 97.16139221]
[-135.44224548 109.59844971]
[-131.62387085 124.24922943]
[-116.69540405 125.71247864]
[-101.76694489 127.17572021]
[-86.83848572 128.63896179]
[-71.91002655 130.10220337]
[-46.28105545 133.97274780]
[-35.44703674 150.14930725]
[-21.62142181 144.33102417]
[-7.79580593 138.51275635]
[0.93383598 126.44450378]
[16.65474510 128.22315979]
[30.48036194 122.40487671]
[44.30597687 116.58660126]
[58.13159180 110.76832581]
[71.95720673 104.95005035]
[85.78282928 99.13177490]
[88.92498779 86.27767181]
[103.17753601 79.21715546]
[112.74237061 67.66233063]
[122.30720520 56.10750961]
[131.87203979 44.55268860]
[141.43687439 32.99786377]
[151.00170898 21.44303894]
[160.56654358 9.88821602]
[158.43984985 0.69927990]
[160.74635315 -8.30421734]
[166.84596252 -15.13351250]
[175.27561951 -18.34047508]
[184.09873962 -17.32370758]
[194.17472839 -28.43560791]
[204.25071716 -39.54750824]
[214.32672119 -50.65940857]
[214.47773743 -63.55771255]
[223.10011292 -72.60554504]
[235.17604065 -73.32815552]
[245.41792297 -84.28735352]
[255.65980530 -95.24654388]
[240.67114258 -94.66336060]
[228.73701477 -103.75052643]
[225.31242371 -118.35437012]
[231.96273804 -131.79957581]
[245.64813232 -137.94041443]
[260.11309814 -133.96998596]
[268.74581909 -121.70311737]
[267.60009766 -106.74636078]
[278.93634033 -116.56926727]
[290.27258301 -126.39218140]
[301.60882568 -136.21508789]
[312.94506836 -146.03800964]
[324.20715332 -155.94583130]
[335.39447021 -165.93803406]
[340.74664307 -183.55647278]
[358.05224609 -186.46495056]
[369.08810425 -196.62416077]
[368.18945312 -212.23590088]
[377.57745361 -224.74188232]
[392.81939697 -228.23715210]
[406.71853638 -221.07135010]
[412.71206665 -206.62796021]
[407.97006226 -191.72671509]
[394.73153687 -183.40350342]
[379.24734497 -185.58830261]
[368.21148682 -175.42909241]
[367.39813232 -163.35893250]
[358.28576660 -154.80479431]
[345.38668823 -154.75071716]
[334.19937134 -144.75851440]
[331.30432129 -137.95721436]
[322.76797485 -134.70176697]
[311.43173218 -124.87884521]
[300.09548950 -115.05593872]
[288.75924683 -105.23302460]
[277.42300415 -95.41011810]
[266.61898804 -85.00466919]
[256.37710571 -74.04547119]
[246.13523865 -63.08628082]
[243.09678650 -45.80300522]
[225.43861389 -40.58341599]
[215.36262512 -29.47151375]
[205.28662109 -18.35961342]
[195.21063232 -7.24771309]
[192.62542725 13.22782898]
[172.12136841 19.45305061]
[162.55653381 31.00787354]
[152.99169922 42.56269836]
[143.42686462 54.11751938]
[133.86203003 65.67234802]
[124.29719543 77.22716522]
[114.73236084 88.78199005]
[116.08336639 103.72103119]
[127.56597900 113.37243652]
[145.76678467 116.16275024]
[151.10848999 132.87831116]
[162.73487854 142.35603333]
[174.36126709 151.83374023]
[182.99159241 154.83114624]
[186.08976746 161.54235840]
[197.57238770 171.19375610]
[213.11489868 174.15020752]
[217.87933350 188.26223755]
[229.36193848 197.91365051]
[240.84455872 207.56504822]
[252.32716370 217.21646118]
[263.80978394 226.86785889]
[279.82513428 232.43067932]
[278.91320801 249.36007690]
[262.39297485 253.17031860]
[254.15837097 238.35047913]
[242.67576599 228.69906616]
[231.19314575 219.04766846]
[219.71054077 209.39625549]
[208.22793579 199.74484253]
[193.50671387 197.47874451]
[187.92097473 182.67637634]
[176.43836975 173.02496338]
[164.88354492 163.46012878]
[153.25715637 153.98240662]
[141.63076782 144.50468445]
[129.56771851 145.41737366]
[119.80382538 137.61512756]
[117.91457367 124.85504150]
[106.43196106 115.20363617]
[91.60110474 112.95738983]
[77.77548218 118.77566528]
[63.94987106 124.59394073]
[50.12425232 130.41221619]
[36.29863739 136.23049927]
[22.47302055 142.04876709]
[12.75447845 154.53317261]
[-1.97752964 152.33836365]
[-15.80314541 158.15664673]
[-29.62876129 163.97491455]
[-14.63379002 164.36328125]
[-2.44795775 173.11001587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 28]
[7 27]
[8 26]
[9 24]
[10 23]
[12 21]
[13 20]
[14 19]
[32 79]
[33 78]
[34 77]
[35 76]
[36 75]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[52 59]
[53 58]
[81 206]
[82 205]
[83 204]
[85 202]
[86 201]
[87 200]
[88 199]
[89 198]
[90 197]
[92 163]
[93 162]
[94 161]
[95 160]
[96 159]
[97 158]
[98 157]
[103 155]
[104 154]
[105 153]
[106 152]
[109 150]
[110 149]
[111 148]
[119 147]
[120 146]
[121 145]
[122 144]
[123 143]
[124 141]
[125 140]
[127 137]
[128 136]
[164 196]
[165 195]
[167 192]
[168 191]
[169 190]
[171 189]
[172 188]
[174 186]
[175 185]
[176 184]
[177 183]
[178 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
