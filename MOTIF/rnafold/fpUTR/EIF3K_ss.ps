%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAAGAAGUCACGUGGCAGCCGGAAAGCGUGGCGGCUGCUGCUAGAGCCUUUCCCUUUACCGCACCCAAGGAGCUGGAGCGACAACAACGACGUCGUUUCCGUUUCCACCACCUCUUCCUGUUCCCGUCCUUGAGGACGCCGUGCCGGGUCAGUGUUAGCCUCCAGCCCUGGUUGUGGAAGGCGACAGAAGUC\
) } def
/len { sequence length } bind def

/coor [
[103.82781219 130.67279053]
[101.75061035 115.81704712]
[94.79872894 113.00254059]
[82.63527679 121.78037262]
[70.47181702 130.55821228]
[58.30836105 139.33604431]
[46.14490509 148.11386108]
[45.96406555 163.51754761]
[36.85420609 175.71853638]
[22.47683144 180.16319275]
[8.40754795 175.34725952]
[-3.75590825 184.12509155]
[-6.40835667 199.47442627]
[-18.86887550 208.20312500]
[-33.48577881 205.57983398]
[-45.64923477 214.35766602]
[-57.81269073 223.13549805]
[-69.97615051 231.91333008]
[-82.13960266 240.69116211]
[-94.30306244 249.46899414]
[-106.46652222 258.24682617]
[-118.62997437 267.02465820]
[-130.79342651 275.80249023]
[-142.95689392 284.58032227]
[-141.32061768 299.85180664]
[-147.55398560 313.88891602]
[-159.98022461 322.91577148]
[-175.25675964 324.50415039]
[-189.27427673 318.22683716]
[-198.26213074 305.77233887]
[-199.80262756 290.49090576]
[-193.48139954 276.49313354]
[-180.99879456 267.54437256]
[-165.71260071 266.05178833]
[-151.73472595 272.41687012]
[-139.57125854 263.63903809]
[-127.40780640 254.86119080]
[-115.24434662 246.08335876]
[-103.08089447 237.30552673]
[-90.91743469 228.52769470]
[-78.75398254 219.74986267]
[-66.59052277 210.97203064]
[-54.42706680 202.19419861]
[-42.26361084 193.41636658]
[-40.14735794 178.71749878]
[-27.93692780 169.64225769]
[-12.53374004 171.96163940]
[-0.37028316 163.18380737]
[-0.50753140 148.31372070]
[8.24113560 136.06935120]
[22.69113541 131.26821899]
[37.36707306 135.95040894]
[49.53052902 127.17257690]
[61.69398880 118.39475250]
[73.85744476 109.61692047]
[86.02089691 100.83908844]
[97.12506866 90.75457001]
[107.03031158 79.49019623]
[116.93555450 68.22582245]
[126.84079742 56.96144104]
[130.16346741 48.43908310]
[136.99620056 45.59753799]
[147.08071899 34.49337006]
[157.16522217 23.38919830]
[167.24974060 12.28502846]
[177.33425903 1.18085885]
[180.88436890 -14.23689938]
[195.16868591 -18.45682526]
[205.25318909 -29.56099510]
[215.33770752 -40.66516495]
[218.79655457 -49.13317108]
[225.67395020 -51.86483765]
[235.93513489 -62.80595016]
[239.52926636 -71.21743011]
[246.44955444 -73.83851624]
[256.88479614 -84.61376190]
[267.32003784 -95.38899994]
[277.75527954 -106.16423798]
[288.19052124 -116.93947601]
[298.62576294 -127.71472168]
[309.06097412 -138.48995972]
[312.86581421 -152.99938965]
[309.06097412 -167.50880432]
[305.25616455 -182.01823425]
[301.45135498 -196.52764893]
[286.75033569 -201.20564270]
[276.92977905 -213.10354614]
[275.12338257 -228.42478943]
[281.90753174 -242.28041077]
[295.11749268 -250.24914551]
[310.53796387 -249.78819275]
[323.24835205 -241.04464722]
[329.19281006 -226.80851746]
[326.47448730 -211.62252808]
[315.96078491 -200.33247375]
[319.76559448 -185.82304382]
[323.57040405 -171.31362915]
[327.37524414 -156.80419922]
[334.10620117 -153.49601746]
[337.72335815 -168.05337524]
[341.34048462 -182.61071777]
[338.56616211 -197.35191345]
[345.04251099 -210.88175964]
[358.26416016 -217.96615601]
[373.11618042 -215.86447144]
[383.85302734 -205.38972473]
[386.32107544 -190.59416199]
[379.56558228 -177.20152283]
[366.19967651 -170.39277649]
[356.88391113 -158.63621521]
[347.56814575 -146.87966919]
[354.29910278 -143.57148743]
[368.11087036 -149.42262268]
[381.92260742 -155.27374268]
[384.02737427 -168.90293884]
[392.52682495 -179.62532043]
[405.11505127 -184.70417786]
[418.46102905 -182.91099548]
[429.08987427 -174.82064819]
[442.99362183 -180.44966125]
[456.89736938 -186.07865906]
[466.78543091 -198.42924500]
[481.48611450 -196.03353882]
[495.38986206 -201.66253662]
[499.24258423 -218.12619019]
[512.01940918 -228.94551086]
[528.56134033 -230.01118469]
[542.34179688 -221.10108948]
[556.15350342 -226.95222473]
[569.96527100 -232.80334473]
[583.77703857 -238.65447998]
[597.58874512 -244.50559998]
[607.03009033 -257.91433716]
[623.33648682 -256.17300415]
[629.73339844 -241.07293701]
[619.64019775 -228.14779663]
[603.43988037 -230.69386292]
[589.62817383 -224.84272766]
[575.81640625 -218.99160767]
[562.00463867 -213.14047241]
[548.19293213 -207.28935242]
[546.39794922 -194.05288696]
[538.22888184 -183.34788513]
[525.73632812 -178.03796387]
[512.14447021 -179.60978699]
[501.01885986 -187.75878906]
[487.11511230 -182.12979126]
[478.22155762 -170.18182373]
[462.52639771 -172.17491150]
[448.62261963 -166.54591370]
[434.71887207 -160.91690063]
[431.27502441 -144.87226868]
[418.82458496 -133.92892456]
[402.13958740 -132.54473877]
[387.77374268 -141.46200562]
[373.96197510 -135.61087036]
[360.15023804 -129.75975037]
[353.13555908 -124.50024414]
[345.49642944 -121.41531372]
[337.84133911 -120.47743988]
[330.72509766 -121.50077057]
[324.61001587 -124.16610718]
[319.83624268 -128.05471802]
[309.40100098 -117.27947998]
[298.96575928 -106.50424194]
[288.53051758 -95.72900391]
[278.09527588 -84.95375824]
[267.66003418 -74.17852020]
[257.22479248 -63.40327835]
[246.87625122 -52.54475403]
[236.61505127 -41.60364532]
[226.44187927 -30.58065033]
[216.35736084 -19.47648048]
[206.27284241 -8.37231064]
[203.44404602 6.25120211]
[188.43843079 11.26537228]
[178.35391235 22.36954308]
[168.26939392 33.47371292]
[158.18489075 44.57788086]
[148.10037231 55.68205261]
[138.10517883 66.86668396]
[128.19993591 78.13105774]
[118.29468536 89.39543915]
[108.38945007 100.65981293]
[124.63416290 107.66242981]
[137.37368774 121.62952423]
[140.00471497 136.39697266]
[142.63574219 151.16442871]
[153.60739136 163.35275269]
[148.28118896 178.86285400]
[132.13627625 181.73930359]
[121.78115845 169.02302551]
[127.86828613 153.79545593]
[125.23725891 139.02799988]
[122.60623169 124.26055145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 56]
[4 55]
[5 54]
[6 53]
[7 52]
[11 48]
[12 47]
[15 44]
[16 43]
[17 42]
[18 41]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[57 184]
[58 183]
[59 182]
[60 181]
[62 180]
[63 179]
[64 178]
[65 177]
[66 176]
[68 174]
[69 173]
[70 172]
[72 171]
[73 170]
[75 169]
[76 168]
[77 167]
[78 166]
[79 165]
[80 164]
[81 163]
[82 98]
[83 97]
[84 96]
[85 95]
[112 157]
[113 156]
[114 155]
[119 151]
[120 150]
[121 149]
[123 147]
[124 146]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
[186 195]
[187 194]
[188 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
