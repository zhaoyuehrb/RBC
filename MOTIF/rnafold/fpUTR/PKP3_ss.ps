%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAGGCUGGCUGGGCGGGGACUUCAGGGAGAGGGCCUCGAGGGACAGGACGUGAAGAUAGUUGGGUUUGGAGGCGGCCGCCAGGCCCAGGCCCGGUGGACCUGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[106.33507538 325.50030518]
[105.06298828 310.55435181]
[103.79089355 295.60839844]
[100.03305817 289.11581421]
[102.70041656 280.22244263]
[101.85179138 265.24649048]
[101.00316620 250.27050781]
[88.39818573 242.38049316]
[82.78984070 228.41587830]
[86.52341461 213.65397644]
[98.37029266 203.80725098]
[97.52166748 188.83128357]
[96.67304230 173.85530090]
[95.82440948 158.87933350]
[94.97578430 143.90335083]
[94.12715912 128.92738342]
[93.27853394 113.95140076]
[82.74724579 103.27001953]
[67.78478241 102.20955658]
[52.82231522 101.14909363]
[37.85984802 100.08863068]
[23.54719734 106.83093262]
[11.39877987 98.21320343]
[-3.56368732 97.15274048]
[-18.52615356 96.09227753]
[-33.48862076 95.03181458]
[-46.49992752 104.41719818]
[-61.91070175 99.95764923]
[-67.89911652 85.07415771]
[-59.87137604 71.18405914]
[-43.98567200 68.94264984]
[-32.42815781 80.06934357]
[-17.46569061 81.12980652]
[-2.50322366 82.19026947]
[12.45924282 83.25074005]
[25.70167732 76.43258667]
[38.92031097 85.12615967]
[53.88277817 86.18662262]
[68.84524536 87.24708557]
[83.80770874 88.30755615]
[69.45057678 83.96328735]
[56.63689804 76.16522980]
[46.18168640 65.40937042]
[38.74993896 52.37982178]
[34.81433868 37.90532303]
[34.62521362 22.90651703]
[38.19459152 8.33738708]
[45.29544449 -4.87540627]
[55.47612762 -15.89147282]
[68.08910370 -24.01014328]
[82.33213806 -28.71503639]
[97.29930878 -29.70689964]
[112.03864288 -26.92264748]
[125.61264801 -20.53936958]
[137.15797424 -10.96307087]
[145.94027710 1.19715726]
[151.40097046 15.16787052]
[153.19273376 30.06047249]
[151.20158386 44.92773056]
[145.55419922 58.82402420]
[136.60974121 70.86548615]
[124.93714905 80.28623199]
[111.28069305 86.48648071]
[125.35173035 81.28974915]
[139.42276001 76.09301758]
[153.49378967 70.89627838]
[167.56481934 65.69954681]
[181.63586426 60.50281143]
[195.70689392 55.30607605]
[209.77792358 50.10934448]
[223.84895325 44.91260910]
[237.91998291 39.71587372]
[248.18492126 27.67669868]
[262.80456543 30.52546883]
[276.87557983 25.32873535]
[289.63903809 14.16940212]
[303.89553833 23.34483910]
[299.02526855 39.58419800]
[282.07232666 39.39976883]
[268.00128174 44.59650040]
[258.74279785 56.26397324]
[243.11671448 53.78690720]
[229.04568481 58.98364258]
[214.97465515 64.18037415]
[200.90362549 69.37711334]
[186.83259583 74.57384491]
[172.76156616 79.77057648]
[158.69052124 84.96731567]
[144.61949158 90.16404724]
[130.54846191 95.36077881]
[116.47743225 100.55751801]
[108.25450897 113.10277557]
[109.10313416 128.07875061]
[109.95175934 143.05473328]
[110.80039215 158.03070068]
[111.64901733 173.00668335]
[112.49764252 187.98265076]
[113.34626770 202.95863342]
[126.22967529 211.40397644]
[131.60697937 225.64961243]
[127.61211395 240.15840149]
[115.97914124 249.42187500]
[116.82776642 264.39785767]
[117.67639160 279.37384033]
[118.73685455 294.33630371]
[120.00894928 309.28225708]
[121.28103638 324.22821045]
[131.09434509 337.36712646]
[124.37464142 352.32632446]
[108.03456879 353.71707153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 107]
[2 106]
[3 105]
[5 104]
[6 103]
[7 102]
[11 98]
[12 97]
[13 96]
[14 95]
[15 94]
[16 93]
[17 92]
[18 40]
[19 39]
[20 38]
[21 37]
[23 35]
[24 34]
[25 33]
[26 32]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[74 80]
[75 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
