%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAB11FIP1)
} def

/sequence { (\
GUGGAGGCCGCCAGUCGCGGCGAUCUUCUCCUCGCUUCUGGAGUGUUAUCGUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.020807339 ubox
1 11 0.221327641 ubox
1 15 0.007707706 ubox
1 18 0.290760082 ubox
1 35 0.029458481 ubox
1 49 0.011428427 ubox
1 52 0.004903310 ubox
1 55 0.741577701 ubox
2 7 0.020712252 ubox
2 10 0.222225349 ubox
2 13 0.097580384 ubox
2 17 0.290561373 ubox
2 34 0.028570068 ubox
2 40 0.010778502 ubox
2 48 0.012481154 ubox
2 51 0.018505558 ubox
2 54 0.744571391 ubox
3 9 0.224253331 ubox
3 12 0.109196846 ubox
3 16 0.289036092 ubox
3 18 0.020654877 ubox
3 25 0.104608289 ubox
3 26 0.226677019 ubox
3 27 0.011966665 ubox
3 28 0.236404359 ubox
3 29 0.030745274 ubox
3 30 0.005799373 ubox
3 31 0.127459996 ubox
3 33 0.013187522 ubox
3 38 0.004259505 ubox
3 39 0.017493389 ubox
3 47 0.010642690 ubox
3 50 0.025542829 ubox
3 53 0.743491984 ubox
3 56 0.079151918 ubox
4 8 0.220648869 ubox
4 11 0.109018507 ubox
4 15 0.280534470 ubox
4 16 0.022058494 ubox
4 24 0.101180307 ubox
4 25 0.261782909 ubox
4 26 0.006585733 ubox
4 27 0.265254337 ubox
4 28 0.044961627 ubox
4 30 0.128303303 ubox
4 31 0.003396456 ubox
4 32 0.005956303 ubox
4 33 0.009139456 ubox
4 37 0.004281950 ubox
4 38 0.018160868 ubox
4 46 0.007022556 ubox
4 47 0.043233924 ubox
4 49 0.020104354 ubox
4 50 0.050326586 ubox
4 52 0.632532694 ubox
4 53 0.068651264 ubox
4 55 0.079711137 ubox
5 15 0.025813124 ubox
5 24 0.259549488 ubox
5 26 0.271588738 ubox
5 27 0.044959814 ubox
5 29 0.128179176 ubox
5 32 0.010258778 ubox
5 36 0.004312797 ubox
5 37 0.018147671 ubox
5 46 0.050515315 ubox
5 47 0.013983588 ubox
5 49 0.049314390 ubox
5 52 0.077446735 ubox
6 12 0.281717971 ubox
6 16 0.054895075 ubox
6 25 0.272582201 ubox
6 26 0.044004288 ubox
6 28 0.127760346 ubox
6 31 0.010485387 ubox
6 35 0.004321116 ubox
6 36 0.018114910 ubox
6 46 0.013683113 ubox
6 47 0.030644709 ubox
6 50 0.462094729 ubox
6 53 0.054921393 ubox
6 56 0.017626463 ubox
7 11 0.277279820 ubox
7 15 0.058772480 ubox
7 18 0.044067959 ubox
7 21 0.858340525 ubox
7 24 0.229503794 ubox
7 25 0.042181767 ubox
7 26 0.006698581 ubox
7 27 0.044474627 ubox
7 30 0.007700374 ubox
7 35 0.018059073 ubox
7 44 0.057732616 ubox
7 46 0.054765716 ubox
7 49 0.108787744 ubox
7 52 0.033510450 ubox
7 55 0.016381780 ubox
8 14 0.059509602 ubox
8 17 0.043462863 ubox
8 20 0.869881406 ubox
8 34 0.017938861 ubox
8 43 0.058788451 ubox
8 45 0.056803238 ubox
8 51 0.031735182 ubox
9 17 0.009164686 ubox
9 19 0.870700628 ubox
9 22 0.261962834 ubox
9 45 0.079490055 ubox
9 51 0.006462276 ubox
10 16 0.011565848 ubox
10 18 0.871693221 ubox
10 21 0.262977038 ubox
10 44 0.070216617 ubox
10 46 0.020738603 ubox
10 50 0.007856235 ubox
11 17 0.870636961 ubox
11 20 0.262993696 ubox
11 41 0.127243692 ubox
11 43 0.045503497 ubox
11 45 0.016880633 ubox
12 19 0.262781647 ubox
12 40 0.135170667 ubox
12 45 0.023547554 ubox
13 39 0.135294595 ubox
13 44 0.025278602 ubox
14 38 0.135262231 ubox
14 55 0.053025662 ubox
15 41 0.021146231 ubox
15 42 0.025162619 ubox
15 54 0.052546981 ubox
16 34 0.013480818 ubox
16 40 0.022839679 ubox
16 41 0.024338058 ubox
17 33 0.013563709 ubox
17 35 0.132652874 ubox
17 39 0.023664425 ubox
17 52 0.023093576 ubox
18 34 0.132694760 ubox
18 40 0.008637827 ubox
18 51 0.023401548 ubox
19 31 0.019905979 ubox
19 32 0.007124183 ubox
19 33 0.131641103 ubox
19 36 0.038380493 ubox
19 38 0.004939649 ubox
19 39 0.004609424 ubox
19 50 0.023394192 ubox
19 53 0.388337802 ubox
19 56 0.007417229 ubox
20 30 0.021139655 ubox
20 31 0.042675671 ubox
20 32 0.119562843 ubox
20 35 0.040622639 ubox
20 49 0.022211479 ubox
20 52 0.391969066 ubox
20 55 0.007170337 ubox
21 34 0.040755467 ubox
21 45 0.003333669 ubox
21 51 0.414248479 ubox
22 28 0.048241069 ubox
22 30 0.129614251 ubox
22 33 0.041642867 ubox
22 44 0.008387133 ubox
22 47 0.239628330 ubox
22 50 0.740888040 ubox
22 53 0.069567371 ubox
23 27 0.042910170 ubox
23 29 0.124405584 ubox
23 32 0.041107906 ubox
23 44 0.016596216 ubox
23 46 0.251338549 ubox
23 49 0.742610169 ubox
23 52 0.069569021 ubox
24 42 0.003187944 ubox
24 43 0.005824366 ubox
24 45 0.244916043 ubox
24 48 0.707645760 ubox
24 51 0.066985618 ubox
25 41 0.003405496 ubox
25 43 0.027728544 ubox
26 40 0.003340267 ubox
26 42 0.027242411 ubox
26 43 0.009451036 ubox
27 41 0.026809299 ubox
27 42 0.008745330 ubox
28 40 0.026800926 ubox
28 41 0.008568864 ubox
28 43 0.938772895 ubox
29 40 0.007667187 ubox
29 42 0.971007209 ubox
30 41 0.974577542 ubox
31 40 0.974507879 ubox
31 41 0.005995438 ubox
31 43 0.066352893 ubox
32 40 0.004843388 ubox
32 41 0.014550027 ubox
32 42 0.071979384 ubox
33 40 0.019729455 ubox
33 41 0.072447230 ubox
33 45 0.137067880 ubox
34 39 0.019030308 ubox
34 44 0.140995524 ubox
34 46 0.005936524 ubox
35 41 0.007347518 ubox
35 43 0.141307908 ubox
35 45 0.006201266 ubox
36 40 0.006736910 ubox
36 42 0.140280653 ubox
37 41 0.126413622 ubox
37 42 0.003462593 ubox
39 51 0.003201904 ubox
39 54 0.007089323 ubox
40 50 0.004014745 ubox
40 53 0.007903100 ubox
40 56 0.007125073 ubox
41 50 0.023543315 ubox
41 52 0.005620910 ubox
41 53 0.013608648 ubox
41 55 0.006763610 ubox
42 49 0.023489959 ubox
42 52 0.013645812 ubox
43 49 0.006591851 ubox
43 52 0.007126202 ubox
43 55 0.231050638 ubox
44 48 0.010490175 ubox
44 51 0.068510654 ubox
44 54 0.236417604 ubox
45 50 0.095891504 ubox
45 52 0.006578477 ubox
45 53 0.237956811 ubox
45 55 0.029123022 ubox
46 51 0.034321396 ubox
46 54 0.028245635 ubox
1 55 0.9500000 lbox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
7 21 0.9500000 lbox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
showpage
end
%%EOF
