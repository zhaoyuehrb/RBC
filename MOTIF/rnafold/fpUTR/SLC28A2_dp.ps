%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC28A2)
} def

/sequence { (\
UUUCAGUCCUUCACUGAGGAGCCAGAGGGAAUCAAUUCCACAAGCUGGGUUGAGGAGAACAGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.012240109 ubox
1 19 0.155985005 ubox
1 20 0.017144743 ubox
1 21 0.005555840 ubox
1 26 0.005363598 ubox
1 27 0.003497828 ubox
1 28 0.009837472 ubox
1 31 0.003425503 ubox
1 35 0.003985250 ubox
1 54 0.003930620 ubox
1 55 0.059649653 ubox
1 56 0.009183988 ubox
1 57 0.027393562 ubox
1 58 0.053231774 ubox
1 59 0.024528883 ubox
1 62 0.031626129 ubox
1 63 0.035429410 ubox
1 64 0.051846197 ubox
1 65 0.163175929 ubox
2 17 0.010693293 ubox
2 18 0.268871190 ubox
2 19 0.014002630 ubox
2 20 0.005473483 ubox
2 25 0.005743635 ubox
2 26 0.004368304 ubox
2 27 0.013738781 ubox
2 30 0.003899633 ubox
2 31 0.004409791 ubox
2 34 0.004469867 ubox
2 35 0.008143613 ubox
2 53 0.003670224 ubox
2 54 0.075683923 ubox
2 55 0.007767637 ubox
2 56 0.033471633 ubox
2 57 0.057393202 ubox
2 58 0.028981443 ubox
2 59 0.140918710 ubox
2 61 0.033610262 ubox
2 62 0.042987014 ubox
2 63 0.054251886 ubox
2 64 0.277746767 ubox
2 65 0.137685376 ubox
3 17 0.301481534 ubox
3 18 0.006381617 ubox
3 19 0.003406595 ubox
3 24 0.005325716 ubox
3 25 0.004322032 ubox
3 26 0.015178043 ubox
3 29 0.003893880 ubox
3 30 0.004669187 ubox
3 34 0.008762429 ubox
3 48 0.005799612 ubox
3 53 0.081324628 ubox
3 54 0.004083817 ubox
3 55 0.034001244 ubox
3 56 0.057803088 ubox
3 57 0.028241350 ubox
3 58 0.165464817 ubox
3 61 0.040474518 ubox
3 62 0.048108019 ubox
3 63 0.288277139 ubox
3 64 0.211705787 ubox
4 16 0.305029457 ubox
4 25 0.015305853 ubox
4 28 0.003885485 ubox
4 29 0.004616082 ubox
4 47 0.006702665 ubox
4 52 0.081970070 ubox
4 54 0.034212349 ubox
4 55 0.057687870 ubox
4 57 0.167180446 ubox
4 62 0.290847884 ubox
4 63 0.217772642 ubox
5 15 0.304992609 ubox
5 46 0.006688645 ubox
5 51 0.079043011 ubox
6 14 0.304985402 ubox
6 22 0.010997264 ubox
6 32 0.008593041 ubox
6 45 0.006646074 ubox
6 50 0.059531289 ubox
6 60 0.315678785 ubox
7 13 0.292437823 ubox
7 20 0.118921121 ubox
7 21 0.007101482 ubox
7 29 0.008076621 ubox
7 30 0.095334159 ubox
7 31 0.007106158 ubox
7 44 0.005380294 ubox
7 49 0.016837650 ubox
7 53 0.007505904 ubox
7 56 0.272906687 ubox
7 58 0.201143707 ubox
7 59 0.268955680 ubox
7 63 0.014251646 ubox
7 64 0.766305310 ubox
8 19 0.131896838 ubox
8 28 0.010688732 ubox
8 29 0.102581233 ubox
8 48 0.015300902 ubox
8 49 0.018515399 ubox
8 52 0.007414041 ubox
8 55 0.288177683 ubox
8 57 0.249405220 ubox
8 62 0.018256633 ubox
8 63 0.819167110 ubox
9 18 0.132088003 ubox
9 19 0.018425670 ubox
9 21 0.016863835 ubox
9 27 0.010750746 ubox
9 28 0.102613336 ubox
9 47 0.015018234 ubox
9 48 0.017291363 ubox
9 54 0.288126978 ubox
9 55 0.257584138 ubox
9 57 0.209297738 ubox
9 62 0.818892057 ubox
9 63 0.017044487 ubox
9 65 0.016900101 ubox
10 17 0.129918595 ubox
10 18 0.019398483 ubox
10 20 0.017707747 ubox
10 21 0.005707265 ubox
10 26 0.010539494 ubox
10 27 0.102421853 ubox
10 29 0.003255107 ubox
10 30 0.005297794 ubox
10 47 0.016684803 ubox
10 53 0.277950644 ubox
10 54 0.257622099 ubox
10 56 0.202272396 ubox
10 57 0.090405362 ubox
10 58 0.038283098 ubox
10 59 0.319399684 ubox
10 61 0.719527695 ubox
10 62 0.016083085 ubox
10 64 0.016969377 ubox
10 65 0.010674061 ubox
11 16 0.116264527 ubox
11 17 0.026153517 ubox
11 19 0.018702827 ubox
11 20 0.012388455 ubox
11 25 0.006134453 ubox
11 26 0.099552657 ubox
11 28 0.005070871 ubox
11 29 0.006205707 ubox
11 30 0.003881243 ubox
11 52 0.262727572 ubox
11 53 0.268087056 ubox
11 55 0.190120848 ubox
11 56 0.190556235 ubox
11 57 0.055976173 ubox
11 58 0.667790216 ubox
11 61 0.016519516 ubox
11 63 0.016553593 ubox
11 64 0.017528470 ubox
12 16 0.030658661 ubox
12 18 0.023828238 ubox
12 19 0.014723882 ubox
12 25 0.094550392 ubox
12 27 0.007431867 ubox
12 28 0.006640966 ubox
12 29 0.003955348 ubox
12 47 0.003960053 ubox
12 52 0.278033648 ubox
12 54 0.181379910 ubox
12 55 0.199542017 ubox
12 57 0.683302943 ubox
12 62 0.016123398 ubox
12 63 0.018293828 ubox
13 46 0.004085384 ubox
13 50 0.204032768 ubox
13 51 0.219978087 ubox
14 21 0.091825055 ubox
14 25 0.045338127 ubox
14 44 0.009380780 ubox
14 48 0.017354747 ubox
14 49 0.224713782 ubox
14 54 0.343884940 ubox
14 55 0.626881343 ubox
14 57 0.380440487 ubox
14 62 0.019699917 ubox
15 20 0.091340763 ubox
15 24 0.060354791 ubox
15 34 0.006659080 ubox
15 42 0.014603861 ubox
15 43 0.008102738 ubox
15 47 0.017896213 ubox
15 48 0.207014929 ubox
15 52 0.024033244 ubox
15 53 0.335289241 ubox
15 54 0.621431894 ubox
15 56 0.379627995 ubox
15 61 0.019838168 ubox
16 23 0.062385686 ubox
16 33 0.007252511 ubox
16 41 0.015921438 ubox
16 46 0.003948120 ubox
16 51 0.018878166 ubox
16 60 0.019803668 ubox
17 32 0.007229232 ubox
17 46 0.191463306 ubox
17 50 0.014841601 ubox
17 51 0.210050546 ubox
18 33 0.004465399 ubox
18 39 0.020580668 ubox
18 45 0.178964560 ubox
18 46 0.019691636 ubox
18 50 0.135875300 ubox
18 51 0.195641355 ubox
19 32 0.004496809 ubox
19 33 0.013493954 ubox
19 38 0.021114881 ubox
19 45 0.022034056 ubox
19 50 0.120611932 ubox
19 51 0.837954503 ubox
20 32 0.013482081 ubox
20 37 0.020971974 ubox
20 46 0.097435019 ubox
20 50 0.896924478 ubox
20 51 0.100545602 ubox
21 36 0.018754925 ubox
21 45 0.126134729 ubox
21 50 0.110847494 ubox
22 28 0.013476773 ubox
22 29 0.033955241 ubox
22 44 0.130857845 ubox
22 48 0.962595525 ubox
22 49 0.092816544 ubox
22 55 0.006071862 ubox
22 63 0.042329809 ubox
23 27 0.014300200 ubox
23 28 0.033983221 ubox
23 47 0.965182905 ubox
23 48 0.068730559 ubox
23 54 0.006087922 ubox
23 62 0.042388772 ubox
24 46 0.966902571 ubox
25 33 0.017654172 ubox
25 38 0.059377958 ubox
25 45 0.966417859 ubox
26 32 0.017535445 ubox
26 37 0.059413549 ubox
26 46 0.013842176 ubox
27 33 0.004049924 ubox
27 36 0.058423399 ubox
27 38 0.006024468 ubox
27 39 0.146659905 ubox
27 45 0.014357230 ubox
28 37 0.005966179 ubox
28 38 0.146749359 ubox
28 39 0.979072823 ubox
29 36 0.004538541 ubox
29 37 0.144683938 ubox
29 38 0.979512451 ubox
30 36 0.138941865 ubox
30 37 0.963272762 ubox
31 36 0.758359888 ubox
32 53 0.103590758 ubox
32 56 0.003772562 ubox
32 58 0.007885033 ubox
32 63 0.003556418 ubox
32 64 0.011736903 ubox
33 52 0.109875873 ubox
33 55 0.003983461 ubox
33 57 0.008337248 ubox
33 62 0.005573393 ubox
33 63 0.012548273 ubox
34 51 0.109789374 ubox
35 50 0.107840934 ubox
36 49 0.083436289 ubox
36 57 0.028145662 ubox
36 65 0.004551306 ubox
37 48 0.049666140 ubox
37 49 0.070438626 ubox
37 56 0.041447117 ubox
37 64 0.006707786 ubox
38 47 0.049135376 ubox
38 48 0.098630414 ubox
38 49 0.009460358 ubox
38 55 0.042568494 ubox
38 63 0.006895914 ubox
39 47 0.098907202 ubox
39 48 0.009610083 ubox
39 54 0.042525885 ubox
39 62 0.006834208 ubox
40 46 0.091750164 ubox
40 50 0.003375305 ubox
41 47 0.008824027 ubox
41 49 0.003517442 ubox
41 52 0.042175268 ubox
42 46 0.007273466 ubox
42 51 0.041975155 ubox
43 50 0.040303471 ubox
43 51 0.007988219 ubox
44 50 0.009428457 ubox
45 49 0.010424957 ubox
45 54 0.005071887 ubox
45 57 0.003554171 ubox
45 62 0.016092462 ubox
45 63 0.004392689 ubox
46 53 0.005075431 ubox
46 56 0.003539980 ubox
46 61 0.016347657 ubox
46 62 0.004344577 ubox
47 60 0.016580980 ubox
49 60 0.168309260 ubox
50 56 0.004181573 ubox
50 57 0.016154469 ubox
50 58 0.009843322 ubox
50 59 0.168396378 ubox
50 62 0.021154014 ubox
50 64 0.004209818 ubox
51 55 0.004277479 ubox
51 56 0.018154458 ubox
51 57 0.011924564 ubox
51 58 0.166661459 ubox
51 61 0.031171245 ubox
51 63 0.004816614 ubox
51 64 0.003658691 ubox
52 60 0.035490841 ubox
7 64 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
11 58 0.9500000 lbox
12 57 0.9500000 lbox
14 55 0.9500000 lbox
15 54 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
showpage
end
%%EOF
