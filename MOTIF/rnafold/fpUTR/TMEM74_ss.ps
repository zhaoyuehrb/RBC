%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGCGCUGCCCACCCGGCGGAGCCGAGCGGCGUGCAGAGGCUACAAGUGCCGUAGCUGGUGAUUGGGGGACUUUCUCCGGGAACCGUGCCGGGAGAGCGCGCGGUGCUGGAGCCGCACCGGGUGGCCGAAGCAGAAGACUUUCCGGAAGCUGCUGGGGGAUGUCUGACUAGCUCUC\
) } def
/len { sequence length } bind def

/coor [
[80.81475830 212.18035889]
[69.89643097 200.75381470]
[70.33930206 184.95573425]
[81.88063049 174.15882874]
[82.14241791 159.16111755]
[82.40420532 144.16339111]
[82.66599274 129.16567993]
[74.45619202 106.14080811]
[84.25497437 90.06922913]
[75.86708069 77.63366699]
[67.47918701 65.19809723]
[59.09129333 52.76253510]
[50.16895294 40.70468521]
[40.72914505 29.04749489]
[31.28934097 17.39030457]
[21.84953499 5.73311567]
[12.40972900 -5.92407370]
[2.96992302 -17.58126259]
[-6.46988297 -29.23845291]
[-16.11169624 -40.72911835]
[-25.95258331 -52.04976273]
[-35.79346848 -63.37040710]
[-45.63435364 -74.69104767]
[-61.16056442 -75.94585419]
[-70.97935486 -87.56678772]
[-69.68740845 -102.36092377]
[-79.52828979 -113.68156433]
[-87.54381561 -118.12161255]
[-89.44003296 -125.28672791]
[-99.08184814 -136.77738953]
[-108.72366333 -148.26806641]
[-118.36547852 -159.75872803]
[-133.16317749 -165.35682678]
[-135.41699219 -180.07992554]
[-145.05880737 -191.57058716]
[-154.70062256 -203.06126404]
[-164.34243774 -214.55192566]
[-173.98425293 -226.04258728]
[-186.10397339 -221.49255371]
[-200.21374512 -223.58871460]
[-212.61608887 -233.03186035]
[-219.50318909 -248.48161316]
[-234.17539978 -251.60028076]
[-248.84762573 -254.71896362]
[-263.51983643 -257.83764648]
[-278.19204712 -260.95629883]
[-292.86425781 -264.07498169]
[-305.07461548 -254.30560303]
[-320.70666504 -254.72216797]
[-332.37939453 -265.12799072]
[-334.58132935 -280.60977173]
[-326.27276611 -293.85748291]
[-311.37673950 -298.61596680]
[-296.92672729 -292.63839722]
[-289.74557495 -278.74719238]
[-275.07336426 -275.62854004]
[-260.40115356 -272.50985718]
[-245.72894287 -269.39117432]
[-231.05673218 -266.27249146]
[-216.38452148 -263.15383911]
[-210.81092834 -268.17230225]
[-222.19183350 -277.94342041]
[-233.57273865 -287.71456909]
[-244.95364380 -297.48568726]
[-258.65429688 -303.59243774]
[-263.87939453 -317.65295410]
[-257.49166870 -331.22488403]
[-243.32647705 -336.15917969]
[-229.88905334 -329.49316406]
[-225.24768066 -315.22903442]
[-216.71969604 -302.88909912]
[-208.19172668 -290.54919434]
[-199.66375732 -278.20925903]
[-194.09016418 -283.22775269]
[-195.65809631 -298.14556885]
[-197.22602844 -313.06338501]
[-198.79394531 -327.98123169]
[-200.36187744 -342.89904785]
[-204.38110352 -351.13363647]
[-201.82466125 -358.09057617]
[-203.13198853 -373.03350830]
[-204.43933105 -387.97644043]
[-205.74665833 -402.91934204]
[-219.11625671 -410.79550171]
[-225.27209473 -425.03927612]
[-221.84715271 -440.17364502]
[-210.15838623 -450.37915039]
[-194.70036316 -451.73156738]
[-181.41699219 -443.71084595]
[-175.41603088 -429.40112305]
[-179.00495911 -414.30477905]
[-190.80374146 -404.22668457]
[-189.49641418 -389.28375244]
[-188.18907166 -374.34085083]
[-186.88172913 -359.39791870]
[-185.44404602 -344.46697998]
[-183.87612915 -329.54916382]
[-182.30819702 -314.63131714]
[-180.74026489 -299.71350098]
[-179.17234802 -284.79565430]
[-155.96041870 -262.05752563]
[-162.49357605 -235.68440247]
[-152.85176086 -224.19374084]
[-143.20994568 -212.70307922]
[-133.56813049 -201.21240234]
[-123.92632294 -189.72174072]
[-109.81827545 -184.94552612]
[-106.87480927 -169.40054321]
[-97.23299408 -157.90988159]
[-87.59117889 -146.41920471]
[-77.94937134 -134.92854309]
[-68.20764923 -123.52245331]
[-58.36676025 -112.20180511]
[-43.53679657 -111.42223358]
[-33.39547348 -100.08168030]
[-34.31370926 -84.53193665]
[-24.47282410 -73.21128845]
[-14.63193893 -61.89064789]
[-4.79105330 -50.57000351]
[-0.14741930 -49.34944153]
[3.76814365 -45.18198395]
[5.18730640 -38.67825699]
[14.62711239 -27.02106857]
[24.06691742 -15.36388016]
[33.50672531 -3.70669031]
[42.94652939 7.95049906]
[52.38633728 19.60768890]
[61.82614136 31.26487732]
[66.12121582 16.89294815]
[79.96764374 11.12437725]
[93.19623566 18.19575882]
[96.09154510 32.91367722]
[86.52719116 44.46889496]
[71.52685547 44.37464142]
[79.91474915 56.81020737]
[88.30264282 69.24577332]
[96.69053650 81.68133545]
[118.08999634 80.94881439]
[133.65475464 104.29679871]
[145.63427734 113.32402802]
[157.61381531 122.35124969]
[169.59335327 131.37847900]
[181.72860718 140.19525146]
[194.01588440 148.79890442]
[206.30316162 157.40254211]
[218.59045410 166.00619507]
[230.87773132 174.60984802]
[243.16500854 183.21348572]
[255.45228577 191.81713867]
[270.97100830 188.82626343]
[284.01223755 197.75386047]
[286.83886719 213.30331421]
[277.77389526 226.24943542]
[262.19540405 228.91149902]
[249.34585571 219.71015930]
[246.84864807 204.10441589]
[234.56135559 195.50076294]
[222.27407837 186.89712524]
[209.98680115 178.29347229]
[197.69952393 169.68983459]
[185.41224670 161.08618164]
[173.12495422 152.48252869]
[168.32397461 152.42163086]
[163.51652527 149.32521057]
[160.56613159 143.35800171]
[148.58659363 134.33078003]
[136.60705566 125.30355835]
[124.62752533 116.27632904]
[117.88657379 119.56411743]
[128.30642700 130.35423279]
[121.26431274 143.59841919]
[106.49221039 140.99362183]
[104.40466309 126.13968658]
[97.66370392 129.42745972]
[97.40191650 144.42518616]
[97.14013672 159.42289734]
[96.87834930 174.42060852]
[108.03583527 185.61373901]
[107.92710114 201.41764832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 177]
[5 176]
[6 175]
[7 174]
[9 137]
[10 136]
[11 135]
[12 134]
[13 128]
[14 127]
[15 126]
[16 125]
[17 124]
[18 123]
[19 122]
[20 119]
[21 118]
[22 117]
[23 116]
[26 113]
[27 112]
[29 111]
[30 110]
[31 109]
[32 108]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[80 95]
[81 94]
[82 93]
[83 92]
[139 168]
[140 167]
[141 166]
[142 165]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
