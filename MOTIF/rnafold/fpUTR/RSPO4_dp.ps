%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RSPO4)
} def

/sequence { (\
GCCCACAGCAGCCCCCGCGCCCGCCGUGCCGCCGCCGGGACGUGGGGCCCUUGGGCCGUCGGGCCGCCUGGGGAGCGCCAGCCCGGAUCCGGCUGCCCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.771968371 ubox
1 12 0.187358773 ubox
1 48 0.011844594 ubox
1 56 0.142722736 ubox
1 64 0.005189295 ubox
1 76 0.003859438 ubox
2 8 0.771434773 ubox
2 11 0.187891313 ubox
2 47 0.010964030 ubox
2 55 0.143237796 ubox
2 63 0.005206309 ubox
2 73 0.003820551 ubox
2 75 0.003821895 ubox
3 46 0.009792626 ubox
3 54 0.143340782 ubox
3 62 0.005206575 ubox
3 72 0.003877160 ubox
3 73 0.003766461 ubox
4 45 0.008430002 ubox
4 53 0.143394394 ubox
4 61 0.005203863 ubox
4 71 0.003877971 ubox
4 72 0.003703464 ubox
5 52 0.140998523 ubox
6 44 0.006248604 ubox
6 53 0.019531078 ubox
6 70 0.005247389 ubox
7 43 0.005774483 ubox
7 51 0.210225094 ubox
7 52 0.032537971 ubox
7 69 0.005254954 ubox
8 18 0.003893259 ubox
8 48 0.024809335 ubox
8 50 0.224444403 ubox
8 51 0.047503755 ubox
8 59 0.004676994 ubox
8 67 0.004210792 ubox
8 68 0.003947790 ubox
8 96 0.008803133 ubox
9 17 0.003896313 ubox
9 42 0.004093206 ubox
9 47 0.018279911 ubox
9 53 0.005865917 ubox
9 58 0.004707232 ubox
9 66 0.005446623 ubox
9 95 0.008823864 ubox
10 51 0.170471191 ubox
10 52 0.016284562 ubox
10 94 0.008818553 ubox
11 18 0.006734918 ubox
11 48 0.868611104 ubox
11 50 0.185803126 ubox
11 51 0.023036059 ubox
11 56 0.004832338 ubox
11 64 0.004950908 ubox
11 93 0.008808343 ubox
12 17 0.006724580 ubox
12 39 0.004490137 ubox
12 47 0.779607228 ubox
12 55 0.004832013 ubox
12 63 0.004952391 ubox
12 92 0.008759764 ubox
13 38 0.004416102 ubox
13 39 0.003901190 ubox
13 46 0.676381853 ubox
13 47 0.622780626 ubox
13 54 0.004815133 ubox
13 62 0.004951636 ubox
13 91 0.008257964 ubox
14 37 0.004333333 ubox
14 38 0.003982113 ubox
14 39 0.003285232 ubox
14 45 0.554221616 ubox
14 46 0.736275790 ubox
14 47 0.003918422 ubox
14 53 0.004792712 ubox
14 61 0.004936804 ubox
15 37 0.004051817 ubox
15 38 0.003304115 ubox
15 44 0.395726367 ubox
15 45 0.832190592 ubox
15 46 0.003270339 ubox
16 37 0.003317850 ubox
16 42 0.053755822 ubox
16 44 0.918067992 ubox
17 35 0.005827670 ubox
17 41 0.053356719 ubox
17 43 0.996327541 ubox
17 48 0.006996131 ubox
18 34 0.005951425 ubox
18 42 0.998174521 ubox
18 47 0.007004454 ubox
19 33 0.005554603 ubox
19 41 0.997752854 ubox
19 48 0.010249651 ubox
20 38 0.016178560 ubox
20 39 0.999052224 ubox
20 46 0.007194020 ubox
20 47 0.010235125 ubox
21 37 0.016178563 ubox
21 38 0.999117432 ubox
21 39 0.019138964 ubox
21 45 0.007298326 ubox
21 46 0.010201256 ubox
22 37 0.999027435 ubox
22 38 0.014903787 ubox
22 44 0.007428003 ubox
22 45 0.010165285 ubox
23 29 0.006330531 ubox
23 32 0.024702643 ubox
23 33 0.005365859 ubox
23 35 0.232943790 ubox
23 36 0.967193584 ubox
23 43 0.007467891 ubox
24 28 0.006646107 ubox
24 31 0.026735627 ubox
24 34 0.322976571 ubox
24 38 0.032135990 ubox
24 42 0.005291257 ubox
25 31 0.069871113 ubox
25 34 0.874207717 ubox
25 37 0.035400904 ubox
25 42 0.011765695 ubox
26 30 0.066895012 ubox
26 32 0.316291729 ubox
26 33 0.856659605 ubox
26 35 0.313012287 ubox
26 36 0.040064291 ubox
26 41 0.012982863 ubox
27 31 0.308784957 ubox
27 34 0.314196002 ubox
27 40 0.012964420 ubox
28 33 0.303606954 ubox
28 35 0.148217955 ubox
29 34 0.147897655 ubox
29 38 0.012997139 ubox
30 37 0.013003873 ubox
31 36 0.012395968 ubox
46 57 0.007956638 ubox
47 56 0.008857927 ubox
48 55 0.008868720 ubox
49 54 0.008836741 ubox
50 100 0.211199456 ubox
51 99 0.152317308 ubox
51 100 0.549394065 ubox
52 99 0.929051446 ubox
53 98 0.989261759 ubox
54 65 0.006558947 ubox
54 97 0.989579565 ubox
55 64 0.006645729 ubox
55 96 0.989597123 ubox
56 63 0.006663907 ubox
56 95 0.988730287 ubox
57 62 0.006687569 ubox
57 95 0.027429458 ubox
58 93 0.993439163 ubox
58 96 0.003407955 ubox
59 86 0.005609244 ubox
59 92 0.993503329 ubox
60 85 0.007065829 ubox
60 91 0.993786102 ubox
61 84 0.007261878 ubox
61 89 0.004103373 ubox
61 90 0.993880682 ubox
61 98 0.109013672 ubox
62 83 0.007271213 ubox
62 88 0.003761084 ubox
62 89 0.993836482 ubox
62 90 0.004171278 ubox
62 94 0.006496121 ubox
62 97 0.109126379 ubox
63 82 0.007275722 ubox
63 88 0.985277005 ubox
63 89 0.005800184 ubox
63 93 0.007424323 ubox
63 96 0.109107721 ubox
64 81 0.007035396 ubox
64 86 0.993319879 ubox
64 92 0.007750885 ubox
64 95 0.108978502 ubox
65 85 0.993395573 ubox
65 91 0.008026991 ubox
66 78 0.005596142 ubox
66 82 0.096132653 ubox
66 84 0.982531168 ubox
66 90 0.008015210 ubox
66 93 0.108893001 ubox
67 77 0.005648644 ubox
67 81 0.074938748 ubox
67 86 0.020399194 ubox
67 92 0.107880105 ubox
68 75 0.005789620 ubox
68 81 0.985651218 ubox
68 85 0.020153410 ubox
68 86 0.023291798 ubox
68 91 0.106205934 ubox
68 92 0.015978524 ubox
68 100 0.006767841 ubox
69 74 0.005872003 ubox
69 80 0.991360417 ubox
69 85 0.029710454 ubox
69 91 0.022123231 ubox
69 99 0.006990360 ubox
70 79 0.991249422 ubox
70 83 0.012517237 ubox
70 84 0.036420441 ubox
70 89 0.039071848 ubox
70 90 0.093855937 ubox
70 98 0.007027752 ubox
71 78 0.989980481 ubox
71 79 0.061693979 ubox
71 82 0.012407910 ubox
71 83 0.036751121 ubox
71 84 0.017480560 ubox
71 88 0.036997298 ubox
71 89 0.093787906 ubox
71 90 0.011751674 ubox
71 97 0.007024696 ubox
72 78 0.071201594 ubox
72 79 0.018887020 ubox
72 82 0.036121173 ubox
72 83 0.018223456 ubox
72 84 0.095995408 ubox
72 88 0.040299583 ubox
72 89 0.011821178 ubox
72 90 0.014881600 ubox
72 96 0.007010001 ubox
73 78 0.019276880 ubox
73 82 0.017842174 ubox
73 83 0.097021227 ubox
73 88 0.011107370 ubox
73 89 0.014935195 ubox
74 88 0.014736804 ubox
74 94 0.006062930 ubox
75 82 0.102240801 ubox
75 93 0.006051093 ubox
76 81 0.102443146 ubox
76 85 0.028117775 ubox
76 92 0.005591537 ubox
77 84 0.027332062 ubox
77 96 0.004710242 ubox
78 86 0.012427997 ubox
78 95 0.003355799 ubox
79 85 0.012457376 ubox
79 95 0.006032426 ubox
80 94 0.006967611 ubox
81 93 0.007000915 ubox
82 92 0.006341626 ubox
83 91 0.005600768 ubox
83 92 0.003537701 ubox
84 91 0.005154818 ubox
85 90 0.006621245 ubox
1 9 0.9500000 lbox
2 8 0.9500000 lbox
13 47 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
52 99 0.9500000 lbox
53 98 0.9500000 lbox
54 97 0.9500000 lbox
55 96 0.9500000 lbox
56 95 0.9500000 lbox
58 93 0.9500000 lbox
59 92 0.9500000 lbox
60 91 0.9500000 lbox
61 90 0.9500000 lbox
62 89 0.9500000 lbox
63 88 0.9500000 lbox
64 86 0.9500000 lbox
65 85 0.9500000 lbox
66 84 0.9500000 lbox
68 81 0.9500000 lbox
69 80 0.9500000 lbox
70 79 0.9500000 lbox
71 78 0.9500000 lbox
showpage
end
%%EOF
