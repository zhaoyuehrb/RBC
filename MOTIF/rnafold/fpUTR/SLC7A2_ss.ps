%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUUCUGCAGCGCGGCCGGCGGGCGCUCCUCUUCGCGGGACCAGCGAGGCGGCGGCCGCUGCUCCAGCGUCCCCCAGCCGCGGGCCCCCGACGCGCUGCAGCCGGCAGCCCACCGCCGCCUUCUUGGCGCGACCCCAACCCAGCCCCAGUCGCCUUCGUCAGACGUCAGA\
) } def
/len { sequence length } bind def

/coor [
[86.55019379 593.84979248]
[78.47561646 580.93774414]
[76.35736847 565.85687256]
[80.56243134 551.22003174]
[90.36225891 539.56311035]
[104.05897522 532.90582275]
[103.51431274 517.91571045]
[102.96965027 502.92556763]
[102.42498016 487.93545532]
[99.57312012 484.06408691]
[99.14703369 478.35186768]
[102.14271545 472.39328003]
[102.14271545 457.39328003]
[102.14271545 442.39328003]
[92.55623627 427.71224976]
[101.84859467 411.83380127]
[101.57621765 396.83627319]
[101.30384064 381.83874512]
[98.02677155 375.18429565]
[101.16517639 366.56698608]
[101.16517639 351.56698608]
[101.16517639 336.56698608]
[101.02897644 321.56759644]
[100.75659943 306.57006836]
[100.48422241 291.57254028]
[97.20715332 284.91809082]
[100.34555817 276.30078125]
[100.34555817 261.30078125]
[100.34555817 246.30079651]
[83.46547699 239.09933472]
[71.37474823 225.22581482]
[66.52142334 207.42210388]
[69.91738892 189.23236084]
[80.92779541 174.29757690]
[97.38913727 165.62672424]
[96.30052185 150.66629028]
[95.21191406 135.70584106]
[94.12329865 120.74539185]
[93.03469086 105.78495026]
[90.47075653 102.85095978]
[89.22869873 98.79206085]
[89.78511810 94.23165131]
[92.31686401 89.98416901]
[92.04448700 74.98664093]
[91.77210236 59.98911667]
[91.49972534 44.99158859]
[83.51311493 31.33418846]
[91.01802826 18.46851730]
[90.74565125 3.47099066]
[90.47327423 -11.52653599]
[90.20089722 -26.52406311]
[89.92852020 -41.52159119]
[89.65614319 -56.51911545]
[89.38376617 -71.51663971]
[89.11138916 -86.51416779]
[88.83901215 -101.51169586]
[88.56663513 -116.50922394]
[75.75978851 -128.40066528]
[75.50264740 -145.53775024]
[87.46678162 -157.33421326]
[86.92211914 -172.32432556]
[86.37745667 -187.31443787]
[85.83278656 -202.30453491]
[85.28812408 -217.29464722]
[84.74346161 -232.28475952]
[76.33097076 -239.25035095]
[73.22415924 -249.49140930]
[76.22299957 -259.53518677]
[84.09863281 -266.11401367]
[84.09863281 -281.11401367]
[75.47615051 -285.73443604]
[69.18200684 -293.14703369]
[66.05812073 -302.29464722]
[66.49821472 -311.89279175]
[70.39868164 -320.61013794]
[77.17889404 -327.25311279]
[85.86724091 -330.92926025]
[86.95585632 -345.88970947]
[88.04446411 -360.85015869]
[89.13307953 -375.81060791]
[90.08580780 -390.78030396]
[90.90258789 -405.75805664]
[91.58332825 -420.74261475]
[92.12799835 -435.73272705]
[92.67266083 -450.72280884]
[84.52025604 -464.95202637]
[92.99967194 -478.98883057]
[109.38800049 -478.39334106]
[116.82634735 -463.77819824]
[107.66277313 -450.17816162]
[107.11810303 -435.18804932]
[106.57344055 -420.19793701]
[109.48329926 -413.37490845]
[105.88033295 -404.94128418]
[105.06356049 -389.96353149]
[107.84904480 -383.08880615]
[104.09352112 -374.72198486]
[103.00491333 -359.76153564]
[101.91629791 -344.80108643]
[100.82769012 -329.84066772]
[115.46428680 -315.61630249]
[114.91231537 -294.92193604]
[99.09863281 -281.11401367]
[99.09863281 -266.11401367]
[109.98554993 -250.15904236]
[99.73356628 -232.82942200]
[100.27822876 -217.83930969]
[100.82289886 -202.84919739]
[101.36756134 -187.85910034]
[101.91222382 -172.86898804]
[102.45689392 -157.87887573]
[113.04198456 -150.49511719]
[117.49762726 -138.17530823]
[113.98149872 -125.35307312]
[103.56416321 -116.78160095]
[103.83654022 -101.78407288]
[104.10891724 -86.78654480]
[104.38129425 -71.78902435]
[104.65367126 -56.79149246]
[104.92604828 -41.79396820]
[105.19842529 -26.79644012]
[105.47080231 -11.79891396]
[105.74317932 3.19861317]
[106.01555634 18.19614029]
[113.98268890 30.78081512]
[106.49725342 44.71921158]
[106.76963043 59.71673584]
[107.04200745 74.71426392]
[107.31438446 89.71179199]
[107.99513245 104.69633484]
[109.08374786 119.65678406]
[110.17235565 134.61723328]
[111.26097107 149.57766724]
[112.34957886 164.53811646]
[123.79225159 167.53819275]
[133.91358948 173.62399292]
[141.90290833 182.29541016]
[147.12387085 192.84571838]
[149.16513062 204.41925049]
[147.87277222 216.08068848]
[143.36178589 226.89076233]
[136.00604248 235.98182678]
[126.40718842 242.62751770]
[115.34555817 246.30079651]
[115.34555817 261.30078125]
[115.34555817 276.30078125]
[115.48175049 291.30017090]
[115.75412750 306.29769897]
[116.02650452 321.29522705]
[119.32086945 329.85412598]
[116.16517639 336.56698608]
[116.16517639 351.56698608]
[116.16517639 366.56698608]
[116.30136871 381.56637573]
[116.57374573 396.56390381]
[116.84612274 411.56143188]
[125.58412170 421.08050537]
[125.48252106 433.60031128]
[117.14271545 442.39328003]
[117.14271545 457.39328003]
[117.14271545 472.39328003]
[117.41509247 487.39080811]
[117.95975494 502.38092041]
[118.50442505 517.37103271]
[119.04908752 532.36114502]
[133.19284058 538.00683594]
[143.81280518 548.92181396]
[149.06904602 563.21490479]
[148.05085754 578.40972900]
[140.93466187 591.87371826]
[128.95336914 601.27416992]
[114.18283081 604.98242188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 165]
[7 164]
[8 163]
[9 162]
[12 161]
[13 160]
[14 159]
[16 156]
[17 155]
[18 154]
[20 153]
[21 152]
[22 151]
[23 149]
[24 148]
[25 147]
[27 146]
[28 145]
[29 144]
[35 134]
[36 133]
[37 132]
[38 131]
[39 130]
[43 129]
[44 128]
[45 127]
[46 126]
[48 124]
[49 123]
[50 122]
[51 121]
[52 120]
[53 119]
[54 118]
[55 117]
[56 116]
[57 115]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[65 106]
[69 104]
[70 103]
[77 100]
[78 99]
[79 98]
[80 97]
[81 95]
[82 94]
[83 92]
[84 91]
[85 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
