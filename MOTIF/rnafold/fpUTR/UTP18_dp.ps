%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UTP18)
} def

/sequence { (\
GCGCAGCGAGGUUCCACGUGAGCGCCUGCGUUUCUCCUCAAACCUAACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.214195105 ubox
1 23 0.011175823 ubox
1 25 0.256194732 ubox
1 29 0.012789878 ubox
1 31 0.817233857 ubox
2 6 0.212798046 ubox
2 8 0.014034354 ubox
2 22 0.011176555 ubox
2 24 0.257031689 ubox
2 28 0.012683736 ubox
2 30 0.894677596 ubox
2 49 0.021675952 ubox
3 7 0.017429771 ubox
3 23 0.257081165 ubox
3 25 0.004592331 ubox
3 27 0.010346597 ubox
3 29 0.900501799 ubox
3 31 0.009730057 ubox
3 48 0.023220428 ubox
4 20 0.006502251 ubox
4 22 0.256761286 ubox
4 24 0.004627846 ubox
4 28 0.900523277 ubox
4 30 0.010111467 ubox
5 19 0.006126532 ubox
5 27 0.899151394 ubox
5 32 0.022144913 ubox
5 38 0.009391299 ubox
5 45 0.029938441 ubox
6 19 0.256382691 ubox
6 23 0.016812143 ubox
6 25 0.356397317 ubox
6 26 0.824127301 ubox
6 29 0.019209252 ubox
6 31 0.026634605 ubox
6 37 0.010033062 ubox
6 44 0.031147143 ubox
7 18 0.257481131 ubox
7 20 0.008291898 ubox
7 22 0.018644881 ubox
7 24 0.502295292 ubox
7 28 0.019230657 ubox
7 30 0.026989993 ubox
7 49 0.018701894 ubox
8 14 0.008216821 ubox
8 17 0.256392905 ubox
8 19 0.007712394 ubox
8 23 0.368750836 ubox
8 27 0.011051110 ubox
8 29 0.026910474 ubox
8 36 0.012423822 ubox
8 39 0.340847189 ubox
8 48 0.020693710 ubox
9 13 0.008389394 ubox
9 27 0.035167586 ubox
9 35 0.012429867 ubox
9 38 0.341242837 ubox
9 45 0.067334120 ubox
10 26 0.040270131 ubox
10 34 0.012408199 ubox
10 37 0.341339437 ubox
10 44 0.069657026 ubox
11 17 0.197010035 ubox
11 19 0.022007097 ubox
11 23 0.819411991 ubox
11 25 0.040802450 ubox
11 33 0.011061669 ubox
11 36 0.341118046 ubox
11 43 0.069665007 ubox
12 16 0.177621648 ubox
12 18 0.026767253 ubox
12 21 0.068526941 ubox
12 22 0.845433040 ubox
12 24 0.038339316 ubox
12 41 0.004170551 ubox
12 42 0.069152987 ubox
13 20 0.066476217 ubox
13 21 0.848197307 ubox
13 40 0.005477111 ubox
13 41 0.063680161 ubox
14 20 0.847296889 ubox
15 28 0.003439265 ubox
16 27 0.003401294 ubox
16 31 0.330117037 ubox
17 24 0.007452855 ubox
17 30 0.340424491 ubox
18 23 0.008168312 ubox
18 25 0.006527450 ubox
18 29 0.340424392 ubox
19 24 0.006343238 ubox
19 28 0.337827677 ubox
19 40 0.011398642 ubox
20 27 0.227490997 ubox
20 32 0.003873354 ubox
20 33 0.051778058 ubox
20 34 0.046335106 ubox
20 36 0.009351568 ubox
20 39 0.011452548 ubox
21 27 0.114427371 ubox
21 31 0.003735335 ubox
21 32 0.060136520 ubox
21 33 0.038159853 ubox
21 35 0.009321498 ubox
21 38 0.011361855 ubox
22 26 0.119272558 ubox
22 29 0.015425788 ubox
22 31 0.066396741 ubox
22 32 0.026683440 ubox
22 34 0.008691946 ubox
22 37 0.010504604 ubox
23 28 0.015944657 ubox
23 30 0.071908840 ubox
24 29 0.070063940 ubox
24 31 0.009694490 ubox
25 30 0.009861093 ubox
27 40 0.009311622 ubox
27 46 0.073799370 ubox
27 49 0.006493720 ubox
28 39 0.009976822 ubox
28 45 0.077389588 ubox
28 48 0.011431553 ubox
29 49 0.128426845 ubox
30 43 0.173920805 ubox
30 48 0.141224181 ubox
31 41 0.009698088 ubox
31 42 0.176051615 ubox
31 47 0.140947039 ubox
32 40 0.014708555 ubox
32 41 0.180326828 ubox
32 42 0.021743957 ubox
32 46 0.137070401 ubox
32 47 0.011321662 ubox
33 40 0.163749919 ubox
33 41 0.024297730 ubox
33 46 0.012253731 ubox
1 31 0.9500000 lbox
2 30 0.9500000 lbox
3 29 0.9500000 lbox
4 28 0.9500000 lbox
5 27 0.9500000 lbox
6 26 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
showpage
end
%%EOF
