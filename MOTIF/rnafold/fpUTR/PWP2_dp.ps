%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PWP2)
} def

/sequence { (\
GCGUGCUGUGGGCGGUGCCGCGCGGACCCCCGGGAAGUGUCUCUGUGGGCGGCCGCCGGGUUGAGCUGCGGCACACGUGCGACGGCCGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 89 0.962084171 ubox
2 88 0.997282448 ubox
2 90 0.010532205 ubox
3 74 0.022337454 ubox
3 87 0.998105191 ubox
3 89 0.010163679 ubox
4 73 0.023547876 ubox
4 88 0.008317697 ubox
5 72 0.023932208 ubox
5 86 0.999568280 ubox
5 87 0.007125023 ubox
6 71 0.023934024 ubox
6 85 0.999699220 ubox
7 70 0.023913644 ubox
7 84 0.998921289 ubox
8 69 0.023903571 ubox
8 83 0.999208435 ubox
9 68 0.022462155 ubox
9 81 0.579310156 ubox
9 82 0.810085708 ubox
10 67 0.019431382 ubox
10 80 0.991225490 ubox
11 66 0.016551687 ubox
11 67 0.013057743 ubox
12 66 0.017245717 ubox
12 78 0.997680836 ubox
12 80 0.017561903 ubox
13 63 0.007613059 ubox
13 65 0.020089098 ubox
13 77 0.999517384 ubox
13 79 0.017295287 ubox
14 62 0.007391946 ubox
14 76 0.995756773 ubox
14 78 0.015256383 ubox
15 61 0.006749917 ubox
15 74 0.998160966 ubox
16 73 0.999395277 ubox
17 61 0.018444360 ubox
17 72 0.999701038 ubox
18 59 0.015587164 ubox
18 60 0.018276646 ubox
18 71 0.999706434 ubox
19 58 0.015985821 ubox
19 59 0.017965279 ubox
19 70 0.999634616 ubox
20 57 0.016726025 ubox
20 66 0.003765515 ubox
20 69 0.999353051 ubox
21 58 0.009252703 ubox
21 65 0.004117185 ubox
21 68 0.997969145 ubox
21 70 0.010201493 ubox
22 56 0.346464353 ubox
22 57 0.021384318 ubox
22 66 0.896765538 ubox
22 67 0.256472472 ubox
22 69 0.023499444 ubox
23 32 0.008811070 ubox
23 55 0.348546474 ubox
23 58 0.007790423 ubox
23 63 0.034624992 ubox
23 65 0.917073174 ubox
23 68 0.025371884 ubox
24 31 0.009598893 ubox
24 54 0.348975561 ubox
24 57 0.008209692 ubox
24 62 0.039619311 ubox
24 67 0.040555202 ubox
25 30 0.009568960 ubox
25 53 0.348942317 ubox
25 56 0.008203721 ubox
25 61 0.039398096 ubox
25 62 0.499947366 ubox
25 66 0.046117185 ubox
26 61 0.512455970 ubox
27 49 0.068179114 ubox
27 52 0.346932762 ubox
27 59 0.004012825 ubox
27 60 0.481903956 ubox
28 48 0.068375929 ubox
28 49 0.059595087 ubox
28 51 0.346648975 ubox
28 58 0.004373785 ubox
28 59 0.468201364 ubox
28 60 0.123167425 ubox
29 47 0.068335362 ubox
29 48 0.062627387 ubox
29 49 0.347567365 ubox
29 58 0.453540891 ubox
29 59 0.112711530 ubox
29 60 0.788047478 ubox
30 47 0.100623476 ubox
30 48 0.347931721 ubox
30 49 0.012075767 ubox
30 52 0.010604557 ubox
30 58 0.091073964 ubox
30 59 0.799127387 ubox
30 60 0.012532651 ubox
31 39 0.006381767 ubox
31 45 0.133735235 ubox
31 47 0.348171506 ubox
31 48 0.012020268 ubox
31 51 0.010606233 ubox
31 55 0.184515728 ubox
31 58 0.809329560 ubox
31 59 0.012672999 ubox
32 38 0.006144665 ubox
32 41 0.013042124 ubox
32 42 0.015489482 ubox
32 43 0.274130407 ubox
32 44 0.128999510 ubox
32 46 0.236315774 ubox
32 50 0.010384426 ubox
32 54 0.184904835 ubox
32 57 0.840691781 ubox
33 40 0.012434932 ubox
33 41 0.017956755 ubox
33 42 0.283970235 ubox
33 43 0.130735203 ubox
33 44 0.271791655 ubox
33 53 0.182829983 ubox
33 54 0.220622850 ubox
33 56 0.839459460 ubox
33 57 0.143832522 ubox
34 40 0.015333806 ubox
34 41 0.304984046 ubox
34 42 0.062748575 ubox
34 43 0.293162638 ubox
34 53 0.222152307 ubox
34 56 0.147885022 ubox
35 40 0.278904873 ubox
35 42 0.277948419 ubox
36 42 0.059986635 ubox
36 44 0.044630680 ubox
36 67 0.007541681 ubox
37 41 0.075406922 ubox
37 43 0.046395095 ubox
37 50 0.122032801 ubox
37 53 0.234318003 ubox
37 56 0.004943446 ubox
37 66 0.008044558 ubox
38 47 0.003980053 ubox
38 49 0.117107463 ubox
38 51 0.839435354 ubox
38 52 0.178941338 ubox
38 55 0.007279919 ubox
38 65 0.008007359 ubox
39 46 0.004472107 ubox
39 50 0.884084679 ubox
39 53 0.050498017 ubox
39 54 0.006291898 ubox
40 45 0.003273926 ubox
40 48 0.085120090 ubox
40 49 0.878770538 ubox
40 52 0.050757850 ubox
41 47 0.110892804 ubox
41 48 0.877032508 ubox
41 49 0.132119228 ubox
41 51 0.050550996 ubox
41 52 0.004415853 ubox
41 60 0.008360910 ubox
42 47 0.783707872 ubox
42 48 0.132290586 ubox
42 49 0.018913524 ubox
42 51 0.004263727 ubox
42 59 0.008366879 ubox
43 47 0.169834520 ubox
43 48 0.022507002 ubox
43 49 0.044782822 ubox
43 52 0.010158181 ubox
43 58 0.008607230 ubox
44 48 0.040382843 ubox
44 51 0.010252927 ubox
45 50 0.010294657 ubox
45 56 0.176570472 ubox
45 57 0.014589128 ubox
46 55 0.178215173 ubox
47 54 0.179136052 ubox
47 57 0.013890045 ubox
48 53 0.178950072 ubox
48 54 0.005132966 ubox
48 56 0.012466150 ubox
48 57 0.166273758 ubox
49 53 0.005324332 ubox
49 56 0.167056434 ubox
50 55 0.166932480 ubox
50 58 0.022799697 ubox
50 63 0.083302625 ubox
51 57 0.024324802 ubox
51 62 0.083903695 ubox
52 56 0.023935694 ubox
52 61 0.084500540 ubox
53 60 0.084699962 ubox
54 59 0.084672193 ubox
55 66 0.013663206 ubox
56 65 0.014106587 ubox
57 63 0.056910771 ubox
57 68 0.041342921 ubox
58 62 0.035363681 ubox
58 67 0.209849368 ubox
59 66 0.219690549 ubox
59 67 0.186730046 ubox
60 66 0.196271023 ubox
60 69 0.003975566 ubox
61 65 0.183844081 ubox
61 68 0.003981340 ubox
63 67 0.004197749 ubox
74 90 0.008467856 ubox
75 89 0.022799045 ubox
76 88 0.023790877 ubox
77 87 0.023815094 ubox
79 86 0.023862839 ubox
80 85 0.023858665 ubox
1 89 0.9500000 lbox
2 88 0.9500000 lbox
3 87 0.9500000 lbox
5 86 0.9500000 lbox
6 85 0.9500000 lbox
7 84 0.9500000 lbox
8 83 0.9500000 lbox
9 81 0.9500000 lbox
10 80 0.9500000 lbox
12 78 0.9500000 lbox
13 77 0.9500000 lbox
14 76 0.9500000 lbox
15 74 0.9500000 lbox
16 73 0.9500000 lbox
17 72 0.9500000 lbox
18 71 0.9500000 lbox
19 70 0.9500000 lbox
20 69 0.9500000 lbox
21 68 0.9500000 lbox
22 66 0.9500000 lbox
23 65 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
