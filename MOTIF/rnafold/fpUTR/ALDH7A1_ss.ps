%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCACUCCCAUUGUUCCAGGCAGGAUUCAGCCGCAGGCUCCUCCGGAAGACCAGGGGCAGACGGGGCGGUGGCGGGGUCGUGCCCAGUGGGAGGGGUCGGGUCUGCCCAAUGGGUUCUCCCGGGCGGGGGGCGGGGCUCUAUUUCAGCAGCUCUCAGGGCCUUGGGCUCAUCCCGAGUCCCGGGCUCAGU\
) } def
/len { sequence length } bind def

/coor [
[83.16114044 136.28971863]
[77.16952515 132.85209656]
[71.85857391 128.43502808]
[67.38661957 123.17020416]
[63.88700104 117.21459198]
[61.46404648 110.74574280]
[60.18999100 103.95652771]
[45.25006485 102.61540985]
[30.31013870 101.27429199]
[15.37021160 99.93317413]
[0.43028516 98.59206390]
[-14.50964165 97.25094604]
[-29.44956779 95.90982819]
[-44.38949585 94.56871796]
[-59.32942200 93.22760010]
[-51.93994904 106.28117371]
[-57.38312149 120.25872040]
[-71.65444946 124.87709045]
[-84.25463867 116.73858643]
[-85.91384125 101.83063507]
[-75.41257477 91.12130737]
[-90.19401550 88.57003784]
[-104.97545624 86.01876831]
[-119.75689697 83.46749878]
[-134.67199707 88.74485779]
[-145.89782715 78.95558167]
[-160.67926025 76.40431213]
[-175.46070862 73.85304260]
[-190.24214172 71.30176544]
[-205.02359009 68.75049591]
[-219.93869019 74.02786255]
[-231.16452026 64.23858643]
[-245.94595337 61.68731308]
[-260.72738647 59.13603973]
[-275.50885010 56.58477020]
[-290.29028320 54.03350067]
[-301.26916504 60.82194519]
[-313.53604126 58.38265228]
[-320.61288452 48.56048203]
[-335.35083008 45.76895142]
[-350.08880615 42.97742462]
[-364.82675171 40.18589401]
[-379.56469727 37.39436340]
[-394.42135620 35.32557297]
[-409.36129761 33.98445892]
[-424.30120850 32.64334106]
[-439.25155640 31.42386436]
[-454.21133423 30.32610321]
[-468.73184204 37.94757080]
[-482.44598389 28.95567322]
[-481.24584961 12.60050201]
[-466.36599731 5.70685434]
[-453.11358643 15.36632538]
[-438.15380859 16.46408653]
[-431.24230957 13.81411839]
[-422.96008301 17.70341682]
[-408.02017212 19.04453087]
[-393.08023071 20.38564682]
[-401.75765991 8.15035057]
[-399.39059448 -6.66170454]
[-387.33215332 -15.58326721]
[-372.47552490 -13.51436138]
[-363.31341553 -1.63766992]
[-365.08331299 13.25754547]
[-376.77316284 22.65640640]
[-362.03521729 25.44793701]
[-347.29727173 28.23946571]
[-332.55929565 31.03099632]
[-317.82135010 33.82252502]
[-301.60095215 27.14130020]
[-287.73901367 39.25205612]
[-272.95758057 41.80332947]
[-258.17611694 44.35459900]
[-243.39468384 46.90587234]
[-228.61325073 49.45714188]
[-214.75541687 43.99729156]
[-202.47232056 53.96905518]
[-187.69087219 56.52032852]
[-172.90943909 59.07159805]
[-158.12799072 61.62286758]
[-143.34655762 64.17414093]
[-129.48872375 58.71429062]
[-117.20562744 68.68605042]
[-102.42418671 71.23732758]
[-87.64274597 73.78859711]
[-72.86130524 76.33986664]
[-57.98830414 78.28767395]
[-43.04837799 79.62879181]
[-28.10845184 80.96990204]
[-13.16852570 82.31101990]
[1.77140069 83.65213776]
[16.71132660 84.99324799]
[31.65125465 86.33436584]
[46.59117889 87.67548370]
[61.53110886 89.01659393]
[74.76432037 66.80110168]
[99.68618774 56.60448074]
[126.76543427 63.71099472]
[135.66104126 51.63340378]
[144.55664062 39.55581284]
[142.30384827 28.89515686]
[146.21762085 18.96207237]
[154.77725220 12.95606232]
[165.00997925 12.66747952]
[174.29399109 0.88583595]
[183.57800293 -10.89580727]
[192.86201477 -22.67745018]
[202.14602661 -34.45909500]
[211.43003845 -46.24073792]
[220.71405029 -58.02238083]
[221.46304321 -63.21883774]
[223.89480591 -67.20267487]
[227.26167297 -69.53467560]
[230.75016785 -70.13788605]
[240.59822083 -81.45230103]
[250.44625854 -92.76671600]
[253.05276489 -108.95738983]
[268.47180176 -114.54178619]
[280.84158325 -103.77514648]
[277.43713379 -87.73326874]
[261.76068115 -82.91866302]
[251.91262817 -71.60424805]
[242.06457520 -60.28983688]
[232.49569702 -48.73836899]
[223.21168518 -36.95672607]
[213.92767334 -25.17508125]
[204.64366150 -13.39343834]
[195.35964966 -1.61179507]
[186.07563782 10.16984844]
[176.79162598 21.95149231]
[175.44491577 41.23190308]
[156.63423157 48.45141602]
[147.73863220 60.52900696]
[138.84303284 72.60659790]
[145.44540405 86.07540131]
[160.44093323 86.44161224]
[175.43646240 86.80782318]
[190.43199158 87.17403412]
[205.42752075 87.54024506]
[220.42304993 87.90645599]
[235.42106628 88.15061188]
[250.42056274 88.27269745]
[262.81906128 78.09149933]
[278.47869873 81.57794189]
[285.38674927 96.05753326]
[278.24392700 110.42276001]
[262.52963257 113.65385437]
[250.29847717 103.27220154]
[235.29898071 103.15011597]
[228.57455444 106.24416351]
[220.05683899 102.90198517]
[205.06130981 102.53577423]
[190.06578064 102.16956329]
[175.07025146 101.80335236]
[160.07472229 101.43714142]
[145.07919312 101.07093048]
[141.81994629 111.59144592]
[136.25080872 120.61273956]
[128.89689636 127.66695404]
[137.59474182 139.88774109]
[146.29257202 152.10852051]
[154.99041748 164.32931519]
[163.68824768 176.55009460]
[172.38609314 188.77087402]
[186.69192505 195.52761841]
[187.76818848 210.38328552]
[196.46603394 222.60408020]
[205.16386414 234.82485962]
[213.86170959 247.04563904]
[222.55955505 259.26641846]
[231.25738525 271.48721313]
[246.77520752 275.55871582]
[253.13514709 290.28729248]
[245.45841980 304.37442017]
[229.63394165 307.01367188]
[217.80090332 296.18045044]
[219.03660583 280.18505859]
[210.33876038 267.96426392]
[201.64093018 255.74348450]
[192.94308472 243.52270508]
[184.24523926 231.30191040]
[175.54740906 219.08113098]
[161.86369324 213.19850159]
[160.16531372 197.46871948]
[151.46746826 185.24794006]
[142.76962280 173.02714539]
[134.07179260 160.80636597]
[125.37394714 148.58557129]
[116.67610931 136.36479187]
[110.17197418 138.69136047]
[103.36457825 139.86439514]
[96.45686340 139.84892273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 95]
[8 94]
[9 93]
[10 92]
[11 91]
[12 90]
[13 89]
[14 88]
[15 87]
[21 86]
[22 85]
[23 84]
[24 83]
[26 81]
[27 80]
[28 79]
[29 78]
[30 77]
[32 75]
[33 74]
[34 73]
[35 72]
[36 71]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[44 58]
[45 57]
[46 56]
[47 54]
[48 53]
[98 134]
[99 133]
[100 132]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[109 125]
[110 124]
[114 123]
[115 122]
[116 121]
[135 156]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
[141 149]
[142 148]
[159 189]
[160 188]
[161 187]
[162 186]
[163 185]
[164 184]
[166 182]
[167 181]
[168 180]
[169 179]
[170 178]
[171 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
