%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCGACUUCAGUGUGCAUGUUCCUUGGACACCUGCCUCAGUGUGCAUGUUCACUGGGCAUCUUCCCUUCGACCCCUUUGCCCACGUGGUGACCGCUGGGGAGCUGUGAGAGUGUGAGGGGCACGUUCCAGCCGUCUGGACUCUUUCUCUCCUACUGAGACGCAGCCUAUAGGUCCGCAGGCCAGUCCUCCCAGGAACUGAAAUAGUGAAAU\
) } def
/len { sequence length } bind def

/coor [
[95.02633667 573.12231445]
[82.73193359 582.23858643]
[67.60746002 584.58569336]
[53.12840652 579.62432861]
[42.62195206 568.49450684]
[38.50240326 553.75378418]
[41.71640015 538.78955078]
[51.52539444 527.04040527]
[65.67534637 521.20623779]
[66.99487305 506.26440430]
[68.31439209 491.32254028]
[69.63391876 476.38070679]
[63.04620743 463.02212524]
[71.96748352 449.95608521]
[73.28701019 435.01425171]
[74.60652924 420.07238770]
[62.33419800 411.63110352]
[55.89199066 398.09027100]
[57.10047913 383.04348755]
[65.73492432 370.53976440]
[79.55884552 363.99404907]
[80.87836456 349.05218506]
[82.19789124 334.11035156]
[83.51741028 319.16848755]
[84.83693695 304.22665405]
[86.15645599 289.28479004]
[75.85520935 271.39907837]
[88.45193481 254.06132507]
[89.11233521 239.07586670]
[89.77273560 224.09042358]
[90.43313599 209.10496521]
[80.28209686 192.64610291]
[91.38605499 175.81979370]
[91.60624695 160.82141113]
[91.82644653 145.82302856]
[92.04664612 130.82463074]
[92.26683807 115.82625580]
[84.51402283 102.98515320]
[71.13893890 96.19492340]
[57.76386261 89.40469360]
[44.38878250 82.61446381]
[31.01370049 75.82423401]
[17.63862038 69.03400421]
[4.26353884 62.24377823]
[-10.59532547 66.91838074]
[-24.06282997 59.84158707]
[-28.42777824 45.64712524]
[-41.80286026 38.85689545]
[-55.17794037 32.06666565]
[-60.38563538 32.34878540]
[-64.74565887 30.76482964]
[-67.68945312 27.94963455]
[-68.98254395 24.67165756]
[-82.04570007 17.29915047]
[-95.10886383 9.92664337]
[-108.22578430 2.65021968]
[-121.39576721 -4.52972841]
[-134.56575012 -11.70967674]
[-147.73571777 -18.88962555]
[-160.90570068 -26.06957245]
[-174.07568359 -33.24952316]
[-185.05438232 -22.84168053]
[-198.71282959 -16.33767509]
[-213.71289062 -14.37469769]
[-228.58502197 -17.14506340]
[-241.87220764 -24.37736130]
[-252.27268982 -35.36304092]
[-258.76754761 -49.02584076]
[-260.72045898 -64.02721405]
[-257.94012451 -78.89748383]
[-250.69892883 -92.17980957]
[-239.70628357 -102.57292938]
[-226.03913879 -109.05862427]
[-211.03645325 -111.00150299]
[-196.16806030 -108.21120453]
[-182.89057922 -100.96111298]
[-172.50483704 -89.96150208]
[-166.02828979 -76.29000854]
[-164.09547424 -61.28602982]
[-166.89573669 -46.41949844]
[-153.72575378 -39.23955154]
[-140.55577087 -32.05960464]
[-127.38579559 -24.87965584]
[-114.21581268 -17.69970703]
[-101.04583740 -10.51975918]
[-93.67011261 -10.07811165]
[-87.73635864 -3.13651586]
[-74.67319489 4.23599148]
[-61.61003494 11.60849857]
[-48.38771057 18.69158554]
[-35.01263046 25.48181343]
[-21.63754845 32.27204514]
[-7.60252237 27.41883659]
[6.05844069 34.11456299]
[11.05376911 48.86869812]
[24.42885017 55.65892410]
[37.80392838 62.44915390]
[51.17900848 69.23938751]
[64.55409241 76.02961731]
[77.92916870 82.81984711]
[91.30425262 89.61007690]
[95.21195984 86.14222717]
[100.49712372 84.23326874]
[106.50953674 84.41751099]
[117.64688110 74.36965179]
[128.78422546 64.32178497]
[139.92156982 54.27392197]
[151.05891418 44.22605515]
[162.19625854 34.17819214]
[162.44821167 15.23306370]
[176.23307800 2.70494461]
[194.47912598 4.20749617]
[205.31671143 -6.16299009]
[216.15428162 -16.53347588]
[226.99185181 -26.90396309]
[231.61323547 -42.03516769]
[246.15806580 -45.24412918]
[256.99563599 -55.61461639]
[267.83322144 -65.98509979]
[278.67077637 -76.35559082]
[289.50836182 -86.72607422]
[300.34594727 -97.09655762]
[295.71310425 -111.59822845]
[297.82742310 -126.61211395]
[306.21643066 -139.16777039]
[319.17172241 -146.80461121]
[334.09649658 -148.05406189]
[348.02600098 -142.72166443]
[358.86355591 -153.09214783]
[369.70114136 -163.46263123]
[380.53872681 -173.83311462]
[391.37628174 -184.20359802]
[395.44650269 -200.08961487]
[411.31005859 -204.24652100]
[422.64788818 -192.39805603]
[417.79656982 -176.73291016]
[401.74676514 -173.36602783]
[390.90921021 -162.99554443]
[380.07162476 -152.62506104]
[369.23403931 -142.25457764]
[358.39648438 -131.88407898]
[363.11044312 -117.73332214]
[361.20510864 -102.87805176]
[353.00527954 -90.27154541]
[340.09246826 -82.44343567]
[325.00006104 -80.99220276]
[310.71643066 -86.25898743]
[299.87884521 -75.88850403]
[289.04125977 -65.51801300]
[278.20370483 -55.14752960]
[267.36611938 -44.77704239]
[256.52853394 -34.40655518]
[252.68234253 -20.01711655]
[237.36233521 -16.06638908]
[226.52476501 -5.69590235]
[215.68719482 4.67458391]
[204.84960938 15.04507065]
[207.07644653 26.23197365]
[203.59141541 37.21871948]
[195.14978027 45.24182510]
[183.76831055 48.22499847]
[172.24412537 45.31553650]
[161.10678101 55.36339951]
[149.96943665 65.41126251]
[138.83209229 75.45912933]
[127.69474030 85.50698853]
[116.55739594 95.55485535]
[129.62994385 88.19901276]
[144.62908936 88.03821564]
[157.85633850 95.11211395]
[166.05010986 107.67642975]
[167.19001770 122.63304901]
[160.99494934 136.29399109]
[148.99250793 145.29072571]
[134.14224243 147.40486145]
[120.10592651 142.11508179]
[110.34461975 130.72575378]
[107.26522064 116.04644775]
[107.04502869 131.04483032]
[106.82482910 146.04321289]
[106.60462952 161.04159546]
[106.38443756 176.03999329]
[114.39825439 183.39015198]
[116.99180603 193.72422791]
[113.54324341 203.57293701]
[105.41859436 209.76536560]
[104.75819397 224.75082397]
[104.09779358 239.73626709]
[103.43738556 254.72172546]
[110.67061615 260.76416016]
[114.26065063 269.32971191]
[113.51938629 278.44955444]
[108.73900604 286.08963013]
[101.09830475 290.60430908]
[99.77878571 305.54617310]
[98.45925903 320.48800659]
[97.13973999 335.42987061]
[95.82021332 350.37170410]
[94.50069427 365.31356812]
[106.96349335 374.18069458]
[113.27297211 388.00411987]
[111.82574463 403.02981567]
[103.11015320 415.23205566]
[89.54838562 421.39190674]
[88.22885895 436.33377075]
[86.90933990 451.27563477]
[93.40266418 465.70294189]
[84.57576752 477.70022583]
[83.25624084 492.64208984]
[81.93672180 507.58392334]
[80.61719513 522.52575684]
[93.52569580 530.74945068]
[101.12378693 544.03582764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 211]
[10 210]
[11 209]
[12 208]
[14 206]
[15 205]
[16 204]
[21 199]
[22 198]
[23 197]
[24 196]
[25 195]
[26 194]
[28 189]
[29 188]
[30 187]
[31 186]
[33 182]
[34 181]
[35 180]
[36 179]
[37 178]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[43 96]
[44 95]
[47 92]
[48 91]
[49 90]
[53 89]
[54 88]
[55 87]
[56 85]
[57 84]
[58 83]
[59 82]
[60 81]
[61 80]
[104 167]
[105 166]
[106 165]
[107 164]
[108 163]
[109 162]
[112 157]
[113 156]
[114 155]
[115 154]
[117 152]
[118 151]
[119 150]
[120 149]
[121 148]
[122 147]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
