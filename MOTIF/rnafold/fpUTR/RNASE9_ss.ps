%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUACCUCUUGGACUUCCAACUUCUGUGAGUCAACAUAGUGCCUCUUGCAUUUAAGAAACAUCUCAUCACACUCUUAUCAGCAUUGAGUUUAAAUUUCAAUUAGUGAGAACUGAGGAAAAACCAAGAAGCCUGCAUUCCACAGAUCAAGAUGUUGCAGAGGCUCCGCGUUCUUGUGAGAGUAUGUUCCGAGCUCUCUGACCUGUCACCAUGGGAUCACUCUUUUGAAGAGACUUCCUGGAGGACACUGAUGAC\
) } def
/len { sequence length } bind def

/coor [
[10.36185837 318.13134766]
[4.28323841 331.84451294]
[-1.79538107 345.55764771]
[-7.87400055 359.27078247]
[3.29423189 370.85562134]
[9.14216042 385.80551147]
[8.80026436 401.81622314]
[2.35062146 416.43225098]
[-9.19023037 427.42333984]
[-24.03139305 433.12478638]
[-39.88548279 432.68963623]
[-45.79536438 446.47634888]
[-51.70524597 460.26306152]
[-57.61512756 474.04977417]
[-55.13806534 490.26077271]
[-68.10605621 500.29885864]
[-83.17873383 493.83770752]
[-84.85063171 477.52401733]
[-71.40183258 468.13989258]
[-65.49195099 454.35317993]
[-59.58207321 440.56646729]
[-53.67219162 426.77975464]
[-63.83907700 417.12759399]
[-70.11814880 404.56011963]
[-71.73837280 390.57507324]
[-68.48527527 376.84680176]
[-60.72907639 365.02593994]
[-49.38268661 356.54092407]
[-35.79428482 352.42535400]
[-21.58714676 353.19216919]
[-15.50852776 339.47903442]
[-9.42990780 325.76586914]
[-3.35128808 312.05273438]
[-10.96711922 299.28021240]
[-9.58528233 284.29507446]
[0.47298303 272.86334229]
[15.50774670 269.50744629]
[21.58636665 255.79428101]
[27.66498566 242.08114624]
[33.65934753 228.33094788]
[39.56922913 214.54425049]
[45.47911072 200.75753784]
[51.38899231 186.97082520]
[57.21416473 173.14811707]
[62.95441818 159.28993225]
[68.69467163 145.43173218]
[74.43492126 131.57354736]
[80.17517090 117.71534729]
[72.51383972 130.61123657]
[59.88471985 138.70477295]
[44.96751404 140.27862549]
[30.92743301 134.99884033]
[20.74356651 123.98571777]
[16.57677841 109.57607269]
[19.31119919 94.82741547]
[28.36662483 82.86918640]
[41.82162857 76.23873901]
[56.82126617 76.34295654]
[70.18283844 83.15972900]
[79.07115173 95.24245453]
[72.00019836 82.01363373]
[64.92924500 68.78481293]
[57.85829544 55.55599594]
[50.78734589 42.32717514]
[43.71639252 29.09835625]
[36.64544296 15.86953735]
[25.05262184 17.95637321]
[13.34205246 16.88092613]
[2.35933900 12.73118114]
[-7.10522604 5.81673956]
[-14.37352657 -3.35425591]
[-18.92820549 -14.11245441]
[-20.44948196 -25.67614746]
[-18.83758163 -37.20806885]
[-14.21921444 -47.87600708]
[-25.57734680 -57.67359924]
[-36.93547821 -67.47119141]
[-48.29361343 -77.26878357]
[-59.65174484 -87.06637573]
[-71.00988007 -96.86396790]
[-82.43540955 -93.70421600]
[-93.85361481 -96.41125488]
[-102.46705627 -104.20339966]
[-106.22268677 -115.06794739]
[-104.30052948 -126.28004456]
[-115.41479492 -136.35342407]
[-126.52906799 -146.42681885]
[-137.64332581 -156.50019836]
[-148.75759888 -166.57357788]
[-159.87187195 -176.64697266]
[-175.33866882 -174.34220886]
[-188.64129639 -182.56256104]
[-193.49865723 -197.42662048]
[-187.61723328 -211.91603088]
[-173.77407837 -219.18933105]
[-158.50549316 -215.81230164]
[-149.02084351 -203.37947083]
[-149.79847717 -187.76123047]
[-138.68421936 -177.68785095]
[-127.56994629 -167.61447144]
[-116.45568085 -157.54107666]
[-105.34141541 -147.46769714]
[-94.22714996 -137.39431763]
[-76.00773621 -139.37437439]
[-61.90371323 -127.17665863]
[-61.21228409 -108.22209930]
[-49.85415268 -98.42450714]
[-38.49602127 -88.62691498]
[-27.13788795 -78.82932281]
[-15.77975464 -69.03173065]
[-4.42162180 -59.23413849]
[5.38820124 -65.26062012]
[16.44140244 -68.48207855]
[16.80952072 -83.47756195]
[17.17763901 -98.47304535]
[9.78134155 -112.45894623]
[17.82865524 -124.99250031]
[18.19677353 -139.98797607]
[18.56489182 -154.98345947]
[18.93301010 -169.97894287]
[8.79618645 -175.22740173]
[1.37312663 -183.83164978]
[-2.29929686 -194.53152466]
[-1.72987282 -205.77845764]
[2.96159673 -215.95967102]
[11.06695652 -223.62939453]
[21.39633179 -227.71415710]
[22.31614304 -242.68592834]
[14.52256203 -257.11480713]
[23.35076141 -270.93487549]
[39.71904755 -269.92926025]
[46.78913116 -255.13244629]
[37.28791428 -241.76611328]
[36.36810303 -226.79434204]
[51.45938110 -215.72164917]
[56.83836365 -197.63618469]
[50.14514160 -179.83366394]
[33.92849350 -169.61082458]
[33.56037521 -154.61534119]
[33.19225693 -139.61985779]
[32.82413864 -124.62438202]
[40.24676514 -111.71105957]
[32.17312241 -98.10492706]
[31.80500221 -83.10944366]
[31.43688393 -68.11396027]
[49.28981400 -60.12898254]
[61.84000397 -45.05356598]
[66.48343658 -25.93527412]
[62.22129440 -6.66854858]
[49.87426376 8.79858685]
[56.94521332 22.02740479]
[64.01616669 35.25622559]
[71.08711243 48.48504257]
[78.15806580 61.71386337]
[85.22901917 74.94268036]
[92.29996490 88.17150116]
[100.49816895 73.10502625]
[122.86753845 67.56557465]
[137.11045837 62.86034393]
[151.35337830 58.15511703]
[165.59631348 53.44989395]
[179.83923340 48.74466705]
[194.05300903 43.95213699]
[208.23712158 39.07248306]
[222.42123413 34.19282913]
[236.60534668 29.31317329]
[249.16870117 13.52481937]
[267.96954346 18.11277008]
[282.02963257 12.88649082]
[296.08972168 7.66021061]
[310.14981079 2.43393040]
[320.38943481 -9.62678051]
[335.01501465 -6.80872679]
[349.07510376 -12.03500652]
[363.13519287 -17.26128769]
[373.16790771 -30.23342705]
[389.37991333 -27.76307106]
[395.09368896 -12.39151096]
[384.43139648 0.06831144]
[368.36148071 -3.20120192]
[354.30139160 2.02507830]
[340.24130249 7.25135851]
[331.00735474 18.93825150]
[315.37609863 16.49401474]
[301.31600952 21.72029495]
[287.25592041 26.94657516]
[273.19583130 32.17285538]
[269.80969238 41.77672958]
[261.53134155 48.07608414]
[250.93498230 48.80992889]
[241.48500061 43.49728394]
[227.30088806 48.37693787]
[213.11677551 53.25659180]
[198.93266296 58.13624573]
[193.64527893 63.26924896]
[184.54446411 62.98759079]
[170.30152893 67.69281769]
[156.05860901 72.39804077]
[141.81568909 77.10327148]
[127.57276917 81.80849457]
[125.66127777 89.06081390]
[140.41642761 91.76001740]
[155.17156982 94.45921326]
[169.92671204 97.15840912]
[184.86268616 95.77394867]
[194.55749512 107.21994019]
[190.73434448 121.72454071]
[176.65719604 126.90467834]
[164.34436035 118.33821106]
[150.17567444 113.41396332]
[136.00697327 108.48971558]
[121.83828735 103.56546783]
[119.92679596 110.81778717]
[130.00018311 121.93205261]
[140.07356262 133.04632568]
[150.14694214 144.16058350]
[165.47557068 142.63098145]
[178.61210632 150.33064270]
[184.62475586 164.12600708]
[181.39981079 178.64282227]
[191.47320557 189.75708008]
[201.54658508 200.87135315]
[211.61996460 211.98561096]
[221.69335938 223.09988403]
[236.81030273 230.77543640]
[233.61950684 247.42640686]
[216.73596191 248.96975708]
[210.57908630 233.17326355]
[200.50570679 222.05900574]
[190.43231201 210.94473267]
[180.35893250 199.83045959]
[170.28555298 188.71620178]
[155.52253723 190.50271606]
[142.38296509 183.16682434]
[136.00798035 169.33885193]
[139.03268433 154.23397827]
[128.95930481 143.11970520]
[118.88591766 132.00543213]
[108.81253052 120.89117432]
[94.03336334 123.45559692]
[88.29311371 137.31379700]
[82.55286407 151.17198181]
[76.81261444 165.03018188]
[71.07235718 178.88836670]
[70.68375397 187.98526001]
[65.17569733 192.88070679]
[59.26581955 206.66741943]
[53.35593796 220.45413208]
[47.44605637 234.24082947]
[46.94585037 243.33227539]
[41.37813187 248.15975952]
[35.29951096 261.87289429]
[29.22089195 275.58605957]
[36.83106232 288.97976685]
[35.11542130 304.10952759]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[4 30]
[11 22]
[12 21]
[13 20]
[14 19]
[37 253]
[38 252]
[39 251]
[40 249]
[41 248]
[42 247]
[43 246]
[44 244]
[45 243]
[46 242]
[47 241]
[48 240]
[60 156]
[61 155]
[62 154]
[63 153]
[64 152]
[65 151]
[66 150]
[75 111]
[76 110]
[77 109]
[78 108]
[79 107]
[80 106]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[113 145]
[114 144]
[115 143]
[117 141]
[118 140]
[119 139]
[120 138]
[127 134]
[128 133]
[158 200]
[159 199]
[160 198]
[161 197]
[162 196]
[163 194]
[164 193]
[165 192]
[166 191]
[168 187]
[169 186]
[170 185]
[171 184]
[173 182]
[174 181]
[175 180]
[213 239]
[214 238]
[215 237]
[216 236]
[220 232]
[221 231]
[222 230]
[223 229]
[224 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
