%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUGGUAUCUGGUCAGCAGAGAAAGGCAUCCAGGCCCCGCCAGGAGAGACGGUGCCUCGCUCUGUUGCCCAGACUGGAGUGCAGUGGUGUGAUCAUAACUCAGUAUAGCCUAGAACUCCUGAGCUCAAGCAAUCCUCCCACCUCAGCCUUUCAAGCAGCUAGGAGUACAGUUGGGAGCCACUGUACCUGGUUACUGUCACGGGAUCACCUGCCUUUUUGGCUGCUGCACCUGAACAGAGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[-288.55892944 560.07513428]
[-289.13348389 545.08612061]
[-289.70800781 530.09710693]
[-290.28256226 515.10815430]
[-296.82510376 511.44137573]
[-304.15881348 524.52636719]
[-317.24368286 517.19244385]
[-309.91021729 504.10787964]
[-316.45275879 500.44113159]
[-329.53784180 507.77462769]
[-342.62295532 515.10815430]
[-355.70803833 522.44165039]
[-368.79315186 529.77514648]
[-377.04882812 543.27160645]
[-391.93411255 542.74438477]
[-405.01919556 550.07788086]
[-418.10430908 557.41137695]
[-431.18939209 564.74487305]
[-444.27450562 572.07836914]
[-457.35958862 579.41186523]
[-470.44470215 586.74536133]
[-483.52978516 594.07885742]
[-487.91531372 609.02557373]
[-501.28994751 616.27642822]
[-515.51232910 612.00335693]
[-528.59747314 619.33685303]
[-541.68255615 626.67034912]
[-554.76763916 634.00384521]
[-567.85272217 641.33734131]
[-580.59710693 649.24822998]
[-592.97521973 657.72058105]
[-605.35339355 666.19299316]
[-612.37121582 680.37261963]
[-627.24407959 681.17639160]
[-639.62225342 689.64880371]
[-652.00036621 698.12121582]
[-661.65582275 712.05706787]
[-677.71997070 706.63677979]
[-676.95849609 689.69989014]
[-660.47277832 685.74304199]
[-648.09460449 677.27062988]
[-635.71649170 668.79827881]
[-629.58404541 655.22467041]
[-613.82580566 653.81488037]
[-601.44763184 645.34246826]
[-589.06951904 636.87005615]
[-603.85888672 634.36523438]
[-613.66003418 623.01019287]
[-613.97705078 608.01354980]
[-604.66461182 596.25439453]
[-589.99426270 593.12677002]
[-576.69555664 600.06530762]
[-570.86859131 613.88726807]
[-575.18621826 628.25225830]
[-562.10113525 620.91876221]
[-549.01605225 613.58526611]
[-535.93096924 606.25177002]
[-522.84582520 598.91827393]
[-519.06719971 584.55657959]
[-505.90151978 576.93298340]
[-490.86328125 580.99377441]
[-477.77819824 573.66027832]
[-464.69308472 566.32678223]
[-451.60800171 558.99328613]
[-438.52288818 551.65979004]
[-425.43780518 544.32629395]
[-412.35269165 536.99279785]
[-399.26760864 529.65930176]
[-391.94784546 516.68737793]
[-376.12664795 516.69000244]
[-363.04153442 509.35653687]
[-349.95645142 502.02304077]
[-336.87133789 494.68954468]
[-323.78625488 487.35604858]
[-279.16888428 489.44396973]
[-267.84405518 479.60791016]
[-256.51922607 469.77182007]
[-256.55599976 450.27148438]
[-241.98951721 436.85049438]
[-221.94688416 438.53176880]
[-211.00711060 428.26913452]
[-200.06733704 418.00653076]
[-189.12757874 407.74389648]
[-178.18780518 397.48129272]
[-167.24803162 387.21865845]
[-156.30825806 376.95605469]
[-117.38454437 354.68884277]
[-108.13956451 342.87655640]
[-106.49587250 335.68887329]
[-98.70031738 330.97344971]
[-89.30524445 319.28018188]
[-79.91016388 307.58691406]
[-70.51509094 295.89361572]
[-61.12001419 284.20034790]
[-51.72494125 272.50708008]
[-58.97111893 259.45251465]
[-60.67178345 244.57792664]
[-56.53683472 230.14646912]
[-47.16644287 218.36582947]
[-33.96413422 211.05059814]
[-18.92664146 209.34271240]
[-4.34192562 213.53338623]
[5.05315018 201.84011841]
[14.44822598 190.14685059]
[23.84330177 178.45358276]
[33.23837662 166.76031494]
[33.62473679 162.02113342]
[36.97723389 157.46829224]
[43.02576447 154.89241028]
[52.71640778 143.44288635]
[62.40704727 131.99337769]
[64.32484436 124.87391663]
[72.29528809 120.46054077]
[82.13135529 109.13571167]
[79.78591156 86.03738403]
[103.21370697 71.11175537]
[110.04062653 57.75536346]
[116.86754608 44.39897537]
[123.69446564 31.04258347]
[130.52139282 17.68619347]
[137.34831238 4.32980347]
[138.46223450 -4.71259975]
[144.34864807 -9.15273190]
[151.34558105 -22.42085075]
[158.34249878 -35.68896866]
[165.33943176 -48.95708847]
[165.14184570 -54.12721634]
[166.77111816 -58.43421555]
[169.59794617 -61.32970047]
[172.86695862 -62.59181976]
[180.36695862 -75.58219910]
[169.48881531 -86.01911163]
[161.42506409 -98.75643921]
[156.64454651 -113.05364227]
[155.42518616 -128.07951355]
[157.83787537 -142.96044922]
[163.74234009 -156.83129883]
[172.79531860 -168.88563538]
[184.47045898 -178.42263794]
[198.08900452 -184.88783264]
[212.85917664 -187.90533447]
[227.92227173 -187.29972839]
[242.40252686 -183.10620117]
[255.45808411 -175.56857300]
[266.32989502 -165.12506104]
[274.38592529 -152.38285828]
[279.15777588 -138.08274841]
[280.36804199 -123.05615234]
[277.94631958 -108.17668152]
[272.03344727 -94.30940247]
[262.97317505 -82.26055908]
[251.29223633 -72.73063660]
[237.66978455 -66.27369690]
[222.89778137 -63.26514816]
[207.83505249 -63.87989807]
[193.35734558 -68.08219910]
[185.85734558 -55.09181976]
[178.60755920 -41.96015930]
[171.61062622 -28.69203949]
[164.61369324 -15.42392159]
[157.61676025 -2.15580249]
[150.70469666 11.15672398]
[143.87777710 24.51311302]
[137.05085754 37.86950302]
[130.22393799 51.22589493]
[123.39701843 64.58228302]
[116.57009888 77.93867493]
[125.66348267 89.86806488]
[140.35142517 86.82438660]
[155.03938293 83.78070068]
[169.72734070 80.73701477]
[184.41529846 77.69332886]
[192.16200256 72.89808655]
[199.31019592 74.70581818]
[214.03582764 71.84995270]
[228.43406677 62.89858246]
[241.02143860 74.25614166]
[233.59226990 89.49568939]
[216.89169312 86.57557678]
[202.16606140 89.43144226]
[187.45898438 92.38127899]
[172.77102661 95.42496490]
[158.08306885 98.46865082]
[143.39511108 101.51233673]
[128.70716858 104.55602264]
[119.26308441 117.56221008]
[105.70046997 122.35246277]
[93.45618439 118.97177887]
[83.62011719 130.29660034]
[73.85656738 141.68402100]
[64.16592407 153.13352966]
[54.47528458 164.58305359]
[44.93164825 176.15539551]
[35.53657150 187.84866333]
[26.14149475 199.54193115]
[16.74641991 211.23519897]
[7.35134411 222.92846680]
[14.58520317 236.26814270]
[16.15649986 251.32052612]
[11.85676289 265.78863525]
[2.37105727 277.47659302]
[-10.83096600 284.62304688]
[-25.72270203 286.16629028]
[-40.03166962 281.90216064]
[-49.42674637 293.59542847]
[-58.82182312 305.28869629]
[-68.21689606 316.98196411]
[-77.61196899 328.67523193]
[-87.00704956 340.36853027]
[-96.32727051 352.12155151]
[-105.57225037 363.93383789]
[-104.99771118 378.92282104]
[-94.87563324 389.99276733]
[-84.75355530 401.06271362]
[-68.85527039 403.21310425]
[-60.74810791 417.05700684]
[-66.65119171 431.97454834]
[-82.03617096 436.52227783]
[-95.10101318 427.21154785]
[-95.82349396 411.18478394]
[-105.94557190 400.11483765]
[-116.06764984 389.04489136]
[-131.05731201 388.47033691]
[-146.04563904 387.89581299]
[-156.98541260 398.15844727]
[-167.92517090 408.42105103]
[-178.86494446 418.68368530]
[-189.80471802 428.94628906]
[-200.74449158 439.20892334]
[-211.68426514 449.47152710]
[-209.36219788 459.84323120]
[-211.52597046 470.16674805]
[-217.72198486 478.60305786]
[-226.78446960 483.67773438]
[-237.05442810 484.53823853]
[-246.68316650 481.09664917]
[-258.00799561 490.93273926]
[-269.33282471 500.76879883]
[-275.29354858 514.53356934]
[-274.71902466 529.52258301]
[-274.14447021 544.51159668]
[-273.56994629 559.50054932]
[-264.37927246 573.08233643]
[-271.78848267 587.71228027]
[-288.17559814 588.34039307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 242]
[2 241]
[3 240]
[4 239]
[9 74]
[10 73]
[11 72]
[12 71]
[13 70]
[15 68]
[16 67]
[17 66]
[18 65]
[19 64]
[20 63]
[21 62]
[22 61]
[25 58]
[26 57]
[27 56]
[28 55]
[29 54]
[30 46]
[31 45]
[32 44]
[34 42]
[35 41]
[36 40]
[75 238]
[76 237]
[77 236]
[80 230]
[81 229]
[82 228]
[83 227]
[84 226]
[85 225]
[86 224]
[87 211]
[88 210]
[90 209]
[91 208]
[92 207]
[93 206]
[94 205]
[95 204]
[102 197]
[103 196]
[104 195]
[105 194]
[106 193]
[109 192]
[110 191]
[111 190]
[113 189]
[114 188]
[116 167]
[117 166]
[118 165]
[119 164]
[120 163]
[121 162]
[123 161]
[124 160]
[125 159]
[126 158]
[130 157]
[131 156]
[168 185]
[169 184]
[170 183]
[171 182]
[172 181]
[174 180]
[175 179]
[212 222]
[213 221]
[214 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
