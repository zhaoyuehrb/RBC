%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NGRN)
} def

/sequence { (\
ACUUCCGCUGCUGUUUCGUAGCCGACUGCUGAAGGCUGGUUUGCGUCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.009275365 ubox
1 40 0.005525048 ubox
1 46 0.011457080 ubox
2 13 0.010672592 ubox
2 34 0.056181287 ubox
2 39 0.006328465 ubox
2 45 0.012990071 ubox
3 25 0.009007721 ubox
3 33 0.056393312 ubox
3 38 0.006089150 ubox
3 49 0.021683265 ubox
4 24 0.007429449 ubox
4 25 0.124527395 ubox
4 32 0.055908226 ubox
4 48 0.021540658 ubox
4 49 0.063970078 ubox
5 24 0.136133392 ubox
5 31 0.055645500 ubox
5 35 0.004019420 ubox
5 38 0.003603098 ubox
5 39 0.021916548 ubox
5 48 0.067467439 ubox
6 13 0.009978301 ubox
6 24 0.047869231 ubox
6 28 0.009520325 ubox
6 34 0.004089408 ubox
6 38 0.022101255 ubox
6 43 0.004043239 ubox
6 45 0.159427059 ubox
6 48 0.095909164 ubox
7 12 0.006918719 ubox
7 14 0.036997455 ubox
7 22 0.971277539 ubox
7 23 0.035568283 ubox
7 29 0.036221261 ubox
7 36 0.010360922 ubox
7 37 0.016125517 ubox
7 40 0.021701096 ubox
7 44 0.162977251 ubox
7 46 0.020542198 ubox
7 47 0.096858298 ubox
8 13 0.038602337 ubox
8 21 0.973847147 ubox
8 28 0.036128015 ubox
8 35 0.010518395 ubox
8 39 0.022736729 ubox
8 43 0.162871883 ubox
8 45 0.027934968 ubox
9 20 0.973465395 ubox
9 24 0.009895142 ubox
9 34 0.010046361 ubox
9 38 0.021719139 ubox
9 45 0.090951061 ubox
9 48 0.024750652 ubox
10 17 0.003165185 ubox
10 19 0.973645117 ubox
10 22 0.041879981 ubox
10 23 0.007473208 ubox
10 29 0.008166195 ubox
10 36 0.033471617 ubox
10 37 0.003626076 ubox
10 40 0.159235067 ubox
10 44 0.098091927 ubox
10 46 0.021038777 ubox
10 47 0.030584387 ubox
11 18 0.973026435 ubox
11 21 0.042621686 ubox
11 28 0.008171343 ubox
11 35 0.033616110 ubox
11 39 0.160395502 ubox
11 43 0.098014884 ubox
11 45 0.022697582 ubox
12 18 0.004309696 ubox
12 20 0.042443223 ubox
12 24 0.005650356 ubox
12 34 0.030948835 ubox
12 38 0.151109636 ubox
12 45 0.034703165 ubox
12 48 0.010939642 ubox
13 17 0.100027027 ubox
13 19 0.039388629 ubox
13 22 0.018403978 ubox
13 23 0.005084453 ubox
13 26 0.008802120 ubox
13 29 0.005967860 ubox
13 36 0.129815120 ubox
13 37 0.056971404 ubox
13 40 0.004370948 ubox
13 42 0.015284611 ubox
13 44 0.044946490 ubox
13 47 0.013373330 ubox
13 50 0.044138845 ubox
14 18 0.010810384 ubox
14 21 0.018672799 ubox
14 25 0.008260155 ubox
14 28 0.005939199 ubox
14 32 0.009294125 ubox
14 33 0.020997145 ubox
14 34 0.100906888 ubox
14 35 0.112210226 ubox
14 39 0.004922016 ubox
14 43 0.044637798 ubox
14 49 0.044572555 ubox
15 20 0.017313457 ubox
15 24 0.007739304 ubox
15 31 0.009850794 ubox
15 32 0.025891696 ubox
15 33 0.126173243 ubox
15 34 0.086657166 ubox
15 35 0.010409439 ubox
15 38 0.003352839 ubox
15 39 0.018050973 ubox
15 48 0.043919969 ubox
15 49 0.005793726 ubox
16 25 0.009851711 ubox
16 31 0.025907038 ubox
16 32 0.136855377 ubox
16 33 0.069946455 ubox
16 34 0.008556701 ubox
16 35 0.010614434 ubox
16 38 0.010384313 ubox
16 39 0.034049207 ubox
16 48 0.004764896 ubox
16 49 0.073761135 ubox
17 24 0.010449140 ubox
17 31 0.144742303 ubox
17 34 0.012519430 ubox
17 38 0.032741218 ubox
17 45 0.055431900 ubox
17 48 0.079836822 ubox
18 23 0.010202184 ubox
18 29 0.151353239 ubox
18 30 0.012967797 ubox
18 37 0.015352036 ubox
18 42 0.003265234 ubox
18 44 0.056146373 ubox
18 47 0.079278630 ubox
19 28 0.151439711 ubox
19 31 0.049425046 ubox
19 38 0.102831750 ubox
19 43 0.055682947 ubox
19 45 0.008250507 ubox
20 27 0.151318782 ubox
20 30 0.055523251 ubox
20 37 0.111991691 ubox
20 41 0.032759495 ubox
20 42 0.044910105 ubox
21 26 0.150102066 ubox
21 29 0.057464446 ubox
21 36 0.113987289 ubox
21 40 0.046666324 ubox
21 41 0.031392568 ubox
21 44 0.080648389 ubox
22 28 0.057358819 ubox
22 35 0.113997174 ubox
22 39 0.056473490 ubox
22 43 0.080702289 ubox
22 45 0.003469626 ubox
23 31 0.004754585 ubox
23 34 0.113946057 ubox
23 38 0.056620960 ubox
23 43 0.024402526 ubox
23 45 0.023044545 ubox
23 48 0.949038893 ubox
24 30 0.004982396 ubox
24 37 0.053653266 ubox
24 41 0.099226229 ubox
24 42 0.020609912 ubox
24 44 0.022705722 ubox
24 47 0.958785835 ubox
25 40 0.108835264 ubox
25 41 0.015034668 ubox
25 46 0.958470939 ubox
26 34 0.047306117 ubox
26 35 0.038991869 ubox
26 39 0.112216894 ubox
26 45 0.933502225 ubox
27 33 0.049445957 ubox
27 34 0.039780073 ubox
27 38 0.105625738 ubox
27 43 0.040482155 ubox
27 45 0.215851052 ubox
27 48 0.005962336 ubox
28 36 0.131842302 ubox
28 37 0.016014194 ubox
28 40 0.085384887 ubox
28 42 0.007955453 ubox
28 44 0.943042425 ubox
28 46 0.008630112 ubox
28 47 0.007010016 ubox
29 35 0.132555369 ubox
29 39 0.087823933 ubox
29 43 0.939625270 ubox
29 45 0.010480496 ubox
30 34 0.119501996 ubox
30 38 0.087623885 ubox
30 43 0.098203461 ubox
30 45 0.004605482 ubox
30 48 0.094685014 ubox
31 37 0.067250897 ubox
31 41 0.287892254 ubox
31 42 0.646915557 ubox
31 44 0.010649176 ubox
31 47 0.116833478 ubox
32 40 0.303299358 ubox
32 41 0.696564586 ubox
32 42 0.140706568 ubox
32 46 0.115709795 ubox
33 40 0.676210741 ubox
33 41 0.164200583 ubox
33 42 0.053627131 ubox
34 40 0.163896312 ubox
34 41 0.052247901 ubox
34 42 0.017820913 ubox
34 47 0.040782424 ubox
35 40 0.037940260 ubox
35 41 0.015571051 ubox
35 44 0.180165278 ubox
35 46 0.041207537 ubox
36 43 0.180218803 ubox
36 45 0.041269451 ubox
37 43 0.004469176 ubox
37 45 0.008718880 ubox
37 48 0.009934154 ubox
38 42 0.005066471 ubox
38 44 0.036040919 ubox
38 47 0.012275399 ubox
39 46 0.009510688 ubox
39 50 0.009011548 ubox
40 49 0.009172299 ubox
41 48 0.008688039 ubox
41 49 0.008544701 ubox
42 48 0.010020896 ubox
43 47 0.010276989 ubox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
showpage
end
%%EOF
