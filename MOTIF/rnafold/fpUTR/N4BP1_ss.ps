%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCGGCCCGCGGCGGCGGCAAAGGGGCGGAGGGGUUCGCUGCCAGCAAUUGCCAAGCUGCUGCGGUCGUGGCGGGAUGGUAUAGCCGGGCCUGAGGGCGGGCGGCGGGGCGCGGGCGGGGGCGAGGCGGCCGGGAAGGGCCGACGCCGCCUGACUGGCUUGGGAGCAGCGGCAGCAAGCUGAGGGGGCGUCGCCGCCGCCGGCCCCCGGCGCCGCCGCGGGAGGCCGCGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[219.42794800 69.74629974]
[205.23731995 74.60693359]
[191.04667664 79.46756744]
[176.85603333 84.32820129]
[162.66540527 89.18883514]
[148.47476196 94.04946899]
[134.28411865 98.91010284]
[120.09348297 103.77073669]
[96.30870056 130.26965332]
[83.66078186 138.33378601]
[71.01286316 146.39791870]
[58.36494827 154.46205139]
[45.71703339 162.52618408]
[33.06911850 170.59031677]
[20.42120361 178.65444946]
[7.77328730 186.71858215]
[-4.87462854 194.78269958]
[-17.52254486 202.84683228]
[-30.06291580 211.07720947]
[-42.49355698 219.47239685]
[-54.92419434 227.86758423]
[-67.35483551 236.26277161]
[-79.78547668 244.65795898]
[-79.87590027 262.80462646]
[-90.75725555 277.12988281]
[-107.91154480 281.99871826]
[-124.40206909 275.63906860]
[-136.60676575 284.35946655]
[-148.81147766 293.07986450]
[-161.01617432 301.80026245]
[-173.22087097 310.52066040]
[-179.95118713 324.83892822]
[-194.80485535 325.94262695]
[-207.00955200 334.66302490]
[-216.38191223 348.79083252]
[-232.55213928 343.69570923]
[-232.13249207 326.74697876]
[-215.72994995 322.45831299]
[-203.52523804 313.73791504]
[-197.66789246 300.04336548]
[-181.94126892 298.31594849]
[-169.73657227 289.59555054]
[-157.53186035 280.87515259]
[-145.32716370 272.15475464]
[-133.12246704 263.43438721]
[-134.82685852 251.43574524]
[-131.25382996 239.77990723]
[-123.02108765 230.69088745]
[-111.64143372 225.93002319]
[-99.24502563 226.45489502]
[-88.18066406 232.22732544]
[-75.75002289 223.83213806]
[-63.31938553 215.43695068]
[-50.88874435 207.04176331]
[-38.45810318 198.64657593]
[-36.68819427 194.22879028]
[-32.13433456 190.86775208]
[-25.58667564 190.19892883]
[-12.93876076 182.13479614]
[-0.29084510 174.07066345]
[12.35707092 166.00653076]
[25.00498581 157.94239807]
[37.65290070 149.87826538]
[50.30081940 141.81413269]
[62.94873428 133.75000000]
[75.59664917 125.68586731]
[88.24456787 117.62173462]
[86.95914459 102.67691040]
[73.11997223 96.89096069]
[59.28079605 91.10501099]
[45.44162369 85.31905365]
[30.91747093 91.54999542]
[16.27261162 85.60830688]
[10.19558048 71.01908875]
[16.29177094 56.43786621]
[30.94442177 50.51542282]
[45.46037674 56.76543427]
[51.22757339 71.47988129]
[65.06674957 77.26583099]
[78.90592194 83.05178833]
[92.74510193 88.83773804]
[88.27775574 74.51841736]
[97.36380768 62.58343887]
[112.35564423 63.07831192]
[120.63484192 75.58650970]
[115.23284912 89.58010101]
[129.42349243 84.71946716]
[143.61412048 79.85883331]
[157.80476379 74.99819946]
[171.99540710 70.13756561]
[186.18603516 65.27692413]
[200.37667847 60.41629410]
[214.56732178 55.55566025]
[217.53962708 46.64191818]
[224.17366028 40.18311310]
[232.90090942 37.53045654]
[241.73683167 39.15544128]
[248.73197937 44.57141876]
[263.10391235 40.27639771]
[277.47586060 35.98137283]
[291.84780884 31.68634987]
[306.21975708 27.39132690]
[320.59170532 23.09630394]
[334.96365356 18.80128288]
[349.33560181 14.50625896]
[363.42721558 9.36562252]
[377.18881226 3.39750266]
[390.95040894 -2.57061672]
[404.71200562 -8.53873634]
[418.43389893 -14.59755135]
[432.11553955 -20.74679756]
[445.79714966 -26.89604568]
[459.47875977 -33.04529190]
[473.16040039 -39.19453812]
[476.19232178 -43.39846039]
[480.13534546 -45.79168320]
[484.15206909 -46.32956696]
[487.50753784 -45.30442047]
[501.42190552 -50.90719986]
[515.33624268 -56.50997543]
[529.25054932 -62.11275101]
[543.16491699 -67.71553040]
[557.07928467 -73.31830597]
[570.99359131 -78.92108154]
[576.74841309 -90.45076752]
[588.43841553 -94.83616638]
[599.61529541 -90.24001312]
[613.60235596 -95.65863800]
[627.58947754 -101.07726288]
[641.57653809 -106.49588776]
[655.56365967 -111.91451263]
[669.55072021 -117.33313751]
[655.73913574 -123.18468475]
[648.82116699 -136.49412537]
[651.96795654 -151.16033936]
[663.73706055 -160.46023560]
[678.73345947 -160.13069153]
[690.08264160 -150.32278442]
[692.58215332 -135.53250122]
[685.08679199 -122.54030609]
[699.51416016 -126.64525604]
[713.94158936 -130.75019836]
[721.32281494 -136.09912109]
[728.58654785 -134.81275940]
[743.06683350 -138.72691345]
[757.54718018 -142.64106750]
[772.02746582 -146.55522156]
[786.50775146 -150.46936035]
[800.98809814 -154.38351440]
[812.29113770 -165.45381165]
[826.59643555 -161.30567932]
[841.07678223 -165.21983337]
[855.55706787 -169.13398743]
[859.21417236 -172.80702209]
[863.48535156 -174.54832458]
[867.53662109 -174.44589233]
[870.68841553 -172.90428162]
[885.31231689 -176.24209595]
[899.93621826 -179.57991028]
[914.56011963 -182.91772461]
[929.18408203 -186.25553894]
[943.80798340 -189.59335327]
[958.43188477 -192.93116760]
[964.23071289 -205.07574463]
[975.79357910 -211.57347107]
[988.79547119 -210.25062561]
[998.51885986 -201.81210327]
[1013.18554688 -204.95658875]
[1024.98376465 -216.34667969]
[1040.67028809 -211.56468201]
[1044.10803223 -195.52992249]
[1031.76062012 -184.73757935]
[1016.33007812 -190.28988647]
[1001.66339111 -187.14540100]
[993.13128662 -172.64291382]
[976.41912842 -168.73004150]
[961.76971436 -178.30725098]
[947.14581299 -174.96943665]
[932.52185059 -171.63162231]
[917.89794922 -168.29380798]
[903.27404785 -164.95599365]
[888.65014648 -161.61817932]
[874.02618408 -158.28036499]
[859.47125244 -154.65367126]
[844.99090576 -150.73951721]
[830.51062012 -146.82536316]
[820.24328613 -136.03503418]
[804.90222168 -139.90321350]
[790.42193604 -135.98905945]
[775.94158936 -132.07490540]
[761.46130371 -128.16075134]
[746.98101807 -124.24659729]
[732.50067139 -120.33245087]
[718.04650879 -116.32281494]
[703.61914062 -112.21786499]
[689.19177246 -108.11292267]
[674.96936035 -103.34605408]
[660.98223877 -97.92742920]
[646.99517822 -92.50880432]
[633.00811768 -87.09017944]
[619.02099609 -81.67155457]
[605.03393555 -76.25292969]
[594.77313232 -62.00659943]
[576.59637451 -65.00674438]
[562.68200684 -59.40396500]
[548.76770020 -53.80118561]
[534.85333252 -48.19841003]
[520.93902588 -42.59563446]
[507.02465820 -36.99285889]
[493.11032104 -31.39008141]
[479.30963135 -25.51291656]
[465.62802124 -19.36367035]
[451.94641113 -13.21442318]
[438.26477051 -7.06517649]
[424.58316040 -0.91592979]
[419.77963257 4.68254328]
[410.68011475 5.22286081]
[396.91851807 11.19097996]
[383.15692139 17.15909958]
[369.39532471 23.12721825]
[363.51815796 36.92790604]
[368.75170898 50.98529434]
[381.72900391 61.01133347]
[379.26699829 77.22461700]
[363.89840698 82.94631195]
[351.43307495 72.29042816]
[354.69430542 56.21882248]
[349.46078491 42.16143417]
[350.88967896 35.18072891]
[353.63061523 28.87820435]
[339.25866699 33.17322540]
[324.88671875 37.46825027]
[310.51477051 41.76327133]
[296.14282227 46.05829620]
[281.77087402 50.35331726]
[267.39895630 54.64833832]
[253.02700806 58.94336319]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 93]
[2 92]
[3 91]
[4 90]
[5 89]
[6 88]
[7 87]
[8 86]
[9 67]
[10 66]
[11 65]
[12 64]
[13 63]
[14 62]
[15 61]
[16 60]
[17 59]
[18 58]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[33 39]
[34 38]
[68 81]
[69 80]
[70 79]
[71 78]
[98 237]
[99 236]
[100 235]
[101 234]
[102 233]
[103 232]
[104 231]
[105 230]
[106 220]
[107 219]
[108 218]
[109 217]
[110 215]
[111 214]
[112 213]
[113 212]
[114 211]
[118 210]
[119 209]
[120 208]
[121 207]
[122 206]
[123 205]
[124 204]
[127 202]
[128 201]
[129 200]
[130 199]
[131 198]
[132 197]
[140 196]
[141 195]
[142 194]
[144 193]
[145 192]
[146 191]
[147 190]
[148 189]
[149 188]
[151 186]
[152 185]
[153 184]
[157 183]
[158 182]
[159 181]
[160 180]
[161 179]
[162 178]
[163 177]
[167 174]
[168 173]
[221 228]
[222 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
