%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SSX4B)
} def

/sequence { (\
UCAGAGUACGCACACGCCGAUUUGCCCUUUUGAUUCUUCCACAAUCAGGGUGAGACUGCUCCCAGUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.023249180 ubox
1 33 0.013382345 ubox
1 53 0.008130149 ubox
1 55 0.003716715 ubox
2 19 0.025392709 ubox
2 24 0.017441212 ubox
2 32 0.014650487 ubox
2 52 0.008679177 ubox
2 54 0.006336103 ubox
2 58 0.009250058 ubox
2 67 0.021494366 ubox
3 23 0.019864263 ubox
3 30 0.004836244 ubox
3 31 0.014136150 ubox
3 37 0.004385772 ubox
3 51 0.004106852 ubox
3 57 0.009531793 ubox
3 60 0.008450614 ubox
3 66 0.020725469 ubox
4 22 0.020770487 ubox
4 23 0.039332572 ubox
4 29 0.006838235 ubox
4 30 0.013548412 ubox
4 36 0.004698163 ubox
4 56 0.009490207 ubox
4 59 0.009009575 ubox
4 61 0.151910159 ubox
5 21 0.021101434 ubox
5 22 0.044668588 ubox
5 23 0.003854456 ubox
5 28 0.007889415 ubox
5 29 0.012911538 ubox
5 35 0.004696867 ubox
5 57 0.015719525 ubox
5 60 0.152299141 ubox
6 13 0.023441840 ubox
6 15 0.033134897 ubox
6 17 0.018441196 ubox
6 21 0.052120175 ubox
6 22 0.003906788 ubox
6 25 0.004231040 ubox
6 27 0.008710989 ubox
6 28 0.010527690 ubox
6 34 0.004683567 ubox
6 56 0.016052986 ubox
6 59 0.152304895 ubox
6 68 0.564756714 ubox
7 12 0.021980182 ubox
7 14 0.031808574 ubox
7 16 0.018085882 ubox
7 20 0.052794616 ubox
7 24 0.004253730 ubox
7 33 0.004655988 ubox
7 55 0.015628026 ubox
7 58 0.151309704 ubox
7 67 0.565664081 ubox
8 23 0.004122150 ubox
8 57 0.136811627 ubox
8 66 0.565363378 ubox
9 16 0.050833315 ubox
9 19 0.079974188 ubox
9 32 0.003588988 ubox
9 52 0.004290506 ubox
9 65 0.565150190 ubox
9 67 0.074782439 ubox
10 15 0.052636150 ubox
10 17 0.185187956 ubox
10 18 0.060933047 ubox
10 25 0.022151043 ubox
10 31 0.003197154 ubox
10 59 0.027972110 ubox
10 66 0.075818981 ubox
10 68 0.789053586 ubox
11 16 0.192978291 ubox
11 24 0.022210933 ubox
11 52 0.007576263 ubox
11 58 0.027987854 ubox
11 65 0.075858913 ubox
11 67 0.790609750 ubox
12 23 0.020293964 ubox
12 51 0.007065188 ubox
12 57 0.026999599 ubox
12 66 0.789374828 ubox
13 24 0.003812496 ubox
13 50 0.006709818 ubox
13 52 0.035496778 ubox
13 58 0.005963688 ubox
13 65 0.787159504 ubox
13 67 0.056162460 ubox
14 23 0.005904701 ubox
14 51 0.035548767 ubox
14 57 0.005938636 ubox
14 66 0.057456167 ubox
15 24 0.013763035 ubox
15 50 0.035420977 ubox
15 52 0.009587937 ubox
15 58 0.028760468 ubox
15 65 0.058489403 ubox
15 67 0.010369155 ubox
16 23 0.011601948 ubox
16 25 0.064335097 ubox
16 51 0.009926852 ubox
16 57 0.026538842 ubox
16 59 0.938925708 ubox
16 66 0.010351864 ubox
16 68 0.022719057 ubox
17 24 0.064191003 ubox
17 49 0.034674733 ubox
17 50 0.009903503 ubox
17 58 0.935934858 ubox
17 65 0.010421569 ubox
17 67 0.022618969 ubox
18 24 0.009444004 ubox
18 32 0.004608624 ubox
18 48 0.034748725 ubox
18 49 0.009809264 ubox
18 52 0.005041141 ubox
18 58 0.128977828 ubox
18 67 0.003745667 ubox
19 23 0.007390406 ubox
19 30 0.004623971 ubox
19 31 0.004710648 ubox
19 36 0.004436493 ubox
19 46 0.030980530 ubox
19 57 0.138777988 ubox
19 61 0.075427628 ubox
20 29 0.005372009 ubox
20 30 0.004703422 ubox
20 35 0.004301855 ubox
20 45 0.031020340 ubox
20 60 0.075325979 ubox
21 44 0.029224428 ubox
21 53 0.051161525 ubox
21 54 0.854045991 ubox
21 55 0.118168646 ubox
22 33 0.004053781 ubox
22 43 0.026122634 ubox
22 44 0.018399671 ubox
22 52 0.037524421 ubox
22 53 0.957061425 ubox
22 54 0.113631668 ubox
22 55 0.018171810 ubox
23 32 0.004155177 ubox
23 41 0.019495923 ubox
23 43 0.021156386 ubox
23 52 0.963544179 ubox
23 53 0.106165141 ubox
23 54 0.017478983 ubox
24 40 0.019705858 ubox
24 42 0.023249880 ubox
24 51 0.991859201 ubox
24 68 0.003441740 ubox
25 49 0.003486920 ubox
25 50 0.995649471 ubox
25 67 0.003448527 ubox
26 48 0.004973409 ubox
26 49 0.995614389 ubox
26 50 0.034765966 ubox
27 48 0.993214024 ubox
27 49 0.036840983 ubox
27 50 0.005314890 ubox
28 44 0.027599795 ubox
28 47 0.794742873 ubox
28 48 0.034783738 ubox
28 49 0.004751812 ubox
28 50 0.008473511 ubox
29 43 0.051885333 ubox
29 44 0.091637676 ubox
29 47 0.042105993 ubox
29 48 0.008481407 ubox
29 49 0.014687713 ubox
30 43 0.098375599 ubox
30 44 0.509017307 ubox
30 47 0.037191847 ubox
30 48 0.088700510 ubox
31 41 0.116246979 ubox
31 43 0.519927598 ubox
31 47 0.582934146 ubox
32 38 0.006432254 ubox
32 39 0.137544908 ubox
32 40 0.113397362 ubox
32 42 0.514993367 ubox
32 46 0.825343048 ubox
33 37 0.012984399 ubox
33 38 0.149401284 ubox
33 45 0.824781940 ubox
34 44 0.818968225 ubox
34 54 0.006616350 ubox
35 43 0.766675268 ubox
35 53 0.009769995 ubox
35 55 0.005878023 ubox
36 48 0.003602598 ubox
36 52 0.010044455 ubox
36 54 0.008074640 ubox
37 44 0.017443244 ubox
37 47 0.003461655 ubox
37 53 0.008010478 ubox
38 43 0.022786058 ubox
38 50 0.008817395 ubox
38 52 0.007153425 ubox
39 49 0.010838045 ubox
39 50 0.007823546 ubox
40 48 0.011001573 ubox
40 49 0.007829403 ubox
40 52 0.005004071 ubox
40 67 0.003190529 ubox
41 51 0.005138974 ubox
41 66 0.003215378 ubox
42 50 0.005140687 ubox
42 65 0.003200352 ubox
46 67 0.003733222 ubox
47 66 0.003732944 ubox
48 61 0.007723186 ubox
48 62 0.004163948 ubox
48 63 0.019818479 ubox
49 60 0.007990403 ubox
49 61 0.004179809 ubox
49 62 0.019761518 ubox
49 63 0.070853838 ubox
49 69 0.004104837 ubox
50 59 0.009124316 ubox
50 61 0.018476778 ubox
50 62 0.071300845 ubox
50 68 0.004284125 ubox
51 58 0.009051081 ubox
51 64 0.009931235 ubox
51 67 0.004283766 ubox
52 57 0.005914185 ubox
52 61 0.150685912 ubox
52 63 0.018458702 ubox
53 60 0.151714008 ubox
54 59 0.151300933 ubox
54 61 0.040770508 ubox
55 60 0.036881166 ubox
55 66 0.134550240 ubox
56 65 0.139342821 ubox
57 64 0.143309234 ubox
57 67 0.007603211 ubox
58 63 0.142334881 ubox
58 66 0.014067289 ubox
58 68 0.028898221 ubox
59 65 0.014551032 ubox
59 67 0.029007894 ubox
60 64 0.017591451 ubox
10 68 0.9500000 lbox
11 67 0.9500000 lbox
12 66 0.9500000 lbox
13 65 0.9500000 lbox
16 59 0.9500000 lbox
17 58 0.9500000 lbox
21 54 0.9500000 lbox
22 53 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
25 50 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
35 43 0.9500000 lbox
showpage
end
%%EOF
