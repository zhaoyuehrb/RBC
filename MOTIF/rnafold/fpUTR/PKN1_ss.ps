%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGGCGGCCUGGCCAGGCGAGGCGGGAGCCGAGCAGGCCGGAGCGGGCCGCGCGCCGGGGAGGGUCGCGCCGCGCCCGCCCCCUCCCCGCCACGCCCGGGGCGCACGCGCGCUCCUCUGGCCGCCCCUCCCUCCGCGCGGGGACCCCUGGCGGGCGGCAGGAGGAC\
) } def
/len { sequence length } bind def

/coor [
[178.96066284 257.48059082]
[172.99534607 243.71778870]
[177.12196350 229.29660034]
[189.46464539 220.77261353]
[204.41174316 222.02029419]
[194.88909912 210.43066406]
[185.36647034 198.84103394]
[175.84384155 187.25141907]
[166.32119751 175.66178894]
[156.79856873 164.07215881]
[147.27593994 152.48252869]
[133.21797180 147.56088257]
[130.43519592 131.98632812]
[120.91255951 120.39669800]
[103.93217468 127.34929657]
[87.23157501 122.70469666]
[77.49718475 109.60484314]
[77.83582306 94.30112457]
[65.33480835 86.01109314]
[52.83378983 77.72106171]
[40.33277512 69.43103027]
[24.55553436 68.25238037]
[18.22477913 54.77013779]
[5.72376347 46.48010635]
[-6.77725172 38.19007492]
[-19.27826691 29.90004349]
[-31.77928162 21.61001015]
[-44.28029633 13.31997967]
[-64.22184753 18.26359367]
[-80.85154724 6.99680853]
[-95.30992889 10.99120140]
[-109.76831055 14.98559380]
[-118.90089417 28.17556572]
[-134.91639709 29.11543274]
[-145.52908325 17.08420753]
[-142.59782410 1.31121755]
[-128.37121582 -6.10384989]
[-113.76270294 0.52721071]
[-99.30432129 -3.46718168]
[-84.84593964 -7.46157408]
[-84.10410309 -12.47407341]
[-82.34291840 -17.22525024]
[-93.09635925 -27.68294907]
[-108.38394165 -31.75731087]
[-112.11378479 -46.17734909]
[-122.86723328 -56.63504791]
[-133.62066650 -67.09275055]
[-144.37411499 -77.55044556]
[-155.12756348 -88.00814819]
[-165.88099670 -98.46584320]
[-176.73118591 -108.82314301]
[-187.67715454 -119.07914734]
[-198.71798706 -129.23297119]
[-209.85270691 -139.28373718]
[-220.98742676 -149.33450317]
[-232.12216187 -159.38526917]
[-243.34982300 -169.33210754]
[-254.66944885 -179.17416382]
[-270.41592407 -177.82345581]
[-282.45144653 -188.06655884]
[-283.63562012 -203.82641602]
[-273.26583862 -215.75300598]
[-257.49432373 -216.77046204]
[-245.67805481 -206.27517700]
[-244.82739258 -190.49378967]
[-233.50776672 -180.65173340]
[-226.36795044 -178.62773132]
[-222.07139587 -170.51998901]
[-210.93666077 -160.46922302]
[-199.80194092 -150.41845703]
[-188.66722107 -140.36769104]
[-181.56625366 -138.21131897]
[-177.42115784 -130.02511597]
[-166.47517395 -119.76911926]
[-159.41552734 -117.48112488]
[-155.42330933 -109.21928406]
[-144.66986084 -98.76158905]
[-133.91641235 -88.30388641]
[-123.16297150 -77.84619141]
[-112.40953064 -67.38849640]
[-101.65608978 -56.93079376]
[-87.13766479 -53.60443878]
[-82.63866425 -38.43639374]
[-71.88522339 -27.97869492]
[-58.02103424 -30.97398949]
[-44.66438675 -25.73654175]
[-36.34482956 -13.84906006]
[-35.99026489 0.81896436]
[-23.48925018 9.10899639]
[-10.98823452 17.39902878]
[1.51278019 25.68906021]
[14.01379490 33.97909164]
[26.51481056 42.26912308]
[41.39789581 42.85481644]
[48.62281036 56.93001175]
[61.12382507 65.22004700]
[73.62483978 73.51007843]
[86.12585449 81.80010986]
[104.54847717 74.35147095]
[124.61862946 84.27475739]
[136.29626465 74.86025238]
[147.97390747 65.44575500]
[159.65153503 56.03125000]
[171.32917786 46.61674881]
[183.00680542 37.20224762]
[194.68443298 27.78774452]
[200.08660889 12.30392933]
[216.24543762 9.50667667]
[226.53808594 22.27355957]
[220.37637329 37.47110367]
[204.09893799 39.46537781]
[192.42131042 48.87988281]
[180.74366760 58.29438400]
[169.06604004 67.70888519]
[157.38839722 77.12339020]
[145.71076965 86.53788757]
[134.03314209 95.95239258]
[132.50218201 110.87406158]
[142.02482605 122.46368408]
[156.76391602 128.21430969]
[158.86557007 142.95989990]
[168.38819885 154.54953003]
[177.91082764 166.13916016]
[187.43345642 177.72877502]
[196.95610046 189.31840515]
[206.47872925 200.90803528]
[216.00135803 212.49766541]
[226.25737000 223.44363403]
[237.20333862 233.69964600]
[248.14932251 243.95564270]
[259.09530640 254.21165466]
[270.04125977 264.46765137]
[285.61444092 264.12963867]
[296.56912231 274.68661499]
[296.79537964 289.53533936]
[307.74136353 299.79135132]
[318.68731689 310.04733276]
[329.63330078 320.30334473]
[340.76803589 330.35412598]
[352.08764648 340.19616699]
[367.57858276 343.41207886]
[372.10638428 357.60180664]
[383.42599487 367.44384766]
[394.74563599 377.28591919]
[410.66574097 383.11572266]
[409.47085571 400.02752686]
[392.88922119 403.56100464]
[384.90356445 388.60552979]
[373.58395386 378.76348877]
[362.26431274 368.92144775]
[347.58306885 366.40948486]
[342.24560547 351.51580811]
[330.92596436 341.67373657]
[326.14611816 341.11264038]
[321.67984009 337.51663208]
[319.37728882 331.24932861]
[308.43133545 320.99331665]
[297.48535156 310.73730469]
[286.53936768 300.48132324]
[271.70736694 301.22094727]
[260.46047974 290.97583008]
[259.78527832 275.41363525]
[248.83929443 265.15762329]
[237.89331055 254.90162659]
[226.94734192 244.64561462]
[216.00135803 234.38961792]
[216.27427673 249.38713074]
[206.96533203 261.14907837]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 127]
[6 126]
[7 125]
[8 124]
[9 123]
[10 122]
[11 121]
[13 119]
[14 118]
[18 98]
[19 97]
[20 96]
[21 95]
[23 93]
[24 92]
[25 91]
[26 90]
[27 89]
[28 88]
[30 40]
[31 39]
[32 38]
[42 84]
[43 83]
[45 81]
[46 80]
[47 79]
[48 78]
[49 77]
[50 76]
[51 74]
[52 73]
[53 71]
[54 70]
[55 69]
[56 68]
[57 66]
[58 65]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[105 112]
[106 111]
[128 166]
[129 165]
[130 164]
[131 163]
[132 162]
[135 159]
[136 158]
[137 157]
[138 156]
[139 153]
[140 152]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
