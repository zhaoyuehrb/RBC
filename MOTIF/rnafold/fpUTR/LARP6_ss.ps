%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGGCGGCGGCGGCGGCGGCGCGGGGCGGGGCGCCGCGACCCCUGUCCCUCCCCUGGGCCGAGCGGCAGGCGCGCUCGCACCGCCCCCGCCCCCUCGUCGCAGUCGCUGCCGACCGGCUGGCUGGGCCUUGCGGCGUGAGGACCCCGGCGGCGCCGCAGUCCCGCGAGCC\
) } def
/len { sequence length } bind def

/coor [
[340.95678711 268.16165161]
[328.57742310 259.69104004]
[316.12380981 251.32998657]
[303.59686279 243.07916260]
[291.06994629 234.82833862]
[278.54302979 226.57751465]
[266.01608276 218.32669067]
[253.48916626 210.07586670]
[240.96223450 201.82504272]
[228.43531799 193.57421875]
[215.90838623 185.32339478]
[203.38145447 177.07255554]
[188.49661255 176.53350830]
[181.22763062 162.48100281]
[168.70071411 154.23017883]
[156.17378235 145.97935486]
[143.64685059 137.72853088]
[131.11993408 129.47770691]
[118.59300232 121.22688293]
[106.06607819 112.97605896]
[92.12104034 111.96233368]
[85.68309784 99.55086517]
[73.15617371 91.30004120]
[64.23873901 89.18290710]
[60.48274612 82.79142761]
[48.10338593 74.32080841]
[35.72402573 65.85018921]
[23.34466362 57.37956619]
[14.46598625 55.10538101]
[10.82337761 48.64860916]
[-1.40456164 39.96083069]
[-13.63250065 31.27305031]
[-25.86043930 22.58527184]
[-38.08837891 13.89749336]
[-50.31631851 5.20971441]
[-62.54425812 -3.47806478]
[-78.27543640 -5.16350508]
[-84.16932678 -18.84236908]
[-96.39726257 -27.53014755]
[-108.62519836 -36.21792603]
[-126.98007965 -37.50891495]
[-133.68597412 -53.71223831]
[-146.06532288 -62.18286133]
[-158.44468689 -70.65348053]
[-170.82405090 -79.12409973]
[-176.08918762 -79.52262115]
[-180.24569702 -81.69931793]
[-182.79884338 -84.92639160]
[-183.61813354 -88.38509369]
[-195.53186035 -97.49900055]
[-207.44557190 -106.61290741]
[-219.35928345 -115.72682190]
[-231.27301025 -124.84072876]
[-243.18672180 -133.95463562]
[-258.84860229 -136.19419861]
[-264.25610352 -150.07255554]
[-276.16979980 -159.18646240]
[-288.08352661 -168.30036926]
[-300.15621948 -177.20259094]
[-312.38418579 -185.89038086]
[-328.79812622 -190.13522339]
[-329.26300049 -207.08279419]
[-313.10644531 -212.22105408]
[-303.69638062 -198.11831665]
[-291.46844482 -189.43054199]
[-286.66604614 -189.33717346]
[-281.87814331 -186.20567322]
[-278.96960449 -180.21408081]
[-267.05590820 -171.10017395]
[-255.14218140 -161.98626709]
[-240.33242798 -160.39859009]
[-234.07281494 -145.86834717]
[-222.15910339 -136.75444031]
[-210.24537659 -127.64053345]
[-198.33166504 -118.52662659]
[-186.41793823 -109.41271973]
[-174.50422668 -100.29881287]
[-162.35342407 -91.50346375]
[-149.97407532 -83.03284454]
[-137.59471130 -74.56221771]
[-125.21534729 -66.09159851]
[-113.25263977 -68.00932312]
[-102.86388397 -61.02789688]
[-99.93742371 -48.44586563]
[-87.70948029 -39.75808716]
[-75.48154449 -31.07030869]
[-60.62499237 -30.00627708]
[-53.85647964 -15.70600414]
[-41.62854004 -7.01822519]
[-29.40060043 1.66955388]
[-17.17266083 10.35733223]
[-4.94472218 19.04511070]
[7.28321743 27.73289108]
[19.51115608 36.42066956]
[31.81528473 45.00020218]
[44.19464493 53.47082520]
[56.57400894 61.94144440]
[68.95336914 70.41206360]
[81.40699768 78.77311707]
[93.93392181 87.02394104]
[107.87895966 88.03766632]
[114.31690216 100.44913483]
[126.84382629 108.69995880]
[139.37075806 116.95078278]
[151.89767456 125.20160675]
[164.42460632 133.45243835]
[176.95153809 141.70326233]
[189.47845459 149.95408630]
[205.25932312 151.08329773]
[211.63227844 164.54563904]
[224.15921021 172.79646301]
[236.68614197 181.04728699]
[249.21305847 189.29811096]
[261.73999023 197.54893494]
[274.26690674 205.79975891]
[286.79385376 214.05058289]
[299.32077026 222.30140686]
[311.84768677 230.55223083]
[324.37463379 238.80305481]
[333.29205322 240.92019653]
[337.04803467 247.31167603]
[349.42739868 255.78230286]
[361.88104248 264.14334106]
[374.40795898 272.39416504]
[386.93487549 280.64498901]
[399.46182251 288.89581299]
[415.24267578 290.02502441]
[421.61563110 303.48736572]
[434.14257812 311.73818970]
[449.92343140 312.86740112]
[456.29638672 326.32974243]
[468.82330322 334.58056641]
[481.35025024 342.83139038]
[493.87716675 351.08221436]
[500.49218750 351.85699463]
[505.02490234 355.34765625]
[506.69348145 359.85183716]
[518.92144775 368.53961182]
[531.14935303 377.22738647]
[543.37731934 385.91516113]
[555.60522461 394.60296631]
[567.83319092 403.29074097]
[580.06109619 411.97851562]
[592.28906250 420.66629028]
[610.80712891 416.77972412]
[626.04278564 427.45416260]
[628.62359619 445.55545044]
[641.15051270 453.80627441]
[657.70404053 457.46920776]
[658.76672363 474.38983154]
[642.80157471 480.09506226]
[632.89965820 466.33322144]
[620.37274170 458.08239746]
[609.92797852 462.75961304]
[598.40441895 461.79031372]
[588.68798828 455.30072021]
[583.26831055 444.81402588]
[583.60125732 432.89422607]
[571.37335205 424.20645142]
[559.14538574 415.51867676]
[546.91748047 406.83090210]
[534.68951416 398.14312744]
[522.46160889 389.45532227]
[510.23364258 380.76754761]
[498.00570679 372.07977295]
[485.62634277 363.60916138]
[473.09942627 355.35833740]
[460.57247925 347.10751343]
[448.04556274 338.85668945]
[433.16070557 338.31762695]
[425.89175415 324.26513672]
[413.36480713 316.01431274]
[398.47994995 315.47525024]
[391.21099854 301.42276001]
[378.68405151 293.17193604]
[366.15713501 284.92111206]
[353.63021851 276.67025757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 122]
[2 121]
[3 119]
[4 118]
[5 117]
[6 116]
[7 115]
[8 114]
[9 113]
[10 112]
[11 111]
[12 110]
[14 108]
[15 107]
[16 106]
[17 105]
[18 104]
[19 103]
[20 102]
[22 100]
[23 99]
[25 98]
[26 97]
[27 96]
[28 95]
[30 94]
[31 93]
[32 92]
[33 91]
[34 90]
[35 89]
[36 88]
[38 86]
[39 85]
[40 84]
[42 81]
[43 80]
[44 79]
[45 78]
[49 77]
[50 76]
[51 75]
[52 74]
[53 73]
[54 72]
[56 70]
[57 69]
[58 68]
[59 65]
[60 64]
[123 177]
[124 176]
[125 175]
[126 174]
[128 172]
[129 171]
[131 169]
[132 168]
[133 167]
[134 166]
[137 165]
[138 164]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[144 158]
[147 153]
[148 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
