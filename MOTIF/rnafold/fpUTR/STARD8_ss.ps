%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUUCCAGGAGGCGGGAGGCGCCCGCUGUCGAGGCAGCUGAGCCCCGGCAACCGCUGCUCUCCGCCUCUCCCCUCGCGGGGCCGGCUCAUGGAGCGCAGGGACCGGGCUGGCUCUCGCCGAGCCCCGGGCCUCUUUUAGCCUCGUCCCCAGAGAGGGAGGAGCCGGUGCCCGGCACAGCCCCGCCGGCCCUAGAAGCUCCCCACGCGCCACC\
) } def
/len { sequence length } bind def

/coor [
[401.35803223 17.94058228]
[387.09216309 22.57583618]
[372.82632446 27.21109200]
[358.56048584 31.84634590]
[355.63366699 35.61683655]
[350.30841064 37.59050369]
[343.80960083 36.40201187]
[329.41439819 40.61843872]
[322.51507568 53.76890945]
[307.97634888 58.25003052]
[294.22970581 50.92421722]
[279.83450317 55.14064407]
[265.43930054 59.35707474]
[251.04411316 63.57350159]
[241.00492859 74.57640839]
[225.58625793 71.03023529]
[211.19107056 75.24666595]
[196.79586792 79.46309662]
[182.40066528 83.67951965]
[168.00546265 87.89595032]
[153.61027527 92.11238098]
[139.21507263 96.32881165]
[124.81987000 100.54523468]
[124.73878479 113.63993073]
[117.49002075 126.40707397]
[103.61107635 134.91162109]
[85.75248718 135.79028320]
[73.30332184 144.15797424]
[60.85415268 152.52566528]
[48.40498734 160.89337158]
[35.95582199 169.26106262]
[29.23285294 184.21879578]
[12.89248085 185.60597229]
[3.74427962 171.99559021]
[11.19913387 157.38883972]
[27.58812904 156.81188965]
[40.03729630 148.44419861]
[52.48646164 140.07650757]
[64.93562317 131.70881653]
[77.38478851 123.34111786]
[75.01511383 116.22531891]
[67.90607452 94.87791443]
[52.92568970 95.64471436]
[37.94530106 96.41151428]
[22.96491432 97.17831421]
[12.40327358 108.62774658]
[-2.79989314 109.19198608]
[-13.65009022 99.05252075]
[-28.63047791 99.81932068]
[-43.61086655 100.58612061]
[-59.12020111 107.43424988]
[-69.99411011 94.42677307]
[-60.50517654 80.37699127]
[-44.37766266 85.60572815]
[-29.39727592 84.83892822]
[-14.41688824 84.07212830]
[-4.65870237 72.87778473]
[10.52261829 71.88674164]
[22.19811440 82.19792938]
[37.17850113 81.43112946]
[52.15888977 80.66432953]
[67.13928223 79.89752960]
[88.20121765 68.15921021]
[109.02330780 72.02817535]
[120.60344696 86.15003967]
[134.99864197 81.93360901]
[149.39384460 77.71717834]
[163.78904724 73.50075531]
[178.18423462 69.28432465]
[192.57943726 65.06789398]
[206.97463989 60.85146713]
[221.36982727 56.63504028]
[232.43865967 45.33054733]
[246.82768250 49.17830276]
[261.22290039 44.96187592]
[275.61807251 40.74544525]
[290.01327515 36.52901840]
[297.63510132 22.94426727]
[312.29394531 18.87327385]
[325.19796753 26.22324181]
[339.59317017 22.00681305]
[353.92523193 17.58049965]
[368.19107056 12.94524384]
[382.45690918 8.30998898]
[396.72274780 3.67473435]
[410.84707642 -1.37538886]
[424.81781006 -6.83606768]
[438.78851318 -12.29674625]
[441.02557373 -29.73002052]
[451.73089600 -43.55736923]
[467.88281250 -50.02327728]
[484.99630737 -47.42954254]
[498.36853027 -36.58022690]
[512.17370605 -42.44679642]
[525.97894287 -48.31336975]
[539.78411865 -54.17993927]
[553.58929443 -60.04650879]
[560.00634766 -77.87416077]
[577.12414551 -85.22107697]
[593.88244629 -77.84841156]
[607.51031494 -84.11586761]
[621.13818359 -90.38331604]
[634.76605225 -96.65077209]
[641.25268555 -103.07763672]
[648.63916016 -102.90861511]
[662.35717773 -108.97627258]
[676.07513428 -115.04393768]
[689.79315186 -121.11159515]
[693.16107178 -136.14367676]
[704.60083008 -146.19279480]
[719.58709717 -147.56265259]
[732.35351562 -139.93663025]
[746.07153320 -146.00428772]
[759.78948975 -152.07194519]
[773.50750732 -158.13960266]
[776.88574219 -171.17620850]
[787.00714111 -179.76226807]
[800.03253174 -180.93476868]
[811.18756104 -174.48884583]
[824.99273682 -180.35542297]
[838.79797363 -186.22200012]
[852.60314941 -192.08856201]
[862.27795410 -204.60687256]
[877.01757812 -202.46357727]
[890.82275391 -208.33013916]
[900.49761963 -220.84844971]
[915.23718262 -218.70515442]
[929.04241943 -224.57171631]
[942.84759521 -230.43829346]
[956.65277100 -236.30487061]
[967.38623047 -251.26902771]
[984.70959473 -248.45587158]
[998.42755127 -254.52352905]
[1012.14556885 -260.59118652]
[1025.86352539 -266.65884399]
[1039.58154297 -272.72650146]
[1053.29956055 -278.79415894]
[1067.01757812 -284.86181641]
[1069.44848633 -288.45144653]
[1072.57958984 -290.84207153]
[1075.94848633 -291.96087646]
[1079.11669922 -291.89233398]
[1081.71875000 -290.85708618]
[1095.76770020 -296.11303711]
[1109.81677246 -301.36898804]
[1114.86279297 -316.17007446]
[1128.26892090 -324.22055054]
[1143.70507812 -321.71923828]
[1153.88293457 -309.84719849]
[1153.99670410 -294.21002197]
[1143.99279785 -282.19113159]
[1128.59460449 -279.46545410]
[1115.07275391 -287.31997681]
[1101.02368164 -282.06402588]
[1086.97460938 -276.80804443]
[1073.08520508 -271.14382935]
[1059.36718750 -265.07617188]
[1045.64916992 -259.00851440]
[1031.93127441 -252.94084167]
[1018.21325684 -246.87318420]
[1004.49523926 -240.80552673]
[990.77722168 -234.73786926]
[986.12493896 -223.57377625]
[974.74841309 -218.40559387]
[962.51934814 -222.49966431]
[948.71417236 -216.63310242]
[934.90893555 -210.76652527]
[921.10375977 -204.89996338]
[912.41638184 -192.80126953]
[896.68933105 -194.52494812]
[882.88415527 -188.65838623]
[874.19671631 -176.55969238]
[858.46972656 -178.28337097]
[844.66455078 -172.41679382]
[830.85931396 -166.55023193]
[817.05413818 -160.68365479]
[811.43121338 -144.83224487]
[795.77471924 -137.81529236]
[779.57513428 -144.42160034]
[765.85717773 -138.35394287]
[752.13916016 -132.28628540]
[738.42114258 -126.21862793]
[735.47497559 -111.64268494]
[724.37957764 -101.47627258]
[709.24841309 -99.77272034]
[695.86077881 -107.39359283]
[682.14282227 -101.32593536]
[668.42480469 -95.25827789]
[654.70678711 -89.19061279]
[641.03350830 -83.02289581]
[627.40563965 -76.75543976]
[613.77777100 -70.48799133]
[600.14990234 -64.22053528]
[598.60546875 -52.92006683]
[591.72772217 -43.67181396]
[581.13165283 -38.84128189]
[569.40045166 -39.73317337]
[559.45587158 -46.24131775]
[545.65069580 -40.37474823]
[531.84545898 -34.50817490]
[518.04028320 -28.64160538]
[504.23510742 -22.77503395]
[504.05941772 -10.14554501]
[499.10293579 1.52279794]
[490.06912231 10.48348904]
[478.27462769 15.38083172]
[465.45727539 15.45497322]
[453.52023315 10.65958214]
[444.24920654 1.67397285]
[430.27847290 7.13465166]
[416.30776978 12.59533024]
[415.06072998 15.10271072]
[412.74682617 17.26798439]
[409.49114990 18.68289185]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 85]
[2 84]
[3 83]
[4 82]
[7 81]
[8 80]
[11 77]
[12 76]
[13 75]
[14 74]
[16 72]
[17 71]
[18 70]
[19 69]
[20 68]
[21 67]
[22 66]
[23 65]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[42 62]
[43 61]
[44 60]
[45 59]
[48 56]
[49 55]
[50 54]
[86 211]
[87 210]
[88 209]
[93 202]
[94 201]
[95 200]
[96 199]
[97 198]
[100 193]
[101 192]
[102 191]
[103 190]
[105 189]
[106 188]
[107 187]
[108 186]
[112 182]
[113 181]
[114 180]
[115 179]
[119 176]
[120 175]
[121 174]
[122 173]
[124 171]
[125 170]
[127 168]
[128 167]
[129 166]
[130 165]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[137 157]
[138 156]
[143 155]
[144 154]
[145 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
