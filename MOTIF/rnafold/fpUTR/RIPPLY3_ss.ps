%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCGACCCGGGCUUUUCCUUCGUACCCUGCGGCCCCCUCCGCACCCCUCACGGAGCUCCUCGGGUCCUGCCCCCUCCCAGCGCUUGCCCGCGCCGCCCCGCCCCCGUUUUUAAACCUGGCGCGCGGGUAGGUGAGCGCGUUAGCCCGAGUGGAUCUAGGCGCGCUCGUAGGCCGGCGCCGCAGCAAGGGGCGCGGGCUCCGCCGGCACC\
) } def
/len { sequence length } bind def

/coor [
[72.89408875 156.53074646]
[62.57935333 145.64010620]
[60.16617584 130.83549500]
[66.48848724 117.23297882]
[79.36181641 109.53313446]
[66.18933868 116.70850372]
[53.01686096 123.88386536]
[39.84438705 131.05923462]
[26.67190933 138.23460388]
[13.49943447 145.40997314]
[0.32695845 152.58532715]
[-12.84551716 159.76069641]
[-12.32617092 171.21253967]
[-16.10077095 181.98252869]
[-23.58787155 190.52743530]
[-33.67702103 195.63800049]
[-44.89334488 196.61004639]
[-55.61311722 193.34132385]
[-64.29882050 186.34065247]
[-77.77854919 192.92068481]
[-91.25828552 199.50071716]
[-104.73802185 206.08073425]
[-118.21775818 212.66076660]
[-131.69749451 219.24079895]
[-132.50648499 236.79580688]
[-142.04660034 251.44834900]
[-157.61402893 259.21102905]
[-174.87986755 258.02603149]
[-189.09371948 248.30981445]
[-202.37156677 255.28826904]
[-215.64941406 262.26672363]
[-228.92726135 269.24517822]
[-242.20510864 276.22363281]
[-246.65837097 291.38751221]
[-260.56964111 298.88766479]
[-275.68560791 294.27432251]
[-283.03823853 280.28451538]
[-278.26535034 265.21817017]
[-264.19860840 258.01385498]
[-249.18356323 262.94577026]
[-235.90571594 255.96731567]
[-222.62786865 248.98887634]
[-209.35002136 242.01042175]
[-196.07217407 235.03196716]
[-196.93215942 222.42726135]
[-192.94639587 210.38920593]
[-184.67344666 200.71728516]
[-173.31549072 194.87126160]
[-160.54364014 193.75105286]
[-148.25216675 197.55825806]
[-138.27751160 205.76106262]
[-124.79778290 199.18103027]
[-111.31804657 192.60099792]
[-97.83831787 186.02098083]
[-84.35858154 179.44094849]
[-70.87884521 172.86091614]
[-68.71034241 154.29777527]
[-55.68788528 140.68365479]
[-36.94286346 137.64495850]
[-20.02088356 146.58822632]
[-6.84840775 139.41285706]
[6.32406807 132.23748779]
[19.49654388 125.06212616]
[32.66901779 117.88675690]
[45.84149551 110.71139526]
[59.01396942 103.53602600]
[72.18644714 96.36065674]
[97.98206329 84.41194153]
[104.05590057 70.69667816]
[110.12973022 56.98140717]
[116.20356750 43.26613998]
[108.76409912 56.29128265]
[96.41132355 64.80062103]
[81.59015656 67.10995483]
[67.23406982 62.76220703]
[56.18450165 52.61789703]
[50.62842178 38.68484497]
[51.66551971 23.72073936]
[59.09053040 10.68735123]
[71.43386078 2.16430688]
[86.25244904 -0.16147108]
[100.61334991 4.17034626]
[111.67315674 14.30091953]
[112.78880310 -0.65753418]
[113.90445709 -15.61598778]
[115.02010345 -30.57444191]
[116.13574982 -45.53289413]
[117.25140381 -60.49134827]
[118.36705017 -75.44979858]
[119.48269653 -90.40825653]
[120.59835052 -105.36670685]
[121.71399689 -120.32516479]
[122.82964325 -135.28361511]
[123.94528961 -150.24206543]
[121.46282196 -159.03269958]
[125.19053650 -165.41438293]
[126.52877045 -180.35456848]
[127.86700439 -195.29475403]
[113.80579376 -200.81372070]
[101.86987305 -210.07171631]
[93.02684784 -222.31825256]
[87.99356842 -236.56054688]
[87.17806244 -251.64402771]
[90.64645386 -266.34597778]
[98.11755371 -279.47454834]
[108.98573303 -289.96545410]
[122.36994171 -296.96829224]
[137.18519592 -299.91531372]
[152.23046875 -298.56768799]
[166.28613281 -293.03457642]
[178.21275330 -283.76458740]
[187.04347229 -271.50918579]
[192.06243896 -257.26184082]
[192.86277771 -242.17755127]
[189.37963867 -227.47911072]
[181.89533997 -214.35804749]
[171.01663208 -203.87805176]
[157.62539673 -196.88867188]
[142.80718994 -193.95652771]
[141.46896362 -179.01634216]
[140.13072205 -164.07615662]
[138.90374756 -149.12641907]
[137.78810120 -134.16796875]
[136.67245483 -119.20951080]
[135.55679321 -104.25106049]
[134.44114685 -89.29260254]
[133.32550049 -74.33415222]
[132.20985413 -59.37569809]
[131.09420776 -44.41724396]
[129.97856140 -29.45879173]
[128.86291504 -14.50033855]
[127.74726105 0.45811450]
[126.63161469 15.41656780]
[138.03407288 25.16253281]
[152.63639832 21.73147202]
[167.23872375 18.30041122]
[181.84103394 14.86935043]
[196.44335938 11.43828964]
[211.04568481 8.00722790]
[225.64801025 4.57616711]
[240.25033569 1.14510620]
[254.82670593 -2.39456630]
[269.37631226 -6.04265404]
[283.92593384 -9.69074154]
[296.85421753 -22.80337143]
[313.52908325 -17.33384705]
[328.02279663 -21.19815254]
[339.24465942 -33.15647888]
[355.14794922 -29.15426826]
[359.37271118 -13.30865479]
[347.57287598 -1.92024505]
[331.88708496 -6.70445967]
[317.39340210 -2.84015417]
[311.06280518 7.46761847]
[299.01950073 10.80565262]
[287.57403564 4.85887909]
[273.02441406 8.50696659]
[258.47479248 12.15505409]
[252.75132751 16.83092880]
[243.68139648 15.74742889]
[229.07907104 19.17848969]
[214.47674561 22.60955048]
[199.87442017 26.04061127]
[185.27209473 29.47167206]
[170.66978455 32.90273285]
[156.06745911 36.33379364]
[141.46513367 39.76485443]
[129.91883850 49.33997726]
[123.84500122 63.05524063]
[117.77116394 76.77050781]
[111.69733429 90.48577881]
[113.36887360 105.39234924]
[122.32956696 117.42173004]
[131.29026794 129.45111084]
[140.25096130 141.48048401]
[149.21165466 153.50985718]
[158.17234802 165.53924561]
[167.13304138 177.56861877]
[176.44793701 189.32586670]
[186.10873413 200.80056763]
[195.76954651 212.27526855]
[205.43035889 223.74996948]
[213.35133362 228.29924011]
[215.14804077 235.46818542]
[224.63694763 247.08544922]
[240.39053345 250.11921692]
[247.71293640 264.39373779]
[240.98703003 278.95883179]
[225.37234497 282.64138794]
[212.84713745 272.61645508]
[213.01968384 256.57434082]
[203.53077698 244.95707703]
[193.95565796 233.41078186]
[184.29484558 221.93608093]
[174.63404846 210.46138000]
[164.97323608 198.98667908]
[162.19502258 198.61288452]
[159.39749146 197.11608887]
[157.00909424 194.48341370]
[155.45507812 190.85717773]
[155.10366821 186.52931213]
[146.14297485 174.49993896]
[137.18228149 162.47055054]
[128.22158813 150.44117737]
[119.26088715 138.41180420]
[110.30019379 126.38242340]
[101.33949280 114.35304260]
[109.80889893 126.73323822]
[109.85864258 141.73315430]
[101.47151947 154.16923523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 67]
[6 66]
[7 65]
[8 64]
[9 63]
[10 62]
[11 61]
[12 60]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[68 171]
[69 170]
[70 169]
[71 168]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[96 121]
[97 120]
[98 119]
[134 167]
[135 166]
[136 165]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 158]
[143 157]
[144 156]
[146 153]
[147 152]
[172 207]
[173 206]
[174 205]
[175 204]
[176 203]
[177 202]
[178 201]
[179 196]
[180 195]
[181 194]
[182 193]
[184 192]
[185 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
