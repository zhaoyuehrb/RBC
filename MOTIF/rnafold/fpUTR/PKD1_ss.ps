%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUGCAGCGCCAGCGUCCGAGCGGGCGGCCGAGCUCCCGGAGCGGCCUGGCCCCGAGCCCCGAGCGGGCGUCGCUCAGCAGCAGGUCGCGGCCGCAGCCCCAUCCAGCCCCGCGCCCGCCAUGCCGUCCGCGGGCCCCGCCUGAGCUGCGGCCUCCGCGCGCGGGCGGGCCUGGGGACGGCGGGGCCAUGCGCGCGCUGCCCUAACG\
) } def
/len { sequence length } bind def

/coor [
[34.63317871 470.40710449]
[26.64139748 457.44366455]
[24.61968994 442.34954834]
[28.91833115 427.73989868]
[38.79255295 416.14593506]
[52.53158951 409.57641602]
[52.08285904 394.58312988]
[51.63412476 379.58984375]
[51.18539429 364.59655762]
[50.73666000 349.60327148]
[50.28792953 334.60998535]
[49.83919907 319.61669922]
[38.85444641 309.62316895]
[38.18578339 294.42422485]
[48.74240875 282.97015381]
[48.29367828 267.97686768]
[34.06290054 263.23504639]
[24.71055222 274.96252441]
[15.35820580 286.69000244]
[6.00585842 298.41744995]
[4.09806490 314.70526123]
[-11.06653976 320.94760132]
[-23.88790894 310.72290039]
[-21.17651939 294.54946899]
[-5.72161388 289.06512451]
[3.63073325 277.33764648]
[12.98307991 265.61016846]
[22.33542824 253.88270569]
[13.24857712 241.94833374]
[-0.54433995 247.84370422]
[-14.33725643 253.73908997]
[-28.13017273 259.63446045]
[-41.92308807 265.52984619]
[-47.87847519 279.92327881]
[-61.95043564 285.70553589]
[-75.63568115 279.93930054]
[-89.42859650 285.83465576]
[-101.61676025 297.61962891]
[-116.31517029 289.17016602]
[-112.26485443 272.70715332]
[-95.32397461 272.04174805]
[-81.53105927 266.14636230]
[-76.24150848 252.26989746]
[-62.33751297 246.09466553]
[-47.81846619 251.73692322]
[-34.02554703 245.84153748]
[-20.23263168 239.94616699]
[-6.43971539 234.05079651]
[7.35320139 228.15541077]
[18.19512367 217.78947449]
[24.70338058 204.27494812]
[31.21163559 190.76040649]
[37.71989059 177.24588013]
[44.22814941 163.73133850]
[50.73640442 150.21681213]
[57.24465942 136.70227051]
[51.86914062 122.69857025]
[37.98957825 117.01018524]
[24.06785202 111.42578125]
[10.10474586 105.94567108]
[-3.85836029 100.46555328]
[-17.82146645 94.98543549]
[-33.04174042 100.05721283]
[-46.41767883 91.19922638]
[-47.68840790 75.20658112]
[-35.87913132 64.34745789]
[-20.04891968 66.95204163]
[-12.34135151 81.02233124]
[1.62175500 86.50244904]
[15.58486080 91.98255920]
[29.54796791 97.46267700]
[36.92343903 96.98011780]
[43.67795944 103.13062286]
[57.55752182 108.81900787]
[66.00732422 96.42542267]
[55.64138412 85.58350372]
[45.27544403 74.74157715]
[29.39114380 70.66468811]
[25.24089241 54.79939651]
[37.09411240 43.46655655]
[52.75722885 48.32442474]
[56.11736679 64.37564087]
[66.48330688 75.21755981]
[76.84925079 86.05948639]
[84.30578613 81.79902649]
[91.91522217 80.57318878]
[91.46648407 65.57990265]
[88.08153534 57.09494781]
[91.12487793 50.35933685]
[90.90048981 35.36101532]
[87.64284515 26.82637596]
[90.78661346 20.13704300]
[90.78661346 5.13704300]
[90.78661346 -9.86295700]
[90.67441559 -24.86253738]
[90.45001984 -39.86085892]
[79.39014435 -50.82976151]
[79.37623596 -66.04338837]
[89.90156555 -76.51969910]
[89.67717743 -91.51802063]
[76.91152191 -100.33945465]
[71.80078125 -114.99073029]
[76.31013489 -129.83813477]
[88.70565033 -139.17253113]
[104.22098541 -139.40466309]
[116.89019012 -130.44525146]
[121.84169006 -115.73940277]
[117.17153931 -100.94178772]
[104.67549896 -91.74240875]
[104.89988708 -76.74408722]
[115.73390961 -66.58734131]
[116.17513275 -51.38010406]
[105.44834137 -40.08525085]
[105.67273712 -25.08692932]
[108.91621399 -18.44537354]
[105.78661346 -9.86295700]
[105.78661346 5.13704300]
[105.78661346 20.13704300]
[105.89881134 35.13662338]
[106.12319946 50.13494492]
[106.45977020 65.13117218]
[106.90850830 80.12445831]
[123.00887299 98.88287354]
[110.46956635 122.73516846]
[81.45705414 119.65844727]
[96.37488556 118.09052277]
[111.29271698 116.52259827]
[126.21054077 114.95466614]
[141.12837219 113.38674164]
[156.04620361 111.81881714]
[170.96403503 110.25088501]
[183.87983704 101.11346436]
[197.34614563 107.47801208]
[212.26397705 105.91008759]
[227.18180847 104.34216309]
[242.09963989 102.77423096]
[257.01745605 101.20630646]
[271.93530273 99.63838196]
[286.85311890 98.07044983]
[295.06140137 94.06088257]
[302.00558472 96.59236908]
[316.94522095 95.24777985]
[331.88482666 93.90319061]
[346.82443237 92.55860138]
[361.76406860 91.21401215]
[374.81509399 82.27082062]
[388.18472290 88.83610535]
[403.12432861 87.49151611]
[411.39166260 83.60519409]
[418.29721069 86.24027252]
[433.25527954 85.11931610]
[448.21331787 83.99836731]
[463.17138672 82.87741852]
[478.51437378 75.66432190]
[489.69296265 88.41092682]
[480.53903198 102.68124390]
[464.29232788 97.83547211]
[449.33428955 98.95642090]
[434.37622070 100.07737732]
[419.41818237 101.19832611]
[404.46890259 102.43112946]
[389.52929688 103.77571869]
[377.54684448 112.62273407]
[363.10864258 106.15362549]
[348.16903687 107.49821472]
[333.22943115 108.84280396]
[318.28979492 110.18739319]
[303.35018921 111.53198242]
[288.42105103 112.98828125]
[273.50323486 114.55620575]
[258.58538818 116.12413788]
[243.66757202 117.69206238]
[228.74974060 119.25998688]
[213.83190918 120.82791901]
[198.91407776 122.39584351]
[187.06529236 131.42111206]
[172.53195190 125.16871643]
[157.61412048 126.73664093]
[142.69630432 128.30456543]
[127.77847290 129.87249756]
[112.86064148 131.44042969]
[97.94281006 133.00834656]
[83.02498627 134.57627869]
[70.75919342 143.21052551]
[64.25093842 156.72506714]
[57.74268341 170.23959351]
[51.23442459 183.75413513]
[44.72616959 197.26866150]
[38.21791458 210.78320312]
[31.70965767 224.29772949]
[54.51276016 234.30529785]
[63.28696442 267.52813721]
[63.73569489 282.52142334]
[74.95842743 293.32366943]
[75.19992065 308.53536987]
[64.83248138 319.16796875]
[65.28121948 334.16125488]
[65.72994995 349.15454102]
[66.17868042 364.14782715]
[66.62741089 379.14111328]
[67.07614136 394.13439941]
[67.52487946 409.12768555]
[81.63220978 414.86380005]
[92.18212128 425.84649658]
[97.34678650 440.17288208]
[96.23139191 455.36090088]
[89.02918243 468.77911377]
[76.98798370 478.10272217]
[62.19401550 481.71633911]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[15 193]
[16 192]
[17 28]
[18 27]
[19 26]
[20 25]
[29 49]
[30 48]
[31 47]
[32 46]
[33 45]
[36 42]
[37 41]
[50 190]
[51 189]
[52 188]
[53 187]
[54 186]
[55 185]
[56 184]
[57 74]
[58 73]
[59 71]
[60 70]
[61 69]
[62 68]
[75 84]
[76 83]
[77 82]
[86 122]
[87 121]
[89 120]
[90 119]
[92 118]
[93 117]
[94 116]
[95 114]
[96 113]
[99 110]
[100 109]
[125 183]
[126 182]
[127 181]
[128 180]
[129 179]
[130 178]
[131 177]
[133 175]
[134 174]
[135 173]
[136 172]
[137 171]
[138 170]
[139 169]
[141 168]
[142 167]
[143 166]
[144 165]
[145 164]
[147 162]
[148 161]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
