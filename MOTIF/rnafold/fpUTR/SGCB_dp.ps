%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SGCB)
} def

/sequence { (\
GCGGUCGCGGAGGGGCGGGCACAGUCGGGCGGGGAGCUCGGCGGCGGCGGGCGCGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.026776671 ubox
1 16 0.007538267 ubox
1 20 0.278601133 ubox
1 25 0.004523456 ubox
1 42 0.006568755 ubox
1 45 0.017083201 ubox
1 48 0.182351138 ubox
1 52 0.048273284 ubox
1 54 0.813147507 ubox
2 7 0.026763603 ubox
2 9 0.016456157 ubox
2 15 0.007550649 ubox
2 17 0.037132792 ubox
2 19 0.278135406 ubox
2 24 0.005120932 ubox
2 41 0.006562432 ubox
2 43 0.007458235 ubox
2 44 0.017067611 ubox
2 46 0.006686861 ubox
2 47 0.182660735 ubox
2 49 0.004993462 ubox
2 51 0.048262172 ubox
2 53 0.813738759 ubox
2 55 0.036926233 ubox
3 8 0.016621598 ubox
3 16 0.038906136 ubox
3 45 0.006312814 ubox
3 48 0.004807157 ubox
3 52 0.810808622 ubox
3 54 0.033936724 ubox
4 16 0.061813125 ubox
4 20 0.122506720 ubox
4 22 0.019672601 ubox
4 45 0.182836931 ubox
4 48 0.051256991 ubox
4 52 0.044499822 ubox
4 54 0.012874663 ubox
5 13 0.007689688 ubox
5 14 0.039699903 ubox
5 15 0.061721458 ubox
5 18 0.302135281 ubox
5 19 0.104214679 ubox
5 21 0.017188727 ubox
5 44 0.182661490 ubox
5 47 0.051043644 ubox
5 50 0.771815941 ubox
5 51 0.055174228 ubox
5 53 0.005009449 ubox
5 56 0.340389975 ubox
5 57 0.022694655 ubox
5 58 0.087641022 ubox
6 12 0.009176049 ubox
6 13 0.040751491 ubox
6 14 0.061643634 ubox
6 17 0.406545000 ubox
6 18 0.083024323 ubox
6 43 0.181805105 ubox
6 46 0.049836534 ubox
6 49 0.763490933 ubox
6 50 0.048201068 ubox
6 53 0.016739937 ubox
6 55 0.432804919 ubox
6 56 0.020905946 ubox
6 57 0.093336744 ubox
7 16 0.469707163 ubox
7 20 0.016925259 ubox
7 42 0.179552266 ubox
7 45 0.046823098 ubox
7 48 0.727151488 ubox
7 52 0.017327884 ubox
7 54 0.435103101 ubox
8 15 0.470087131 ubox
8 17 0.155097466 ubox
8 19 0.017038191 ubox
8 41 0.179445716 ubox
8 43 0.004704712 ubox
8 44 0.045546665 ubox
8 46 0.142944642 ubox
8 47 0.700661306 ubox
8 49 0.014834646 ubox
8 51 0.017345769 ubox
8 53 0.435108871 ubox
8 55 0.092914940 ubox
9 16 0.476101778 ubox
9 42 0.006420508 ubox
9 45 0.197041186 ubox
9 48 0.013619204 ubox
9 52 0.433877285 ubox
9 54 0.092625314 ubox
10 39 0.177347790 ubox
11 38 0.177257443 ubox
12 37 0.176788549 ubox
12 39 0.004038157 ubox
13 37 0.005089638 ubox
13 38 0.003765398 ubox
13 39 0.032501993 ubox
14 26 0.030198726 ubox
14 37 0.003520856 ubox
14 38 0.033208507 ubox
15 25 0.034924685 ubox
15 30 0.104009530 ubox
15 37 0.034180476 ubox
15 42 0.081856377 ubox
15 45 0.048107301 ubox
15 48 0.435738628 ubox
15 52 0.031239990 ubox
15 54 0.029940979 ubox
16 24 0.035488868 ubox
16 27 0.018579987 ubox
16 29 0.103907877 ubox
16 31 0.032821499 ubox
16 36 0.034446173 ubox
16 40 0.094966658 ubox
16 41 0.066795091 ubox
16 43 0.029761989 ubox
16 44 0.048045626 ubox
16 46 0.218588003 ubox
16 47 0.435617330 ubox
16 49 0.077813565 ubox
16 51 0.032867196 ubox
16 53 0.030032344 ubox
16 55 0.008114392 ubox
17 26 0.021436860 ubox
17 30 0.031905088 ubox
17 39 0.106061730 ubox
17 42 0.016217613 ubox
17 45 0.209899876 ubox
17 48 0.082038956 ubox
17 52 0.029692335 ubox
17 54 0.009015924 ubox
18 25 0.020495462 ubox
18 26 0.105117146 ubox
18 38 0.106402647 ubox
18 39 0.017459788 ubox
19 25 0.106051930 ubox
19 30 0.141978282 ubox
19 37 0.107734170 ubox
19 38 0.004616596 ubox
19 42 0.036716819 ubox
19 45 0.695469335 ubox
19 48 0.343418731 ubox
19 52 0.011007241 ubox
19 54 0.014101430 ubox
20 24 0.105573796 ubox
20 29 0.142024271 ubox
20 36 0.107611523 ubox
20 41 0.036377758 ubox
20 44 0.695900722 ubox
20 47 0.344031067 ubox
20 51 0.011062525 ubox
20 53 0.014099454 ubox
24 30 0.026823528 ubox
24 42 0.972555316 ubox
24 45 0.010036189 ubox
24 48 0.008754196 ubox
25 29 0.025103186 ubox
25 32 0.051858911 ubox
25 33 0.065785660 ubox
25 34 0.023230727 ubox
25 35 0.040525471 ubox
25 41 0.973937665 ubox
25 44 0.009956569 ubox
25 47 0.008756890 ubox
25 56 0.004508952 ubox
26 31 0.052354186 ubox
26 32 0.066810618 ubox
26 33 0.025894426 ubox
26 34 0.040674059 ubox
26 40 0.976695212 ubox
26 43 0.009456638 ubox
26 46 0.008848695 ubox
26 55 0.005756940 ubox
27 39 0.977322214 ubox
27 42 0.009139881 ubox
27 45 0.008964172 ubox
27 54 0.005773767 ubox
28 38 0.976873089 ubox
29 37 0.977530953 ubox
29 42 0.009655581 ubox
29 52 0.005773551 ubox
30 36 0.977385731 ubox
30 40 0.010029152 ubox
30 41 0.009168149 ubox
30 51 0.005770575 ubox
31 39 0.010544094 ubox
32 38 0.010338219 ubox
32 39 0.008428019 ubox
33 37 0.010169477 ubox
33 38 0.006597382 ubox
36 45 0.003877280 ubox
36 48 0.005327577 ubox
37 44 0.003877975 ubox
37 47 0.005297138 ubox
38 43 0.003518781 ubox
39 46 0.008620841 ubox
40 45 0.011781512 ubox
41 48 0.020102189 ubox
41 52 0.003858657 ubox
41 54 0.022307370 ubox
42 47 0.020217975 ubox
42 49 0.007783917 ubox
42 51 0.003980259 ubox
42 53 0.022340979 ubox
42 55 0.014808253 ubox
43 48 0.023443632 ubox
43 52 0.019963770 ubox
43 54 0.036606414 ubox
44 52 0.080791413 ubox
44 54 0.304197149 ubox
45 51 0.082701922 ubox
45 53 0.304804070 ubox
45 55 0.016461387 ubox
46 52 0.304265917 ubox
46 54 0.015095811 ubox
47 54 0.039017204 ubox
48 53 0.039710499 ubox
48 55 0.027406124 ubox
49 54 0.047686594 ubox
1 54 0.9500000 lbox
2 53 0.9500000 lbox
3 52 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
showpage
end
%%EOF
