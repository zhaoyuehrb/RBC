%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCACCGGCACCUUGCAGUAUCACUGGGGAGACGGCGGCUGUAUAGCGCUUGCCGCCCCACGGAUUAUCCCAGCAGGAUCUACGCACCCCGCAUCCUCCGUAGUUCCGCCCUAUCCUUGUCCUCCUUGGCUGGGGCGCCCACCGGCGGUCUGAUAGGCUACAUCGCGGCAUGAGAUGAAGCUGUGACAGGUUUGAAAACACAAACACA\
) } def
/len { sequence length } bind def

/coor [
[-68.17601776 362.43829346]
[-79.96264648 371.71597290]
[-91.74927521 380.99365234]
[-103.53591156 390.27133179]
[-115.32254028 399.54901123]
[-127.10917664 408.82669067]
[-138.89579773 418.10437012]
[-141.70018005 424.09024048]
[-146.40071106 427.28259277]
[-151.17196655 427.47613525]
[-163.22836304 436.40045166]
[-175.28474426 445.32476807]
[-173.65281677 460.53280640]
[-179.81155396 474.42404175]
[-192.01539612 483.30844116]
[-206.92791748 484.88092041]
[-220.53364563 478.81872559]
[-232.59002686 487.74307251]
[-244.64640808 496.66738892]
[-256.70278931 505.59170532]
[-268.75918579 514.51605225]
[-280.81555176 523.44036865]
[-280.24856567 535.31445312]
[-285.43048096 545.87982178]
[-294.97024536 552.56304932]
[-306.43182373 553.79876709]
[-316.95571899 549.39501953]
[-329.27127075 557.95812988]
[-341.58682251 566.52130127]
[-344.13540649 582.11871338]
[-357.01519775 591.27770996]
[-372.58480835 588.56433105]
[-381.60711670 575.58843994]
[-378.72927856 560.04840088]
[-365.65872192 551.16375732]
[-350.14996338 554.20574951]
[-337.83441162 545.64257812]
[-325.51885986 537.07946777]
[-323.37048340 518.89923096]
[-308.35760498 507.87435913]
[-289.73989868 511.38397217]
[-277.68350220 502.45965576]
[-265.62710571 493.53533936]
[-253.57073975 484.61099243]
[-241.51434326 475.68667603]
[-229.45796204 466.76235962]
[-231.28219604 451.97933960]
[-225.42298889 438.17623901]
[-213.36172485 429.09921265]
[-198.27742004 427.26602173]
[-184.20906067 433.26840210]
[-172.15267944 424.34405518]
[-160.09629822 415.41973877]
[-148.17347717 406.31774902]
[-136.38685608 397.04006958]
[-124.60021973 387.76239014]
[-112.81359100 378.48471069]
[-101.02695465 369.20703125]
[-89.24032593 359.92935181]
[-77.45369720 350.65167236]
[-67.85224915 316.81167603]
[-38.97589493 312.58233643]
[-30.96854591 299.89837646]
[-22.96119499 287.21444702]
[-14.95384502 274.53051758]
[-6.94649410 261.84655762]
[-7.19874525 244.29907227]
[9.17117310 235.86578369]
[16.98969078 223.06457520]
[24.80820656 210.26338196]
[32.62672424 197.46217346]
[40.44524002 184.66096497]
[40.47601700 169.76640320]
[54.27225876 162.02209473]
[62.09077835 149.22088623]
[69.81423187 136.36210632]
[77.44219971 123.44645691]
[58.59391785 87.33630371]
[90.72199249 46.73938751]
[85.70790863 32.60224152]
[80.69382477 18.46509361]
[68.78858185 8.04512215]
[71.82643127 -6.53639841]
[66.81233978 -20.67354584]
[61.79825592 -34.81069183]
[56.78416824 -48.94784164]
[51.77008057 -63.08498764]
[36.58781433 -63.83809662]
[22.85157013 -70.34839630]
[12.65602684 -81.62312317]
[7.55593109 -95.94294739]
[8.32901096 -111.12421417]
[14.85737610 -124.85188293]
[26.14550018 -135.03257751]
[40.47202301 -140.11383057]
[55.65225983 -139.32078552]
[69.37133026 -132.77436829]
[79.53717041 -121.47286224]
[84.59957886 -107.13966370]
[83.78656006 -91.96048737]
[77.22209930 -78.25004578]
[65.90722656 -68.09907532]
[70.92131805 -53.96192551]
[75.93540192 -39.82477951]
[80.94948578 -25.68763161]
[85.96357727 -11.55048466]
[97.51017761 -2.14169669]
[94.83097076 13.45100784]
[99.84505463 27.58815575]
[104.85914612 41.72530365]
[119.76659393 43.38899231]
[127.77394867 30.70505142]
[135.78129578 18.02111053]
[143.78865051 5.33717060]
[151.79600525 -7.34676933]
[159.80334473 -20.03071022]
[160.62757874 -35.83043289]
[173.96432495 -42.46221161]
[181.97166443 -55.14614868]
[174.25369263 -68.36324310]
[173.57365417 -83.65363312]
[180.08778381 -97.50370789]
[192.29922485 -106.73081970]
[207.40184021 -109.21463776]
[221.92518616 -104.38441467]
[232.53189087 -93.35008240]
[236.78462219 -78.64726257]
[233.70611572 -63.65454865]
[224.00379944 -51.81716156]
[209.90719604 -45.85524368]
[194.65560913 -47.13879776]
[186.64825439 -34.45486069]
[186.39677429 -19.56237793]
[172.48728943 -12.02335835]
[164.47993469 0.66058135]
[156.47259521 13.34452152]
[148.46524048 26.02846146]
[140.45788574 38.71240234]
[132.45053101 51.39634323]
[142.32678223 62.68614197]
[155.96286011 56.43654251]
[169.59893799 50.18694305]
[178.64701843 36.50980377]
[194.99713135 37.77705002]
[201.82968140 52.68504715]
[192.11592102 65.89772797]
[175.84854126 63.82301331]
[162.21246338 70.07261658]
[148.57638550 76.32221985]
[152.42288208 90.82064819]
[167.36363220 89.48870850]
[182.30436707 88.15676880]
[197.24511719 86.82483673]
[212.18586731 85.49289703]
[227.42553711 78.06398773]
[238.78288269 90.65156555]
[229.83126831 105.04964447]
[213.51780701 100.43363953]
[198.57705688 101.76557922]
[183.63630676 103.09751892]
[168.69557190 104.42945862]
[153.75482178 105.76139832]
[149.31898499 115.41144562]
[143.27066040 123.58107758]
[136.00970459 130.02836609]
[127.96537781 134.60876465]
[119.57405853 137.27671814]
[111.25765228 138.08244324]
[103.40356445 137.16416931]
[96.34721375 134.73631287]
[90.35784912 131.07441711]
[82.72988892 143.99008179]
[81.06063080 152.96989441]
[74.89198303 157.03941345]
[67.07346344 169.84060669]
[66.48345184 185.65080261]
[53.24644470 192.47949219]
[45.42792892 205.28068542]
[37.60940933 218.08189392]
[29.79089355 230.88310242]
[21.97237587 243.68429565]
[24.23784065 256.38143921]
[17.46285820 266.88244629]
[5.73744583 269.85391235]
[-2.26990461 282.53787231]
[-10.27725506 295.22180176]
[-18.28460693 307.90573120]
[-26.29195595 320.58969116]
[-20.09714508 326.79306030]
[-16.14667702 335.43844604]
[-15.37382030 345.65625000]
[-18.36113930 356.23400879]
[-25.22015572 365.75979614]
[-20.20606995 379.89694214]
[-15.19198227 394.03408813]
[-10.17789555 408.17123413]
[-5.16380930 422.30838013]
[9.21026230 428.87811279]
[14.65038681 443.71661377]
[7.92903328 458.02041626]
[-6.96613741 463.30334473]
[-21.19808578 456.43115234]
[-26.32324791 441.48095703]
[-19.30095673 427.32244873]
[-24.31504250 413.18530273]
[-29.32913017 399.04815674]
[-34.34321594 384.91101074]
[-39.35730362 370.77386475]
[-46.56198120 368.68997192]
[-50.72999191 383.09927368]
[-65.13922119 378.93103027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[4 57]
[5 56]
[6 55]
[7 54]
[10 53]
[11 52]
[12 51]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[27 38]
[28 37]
[29 36]
[62 188]
[63 187]
[64 186]
[65 185]
[66 184]
[68 181]
[69 180]
[70 179]
[71 178]
[72 177]
[74 175]
[75 174]
[76 172]
[77 171]
[79 110]
[80 109]
[81 108]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
[111 139]
[112 138]
[113 137]
[114 136]
[115 135]
[116 134]
[118 132]
[119 131]
[140 149]
[141 148]
[142 147]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
[193 208]
[194 207]
[195 206]
[196 205]
[197 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
