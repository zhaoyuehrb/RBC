%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGCGUAGGGCUGUGAGGGCGCAGUCCACCGCCAGGAGCCUUCCGGUUUCUGCGCGGUGCGCGACCUCGUCCCGAAGCCUGGGGAUACACCCUCUCGAGAGCCCGCUGUCGCCCUCCGUUAAGGUCGAACCCCUCACAGUUGCUGUGGGCAACUCCAGCCCAACAUUCCCUCGCUCUGGUUCUCGCCCCAUUGGGAAACUCGGCCCCACGCUUCCCACUUUUCUGGAUGAGGUGUCCCCUUUCUCCCCACUAA\
A\
) } def
/len { sequence length } bind def

/coor [
[54.61123657 673.79870605]
[60.73456955 660.05548096]
[69.76708984 648.01379395]
[81.25836945 638.27954102]
[74.37509918 624.95208740]
[67.49182129 611.62463379]
[60.60855103 598.29724121]
[53.72527695 584.96978760]
[41.01036835 577.21215820]
[41.55223465 561.40026855]
[34.66896057 548.07281494]
[27.78568649 534.74536133]
[20.90241432 521.41796875]
[14.01914024 508.09051514]
[7.13586712 494.76309204]
[-5.38323355 494.10095215]
[-16.17499924 487.72097778]
[-29.28589058 495.00823975]
[-42.39678192 502.29553223]
[-55.50767517 509.58282471]
[-63.81091690 523.05004883]
[-78.69423676 522.47033691]
[-91.80513000 529.75762939]
[-104.91601562 537.04492188]
[-106.26658630 546.32446289]
[-111.64109039 553.84063721]
[-119.74114227 557.99383545]
[-128.70660400 557.97167969]
[-136.54229736 553.90478516]
[-149.91154480 560.70648193]
[-163.28080750 567.50817871]
[-176.65007019 574.30987549]
[-190.01931763 581.11151123]
[-203.38858032 587.91320801]
[-216.71601868 594.79650879]
[-230.00112915 601.76110840]
[-243.28625488 608.72570801]
[-256.57135010 615.69030762]
[-269.85647583 622.65490723]
[-283.14160156 629.61950684]
[-296.42672729 636.58410645]
[-309.71182251 643.54870605]
[-318.02117920 657.68682861]
[-334.41549683 657.28924561]
[-342.02972412 642.76495361]
[-333.03100586 629.05529785]
[-316.67642212 630.26361084]
[-303.39132690 623.29901123]
[-290.10620117 616.33441162]
[-276.82107544 609.36981201]
[-263.53598022 602.40521240]
[-250.25085449 595.44061279]
[-236.96572876 588.47595215]
[-223.68061829 581.51135254]
[-219.22877502 575.63946533]
[-210.19026184 574.54394531]
[-196.82101440 567.74224854]
[-183.45175171 560.94061279]
[-170.08248901 554.13891602]
[-156.71324158 547.33721924]
[-143.34397888 540.53552246]
[-133.59088135 522.32934570]
[-112.20330048 523.93402100]
[-99.09241486 516.64672852]
[-85.98152161 509.35946655]
[-78.61605835 496.41345215]
[-62.79496002 496.47192383]
[-49.68406677 489.18466187]
[-36.57317734 481.89736938]
[-23.46228600 474.61007690]
[-19.66403961 453.38766479]
[-1.01562726 441.74481201]
[1.35805142 426.93380737]
[3.73172998 412.12283325]
[6.10540867 397.31182861]
[8.47908688 382.50082397]
[10.85276604 367.68981934]
[9.34887981 365.35684204]
[8.66481113 362.29605103]
[9.07920265 358.81188965]
[10.75722313 355.30285645]
[13.72152138 352.22021484]
[16.81627846 337.54293823]
[19.91103554 322.86566162]
[23.00579262 308.18838501]
[26.10054970 293.51110840]
[15.48547935 304.10922241]
[1.18382251 308.63278198]
[-13.59504890 306.06665039]
[-25.53467178 296.98672485]
[-31.95572853 283.43054199]
[-31.41729736 268.44021606]
[-24.04020500 255.37963867]
[-11.47991180 247.17968750]
[3.44498062 245.68049622]
[17.38524246 251.21846008]
[27.21259880 262.55084229]
[30.72173500 277.13519287]
[35.75619507 263.00527954]
[40.79065704 248.87538147]
[45.82511902 234.74546814]
[50.85957718 220.61557007]
[55.89403915 206.48565674]
[60.92849731 192.35575867]
[65.96295929 178.22584534]
[61.12004852 159.48875427]
[76.73712158 146.71257019]
[81.42465973 132.46382141]
[59.16218185 116.25748444]
[51.65024567 85.39540863]
[67.53545380 53.07585907]
[64.62033844 38.36184692]
[61.70522690 23.64783669]
[51.43350601 11.61445141]
[56.54985809 -2.37383699]
[53.63474274 -17.08784676]
[50.71963120 -31.80185890]
[37.44780350 -40.38289642]
[34.21265030 -55.85251999]
[42.93352509 -69.03288269]
[58.43648911 -72.10430145]
[71.52391052 -63.24456406]
[74.43125153 -47.70999146]
[65.43363953 -34.71697235]
[68.34875488 -20.00296211]
[71.26387024 -5.28895092]
[81.32707977 5.69198895]
[76.41923523 20.73272133]
[79.33435059 35.44673157]
[82.24946594 50.16074371]
[89.72579956 50.75604248]
[90.91639709 35.80336761]
[92.10699463 20.85069084]
[100.61415863 8.49641705]
[107.05966949 22.04128838]
[105.86907196 36.99396133]
[104.67847443 51.94663620]
[112.15481567 52.54193497]
[117.36161804 38.47462463]
[122.56842804 24.40731621]
[127.77523041 10.34000778]
[127.60293579 -6.61306381]
[143.84577942 -11.47170448]
[153.01100159 2.79135656]
[141.84254456 15.54681396]
[136.63572693 29.61412239]
[131.42892456 43.68143082]
[126.22212219 57.74874115]
[139.28822327 65.11602020]
[148.63034058 53.38039017]
[157.97244263 41.64475632]
[167.31454468 29.90912247]
[164.02552795 14.62133598]
[171.37846375 0.82030785]
[185.90150452 -4.97753859]
[200.73733521 -0.03463793]
[208.88092041 13.31512356]
[206.48710632 28.76839638]
[194.68617249 39.02861786]
[179.05017090 39.25122452]
[169.70806885 50.98685837]
[160.36596680 62.72249222]
[151.02386475 74.45812988]
[153.18795776 84.42418671]
[153.48374939 94.32875824]
[152.00431824 103.83420563]
[148.90161133 112.63430023]
[144.37818909 120.46408081]
[138.67749023 127.10778046]
[132.07276917 132.40463257]
[124.85556030 136.25236511]
[117.32371521 138.60827637]
[109.76970673 139.48806763]
[102.46966553 138.96237183]
[95.67341614 137.15136719]
[90.98587036 151.40011597]
[96.42544556 160.77685547]
[95.83523560 171.38153076]
[89.64920044 179.74409485]
[80.09286499 183.26031494]
[75.05840302 197.39021301]
[70.02394104 211.52012634]
[64.98947906 225.65002441]
[59.95502090 239.77993774]
[54.92056274 253.90983582]
[49.88610077 268.03973389]
[44.85163879 282.16964722]
[40.77782822 296.60586548]
[37.68307114 311.28314209]
[34.58831406 325.96041870]
[31.49355507 340.63769531]
[28.39879799 355.31497192]
[25.66376305 370.06350708]
[23.29008484 384.87451172]
[20.91640663 399.68551636]
[18.54272842 414.49649048]
[16.16904831 429.30749512]
[13.79537010 444.11849976]
[22.15920639 450.47781372]
[27.45437050 459.45919800]
[28.94629860 469.69641113]
[26.47364426 479.65872192]
[20.46330261 487.87979126]
[27.34657669 501.20724487]
[34.22985077 514.53466797]
[41.11312485 527.86212158]
[47.99639511 541.18957520]
[54.87966919 554.51696777]
[68.08692169 563.22784424]
[67.05271149 578.08648682]
[73.93598938 591.41394043]
[80.81925964 604.74139404]
[87.70253754 618.06878662]
[94.58580780 631.39624023]
[109.17520142 627.66052246]
[124.22286987 627.26544189]
[138.97404480 630.22747803]
[152.68954468 636.39501953]
[164.68283081 645.45581055]
[174.35433960 656.95281982]
[181.22148132 670.30737305]
[184.94273376 684.84826660]
[185.33454895 699.84539795]
[182.38050842 714.54663086]
[176.23191833 728.21514893]
[167.20007324 740.16693115]
[155.74050903 749.80438232]
[162.62377930 763.13177490]
[169.50706482 776.45922852]
[185.23695374 786.05853271]
[183.69767761 803.55224609]
[190.74334717 816.79455566]
[197.78901672 830.03686523]
[204.83468628 843.27917480]
[219.69624329 849.32183838]
[224.09954834 864.74877930]
[214.66676331 877.72570801]
[198.63391113 878.29791260]
[188.30003357 866.02642822]
[191.59239197 850.32482910]
[184.54670715 837.08251953]
[177.50103760 823.84020996]
[170.45536804 810.59790039]
[158.99760437 806.77630615]
[153.01303101 795.82629395]
[156.17962646 783.34252930]
[149.29635620 770.01507568]
[142.41307068 756.68762207]
[127.92101288 760.45355225]
[112.94707489 760.90014648]
[98.24214172 758.00189209]
[84.54433441 751.90093994]
[72.54193878 742.90032959]
[62.83883667 731.44891357]
[55.92411041 718.11895752]
[52.14740753 703.57739258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 214]
[5 213]
[6 212]
[7 211]
[8 210]
[10 208]
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[17 70]
[18 69]
[19 68]
[20 67]
[22 65]
[23 64]
[24 63]
[29 61]
[30 60]
[31 59]
[32 58]
[33 57]
[34 56]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[42 47]
[72 198]
[73 197]
[74 196]
[75 195]
[76 194]
[77 193]
[82 192]
[83 191]
[84 190]
[85 189]
[86 188]
[98 187]
[99 186]
[100 185]
[101 184]
[102 183]
[103 182]
[104 181]
[105 180]
[107 176]
[108 175]
[111 130]
[112 129]
[113 128]
[115 126]
[116 125]
[117 124]
[138 148]
[139 147]
[140 146]
[141 145]
[149 163]
[150 162]
[151 161]
[152 160]
[227 248]
[228 247]
[229 246]
[231 243]
[232 242]
[233 241]
[234 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
