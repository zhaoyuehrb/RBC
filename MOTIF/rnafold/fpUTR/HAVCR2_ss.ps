%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACACUUACAGGAUGUGUGUAGUGUGGCAUGACAGAGAACUUUGGUUUCCUUUAAUGUGACUGUAGACCUGGCAGUGUUACUAUAAGAAUCACUGGCAAUCAGACACCCGGGUGUGCUGAGCUAGCACUCAGUGGGGGCGGCUACUGCUCAUGUGAUUGUGGAGUAGACAGUUGGAAGAAGUACCCAGUCCAUUUGGAGAGUUAAAACUGUGCCUAACAGAGGUGUCCUCUGACUUUUCUUCUGCAAGCUCC\
) } def
/len { sequence length } bind def

/coor [
[64.33186340 713.62939453]
[50.81256104 720.12774658]
[36.62052536 715.27117920]
[29.91687012 701.85223389]
[24.32633972 715.77154541]
[18.73580933 729.69079590]
[13.14527988 743.61004639]
[7.55474997 757.52929688]
[2.05006814 771.48278809]
[-3.36855674 785.46984863]
[-8.78718185 799.45690918]
[-14.20580673 813.44403076]
[-9.06711483 828.64184570]
[-17.86615562 842.05657959]
[-33.85305786 843.39770508]
[-44.76403809 831.63629150]
[-42.22912598 815.79479980]
[-28.19289017 808.02539062]
[-22.77426529 794.03833008]
[-17.35564041 780.05120850]
[-11.93701553 766.06414795]
[-12.44986248 758.71246338]
[-6.36451626 751.93878174]
[-0.77398640 738.01953125]
[4.81654358 724.10028076]
[10.40707302 710.18096924]
[15.99760342 696.26171875]
[21.06997681 682.14538574]
[25.61726761 667.85125732]
[30.16455841 653.55712891]
[26.64966583 639.08319092]
[38.20642471 628.27801514]
[42.75371170 613.98388672]
[41.78926468 606.67773438]
[47.44607544 599.54229736]
[52.16911697 585.30523682]
[56.89216232 571.06823730]
[61.61520386 556.83123779]
[66.25045776 542.56536865]
[70.79775238 528.27124023]
[75.34503937 513.97711182]
[87.32991791 488.21228027]
[107.55358887 483.04150391]
[106.81468964 468.05972290]
[106.07579041 453.07794189]
[105.33689117 438.09616089]
[104.59799194 423.11434937]
[103.76682281 408.13739014]
[102.84340668 393.16586304]
[101.91999054 378.19430542]
[100.99658203 363.22274780]
[100.07316589 348.25119019]
[91.86386108 342.22454834]
[88.23661041 332.47418213]
[90.60864258 322.11999512]
[98.43507385 314.61749268]
[97.88080597 299.62774658]
[97.32653046 284.63796997]
[96.77225494 269.64822388]
[93.39398956 263.09863281]
[96.30464172 254.47062683]
[95.93508148 239.47518921]
[95.56551361 224.47973633]
[95.19595337 209.48428345]
[94.82639313 194.48884583]
[82.48001099 186.19999695]
[77.32084656 172.06327820]
[81.52429962 157.42823792]
[93.67982483 147.96517944]
[93.31025696 132.96974182]
[66.50541687 119.66917419]
[58.03727341 86.62071228]
[45.23561478 78.80293274]
[29.42538071 78.21384430]
[22.59593391 64.97723389]
[9.79427624 57.15945816]
[-3.00738072 49.34168625]
[-15.80903816 41.52391434]
[-28.61069489 33.70613861]
[-41.12393951 42.38591766]
[-56.08695221 45.21931458]
[-70.90730286 41.71543121]
[-83.01726532 32.48133087]
[-90.31872559 19.11687851]
[-91.54666138 3.93754721]
[-86.48831940 -10.42675114]
[-76.02008820 -21.48731613]
[-61.95565796 -27.32783699]
[-46.73177338 -26.93641090]
[-32.98606491 -20.38085175]
[-23.10005760 -8.79695129]
[-18.78656387 5.80831051]
[-20.79292107 20.90448189]
[-7.99126434 28.72225571]
[4.81039238 36.54002762]
[17.61204910 44.35780334]
[30.41370583 52.17557526]
[45.30828094 52.20548630]
[53.05339050 66.00128174]
[65.85504913 73.81905365]
[72.20722961 69.83160400]
[64.23233795 57.12723160]
[56.25745010 44.42285919]
[48.28275299 31.71836281]
[60.98737335 23.74386406]
[68.96182251 36.44796753]
[76.93671417 49.15233994]
[84.91160583 61.85671234]
[91.26379395 57.86926651]
[89.78778839 42.94206238]
[88.31178284 28.01486015]
[86.83577728 13.08765602]
[72.11617279 4.72814751]
[65.35638428 -10.60965633]
[69.04383087 -26.78976059]
[81.52903748 -37.46768188]
[79.86924744 -52.37556839]
[78.20945740 -67.28345490]
[76.54966736 -82.19134521]
[74.88987732 -97.09922791]
[73.23008728 -112.00711823]
[65.46823883 -127.07994080]
[77.80331421 -138.71102905]
[92.39454651 -130.07781982]
[88.13797760 -113.66690826]
[89.79776764 -98.75901794]
[91.45755768 -83.85113525]
[93.11734772 -68.94324493]
[94.77713776 -54.03535843]
[96.43692780 -39.12747192]
[108.58980560 -33.63789749]
[116.51248932 -22.77717972]
[118.05346680 -9.31355953]
[112.70497131 3.25545812]
[101.76298523 11.61165237]
[103.23899078 26.53885651]
[104.71498871 41.46606064]
[106.19099426 56.39326477]
[110.96730042 60.93371964]
[114.66771698 65.91275024]
[117.26779175 71.12821960]
[127.64326477 60.29542542]
[138.01873779 49.46263123]
[148.39421082 38.62983322]
[158.76969910 27.79703522]
[162.74937439 9.80481339]
[179.79635620 5.58754444]
[190.03758240 -5.37225246]
[200.27882385 -16.33204842]
[210.52005005 -27.29184723]
[220.76129150 -38.25164413]
[231.00251770 -49.21144104]
[225.89654541 -63.64014816]
[228.09226990 -78.78733826]
[237.08512878 -91.17230225]
[250.80860901 -97.94905090]
[266.10919189 -97.56035614]
[279.47088623 -90.09552002]
[287.82327271 -77.26992035]
[289.24703979 -62.03077698]
[283.41503906 -47.87994003]
[271.66738892 -38.06916428]
[256.70364380 -34.85289383]
[241.96231079 -38.97020721]
[231.72108459 -28.01041031]
[221.47985840 -17.05061340]
[211.23861694 -6.09081650]
[200.99739075 4.86898041]
[190.75614929 15.82877731]
[190.85716248 27.90730858]
[182.43922424 37.11996078]
[169.60249329 38.17251205]
[159.22702026 49.00531006]
[148.85153198 59.83810806]
[138.47605896 70.67090607]
[128.10058594 81.50370026]
[132.03587341 89.73069000]
[133.61692810 98.71234894]
[132.72755432 107.78862762]
[129.43312073 116.29254913]
[123.97572327 123.59916687]
[116.75640869 129.17153931]
[108.30570984 132.60017395]
[108.67527008 147.59562683]
[121.28218079 156.44841003]
[126.20145416 170.85861206]
[121.74492645 185.23231506]
[109.82183838 194.11927795]
[110.19139862 209.11473083]
[110.56096649 224.11016846]
[110.93052673 239.10562134]
[111.30008698 254.10107422]
[111.76201630 269.09396362]
[112.31628418 284.08370972]
[112.87055969 299.07345581]
[113.42482758 314.06323242]
[124.88903046 330.66650391]
[115.04471588 347.32778931]
[115.96813202 362.29934692]
[116.89154053 377.27090454]
[117.81495667 392.24243164]
[118.73837280 407.21398926]
[122.38136292 415.55920410]
[119.57978058 422.37545776]
[120.31867981 437.35723877]
[121.05757904 452.33905029]
[121.79647827 467.32083130]
[122.53537750 482.30261230]
[125.74367523 467.64974976]
[135.17976379 455.98953247]
[148.84144592 449.79614258]
[163.82994080 450.38369751]
[176.96488953 457.62750244]
[185.45927429 469.99057007]
[187.51071167 484.84963989]
[182.68389893 499.05181885]
[172.00303650 509.58364868]
[157.73443604 514.21038818]
[142.90567017 511.95037842]
[130.66331482 503.28323364]
[140.21043396 514.85272217]
[149.75753784 526.42218018]
[159.30465698 537.99163818]
[168.85177612 549.56109619]
[178.39888000 561.13061523]
[193.14361572 569.49896240]
[189.18405151 585.98400879]
[172.24708557 586.74273682]
[166.82942200 570.67773438]
[157.28230286 559.10821533]
[147.73518372 547.53875732]
[138.18807983 535.96929932]
[128.64096069 524.39984131]
[119.09384918 512.83038330]
[111.73017883 514.25384521]
[114.57695007 528.98126221]
[99.84951782 531.82775879]
[97.00283813 517.10089111]
[89.63916779 518.52441406]
[85.09188080 532.81854248]
[80.54459381 547.11267090]
[80.92693329 556.21032715]
[75.85222626 561.55426025]
[71.12918854 575.79125977]
[66.40614319 590.02832031]
[61.68309784 604.26531982]
[57.04784393 618.53118896]
[52.50055313 632.82531738]
[55.69019318 648.32165527]
[44.45868683 658.10443115]
[39.91139603 672.39855957]
[35.36410904 686.69268799]
[49.07518768 680.60937500]
[63.11260986 685.89624023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[9 21]
[10 20]
[11 19]
[12 18]
[28 252]
[29 251]
[30 250]
[32 248]
[33 247]
[35 246]
[36 245]
[37 244]
[38 243]
[39 241]
[40 240]
[41 239]
[43 208]
[44 207]
[45 206]
[46 205]
[47 204]
[48 202]
[49 201]
[50 200]
[51 199]
[52 198]
[56 196]
[57 195]
[58 194]
[59 193]
[61 192]
[62 191]
[63 190]
[64 189]
[65 188]
[69 184]
[70 183]
[72 100]
[73 99]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[109 138]
[110 137]
[111 136]
[112 135]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
[141 176]
[142 175]
[143 174]
[144 173]
[145 172]
[147 169]
[148 168]
[149 167]
[150 166]
[151 165]
[152 164]
[220 234]
[221 233]
[222 232]
[223 231]
[224 230]
[225 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
