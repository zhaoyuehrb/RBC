%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TAS2R50)
} def

/sequence { (\
UCACAACCAGUGAUAUUAGGCUUGCAUUUUCUUUCUUUUUUUCUGCUCAGAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.886986982 ubox
1 20 0.003555384 ubox
1 51 0.027066698 ubox
2 12 0.971359400 ubox
2 19 0.004682808 ubox
2 24 0.013725181 ubox
2 45 0.004608140 ubox
2 50 0.029465637 ubox
3 11 0.971427662 ubox
3 23 0.013584257 ubox
3 44 0.004549669 ubox
4 10 0.970806738 ubox
4 12 0.019486582 ubox
4 24 0.132667996 ubox
4 45 0.004682025 ubox
5 11 0.018331295 ubox
5 23 0.133393420 ubox
5 28 0.006808853 ubox
5 29 0.005958827 ubox
5 30 0.005925445 ubox
5 33 0.003628071 ubox
5 44 0.004469988 ubox
6 22 0.129004434 ubox
6 27 0.007230113 ubox
6 28 0.006334197 ubox
6 29 0.006172271 ubox
6 32 0.003765266 ubox
7 20 0.143158496 ubox
8 19 0.143218887 ubox
8 24 0.041010645 ubox
8 45 0.071409555 ubox
9 17 0.079872175 ubox
9 22 0.096142369 ubox
9 23 0.029625559 ubox
9 28 0.033794611 ubox
9 32 0.008110051 ubox
9 34 0.003319119 ubox
9 36 0.006036595 ubox
9 38 0.004091397 ubox
9 44 0.071940881 ubox
9 47 0.027372741 ubox
10 16 0.079210739 ubox
10 21 0.106998655 ubox
10 22 0.005424398 ubox
10 25 0.047591219 ubox
10 27 0.040603331 ubox
10 31 0.008637495 ubox
10 33 0.003306752 ubox
10 35 0.006395571 ubox
10 37 0.004024703 ubox
10 43 0.071869826 ubox
10 46 0.029247680 ubox
10 52 0.003226599 ubox
11 15 0.073468891 ubox
11 18 0.019697098 ubox
11 20 0.106841636 ubox
11 24 0.047509131 ubox
11 26 0.041295108 ubox
11 45 0.028340115 ubox
11 49 0.023391479 ubox
11 51 0.003361878 ubox
12 17 0.020637430 ubox
12 23 0.046927467 ubox
12 25 0.041437654 ubox
12 28 0.003969555 ubox
12 29 0.006542157 ubox
12 31 0.011514257 ubox
12 35 0.013004652 ubox
12 38 0.006325930 ubox
12 39 0.010730948 ubox
12 40 0.015213508 ubox
12 41 0.053924766 ubox
12 42 0.019090216 ubox
12 43 0.028115056 ubox
12 44 0.007760322 ubox
12 48 0.026103037 ubox
13 22 0.046644161 ubox
13 27 0.005647559 ubox
13 28 0.007269046 ubox
13 29 0.004244196 ubox
13 30 0.011565107 ubox
13 32 0.003301553 ubox
13 33 0.003721334 ubox
13 34 0.013065307 ubox
13 36 0.003538509 ubox
13 37 0.008507778 ubox
13 38 0.011618651 ubox
13 39 0.015633923 ubox
13 40 0.056276783 ubox
13 41 0.020534368 ubox
13 42 0.028112867 ubox
13 47 0.024940487 ubox
13 52 0.038470453 ubox
14 24 0.040788097 ubox
14 26 0.006378002 ubox
14 45 0.005668139 ubox
14 51 0.057788822 ubox
15 23 0.043518858 ubox
15 27 0.010487676 ubox
15 44 0.005709749 ubox
15 52 0.148410443 ubox
16 26 0.010997000 ubox
16 50 0.143286123 ubox
16 51 0.168402743 ubox
17 24 0.024157550 ubox
17 45 0.075570145 ubox
17 49 0.200969557 ubox
17 50 0.161825086 ubox
18 23 0.025445550 ubox
18 28 0.014760601 ubox
18 29 0.022923799 ubox
18 30 0.013219845 ubox
18 32 0.075912382 ubox
18 33 0.038265097 ubox
18 34 0.009902680 ubox
18 36 0.078267965 ubox
18 37 0.033137110 ubox
18 38 0.008051790 ubox
18 39 0.006974186 ubox
18 40 0.005997622 ubox
18 41 0.007153854 ubox
18 42 0.004642534 ubox
18 44 0.083512589 ubox
18 47 0.043711067 ubox
19 27 0.017328992 ubox
19 28 0.027346392 ubox
19 29 0.015659384 ubox
19 30 0.012446749 ubox
19 31 0.081589503 ubox
19 32 0.045379315 ubox
19 33 0.011174568 ubox
19 34 0.006308270 ubox
19 35 0.081701393 ubox
19 36 0.037695961 ubox
19 37 0.008863817 ubox
19 38 0.007805768 ubox
19 39 0.006880000 ubox
19 40 0.007789800 ubox
19 41 0.005696954 ubox
19 43 0.084211193 ubox
19 44 0.008545171 ubox
19 46 0.040287958 ubox
19 47 0.570442420 ubox
19 48 0.214384759 ubox
20 27 0.022466271 ubox
20 28 0.014491661 ubox
20 29 0.015478401 ubox
20 30 0.066010604 ubox
20 31 0.045783459 ubox
20 32 0.009650527 ubox
20 33 0.006892723 ubox
20 34 0.064261752 ubox
20 35 0.037765239 ubox
20 36 0.007547722 ubox
20 37 0.006590130 ubox
20 38 0.005866115 ubox
20 39 0.006585594 ubox
20 40 0.005098634 ubox
20 41 0.004510044 ubox
20 42 0.066204237 ubox
20 43 0.009206141 ubox
20 46 0.630716692 ubox
20 47 0.090645874 ubox
21 45 0.631441869 ubox
21 50 0.380929207 ubox
22 49 0.377238072 ubox
22 50 0.037809113 ubox
22 51 0.027124710 ubox
23 49 0.039898353 ubox
23 50 0.028824591 ubox
24 44 0.011231581 ubox
24 46 0.548811916 ubox
24 48 0.028592244 ubox
25 45 0.549572775 ubox
26 44 0.502293453 ubox
26 52 0.014604122 ubox
27 51 0.016242877 ubox
28 50 0.016333049 ubox
28 51 0.009634196 ubox
29 49 0.014031201 ubox
29 50 0.010241909 ubox
29 51 0.006323900 ubox
30 49 0.008986521 ubox
30 50 0.005393411 ubox
30 51 0.076367927 ubox
31 50 0.081697264 ubox
32 49 0.077081648 ubox
32 50 0.004515768 ubox
32 51 0.011389230 ubox
33 49 0.006013903 ubox
33 50 0.012085863 ubox
33 51 0.008120656 ubox
34 49 0.010633757 ubox
34 50 0.006984973 ubox
34 51 0.098158736 ubox
35 50 0.105004986 ubox
36 49 0.099870820 ubox
36 50 0.005849798 ubox
36 51 0.015607109 ubox
37 49 0.007790702 ubox
37 50 0.016633711 ubox
37 51 0.017100683 ubox
38 49 0.014915449 ubox
38 50 0.018176511 ubox
38 51 0.031749837 ubox
39 49 0.016240405 ubox
39 50 0.034129428 ubox
39 51 0.022799349 ubox
40 49 0.033709661 ubox
40 50 0.024260159 ubox
40 51 0.038760359 ubox
41 49 0.022462906 ubox
41 50 0.041645465 ubox
41 51 0.019235684 ubox
42 49 0.036543906 ubox
42 50 0.014623866 ubox
42 51 0.289031349 ubox
43 50 0.309188439 ubox
44 49 0.289372240 ubox
1 13 0.9500000 lbox
2 12 0.9500000 lbox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
showpage
end
%%EOF
