%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUGGGCUCGACUGAGGCUCCCUGGCCGCUCGCGCUUUUCUCUCCUUCUCCAAGAUGGCGGCGAUCGGCGGCGUUGAGGCGGGAUCCGGGCGAGCCGAGUGAAGACCUGGUCCUGUAGACGGGAAGGAGCCUGGACACAGUGACACAUUCUCAAAGGCCCUGCAGGACCACC\
) } def
/len { sequence length } bind def

/coor [
[206.32249451 225.47244263]
[194.96861267 215.66992188]
[190.59411621 201.32196045]
[194.54776001 186.85238647]
[205.61054993 176.72248840]
[220.37030029 174.05543518]
[207.29109192 166.71144104]
[194.21188354 159.36743164]
[181.06729126 152.14112854]
[167.85835266 145.03309631]
[153.71131897 149.54940796]
[140.21432495 142.52902222]
[135.57313538 127.65968323]
[122.36420441 120.55165100]
[109.15527344 113.44362640]
[97.79777527 116.11521912]
[87.57348633 110.49436188]
[83.74353027 99.47340393]
[70.66432190 92.12940216]
[57.58511734 84.78540802]
[44.50590897 77.44140625]
[31.42670059 70.09741211]
[18.28209877 62.87110519]
[5.07316637 55.76307678]
[-8.13576603 48.65504837]
[-21.34469986 41.54701614]
[-34.55363083 34.43898773]
[-47.94915771 27.68918037]
[-61.52156448 21.30249023]
[-75.09397125 14.91580105]
[-88.66637421 8.52911186]
[-102.23878479 2.14242244]
[-116.03170013 -3.75295305]
[-130.02734375 -9.14941597]
[-144.02299500 -14.54587841]
[-158.06651306 -19.81650162]
[-172.15678406 -24.96085739]
[-186.24705505 -30.10521507]
[-200.44132996 -23.68959045]
[-214.65757751 -29.10742188]
[-220.68641663 -42.67903137]
[-234.77668762 -47.82339096]
[-248.91256714 -52.84106827]
[-263.09289551 -57.73166275]
[-278.66165161 -54.91656113]
[-288.17077637 -66.38066101]
[-302.35113525 -71.27125549]
[-317.91986084 -68.45615387]
[-327.42901611 -79.92024994]
[-341.60934448 -84.81084442]
[-355.78970337 -89.70143890]
[-372.73464966 -89.14968109]
[-377.95568848 -105.27968597]
[-363.90136719 -114.76190948]
[-350.89910889 -103.88178253]
[-336.71875000 -98.99118805]
[-322.53842163 -94.10059357]
[-307.98394775 -97.26550293]
[-297.46054077 -85.45159912]
[-283.28018188 -80.56100464]
[-268.72570801 -83.72591400]
[-258.20230103 -71.91200256]
[-244.02197266 -67.02140808]
[-236.64874268 -67.81577301]
[-229.63232422 -61.91365433]
[-215.54206848 -56.76929855]
[-202.18705750 -63.26386642]
[-187.82423401 -58.24747467]
[-181.10269165 -44.19548035]
[-167.01242065 -39.05112457]
[-152.92216492 -33.90676498]
[-145.53585815 -34.56864166]
[-138.62652588 -28.54152679]
[-124.63088226 -23.14506531]
[-110.63523865 -17.74860191]
[-107.99824524 -18.78965187]
[-104.78342438 -18.83098793]
[-101.37609100 -17.64469147]
[-98.23770142 -15.14886379]
[-95.85208893 -11.42998314]
[-82.27968597 -5.04329395]
[-68.70728302 1.34339547]
[-55.13487625 7.73008490]
[-41.56246948 14.11677456]
[-38.11181641 13.25125408]
[-34.06791306 14.03512764]
[-30.22030258 16.72987366]
[-27.44560242 21.23005295]
[-14.23666954 28.33808327]
[-1.02773654 35.44611359]
[12.18119621 42.55414200]
[25.39012909 49.66217422]
[32.79511642 50.06425858]
[38.77069855 57.01820374]
[51.84990692 64.36219788]
[64.92911530 71.70619965]
[78.00832367 79.05019379]
[91.08753204 86.39419556]
[107.83572388 85.74687958]
[116.26329803 100.23468781]
[129.47222900 107.34272003]
[142.68116760 114.45075226]
[157.64753723 110.13269806]
[170.94201660 117.52941132]
[174.96638489 131.82417297]
[188.17532349 138.93220520]
[197.24861145 140.25143433]
[201.55589294 146.28822327]
[214.63510132 153.63223267]
[227.71430969 160.97622681]
[241.34349060 167.24082947]
[255.43376160 172.38519287]
[269.52401733 177.52954102]
[283.61428833 182.67390442]
[297.70455933 187.81826782]
[311.79483032 192.96261597]
[325.88507080 198.10697937]
[339.97534180 203.25132751]
[333.00061035 189.97152710]
[335.02615356 175.10891724]
[345.30014038 164.17982483]
[360.00936890 161.24063110]
[373.69442749 167.38221741]
[381.27603149 180.32513428]
[379.94027710 195.26554871]
[370.18289185 206.65824890]
[355.62390137 210.27468872]
[368.83282471 217.38272095]
[382.04174805 224.49075317]
[391.11505127 225.80998230]
[395.42233276 231.84678650]
[408.50152588 239.19078064]
[421.58074951 246.53477478]
[434.65994263 253.87876892]
[453.04675293 253.21737671]
[461.43347168 268.61639404]
[474.64239502 275.72442627]
[484.90237427 271.98815918]
[495.30664062 274.48263550]
[502.45657349 282.14361572]
[504.15481567 292.26119995]
[517.10009766 299.83880615]
[530.04534912 307.41641235]
[542.99060059 314.99398804]
[559.71453857 317.77740479]
[561.66949463 334.61825562]
[546.02801514 341.15887451]
[535.41302490 327.93927002]
[522.46771240 320.36166382]
[509.52246094 312.78405762]
[496.57720947 305.20648193]
[477.30651855 306.53973389]
[467.53436279 288.93338013]
[454.32543945 281.82534790]
[442.63189697 285.00265503]
[431.55950928 279.16125488]
[427.31594849 266.95797729]
[414.23675537 259.61398315]
[401.15753174 252.26998901]
[388.07833862 244.92599487]
[374.93371582 237.69967651]
[361.72479248 230.59165955]
[348.51586914 223.48362732]
[334.83099365 217.34159851]
[320.74072266 212.19725037]
[306.65045166 207.05288696]
[292.56018066 201.90852356]
[278.46994019 196.76417542]
[264.37966919 191.61981201]
[250.28939819 186.47546387]
[236.19912720 181.33110046]
[243.78614807 194.27085876]
[243.30096436 209.26300049]
[234.89317322 221.68511963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 110]
[7 109]
[8 108]
[9 106]
[10 105]
[13 102]
[14 101]
[15 100]
[18 98]
[19 97]
[20 96]
[21 95]
[22 94]
[23 92]
[24 91]
[25 90]
[26 89]
[27 88]
[28 84]
[29 83]
[30 82]
[31 81]
[32 80]
[33 75]
[34 74]
[35 73]
[36 71]
[37 70]
[38 69]
[41 66]
[42 65]
[43 63]
[44 62]
[46 60]
[47 59]
[49 57]
[50 56]
[51 55]
[111 171]
[112 170]
[113 169]
[114 168]
[115 167]
[116 166]
[117 165]
[118 164]
[127 163]
[128 162]
[129 161]
[131 160]
[132 159]
[133 158]
[134 157]
[136 154]
[137 153]
[141 151]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
