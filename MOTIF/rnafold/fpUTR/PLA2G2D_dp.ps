%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLA2G2D)
} def

/sequence { (\
GAUAUAAGGGGGCAGCCUGCAUGGAAAGGGACUGCCAGCAUCUGCCUCCACUGCUCUGUGCUGGGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 42 0.004577334 ubox
1 56 0.079871391 ubox
1 68 0.131111635 ubox
2 41 0.004571708 ubox
2 55 0.078464483 ubox
2 59 0.010654466 ubox
2 67 0.131968319 ubox
3 40 0.004313481 ubox
3 53 0.046447022 ubox
3 58 0.010807231 ubox
3 60 0.008842790 ubox
3 63 0.006889908 ubox
3 66 0.127239579 ubox
4 52 0.048427877 ubox
4 57 0.010286014 ubox
4 59 0.009962971 ubox
4 62 0.007221138 ubox
4 67 0.018393482 ubox
5 53 0.052718542 ubox
5 58 0.009968517 ubox
5 63 0.017571023 ubox
5 66 0.019510304 ubox
6 52 0.057580296 ubox
6 57 0.009394923 ubox
6 62 0.017115882 ubox
7 18 0.004355498 ubox
7 43 0.005033348 ubox
7 52 0.064683196 ubox
7 55 0.004157015 ubox
7 62 0.020538108 ubox
8 17 0.004493005 ubox
8 42 0.005191129 ubox
8 43 0.003193136 ubox
8 48 0.005382150 ubox
8 49 0.994902972 ubox
8 51 0.059786525 ubox
8 61 0.013987633 ubox
9 16 0.004489211 ubox
9 41 0.003838649 ubox
9 42 0.003458651 ubox
9 47 0.005185004 ubox
9 48 0.996762040 ubox
9 49 0.067274252 ubox
9 62 0.006997767 ubox
10 41 0.003388551 ubox
10 46 0.005073232 ubox
10 47 0.996558376 ubox
10 48 0.067112089 ubox
10 61 0.007184269 ubox
11 36 0.021840838 ubox
11 45 0.003521800 ubox
11 46 0.999600808 ubox
11 47 0.008278970 ubox
12 35 0.022333096 ubox
12 45 0.999633752 ubox
12 46 0.005874286 ubox
12 59 0.007223513 ubox
13 34 0.022698592 ubox
13 44 0.999650507 ubox
13 58 0.007238138 ubox
14 33 0.022696469 ubox
14 43 0.999131690 ubox
14 57 0.007235087 ubox
15 32 0.022656096 ubox
15 39 0.010328263 ubox
15 42 0.996001176 ubox
15 56 0.007213383 ubox
16 24 0.015673486 ubox
16 29 0.018437693 ubox
16 30 0.021108073 ubox
16 38 0.011294970 ubox
16 64 0.005685700 ubox
16 65 0.005822816 ubox
17 23 0.015722656 ubox
17 28 0.018875865 ubox
17 29 0.020873066 ubox
17 38 0.055815332 ubox
17 63 0.005689857 ubox
17 64 0.005837780 ubox
18 27 0.019114942 ubox
18 28 0.020349640 ubox
18 37 0.055709538 ubox
18 40 0.966735930 ubox
18 63 0.005467996 ubox
19 35 0.039573675 ubox
19 36 0.041026203 ubox
19 39 0.996965065 ubox
19 54 0.007391701 ubox
19 61 0.009979381 ubox
20 34 0.054463641 ubox
20 38 0.995632708 ubox
20 53 0.007395075 ubox
20 60 0.010017640 ubox
21 33 0.049456214 ubox
21 41 0.017152944 ubox
21 52 0.007317497 ubox
21 59 0.010015677 ubox
22 34 0.019425681 ubox
22 37 0.990406360 ubox
22 40 0.017315118 ubox
22 50 0.007404780 ubox
22 58 0.009977573 ubox
23 33 0.026213001 ubox
23 36 0.996466653 ubox
23 39 0.017320094 ubox
23 49 0.007482818 ubox
23 57 0.009971136 ubox
24 32 0.029090808 ubox
24 35 0.994568708 ubox
24 48 0.007480938 ubox
24 56 0.010009378 ubox
25 47 0.007063706 ubox
25 55 0.009819951 ubox
27 33 0.710376812 ubox
27 52 0.009771785 ubox
28 32 0.698330277 ubox
28 36 0.036346464 ubox
28 51 0.009807427 ubox
29 35 0.037147570 ubox
29 36 0.017977064 ubox
29 43 0.006210366 ubox
29 49 0.009925446 ubox
30 35 0.018227921 ubox
30 42 0.006447272 ubox
30 48 0.009938157 ubox
31 41 0.006368856 ubox
31 47 0.009746521 ubox
32 38 0.003283137 ubox
33 40 0.007387275 ubox
34 39 0.007659847 ubox
34 45 0.009326520 ubox
35 44 0.007914794 ubox
35 64 0.004268984 ubox
36 44 0.006172543 ubox
36 63 0.006002855 ubox
37 43 0.008047597 ubox
37 62 0.008368826 ubox
38 42 0.007906841 ubox
38 45 0.009438887 ubox
38 61 0.008577603 ubox
39 44 0.009565114 ubox
39 60 0.008578478 ubox
40 59 0.008539980 ubox
40 67 0.007497836 ubox
41 58 0.007992933 ubox
41 66 0.008092167 ubox
42 65 0.008152795 ubox
43 64 0.003243156 ubox
44 54 0.008452597 ubox
45 53 0.008446467 ubox
45 64 0.014817979 ubox
45 65 0.007631468 ubox
46 63 0.015033428 ubox
46 64 0.007668115 ubox
46 65 0.004810824 ubox
47 63 0.007358692 ubox
47 64 0.003846760 ubox
47 65 0.013745443 ubox
47 66 0.013133573 ubox
48 63 0.004035978 ubox
48 64 0.028535840 ubox
48 65 0.018840551 ubox
49 60 0.039903653 ubox
49 63 0.030377485 ubox
49 64 0.019550625 ubox
50 57 0.003797303 ubox
50 59 0.101715761 ubox
50 62 0.031671544 ubox
51 58 0.106037536 ubox
51 64 0.471585472 ubox
51 65 0.155302783 ubox
52 58 0.003296491 ubox
52 60 0.018195992 ubox
52 63 0.443225622 ubox
52 64 0.144380065 ubox
53 59 0.031714260 ubox
53 61 0.637265328 ubox
53 62 0.065965046 ubox
54 58 0.032116199 ubox
54 60 0.640136509 ubox
54 64 0.035751427 ubox
54 65 0.660924183 ubox
55 63 0.023901305 ubox
55 64 0.662900963 ubox
55 65 0.072569242 ubox
55 66 0.270746904 ubox
56 63 0.664068379 ubox
56 64 0.091526852 ubox
56 65 0.289688399 ubox
57 63 0.089616545 ubox
57 64 0.286363918 ubox
58 62 0.043418767 ubox
58 67 0.025771258 ubox
59 66 0.027205027 ubox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
10 47 0.9500000 lbox
11 46 0.9500000 lbox
12 45 0.9500000 lbox
13 44 0.9500000 lbox
14 43 0.9500000 lbox
15 42 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
showpage
end
%%EOF
