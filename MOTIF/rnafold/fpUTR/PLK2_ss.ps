%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGCCCCCUUCCCGCCUCCCCGUAUAUAAGACUUCGCCGAGCGCUCUCACUCGCACAAGUGGACCGGGGUGUUGGGUGCUAGUCGGCACCAGAGGCAAGGGUGCGAGGACCACGGCCGGCUCGGACGUGUGACCGCGCCUAGGGGGUGGCAGCGGGCAGUGCGGGGCGGCAAGGCGACC\
) } def
/len { sequence length } bind def

/coor [
[149.23965454 465.72335815]
[149.13243103 449.91943359]
[160.29101562 438.72738647]
[160.03067017 423.72964478]
[159.77032471 408.73190308]
[159.50999451 393.73416138]
[148.35247803 377.96099854]
[158.32543945 360.46267700]
[157.54473877 345.48300171]
[149.15550232 333.17568970]
[156.16406250 318.99151611]
[155.38334656 304.01184082]
[154.60264587 289.03216553]
[153.82194519 274.05249023]
[153.04122925 259.07284546]
[152.26052856 244.09317017]
[151.34985352 229.12083435]
[150.30928040 214.15696716]
[141.70770264 201.99711609]
[148.46902466 187.69343567]
[147.42845154 172.72956848]
[146.38786316 157.76570129]
[145.34729004 142.80184937]
[144.30671692 127.83798218]
[128.54182434 140.99827576]
[109.75524139 146.57287598]
[91.23060608 144.35362244]
[75.92090607 135.43359375]
[65.97784424 121.91522980]
[62.45470047 106.46710205]
[65.22294617 91.81679535]
[51.66833115 85.39244080]
[38.11371231 78.96808624]
[24.55909538 72.54372406]
[6.25841904 74.46933746]
[-3.16575551 59.67916489]
[-16.82983208 53.49103165]
[-30.49390793 47.30289459]
[-44.15798569 41.11476135]
[-59.92105484 42.46981049]
[-68.32285309 30.17106628]
[-81.98693085 23.98293114]
[-95.65100861 17.79479599]
[-109.31507874 11.60666180]
[-122.97915649 5.41852617]
[-136.64323425 -0.76960868]
[-150.30731201 -6.95774364]
[-163.97138977 -13.14587879]
[-177.42555237 -5.64310598]
[-192.54112244 -7.47973728]
[-203.54663086 -17.74338722]
[-206.36444092 -32.34468842]
[-220.02851868 -38.53282166]
[-233.69259644 -44.72095490]
[-247.35667419 -50.90909195]
[-263.61456299 -48.76115036]
[-273.38769531 -61.92995453]
[-266.62237549 -76.86856842]
[-250.27812195 -78.20942688]
[-241.16854858 -64.57316589]
[-227.50447083 -58.38503265]
[-213.84039307 -52.19689941]
[-200.17631531 -46.00876236]
[-187.34327698 -53.52216721]
[-172.36967468 -52.02048874]
[-161.01876831 -41.87108612]
[-157.78324890 -26.80995560]
[-144.11917114 -20.62182045]
[-130.45509338 -14.43368530]
[-116.79102325 -8.24555016]
[-103.12694550 -2.05741501]
[-89.46286774 4.13072014]
[-75.79879761 10.31885529]
[-62.13471985 16.50699043]
[-47.34899139 14.70932484]
[-37.96984863 27.45068359]
[-24.30577278 33.63882065]
[-10.64169693 39.82695389]
[3.02237964 46.01509094]
[14.46705532 42.04584885]
[25.91073608 47.11117554]
[30.98345184 58.98910904]
[44.53807068 65.41346741]
[58.09268570 71.83782196]
[71.64730072 78.26217651]
[90.74847412 56.95644760]
[124.77696228 53.91159821]
[127.62348175 39.18416595]
[130.47000122 24.45672798]
[133.31651306 9.72929382]
[136.16302490 -4.99814177]
[124.93256378 -15.57549286]
[121.22563171 -30.55087852]
[126.22508240 -45.14570618]
[138.33561707 -54.70281982]
[153.69281006 -56.17258072]
[167.39624023 -49.08599091]
[175.07318115 -35.70435715]
[174.27395630 -20.29771042]
[165.25358582 -7.78225517]
[150.89045715 -2.15162683]
[148.04394531 12.57580853]
[145.19743347 27.30324364]
[142.35090637 42.03067780]
[139.50439453 56.75811386]
[145.58729553 61.14541626]
[154.36189270 48.97962570]
[163.13667297 36.81397247]
[175.30220032 45.58895111]
[166.52767944 57.75422668]
[157.75308228 69.92001343]
[163.83596802 74.30731201]
[176.91226196 66.95812988]
[189.98855591 59.60894012]
[203.06484985 52.25975418]
[211.30433655 38.75340652]
[226.19023132 39.26274490]
[239.26652527 31.91355896]
[252.34281921 24.56437302]
[263.18826294 11.53314304]
[278.71252441 18.34732819]
[276.46218872 35.15126419]
[259.69201660 37.64066696]
[246.61570740 44.98985291]
[233.53941345 52.33903885]
[226.23524475 65.31972504]
[210.41404724 65.33605194]
[197.33775330 72.68523407]
[184.26145935 80.03442383]
[171.18516541 87.38360596]
[173.51881409 102.20096588]
[188.22099304 105.17517853]
[197.28047180 103.80816650]
[203.15153503 108.33071136]
[217.79988098 111.55965424]
[232.44821167 114.78858948]
[247.09655762 118.01753235]
[262.23876953 113.43228912]
[273.00210571 123.72790527]
[287.65045166 126.95684052]
[304.41979980 124.46183014]
[311.45953369 139.88513184]
[298.58776855 150.91935730]
[284.42150879 141.60517883]
[269.77316284 138.37625122]
[255.67871094 143.19244385]
[243.86761475 132.66587830]
[229.21928406 129.43693542]
[214.57093811 126.20799255]
[199.92259216 122.97905731]
[185.24678040 119.87735748]
[170.54460144 116.90314484]
[159.27058411 126.79740906]
[160.31115723 141.76127625]
[161.35173035 156.72512817]
[162.39230347 171.68899536]
[163.43289185 186.65286255]
[172.10888672 199.88304138]
[165.27313232 213.11639404]
[166.31372070 228.08026123]
[170.03953552 236.45050049]
[167.24018860 243.31245422]
[168.02090454 258.29211426]
[168.80160522 273.27178955]
[169.58230591 288.25146484]
[170.36302185 303.23114014]
[171.14372253 318.21081543]
[179.58879089 331.58956909]
[172.52439880 344.70230103]
[173.30509949 359.68197632]
[181.81822205 366.50659180]
[185.08811951 376.68524170]
[182.26087952 386.76745605]
[174.50773621 393.47381592]
[174.76806641 408.47155762]
[175.02841187 423.46929932]
[175.28874207 438.46704102]
[186.82904053 449.26507568]
[187.27038574 465.06320190]
[176.35095215 476.48867798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[6 174]
[8 170]
[9 169]
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[17 160]
[18 159]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[31 85]
[32 84]
[33 83]
[34 82]
[36 79]
[37 78]
[38 77]
[39 76]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[52 63]
[53 62]
[54 61]
[55 60]
[87 105]
[88 104]
[89 103]
[90 102]
[91 101]
[112 130]
[113 129]
[114 128]
[115 127]
[117 125]
[118 124]
[119 123]
[131 152]
[132 151]
[134 150]
[135 149]
[136 148]
[137 147]
[139 145]
[140 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
