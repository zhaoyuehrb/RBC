%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCAUGACAACGAGUCUGCGCCCCGCGCUCAGCUGCUUCUCCGGCGGAACCCAGGCUGGACCGCGGGCCCCGGCCUGGGGGCCACUGCUGCCACCGCCGCCGCCACCUCGUCUCCUCCCCGUCCCCGCCCAGCCCCAGGUCUCCCCGCCUCACUCGGGCCCGUGGCCGGGGUCACUCCCCGCCGCCCCUCCCCGCACGG\
) } def
/len { sequence length } bind def

/coor [
[72.56294250 217.75219727]
[61.59510803 222.86648560]
[56.09940720 236.82345581]
[50.71294785 250.82295227]
[45.43605423 264.86413574]
[45.34553146 274.00637817]
[39.96540451 279.08242798]
[34.46970367 293.03942871]
[28.97400284 306.99639893]
[34.02877808 322.22232056]
[25.15587234 335.58834839]
[9.16181469 336.84124756]
[-1.68411946 325.01983643]
[0.93814164 309.19253540]
[15.01702404 301.50070190]
[20.51272392 287.54370117]
[26.00842476 273.58673096]
[31.39488602 259.58721924]
[36.67177963 245.54606628]
[36.08162689 238.17289734]
[42.14242935 231.32775879]
[47.63813019 217.37077332]
[44.10745621 200.18414307]
[58.60271835 188.83375549]
[63.87960815 174.79258728]
[69.15650177 160.75141907]
[66.39115143 146.11576843]
[78.48867035 135.91966248]
[83.76556396 121.87849426]
[78.52478790 116.51338959]
[63.99146652 120.22586823]
[68.04325104 105.78318787]
[62.80247879 100.41808319]
[48.64146805 105.36436462]
[34.48045349 110.31064606]
[20.31943893 115.25692749]
[13.68088341 129.59934998]
[-1.18349969 134.96830750]
[-15.45493507 128.17848206]
[-20.66643333 113.25817108]
[-13.72610378 99.05931854]
[1.24847734 94.00585938]
[15.37315750 101.09591675]
[29.53417015 96.14963531]
[43.69518280 91.20335388]
[57.85619736 86.25707245]
[65.65866089 73.44607544]
[63.55559158 58.59424210]
[61.45251846 43.74240112]
[59.23344421 28.90745354]
[56.89850616 14.09029961]
[54.56356812 -0.72685498]
[40.23488617 -10.75546265]
[37.63951492 -27.70981598]
[47.90008545 -41.03036118]
[45.33385086 -55.80921173]
[42.76762009 -70.58806610]
[40.20138550 -85.36691284]
[37.63515472 -100.14576721]
[35.06892014 -114.92461395]
[31.71173668 -118.94271851]
[30.37117004 -123.40132904]
[30.87642288 -127.45650482]
[32.74580383 -130.45510864]
[30.87511063 -145.33799744]
[29.00441742 -160.22088623]
[27.13372231 -175.10379028]
[25.26302719 -189.98667908]
[13.74156952 -196.97245789]
[8.42713356 -209.14187622]
[11.05563545 -221.95971680]
[20.44725418 -230.78854370]
[18.80939484 -245.69885254]
[17.17153740 -260.60916138]
[3.86034894 -268.36276245]
[-2.26133537 -282.30474854]
[0.96221197 -297.00415039]
[12.09004974 -306.86871338]
[10.45219135 -321.77902222]
[8.81433296 -336.68933105]
[7.17647505 -351.59963989]
[5.53861666 -366.50994873]
[3.90075827 -381.42025757]
[-12.34296989 -388.10852051]
[-22.91193771 -402.02862549]
[-24.96931839 -419.29525757]
[-18.03839302 -435.14593506]
[-4.10913038 -445.25460815]
[-6.21220350 -460.10644531]
[-15.80792999 -472.68548584]
[-9.93148041 -486.37185669]
[-12.03455353 -501.22369385]
[-25.39943504 -509.34243774]
[-30.36991310 -524.16906738]
[-24.59908104 -538.70288086]
[-10.81174946 -546.08142090]
[4.48212624 -542.82086182]
[14.06124496 -530.46063232]
[13.40263939 -514.83697510]
[2.81728411 -503.32675171]
[4.92035723 -488.47491455]
[14.36565781 -476.95819092]
[8.63963413 -462.20950317]
[10.74270725 -447.35766602]
[22.90982819 -443.92224121]
[32.90899658 -436.10931396]
[39.23131180 -425.05300903]
[40.90578461 -412.38012695]
[37.64832306 -399.97076416]
[29.90917587 -389.67950439]
[18.81107140 -383.05810547]
[20.44892883 -368.14779663]
[22.08678818 -353.23748779]
[23.72464561 -338.32717896]
[25.36250496 -323.41687012]
[27.00036240 -308.50656128]
[40.00420380 -301.29281616]
[46.34176636 -287.64367676]
[43.39251328 -272.70529175]
[32.08184814 -262.24703979]
[33.71970749 -247.33671570]
[35.35756683 -232.42640686]
[48.91305923 -222.47830200]
[51.12693024 -205.46992493]
[40.14591980 -191.85737610]
[42.01661682 -176.97447205]
[43.88731003 -162.09158325]
[45.75800323 -147.20869446]
[47.62869644 -132.32580566]
[49.84777069 -117.49085236]
[52.41400528 -102.71199799]
[54.98023605 -87.93314362]
[57.54647064 -73.15429688]
[60.11270142 -58.37544632]
[62.67893600 -43.59659195]
[74.15255737 -37.72236252]
[80.23647308 -26.13822174]
[78.50968170 -12.97174835]
[69.38072205 -3.06179309]
[71.71566010 11.75536156]
[74.05059814 26.57251549]
[78.20055389 32.69541168]
[76.30435944 41.63932800]
[78.40743256 56.49116898]
[80.51050568 71.34300232]
[97.10066986 56.73370361]
[123.27591705 53.42160034]
[150.93606567 66.84292603]
[165.85871887 68.36421204]
[180.78138733 69.88549805]
[195.70404053 71.40678406]
[208.99853516 62.42702866]
[224.26448059 67.35960388]
[229.79115295 82.42066193]
[221.33897400 96.05664062]
[205.39170837 97.80719757]
[194.18275452 86.32943726]
[179.26010132 84.80815125]
[164.33743286 83.28686523]
[149.41477966 81.76557922]
[146.34284973 88.60760498]
[140.19900513 102.29164886]
[137.12707520 109.13366699]
[148.17962646 119.27471924]
[159.23219299 129.41577148]
[170.28474426 139.55682373]
[181.33729553 149.69787598]
[189.78359985 153.19776917]
[192.48178101 160.08483887]
[203.37448120 170.39739990]
[214.26719666 180.70996094]
[225.15991211 191.02250671]
[241.17175293 192.02285767]
[250.25445557 205.24722290]
[245.44056702 220.55101013]
[230.42288208 226.19447327]
[216.72167969 217.84841919]
[214.84735107 201.91522217]
[203.95465088 191.60266113]
[193.06193542 181.29011536]
[182.16921997 170.97755432]
[171.19624329 160.75044250]
[160.14369202 150.60939026]
[149.09114075 140.46833801]
[138.03857422 130.32727051]
[126.98601532 120.18622589]
[119.69119263 121.92851257]
[124.52884674 136.12699890]
[134.03692627 147.72857666]
[129.24897766 161.94390869]
[114.65947723 165.42906189]
[103.96357727 154.91250610]
[107.20233917 140.26525879]
[105.10155487 125.41309357]
[97.80673218 127.15538788]
[92.52983856 141.19654846]
[94.91774750 156.83651733]
[83.19766998 166.02830505]
[77.92077637 180.06947327]
[72.64388275 194.11064148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 22]
[3 21]
[4 19]
[5 18]
[7 17]
[8 16]
[9 15]
[24 200]
[25 199]
[26 198]
[28 196]
[29 195]
[33 46]
[34 45]
[35 44]
[36 43]
[47 145]
[48 144]
[49 143]
[50 141]
[51 140]
[52 139]
[55 135]
[56 134]
[57 133]
[58 132]
[59 131]
[60 130]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[72 122]
[73 121]
[74 120]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
[88 104]
[89 103]
[91 101]
[92 100]
[148 160]
[149 159]
[150 158]
[151 157]
[163 186]
[164 185]
[165 184]
[166 183]
[167 182]
[169 181]
[170 180]
[171 179]
[172 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
