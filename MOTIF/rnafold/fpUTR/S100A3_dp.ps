%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (S100A3)
} def

/sequence { (\
AGUCUCAGAUUGGUAAACACCCGAACUGGUCAACUCUCAAGAGACCAUCUGGUUCAGGUUCCUGACUGGGCCAGCGAGUGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.051114716 ubox
1 27 0.010591047 ubox
1 35 0.098473761 ubox
1 37 0.003164944 ubox
2 10 0.060520638 ubox
2 14 0.007996459 ubox
2 18 0.009555643 ubox
2 26 0.013362882 ubox
2 30 0.013724667 ubox
2 34 0.119537459 ubox
2 36 0.003629987 ubox
2 45 0.333946605 ubox
2 71 0.011540688 ubox
2 75 0.009797928 ubox
2 79 0.032080547 ubox
3 9 0.061423224 ubox
3 13 0.015102439 ubox
3 17 0.009429366 ubox
3 24 0.003499606 ubox
3 25 0.013072521 ubox
3 29 0.004430578 ubox
3 33 0.118426036 ubox
3 42 0.007088270 ubox
3 44 0.335024736 ubox
3 70 0.009172748 ubox
3 74 0.006885186 ubox
3 77 0.024744654 ubox
3 81 0.030343699 ubox
3 83 0.535206089 ubox
4 8 0.061085703 ubox
4 12 0.019780018 ubox
4 13 0.013807676 ubox
4 23 0.004216361 ubox
4 28 0.003603051 ubox
4 29 0.059181437 ubox
4 41 0.007597959 ubox
4 43 0.335282674 ubox
4 69 0.009140351 ubox
4 70 0.010804611 ubox
4 76 0.026396357 ubox
4 78 0.165086722 ubox
4 80 0.031148136 ubox
4 82 0.867395531 ubox
4 83 0.015408686 ubox
5 12 0.011622463 ubox
5 13 0.022839162 ubox
5 24 0.011535113 ubox
5 28 0.009481130 ubox
5 29 0.227334352 ubox
5 40 0.006686408 ubox
5 42 0.333874411 ubox
5 69 0.010916220 ubox
5 77 0.167300074 ubox
5 81 0.868947554 ubox
5 82 0.010633714 ubox
5 83 0.010813464 ubox
6 12 0.029224226 ubox
6 23 0.011805686 ubox
6 28 0.291556144 ubox
6 41 0.330616641 ubox
6 68 0.014179597 ubox
6 76 0.167299957 ubox
6 80 0.868563789 ubox
6 82 0.018608583 ubox
7 11 0.024189247 ubox
7 27 0.373770785 ubox
7 35 0.029393219 ubox
7 37 0.163345992 ubox
7 50 0.007510945 ubox
7 67 0.014244157 ubox
7 79 0.763665982 ubox
8 26 0.511316389 ubox
8 31 0.140696342 ubox
8 34 0.028250343 ubox
8 36 0.165391523 ubox
8 38 0.116591404 ubox
8 49 0.014215428 ubox
8 66 0.014221534 ubox
9 30 0.141247913 ubox
9 35 0.162000591 ubox
9 37 0.113878194 ubox
9 48 0.014555556 ubox
9 79 0.059540591 ubox
10 16 0.005428832 ubox
10 17 0.016882371 ubox
10 24 0.716696043 ubox
10 25 0.065184833 ubox
10 29 0.141339790 ubox
10 33 0.153253164 ubox
10 40 0.163985921 ubox
10 47 0.009807721 ubox
10 65 0.010198413 ubox
10 74 0.067682674 ubox
10 77 0.261354107 ubox
10 78 0.091334477 ubox
11 15 0.005211190 ubox
11 16 0.019980563 ubox
11 19 0.087092081 ubox
11 23 0.749215749 ubox
11 24 0.060587339 ubox
11 28 0.138970966 ubox
11 32 0.156668746 ubox
11 39 0.168973617 ubox
11 40 0.004719752 ubox
11 47 0.027155214 ubox
11 64 0.010121224 ubox
11 73 0.074878885 ubox
11 76 0.260947757 ubox
11 77 0.096871081 ubox
12 18 0.100569233 ubox
12 21 0.475383316 ubox
12 22 0.751280090 ubox
12 27 0.142089156 ubox
12 31 0.156640798 ubox
12 35 0.173868485 ubox
12 36 0.052538176 ubox
12 37 0.052478787 ubox
12 38 0.168503299 ubox
12 46 0.031367385 ubox
12 62 0.010398057 ubox
12 63 0.009562721 ubox
12 72 0.075412909 ubox
12 75 0.220861555 ubox
13 20 0.510457355 ubox
13 21 0.731542115 ubox
13 26 0.150299757 ubox
13 30 0.110773714 ubox
13 34 0.186980481 ubox
13 35 0.034760007 ubox
13 36 0.117969139 ubox
13 37 0.119897510 ubox
13 45 0.031395367 ubox
13 61 0.010398568 ubox
13 62 0.009574373 ubox
13 71 0.075387428 ubox
13 75 0.083160406 ubox
14 19 0.501544534 ubox
14 25 0.146467043 ubox
14 28 0.009697678 ubox
14 29 0.021336240 ubox
14 33 0.182507242 ubox
14 44 0.030407331 ubox
14 70 0.071921528 ubox
14 74 0.062900178 ubox
15 27 0.010269683 ubox
15 60 0.007856908 ubox
16 59 0.004066220 ubox
16 60 0.005462286 ubox
17 30 0.055808474 ubox
17 59 0.004460543 ubox
17 79 0.004946350 ubox
18 28 0.034667564 ubox
18 29 0.052090346 ubox
18 58 0.003914987 ubox
18 64 0.008338165 ubox
18 68 0.005780242 ubox
18 78 0.005992090 ubox
18 80 0.098520668 ubox
19 27 0.033332599 ubox
19 30 0.257530000 ubox
19 53 0.025184940 ubox
19 59 0.064213176 ubox
19 63 0.005826416 ubox
19 67 0.003888422 ubox
19 79 0.099655865 ubox
20 29 0.270262225 ubox
20 52 0.026996271 ubox
20 58 0.068864600 ubox
20 70 0.006151839 ubox
20 78 0.100339184 ubox
20 83 0.012794962 ubox
21 28 0.268807130 ubox
21 29 0.130117584 ubox
21 51 0.026987985 ubox
21 52 0.007038731 ubox
21 57 0.068866342 ubox
21 58 0.010908073 ubox
21 69 0.006429656 ubox
21 82 0.012681586 ubox
21 83 0.047523204 ubox
22 28 0.132717835 ubox
22 51 0.007204747 ubox
22 57 0.011084976 ubox
22 68 0.006422184 ubox
22 76 0.119433473 ubox
22 80 0.008201453 ubox
22 82 0.051331700 ubox
23 27 0.083128365 ubox
23 31 0.020316896 ubox
23 36 0.008497908 ubox
23 38 0.010483525 ubox
23 49 0.090230472 ubox
23 50 0.005329598 ubox
23 55 0.070538822 ubox
23 75 0.118328134 ubox
23 79 0.005924022 ubox
24 30 0.019514350 ubox
24 35 0.008182510 ubox
24 37 0.010219824 ubox
24 48 0.090326087 ubox
24 54 0.070664798 ubox
25 53 0.070667576 ubox
25 79 0.062837164 ubox
26 41 0.003571287 ubox
26 52 0.070684024 ubox
26 74 0.011983775 ubox
26 78 0.065853292 ubox
26 82 0.005364044 ubox
27 39 0.030623956 ubox
27 40 0.004068914 ubox
27 47 0.769784024 ubox
27 51 0.060425223 ubox
27 73 0.011806142 ubox
27 77 0.058581399 ubox
27 81 0.004771806 ubox
28 35 0.020618455 ubox
28 36 0.018596210 ubox
28 37 0.032812377 ubox
28 38 0.037174845 ubox
28 46 0.885710862 ubox
28 49 0.014494319 ubox
28 50 0.047000003 ubox
28 72 0.011745458 ubox
29 34 0.024234084 ubox
29 35 0.015197951 ubox
29 36 0.043413895 ubox
29 37 0.025270243 ubox
29 45 0.887715322 ubox
29 48 0.015934554 ubox
29 49 0.047070777 ubox
29 71 0.011744830 ubox
29 75 0.016958147 ubox
30 42 0.014899965 ubox
30 44 0.886428080 ubox
30 47 0.018344127 ubox
30 70 0.011660824 ubox
30 74 0.010057366 ubox
30 77 0.007476356 ubox
30 81 0.118496227 ubox
30 83 0.021673172 ubox
31 41 0.018184965 ubox
31 43 0.843367949 ubox
31 69 0.011307510 ubox
31 76 0.007952068 ubox
31 80 0.126606005 ubox
31 82 0.034834696 ubox
32 79 0.090293010 ubox
33 79 0.114177553 ubox
34 41 0.402845681 ubox
34 43 0.324838712 ubox
34 78 0.145571157 ubox
34 82 0.046556198 ubox
34 83 0.035666296 ubox
35 40 0.374533204 ubox
35 42 0.473487832 ubox
35 44 0.045357173 ubox
35 77 0.145517311 ubox
35 81 0.046535026 ubox
35 82 0.005022144 ubox
35 83 0.093527694 ubox
36 41 0.473978479 ubox
36 43 0.051925249 ubox
36 76 0.145166118 ubox
36 78 0.024470272 ubox
36 80 0.045665602 ubox
36 82 0.185936739 ubox
36 83 0.003539262 ubox
37 42 0.050173602 ubox
37 44 0.083796877 ubox
37 65 0.005914672 ubox
37 77 0.026719051 ubox
37 81 0.186405044 ubox
38 43 0.090832940 ubox
38 64 0.006051001 ubox
38 76 0.026914962 ubox
38 80 0.186396361 ubox
38 82 0.004984730 ubox
39 63 0.005353307 ubox
39 79 0.165081019 ubox
40 50 0.038741177 ubox
40 63 0.003602353 ubox
41 49 0.046496895 ubox
41 55 0.004821628 ubox
41 61 0.004569257 ubox
41 62 0.004535785 ubox
42 48 0.047062496 ubox
42 50 0.015398244 ubox
42 54 0.004358098 ubox
42 60 0.004341084 ubox
43 49 0.018056395 ubox
43 54 0.006597516 ubox
43 60 0.004125558 ubox
44 48 0.016168997 ubox
44 53 0.010937692 ubox
44 59 0.004861223 ubox
44 79 0.130606414 ubox
45 52 0.011828588 ubox
45 58 0.005372552 ubox
45 78 0.155067397 ubox
45 83 0.016632472 ubox
46 51 0.011817872 ubox
46 57 0.005335866 ubox
46 80 0.319696404 ubox
46 82 0.017298035 ubox
47 59 0.003330942 ubox
47 79 0.321868282 ubox
48 58 0.003646237 ubox
48 70 0.006915206 ubox
48 77 0.086319154 ubox
48 78 0.317729960 ubox
48 81 0.008407666 ubox
49 57 0.004065722 ubox
49 69 0.020924320 ubox
49 74 0.971497362 ubox
49 76 0.075224830 ubox
49 78 0.015270546 ubox
49 80 0.006805286 ubox
50 56 0.004206338 ubox
50 68 0.020989479 ubox
50 73 0.992101801 ubox
50 77 0.013446003 ubox
51 55 0.004145482 ubox
51 67 0.021628239 ubox
51 72 0.996667584 ubox
52 66 0.021830533 ubox
52 71 0.996684838 ubox
52 75 0.011333507 ubox
53 65 0.015538702 ubox
53 70 0.996057398 ubox
53 74 0.011304066 ubox
54 65 0.024948482 ubox
54 69 0.993897144 ubox
54 70 0.004663208 ubox
54 73 0.008899478 ubox
55 64 0.030266234 ubox
55 68 0.996684449 ubox
55 69 0.006408327 ubox
56 63 0.030479441 ubox
56 67 0.995364382 ubox
57 62 0.030467885 ubox
57 63 0.004866672 ubox
57 66 0.992049350 ubox
57 67 0.048943514 ubox
57 72 0.017863308 ubox
58 62 0.011576340 ubox
58 66 0.096309464 ubox
58 71 0.017893842 ubox
59 65 0.125876135 ubox
59 70 0.014588595 ubox
60 64 0.115189022 ubox
60 69 0.010789869 ubox
60 70 0.018120821 ubox
61 68 0.010785708 ubox
61 69 0.065993273 ubox
61 70 0.008531026 ubox
61 83 0.010942407 ubox
62 68 0.066128258 ubox
62 69 0.010650457 ubox
62 74 0.003263341 ubox
62 82 0.011195414 ubox
63 68 0.009979736 ubox
63 73 0.003278973 ubox
63 81 0.011167701 ubox
64 72 0.003278463 ubox
65 79 0.011177110 ubox
66 78 0.011210587 ubox
67 76 0.004173333 ubox
67 77 0.010350967 ubox
68 75 0.008470102 ubox
72 80 0.005572202 ubox
73 79 0.005896082 ubox
4 82 0.9500000 lbox
5 81 0.9500000 lbox
6 80 0.9500000 lbox
7 79 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
49 74 0.9500000 lbox
50 73 0.9500000 lbox
51 72 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
showpage
end
%%EOF
