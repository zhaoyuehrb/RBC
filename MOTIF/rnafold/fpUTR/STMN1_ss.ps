%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUCGGCCAAUGCGGAGCCCCGCGCGGAGGUCACGUGCCUCUGUUUGGCGCUUUUGUGCGCGCCCGGGUCUGUUGGUGCUCAGAGUGUGGUCAGGCGGCUCGGACUGAGCAGGACUUUCCUUAUCCCAGUUGAUUGUGCAGAAUACACUGCCUGUCGCUUGUCUUCUAUUCACC\
) } def
/len { sequence length } bind def

/coor [
[400.05697632 111.26520538]
[385.05755615 111.13209534]
[370.05813599 110.99897766]
[355.05874634 110.86585999]
[340.05932617 110.73274231]
[327.26388550 118.35678864]
[313.53292847 110.49732971]
[298.53350830 110.36421204]
[283.53411865 110.23109436]
[276.09033203 123.13286591]
[263.10168457 130.62628174]
[248.00645447 130.61216736]
[234.85873413 122.99414062]
[227.23971558 109.73149109]
[212.24031067 109.59837341]
[197.24090576 109.46525574]
[182.24148560 109.33214569]
[167.24208069 109.19902802]
[163.24858093 111.86985779]
[157.52865601 112.03901672]
[151.71513367 108.78554535]
[136.72990417 108.12017059]
[121.74466705 107.45479584]
[106.75942993 106.78942108]
[107.32149506 127.43327332]
[87.79234314 145.60064697]
[73.43101501 149.93101501]
[59.06968689 154.26139832]
[44.70835495 158.59178162]
[30.34702492 162.92214966]
[15.98569393 167.25253296]
[1.62436306 171.58291626]
[-12.73696709 175.91329956]
[-21.55957222 189.31259155]
[-37.54880524 190.62557983]
[-48.43909836 178.84504700]
[-45.87635040 163.00799561]
[-31.82647896 155.26327515]
[-17.06734657 161.55197144]
[-2.70601630 157.22158813]
[11.65531445 152.89120483]
[26.01664543 148.56082153]
[40.37797546 144.23045349]
[54.73930740 139.90007019]
[69.10063934 135.56968689]
[83.46196747 131.23930359]
[84.12668610 123.76882172]
[85.45612335 108.82785034]
[86.12084198 101.35736847]
[72.74970245 94.55937195]
[59.37856674 87.76138306]
[46.00743103 80.96338654]
[32.63629532 74.16539001]
[18.87850189 81.34193420]
[3.53493285 79.02795410]
[-7.49449539 68.11322021]
[-9.96874237 52.79467773]
[-2.93641067 38.96261597]
[10.89842606 31.93574524]
[26.21599007 34.41603851]
[37.12636566 45.44977570]
[39.43429184 60.79425812]
[52.80542755 67.59225464]
[66.17655945 74.39024353]
[79.54769897 81.18824005]
[92.91883087 87.98622894]
[107.42480469 91.80419159]
[122.41004181 92.46955872]
[137.39527893 93.13493347]
[152.38050842 93.80030823]
[167.37519836 94.19961548]
[182.37460327 94.33273315]
[197.37400818 94.46585083]
[212.37342834 94.59896851]
[227.37283325 94.73208618]
[235.22604370 81.60675049]
[248.50689697 74.22327423]
[263.60000610 74.47706604]
[276.45358276 82.19982910]
[283.66723633 95.23168182]
[298.66662598 95.36479950]
[313.66604614 95.49791718]
[327.53433228 87.88339233]
[340.19244385 95.73332977]
[355.19186401 95.86644745]
[370.19125366 95.99956512]
[385.19067383 96.13268280]
[400.19009399 96.26580048]
[415.39019775 77.61358643]
[439.15179443 76.11441803]
[456.20989990 92.36009216]
[471.03952026 90.10565948]
[483.52005005 80.38214111]
[497.26565552 86.11869812]
[512.09527588 83.86425781]
[526.92486572 81.60982513]
[541.75451660 79.35538483]
[556.58410645 77.10095215]
[571.41369629 74.84651184]
[586.24334717 72.59207153]
[601.07293701 70.33763885]
[604.94995117 54.16651917]
[618.00915527 41.61575317]
[637.22625732 37.76858139]
[656.89459229 45.37042236]
[670.14294434 38.33618546]
[683.39135742 31.30195045]
[696.63970947 24.26771355]
[709.88812256 17.23347664]
[711.86816406 -0.76373702]
[724.12994385 -13.87147427]
[741.64648438 -16.99093819]
[757.39935303 -9.06314754]
[770.38970947 -16.56314659]
[783.38006592 -24.06314659]
[796.37048340 -31.56314659]
[807.06439209 -44.71899796]
[822.66650391 -38.08489990]
[820.61071777 -21.25604820]
[803.87048340 -18.57276726]
[790.88006592 -11.07276630]
[777.88970947 -3.57276654]
[764.89935303 3.92723346]
[765.43127441 16.09049988]
[760.70208740 27.38776207]
[751.55633545 35.64159775]
[739.69635010 39.23283386]
[727.36511230 37.41790390]
[716.92230225 30.48185539]
[703.67395020 37.51609039]
[690.42559814 44.55032730]
[677.17718506 51.58456421]
[663.92883301 58.61880112]
[663.92883301 66.11879730]
[678.92883301 66.11879730]
[693.92883301 66.11903381]
[693.92834473 81.11903381]
[678.92883301 81.11879730]
[663.92883301 81.11879730]
[663.92883301 88.61879730]
[677.17718506 95.65303802]
[690.42559814 102.68727112]
[703.67395020 109.72151184]
[718.70959473 104.85278320]
[732.74591064 112.11619568]
[737.45544434 127.20249176]
[730.04400635 141.16123962]
[714.90875244 145.71095276]
[701.02917480 138.15238953]
[696.63970947 122.96988678]
[683.39135742 115.93565369]
[670.14294434 108.90141296]
[656.89459229 101.86717987]
[634.03466797 109.10281372]
[613.64739990 101.64682770]
[603.32739258 85.16725159]
[588.49780273 87.42169189]
[573.66815186 89.67612457]
[558.83856201 91.93056488]
[544.00891113 94.18500519]
[529.17932129 96.43943787]
[514.34967041 98.69387817]
[499.52008057 100.94831085]
[488.10025024 110.51058197]
[473.29394531 104.93527222]
[458.46435547 107.18971252]
[457.02597046 113.83509064]
[454.08648682 119.98638916]
[449.79660034 125.30858612]
[444.38085938 129.50968933]
[438.12585449 132.35668945]
[431.36505127 133.68856812]
[424.46105957 133.42527771]
[417.78607178 131.57258606]
[411.70196533 128.22218323]
[406.54055786 123.54714966]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 88]
[2 87]
[3 86]
[4 85]
[5 84]
[7 82]
[8 81]
[9 80]
[14 75]
[15 74]
[16 73]
[17 72]
[18 71]
[21 70]
[22 69]
[23 68]
[24 67]
[26 46]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[91 166]
[92 165]
[94 163]
[95 162]
[96 161]
[97 160]
[98 159]
[99 158]
[100 157]
[101 156]
[105 133]
[106 132]
[107 131]
[108 130]
[109 129]
[113 123]
[114 122]
[115 121]
[116 120]
[140 153]
[141 152]
[142 151]
[143 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
