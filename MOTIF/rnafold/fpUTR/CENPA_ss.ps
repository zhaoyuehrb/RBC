%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUGAAGUGGGCGGAGCGAGCGAUUUGAACGCGAGCGGCGCGGACUUCUGCCAAGCACCGGCUCAUGUGAGGCUCGCGGCACAGCGUUCUCUGGGCUCCCCAGAAGCCAGCCUUUCGCUCCCGGACCCGGCAGCCCGAGCAGGAGCCGUGGGACCGGGCGCCAGCACCCUCUGCGGCGUGUC\
) } def
/len { sequence length } bind def

/coor [
[74.91777039 108.21529388]
[74.59028625 101.46629333]
[75.98401642 95.10075378]
[62.90910721 87.74909973]
[49.83420181 80.39744568]
[36.75929642 73.04579163]
[23.68438721 65.69413757]
[17.04149246 65.38581085]
[12.27937126 62.22958755]
[10.29479599 57.86171341]
[-2.52149558 50.06795502]
[-15.33778667 42.27419662]
[-28.15407753 34.48043823]
[-40.80040741 39.15698242]
[-53.64175034 35.73849869]
[-62.03928375 25.69211006]
[-63.09379196 12.83619022]
[-75.77515411 4.82475376]
[-89.42929077 -1.38528550]
[-103.80184937 -5.67824602]
[-118.17440796 -9.97120667]
[-132.54696655 -14.26416779]
[-146.91952515 -18.55712891]
[-159.24159241 -9.31197548]
[-174.46682739 -9.09768105]
[-186.75347900 -17.78686333]
[-191.51066589 -31.87612152]
[-205.88323975 -36.16908264]
[-217.59788513 -30.73470306]
[-229.49092102 -34.62335587]
[-235.34355164 -45.22690201]
[-249.64073181 -49.76462173]
[-263.93789673 -54.30234146]
[-278.23507690 -58.84005737]
[-292.53222656 -63.37777710]
[-306.82940674 -67.91549683]
[-321.12658691 -72.45321655]
[-335.03381348 -65.43705750]
[-349.46853638 -70.24262238]
[-356.07168579 -83.54428864]
[-370.36883545 -88.08200073]
[-384.66601562 -92.61972046]
[-398.96319580 -97.15744019]
[-413.29858398 -101.57293701]
[-427.67114258 -105.86589813]
[-442.07983398 -110.03601074]
[-456.52359009 -114.08296204]
[-470.18316650 -106.59609222]
[-484.77355957 -110.90602875]
[-491.82696533 -123.97450256]
[-506.27072144 -128.02145386]
[-520.71447754 -132.06840515]
[-537.59753418 -130.51962280]
[-543.75946045 -146.31414795]
[-530.28802490 -156.60763550]
[-516.66754150 -146.51216125]
[-502.22375488 -142.46520996]
[-487.77999878 -138.41825867]
[-474.96325684 -145.91938782]
[-460.25759888 -142.02095032]
[-452.47662354 -128.52671814]
[-438.03286743 -124.47976685]
[-430.72631836 -125.70558929]
[-423.37817383 -120.23846436]
[-409.00561523 -115.94550323]
[-401.67919922 -117.04639435]
[-394.42547607 -111.45461273]
[-380.12829590 -106.91689301]
[-365.83111572 -102.37917328]
[-351.53396606 -97.84145355]
[-338.46859741 -104.90062714]
[-323.90457153 -100.50240326]
[-316.58886719 -86.75038147]
[-302.29168701 -82.21266937]
[-287.99453735 -77.67494965]
[-273.69735718 -73.13722992]
[-259.40017700 -68.59951019]
[-245.10301208 -64.06179047]
[-230.80583191 -59.52407455]
[-213.90628052 -64.21612549]
[-201.59027100 -50.54164124]
[-187.21771240 -46.24868011]
[-175.51255798 -55.42077637]
[-160.47306824 -55.94787216]
[-147.85954285 -47.41838074]
[-142.62657166 -32.92968750]
[-128.25401306 -28.63672829]
[-113.88144684 -24.34376717]
[-99.50888824 -20.05080605]
[-85.13632965 -15.75784588]
[-72.25396729 -23.44190979]
[-69.20212555 -38.12817001]
[-66.15029144 -52.81443405]
[-63.09844971 -67.50069427]
[-60.04660797 -82.18695831]
[-56.99476624 -96.87321472]
[-59.69207764 -113.61122131]
[-44.35488510 -120.83666229]
[-33.16606522 -108.09905243]
[-42.30850601 -93.82138062]
[-45.36034775 -79.13511658]
[-48.41218567 -64.44885254]
[-51.46402740 -49.76259232]
[-54.51586914 -35.07633209]
[-57.56770706 -20.39006996]
[-61.77773285 -12.75368023]
[-67.76371765 -7.85660601]
[-55.08235550 0.15483020]
[-38.86254501 -4.24912977]
[-24.18117332 4.60479784]
[-20.36031914 21.66414642]
[-7.54402733 29.45790482]
[5.27226353 37.25166321]
[18.08855438 45.04542542]
[31.03604126 52.61923218]
[44.11094666 59.97088623]
[57.18585587 67.32254028]
[70.26076508 74.67419434]
[83.33567047 82.02584839]
[109.63410187 73.41575623]
[131.78012085 95.91499329]
[146.74516296 96.93862915]
[161.71018982 97.96226501]
[176.67521667 98.98590088]
[191.64025879 100.00953674]
[207.97164917 91.52657318]
[222.14997864 101.85060120]
[237.13031006 102.61858368]
[252.11665344 103.25865936]
[267.10791016 103.77078247]
[282.09915161 104.28289795]
[297.09042358 104.79501343]
[304.61984253 96.90380096]
[315.03808594 94.52140808]
[324.83709717 98.20154572]
[330.85296631 106.49723816]
[345.81802368 107.52087402]
[358.80618286 98.10350037]
[374.22787476 102.52510071]
[380.25289917 117.39381409]
[372.25936890 131.30363464]
[356.37924194 133.58413696]
[344.79437256 122.48590851]
[329.82934570 121.46227264]
[313.15628052 131.22760010]
[296.57830811 119.78627014]
[281.58703613 119.27415466]
[266.59579468 118.76203156]
[251.60453796 118.24991608]
[244.79597473 121.17081451]
[236.36231995 117.59891510]
[221.38200378 116.83092499]
[212.18057251 124.70635986]
[199.67926025 124.17423248]
[190.61662292 114.97456360]
[175.65158081 113.95092773]
[160.68655396 112.92729187]
[145.72152710 111.90365601]
[130.75648499 110.88002014]
[122.63708496 123.49253082]
[129.76443481 136.69104004]
[136.89179993 149.88955688]
[144.01914978 163.08807373]
[150.86694336 169.17021179]
[151.15333557 176.57333374]
[158.05430603 189.89161682]
[164.95527649 203.20988464]
[179.75012207 209.41412354]
[183.98507690 224.88810730]
[174.41146851 237.76156616]
[158.37335205 238.15904236]
[148.17378235 225.77565002]
[151.63700867 210.11087036]
[144.73602295 196.79258728]
[137.83505249 183.47430420]
[130.82063293 170.21542358]
[123.69327545 157.01690674]
[116.56592560 143.81838989]
[109.43856812 130.61988831]
[101.24765015 131.07518005]
[93.45516205 129.44012451]
[86.56935883 125.94761658]
[81.00669098 120.94736481]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 119]
[4 118]
[5 117]
[6 116]
[7 115]
[10 114]
[11 113]
[12 112]
[13 111]
[17 108]
[18 107]
[19 90]
[20 89]
[21 88]
[22 87]
[23 86]
[27 82]
[28 81]
[31 79]
[32 78]
[33 77]
[34 76]
[35 75]
[36 74]
[37 73]
[40 70]
[41 69]
[42 68]
[43 67]
[44 65]
[45 64]
[46 62]
[47 61]
[50 58]
[51 57]
[52 56]
[91 105]
[92 104]
[93 103]
[94 102]
[95 101]
[96 100]
[121 159]
[122 158]
[123 157]
[124 156]
[125 155]
[127 152]
[128 151]
[129 149]
[130 148]
[131 147]
[132 146]
[136 144]
[137 143]
[160 179]
[161 178]
[162 177]
[163 176]
[165 175]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
