%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RETREG1)
} def

/sequence { (\
ACCGCCGCCCCGCCCUCGGCGGCACCCACACCCAGGCGCGCCCGCGCGCGCGCCCGGCCCCGUCCCUGUCUGGAAGCACAGCUGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.022641878 ubox
1 69 0.007712131 ubox
2 22 0.098941923 ubox
2 57 0.041155132 ubox
2 62 0.027473282 ubox
2 68 0.008804359 ubox
2 73 0.049562292 ubox
3 21 0.099722910 ubox
3 56 0.041313436 ubox
3 62 0.023981788 ubox
3 68 0.007115197 ubox
3 72 0.049716179 ubox
3 84 0.094211377 ubox
4 13 0.004661006 ubox
4 20 0.099769627 ubox
4 23 0.992287278 ubox
4 55 0.008201012 ubox
4 58 0.041121171 ubox
4 61 0.015068546 ubox
4 77 0.007711103 ubox
4 82 0.011556203 ubox
4 83 0.003468259 ubox
5 12 0.004618218 ubox
5 19 0.099769814 ubox
5 22 0.993368692 ubox
5 57 0.041206164 ubox
5 76 0.007671382 ubox
5 81 0.011472320 ubox
6 18 0.099759172 ubox
6 21 0.993371062 ubox
6 56 0.041185057 ubox
6 84 0.003382253 ubox
7 13 0.017449453 ubox
7 17 0.094788900 ubox
7 20 0.993355342 ubox
7 23 0.033590652 ubox
7 55 0.035906131 ubox
7 58 0.016491928 ubox
7 77 0.008760511 ubox
7 82 0.004446877 ubox
8 12 0.018941720 ubox
8 19 0.992448577 ubox
8 22 0.033509289 ubox
8 57 0.016497397 ubox
8 73 0.003379547 ubox
8 76 0.008744366 ubox
8 81 0.004436218 ubox
9 18 0.991100226 ubox
9 19 0.032595758 ubox
9 21 0.033237252 ubox
9 56 0.016429964 ubox
9 72 0.003370742 ubox
10 18 0.044322228 ubox
10 19 0.042728275 ubox
10 22 0.044405892 ubox
11 18 0.052908460 ubox
11 21 0.045094196 ubox
12 17 0.077254835 ubox
12 20 0.046054324 ubox
13 19 0.046073979 ubox
14 18 0.045754043 ubox
16 85 0.005831365 ubox
17 84 0.006238947 ubox
18 83 0.006234508 ubox
19 82 0.006239525 ubox
20 81 0.006227968 ubox
22 77 0.011055236 ubox
23 68 0.005722894 ubox
23 76 0.012032670 ubox
23 84 0.006242731 ubox
24 63 0.079958748 ubox
24 67 0.008444579 ubox
24 69 0.022967949 ubox
24 83 0.005628491 ubox
25 36 0.004565617 ubox
25 57 0.014497320 ubox
25 62 0.087905355 ubox
25 68 0.024479051 ubox
25 73 0.040079501 ubox
26 35 0.009192648 ubox
26 36 0.003284319 ubox
26 56 0.014481683 ubox
26 57 0.011544361 ubox
26 72 0.039192208 ubox
26 73 0.268027895 ubox
27 35 0.008640123 ubox
27 56 0.011618295 ubox
27 68 0.023478871 ubox
27 72 0.268773063 ubox
27 84 0.063293567 ubox
28 63 0.113524099 ubox
28 67 0.023053950 ubox
28 69 0.055105872 ubox
28 71 0.263313997 ubox
28 83 0.046413517 ubox
29 62 0.125229342 ubox
29 68 0.066365545 ubox
29 72 0.014929322 ubox
29 84 0.044996203 ubox
30 63 0.087878767 ubox
30 67 0.062130029 ubox
30 69 0.250594773 ubox
30 71 0.014950076 ubox
30 83 0.033120756 ubox
31 57 0.187565276 ubox
31 62 0.096879733 ubox
31 68 0.254800147 ubox
31 73 0.009617867 ubox
32 56 0.184868033 ubox
32 57 0.634056775 ubox
32 72 0.009318881 ubox
32 73 0.064004413 ubox
33 56 0.640037407 ubox
33 68 0.040681650 ubox
33 72 0.064184696 ubox
33 84 0.035153261 ubox
34 67 0.042502035 ubox
34 71 0.062914395 ubox
34 83 0.033218885 ubox
35 54 0.992235168 ubox
35 55 0.026111347 ubox
35 64 0.013692613 ubox
35 65 0.004441706 ubox
35 66 0.041946365 ubox
35 70 0.054010747 ubox
35 82 0.027366552 ubox
36 49 0.009477340 ubox
36 51 0.089706082 ubox
36 53 0.994343735 ubox
36 54 0.018735146 ubox
36 63 0.013977850 ubox
36 64 0.004691591 ubox
36 65 0.040446855 ubox
36 69 0.029110254 ubox
37 48 0.009505221 ubox
37 50 0.090103835 ubox
37 52 0.994509855 ubox
37 62 0.015502486 ubox
37 68 0.028980195 ubox
38 47 0.009596922 ubox
38 49 0.092063264 ubox
38 51 0.994460828 ubox
38 53 0.005420980 ubox
38 61 0.015467214 ubox
38 63 0.044521648 ubox
38 67 0.011067322 ubox
39 46 0.009598944 ubox
39 48 0.092242327 ubox
39 50 0.994444825 ubox
39 52 0.005441522 ubox
39 62 0.045770396 ubox
40 45 0.009359993 ubox
40 47 0.093079249 ubox
40 49 0.994353026 ubox
40 51 0.005442398 ubox
40 58 0.018953641 ubox
40 61 0.044440628 ubox
40 63 0.004487949 ubox
41 46 0.092994677 ubox
41 48 0.992661070 ubox
41 50 0.005435153 ubox
41 57 0.019115802 ubox
41 62 0.004515020 ubox
42 56 0.018655590 ubox
42 57 0.044984962 ubox
43 52 0.010117879 ubox
43 56 0.045189132 ubox
44 51 0.010171348 ubox
44 53 0.016020335 ubox
44 55 0.045018367 ubox
45 50 0.010159613 ubox
45 52 0.016206791 ubox
46 51 0.015794727 ubox
46 53 0.045023285 ubox
47 52 0.044998368 ubox
50 58 0.012275465 ubox
50 63 0.005440205 ubox
50 77 0.005718558 ubox
51 57 0.012306892 ubox
51 62 0.005744089 ubox
51 76 0.005726528 ubox
52 58 0.013216299 ubox
52 61 0.005951014 ubox
52 63 0.005961114 ubox
52 69 0.017937311 ubox
52 77 0.014848844 ubox
52 82 0.015890542 ubox
53 57 0.013149705 ubox
53 62 0.006209425 ubox
53 68 0.018676729 ubox
53 73 0.008442773 ubox
53 76 0.014791222 ubox
53 81 0.015931638 ubox
54 72 0.008478211 ubox
54 73 0.022515914 ubox
55 62 0.050391356 ubox
55 68 0.034914849 ubox
55 72 0.023883247 ubox
55 84 0.720744806 ubox
56 61 0.050883234 ubox
56 64 0.060508193 ubox
56 65 0.055270173 ubox
56 66 0.038835561 ubox
56 67 0.035137236 ubox
56 70 0.026804771 ubox
56 71 0.022357607 ubox
56 83 0.725612758 ubox
57 63 0.061498099 ubox
57 64 0.055032415 ubox
57 65 0.038669292 ubox
57 66 0.035242890 ubox
57 69 0.027293659 ubox
57 70 0.022262731 ubox
57 77 0.042571725 ubox
57 82 0.727295332 ubox
58 62 0.068542110 ubox
58 68 0.030607145 ubox
58 73 0.039194770 ubox
58 76 0.043945899 ubox
58 81 0.726107588 ubox
59 72 0.039243967 ubox
59 73 0.041212465 ubox
60 72 0.040318731 ubox
60 73 0.183773055 ubox
61 68 0.049122874 ubox
61 72 0.184378893 ubox
61 84 0.130292933 ubox
62 67 0.035576869 ubox
62 69 0.010596503 ubox
62 71 0.172665178 ubox
62 77 0.464231248 ubox
62 79 0.117135040 ubox
62 82 0.047411017 ubox
62 83 0.124838725 ubox
63 68 0.009097616 ubox
63 73 0.007972968 ubox
63 74 0.578258190 ubox
63 76 0.438282080 ubox
63 78 0.100371470 ubox
63 81 0.032656174 ubox
63 85 0.214758743 ubox
64 72 0.010041860 ubox
64 73 0.605300585 ubox
64 84 0.231013882 ubox
65 72 0.600629058 ubox
65 73 0.504451782 ubox
66 72 0.508966133 ubox
66 73 0.114635150 ubox
66 76 0.050682970 ubox
66 81 0.350522644 ubox
66 87 0.078461483 ubox
67 72 0.107441597 ubox
67 75 0.050923826 ubox
67 78 0.045628145 ubox
67 80 0.355901664 ubox
67 84 0.060432588 ubox
67 86 0.079463085 ubox
68 77 0.051641498 ubox
68 79 0.356294323 ubox
68 82 0.237730986 ubox
68 83 0.073327587 ubox
69 76 0.047812037 ubox
69 78 0.346615842 ubox
69 81 0.037894724 ubox
69 85 0.024210325 ubox
70 76 0.270526486 ubox
70 81 0.311968805 ubox
70 84 0.024418532 ubox
70 87 0.058888910 ubox
71 75 0.243821263 ubox
71 78 0.071167162 ubox
71 80 0.316298702 ubox
71 84 0.008881226 ubox
71 86 0.060360666 ubox
72 77 0.105171354 ubox
72 79 0.316612741 ubox
72 83 0.016735781 ubox
73 82 0.017501101 ubox
75 83 0.412056942 ubox
76 82 0.425206908 ubox
77 81 0.422177754 ubox
77 84 0.051874306 ubox
78 83 0.044367290 ubox
4 23 0.9500000 lbox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
55 84 0.9500000 lbox
56 83 0.9500000 lbox
57 82 0.9500000 lbox
58 81 0.9500000 lbox
63 74 0.9500000 lbox
64 73 0.9500000 lbox
65 72 0.9500000 lbox
showpage
end
%%EOF
