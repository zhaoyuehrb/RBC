%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGCCGACUGUGAGCCAGGAAGUGCUCUUGGGGAGCCCAGGCCAAGCCAUCCAUUCUUGGGUCCUUUGGAGGGUAGAUAUGGAUUCCCAGUUUCUCCAGCGGCCAGUGCUCCCCCUAGUCCACACAGUGAGACCGUGAAAGCAGAUGCUCCGGGGCACUCCUGGGCAGCUUUUGCUCAGUGG\
) } def
/len { sequence length } bind def

/coor [
[102.98873901 244.32841492]
[88.12002563 250.35343933]
[74.21021271 242.35990906]
[71.92971039 226.47976685]
[83.02793121 214.89489746]
[84.05156708 199.92987061]
[81.36483002 193.02555847]
[85.22257996 184.71878052]
[86.50156403 169.77340698]
[87.78054810 154.82803345]
[89.05953217 139.88265991]
[84.17373657 138.20797729]
[79.53478241 135.93737793]
[69.87118530 147.40972900]
[60.20759201 158.88208008]
[50.54399490 170.35443115]
[54.39993286 185.38478088]
[48.65354919 199.79861450]
[35.51444244 208.05352783]
[20.03487206 206.97532654]
[8.16704559 196.97862244]
[4.47438622 181.90731812]
[10.37679577 167.55667114]
[23.60467720 159.44477844]
[39.07164001 160.69084167]
[48.73523712 149.21849060]
[58.39883423 137.74612427]
[68.06243134 126.27377319]
[59.57330322 108.71791077]
[60.07267380 89.22370148]
[69.44951630 72.12550354]
[60.38596725 60.17342758]
[51.32242203 48.22135162]
[42.25887680 36.26927567]
[33.19532776 24.31719780]
[24.13178253 12.36512089]
[15.06823730 0.41304445]
[-0.33540720 0.59720123]
[-12.74879265 -8.22103310]
[-17.53284264 -22.48906898]
[-13.05158710 -36.66850281]
[-22.11513329 -48.62057877]
[-31.17867851 -60.57265472]
[-40.24222565 -72.52473450]
[-47.73014832 -69.06389618]
[-56.53630829 -68.12657166]
[-65.77595520 -70.17981720]
[-74.41007233 -75.37385559]
[-81.35945129 -83.49484253]
[-85.63198090 -93.95845795]
[-99.67807770 -99.22222900]
[-113.72416687 -104.48600006]
[-127.77026367 -109.74977112]
[-141.81636047 -115.01354218]
[-157.89494324 -111.78691101]
[-168.52397156 -124.27513885]
[-162.76921082 -139.63139343]
[-146.55067444 -142.05850220]
[-136.55258179 -129.05963135]
[-122.50649261 -123.79586792]
[-108.46039581 -118.53209686]
[-94.41430664 -113.26832581]
[-80.36820984 -108.00455475]
[-74.88694000 -113.12370300]
[-78.27259827 -127.73661804]
[-63.92440414 -123.36199951]
[-58.44313431 -128.48114014]
[-62.73609543 -142.85371399]
[-67.02905273 -157.22627258]
[-71.32201385 -171.59883118]
[-75.61497498 -185.97138977]
[-79.90793610 -200.34394836]
[-84.20089722 -214.71650696]
[-88.49385834 -229.08906555]
[-98.05195618 -231.04284668]
[-106.18582916 -236.32357788]
[-111.79286194 -244.16485596]
[-114.13152313 -253.45680237]
[-112.91925812 -262.90304565]
[-108.36589050 -271.20162964]
[-101.13879395 -277.22442627]
[-104.44092560 -291.85644531]
[-107.74305725 -306.48846436]
[-119.25943756 -318.16342163]
[-114.64652252 -333.90042114]
[-98.64968872 -337.51058960]
[-87.72509766 -325.28005981]
[-93.11104584 -309.79058838]
[-89.80890656 -295.15856934]
[-86.50677490 -280.52655029]
[-68.37032318 -271.14340210]
[-62.93063354 -251.15794373]
[-74.12129974 -233.38203430]
[-69.82833862 -219.00947571]
[-65.53537750 -204.63690186]
[-61.24241638 -190.26434326]
[-56.94945526 -175.89178467]
[-52.65649414 -161.51922607]
[-48.36353302 -147.14666748]
[-44.07057190 -132.77410889]
[-20.27417755 -108.50767517]
[-28.29014778 -81.58827972]
[-19.22660255 -69.63619995]
[-10.16305637 -57.68412399]
[-1.09951067 -45.73204803]
[13.76313972 -46.22156143]
[26.21135712 -37.76544571]
[31.35349464 -23.43325233]
[27.02031326 -8.65050125]
[36.08385849 3.30157518]
[45.14740753 15.25365162]
[54.21095276 27.20572853]
[63.27449799 39.15780640]
[72.33804321 51.10988235]
[81.40158844 63.06195831]
[95.83423615 58.85432816]
[110.81735229 60.08377838]
[124.37104797 66.58784485]
[134.70428467 77.50707245]
[148.56248474 71.76681519]
[162.42068481 66.02656555]
[176.22935486 60.16822052]
[189.98753357 54.19220352]
[203.74569702 48.21618652]
[215.86466980 36.36008835]
[230.61228943 44.72334290]
[226.65841675 61.20980072]
[209.72171021 61.97435760]
[195.96354675 67.95037079]
[182.20538330 73.92639160]
[177.31121826 79.48834229]
[168.16093445 79.88475800]
[154.30273438 85.62501526]
[140.44454956 91.36526489]
[141.10159302 104.58028412]
[137.55148315 117.32646179]
[149.80603027 125.97666931]
[162.06057739 134.62687683]
[174.31512451 143.27708435]
[186.56967163 151.92727661]
[198.82421875 160.57748413]
[211.07876587 169.22769165]
[223.33331299 177.87789917]
[228.57945251 178.35266113]
[232.69628906 180.58189392]
[235.20228577 183.83547974]
[235.97840881 187.29803467]
[247.77400208 196.56431580]
[259.56958008 205.83059692]
[268.27362061 208.68104553]
[271.48568726 215.35716248]
[283.12136841 224.82348633]
[294.75701904 234.28981018]
[306.39270020 243.75611877]
[318.02835083 253.22244263]
[334.07012939 253.01875305]
[344.11935425 265.52447510]
[340.46710205 281.14627075]
[325.91513062 287.90045166]
[311.62640381 280.60577393]
[308.56204224 264.85812378]
[296.92639160 255.39179993]
[285.29071045 245.92547607]
[273.65502930 236.45915222]
[262.01937866 226.99284363]
[250.30331421 217.62619019]
[238.50772095 208.35990906]
[226.71212769 199.09362793]
[214.68310547 190.13244629]
[202.42855835 181.48223877]
[190.17401123 172.83203125]
[177.91946411 164.18182373]
[165.66491699 155.53163147]
[153.41036987 146.88142395]
[141.15582275 138.23121643]
[128.90127563 129.58100891]
[117.44224548 137.49783325]
[104.00490570 141.16163635]
[102.72592163 156.10700989]
[101.44693756 171.05238342]
[100.16795349 185.99775696]
[99.01660156 200.95350647]
[97.99296570 215.91853333]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[8 181]
[9 180]
[10 179]
[11 178]
[13 28]
[14 27]
[15 26]
[16 25]
[31 115]
[32 114]
[33 113]
[34 112]
[35 111]
[36 110]
[37 109]
[41 105]
[42 104]
[43 103]
[44 102]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[74 93]
[81 90]
[82 89]
[83 88]
[119 134]
[120 133]
[121 132]
[122 130]
[123 129]
[124 128]
[136 176]
[137 175]
[138 174]
[139 173]
[140 172]
[141 171]
[142 170]
[143 169]
[147 168]
[148 167]
[149 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
