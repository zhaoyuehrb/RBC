%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCUCUGUUUCCGUGGAGACGCUCUCGGCGUCCCCUGUCUCCGCUCCGGCGGAGCCAGGCUUCGGAAUCACUGAGAGAGGAGGGGGCAGCGCCAACGCCCAGCACCUGCCGCCGGUGGGGGACUGACUUCGGCGGAACGGAAAACUGGAGUUGUUUCCCUGGGCCAGUGCACCGAGGCUGAAGUCUAUAAGCCUGGAGAGACCAUCAGCAGUAAUCUGCAAAUGGCUACACUGGUGUGGGUUAAGAACUUAG\
) } def
/len { sequence length } bind def

/coor [
[89.10847473 135.75207520]
[75.06195831 123.53354645]
[62.16496277 131.19302368]
[49.26796341 138.85247803]
[36.37096405 146.51194763]
[23.47396851 154.17141724]
[10.57697010 161.83088684]
[-2.32002759 169.49035645]
[-6.22768641 190.17860413]
[-23.91399193 201.04635620]
[-43.56783295 195.34941101]
[-56.07186890 203.63488770]
[-68.57590485 211.92036438]
[-81.07994080 220.20584106]
[-93.58397675 228.49131775]
[-100.81401825 242.56387329]
[-115.69731903 243.14414978]
[-128.20135498 251.42961121]
[-113.96421051 266.41183472]
[-114.55135345 293.12268066]
[-123.81052399 304.92385864]
[-133.06970215 316.72503662]
[-142.32887268 328.52621460]
[-151.58804321 340.32739258]
[-160.84721375 352.12854004]
[-165.86744690 368.32217407]
[-182.81796265 367.98098755]
[-187.18246460 351.59844971]
[-172.64839172 342.86938477]
[-163.38922119 331.06820679]
[-154.13005066 319.26702881]
[-144.87088013 307.46585083]
[-135.61169434 295.66467285]
[-126.35252380 283.86349487]
[-135.31854248 271.83728027]
[-144.28375244 259.81207275]
[-158.23718262 265.31677246]
[-172.19062805 270.82144165]
[-186.14407349 276.32614136]
[-196.14196777 288.58795166]
[-210.82067871 286.06112671]
[-224.77410889 291.56582642]
[-238.72755432 297.07049561]
[-252.68099976 302.57519531]
[-266.63442993 308.07986450]
[-280.58786011 313.58453369]
[-290.36080933 326.75350952]
[-306.61871338 324.60583496]
[-312.63684082 309.35089111]
[-302.22427368 296.68161011]
[-286.09255981 299.63110352]
[-272.13912964 294.12643433]
[-258.18566895 288.62173462]
[-244.23223877 283.11706543]
[-230.27879333 277.61236572]
[-216.32536316 272.10769653]
[-207.32550049 260.23959351]
[-191.64875793 262.37268066]
[-177.69531250 256.86801147]
[-163.74186707 251.36332703]
[-149.78843689 245.85864258]
[-136.48683167 238.92558289]
[-123.98278809 230.64010620]
[-117.64711761 217.16017151]
[-101.86945343 215.98727417]
[-89.36541748 207.70179749]
[-76.86138153 199.41632080]
[-64.35734558 191.13085938]
[-51.85330582 182.84538269]
[-52.90015030 173.61212158]
[-50.51229477 164.57199097]
[-44.97439575 156.96665955]
[-37.00666428 151.85636902]
[-27.67142105 149.97225952]
[-18.23151398 151.61190796]
[-9.97949505 156.59335327]
[2.91750240 148.93388367]
[15.81449986 141.27442932]
[28.71149826 133.61495972]
[41.60849380 125.95549011]
[54.50549316 118.29602051]
[67.40248871 110.63655090]
[65.71298218 100.36628723]
[67.18270111 90.06227112]
[71.67622375 80.67391968]
[61.43498611 69.71412659]
[51.19375610 58.75432587]
[40.88520432 47.85782242]
[30.50972748 37.02502823]
[10.90953445 32.23661423]
[7.19362068 13.24447155]
[-3.44559860 2.67058873]
[-14.08481789 -7.90329456]
[-30.06797600 -11.57353687]
[-34.62171555 -27.32775879]
[-23.06153679 -38.95936584]
[-7.27956295 -34.50276184]
[-3.51093507 -18.54251480]
[7.12828445 -7.96863079]
[17.76750374 2.60525227]
[27.90689278 1.65328336]
[37.09686661 6.52880716]
[42.20512009 15.84229946]
[41.34252548 26.64954948]
[51.71800232 37.48234558]
[58.59489441 40.13155746]
[62.15355301 48.51309586]
[72.39478302 59.47289276]
[82.63601685 70.43268585]
[83.88054657 61.21405792]
[87.37494659 51.91430283]
[86.08294678 36.97004700]
[84.79095459 22.02579308]
[83.49896240 7.08153820]
[82.20697021 -7.86271667]
[80.91497040 -22.80697060]
[79.62297821 -37.75122452]
[75.77548981 -46.00416565]
[78.40827942 -52.88736343]
[77.30049133 -67.84639740]
[64.03721619 -75.90028381]
[58.07201767 -90.22495270]
[61.69864273 -105.31227112]
[73.52257538 -115.36086273]
[88.99727631 -116.50683594]
[102.17240906 -108.30954742]
[107.98185730 -93.92101288]
[104.19178009 -78.87392426]
[92.25952911 -68.95418549]
[93.36731720 -53.99515152]
[94.56723022 -39.04322052]
[95.85923004 -24.09896469]
[97.15122223 -9.15471077]
[98.44321442 5.78954411]
[99.73520660 20.73379898]
[101.02720642 35.67805481]
[102.31919861 50.62230682]
[109.71570587 51.86396408]
[124.50871277 54.34727097]
[131.90522766 55.58892441]
[138.00627136 41.88574219]
[144.10731506 28.18256187]
[141.85595703 11.93868828]
[154.96229553 2.08192039]
[169.94366455 8.75205421]
[171.38850403 25.08742905]
[157.81050110 34.28361130]
[151.70945740 47.98679352]
[145.60839844 61.68997574]
[152.21163940 75.15835571]
[166.78085327 78.72738647]
[181.35006714 82.29640961]
[195.91928101 85.86544037]
[210.48849487 89.43446350]
[225.73332214 85.20291901]
[236.25410461 95.74627686]
[250.82331848 99.31530762]
[264.22891235 91.38259888]
[278.95333862 95.20964050]
[286.43334961 108.03871155]
[301.00256348 111.60774231]
[315.57177734 115.17676544]
[330.14099121 118.74579620]
[345.38580322 114.51425171]
[355.90658569 125.05760956]
[370.47579956 128.62663269]
[385.04501343 132.19566345]
[399.61422729 135.76469421]
[414.18344116 139.33372498]
[428.75265503 142.90274048]
[443.32186890 146.47177124]
[451.53070068 134.29335022]
[467.92370605 128.69277954]
[486.98071289 134.72563171]
[501.85540771 132.79064941]
[509.93481445 128.59097290]
[516.92510986 130.92460632]
[531.82250977 129.17301941]
[546.71984863 127.42143250]
[561.61724854 125.66983795]
[576.51464844 123.91825104]
[582.51452637 109.77976990]
[594.78948975 100.54826355]
[610.03759766 98.70696259]
[624.15722656 104.75115967]
[633.35021973 117.05500793]
[635.14373779 132.30882263]
[629.05529785 146.40940857]
[616.72265625 155.56378174]
[601.46331787 157.30946350]
[587.38189697 151.17686462]
[578.26623535 138.81562805]
[563.36883545 140.56721497]
[548.47143555 142.31881714]
[533.57409668 144.07040405]
[518.67669678 145.82199097]
[503.79037476 147.66531372]
[488.91571045 149.60031128]
[487.22106934 156.90634155]
[483.83181763 171.51841736]
[482.13717651 178.82446289]
[494.64120483 187.10993958]
[503.49624634 189.23188782]
[507.24737549 195.57530212]
[519.64837646 204.01419067]
[532.04943848 212.45307922]
[544.45043945 220.89198303]
[559.78375244 218.14849854]
[572.23992920 226.88339233]
[574.76092529 241.51828003]
[587.16192627 249.95716858]
[599.56298828 258.39605713]
[611.96398926 266.83496094]
[628.34936523 267.50579834]
[635.72039795 282.15502930]
[626.49438477 295.71276855]
[610.16223145 294.23196411]
[603.52508545 279.23596191]
[591.12408447 270.79708862]
[578.72308350 262.35818481]
[566.32202148 253.91929626]
[551.78308105 256.94488525]
[539.08648682 248.56330872]
[536.01153564 233.29298401]
[523.61053467 224.85409546]
[511.20950317 216.41520691]
[498.80850220 207.97631836]
[486.35574341 199.61396790]
[473.85171509 191.32850647]
[446.42770386 182.80723572]
[439.75283813 161.04098511]
[425.18362427 157.47196960]
[410.61441040 153.90293884]
[396.04519653 150.33390808]
[381.47598267 146.76487732]
[366.90676880 143.19584656]
[352.33755493 139.62681580]
[338.13482666 144.11364746]
[326.57196045 133.31500244]
[312.00274658 129.74598694]
[297.43353271 126.17695618]
[282.86431885 122.60792542]
[270.30157471 130.52711487]
[255.47547913 127.11515808]
[247.25428772 113.88452148]
[232.68507385 110.31549835]
[218.48234558 114.80232239]
[206.91947937 104.00368500]
[192.35025024 100.43465424]
[177.78103638 96.86562347]
[163.21182251 93.29660034]
[148.64260864 89.72756958]
[144.39987183 114.24861908]
[129.41337585 132.10932922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 82]
[3 81]
[4 80]
[5 79]
[6 78]
[7 77]
[8 76]
[11 69]
[12 68]
[13 67]
[14 66]
[15 65]
[17 63]
[18 62]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[36 61]
[37 60]
[38 59]
[39 58]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[85 109]
[86 108]
[87 107]
[88 105]
[89 104]
[91 100]
[92 99]
[93 98]
[111 137]
[112 136]
[113 135]
[114 134]
[115 133]
[116 132]
[117 131]
[119 130]
[120 129]
[140 149]
[141 148]
[142 147]
[150 252]
[151 251]
[152 250]
[153 249]
[154 248]
[156 246]
[157 245]
[160 242]
[161 241]
[162 240]
[163 239]
[165 237]
[166 236]
[167 235]
[168 234]
[169 233]
[170 232]
[171 231]
[174 198]
[175 197]
[177 196]
[178 195]
[179 194]
[180 193]
[181 192]
[201 229]
[202 228]
[204 227]
[205 226]
[206 225]
[207 224]
[210 221]
[211 220]
[212 219]
[213 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
