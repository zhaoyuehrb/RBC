%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCGGGUGAGGGGCCUGACGGCAGAGUCGGUCCAGAACUGCCCGGACAGCGACGCACAGCGAGGAGCCAAAAUGGAAGAGGGUGCAAGUCCCCUCCUGGGGCCCCAGACGCCCCCUCCUUUCUUGCUGCCUGGAGCAGGGGCAGUGCUGUUAGUGGCUACUCCUGGUGUGAACAGCCCAUCCUGGCCACCUUCCACAGGAAACCUGACCUGAAGGACAGAAGAGGAAGGAAGCAGGCUUUGCCACAA\
) } def
/len { sequence length } bind def

/coor [
[405.91305542 650.53350830]
[399.96258545 655.86785889]
[392.74615479 659.22192383]
[384.89877319 660.32214355]
[380.78845215 674.74804688]
[376.67816162 689.17388916]
[372.56787109 703.59973145]
[368.45758057 718.02557373]
[374.97119141 732.68688965]
[367.44216919 746.85351562]
[351.64617920 749.65808105]
[339.70050049 738.94915771]
[340.76885986 722.94177246]
[354.03170776 713.91528320]
[358.14199829 699.48944092]
[362.25231934 685.06359863]
[366.36260986 670.63769531]
[370.47290039 656.21185303]
[357.97589111 638.17376709]
[363.06356812 616.54125977]
[382.77841187 605.69561768]
[385.78594971 591.00024414]
[388.79345703 576.30480957]
[391.80096436 561.60943604]
[394.80847168 546.91400146]
[397.81600952 532.21862793]
[400.82351685 517.52319336]
[403.83102417 502.82781982]
[406.83856201 488.13241577]
[405.42126465 473.19952393]
[399.70288086 459.33227539]
[394.26101685 454.35916138]
[394.00103760 445.25384521]
[388.45806885 431.31558228]
[382.91510010 417.37728882]
[377.37213135 403.43902588]
[363.30508423 391.20227051]
[363.63897705 374.15057373]
[352.67083740 363.91827393]
[341.70269775 353.68600464]
[330.73452759 343.45370483]
[319.76638794 333.22143555]
[308.79821777 322.98916626]
[297.83007812 312.75686646]
[288.08792114 315.85345459]
[277.85778809 314.63000488]
[268.98278809 309.23971558]
[263.08972168 300.59259033]
[261.29086304 290.20223999]
[263.97467041 279.92123413]
[253.40158081 269.28125000]
[238.55262756 269.49121094]
[227.67843628 258.85134888]
[227.55886841 243.27497864]
[216.98576355 232.63497925]
[202.13681030 232.84495544]
[191.26261902 222.20509338]
[191.14305115 206.62872314]
[180.56996155 195.98870850]
[169.99687195 185.34870911]
[159.42378235 174.70870972]
[148.85067749 164.06871033]
[138.27758789 153.42869568]
[127.70449829 142.78869629]
[117.13140106 132.14869690]
[106.55831146 121.50868225]
[95.98521423 110.86868286]
[82.94777679 103.45077515]
[68.39946747 99.79747009]
[53.85115814 96.14416504]
[37.01637268 98.15074921]
[30.42787361 82.52935791]
[43.61489868 71.87390137]
[57.50446701 81.59585571]
[72.05278015 85.24916077]
[86.60108948 88.90246582]
[89.80641174 82.12191772]
[96.21706390 68.56081390]
[99.42239380 61.78026199]
[87.36547852 52.85665131]
[75.30856323 43.93304062]
[63.25164795 35.00943375]
[51.19473267 26.08582306]
[36.43638611 30.87860298]
[21.68994713 26.04929733]
[12.62572765 13.45487118]
[12.72910309 -2.06185961]
[21.96032524 -14.53439617]
[36.76979828 -19.16679382]
[51.46297836 -14.17780209]
[60.39004135 -1.48578835]
[60.11834335 14.02890778]
[72.17526245 22.95251846]
[84.23217010 31.87612724]
[96.28908539 40.79973602]
[108.34600067 49.72334671]
[114.14170837 44.96311188]
[125.73310852 35.44264221]
[131.52880859 30.68240547]
[125.11815643 17.12130165]
[118.70750427 3.56019878]
[112.29685211 -10.00090504]
[105.88619995 -23.56200790]
[90.71548462 -27.35457611]
[81.57376099 -40.04168701]
[82.77745056 -55.63287354]
[93.75822449 -66.76645660]
[109.33128357 -68.18550110]
[122.14351654 -59.21996689]
[126.14537811 -44.10311890]
[119.44730377 -29.97266197]
[125.85795593 -16.41155815]
[132.26861572 -2.85045433]
[138.67926025 10.71064949]
[145.08992004 24.27175331]
[149.10766602 47.57223511]
[145.75827026 68.53240967]
[136.33551025 85.20198059]
[122.59776306 96.09576416]
[106.62522125 100.29558563]
[117.19831085 110.93559265]
[127.77140808 121.57559967]
[138.34449768 132.21560669]
[148.91758728 142.85560608]
[159.49069214 153.49560547]
[170.06378174 164.13562012]
[180.63687134 174.77561951]
[191.20996094 185.41561890]
[201.78306580 196.05563354]
[217.35836792 196.27345276]
[227.92942810 207.21453857]
[227.62577820 222.06188965]
[238.19886780 232.70188904]
[253.77418518 232.91970825]
[264.34521484 243.86080933]
[264.04159546 258.70812988]
[274.61468506 269.34814453]
[294.70556641 268.37265015]
[308.79022217 282.30053711]
[308.06234741 301.78872681]
[319.03051758 312.02099609]
[329.99865723 322.25329590]
[340.96679688 332.48556519]
[351.93496704 342.71783447]
[362.90310669 352.95013428]
[373.87127686 363.18240356]
[388.84143066 364.12805176]
[401.00997925 355.35726929]
[413.17852783 346.58648682]
[425.34704590 337.81570435]
[437.51559448 329.04492188]
[449.68414307 320.27413940]
[448.70910645 306.53903198]
[454.59558105 294.21078491]
[465.71240234 286.45776367]
[479.09988403 285.21389771]
[491.25759888 290.69717407]
[503.53579712 282.08062744]
[515.81402588 273.46405029]
[528.09228516 264.84750366]
[534.51281738 249.75747681]
[550.82196045 248.04170227]
[560.24224854 261.46520996]
[553.08288574 276.21902466]
[536.70880127 277.12573242]
[524.43060303 285.74227905]
[512.15234375 294.35885620]
[499.87414551 302.97540283]
[500.12557983 319.40060425]
[490.43276978 332.86880493]
[474.46096802 337.94744873]
[458.45492554 332.44265747]
[446.28637695 341.21343994]
[434.11782837 349.98422241]
[421.94931030 358.75503540]
[409.78076172 367.52581787]
[397.61221313 376.29660034]
[412.24517822 372.99859619]
[424.54962158 381.57766724]
[426.51467896 396.44839478]
[416.86099243 407.92910767]
[401.87365723 408.54522705]
[391.31039429 397.89605713]
[396.85336304 411.83432007]
[402.39633179 425.77258301]
[407.93933105 439.71087646]
[413.57012939 453.61389160]
[419.28851318 467.48110962]
[435.41558838 459.90298462]
[457.57244873 467.21142578]
[470.06414795 475.51544189]
[482.55587769 483.81945801]
[495.04760742 492.12350464]
[507.53933716 500.42752075]
[520.03106689 508.73153687]
[540.53106689 498.27444458]
[566.21435547 511.74426270]
[580.11737061 517.37506104]
[594.02038574 523.00585938]
[607.92340088 528.63665771]
[624.87390137 528.97827148]
[629.23797607 545.36090088]
[614.70367432 554.08959961]
[602.29260254 542.53967285]
[588.38958740 536.90887451]
[574.48657227 531.27807617]
[560.58355713 525.64727783]
[556.67083740 532.04577637]
[548.84545898 544.84277344]
[544.93280029 551.24127197]
[556.28027344 561.05120850]
[567.62780762 570.86108398]
[583.66845703 571.13702393]
[593.33935547 583.93756104]
[589.22180176 599.44317627]
[574.47442627 605.75933838]
[560.41015625 598.04083252]
[557.81787109 582.20861816]
[546.47039795 572.39868164]
[535.12286377 562.58880615]
[522.67828369 558.13299561]
[513.64337158 549.95819092]
[508.88900757 539.86682129]
[508.47573853 529.74261475]
[511.72702026 521.22326660]
[499.23532104 512.91925049]
[486.74359131 504.61523438]
[474.25186157 496.31118774]
[461.76013184 488.00717163]
[449.26840210 479.70315552]
[442.33480835 482.56234741]
[452.05850220 493.98379517]
[444.20080566 506.76098633]
[429.62081909 503.23623657]
[428.46755981 488.28073120]
[421.53396606 491.13992310]
[418.52642822 505.83532715]
[415.51892090 520.53070068]
[412.51141357 535.22613525]
[409.50387573 549.92150879]
[406.49636841 564.61694336]
[403.48886108 579.31231689]
[400.48132324 594.00775146]
[397.47381592 608.70312500]
[404.06497192 613.57031250]
[408.93109131 620.12036133]
[411.66537476 627.77264404]
[412.04879761 635.85601807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[21 244]
[22 243]
[23 242]
[24 241]
[25 240]
[26 239]
[27 238]
[28 237]
[29 236]
[30 188]
[31 187]
[33 186]
[34 185]
[35 184]
[36 183]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[50 137]
[51 136]
[54 133]
[55 132]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 76]
[69 75]
[70 74]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[99 115]
[100 114]
[101 113]
[102 112]
[103 111]
[147 177]
[148 176]
[149 175]
[150 174]
[151 173]
[152 172]
[157 168]
[158 167]
[159 166]
[160 165]
[190 230]
[191 229]
[192 228]
[193 227]
[194 226]
[195 225]
[197 207]
[198 206]
[199 205]
[200 204]
[210 220]
[211 219]
[212 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
