%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SAPCD1)
} def

/sequence { (\
GGAGGGACCAGCCCGGGCUGCACCAGUGGGAGUGGCUCCACCCUUCCCACCUCAGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.065688263 ubox
1 13 0.021036461 ubox
1 14 0.056508438 ubox
1 19 0.006431413 ubox
1 24 0.023271509 ubox
1 39 0.006267497 ubox
1 42 0.015592277 ubox
1 43 0.085240461 ubox
1 46 0.048767059 ubox
1 47 0.056371223 ubox
1 48 0.014213066 ubox
1 51 0.106229393 ubox
1 52 0.017882822 ubox
1 53 0.040564318 ubox
1 59 0.057486199 ubox
2 8 0.065563890 ubox
2 12 0.021143041 ubox
2 13 0.052028166 ubox
2 18 0.006780370 ubox
2 23 0.023190779 ubox
2 38 0.006265149 ubox
2 41 0.015654671 ubox
2 42 0.085384358 ubox
2 45 0.049631702 ubox
2 46 0.056762660 ubox
2 47 0.012969777 ubox
2 50 0.105569174 ubox
2 51 0.023674287 ubox
2 52 0.028654799 ubox
2 53 0.328386033 ubox
2 58 0.057795296 ubox
3 37 0.006212324 ubox
3 44 0.056147036 ubox
3 45 0.051721315 ubox
3 52 0.329125367 ubox
4 13 0.117429733 ubox
4 14 0.879226287 ubox
4 19 0.005165204 ubox
4 24 0.161755336 ubox
4 36 0.006126901 ubox
4 38 0.004041628 ubox
4 39 0.012047633 ubox
4 43 0.061162809 ubox
4 44 0.045316235 ubox
4 48 0.107138407 ubox
4 51 0.326506426 ubox
4 52 0.003540021 ubox
4 53 0.020388864 ubox
4 59 0.006165450 ubox
5 12 0.119739524 ubox
5 13 0.880408161 ubox
5 14 0.112778683 ubox
5 18 0.005252970 ubox
5 19 0.018820117 ubox
5 23 0.162199036 ubox
5 24 0.360937206 ubox
5 37 0.004172374 ubox
5 38 0.012044032 ubox
5 39 0.087169256 ubox
5 42 0.060600816 ubox
5 43 0.044049193 ubox
5 47 0.107322356 ubox
5 50 0.061700717 ubox
5 51 0.004267768 ubox
5 52 0.018225249 ubox
5 58 0.005271909 ubox
5 59 0.003758396 ubox
6 12 0.878683749 ubox
6 13 0.112709469 ubox
6 18 0.019347186 ubox
6 23 0.362000906 ubox
6 36 0.006224581 ubox
6 37 0.010654033 ubox
6 38 0.087821846 ubox
6 41 0.059903322 ubox
6 42 0.043475177 ubox
6 46 0.107371657 ubox
6 50 0.003440993 ubox
6 51 0.018209729 ubox
6 53 0.005116220 ubox
6 58 0.003785929 ubox
7 27 0.005867768 ubox
7 37 0.088691648 ubox
7 45 0.104168708 ubox
7 52 0.004730623 ubox
8 16 0.028911598 ubox
8 17 0.018129617 ubox
8 26 0.006432820 ubox
8 35 0.095053997 ubox
9 15 0.029486982 ubox
9 16 0.018198901 ubox
9 20 0.402326658 ubox
9 34 0.095079482 ubox
10 19 0.403046503 ubox
10 33 0.094398200 ubox
10 37 0.052212140 ubox
10 44 0.074164211 ubox
11 18 0.403184346 ubox
11 33 0.008154487 ubox
11 36 0.053859226 ubox
11 43 0.078022281 ubox
11 44 0.003638124 ubox
12 17 0.401876604 ubox
12 30 0.077315680 ubox
12 32 0.013484212 ubox
12 35 0.053628032 ubox
13 29 0.077387963 ubox
13 30 0.055675459 ubox
13 34 0.053144855 ubox
13 35 0.005043158 ubox
14 28 0.077220828 ubox
14 29 0.055784374 ubox
14 34 0.007024833 ubox
15 24 0.103066685 ubox
15 27 0.034171194 ubox
15 33 0.007916596 ubox
15 38 0.092720408 ubox
15 39 0.060614047 ubox
15 53 0.010218751 ubox
15 59 0.102097519 ubox
16 23 0.103213625 ubox
16 24 0.035193240 ubox
16 37 0.093790408 ubox
16 38 0.060469901 ubox
16 52 0.010175648 ubox
16 58 0.089284786 ubox
16 59 0.878332095 ubox
17 23 0.035196470 ubox
17 27 0.083530514 ubox
17 33 0.009650302 ubox
17 36 0.111787426 ubox
17 37 0.006734808 ubox
17 51 0.010175910 ubox
17 58 0.890031952 ubox
18 26 0.089535308 ubox
18 29 0.050006327 ubox
18 30 0.004013446 ubox
18 32 0.009725997 ubox
18 35 0.112001366 ubox
18 55 0.079000170 ubox
18 57 0.891393932 ubox
19 25 0.089639837 ubox
19 28 0.049883649 ubox
19 29 0.003490608 ubox
19 31 0.009515089 ubox
19 34 0.111554434 ubox
19 54 0.083923040 ubox
19 56 0.884398529 ubox
20 24 0.088560440 ubox
20 27 0.050241388 ubox
20 33 0.111752250 ubox
20 53 0.088951438 ubox
20 58 0.013054745 ubox
21 26 0.051139444 ubox
21 28 0.005967212 ubox
21 32 0.111896378 ubox
21 57 0.013137330 ubox
22 27 0.005046287 ubox
23 29 0.042769292 ubox
23 30 0.103397712 ubox
24 28 0.042506891 ubox
24 29 0.103413009 ubox
25 52 0.147701068 ubox
26 41 0.023557657 ubox
26 50 0.975679410 ubox
26 51 0.108782612 ubox
27 40 0.023619193 ubox
27 49 0.985869227 ubox
28 39 0.022860756 ubox
28 44 0.007823099 ubox
28 47 0.025742886 ubox
28 48 0.986925877 ubox
28 53 0.003248401 ubox
29 38 0.022005771 ubox
29 39 0.011387733 ubox
29 43 0.008668214 ubox
29 46 0.032142687 ubox
29 47 0.986746610 ubox
29 52 0.003249214 ubox
30 36 0.005173814 ubox
30 37 0.017523930 ubox
30 38 0.013006713 ubox
30 42 0.008804031 ubox
30 45 0.037422487 ubox
30 46 0.986541060 ubox
30 51 0.003251554 ubox
31 37 0.014385308 ubox
31 44 0.205076381 ubox
31 45 0.963856427 ubox
32 36 0.014388199 ubox
32 41 0.203062470 ubox
32 43 0.287405523 ubox
32 44 0.865132173 ubox
32 50 0.003280078 ubox
33 40 0.207163175 ubox
33 49 0.003299842 ubox
34 39 0.206731318 ubox
34 42 0.829347644 ubox
34 43 0.491145575 ubox
34 44 0.012224913 ubox
34 48 0.003298131 ubox
35 41 0.827773289 ubox
35 42 0.487135298 ubox
35 43 0.013803234 ubox
35 47 0.003274580 ubox
43 57 0.003690568 ubox
44 56 0.004255673 ubox
44 57 0.027587079 ubox
45 55 0.003828753 ubox
45 56 0.035067232 ubox
46 55 0.035788331 ubox
51 57 0.025860805 ubox
52 56 0.023619092 ubox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
16 59 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
26 50 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
showpage
end
%%EOF
