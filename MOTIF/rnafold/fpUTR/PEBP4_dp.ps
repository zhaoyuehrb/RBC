%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PEBP4)
} def

/sequence { (\
CCCAAAGUACUUGUGUCCGGGUGGUGGACUGGAUUAGCUGCGGAGCCCUGGAAGCUGCCUGUCCUUCUCCCUGUGCUUAACCAGAGGUGCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.009608889 ubox
1 87 0.011481871 ubox
2 20 0.009742934 ubox
2 24 0.004132657 ubox
2 27 0.005847447 ubox
2 43 0.004924910 ubox
2 86 0.011558502 ubox
2 87 0.018588561 ubox
3 13 0.050441451 ubox
3 15 0.014793183 ubox
3 19 0.009738039 ubox
3 23 0.004143975 ubox
3 26 0.005879099 ubox
3 42 0.004947483 ubox
3 86 0.018663271 ubox
3 89 0.007819916 ubox
4 12 0.050348836 ubox
4 14 0.013886435 ubox
4 22 0.003382814 ubox
4 25 0.005611253 ubox
4 78 0.006591505 ubox
4 88 0.006973056 ubox
5 11 0.047135093 ubox
5 12 0.010125575 ubox
5 77 0.005067093 ubox
5 78 0.116712530 ubox
6 11 0.009506324 ubox
6 12 0.007893495 ubox
6 39 0.007832751 ubox
6 77 0.124855207 ubox
7 11 0.005924660 ubox
7 38 0.008032706 ubox
7 41 0.035778974 ubox
7 76 0.125989078 ubox
7 81 0.010554677 ubox
7 90 0.977680817 ubox
8 15 0.004494751 ubox
8 23 0.010227055 ubox
8 37 0.007464792 ubox
8 40 0.035779161 ubox
8 75 0.125951321 ubox
8 80 0.009979154 ubox
8 89 0.979392688 ubox
9 14 0.004284652 ubox
9 16 0.043036570 ubox
9 22 0.013964807 ubox
9 39 0.035046109 ubox
9 74 0.125725903 ubox
9 88 0.979706487 ubox
10 15 0.046603107 ubox
10 21 0.014460776 ubox
10 37 0.024471871 ubox
10 73 0.124462844 ubox
10 84 0.010826045 ubox
10 86 0.034478798 ubox
10 87 0.979613033 ubox
11 20 0.014455782 ubox
11 36 0.023507430 ubox
11 37 0.019859529 ubox
11 80 0.043127249 ubox
11 83 0.012449661 ubox
11 84 0.027338456 ubox
11 85 0.045524788 ubox
11 86 0.976279775 ubox
12 19 0.014692351 ubox
12 36 0.021749864 ubox
12 79 0.084564683 ubox
12 83 0.069010748 ubox
12 84 0.045141159 ubox
12 85 0.958602518 ubox
12 86 0.007339325 ubox
13 18 0.038186980 ubox
13 35 0.019632391 ubox
13 38 0.008079341 ubox
13 72 0.016761197 ubox
13 76 0.064682567 ubox
13 78 0.092585982 ubox
13 81 0.158139616 ubox
13 82 0.071790590 ubox
13 90 0.006171260 ubox
14 36 0.003258631 ubox
14 37 0.007823202 ubox
14 75 0.064246225 ubox
14 79 0.021069723 ubox
14 80 0.158346117 ubox
14 83 0.923360597 ubox
14 89 0.006128955 ubox
15 29 0.015112889 ubox
15 34 0.036512822 ubox
15 72 0.017502110 ubox
15 74 0.040906155 ubox
15 76 0.424045156 ubox
15 78 0.021479011 ubox
15 81 0.130913040 ubox
15 82 0.860253769 ubox
15 88 0.004654170 ubox
15 90 0.003337293 ubox
16 28 0.016439434 ubox
16 33 0.038848559 ubox
16 73 0.063635140 ubox
16 75 0.472523474 ubox
16 80 0.171669941 ubox
16 85 0.011650757 ubox
16 89 0.003219956 ubox
17 24 0.004749685 ubox
17 27 0.016691778 ubox
17 32 0.039086472 ubox
17 84 0.012340011 ubox
17 87 0.006474245 ubox
18 23 0.004788395 ubox
18 26 0.016691737 ubox
18 31 0.039084413 ubox
18 73 0.585854766 ubox
18 75 0.090084329 ubox
18 86 0.006477175 ubox
19 25 0.015764235 ubox
19 30 0.038843300 ubox
19 69 0.008272700 ubox
19 70 0.044557007 ubox
19 71 0.850669813 ubox
19 72 0.510827198 ubox
19 74 0.015497187 ubox
19 77 0.021034268 ubox
19 78 0.070945739 ubox
19 82 0.003350667 ubox
19 92 0.021897570 ubox
20 29 0.038662870 ubox
20 30 0.004008846 ubox
20 68 0.008350438 ubox
20 69 0.044654887 ubox
20 70 0.853747862 ubox
20 71 0.509251712 ubox
20 72 0.007420143 ubox
20 76 0.020375046 ubox
20 77 0.079614785 ubox
20 81 0.003433019 ubox
20 82 0.003550917 ubox
20 91 0.022059454 ubox
21 29 0.005705460 ubox
21 67 0.009364625 ubox
21 68 0.041902024 ubox
21 69 0.854076315 ubox
21 70 0.506366461 ubox
21 71 0.008008116 ubox
21 74 0.003807710 ubox
21 76 0.080356156 ubox
21 81 0.003784161 ubox
21 90 0.022051862 ubox
22 28 0.006929724 ubox
22 73 0.010078120 ubox
22 75 0.079347170 ubox
22 80 0.003678103 ubox
22 89 0.021473271 ubox
23 65 0.004174171 ubox
23 66 0.040254169 ubox
23 67 0.870772743 ubox
23 68 0.388344306 ubox
23 69 0.151305703 ubox
23 70 0.029738294 ubox
23 71 0.048023029 ubox
23 72 0.036605674 ubox
23 74 0.028433105 ubox
23 77 0.004243621 ubox
23 88 0.008325015 ubox
23 91 0.007341455 ubox
24 65 0.044546118 ubox
24 66 0.746117596 ubox
24 67 0.405621850 ubox
24 68 0.118884064 ubox
24 69 0.029900003 ubox
24 70 0.047983033 ubox
24 71 0.039174998 ubox
24 76 0.004447693 ubox
24 90 0.007415126 ubox
25 75 0.004425641 ubox
25 89 0.007222505 ubox
26 64 0.996265681 ubox
26 65 0.019983881 ubox
26 67 0.012492782 ubox
26 68 0.042687641 ubox
26 69 0.012222232 ubox
26 70 0.044947907 ubox
26 71 0.009607703 ubox
27 63 0.996767572 ubox
27 64 0.014673206 ubox
27 66 0.011777198 ubox
27 67 0.044833563 ubox
27 68 0.007269646 ubox
27 69 0.045068112 ubox
27 70 0.009187705 ubox
28 62 0.996703137 ubox
28 65 0.010799305 ubox
28 66 0.044472879 ubox
28 68 0.043285216 ubox
29 61 0.990671035 ubox
29 84 0.009544118 ubox
30 61 0.012344396 ubox
30 83 0.014085443 ubox
31 59 0.987608579 ubox
31 60 0.086518513 ubox
31 64 0.066159452 ubox
31 82 0.015545702 ubox
32 58 0.987375923 ubox
32 59 0.091997546 ubox
32 63 0.066227557 ubox
32 81 0.015532485 ubox
33 62 0.066185279 ubox
34 61 0.065301014 ubox
34 80 0.008617900 ubox
35 57 0.862199615 ubox
35 61 0.004387127 ubox
35 79 0.008752649 ubox
36 56 0.988135105 ubox
36 60 0.006048895 ubox
36 77 0.016135780 ubox
36 78 0.006413104 ubox
37 46 0.006841539 ubox
37 55 0.998793858 ubox
37 58 0.015522557 ubox
37 59 0.005457553 ubox
37 76 0.017581002 ubox
38 45 0.006878629 ubox
38 51 0.005992919 ubox
38 54 0.998732837 ubox
38 57 0.015773079 ubox
38 75 0.017560534 ubox
39 44 0.006840542 ubox
39 50 0.006420373 ubox
39 53 0.983042436 ubox
39 73 0.006017098 ubox
40 46 0.027178524 ubox
40 49 0.012970054 ubox
40 55 0.015629034 ubox
40 58 0.005262177 ubox
40 72 0.006877496 ubox
40 74 0.009247416 ubox
41 45 0.026990858 ubox
41 50 0.975115077 ubox
41 54 0.015623684 ubox
41 57 0.005302896 ubox
41 73 0.009525180 ubox
42 48 0.158511568 ubox
42 49 0.977635854 ubox
42 56 0.004825575 ubox
42 70 0.017214023 ubox
42 72 0.004136539 ubox
42 91 0.036635816 ubox
42 92 0.008932941 ubox
43 47 0.156897135 ubox
43 48 0.974553842 ubox
43 55 0.004675543 ubox
43 69 0.017367482 ubox
43 71 0.003940038 ubox
43 90 0.036546542 ubox
43 91 0.008945097 ubox
44 56 0.003314050 ubox
44 68 0.017460067 ubox
45 55 0.003640239 ubox
45 67 0.017405111 ubox
45 88 0.036518172 ubox
46 54 0.003685825 ubox
46 87 0.038242766 ubox
47 86 0.038244335 ubox
48 84 0.038511630 ubox
49 83 0.038523120 ubox
50 64 0.017631353 ubox
50 82 0.038541847 ubox
51 63 0.017633459 ubox
51 81 0.038429293 ubox
52 62 0.016101779 ubox
52 78 0.032684385 ubox
53 60 0.013155488 ubox
53 77 0.038311503 ubox
54 59 0.013113244 ubox
54 62 0.005172454 ubox
54 76 0.038466113 ubox
55 61 0.007167144 ubox
55 75 0.038397103 ubox
57 74 0.016685011 ubox
58 73 0.017245515 ubox
69 87 0.009501580 ubox
70 86 0.009563628 ubox
70 87 0.024963408 ubox
71 84 0.030020624 ubox
71 86 0.025737425 ubox
72 79 0.134369267 ubox
72 83 0.044623245 ubox
72 85 0.031434117 ubox
73 78 0.137768672 ubox
73 81 0.592476609 ubox
73 82 0.046659568 ubox
73 90 0.134080201 ubox
74 80 0.593237455 ubox
74 83 0.039309582 ubox
74 89 0.134254301 ubox
75 82 0.042723450 ubox
75 88 0.135122711 ubox
75 90 0.016713664 ubox
76 84 0.026510044 ubox
76 86 0.019137302 ubox
76 87 0.135224212 ubox
76 89 0.016752574 ubox
77 83 0.025786576 ubox
77 84 0.011391080 ubox
77 85 0.022004020 ubox
77 86 0.134612958 ubox
78 83 0.011551655 ubox
78 84 0.022799014 ubox
78 85 0.123095972 ubox
78 89 0.005291389 ubox
79 88 0.005675552 ubox
80 88 0.111120134 ubox
81 87 0.114802773 ubox
82 86 0.114021154 ubox
82 89 0.016557155 ubox
83 88 0.016013514 ubox
86 92 0.013935044 ubox
87 91 0.013833317 ubox
7 90 0.9500000 lbox
8 89 0.9500000 lbox
9 88 0.9500000 lbox
10 87 0.9500000 lbox
11 86 0.9500000 lbox
12 85 0.9500000 lbox
14 83 0.9500000 lbox
15 82 0.9500000 lbox
19 71 0.9500000 lbox
20 70 0.9500000 lbox
21 69 0.9500000 lbox
23 67 0.9500000 lbox
24 66 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
31 59 0.9500000 lbox
32 58 0.9500000 lbox
35 57 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
39 53 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
73 81 0.9500000 lbox
74 80 0.9500000 lbox
showpage
end
%%EOF
