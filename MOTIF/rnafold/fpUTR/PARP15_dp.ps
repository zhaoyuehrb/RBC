%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PARP15)
} def

/sequence { (\
AGAGAAAAGAAGUUCGAGGCACAAGCCUGUUGGGUGGGGCGCAACUGCAGUCCCAGCGAGCUGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 62 0.007884546 ubox
2 14 0.004951787 ubox
2 15 0.057971951 ubox
2 61 0.007901525 ubox
3 13 0.005378955 ubox
3 14 0.057778097 ubox
3 62 0.007664594 ubox
4 13 0.054988692 ubox
4 14 0.003983597 ubox
4 15 0.086237546 ubox
4 61 0.006824249 ubox
5 13 0.004681167 ubox
5 14 0.086088530 ubox
6 13 0.076294989 ubox
6 14 0.004709861 ubox
7 13 0.005447924 ubox
7 14 0.007343743 ubox
8 13 0.008378728 ubox
8 62 0.012363669 ubox
9 15 0.022159886 ubox
9 61 0.008992017 ubox
10 14 0.019308306 ubox
11 62 0.956953427 ubox
12 20 0.008877353 ubox
12 57 0.003162298 ubox
12 61 0.986849868 ubox
13 19 0.008790992 ubox
13 34 0.007802363 ubox
13 60 0.986517255 ubox
13 65 0.040725292 ubox
14 18 0.006473068 ubox
14 33 0.012773149 ubox
14 59 0.986385533 ubox
14 64 0.050248381 ubox
14 66 0.005621163 ubox
15 29 0.010151326 ubox
15 32 0.014980486 ubox
15 58 0.986673699 ubox
15 63 0.051155656 ubox
15 65 0.009113635 ubox
16 28 0.014957914 ubox
16 31 0.016346714 ubox
16 57 0.897420988 ubox
16 62 0.041387347 ubox
17 28 0.971479202 ubox
17 30 0.012298206 ubox
17 31 0.008357791 ubox
18 27 0.997797985 ubox
18 31 0.011397835 ubox
18 53 0.009210125 ubox
18 54 0.013025120 ubox
18 62 0.006519763 ubox
19 26 0.997993722 ubox
19 30 0.014521748 ubox
19 35 0.009063261 ubox
19 52 0.009236182 ubox
19 53 0.013006040 ubox
19 57 0.009238732 ubox
19 61 0.006639166 ubox
20 25 0.996574884 ubox
20 29 0.014773930 ubox
20 32 0.007275451 ubox
20 34 0.010375762 ubox
20 56 0.010083552 ubox
20 60 0.006637263 ubox
21 28 0.013311078 ubox
21 30 0.008998407 ubox
21 31 0.005209198 ubox
21 51 0.015336686 ubox
22 29 0.010710957 ubox
22 32 0.015493019 ubox
22 34 0.003540935 ubox
22 50 0.015507164 ubox
22 63 0.013617447 ubox
23 28 0.009656191 ubox
23 31 0.015512833 ubox
23 62 0.009651125 ubox
24 30 0.015125008 ubox
24 62 0.027572157 ubox
25 35 0.027628528 ubox
25 48 0.015797088 ubox
25 61 0.030053427 ubox
26 33 0.031052453 ubox
26 34 0.034496758 ubox
26 47 0.015808242 ubox
26 60 0.029987735 ubox
26 66 0.004840819 ubox
27 32 0.031709544 ubox
27 33 0.034864557 ubox
27 34 0.010246274 ubox
27 65 0.005067946 ubox
28 32 0.031862756 ubox
28 33 0.019473196 ubox
28 58 0.032503148 ubox
28 64 0.004865533 ubox
29 35 0.011420430 ubox
29 45 0.018901211 ubox
29 57 0.354324995 ubox
29 61 0.142278206 ubox
30 34 0.017163215 ubox
30 44 0.019019103 ubox
30 56 0.365173172 ubox
30 59 0.037911824 ubox
30 60 0.141178281 ubox
30 64 0.006169677 ubox
30 65 0.010863164 ubox
31 43 0.019072820 ubox
31 55 0.366255816 ubox
31 58 0.042344494 ubox
31 59 0.137559804 ubox
31 63 0.006610446 ubox
31 64 0.013338575 ubox
32 42 0.019087291 ubox
32 52 0.003395502 ubox
32 53 0.005830612 ubox
32 54 0.366510294 ubox
32 57 0.091678066 ubox
32 62 0.007073211 ubox
33 51 0.003658951 ubox
33 52 0.007065586 ubox
33 53 0.366045373 ubox
33 54 0.004800505 ubox
33 61 0.007107337 ubox
33 62 0.013916756 ubox
34 40 0.019033744 ubox
34 48 0.007170179 ubox
34 51 0.007371964 ubox
34 52 0.365063979 ubox
34 53 0.004716778 ubox
34 57 0.136352935 ubox
34 61 0.014011777 ubox
35 39 0.017807720 ubox
35 43 0.004712498 ubox
35 47 0.011491882 ubox
35 49 0.158223186 ubox
35 50 0.036800595 ubox
35 55 0.837959589 ubox
35 56 0.082116749 ubox
35 60 0.011336358 ubox
36 42 0.004792521 ubox
36 46 0.013050820 ubox
36 48 0.171994298 ubox
36 52 0.006132175 ubox
36 53 0.004737152 ubox
36 54 0.929820748 ubox
37 45 0.013451426 ubox
37 46 0.056724392 ubox
37 51 0.015228142 ubox
37 52 0.005943905 ubox
37 53 0.930206891 ubox
37 54 0.014918330 ubox
38 45 0.059167922 ubox
38 46 0.168054032 ubox
38 51 0.011395909 ubox
38 52 0.930351693 ubox
38 53 0.014970927 ubox
39 45 0.167968251 ubox
39 48 0.312821318 ubox
39 51 0.931221090 ubox
39 52 0.014978889 ubox
40 47 0.312785042 ubox
40 50 0.931053408 ubox
41 46 0.212062599 ubox
41 48 0.911918931 ubox
41 51 0.005323632 ubox
42 47 0.913565835 ubox
42 50 0.005529112 ubox
46 55 0.004067347 ubox
47 54 0.004240696 ubox
47 57 0.004029277 ubox
48 56 0.004174924 ubox
11 62 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
35 55 0.9500000 lbox
36 54 0.9500000 lbox
37 53 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
40 50 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
