%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRADD)
} def

/sequence { (\
GCACACCCGGAAGCGGCGGAGUAGAGCGGAGCCUGGCGGGCGUGGGAACCCAGGCCCCGCCGAGGCGGCCAGGUUAGUGCAGCAGGAGGUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.005264434 ubox
1 17 0.006410879 ubox
1 22 0.029358475 ubox
1 27 0.031605072 ubox
1 78 0.006421054 ubox
1 80 0.690950189 ubox
1 83 0.104980943 ubox
1 90 0.014687404 ubox
2 13 0.005264841 ubox
2 16 0.005130703 ubox
2 21 0.030372229 ubox
2 26 0.031584142 ubox
2 77 0.006667757 ubox
2 79 0.691571598 ubox
2 82 0.104916571 ubox
2 89 0.015192900 ubox
2 91 0.646635032 ubox
3 22 0.033363026 ubox
3 78 0.691153205 ubox
3 90 0.648572149 ubox
4 21 0.034904114 ubox
4 77 0.688882002 ubox
4 79 0.046826114 ubox
4 89 0.648774002 ubox
4 91 0.269721475 ubox
5 22 0.274808905 ubox
5 74 0.406129672 ubox
5 78 0.047065519 ubox
5 90 0.270842693 ubox
6 16 0.035788119 ubox
6 19 0.036663289 ubox
6 21 0.288828781 ubox
6 29 0.030860312 ubox
6 73 0.433661327 ubox
6 77 0.047084227 ubox
6 86 0.076860773 ubox
6 89 0.267869763 ubox
7 15 0.029964291 ubox
7 16 0.343334120 ubox
7 18 0.026632707 ubox
7 19 0.357507372 ubox
7 28 0.029325401 ubox
7 29 0.261835513 ubox
7 72 0.431964597 ubox
7 73 0.061063552 ubox
7 85 0.070769609 ubox
7 86 0.628865638 ubox
7 88 0.256007654 ubox
7 89 0.048861904 ubox
8 15 0.461392001 ubox
8 18 0.362698919 ubox
8 28 0.262807177 ubox
8 72 0.061747286 ubox
8 79 0.003406432 ubox
8 85 0.628601332 ubox
8 88 0.063959737 ubox
9 14 0.464985561 ubox
9 17 0.363115929 ubox
9 27 0.262200737 ubox
9 70 0.340583139 ubox
9 78 0.003721769 ubox
10 69 0.340040282 ubox
12 75 0.006424265 ubox
13 22 0.283500121 ubox
13 27 0.070947331 ubox
13 32 0.008388850 ubox
13 66 0.282745215 ubox
13 69 0.027342132 ubox
13 74 0.007146120 ubox
13 78 0.058869751 ubox
13 80 0.513393022 ubox
13 83 0.385710587 ubox
14 21 0.288491045 ubox
14 26 0.071177225 ubox
14 28 0.068804274 ubox
14 31 0.009896769 ubox
14 62 0.009053479 ubox
14 65 0.282228899 ubox
14 67 0.031226057 ubox
14 68 0.031360177 ubox
14 73 0.007196205 ubox
14 77 0.059058451 ubox
14 79 0.513837432 ubox
14 82 0.386571085 ubox
15 27 0.054512762 ubox
15 33 0.279387359 ubox
15 61 0.016224712 ubox
15 66 0.009741891 ubox
15 70 0.013050731 ubox
15 75 0.013798053 ubox
15 78 0.392971260 ubox
16 22 0.057807878 ubox
16 27 0.591478722 ubox
16 32 0.280048958 ubox
16 60 0.016234518 ubox
16 69 0.013166692 ubox
16 74 0.021528259 ubox
16 78 0.077927053 ubox
16 80 0.389361780 ubox
16 83 0.042809614 ubox
16 90 0.003842037 ubox
17 21 0.058991797 ubox
17 26 0.595402176 ubox
17 28 0.339522670 ubox
17 31 0.279883828 ubox
17 59 0.016234002 ubox
17 62 0.013095856 ubox
17 68 0.012914211 ubox
17 73 0.021637445 ubox
17 77 0.108592268 ubox
17 79 0.390624962 ubox
17 82 0.042917382 ubox
17 89 0.006578580 ubox
17 91 0.004376040 ubox
18 27 0.347573013 ubox
18 33 0.004015484 ubox
18 34 0.004270945 ubox
18 58 0.016143844 ubox
18 61 0.011809697 ubox
18 70 0.010095934 ubox
18 75 0.021503805 ubox
18 78 0.351446641 ubox
18 90 0.004291526 ubox
19 32 0.004002504 ubox
19 33 0.004510773 ubox
19 57 0.011167762 ubox
19 60 0.010355365 ubox
19 69 0.010072405 ubox
19 74 0.020620554 ubox
19 75 0.072020473 ubox
20 74 0.078633170 ubox
20 75 0.051069368 ubox
21 27 0.279024512 ubox
21 32 0.005444051 ubox
21 37 0.009480486 ubox
21 69 0.003382044 ubox
21 74 0.047665521 ubox
21 78 0.012403097 ubox
21 80 0.043170650 ubox
21 83 0.101982692 ubox
22 26 0.261146560 ubox
22 31 0.005522745 ubox
22 35 0.009840003 ubox
22 36 0.007330248 ubox
22 73 0.050005859 ubox
22 76 0.213870906 ubox
22 77 0.023304260 ubox
22 79 0.043195271 ubox
22 82 0.101303086 ubox
23 34 0.013021988 ubox
23 75 0.223671906 ubox
23 78 0.039259404 ubox
24 33 0.013447267 ubox
24 74 0.217863834 ubox
24 75 0.047950938 ubox
25 74 0.048911888 ubox
25 75 0.174388240 ubox
26 32 0.014333387 ubox
26 37 0.013019169 ubox
26 60 0.004735054 ubox
26 69 0.155339941 ubox
26 74 0.185554133 ubox
26 78 0.127003667 ubox
26 80 0.269042304 ubox
26 83 0.031076597 ubox
27 31 0.014399036 ubox
27 36 0.012937282 ubox
27 59 0.006414968 ubox
27 67 0.011467184 ubox
27 68 0.155237212 ubox
27 73 0.185705428 ubox
27 77 0.136509429 ubox
27 79 0.269299477 ubox
27 82 0.031082876 ubox
28 34 0.004266977 ubox
28 58 0.006424640 ubox
28 66 0.005043208 ubox
28 70 0.509862956 ubox
28 75 0.012108147 ubox
28 78 0.261011906 ubox
29 33 0.004496696 ubox
29 57 0.006404465 ubox
29 69 0.510238895 ubox
29 74 0.004169135 ubox
29 75 0.049115115 ubox
30 74 0.042714273 ubox
30 75 0.696000948 ubox
31 55 0.006484195 ubox
31 66 0.580319775 ubox
31 69 0.010244758 ubox
31 74 0.757330397 ubox
32 54 0.006489621 ubox
32 65 0.580817653 ubox
32 68 0.010278856 ubox
32 73 0.763079089 ubox
33 53 0.006489568 ubox
33 64 0.581395846 ubox
33 67 0.010248062 ubox
33 72 0.763148878 ubox
34 52 0.006481092 ubox
34 62 0.364533001 ubox
34 63 0.503983041 ubox
34 64 0.005145143 ubox
34 71 0.762980507 ubox
35 51 0.006223909 ubox
35 61 0.645142837 ubox
35 70 0.763157625 ubox
36 50 0.005778948 ubox
36 60 0.645876988 ubox
36 69 0.763119744 ubox
37 59 0.645810055 ubox
37 67 0.005962872 ubox
37 68 0.762241595 ubox
38 56 0.003695800 ubox
38 57 0.827060519 ubox
38 58 0.559474171 ubox
38 66 0.005246517 ubox
39 56 0.889380539 ubox
39 57 0.457011002 ubox
39 61 0.006056910 ubox
40 55 0.946148148 ubox
40 56 0.323548578 ubox
40 60 0.006083257 ubox
41 54 0.999516758 ubox
41 59 0.006091329 ubox
42 49 0.004126108 ubox
42 55 0.015794951 ubox
42 58 0.006087738 ubox
43 48 0.004094615 ubox
43 52 0.998360124 ubox
43 54 0.014064484 ubox
44 50 0.016899639 ubox
44 51 0.999572305 ubox
44 57 0.006080073 ubox
45 49 0.023012223 ubox
45 50 0.996080615 ubox
45 51 0.020303572 ubox
45 56 0.006081689 ubox
46 50 0.025539549 ubox
46 55 0.006078682 ubox
57 65 0.003957265 ubox
57 68 0.015713386 ubox
58 64 0.008412476 ubox
58 67 0.755041621 ubox
59 66 0.762767481 ubox
59 69 0.007504013 ubox
60 65 0.762379013 ubox
60 68 0.009509241 ubox
61 67 0.014559909 ubox
62 66 0.013724398 ubox
64 75 0.004546846 ubox
65 74 0.005157767 ubox
65 83 0.005691481 ubox
66 73 0.005349973 ubox
66 82 0.005686336 ubox
67 75 0.021014884 ubox
68 74 0.024592241 ubox
68 78 0.008675228 ubox
68 80 0.012917281 ubox
68 83 0.022227765 ubox
68 90 0.007260080 ubox
69 73 0.024700625 ubox
69 77 0.009295676 ubox
69 79 0.011074914 ubox
69 82 0.022199932 ubox
69 86 0.026474171 ubox
69 89 0.007499167 ubox
70 79 0.014730909 ubox
70 85 0.026574975 ubox
70 88 0.007505115 ubox
71 78 0.020141543 ubox
73 80 0.053112787 ubox
73 83 0.049432069 ubox
74 79 0.052310921 ubox
74 82 0.049297471 ubox
74 87 0.003624457 ubox
75 81 0.045133277 ubox
75 84 0.004524989 ubox
75 86 0.004037755 ubox
77 83 0.042993365 ubox
78 82 0.040255763 ubox
78 84 0.016967907 ubox
78 91 0.007163873 ubox
79 83 0.018558425 ubox
79 90 0.012121808 ubox
80 89 0.012611237 ubox
80 91 0.018606869 ubox
81 90 0.029963398 ubox
82 90 0.148002974 ubox
83 89 0.155584270 ubox
83 91 0.245180942 ubox
84 90 0.241350111 ubox
2 91 0.9500000 lbox
3 90 0.9500000 lbox
4 89 0.9500000 lbox
7 86 0.9500000 lbox
8 85 0.9500000 lbox
13 80 0.9500000 lbox
14 79 0.9500000 lbox
15 78 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
30 75 0.9500000 lbox
31 74 0.9500000 lbox
32 73 0.9500000 lbox
33 72 0.9500000 lbox
34 71 0.9500000 lbox
35 70 0.9500000 lbox
36 69 0.9500000 lbox
37 68 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
40 55 0.9500000 lbox
41 54 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
58 67 0.9500000 lbox
59 66 0.9500000 lbox
60 65 0.9500000 lbox
showpage
end
%%EOF
