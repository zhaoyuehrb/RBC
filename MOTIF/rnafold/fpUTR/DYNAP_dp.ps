%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DYNAP)
} def

/sequence { (\
GUACUGAUGCAUCAUAGUUGACUUCCACCAGUGUUUUAAUUGUUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008512510 ubox
1 10 0.121563113 ubox
1 12 0.003854241 ubox
1 22 0.059913112 ubox
1 28 0.020307001 ubox
1 32 0.004720175 ubox
1 34 0.199990368 ubox
1 40 0.013117192 ubox
1 43 0.005431634 ubox
2 7 0.008588378 ubox
2 9 0.120732526 ubox
2 11 0.004356222 ubox
2 16 0.012445850 ubox
2 17 0.005388023 ubox
2 20 0.017062086 ubox
2 21 0.056857229 ubox
2 27 0.020041679 ubox
2 33 0.852813921 ubox
2 38 0.010571561 ubox
2 39 0.012161330 ubox
2 42 0.006618010 ubox
3 8 0.102904228 ubox
3 15 0.013095008 ubox
3 18 0.093151672 ubox
3 19 0.014980322 ubox
3 32 0.958326747 ubox
3 34 0.007139102 ubox
3 37 0.007742282 ubox
3 41 0.006006408 ubox
3 43 0.016803175 ubox
4 17 0.100561741 ubox
4 31 0.968803097 ubox
4 33 0.006407197 ubox
4 42 0.018074701 ubox
5 11 0.011944417 ubox
5 14 0.048811948 ubox
5 16 0.097767638 ubox
5 20 0.015285005 ubox
5 27 0.021378477 ubox
5 30 0.968641429 ubox
5 38 0.052422267 ubox
5 42 0.009139557 ubox
6 10 0.013043412 ubox
6 13 0.061825936 ubox
6 15 0.077300977 ubox
6 19 0.023330826 ubox
6 24 0.009307558 ubox
6 25 0.041884464 ubox
6 26 0.023853878 ubox
6 29 0.966616897 ubox
6 35 0.014858020 ubox
6 36 0.004835223 ubox
6 37 0.055834105 ubox
6 41 0.016819019 ubox
6 44 0.005072979 ubox
6 45 0.009231392 ubox
6 46 0.071950435 ubox
7 12 0.054935972 ubox
7 15 0.065211994 ubox
7 18 0.025611794 ubox
7 23 0.015407640 ubox
7 24 0.044563930 ubox
7 34 0.015892053 ubox
7 35 0.004868417 ubox
7 36 0.055920081 ubox
7 40 0.017539313 ubox
7 43 0.005050128 ubox
7 44 0.009399272 ubox
7 45 0.072404647 ubox
8 14 0.085967070 ubox
8 16 0.004016215 ubox
8 17 0.025594862 ubox
8 27 0.920506707 ubox
8 33 0.015932569 ubox
8 38 0.004770985 ubox
8 39 0.017330924 ubox
8 42 0.004643180 ubox
9 13 0.085011048 ubox
9 15 0.004053024 ubox
9 18 0.036400119 ubox
9 26 0.928346998 ubox
9 29 0.003407390 ubox
9 32 0.016130405 ubox
9 34 0.058335532 ubox
9 37 0.004924282 ubox
9 43 0.079384733 ubox
10 17 0.041216872 ubox
10 20 0.090642170 ubox
10 31 0.016143639 ubox
10 33 0.060225275 ubox
10 42 0.082139931 ubox
11 18 0.011171454 ubox
11 19 0.089126779 ubox
11 32 0.059764561 ubox
11 40 0.007638924 ubox
11 41 0.080004298 ubox
11 43 0.005393326 ubox
12 17 0.013302977 ubox
12 21 0.938615040 ubox
12 31 0.052786082 ubox
12 39 0.009702196 ubox
12 42 0.004437029 ubox
13 20 0.957686562 ubox
13 33 0.022809315 ubox
13 42 0.017145647 ubox
14 19 0.924015373 ubox
14 32 0.022872037 ubox
14 34 0.015462216 ubox
14 40 0.012077762 ubox
14 41 0.016761795 ubox
14 43 0.121258389 ubox
15 31 0.021875778 ubox
15 33 0.016195717 ubox
15 38 0.053177035 ubox
15 39 0.011216106 ubox
15 42 0.128546089 ubox
16 23 0.060859033 ubox
16 24 0.005394988 ubox
16 32 0.016158457 ubox
16 35 0.008368241 ubox
16 36 0.020768763 ubox
16 37 0.057180247 ubox
16 41 0.130502556 ubox
17 22 0.061407007 ubox
17 23 0.005142426 ubox
17 28 0.044984981 ubox
17 32 0.008046862 ubox
17 34 0.007501126 ubox
17 35 0.019315562 ubox
17 36 0.055374648 ubox
17 40 0.131803184 ubox
18 27 0.039096113 ubox
18 31 0.025036835 ubox
18 39 0.131747732 ubox
19 27 0.041928648 ubox
19 30 0.037030206 ubox
19 33 0.011635113 ubox
19 38 0.128859381 ubox
20 26 0.049843862 ubox
20 29 0.037608863 ubox
20 32 0.005689468 ubox
20 35 0.064150860 ubox
20 36 0.010089404 ubox
20 37 0.116932874 ubox
20 44 0.011343371 ubox
21 32 0.101668463 ubox
21 34 0.077711354 ubox
21 35 0.009981071 ubox
21 36 0.090871771 ubox
21 43 0.012403150 ubox
22 31 0.110425587 ubox
22 33 0.083709736 ubox
22 42 0.012378061 ubox
23 30 0.104290563 ubox
23 31 0.015119377 ubox
24 30 0.015069137 ubox
26 33 0.047795228 ubox
26 42 0.005290731 ubox
27 32 0.039924122 ubox
27 34 0.018157367 ubox
27 41 0.004840924 ubox
27 43 0.028631869 ubox
28 33 0.018683625 ubox
28 42 0.022084960 ubox
29 42 0.157565303 ubox
30 37 0.003843656 ubox
30 41 0.159711523 ubox
31 36 0.004136338 ubox
31 40 0.160014165 ubox
32 38 0.006323711 ubox
32 39 0.159552413 ubox
33 37 0.007929789 ubox
33 40 0.019099950 ubox
33 41 0.010507130 ubox
33 43 0.003781163 ubox
34 39 0.022200440 ubox
34 42 0.016607131 ubox
38 44 0.022028327 ubox
38 45 0.059524818 ubox
39 43 0.019313133 ubox
39 44 0.065162680 ubox
2 33 0.9500000 lbox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
showpage
end
%%EOF
