%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRIM58)
} def

/sequence { (\
GGGAGACGGUGCGGGCGGCCGGGAGCGCAGCCCUCCGGGAGGCGGGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.023121236 ubox
1 32 0.018550718 ubox
1 33 0.505429649 ubox
1 34 0.013614925 ubox
1 36 0.015563189 ubox
1 48 0.018208760 ubox
2 19 0.023068225 ubox
2 20 0.027108952 ubox
2 31 0.018771728 ubox
2 32 0.506374701 ubox
2 33 0.018294023 ubox
2 34 0.003324258 ubox
2 35 0.015018804 ubox
2 36 0.082765244 ubox
2 47 0.013959831 ubox
2 48 0.018357348 ubox
3 19 0.027116664 ubox
3 31 0.506178325 ubox
3 32 0.018135795 ubox
3 33 0.003443318 ubox
3 34 0.014024618 ubox
3 35 0.083070300 ubox
3 47 0.013255731 ubox
3 48 0.084694049 ubox
4 34 0.083184251 ubox
4 47 0.084855856 ubox
5 33 0.075906751 ubox
5 35 0.010073026 ubox
5 48 0.258206442 ubox
6 34 0.013271443 ubox
6 47 0.260370869 ubox
7 13 0.055785880 ubox
7 17 0.028939773 ubox
7 21 0.395157214 ubox
7 27 0.560948564 ubox
7 37 0.200732780 ubox
7 44 0.087803806 ubox
7 46 0.259660011 ubox
8 12 0.057005312 ubox
8 16 0.028937846 ubox
8 20 0.399970695 ubox
8 26 0.565323630 ubox
8 32 0.071072308 ubox
8 33 0.155400884 ubox
8 34 0.014042326 ubox
8 35 0.003262019 ubox
8 36 0.202737328 ubox
8 43 0.087659304 ubox
8 48 0.025418802 ubox
9 16 0.028901079 ubox
9 19 0.399419621 ubox
9 26 0.121499244 ubox
9 28 0.402362675 ubox
9 31 0.071365319 ubox
9 32 0.156266140 ubox
9 33 0.015358386 ubox
9 34 0.006213693 ubox
9 35 0.202646655 ubox
9 43 0.026066116 ubox
9 47 0.021349526 ubox
10 15 0.029328750 ubox
10 17 0.077002895 ubox
10 18 0.389630234 ubox
10 25 0.122043607 ubox
10 27 0.402544694 ubox
10 29 0.142067426 ubox
10 30 0.048551146 ubox
10 37 0.005889516 ubox
10 42 0.024607301 ubox
10 44 0.124549520 ubox
10 46 0.021193022 ubox
11 16 0.107351952 ubox
11 19 0.030662523 ubox
11 26 0.402791358 ubox
11 28 0.159996989 ubox
11 31 0.158903784 ubox
11 36 0.007743576 ubox
11 43 0.131123589 ubox
11 47 0.079679485 ubox
12 18 0.036271701 ubox
12 21 0.619994168 ubox
12 25 0.376043081 ubox
12 27 0.159667053 ubox
12 30 0.159310773 ubox
12 37 0.090209925 ubox
12 42 0.130825131 ubox
12 44 0.024243682 ubox
12 46 0.083612762 ubox
13 20 0.700941616 ubox
13 26 0.134325601 ubox
13 32 0.004775883 ubox
13 33 0.444836864 ubox
13 34 0.003927549 ubox
13 35 0.007503105 ubox
13 36 0.091173996 ubox
13 43 0.019183866 ubox
13 48 0.005166575 ubox
14 19 0.700343033 ubox
14 20 0.069863422 ubox
14 31 0.004594885 ubox
14 32 0.445771015 ubox
14 33 0.003624213 ubox
14 34 0.008774675 ubox
14 35 0.091092941 ubox
14 47 0.004452173 ubox
14 48 0.005067343 ubox
15 19 0.069468003 ubox
15 26 0.095239123 ubox
15 28 0.206693320 ubox
15 31 0.445795249 ubox
15 33 0.030302389 ubox
15 34 0.083267661 ubox
15 43 0.123138844 ubox
15 47 0.004681575 ubox
16 25 0.102417861 ubox
16 27 0.206917696 ubox
16 30 0.444303591 ubox
16 37 0.099118463 ubox
16 42 0.123454682 ubox
16 44 0.003830134 ubox
16 46 0.004690611 ubox
17 26 0.201797337 ubox
17 32 0.091483464 ubox
17 33 0.004258282 ubox
17 36 0.099235577 ubox
17 43 0.003878342 ubox
17 48 0.032409790 ubox
18 26 0.078273531 ubox
18 28 0.413020460 ubox
18 31 0.091569919 ubox
18 32 0.003247023 ubox
18 35 0.099006460 ubox
18 43 0.004347089 ubox
18 47 0.034613309 ubox
19 25 0.090730956 ubox
19 27 0.333346611 ubox
19 30 0.091229420 ubox
19 38 0.054286028 ubox
19 39 0.131848723 ubox
19 42 0.004232177 ubox
19 46 0.034783702 ubox
20 27 0.300625625 ubox
20 37 0.054414744 ubox
20 38 0.131792217 ubox
20 41 0.004044925 ubox
20 45 0.034770185 ubox
21 26 0.387982202 ubox
21 32 0.027132556 ubox
21 33 0.068192920 ubox
21 34 0.064900543 ubox
21 35 0.004878631 ubox
21 36 0.053363688 ubox
21 48 0.012837891 ubox
22 31 0.027246850 ubox
22 32 0.068499989 ubox
22 33 0.074537890 ubox
22 34 0.007825836 ubox
22 35 0.051986356 ubox
22 36 0.132242269 ubox
22 47 0.023675217 ubox
22 48 0.078955209 ubox
23 31 0.068255281 ubox
23 32 0.074803580 ubox
23 33 0.042698118 ubox
23 34 0.026200877 ubox
23 35 0.132671007 ubox
23 47 0.073809102 ubox
23 48 0.124108113 ubox
24 34 0.132743537 ubox
24 47 0.124558362 ubox
25 31 0.090960021 ubox
25 33 0.129901139 ubox
25 43 0.007380375 ubox
25 47 0.016258525 ubox
26 30 0.091312470 ubox
26 42 0.007385482 ubox
26 44 0.305331918 ubox
26 46 0.015661925 ubox
27 43 0.309125611 ubox
27 47 0.008795169 ubox
28 42 0.309114680 ubox
28 46 0.009306601 ubox
30 43 0.020945381 ubox
30 47 0.591397922 ubox
31 38 0.008228906 ubox
31 39 0.308527469 ubox
31 42 0.019460660 ubox
31 45 0.003224487 ubox
31 46 0.613272114 ubox
32 37 0.008453409 ubox
32 38 0.308426703 ubox
32 39 0.020653068 ubox
32 41 0.017355279 ubox
32 42 0.012200816 ubox
32 45 0.613806554 ubox
32 46 0.012214794 ubox
33 37 0.306183468 ubox
33 38 0.022895741 ubox
33 39 0.011918351 ubox
33 41 0.017307524 ubox
33 44 0.613588244 ubox
33 45 0.013266642 ubox
33 46 0.013453787 ubox
34 38 0.010820593 ubox
34 40 0.023655720 ubox
34 42 0.011928686 ubox
34 44 0.014059738 ubox
34 45 0.005564362 ubox
34 46 0.492731142 ubox
35 39 0.023883133 ubox
35 41 0.014236147 ubox
35 42 0.614688522 ubox
35 44 0.005029508 ubox
35 45 0.657557207 ubox
35 46 0.041926877 ubox
36 41 0.615175614 ubox
36 44 0.658379302 ubox
36 45 0.041382377 ubox
37 43 0.657392642 ubox
37 48 0.010669665 ubox
38 47 0.012655015 ubox
38 48 0.008509497 ubox
39 47 0.007581951 ubox
39 48 0.047086986 ubox
40 47 0.047005603 ubox
41 48 0.014436144 ubox
42 47 0.010209123 ubox
1 33 0.9500000 lbox
2 32 0.9500000 lbox
3 31 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
showpage
end
%%EOF
