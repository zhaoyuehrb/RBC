%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUGCGUUCAGACCCUGCAGGCUGGGCUGGCCUGCCCAGGACCUGAGAAGGGGCAGCUCCGGUGGCAAUGUCUGAGCCCCUAGCUGUGCUGGUCCGGGCUGGCCUCUCUAAGACAGUGCAGGCCACGUGAUCCAUCCUCCUAGAGGCAGUGAGCAGGUGAGGGACCCCUACCACAGCCAGGAGGAAAAAGCUAGGCGUCCACUUUCCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[90.06998444 214.15722656]
[86.71110535 198.46972656]
[96.99287415 186.15449524]
[96.99287415 171.15449524]
[96.99287415 156.15449524]
[96.99287415 141.15449524]
[82.48061371 137.36050415]
[75.13935089 150.44123840]
[67.79808044 163.52198792]
[60.45681381 176.60272217]
[53.11554718 189.68345642]
[45.77427673 202.76420593]
[44.30408096 211.77641296]
[38.22897720 215.98130798]
[30.69736099 228.95338440]
[33.40552139 244.76620483]
[22.62393188 256.64630127]
[6.62330866 255.48030090]
[-2.32204151 242.16262817]
[2.64998913 226.90948486]
[17.72528458 221.42176819]
[25.25689888 208.44969177]
[32.69353867 195.42294312]
[40.03480530 182.34219360]
[47.37607193 169.26145935]
[54.71734238 156.18070984]
[62.05860901 143.09997559]
[69.39987946 130.01922607]
[61.83445358 111.37502289]
[63.92489243 92.81884766]
[50.11969757 86.95227814]
[36.31450653 81.08570862]
[22.50931168 75.21913910]
[6.78228188 76.94281769]
[-1.90511966 64.84412384]
[-15.71031284 58.97755814]
[-29.51550484 53.11098480]
[-43.32069778 47.24441528]
[-52.43963242 46.76871109]
[-57.28374863 41.18994522]
[-71.00174713 35.12228775]
[-84.71974945 29.05462837]
[-98.43775177 22.98696709]
[-112.15574646 16.91930771]
[-107.75125122 31.25807953]
[-114.65596771 44.57441711]
[-128.91293335 49.23693466]
[-142.35168457 42.57362366]
[-147.27070618 28.40311813]
[-140.85098267 14.84630966]
[-126.77251434 9.67235374]
[-139.90653992 2.42684889]
[-155.72737122 2.53569579]
[-163.13401794 -10.38679886]
[-176.26805115 -17.63230324]
[-189.40206909 -24.87780762]
[-202.53610229 -32.12331009]
[-215.67013550 -39.36881638]
[-228.80415344 -46.61431885]
[-241.38734436 -43.79030609]
[-252.17671204 -50.09309006]
[-255.66474915 -61.67385864]
[-268.69149780 -69.11049652]
[-277.69271851 -70.64649963]
[-281.85311890 -76.75216675]
[-294.76983643 -84.37834930]
[-307.68655396 -92.00453949]
[-321.42062378 -84.97752380]
[-336.77127075 -86.51395416]
[-348.84020996 -96.12357330]
[-353.77621460 -110.73997498]
[-350.00430298 -125.69911957]
[-338.72799683 -136.22760010]
[-323.54559326 -138.96582031]
[-309.30169678 -133.04002380]
[-300.54150391 -120.34110260]
[-300.06036377 -104.92124176]
[-287.14364624 -97.29505157]
[-274.22695923 -89.66886902]
[-261.25488281 -82.13725281]
[-248.22811890 -74.70061493]
[-230.70806885 -75.73024750]
[-221.55865479 -59.74834824]
[-208.42462158 -52.50284195]
[-195.29060364 -45.25733948]
[-182.15657043 -38.01183319]
[-169.02253723 -30.76633072]
[-155.88851929 -23.52082634]
[-141.00711060 -24.14791870]
[-132.66104126 -10.70717812]
[-119.52700806 -3.46167374]
[-106.08808899 3.20130897]
[-92.37008667 9.26896858]
[-78.65209198 15.33662796]
[-64.93408966 21.40428734]
[-51.21609116 27.47194672]
[-37.45412827 33.43922043]
[-23.64893341 39.30579376]
[-9.84374142 45.17236328]
[3.96145129 51.03893280]
[18.70104218 48.89563751]
[28.37588310 61.41394424]
[42.18107605 67.28051758]
[55.98626709 73.14708710]
[69.79145813 79.01365662]
[76.95545197 71.33065796]
[85.99897766 65.98597717]
[96.18445587 63.41551971]
[106.68112946 63.82894897]
[116.63288879 67.19253540]
[125.22803497 73.23194885]
[131.76556396 81.45459747]
[135.71223450 91.18984222]
[150.70222473 90.64200592]
[164.21060181 82.40586090]
[177.21197510 89.67317200]
[192.20196533 89.12534332]
[207.19195557 88.57751465]
[222.18194580 88.02967834]
[230.88421631 75.31839752]
[245.23492432 70.22813416]
[259.66058350 74.51345062]
[268.68869019 86.33002472]
[283.67868042 85.78219604]
[298.66867065 85.23436737]
[309.39648438 73.94047546]
[324.60626221 73.59844208]
[335.30715942 83.89536285]
[350.29714966 83.34753418]
[355.22833252 71.41536713]
[364.27249146 62.26699066]
[376.06143188 57.23603821]
[388.83071899 57.03710556]
[400.68362427 61.66440582]
[409.87292480 70.39791107]
[415.05831909 81.91513062]
[430.05792236 81.80554199]
[445.05752563 81.69595337]
[460.05712891 81.58636475]
[475.05673218 81.47677612]
[490.05633545 81.36717987]
[505.05593872 81.25759125]
[509.55136108 78.61650085]
[514.15063477 78.02130890]
[518.05767822 79.16942596]
[520.71173096 81.48637390]
[535.70172119 82.03420258]
[550.69171143 82.58203125]
[564.76525879 75.35390472]
[577.20147705 83.55087280]
[592.19146729 84.09870148]
[607.18145752 84.64653015]
[615.82250977 70.54789734]
[630.31188965 62.77608871]
[646.64929199 63.36926651]
[660.37823486 72.07084656]
[667.80151367 86.42536926]
[682.79791260 86.75411224]
[697.79431152 87.08286285]
[710.33190918 77.07346344]
[725.94201660 80.77535248]
[732.64990234 95.34875488]
[725.30981445 109.61419678]
[709.55249023 112.62846375]
[697.46557617 102.07925415]
[682.46917725 101.75051117]
[667.47277832 101.42176819]
[661.17266846 113.53710938]
[650.21496582 121.79621887]
[636.70330811 124.54211426]
[623.26269531 121.18318939]
[612.52929688 112.31950378]
[606.63360596 99.63652039]
[591.64361572 99.08869171]
[576.65362549 98.54086304]
[563.65228271 105.80817413]
[550.14392090 97.57202911]
[535.15393066 97.02420044]
[520.16394043 96.47636414]
[505.16552734 96.25719452]
[490.16592407 96.36678314]
[475.16632080 96.47637177]
[460.16671753 96.58596039]
[445.16711426 96.69554901]
[430.16751099 96.80513763]
[415.16790771 96.91473389]
[407.21545410 112.18830109]
[392.54623413 121.37602997]
[375.15521240 121.86930847]
[359.83267212 113.44199371]
[350.84497070 98.33752441]
[335.85498047 98.88535309]
[325.93426514 109.93592072]
[310.74008179 110.70503998]
[299.21649170 100.22435760]
[284.22650146 100.77219391]
[269.23651123 101.32002258]
[261.09506226 113.76408386]
[247.02067566 119.09097290]
[232.33670044 115.06182098]
[222.72978210 103.01967621]
[207.73979187 103.56750488]
[192.74980164 104.11533356]
[177.75979614 104.66316223]
[165.32360840 112.86013031]
[151.25006104 105.63200378]
[136.26005554 106.17983246]
[129.72872925 126.49911499]
[111.99287415 141.15449524]
[111.99287415 156.15449524]
[111.99287415 171.15449524]
[111.99287415 186.15449524]
[122.27464294 198.46972656]
[118.91575623 214.15722656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 212]
[4 211]
[5 210]
[6 209]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[14 22]
[15 21]
[30 105]
[31 104]
[32 103]
[33 102]
[35 100]
[36 99]
[37 98]
[38 97]
[40 96]
[41 95]
[42 94]
[43 93]
[44 92]
[51 91]
[52 90]
[54 88]
[55 87]
[56 86]
[57 85]
[58 84]
[59 83]
[62 81]
[63 80]
[65 79]
[66 78]
[67 77]
[113 207]
[114 206]
[116 204]
[117 203]
[118 202]
[119 201]
[123 197]
[124 196]
[125 195]
[128 192]
[129 191]
[136 186]
[137 185]
[138 184]
[139 183]
[140 182]
[141 181]
[142 180]
[146 179]
[147 178]
[148 177]
[150 175]
[151 174]
[152 173]
[157 167]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
