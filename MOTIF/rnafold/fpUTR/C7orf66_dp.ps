%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C7orf66)
} def

/sequence { (\
CAGAAAACAUAUGUUGAUCCCAAACAUGCAAUGACAUCCAUAUAAACCUUGCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.031650723 ubox
1 16 0.037656376 ubox
1 28 0.006669351 ubox
1 33 0.062320612 ubox
1 51 0.059511388 ubox
2 12 0.031726224 ubox
2 15 0.036403093 ubox
2 27 0.006426962 ubox
2 32 0.062147967 ubox
2 49 0.037626268 ubox
2 50 0.058435877 ubox
3 14 0.028846740 ubox
3 15 0.004933025 ubox
3 19 0.178791872 ubox
3 38 0.156305667 ubox
3 48 0.041509701 ubox
3 49 0.050149795 ubox
3 50 0.011911264 ubox
4 14 0.005143280 ubox
4 15 0.011893282 ubox
4 18 0.175907736 ubox
4 37 0.153685148 ubox
4 49 0.012575463 ubox
4 50 0.020776162 ubox
5 14 0.011853725 ubox
5 15 0.013015969 ubox
5 49 0.020208103 ubox
5 50 0.014582705 ubox
6 14 0.011153532 ubox
6 15 0.224614118 ubox
6 49 0.014350662 ubox
6 50 0.010686727 ubox
7 14 0.232708626 ubox
7 49 0.010354917 ubox
8 13 0.233598623 ubox
8 16 0.080340920 ubox
8 28 0.069631039 ubox
8 33 0.255534220 ubox
8 51 0.036569589 ubox
9 15 0.079342390 ubox
9 18 0.010210956 ubox
9 27 0.062868889 ubox
9 32 0.255255022 ubox
9 37 0.005479056 ubox
9 41 0.012658858 ubox
9 43 0.101313653 ubox
9 50 0.035028987 ubox
10 16 0.003897923 ubox
10 17 0.010661962 ubox
10 26 0.038374636 ubox
10 28 0.445885290 ubox
10 31 0.192886014 ubox
10 33 0.006905732 ubox
10 36 0.004501203 ubox
10 40 0.012150581 ubox
10 42 0.107255004 ubox
10 44 0.120164594 ubox
11 15 0.003946283 ubox
11 18 0.017604575 ubox
11 27 0.757227957 ubox
11 32 0.007791478 ubox
11 37 0.070266049 ubox
11 41 0.107844721 ubox
11 43 0.126819665 ubox
12 17 0.019065491 ubox
12 22 0.024686429 ubox
12 26 0.878849418 ubox
12 30 0.074056111 ubox
12 31 0.005872852 ubox
12 33 0.009548517 ubox
12 36 0.077291474 ubox
12 40 0.107579172 ubox
12 42 0.127535774 ubox
12 44 0.004888658 ubox
12 53 0.009927475 ubox
13 21 0.027188835 ubox
13 25 0.914940535 ubox
13 27 0.005849805 ubox
13 29 0.076338418 ubox
13 32 0.020872893 ubox
13 35 0.079389419 ubox
13 39 0.106713862 ubox
13 41 0.127627358 ubox
13 43 0.005298180 ubox
13 47 0.009161517 ubox
13 52 0.010960266 ubox
14 23 0.292760241 ubox
14 24 0.871965801 ubox
14 26 0.005257602 ubox
14 28 0.073956812 ubox
14 31 0.024137245 ubox
14 34 0.079244802 ubox
14 40 0.126541107 ubox
14 42 0.005222092 ubox
14 46 0.009163407 ubox
14 51 0.010664782 ubox
14 54 0.005839456 ubox
15 22 0.406275547 ubox
15 23 0.822504403 ubox
15 26 0.072189481 ubox
15 30 0.025588427 ubox
15 33 0.075088769 ubox
15 36 0.068186948 ubox
15 40 0.008651404 ubox
15 45 0.008786146 ubox
15 53 0.006569540 ubox
16 21 0.490308475 ubox
16 25 0.079495784 ubox
16 29 0.026153808 ubox
16 32 0.039918520 ubox
16 35 0.068707394 ubox
16 38 0.146509753 ubox
16 39 0.009806973 ubox
16 52 0.006710595 ubox
17 27 0.014097931 ubox
17 32 0.056260935 ubox
17 37 0.146639526 ubox
17 43 0.003367549 ubox
18 26 0.013954892 ubox
18 31 0.061073280 ubox
18 34 0.063339706 ubox
18 36 0.141902380 ubox
18 42 0.003513776 ubox
19 33 0.063994073 ubox
21 28 0.082043882 ubox
21 33 0.134961056 ubox
21 51 0.014600141 ubox
22 27 0.071584816 ubox
22 32 0.125084997 ubox
22 50 0.014605815 ubox
23 49 0.013371025 ubox
25 33 0.029915158 ubox
25 51 0.004822961 ubox
26 32 0.029747403 ubox
26 37 0.030375513 ubox
26 41 0.009728818 ubox
26 43 0.004431578 ubox
26 50 0.004738674 ubox
27 31 0.026641645 ubox
27 36 0.035526615 ubox
27 40 0.010804435 ubox
27 42 0.004878518 ubox
27 44 0.006161283 ubox
27 53 0.545731876 ubox
28 35 0.040869864 ubox
28 39 0.012214523 ubox
28 41 0.004065005 ubox
28 43 0.008062696 ubox
28 52 0.813761136 ubox
29 51 0.815637108 ubox
30 50 0.805566622 ubox
31 37 0.015811408 ubox
31 41 0.401363085 ubox
31 43 0.044041728 ubox
31 49 0.668999507 ubox
32 36 0.016999390 ubox
32 40 0.489457857 ubox
32 42 0.053230712 ubox
32 44 0.045109169 ubox
32 51 0.004541238 ubox
32 53 0.113334372 ubox
33 39 0.491996228 ubox
33 41 0.047854270 ubox
33 43 0.039612667 ubox
33 50 0.011619002 ubox
33 52 0.125824371 ubox
34 49 0.015185719 ubox
35 51 0.137396122 ubox
36 43 0.134233190 ubox
36 50 0.134512456 ubox
37 42 0.126031730 ubox
39 51 0.067211493 ubox
40 50 0.066546670 ubox
41 51 0.023504894 ubox
42 50 0.027406222 ubox
43 51 0.029839346 ubox
44 50 0.033574985 ubox
45 49 0.026737415 ubox
49 55 0.008247998 ubox
50 54 0.009717469 ubox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
28 52 0.9500000 lbox
29 51 0.9500000 lbox
30 50 0.9500000 lbox
31 49 0.9500000 lbox
showpage
end
%%EOF
