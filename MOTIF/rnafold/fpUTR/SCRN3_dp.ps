%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SCRN3)
} def

/sequence { (\
GAUCAAAGGUGACAGCUUCCGGCAACUGAUGCCUCCACUGGCCACUCCUCCCUCCGUCCACCUGUCACUUCGGGUAGCUGGGAGGCCAGUUAAAAAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.008084465 ubox
1 19 0.074987654 ubox
1 35 0.060967452 ubox
1 71 0.035265164 ubox
1 91 0.016066940 ubox
2 10 0.059289434 ubox
2 17 0.009112882 ubox
2 18 0.072133126 ubox
2 30 0.026468869 ubox
2 34 0.055569525 ubox
2 70 0.033235369 ubox
2 75 0.448723113 ubox
2 90 0.011737251 ubox
3 9 0.060313816 ubox
3 12 0.160317805 ubox
3 22 0.010258206 ubox
3 29 0.027353486 ubox
3 73 0.043427723 ubox
3 74 0.516564698 ubox
3 89 0.007444554 ubox
4 8 0.059315539 ubox
4 11 0.174744377 ubox
4 21 0.019680716 ubox
4 28 0.027511421 ubox
4 31 0.013289567 ubox
4 72 0.058602489 ubox
4 73 0.568015765 ubox
5 10 0.152090124 ubox
5 18 0.016758550 ubox
5 27 0.025722833 ubox
5 30 0.013268821 ubox
5 70 0.006721246 ubox
5 91 0.014077685 ubox
6 17 0.011271485 ubox
6 18 0.152345596 ubox
6 69 0.003542001 ubox
6 70 0.030331732 ubox
6 90 0.008160888 ubox
6 91 0.014829101 ubox
7 17 0.168781383 ubox
7 18 0.428549873 ubox
7 27 0.004890774 ubox
7 34 0.403984299 ubox
7 46 0.008308232 ubox
7 49 0.004730313 ubox
7 69 0.027896505 ubox
7 70 0.571994418 ubox
7 90 0.006223928 ubox
7 91 0.009530264 ubox
8 16 0.168496843 ubox
8 17 0.505603387 ubox
8 18 0.012953209 ubox
8 19 0.048971466 ubox
8 20 0.232237992 ubox
8 26 0.006141206 ubox
8 27 0.015452509 ubox
8 33 0.428294768 ubox
8 34 0.003475542 ubox
8 35 0.008360744 ubox
8 36 0.051706397 ubox
8 39 0.006944446 ubox
8 43 0.060355833 ubox
8 45 0.007464830 ubox
8 46 0.094600894 ubox
8 47 0.005432691 ubox
8 48 0.004915120 ubox
8 68 0.020188501 ubox
8 69 0.590906537 ubox
8 70 0.004783765 ubox
8 71 0.004535010 ubox
8 87 0.006581377 ubox
8 90 0.004121508 ubox
8 91 0.003646704 ubox
9 16 0.515305738 ubox
9 17 0.005082466 ubox
9 18 0.047757931 ubox
9 19 0.231902038 ubox
9 23 0.021489863 ubox
9 26 0.016833804 ubox
9 32 0.428398853 ubox
9 33 0.003215670 ubox
9 34 0.007270302 ubox
9 35 0.051276506 ubox
9 38 0.009516404 ubox
9 42 0.060406276 ubox
9 45 0.100482411 ubox
9 47 0.004587146 ubox
9 68 0.593280155 ubox
9 86 0.006327888 ubox
10 15 0.507931915 ubox
10 21 0.010580316 ubox
10 22 0.019757906 ubox
10 24 0.005158206 ubox
10 25 0.016220998 ubox
10 29 0.003719178 ubox
10 31 0.425587129 ubox
10 37 0.010311586 ubox
10 41 0.057989823 ubox
10 44 0.100658617 ubox
10 67 0.593503248 ubox
10 85 0.004532094 ubox
10 88 0.003811986 ubox
10 92 0.012723668 ubox
11 18 0.068769160 ubox
11 19 0.044719624 ubox
11 20 0.037497883 ubox
11 23 0.005696289 ubox
11 27 0.010418953 ubox
11 30 0.288844219 ubox
11 35 0.018824121 ubox
11 36 0.011790165 ubox
11 43 0.100427540 ubox
11 66 0.593642878 ubox
11 87 0.003832528 ubox
11 91 0.013804928 ubox
12 17 0.065224379 ubox
12 18 0.043708683 ubox
12 34 0.019425731 ubox
12 65 0.593576707 ubox
12 90 0.012847296 ubox
13 28 0.422909105 ubox
13 31 0.008706476 ubox
13 40 0.115695355 ubox
13 64 0.593637933 ubox
13 89 0.012219809 ubox
14 27 0.422267784 ubox
14 30 0.008896378 ubox
14 34 0.007661914 ubox
14 39 0.115929274 ubox
14 63 0.593309892 ubox
14 91 0.005169933 ubox
15 23 0.202403392 ubox
15 26 0.377369132 ubox
15 32 0.036841476 ubox
15 33 0.005488843 ubox
15 38 0.115552294 ubox
15 42 0.020124958 ubox
15 57 0.007130744 ubox
15 62 0.590979361 ubox
15 86 0.006475862 ubox
15 90 0.005067855 ubox
16 22 0.224882582 ubox
16 31 0.037148804 ubox
16 41 0.020261780 ubox
16 56 0.013374109 ubox
16 84 0.005786278 ubox
16 85 0.006031033 ubox
16 89 0.004946995 ubox
17 21 0.202671021 ubox
17 25 0.168072020 ubox
17 40 0.019974979 ubox
17 83 0.006255337 ubox
17 84 0.005506200 ubox
17 88 0.004215382 ubox
17 93 0.005281150 ubox
17 94 0.005993934 ubox
17 95 0.006000863 ubox
17 96 0.006007370 ubox
17 97 0.006027465 ubox
18 24 0.157392621 ubox
18 29 0.034873009 ubox
18 82 0.006380916 ubox
18 83 0.005345072 ubox
18 92 0.005460463 ubox
18 93 0.006409970 ubox
18 94 0.006414977 ubox
18 95 0.006419711 ubox
18 96 0.006436501 ubox
18 97 0.004373376 ubox
19 28 0.033054336 ubox
19 41 0.003811576 ubox
19 81 0.006984592 ubox
19 82 0.004561740 ubox
20 28 0.026509085 ubox
20 40 0.003840585 ubox
20 56 0.584174390 ubox
20 80 0.007521032 ubox
20 81 0.003581586 ubox
21 27 0.029920811 ubox
21 33 0.679411975 ubox
21 34 0.005942021 ubox
21 35 0.004036890 ubox
21 36 0.006603649 ubox
21 43 0.006178424 ubox
21 48 0.004010204 ubox
21 51 0.015017927 ubox
21 52 0.027456891 ubox
21 53 0.008009135 ubox
21 54 0.012651699 ubox
21 55 0.588210998 ubox
21 58 0.027425759 ubox
21 59 0.015959286 ubox
21 79 0.008014575 ubox
21 87 0.005652087 ubox
22 26 0.029447371 ubox
22 32 0.680449180 ubox
22 33 0.004702853 ubox
22 35 0.005402696 ubox
22 42 0.006201149 ubox
22 47 0.004042797 ubox
22 50 0.015321257 ubox
22 51 0.027985012 ubox
22 52 0.010895381 ubox
22 53 0.012845076 ubox
22 54 0.587109297 ubox
22 57 0.027679854 ubox
22 58 0.015913581 ubox
22 78 0.008150799 ubox
22 86 0.005656307 ubox
23 31 0.680434595 ubox
23 41 0.006177057 ubox
23 56 0.028800789 ubox
23 77 0.008141779 ubox
23 85 0.005450048 ubox
24 30 0.636545520 ubox
24 91 0.026819335 ubox
25 57 0.011155785 ubox
25 90 0.029338401 ubox
26 56 0.011891081 ubox
26 89 0.029642800 ubox
27 37 0.005380465 ubox
27 44 0.033932818 ubox
27 88 0.029632656 ubox
28 35 0.005529680 ubox
28 36 0.005798102 ubox
28 43 0.035040116 ubox
28 47 0.548640480 ubox
28 50 0.058032258 ubox
28 54 0.012086215 ubox
28 58 0.003624225 ubox
28 87 0.029557422 ubox
29 34 0.005166904 ubox
29 46 0.546030728 ubox
29 49 0.057372083 ubox
29 53 0.011976237 ubox
29 57 0.003721911 ubox
30 44 0.241864527 ubox
30 56 0.003676760 ubox
31 42 0.565396006 ubox
31 43 0.173506428 ubox
31 86 0.005581655 ubox
32 41 0.591635931 ubox
32 85 0.005603716 ubox
33 40 0.591442493 ubox
33 41 0.009579490 ubox
33 84 0.005603007 ubox
34 40 0.009014143 ubox
34 41 0.003758733 ubox
34 83 0.005594503 ubox
35 40 0.005293627 ubox
35 41 0.014670346 ubox
35 82 0.005569239 ubox
36 40 0.014679055 ubox
36 81 0.005339462 ubox
37 57 0.009775530 ubox
37 90 0.742662739 ubox
38 56 0.010297710 ubox
38 89 0.794172229 ubox
39 56 0.012912269 ubox
39 60 0.035651375 ubox
39 88 0.794688422 ubox
39 92 0.011847375 ubox
40 47 0.003993495 ubox
40 48 0.019721794 ubox
40 49 0.004235013 ubox
40 51 0.016857339 ubox
40 52 0.014115423 ubox
40 54 0.004044187 ubox
40 55 0.018454677 ubox
40 58 0.016433348 ubox
40 59 0.040133391 ubox
40 79 0.004743086 ubox
40 87 0.795014135 ubox
40 91 0.012782857 ubox
41 47 0.019613541 ubox
41 48 0.004655297 ubox
41 50 0.016913477 ubox
41 51 0.014006151 ubox
41 53 0.003182959 ubox
41 54 0.018302570 ubox
41 57 0.016920971 ubox
41 58 0.039902717 ubox
41 78 0.004888465 ubox
41 86 0.794969824 ubox
41 90 0.013497753 ubox
42 56 0.030407222 ubox
42 77 0.004881338 ubox
42 85 0.728198312 ubox
42 89 0.013534663 ubox
43 84 0.634442150 ubox
44 57 0.024439602 ubox
44 75 0.003868421 ubox
44 90 0.052342442 ubox
45 56 0.026096292 ubox
45 74 0.003910437 ubox
45 81 0.006408867 ubox
45 82 0.036571007 ubox
45 84 0.086760702 ubox
45 85 0.005011004 ubox
45 89 0.055994548 ubox
46 73 0.003395958 ubox
46 80 0.006027846 ubox
46 81 0.030070419 ubox
46 82 0.016489815 ubox
46 83 0.175019675 ubox
46 84 0.004310727 ubox
46 85 0.004476745 ubox
46 88 0.051946070 ubox
47 72 0.003354142 ubox
47 80 0.029293140 ubox
47 81 0.025169859 ubox
47 82 0.181064739 ubox
47 84 0.022245442 ubox
47 85 0.340138297 ubox
48 77 0.019736529 ubox
48 80 0.025201506 ubox
48 81 0.180102770 ubox
48 82 0.005307957 ubox
48 84 0.484762667 ubox
48 89 0.009968802 ubox
49 76 0.019769052 ubox
49 80 0.173828618 ubox
49 81 0.004489505 ubox
49 82 0.004317539 ubox
49 83 0.778248246 ubox
49 88 0.009735380 ubox
50 74 0.019678335 ubox
50 80 0.022522690 ubox
50 81 0.007317233 ubox
50 82 0.780151396 ubox
50 85 0.003229205 ubox
51 73 0.019666799 ubox
51 74 0.003642626 ubox
51 80 0.008554256 ubox
51 81 0.780002017 ubox
51 82 0.017194058 ubox
51 84 0.003877591 ubox
51 85 0.029292997 ubox
52 72 0.019624508 ubox
52 73 0.003444705 ubox
52 74 0.005403921 ubox
52 77 0.169380707 ubox
52 80 0.779114743 ubox
52 81 0.020151753 ubox
52 82 0.017222942 ubox
52 84 0.037345432 ubox
53 74 0.031652623 ubox
53 76 0.168146068 ubox
53 80 0.017146544 ubox
53 81 0.016297258 ubox
53 82 0.020144335 ubox
53 83 0.055108308 ubox
54 73 0.039104677 ubox
54 74 0.021991653 ubox
54 80 0.036875796 ubox
54 81 0.033153922 ubox
54 82 0.055055189 ubox
55 72 0.039393100 ubox
55 73 0.021526349 ubox
55 80 0.039680138 ubox
55 81 0.054734578 ubox
56 68 0.012736278 ubox
56 71 0.039351136 ubox
56 75 0.010036975 ubox
56 78 0.714501805 ubox
56 79 0.050256704 ubox
57 67 0.012188845 ubox
57 74 0.013567547 ubox
57 77 0.703929970 ubox
57 82 0.003301424 ubox
57 83 0.006288263 ubox
58 73 0.014717564 ubox
58 74 0.013984312 ubox
58 81 0.004953451 ubox
58 82 0.006331908 ubox
59 72 0.014755987 ubox
59 73 0.013314907 ubox
59 80 0.005753075 ubox
59 81 0.006302830 ubox
60 75 0.781725967 ubox
60 79 0.004454452 ubox
61 73 0.018946255 ubox
61 74 0.802623026 ubox
62 72 0.018984866 ubox
62 73 0.802710985 ubox
63 72 0.802059995 ubox
64 71 0.798535207 ubox
69 96 0.003174974 ubox
69 97 0.004764291 ubox
69 98 0.003216936 ubox
70 95 0.005241650 ubox
70 96 0.007861233 ubox
70 97 0.009460163 ubox
75 92 0.360501989 ubox
76 91 0.543184855 ubox
77 86 0.004105578 ubox
77 90 0.590065845 ubox
78 85 0.004114607 ubox
78 89 0.593653219 ubox
79 84 0.004007759 ubox
79 88 0.593556624 ubox
80 87 0.593674278 ubox
81 86 0.593034464 ubox
81 87 0.005716729 ubox
82 86 0.007773988 ubox
90 96 0.008189062 ubox
90 97 0.014271203 ubox
90 98 0.007715863 ubox
91 95 0.012507395 ubox
91 96 0.023926506 ubox
91 97 0.019915390 ubox
2 75 0.9500000 lbox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
13 64 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
76 91 0.9500000 lbox
77 90 0.9500000 lbox
78 89 0.9500000 lbox
79 88 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
