%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGUUCCAGGAGGGCACUGCGAGGCUAGGGGGAAGGAGAAGGGAUCAGAAGCGGGAGCUGAGGGGAGAGAGAGGCCGGUCCUGGUCUGGCCGCUGCGGCUGCUAGCCCGAGGUCUCCAAGCCGGGCUGCGGCUCCAUCCUCGGCUCCUGGGCACCGUCUGCGAGGCUCCGCCGACCAGAGUGAGAAAGCCGCGGGCGGCGACCGCCGCAUC\
) } def
/len { sequence length } bind def

/coor [
[73.38095856 157.65182495]
[73.49128723 142.65269470]
[73.60139465 127.65309906]
[73.71149445 112.65350342]
[66.21169281 112.59845734]
[61.45096588 126.82292175]
[56.69023514 141.04739380]
[51.92950439 155.27185059]
[57.77105331 170.21360779]
[49.60690308 184.02397156]
[33.69989395 186.10882568]
[22.25252151 174.86883545]
[24.04623032 158.92637634]
[37.70503998 150.51112366]
[42.46577072 136.28665161]
[47.22649765 122.06219482]
[51.98722839 107.83772278]
[72.34645844 90.97064972]
[93.31117249 93.20839691]
[93.53137207 78.21001434]
[93.75157166 63.21163177]
[93.97176361 48.21324921]
[94.19196320 33.21486664]
[77.23970795 18.44174576]
[76.78218842 -3.76314688]
[92.71003723 -18.84179878]
[91.61000061 -33.80140686]
[90.50996399 -48.76101685]
[78.82829285 -59.06520462]
[77.92580414 -74.25204468]
[87.82125854 -85.32523346]
[86.72122192 -100.28484344]
[71.75994873 -107.32671356]
[62.44533920 -120.87546539]
[61.24201965 -137.17895508]
[68.38402557 -151.77970886]
[81.83665466 -160.73364258]
[80.51713562 -175.67549133]
[79.19760895 -190.61734009]
[77.87808990 -205.55918884]
[61.05933380 -214.70014954]
[53.21263123 -231.99548340]
[57.34516144 -250.37858582]
[71.60962677 -262.45761108]
[69.63354492 -277.32687378]
[67.65745544 -292.19613647]
[65.68137360 -307.06539917]
[51.03596497 -311.03878784]
[39.05983734 -320.29162598]
[31.55892372 -333.38934326]
[29.64921951 -348.32052612]
[33.59084702 -362.80599976]
[42.75311661 -374.64651489]
[55.71520996 -382.05688477]
[53.73912430 -396.92614746]
[51.76304245 -411.79541016]
[49.78695679 -426.66467285]
[47.81087112 -441.53396606]
[45.83478546 -456.40322876]
[43.85869980 -471.27249146]
[41.88261795 -486.14175415]
[39.90653229 -501.01101685]
[37.93044662 -515.88031006]
[35.95436096 -530.74957275]
[33.97827530 -545.61883545]
[31.78412628 -560.45745850]
[29.37238503 -575.26232910]
[26.96064186 -590.06713867]
[24.54890060 -604.87200928]
[10.28217030 -610.38635254]
[0.75400317 -622.22314453]
[-1.55469978 -637.14080811]
[3.87713504 -651.11761475]
[15.49737358 -660.43621826]
[13.08563137 -675.24102783]
[3.23016405 -687.61767578]
[8.82047367 -701.42333984]
[6.40873194 -716.22821045]
[3.99698973 -731.03308105]
[1.58524752 -745.83789062]
[-0.82649475 -760.64276123]
[-3.99541020 -775.30419922]
[-7.91313457 -789.78350830]
[-11.83085918 -804.26287842]
[-15.85475731 -818.71307373]
[-19.98461342 -833.13336182]
[-31.22239494 -844.26989746]
[-27.28824997 -858.63555908]
[-31.41810608 -873.05584717]
[-35.54796219 -887.47607422]
[-39.67781830 -901.89636230]
[-43.80767441 -916.31665039]
[-55.04545593 -927.45318604]
[-51.11130905 -941.81884766]
[-55.24116516 -956.23913574]
[-67.40357971 -967.23944092]
[-63.69414139 -983.21356201]
[-47.92879486 -987.72863770]
[-36.32558060 -976.13995361]
[-40.82089233 -960.36895752]
[-36.69103622 -945.94873047]
[-25.74864960 -935.84356689]
[-29.38739967 -920.44653320]
[-25.25754356 -906.02624512]
[-21.12768745 -891.60595703]
[-16.99783134 -877.18566895]
[-12.86797523 -862.76538086]
[-1.92558956 -852.66027832]
[-5.56434011 -837.26318359]
[-1.43448389 -822.84295654]
[3.42794442 -817.27935791]
[2.64848638 -808.18060303]
[6.56621075 -793.70123291]
[10.48393536 -779.22192383]
[17.86113548 -792.28240967]
[31.86358833 -797.66119385]
[46.08732605 -792.89831543]
[54.02716827 -780.17199707]
[52.05186081 -765.30261230]
[41.06480408 -755.09063721]
[26.09088516 -754.20648193]
[13.97835255 -763.05450439]
[16.39009476 -748.24963379]
[18.80183601 -733.44482422]
[21.21357918 -718.63995361]
[23.62532043 -703.83508301]
[33.30828476 -692.51745605]
[27.89047813 -677.65277100]
[30.30222130 -662.84796143]
[44.27921295 -657.69921875]
[53.86619568 -646.16900635]
[56.41144943 -631.28991699]
[51.13271332 -617.04095459]
[39.35374832 -607.28375244]
[41.76549149 -592.47888184]
[44.17723083 -577.67407227]
[46.58897400 -562.86920166]
[49.87108612 -559.40264893]
[51.01182175 -553.83819580]
[48.84754181 -547.59490967]
[50.82362747 -532.72564697]
[52.79971313 -517.85638428]
[54.77579880 -502.98709106]
[56.75188446 -488.11782837]
[58.72796631 -473.24856567]
[60.70405197 -458.37930298]
[62.68013763 -443.51004028]
[64.65621948 -428.64077759]
[66.63230896 -413.77151489]
[68.60839081 -398.90225220]
[70.58448029 -384.03295898]
[85.03210449 -380.26528931]
[96.96887207 -371.22875977]
[104.55702209 -358.27557373]
[106.61335754 -343.36386108]
[102.79368591 -328.76168823]
[93.64992523 -316.70205688]
[80.55064392 -309.04147339]
[82.52672577 -294.17221069]
[84.50280762 -279.30294800]
[86.47889709 -264.43368530]
[97.11228943 -261.07272339]
[105.76367950 -253.95474243]
[111.15950775 -244.07803345]
[112.48702240 -232.85041809]
[109.51654053 -221.88864136]
[102.64004517 -212.78556824]
[92.81993866 -206.87870789]
[94.13945770 -191.93685913]
[95.45898438 -176.99501038]
[96.77850342 -162.05316162]
[109.51258850 -157.12092590]
[118.92480469 -147.13566589]
[123.13713074 -134.00663757]
[121.27339172 -120.27816772]
[113.64075470 -108.63666534]
[101.68083191 -101.38488007]
[102.78086853 -86.42527008]
[114.18963623 -76.91866302]
[115.51833344 -61.76316071]
[105.46957397 -49.86105347]
[106.56961060 -34.90144730]
[107.66964722 -19.94183540]
[115.19682312 -17.25018120]
[121.63201141 -12.45100117]
[126.39852905 -5.94971466]
[129.06205750 1.69469929]
[129.37013245 9.81774044]
[127.27596283 17.70714378]
[122.94425964 24.66533470]
[116.73847961 30.07110786]
[109.19034576 33.43506241]
[108.97014618 48.43344498]
[108.74995422 63.43183136]
[108.52975464 78.43021393]
[108.30955505 93.42859650]
[110.50370789 108.26725006]
[115.05511475 122.56007385]
[119.60651398 136.85289001]
[124.15792084 151.14572144]
[128.70932007 165.43853760]
[141.18943787 176.07710266]
[137.95053101 192.15321350]
[122.32453156 197.12915039]
[110.38611603 185.88610840]
[114.41650391 169.98994446]
[109.86510468 155.69711304]
[105.31369781 141.40429688]
[100.76229095 127.11148071]
[96.21088409 112.81865692]
[88.71109009 112.76360321]
[88.60099030 127.76319885]
[88.49088287 142.76280212]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 17]
[6 16]
[7 15]
[8 14]
[19 196]
[20 195]
[21 194]
[22 193]
[23 192]
[26 183]
[27 182]
[28 181]
[31 178]
[32 177]
[37 171]
[38 170]
[39 169]
[40 168]
[44 161]
[45 160]
[46 159]
[47 158]
[54 151]
[55 150]
[56 149]
[57 148]
[58 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 137]
[67 136]
[68 135]
[69 134]
[74 129]
[75 128]
[77 126]
[78 125]
[79 124]
[80 123]
[81 122]
[82 114]
[83 113]
[84 112]
[85 110]
[86 109]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[94 101]
[95 100]
[197 210]
[198 209]
[199 208]
[200 207]
[201 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
