%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGAUCGCCGAAGCGUCGGACUACCGUUGGUUUCCGCAACUUCCUGGAUUAUCCUCGCCAAGGACUUUGCAAUAUAUUUUUCCGCCUUUUCUGGAAGGAUUUCGCUGCUUCCCGAAGGUCUUGGACGAGCGCUCUAGCUCUGUGGGAAGGUUUUGGGCUCUCUGGCUCGGAUUUUGCAAUUUCUCCCUGGGGACUGCCGUGGAGCCGCAUCCACUGUGGAUUAUAAUUGCAAC\
) } def
/len { sequence length } bind def

/coor [
[160.31098938 580.23034668]
[147.77694702 571.99035645]
[151.73997498 557.52398682]
[144.24818420 557.87481689]
[134.18641663 568.99957275]
[124.12464142 580.12438965]
[114.06286621 591.24914551]
[117.10334778 606.35083008]
[110.74281311 620.18548584]
[97.61089325 627.53509521]
[82.84603119 625.76397705]
[72.78425598 636.88879395]
[62.72248840 648.01354980]
[52.66071701 659.13836670]
[55.70119858 674.24005127]
[49.34066010 688.07470703]
[36.20874405 695.42425537]
[21.44388008 693.65319824]
[11.38210869 704.77795410]
[1.32033777 715.90277100]
[-8.74143314 727.02752686]
[-8.87339211 739.91418457]
[-17.46898460 748.97143555]
[-29.53156471 749.72564697]
[-39.74115372 760.71496582]
[-49.95074081 771.70422363]
[-56.30181503 787.42364502]
[-73.16506958 785.67236328]
[-76.15042114 768.98327637]
[-60.94002151 761.49462891]
[-50.73043442 750.50537109]
[-40.52084351 739.51605225]
[-37.52350235 722.21777344]
[-19.86621475 716.96575928]
[-9.80444336 705.84100342]
[0.25732720 694.71618652]
[10.31909847 683.59143066]
[7.07899618 669.07800293]
[13.07724380 655.27636719]
[26.20573044 647.56298828]
[41.53593445 649.07659912]
[51.59770584 637.95178223]
[61.65947723 626.82702637]
[71.72124481 615.70220947]
[68.48114777 601.18878174]
[74.47939301 587.38714600]
[87.60787964 579.67376709]
[102.93808746 581.18737793]
[112.99985504 570.06262207]
[123.06163025 558.93780518]
[133.12339783 547.81304932]
[137.56753540 533.48651123]
[135.56822205 518.62036133]
[133.56892395 503.75418091]
[131.56962585 488.88800049]
[119.60883331 480.08599854]
[117.36948395 465.03808594]
[126.68292999 452.55218506]
[124.68362427 437.68603516]
[122.68431854 422.81985474]
[120.68501282 407.95370483]
[111.32037354 396.37127686]
[117.14925385 381.66296387]
[115.14994812 366.79678345]
[113.15064240 351.93063354]
[111.02429962 350.12817383]
[109.47770691 347.38174438]
[108.87139893 343.90585327]
[109.48249054 340.04046631]
[111.46387482 336.21890259]
[110.26200104 321.26712036]
[96.31128693 315.99044800]
[85.99261475 305.13531494]
[81.39144135 290.81784058]
[83.47138977 275.86141968]
[91.87296295 263.23999023]
[104.97434235 255.48660278]
[103.77246857 240.53482056]
[102.57059479 225.58305359]
[101.36872101 210.63127136]
[100.16684723 195.67950439]
[98.96497345 180.72773743]
[97.76309967 165.77595520]
[96.56122589 150.82418823]
[95.35935211 135.87242126]
[94.15747833 120.92064667]
[77.44733429 117.36234283]
[64.80086517 100.48277283]
[66.07574463 75.33488464]
[60.59118652 61.37352371]
[55.10662842 47.41216278]
[49.62207031 33.45080185]
[37.37466049 23.43523407]
[39.92264557 8.76018620]
[34.43808746 -5.20117521]
[28.95352745 -19.16253662]
[23.46896744 -33.12389755]
[17.98440742 -47.08525848]
[2.78460765 -49.29017258]
[-9.26640606 -58.81217957]
[-14.92697144 -73.08991241]
[-12.67442513 -88.28272247]
[-3.11468983 -100.30383301]
[11.18071270 -105.91961670]
[26.36639214 -103.61946106]
[38.35747528 -94.02208710]
[43.92842102 -79.70915222]
[41.58067703 -64.53076172]
[31.94576836 -52.56981659]
[37.43032837 -38.60845566]
[42.91488647 -24.64709663]
[48.39944839 -10.68573475]
[53.88400650 3.27562642]
[65.73912048 12.29258347]
[63.58343124 27.96624184]
[69.06799316 41.92760468]
[74.55255127 55.88896561]
[80.03710938 69.85032654]
[94.94036865 68.14951324]
[97.13822937 53.31140137]
[99.33609009 38.47329712]
[95.67581177 21.91917992]
[110.56972504 13.81931782]
[122.47608948 25.88890457]
[114.17419434 40.67115402]
[111.97633362 55.50926208]
[109.77848053 70.34736633]
[124.10501862 74.79150391]
[130.69059753 61.31447983]
[137.27616882 47.83745575]
[143.86175537 34.36043167]
[138.49108887 19.49666786]
[145.27926636 5.22444963]
[160.19897461 0.01123188]
[174.39862061 6.94992399]
[179.45381165 21.92392349]
[172.36538696 36.04941940]
[157.33877563 40.94601059]
[150.75318909 54.42303467]
[144.16761780 67.90005493]
[137.58204651 81.37708282]
[130.02058411 110.58528137]
[109.10925293 119.71877289]
[110.31112671 134.67054749]
[111.51300049 149.62231445]
[112.71487427 164.57408142]
[113.91674805 179.52586365]
[115.11862183 194.47763062]
[116.32049561 209.42939758]
[117.52236938 224.38117981]
[118.72424316 239.33294678]
[119.92610931 254.28472900]
[134.09776306 259.84582520]
[144.40753174 270.96316528]
[148.84982300 285.39529419]
[146.59472656 300.26391602]
[138.14248657 312.62792969]
[125.21376801 320.06524658]
[126.41564178 335.01702881]
[128.01679993 349.93133545]
[130.01611328 364.79748535]
[132.01541138 379.66363525]
[141.52305603 392.30941772]
[135.55117798 405.95440674]
[137.55047607 420.82055664]
[139.54978943 435.68673706]
[141.54908752 450.55288696]
[153.83033752 460.13458252]
[155.64614868 475.23947144]
[146.43577576 486.88870239]
[148.43508911 501.75485229]
[150.43438721 516.62103271]
[152.43370056 531.48718262]
[168.68002319 531.37792969]
[184.35125732 545.41436768]
[195.40853882 555.55023193]
[206.46580505 565.68615723]
[217.52308655 575.82208252]
[228.58036804 585.95794678]
[239.63764954 596.09387207]
[250.69491577 606.22979736]
[261.75219727 616.36566162]
[286.73101807 613.02874756]
[304.66979980 635.77471924]
[317.91921997 642.80700684]
[331.16867065 649.83923340]
[344.41812134 656.87145996]
[360.23510742 656.50683594]
[367.84970093 669.30792236]
[381.09915161 676.34014893]
[394.34857178 683.37237549]
[409.38351440 678.50140381]
[423.42092896 685.76269531]
[428.13269043 700.84826660]
[420.72338867 714.80816650]
[405.58883667 719.36016846]
[391.70809937 711.80364990]
[387.31634521 696.62182617]
[374.06689453 689.58959961]
[360.81747437 682.55737305]
[345.94815063 683.42492676]
[337.38586426 670.12091064]
[324.13644409 663.08868408]
[310.88699341 656.05639648]
[297.63754272 649.02416992]
[287.57577515 660.14898682]
[295.89892578 672.62799072]
[304.22204590 685.10699463]
[312.54516602 697.58599854]
[320.86831665 710.06500244]
[336.25546265 714.60534668]
[342.16571045 729.52001953]
[334.06518555 743.36779785]
[318.16793823 745.52581787]
[306.66897583 734.33868408]
[308.38931274 718.38812256]
[300.06616211 705.90911865]
[291.74304199 693.43011475]
[283.41992188 680.95111084]
[275.09677124 668.47210693]
[264.82958984 666.03417969]
[256.36929321 660.49096680]
[250.56407166 652.74902344]
[247.87364197 643.91021729]
[248.34056091 635.12048340]
[251.61630249 627.42297363]
[240.55902100 617.28704834]
[229.50173950 607.15118408]
[218.44445801 597.01525879]
[207.38717651 586.87933350]
[196.32991028 576.74340820]
[185.27262878 566.60754395]
[174.21534729 556.47161865]
[166.72355652 556.82244873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 51]
[5 50]
[6 49]
[7 48]
[11 44]
[12 43]
[13 42]
[14 41]
[18 37]
[19 36]
[20 35]
[21 34]
[24 32]
[25 31]
[26 30]
[52 173]
[53 172]
[54 171]
[55 170]
[58 167]
[59 166]
[60 165]
[61 164]
[63 162]
[64 161]
[65 160]
[70 159]
[71 158]
[77 152]
[78 151]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
[84 145]
[85 144]
[86 143]
[89 118]
[90 117]
[91 116]
[92 115]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[119 127]
[120 126]
[121 125]
[128 141]
[129 140]
[130 139]
[131 138]
[175 233]
[176 232]
[177 231]
[178 230]
[179 229]
[180 228]
[181 227]
[182 226]
[184 205]
[185 204]
[186 203]
[187 202]
[189 200]
[190 199]
[191 198]
[206 220]
[207 219]
[208 218]
[209 217]
[210 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
