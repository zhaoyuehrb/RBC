%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGUGCCGUGCGUGAGCGUGCGCGGGCGCGUCGGCCGGCGAGGGAGCAGCAAACGGCCGGCGGCGGGUGCCGCGCGGGGGGCGGGCGGCGCGGAGUAGGUGGCGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[162.55656433 329.24877930]
[155.78121948 311.62857056]
[158.73051453 292.90167236]
[170.69380188 278.09277344]
[164.61816406 264.37829590]
[158.54252625 250.66383362]
[152.46687317 236.94937134]
[146.39123535 223.23490906]
[140.31559753 209.52044678]
[134.23995972 195.80596924]
[128.16430664 182.09150696]
[115.93502808 173.58892822]
[117.41956329 157.83752441]
[111.34392548 144.12306213]
[105.26828003 130.40859985]
[91.62380981 129.70314026]
[79.62100220 123.17614746]
[71.61228943 112.10682678]
[69.16732025 98.66468048]
[72.76527405 85.48424530]
[81.70099640 75.14876556]
[76.00894165 61.27070999]
[70.31688690 47.39265060]
[64.62482452 33.51459503]
[58.93276978 19.63653564]
[53.24071121 5.75847769]
[47.54865646 -8.11958027]
[41.66423798 -21.91717529]
[35.58859634 -35.63164139]
[22.92474174 -45.11516953]
[24.84384918 -59.88562393]
[18.76820755 -73.60009003]
[12.69256687 -87.31455994]
[6.61692572 -101.02902222]
[0.54128480 -114.74349213]
[-5.88541794 -121.43675232]
[-5.50672436 -128.92466736]
[-11.19878101 -142.80271912]
[-16.89083862 -156.68078613]
[-22.58289528 -170.55883789]
[-28.27495193 -184.43690491]
[-43.42007065 -183.80352783]
[-57.86751556 -188.39123535]
[-69.87268829 -197.64605713]
[-77.98590088 -210.45040894]
[-81.22745514 -225.25811768]
[-79.20590210 -240.28106689]
[-72.16536713 -253.70518494]
[-60.95601654 -263.90942383]
[-46.93144608 -269.66156006]
[-31.78518677 -270.26702881]
[-17.34622002 -265.65267944]
[-5.35812426 -256.37576294]
[2.73148084 -243.55648804]
[5.94573545 -228.74282837]
[3.89650321 -213.72361755]
[-3.16876149 -200.31251526]
[-14.39689350 -190.12895203]
[-8.70483685 -176.25090027]
[-3.01277995 -162.37284851]
[2.67927694 -148.49478149]
[8.37133408 -134.61672974]
[14.25575066 -120.81912994]
[20.33139229 -107.10466766]
[26.40703392 -93.39019775]
[32.48267365 -79.67572784]
[38.55831528 -65.96126556]
[50.78760147 -57.45868683]
[49.30306244 -41.70728302]
[55.37870407 -27.99281693]
[61.04483795 -23.08290863]
[61.42671585 -13.81163692]
[67.11877441 0.06642109]
[72.81082916 13.94447899]
[78.50288391 27.82253647]
[84.19493866 41.70059586]
[89.88700104 55.57865143]
[95.57905579 69.45671082]
[111.47073364 71.34934998]
[124.27772522 80.94667053]
[130.55599976 95.66777039]
[128.61721802 111.55388641]
[118.98274994 124.33295441]
[125.05838776 138.04742432]
[131.13403320 151.76188660]
[143.79788208 161.24540710]
[141.87878418 176.01586914]
[147.95442200 189.73033142]
[154.03005981 203.44479370]
[160.10569763 217.15927124]
[166.18135071 230.87373352]
[172.25698853 244.58819580]
[178.33262634 258.30267334]
[184.40826416 272.01712036]
[195.96546936 271.47125244]
[207.09585571 274.53057861]
[216.70558167 280.87707520]
[223.85557556 289.87057495]
[227.85339355 300.61331177]
[228.32015991 312.03936768]
[225.22651672 323.02059937]
[218.89378357 332.47796631]
[209.96070862 339.48751831]
[214.47682190 353.79150391]
[218.99293518 368.09552002]
[231.44673157 378.76486206]
[228.16816711 394.83294678]
[212.52992249 399.77029419]
[200.61929321 388.49780273]
[204.68891907 372.61163330]
[200.17280579 358.30761719]
[195.65669250 344.00360107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 94]
[5 93]
[6 92]
[7 91]
[8 90]
[9 89]
[10 88]
[11 87]
[13 85]
[14 84]
[15 83]
[21 78]
[22 77]
[23 76]
[24 75]
[25 74]
[26 73]
[27 72]
[28 70]
[29 69]
[31 67]
[32 66]
[33 65]
[34 64]
[35 63]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[103 112]
[104 111]
[105 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
