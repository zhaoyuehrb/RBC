%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCCCGCGGCAUGGAGCGGGCGUGAUUCAUCAGCAUCCGCGCCGGGGCGGCAUGGGGGCGCGCGCGGCGGCCGCCUAGGCGCCCAGGGCCAGGCAGCGGCGGCUUCCCCGGCCCGGCUCGCCCGCGCUUCUCUCCCUGUGGGCGGCGGCCCGGCGCCUGGAAGGUCAAG\
) } def
/len { sequence length } bind def

/coor [
[-43.38085938 229.89698792]
[-55.89082718 238.17350769]
[-63.13094711 252.24087524]
[-78.01465607 252.81048584]
[-90.52462769 261.08700562]
[-103.03459167 269.36352539]
[-115.54455566 277.64004517]
[-121.00050354 285.01309204]
[-128.35945129 285.95104980]
[-141.01849365 293.99768066]
[-153.67753601 302.04434204]
[-166.33657837 310.09100342]
[-173.83242798 324.02380371]
[-188.72406006 324.32147217]
[-201.38310242 332.36813354]
[-214.04214478 340.41476440]
[-226.70118713 348.46142578]
[-239.28620911 356.62335205]
[-251.79617310 364.89987183]
[-248.53112793 379.72229004]
[-250.84487915 394.72265625]
[-258.42456055 407.87228394]
[-270.24502563 417.39282227]
[-284.70770264 421.99670410]
[-299.85659790 421.06124878]
[-313.64297485 414.71301270]
[-324.20233154 403.81048584]
[-330.10659790 389.82821655]
[-330.55725098 374.65716553]
[-325.49337769 360.34906006]
[-315.59982300 348.83898926]
[-302.21456909 341.68359375]
[-287.14791870 339.85055542]
[-272.43746948 343.58779907]
[-260.07269287 352.38989258]
[-247.56272888 344.11340332]
[-243.70500183 337.77685547]
[-234.74783325 335.80239868]
[-222.08879089 327.75573730]
[-209.42974854 319.70907593]
[-196.77070618 311.66241455]
[-190.18032837 298.30517578]
[-174.38323975 297.43194580]
[-161.72419739 289.38531494]
[-149.06515503 281.33865356]
[-136.40609741 273.29199219]
[-123.82107544 265.13006592]
[-111.31110382 256.85354614]
[-98.80113983 248.57704163]
[-86.29117584 240.30052185]
[-79.94584656 226.82513428]
[-64.16734314 225.66352844]
[-51.65737534 217.38702393]
[-54.67650986 196.38790894]
[-46.72359467 176.64323425]
[-29.88016701 163.51188660]
[-8.65103149 160.59634399]
[11.24044228 168.75471497]
[22.41202545 158.74493408]
[33.58360672 148.73515320]
[44.75519180 138.72537231]
[55.92677307 128.71557617]
[67.09835815 118.70580292]
[69.99237061 111.87509918]
[78.56659698 108.61750793]
[89.91913605 98.81343079]
[93.49346924 91.55287933]
[101.56970978 88.93627167]
[113.09941864 79.34117889]
[124.62912750 69.74607849]
[130.28724670 54.97122955]
[145.01936340 52.77719116]
[156.54907227 43.18209457]
[168.07878113 33.58700180]
[179.60848999 23.99190521]
[191.13819885 14.39681053]
[202.66790771 4.80171490]
[214.19761658 -4.79338026]
[225.72732544 -14.38847542]
[236.33392334 -24.99507713]
[245.92901611 -36.52478409]
[255.52410889 -48.05449295]
[265.11920166 -59.58419800]
[274.71429443 -71.11390686]
[270.33035278 -87.43204498]
[276.46295166 -102.99839020]
[290.51736450 -111.76578522]
[306.86380005 -110.45513153]
[316.24670410 -122.15815735]
[325.62963867 -133.86119080]
[335.01254272 -145.56422424]
[344.39544678 -157.26724243]
[346.99118042 -172.87406921]
[360.98910522 -177.96400452]
[370.37203979 -189.66703796]
[379.75494385 -201.37007141]
[381.14535522 -207.89469910]
[385.05249023 -212.08538818]
[389.70053101 -213.32093811]
[399.50460815 -224.67347717]
[409.30868530 -236.02601624]
[412.56625366 -244.60023499]
[419.39697266 -247.49424744]
[429.40676880 -258.66583252]
[435.47335815 -274.49722290]
[452.36544800 -273.05026245]
[455.65124512 -256.41775513]
[440.57833862 -248.65605164]
[430.56854248 -237.48446655]
[420.66122437 -226.22193909]
[410.85714722 -214.86940002]
[401.05307007 -203.51686096]
[391.45797729 -191.98715210]
[382.07504272 -180.28411865]
[372.69213867 -168.58110046]
[370.76754761 -153.81135559]
[356.09848022 -147.88433838]
[346.71557617 -136.18130493]
[337.33264160 -124.47827148]
[327.94973755 -112.77524567]
[318.56683350 -101.07221222]
[323.26809692 -88.55484772]
[321.14410400 -75.24377441]
[312.64520264 -64.64196777]
[299.91360474 -59.59300613]
[286.24401855 -61.51881027]
[276.64892578 -49.98910522]
[267.05383301 -38.45939636]
[257.45870972 -26.92968941]
[247.86363220 -15.39998245]
[262.49734497 -18.69462395]
[276.85333252 -14.34662151]
[287.19989014 -3.48620391]
[290.84750366 11.06353760]
[286.84799194 25.52050209]
[276.24096680 36.12670135]
[261.78372192 40.12513351]
[247.23425293 36.47642899]
[236.37460327 26.12904739]
[232.02769470 11.77271461]
[235.32241821 -2.85876870]
[223.79270935 6.73632669]
[212.26300049 16.33142281]
[200.73329163 25.92651749]
[189.20358276 35.52161407]
[177.67387390 45.11670685]
[166.14418030 54.71180344]
[154.61447144 64.30690002]
[149.78102112 78.39544678]
[134.22422791 81.27578735]
[122.69451141 90.87088776]
[111.16481018 100.46598053]
[99.72320557 110.16596985]
[88.37066650 119.97003937]
[77.10813904 129.87738037]
[65.93655396 139.88716125]
[54.76497269 149.89694214]
[43.59339142 159.90673828]
[32.42180634 169.91651917]
[21.25022507 179.92630005]
[25.12636375 188.36349487]
[27.02296829 197.44065857]
[26.84984779 206.70040894]
[24.62096405 215.67742920]
[20.45345879 223.92172241]
[14.56150532 231.02125549]
[7.24531555 236.62254333]
[-1.12415826 240.44818115]
[-10.12403011 242.31065369]
[-19.30084801 242.12152100]
[-28.19343758 239.89550781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 53]
[2 52]
[4 50]
[5 49]
[6 48]
[7 47]
[9 46]
[10 45]
[11 44]
[12 43]
[14 41]
[15 40]
[16 39]
[17 38]
[18 36]
[19 35]
[58 160]
[59 159]
[60 158]
[61 157]
[62 156]
[63 155]
[65 154]
[66 153]
[68 152]
[69 151]
[70 150]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[79 141]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[94 115]
[95 114]
[96 113]
[99 112]
[100 111]
[101 110]
[103 109]
[104 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
