%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGGGCGGCUUCCGGGAUUUGGCGGUGGCCUUUGUUGGCUGCAGUAAGAGCUCAGUCUCUUCACCAGGGGCUCCCAGUCCUUCCAUCUGGGAGGCCAAGGCGGCUUCGCGUUCUGAGAAUAGACAGAACCUCUGUUACUCUGUGACCGGCAGGCACCGGGAGAUCCGUAGCUCAGACGCCAGGACAUCCCGGAAGCUGGGAA\
) } def
/len { sequence length } bind def

/coor [
[56.70095444 689.96966553]
[41.45396805 689.26818848]
[28.02533722 682.01324463]
[19.08133507 669.64520264]
[16.39779472 654.61987305]
[20.50753784 639.92047119]
[30.59457016 628.46557617]
[44.65610504 622.52960205]
[45.34547806 607.54541016]
[46.03485489 592.56127930]
[46.72423172 577.57714844]
[47.41360474 562.59295654]
[48.10298157 547.60882568]
[48.79235458 532.62469482]
[49.48173141 517.64050293]
[50.17110443 502.65637207]
[50.86048126 487.67221069]
[51.54985428 472.68807983]
[52.23923111 457.70391846]
[52.92860413 442.71975708]
[53.27338409 427.72372437]
[53.27338409 412.72372437]
[53.27338409 397.72372437]
[53.27338409 382.72372437]
[53.27338409 367.72372437]
[53.27338409 352.72372437]
[40.43895340 344.95986938]
[27.15300560 351.92291260]
[13.86705780 358.88592529]
[0.58111143 365.84893799]
[-12.70483494 372.81195068]
[-25.99078178 379.77496338]
[-30.46166611 394.93368530]
[-44.38164902 402.41763306]
[-59.49225235 397.78674316]
[-66.82862091 383.78842163]
[-62.03821945 368.72763062]
[-47.96310806 361.53967285]
[-32.95380020 366.48901367]
[-19.66785240 359.52600098]
[-6.38190651 352.56298828]
[6.90404034 345.59997559]
[20.18998718 338.63696289]
[33.47593307 331.67395020]
[30.93305779 319.29669189]
[32.72908020 307.09109497]
[38.44670105 296.49716187]
[47.21835327 288.69464111]
[57.85178757 284.47210693]
[68.98971558 284.15002441]
[73.51552582 269.84909058]
[78.04133606 255.54812622]
[82.56714630 241.24719238]
[87.09295654 226.94624329]
[77.69375610 211.24130249]
[82.84254456 193.34521484]
[99.71952057 184.74627686]
[103.80495453 170.31335449]
[107.89038849 155.88043213]
[111.97582245 141.44750977]
[116.06124878 127.01459503]
[80.12168884 117.69440460]
[82.68097687 86.76516724]
[74.62417603 74.11257935]
[60.68536758 66.62791443]
[60.37575150 51.73652649]
[52.31895065 39.08393860]
[37.14950943 35.54476547]
[29.15900612 22.59847260]
[32.62654877 8.15853691]
[24.56974983 -4.49405003]
[10.63094234 -11.97871590]
[10.32132626 -26.87010384]
[2.26452494 -39.52268982]
[-5.79227638 -52.17527771]
[-13.84907722 -64.82786560]
[-21.90587807 -77.48045349]
[-29.96268082 -90.13303375]
[-38.01948166 -102.78562164]
[-53.44679642 -102.74727631]
[-66.43349457 -111.07489014]
[-72.83556366 -125.11116791]
[-70.61013031 -140.37718201]
[-60.46732330 -152.00158691]
[-45.64366913 -156.27510071]
[-30.86934853 -151.83404541]
[-20.85878944 -140.09555054]
[-18.80632782 -124.80532074]
[-25.36689377 -110.84242249]
[-17.31009293 -98.18983459]
[-9.25329208 -85.53725433]
[-1.19649076 -72.88466644]
[6.86031055 -60.23207855]
[14.91711140 -47.57949066]
[22.97391319 -34.92690277]
[36.33644485 -28.34723663]
[37.22233582 -12.55085182]
[45.27913666 0.10173537]
[59.83034897 3.06784844]
[68.18133545 15.78459835]
[64.97154236 31.02713776]
[73.02834320 43.67972565]
[86.39086914 50.25939178]
[87.27676392 66.05577850]
[95.33356476 78.70836639]
[104.68098450 75.43449402]
[115.75431061 76.58936310]
[126.38477325 82.92382812]
[136.78627014 72.11600494]
[147.18774414 61.30818176]
[157.58923340 50.50035858]
[167.99072266 39.69253540]
[168.88464355 35.43242264]
[170.88833618 32.02331543]
[173.59709167 29.70993805]
[176.56832886 28.58010674]
[179.37603760 28.56597900]
[190.42008972 18.41565895]
[201.46414185 8.26533985]
[212.43008423 -1.96930408]
[223.31729126 -12.28767300]
[234.20449829 -22.60604095]
[245.09170532 -32.92441177]
[255.97891235 -43.24277878]
[266.86611938 -53.56114960]
[265.74090576 -69.15819550]
[274.94635010 -81.79914093]
[290.13595581 -85.51531982]
[304.13763428 -78.55206299]
[310.34024048 -64.19721222]
[305.81506348 -49.22868347]
[292.69879150 -40.71416092]
[277.18447876 -42.67394257]
[266.29727173 -32.35557175]
[255.41007996 -22.03720474]
[244.52287292 -11.71883583]
[233.63566589 -1.40046656]
[222.74845886 8.91790199]
[220.05480957 15.80405331]
[211.61445618 19.30938911]
[200.57040405 29.45970917]
[189.52635193 39.61002731]
[178.79855347 50.09402466]
[168.39706421 60.90184784]
[157.99557495 71.70967102]
[147.59408569 82.51749420]
[137.19259644 93.32531738]
[142.90629578 107.19448090]
[157.90232849 107.53926086]
[172.89837646 107.88404083]
[187.89440918 108.22882080]
[199.14909363 97.13343811]
[214.95216370 97.32963562]
[225.92793274 108.70101166]
[225.56466675 124.50112152]
[214.07789612 135.35604858]
[198.28250122 134.82575989]
[187.54962158 123.22485352]
[172.55358887 122.88007355]
[157.55755615 122.53530121]
[142.56152344 122.19052124]
[130.49417114 131.10002136]
[126.40874481 145.53294373]
[122.32331085 159.96586609]
[118.23787689 174.39878845]
[114.15244293 188.83171082]
[121.86388397 197.88739014]
[124.22012329 209.42350769]
[120.74879456 220.54891968]
[112.42340851 228.53216553]
[101.39389801 231.47204590]
[96.86808777 245.77299500]
[92.34227753 260.07394409]
[87.81647491 274.37487793]
[83.29066467 288.67584229]
[97.43801880 303.36547852]
[100.07955933 324.41079712]
[89.19826508 343.56192017]
[68.27338409 352.72372437]
[68.27338409 367.72372437]
[68.27338409 382.72372437]
[68.27338409 397.72372437]
[68.27338409 412.72372437]
[68.27338409 427.72372437]
[70.89002228 432.25137329]
[71.44910431 436.86798096]
[70.26201630 440.77380371]
[67.91275787 443.40914917]
[67.22338104 458.39328003]
[66.53400421 473.37744141]
[65.84462738 488.36160278]
[65.15525818 503.34573364]
[64.46588135 518.32989502]
[63.77650452 533.31402588]
[63.08713150 548.29821777]
[62.39775467 563.28234863]
[61.70838165 578.26647949]
[61.01900482 593.25067139]
[60.32963181 608.23480225]
[59.64025497 623.21893311]
[73.09735107 630.42095947]
[82.08998871 642.75366211]
[84.83267975 657.76837158]
[80.78085327 672.48382568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[17 191]
[18 190]
[19 189]
[20 188]
[21 184]
[22 183]
[23 182]
[24 181]
[25 180]
[26 179]
[27 44]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[57 166]
[58 165]
[59 164]
[60 163]
[61 162]
[63 105]
[64 104]
[66 102]
[67 101]
[70 98]
[71 97]
[73 95]
[74 94]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[108 147]
[109 146]
[110 145]
[111 144]
[112 143]
[117 142]
[118 141]
[119 140]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
[125 133]
[148 161]
[149 160]
[150 159]
[151 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
