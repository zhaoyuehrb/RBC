%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAB4B)
} def

/sequence { (\
GCGGGUCGCGCCGGAGGGGGGCGGAGGCGGAAGUGGCGGUGCCGGGCCCGGGGAGUAGGAAGGAGCCGGGGCUGUAGCCGGAGUGGAGCGGCUGCCAGCCGAGGAGCAGGCGCGGCCGCGGCGCCAUAUUGCGGCCCUCAGCGGCCGCGACCGAGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 156 0.479062169 ubox
2 153 0.341944102 ubox
2 155 0.523779316 ubox
3 152 0.284269443 ubox
3 157 0.014787615 ubox
4 151 0.203268926 ubox
4 152 0.957793263 ubox
5 151 0.979096474 ubox
6 150 0.998950646 ubox
7 147 0.003334506 ubox
7 149 0.999949037 ubox
8 146 0.003626962 ubox
8 148 0.999968051 ubox
9 147 0.999743578 ubox
10 145 0.707065919 ubox
10 146 0.706810469 ubox
11 144 0.999937950 ubox
12 143 0.999971717 ubox
13 142 0.999488282 ubox
14 139 0.107073288 ubox
15 138 0.107779821 ubox
16 137 0.107792717 ubox
16 138 0.014155818 ubox
16 139 0.991192386 ubox
17 136 0.107715310 ubox
17 137 0.023619992 ubox
17 138 0.992054517 ubox
17 139 0.045251901 ubox
18 135 0.107455677 ubox
18 136 0.023896321 ubox
18 137 0.992798895 ubox
18 138 0.045415368 ubox
19 135 0.024144819 ubox
19 136 0.992775870 ubox
19 137 0.046216668 ubox
20 135 0.992546557 ubox
20 136 0.046906548 ubox
21 132 0.165224237 ubox
21 135 0.047550040 ubox
22 131 0.165734041 ubox
22 133 0.985187861 ubox
22 134 0.037490444 ubox
23 130 0.164002958 ubox
23 132 0.984691902 ubox
24 129 0.163667811 ubox
24 130 0.179770782 ubox
25 129 0.195735321 ubox
25 130 0.882086633 ubox
26 125 0.993604384 ubox
26 129 0.105891388 ubox
26 130 0.003414045 ubox
27 37 0.004764068 ubox
27 124 0.999167662 ubox
28 36 0.004763875 ubox
28 123 0.999154031 ubox
29 122 0.996817053 ubox
29 125 0.039652172 ubox
30 124 0.039698746 ubox
33 119 0.999175268 ubox
33 122 0.006146694 ubox
34 118 0.999420892 ubox
34 121 0.006305296 ubox
35 117 0.999909009 ubox
36 116 0.999940274 ubox
36 119 0.006453361 ubox
37 80 0.004690423 ubox
37 114 0.006933450 ubox
37 115 0.999524122 ubox
37 118 0.006454134 ubox
38 73 0.004020377 ubox
38 79 0.005183863 ubox
38 113 0.007164193 ubox
38 117 0.006399492 ubox
38 125 0.004837418 ubox
39 72 0.004133417 ubox
39 78 0.005190278 ubox
39 113 0.999650894 ubox
39 116 0.005040257 ubox
39 124 0.004843609 ubox
40 71 0.004123928 ubox
40 77 0.005151131 ubox
40 112 0.999518577 ubox
40 123 0.004842474 ubox
41 111 0.999889815 ubox
41 116 0.004349907 ubox
41 122 0.004884613 ubox
42 69 0.017717642 ubox
42 110 0.999758483 ubox
42 115 0.005714773 ubox
42 121 0.004892636 ubox
43 68 0.025535327 ubox
43 69 0.050091730 ubox
43 74 0.007576653 ubox
43 109 0.997691888 ubox
43 114 0.005878626 ubox
43 120 0.004885051 ubox
44 67 0.056223960 ubox
44 73 0.126120360 ubox
44 96 0.004314886 ubox
44 100 0.006689178 ubox
44 113 0.005873392 ubox
44 119 0.004564735 ubox
45 66 0.053844023 ubox
45 67 0.354090923 ubox
45 72 0.132704747 ubox
45 73 0.150552761 ubox
45 99 0.006039967 ubox
45 117 0.004601367 ubox
46 56 0.004003058 ubox
46 66 0.355050732 ubox
46 72 0.158941342 ubox
46 107 0.880341100 ubox
46 111 0.005658422 ubox
46 116 0.004608102 ubox
47 53 0.010280431 ubox
47 55 0.004064975 ubox
47 59 0.010130407 ubox
47 63 0.011211737 ubox
47 65 0.355601653 ubox
47 69 0.010885453 ubox
47 70 0.166786826 ubox
47 71 0.158478339 ubox
47 104 0.091948764 ubox
47 106 0.878744899 ubox
47 110 0.005648133 ubox
47 115 0.004601699 ubox
48 52 0.010851626 ubox
48 58 0.010377415 ubox
48 59 0.308552751 ubox
48 62 0.010398939 ubox
48 63 0.373012082 ubox
48 68 0.008414830 ubox
48 69 0.819193595 ubox
48 70 0.158645887 ubox
48 103 0.071191715 ubox
48 104 0.242274707 ubox
48 109 0.004406861 ubox
48 114 0.004198828 ubox
49 58 0.309340286 ubox
49 62 0.373047434 ubox
49 68 0.824091138 ubox
49 69 0.163552166 ubox
49 101 0.021016830 ubox
49 103 0.238687458 ubox
49 112 0.003219661 ubox
50 67 0.829779645 ubox
50 100 0.008962000 ubox
50 111 0.003205856 ubox
51 66 0.828043736 ubox
51 67 0.207559263 ubox
51 99 0.007262400 ubox
51 100 0.006355426 ubox
52 66 0.211457662 ubox
52 67 0.065925859 ubox
52 99 0.005319869 ubox
52 100 0.013407002 ubox
53 66 0.065923821 ubox
53 99 0.011182803 ubox
54 73 0.006592164 ubox
55 66 0.035198048 ubox
55 72 0.006779156 ubox
56 65 0.043298963 ubox
56 71 0.006581194 ubox
58 67 0.157172223 ubox
58 100 0.003609125 ubox
59 66 0.156950976 ubox
59 99 0.003610297 ubox
62 96 0.004264585 ubox
63 95 0.004251320 ubox
64 73 0.007054190 ubox
64 93 0.004403411 ubox
65 72 0.007255502 ubox
65 92 0.004470201 ubox
65 107 0.017068330 ubox
66 71 0.007238159 ubox
66 91 0.004473663 ubox
66 104 0.324069425 ubox
66 106 0.014827530 ubox
67 90 0.004473319 ubox
67 101 0.006021510 ubox
67 103 0.325415391 ubox
68 89 0.004344452 ubox
68 100 0.006484973 ubox
69 99 0.005328191 ubox
69 100 0.030422709 ubox
70 96 0.004417985 ubox
70 99 0.022132747 ubox
70 100 0.971524051 ubox
71 84 0.004203624 ubox
71 95 0.004428855 ubox
71 99 0.977826331 ubox
71 107 0.005277147 ubox
72 83 0.004216969 ubox
72 94 0.004386576 ubox
72 98 0.978115678 ubox
72 106 0.005281519 ubox
73 82 0.004210356 ubox
73 97 0.975129350 ubox
73 105 0.005214720 ubox
74 95 0.721100364 ubox
74 96 0.691942212 ubox
75 94 0.996544620 ubox
76 93 0.999281864 ubox
77 92 0.999943374 ubox
78 86 0.004446260 ubox
78 91 0.999950020 ubox
79 85 0.004471756 ubox
79 90 0.999931989 ubox
80 89 0.999252994 ubox
83 89 0.010492480 ubox
84 88 0.011526331 ubox
85 122 0.003371950 ubox
88 119 0.006122635 ubox
89 101 0.004172332 ubox
89 118 0.006150589 ubox
90 100 0.004300412 ubox
90 117 0.006170408 ubox
91 99 0.004300810 ubox
91 116 0.006170643 ubox
92 98 0.004299648 ubox
92 115 0.006170654 ubox
93 97 0.003874075 ubox
93 114 0.006164742 ubox
94 107 0.004693632 ubox
94 113 0.006168824 ubox
95 104 0.019734810 ubox
95 106 0.004466395 ubox
95 112 0.006141229 ubox
96 103 0.027028051 ubox
96 109 0.005495800 ubox
98 107 0.195246332 ubox
98 111 0.009178101 ubox
99 106 0.195062630 ubox
99 110 0.009326256 ubox
100 109 0.009936946 ubox
106 113 0.003618057 ubox
107 112 0.003620229 ubox
126 130 0.004478443 ubox
4 152 0.9500000 lbox
5 151 0.9500000 lbox
6 150 0.9500000 lbox
7 149 0.9500000 lbox
8 148 0.9500000 lbox
9 147 0.9500000 lbox
10 146 0.9500000 lbox
11 144 0.9500000 lbox
12 143 0.9500000 lbox
13 142 0.9500000 lbox
16 139 0.9500000 lbox
17 138 0.9500000 lbox
18 137 0.9500000 lbox
19 136 0.9500000 lbox
20 135 0.9500000 lbox
22 133 0.9500000 lbox
23 132 0.9500000 lbox
26 125 0.9500000 lbox
27 124 0.9500000 lbox
28 123 0.9500000 lbox
29 122 0.9500000 lbox
33 119 0.9500000 lbox
34 118 0.9500000 lbox
35 117 0.9500000 lbox
36 116 0.9500000 lbox
37 115 0.9500000 lbox
39 113 0.9500000 lbox
40 112 0.9500000 lbox
41 111 0.9500000 lbox
42 110 0.9500000 lbox
43 109 0.9500000 lbox
46 107 0.9500000 lbox
47 106 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
70 100 0.9500000 lbox
71 99 0.9500000 lbox
72 98 0.9500000 lbox
73 97 0.9500000 lbox
74 96 0.9500000 lbox
75 94 0.9500000 lbox
76 93 0.9500000 lbox
77 92 0.9500000 lbox
78 91 0.9500000 lbox
79 90 0.9500000 lbox
80 89 0.9500000 lbox
showpage
end
%%EOF
