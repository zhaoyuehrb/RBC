%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PEX7)
} def

/sequence { (\
ACUUCCGUCCGGUCUGCCUGGUCUCUCUAACCGCGCCAGUGUGCCUCCGACUCGGAACGGCUUCCGCGGCCGGGGCAGCGAGGGCCGGGGGCGGCGGGCGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 101 0.011549572 ubox
2 102 0.037554602 ubox
3 100 0.010454450 ubox
3 101 0.010195912 ubox
3 102 0.026294833 ubox
4 98 0.011919238 ubox
4 101 0.006629366 ubox
4 102 0.615193974 ubox
5 12 0.003163612 ubox
5 97 0.014083070 ubox
5 98 0.004378882 ubox
5 100 0.005399356 ubox
5 101 0.998071838 ubox
5 102 0.017784022 ubox
6 11 0.003187581 ubox
6 96 0.014110080 ubox
6 97 0.004327435 ubox
6 100 0.999655754 ubox
6 101 0.013823967 ubox
7 95 0.014122328 ubox
7 99 0.999766621 ubox
8 94 0.004724707 ubox
8 98 0.995122578 ubox
8 102 0.003292055 ubox
9 93 0.004363889 ubox
9 94 0.014535429 ubox
9 97 0.995364113 ubox
9 98 0.093283176 ubox
9 101 0.005369177 ubox
9 102 0.008883631 ubox
10 93 0.014670251 ubox
10 96 0.994910641 ubox
10 97 0.093818565 ubox
10 100 0.005369117 ubox
10 101 0.009080676 ubox
11 92 0.013811031 ubox
11 95 0.922990480 ubox
11 99 0.003965290 ubox
12 92 0.238892405 ubox
12 95 0.353652443 ubox
12 99 0.009814057 ubox
13 90 0.007415695 ubox
13 91 0.232602178 ubox
13 94 0.388906609 ubox
13 98 0.010461853 ubox
14 90 0.226603315 ubox
14 91 0.176729332 ubox
14 93 0.392688831 ubox
14 94 0.692406959 ubox
14 97 0.010557235 ubox
14 101 0.004766823 ubox
15 89 0.064623863 ubox
15 90 0.163146310 ubox
15 93 0.700002838 ubox
15 96 0.010559105 ubox
15 100 0.004774336 ubox
16 92 0.731146269 ubox
16 95 0.010896548 ubox
16 99 0.004786477 ubox
17 88 0.069931142 ubox
17 89 0.670932575 ubox
17 90 0.197959322 ubox
17 91 0.708024986 ubox
17 94 0.010918073 ubox
17 98 0.004782524 ubox
18 87 0.069058110 ubox
18 88 0.704779755 ubox
18 89 0.178109475 ubox
18 90 0.682334721 ubox
18 93 0.010824132 ubox
18 97 0.004777754 ubox
19 29 0.058584630 ubox
19 87 0.777276539 ubox
19 88 0.135377449 ubox
19 89 0.564105445 ubox
19 96 0.004514669 ubox
20 26 0.019447728 ubox
20 27 0.046072862 ubox
20 28 0.091019581 ubox
20 32 0.017868197 ubox
20 86 0.981034621 ubox
20 92 0.003416651 ubox
20 95 0.003385637 ubox
21 25 0.021443628 ubox
21 26 0.033863929 ubox
21 27 0.093589218 ubox
21 31 0.018030328 ubox
21 85 0.982105333 ubox
21 92 0.010139380 ubox
21 95 0.003885627 ubox
22 30 0.017693917 ubox
22 83 0.445503947 ubox
22 84 0.805213423 ubox
22 91 0.010069696 ubox
22 94 0.004903337 ubox
23 80 0.003516289 ubox
23 82 0.630561829 ubox
23 83 0.670667895 ubox
23 84 0.343696319 ubox
23 89 0.004360715 ubox
23 90 0.010100576 ubox
23 93 0.005005281 ubox
24 81 0.770683394 ubox
24 82 0.248341296 ubox
24 83 0.346464633 ubox
24 89 0.009752482 ubox
25 75 0.011839876 ubox
25 78 0.045978755 ubox
25 80 0.799918329 ubox
25 82 0.556869460 ubox
25 84 0.004178472 ubox
25 88 0.006705126 ubox
25 89 0.005318342 ubox
25 91 0.004971521 ubox
26 74 0.011926456 ubox
26 75 0.004894878 ubox
26 77 0.045631737 ubox
26 81 0.557961807 ubox
26 83 0.004599679 ubox
26 87 0.005626387 ubox
26 88 0.004159901 ubox
26 90 0.004909605 ubox
27 73 0.011525175 ubox
27 74 0.005364394 ubox
27 75 0.033174759 ubox
27 78 0.805283298 ubox
27 80 0.550625312 ubox
27 82 0.006466026 ubox
27 87 0.004534955 ubox
27 89 0.006155447 ubox
28 72 0.011324846 ubox
28 74 0.031996726 ubox
28 77 0.800472330 ubox
28 81 0.006697142 ubox
30 40 0.009205626 ubox
30 42 0.019714944 ubox
31 39 0.009496058 ubox
31 41 0.016119620 ubox
31 69 0.011896653 ubox
31 73 0.631560889 ubox
31 74 0.643438418 ubox
31 75 0.354441300 ubox
31 83 0.014521849 ubox
31 88 0.173988552 ubox
31 89 0.017767267 ubox
32 41 0.155844024 ubox
32 43 0.003540984 ubox
32 68 0.011939546 ubox
32 72 0.642651191 ubox
32 73 0.632535992 ubox
32 74 0.354819029 ubox
32 80 0.016725773 ubox
32 82 0.015106914 ubox
32 87 0.174254345 ubox
32 88 0.017675701 ubox
32 89 0.003935463 ubox
33 40 0.160730478 ubox
33 42 0.010946935 ubox
33 44 0.054678192 ubox
33 67 0.011950503 ubox
33 71 0.653087557 ubox
33 76 0.010058133 ubox
33 79 0.028262026 ubox
33 85 0.006524565 ubox
33 86 0.174261635 ubox
34 39 0.161016810 ubox
34 41 0.012360626 ubox
34 43 0.054798057 ubox
34 66 0.011950472 ubox
34 68 0.004076605 ubox
34 72 0.391092783 ubox
34 75 0.010067996 ubox
34 78 0.028252231 ubox
34 80 0.021651614 ubox
34 84 0.008477709 ubox
34 87 0.007633036 ubox
35 40 0.008062593 ubox
35 42 0.054804063 ubox
35 65 0.011852468 ubox
35 67 0.004668663 ubox
35 70 0.926958808 ubox
35 71 0.277896974 ubox
35 76 0.013328295 ubox
35 79 0.029413927 ubox
35 85 0.174650332 ubox
35 86 0.005443342 ubox
36 41 0.054680255 ubox
36 66 0.004666147 ubox
36 69 0.967241066 ubox
36 73 0.009157217 ubox
36 75 0.013361613 ubox
36 78 0.029414359 ubox
36 83 0.018348731 ubox
36 84 0.174670989 ubox
37 68 0.963577768 ubox
37 72 0.009113208 ubox
37 74 0.013328433 ubox
37 82 0.019107615 ubox
37 83 0.174495632 ubox
38 62 0.009996623 ubox
38 63 0.003223392 ubox
39 61 0.009936826 ubox
39 62 0.003233726 ubox
39 67 0.962053628 ubox
39 70 0.007587630 ubox
39 79 0.041199499 ubox
40 59 0.005073036 ubox
40 60 0.008596386 ubox
40 66 0.961978256 ubox
40 68 0.006401784 ubox
40 69 0.005806876 ubox
40 72 0.008811650 ubox
40 77 0.004327608 ubox
40 78 0.039106824 ubox
40 80 0.154893380 ubox
41 58 0.007168812 ubox
41 61 0.006025110 ubox
41 65 0.952817054 ubox
41 67 0.019238998 ubox
41 71 0.009249526 ubox
41 76 0.004356657 ubox
41 79 0.160895091 ubox
42 57 0.006946492 ubox
42 59 0.004025301 ubox
42 60 0.006268168 ubox
42 66 0.019181250 ubox
42 75 0.004251053 ubox
42 77 0.209302339 ubox
42 78 0.097647571 ubox
42 80 0.005317607 ubox
43 58 0.004859978 ubox
43 61 0.967451887 ubox
43 65 0.006311634 ubox
43 70 0.009576394 ubox
43 76 0.241349401 ubox
43 79 0.015065560 ubox
44 55 0.004685524 ubox
44 60 0.967907878 ubox
44 69 0.009559861 ubox
44 73 0.004365192 ubox
44 75 0.240654578 ubox
44 78 0.015014797 ubox
45 54 0.004717133 ubox
45 59 0.964506299 ubox
45 60 0.003799085 ubox
45 68 0.009523273 ubox
45 72 0.004350535 ubox
45 74 0.239735341 ubox
45 75 0.046240805 ubox
46 55 0.007384951 ubox
46 56 0.923101127 ubox
46 73 0.039361644 ubox
46 74 0.050849765 ubox
47 54 0.007599001 ubox
47 55 0.969324557 ubox
47 60 0.010545264 ubox
47 69 0.013318422 ubox
47 72 0.028111971 ubox
47 73 0.241506295 ubox
48 54 0.969285694 ubox
48 59 0.010663304 ubox
48 68 0.014018677 ubox
48 72 0.242418579 ubox
49 53 0.906768256 ubox
49 58 0.011027481 ubox
49 67 0.014039129 ubox
49 71 0.242785093 ubox
51 69 0.238739784 ubox
52 68 0.235067782 ubox
52 69 0.004985042 ubox
53 66 0.243490016 ubox
53 68 0.007851103 ubox
54 65 0.244357783 ubox
54 67 0.007139384 ubox
55 64 0.244365566 ubox
56 62 0.005189253 ubox
56 63 0.240667054 ubox
57 62 0.195108546 ubox
58 66 0.010899590 ubox
58 72 0.052020211 ubox
58 87 0.013601454 ubox
59 65 0.011101521 ubox
59 71 0.052570643 ubox
59 86 0.013725051 ubox
60 64 0.010924767 ubox
60 67 0.005634933 ubox
60 70 0.052573940 ubox
60 79 0.003405370 ubox
60 85 0.013725804 ubox
61 66 0.005657277 ubox
61 69 0.052566147 ubox
61 78 0.003416909 ubox
61 84 0.013702345 ubox
62 68 0.050334473 ubox
62 77 0.003281354 ubox
62 83 0.013457309 ubox
63 82 0.012273195 ubox
64 73 0.005188809 ubox
64 82 0.003196701 ubox
65 72 0.005204395 ubox
65 80 0.013693999 ubox
66 71 0.004962514 ubox
66 79 0.013804613 ubox
67 78 0.013753637 ubox
69 76 0.013657332 ubox
70 75 0.013668940 ubox
5 101 0.9500000 lbox
6 100 0.9500000 lbox
7 99 0.9500000 lbox
8 98 0.9500000 lbox
9 97 0.9500000 lbox
10 96 0.9500000 lbox
11 95 0.9500000 lbox
17 89 0.9500000 lbox
18 88 0.9500000 lbox
19 87 0.9500000 lbox
20 86 0.9500000 lbox
21 85 0.9500000 lbox
22 84 0.9500000 lbox
23 83 0.9500000 lbox
24 81 0.9500000 lbox
25 80 0.9500000 lbox
27 78 0.9500000 lbox
28 77 0.9500000 lbox
31 74 0.9500000 lbox
32 73 0.9500000 lbox
35 70 0.9500000 lbox
36 69 0.9500000 lbox
37 68 0.9500000 lbox
39 67 0.9500000 lbox
40 66 0.9500000 lbox
41 65 0.9500000 lbox
43 61 0.9500000 lbox
44 60 0.9500000 lbox
45 59 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
showpage
end
%%EOF
