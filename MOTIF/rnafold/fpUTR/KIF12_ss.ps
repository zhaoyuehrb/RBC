%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGACAUCAGGAUGUACCAUCUGCCCUUCUGUCGGACCCCAGGGUACGUCCCAUGAGCGCGGCCGAGCUGCGUCGAGGGCAGCAGAGCGUGCUGCACUGCUCAGGGACCCGGACUCUGCAGUUUCUCCUGCACUGUUUUCACCUUUGGCCAGACGGGCUCUGGGAAGACCUACACCCUGACUGGACCCCCUCCCCAGGGGGAGGGGGUGCCUGUACCCCCCAGCCUGGCUGGCAUC\
) } def
/len { sequence length } bind def

/coor [
[507.33248901 264.34051514]
[505.47427368 247.25250244]
[491.24542236 242.50488281]
[477.01657104 237.75726318]
[462.78771973 233.00964355]
[448.55886841 228.26202393]
[434.33001709 223.51440430]
[420.10116577 218.76676941]
[401.47430420 223.99649048]
[388.36853027 208.66352844]
[374.01977539 204.29156494]
[359.67105103 199.91961670]
[345.32232666 195.54765320]
[330.97360229 191.17570496]
[324.28237915 199.91514587]
[315.23168945 206.22552490]
[304.66690063 209.49777222]
[293.58078003 209.40751648]
[283.02023315 205.94715881]
[273.98739624 199.42811584]
[267.34457397 190.45286560]
[263.73193359 179.85922241]
[263.50588989 168.64228821]
[249.40676880 163.52227783]
[235.30763245 158.40226746]
[221.20851135 153.28225708]
[212.70259094 163.07341003]
[201.35055542 169.41195679]
[188.48954773 171.52647400]
[175.64292908 169.14454651]
[164.33979797 162.52766418]
[155.93301392 152.44271851]
[151.43724060 140.07310486]
[151.40657043 126.87995911]
[137.44689941 121.39110565]
[123.48722839 115.90225220]
[109.52754974 110.41339874]
[94.53921509 111.00475311]
[81.05538177 117.57638550]
[67.57155609 124.14801025]
[58.85078049 138.03614807]
[42.47518921 137.15748596]
[35.29058075 122.41593170]
[44.68786621 108.97632599]
[60.99992371 110.66418457]
[74.48375702 104.09255219]
[87.96758270 97.52092743]
[88.26326752 90.02675629]
[88.85462189 75.03841400]
[89.15030670 67.54425049]
[76.22614288 59.93069839]
[63.30198669 52.31715393]
[50.37782669 44.70360565]
[37.45366669 37.09005737]
[28.49004555 35.43611526]
[24.41060448 29.29054070]
[11.58763599 21.50777245]
[-1.23533130 13.72500229]
[-14.05829906 5.94223309]
[-26.88126755 -1.84053648]
[-39.85518646 -9.36897755]
[-52.97501373 -16.64016342]
[-66.09484100 -23.91135025]
[-79.21466827 -31.18253708]
[-92.33449554 -38.45372391]
[-105.50182343 -45.63852310]
[-118.71609497 -52.73662949]
[-133.67921448 -48.40733337]
[-146.97924805 -55.79406738]
[-151.01435852 -70.08579254]
[-164.22862244 -77.18389893]
[-177.44288635 -84.28200531]
[-190.65716553 -91.38011169]
[-203.91778564 -98.39122009]
[-217.22421265 -105.31501770]
[-230.53063965 -112.23881531]
[-247.37237549 -114.18627167]
[-250.16328430 -130.90892029]
[-234.86676025 -138.22004700]
[-223.60684204 -125.54524231]
[-210.30041504 -118.62144470]
[-196.99398804 -111.69764709]
[-189.62373352 -111.39891052]
[-183.55905151 -104.59438324]
[-170.34478760 -97.49627686]
[-157.13050842 -90.39817047]
[-143.91624451 -83.30006409]
[-129.77261353 -87.82698822]
[-116.27034760 -80.81674194]
[-111.61798859 -65.95089722]
[-98.40371704 -58.85279083]
[-91.03802490 -58.45721054]
[-85.06330872 -51.57354736]
[-71.94348145 -44.30236435]
[-58.82365417 -37.03117752]
[-45.70382690 -29.75999069]
[-32.58399963 -22.48880386]
[-29.12842751 -23.09322548]
[-25.20906830 -22.06578255]
[-21.59072495 -19.20684242]
[-19.09849739 -14.66350365]
[-6.27552938 -6.88073492]
[6.54743814 0.90203476]
[19.37040520 8.68480396]
[32.19337463 16.46757317]
[45.06721497 24.16589737]
[57.99137497 31.77944565]
[70.91553497 39.39299393]
[83.83969116 47.00653839]
[96.76385498 54.62008667]
[115.01641083 96.45372009]
[128.97607422 101.94257355]
[142.93576050 107.43142700]
[156.89543152 112.92028809]
[169.28547668 101.00643921]
[185.58711243 95.73320007]
[202.49766541 98.11790466]
[216.61338806 107.63156128]
[225.11450195 122.31521606]
[226.32852173 139.18312073]
[240.42764282 144.30313110]
[254.52677917 149.42314148]
[268.62591553 154.54315186]
[282.83508301 141.54493713]
[301.60260010 137.61050415]
[319.68041992 143.75463867]
[332.05676270 158.18568420]
[335.34555054 176.82698059]
[349.69427490 181.19892883]
[364.04302979 185.57089233]
[378.39175415 189.94284058]
[392.74047852 194.31480408]
[402.00622559 188.66387939]
[412.63366699 189.02694702]
[421.13394165 195.04383850]
[424.84878540 204.53793335]
[439.07763672 209.28555298]
[453.30648804 214.03317261]
[467.53533936 218.78079224]
[481.76419067 223.52841187]
[495.99304199 228.27604675]
[510.22189331 233.02366638]
[518.71099854 222.92442322]
[530.09637451 216.32194519]
[543.01544189 213.98133850]
[555.93060303 216.15917969]
[567.31213379 222.57554626]
[575.81945801 232.44982910]
[580.45904541 244.59561157]
[580.70025635 257.56323242]
[594.79937744 262.68322754]
[608.89849854 267.80325317]
[622.99761963 272.92324829]
[637.09680176 278.04327393]
[652.70916748 275.48110962]
[662.03106689 287.09799194]
[676.13018799 292.21798706]
[690.22930908 297.33798218]
[704.32843018 302.45800781]
[718.42755127 307.57800293]
[732.52673340 312.69802856]
[746.70989990 306.25787354]
[760.93548584 311.65115356]
[766.98773193 325.21231079]
[781.08685303 330.33233643]
[795.18603516 335.45233154]
[785.67712402 323.85144043]
[780.84783936 309.65008545]
[781.31335449 294.65731812]
[787.01434326 280.78292847]
[797.22460938 269.79431152]
[810.64355469 263.09118652]
[825.56182861 261.52743530]
[840.07910156 265.30224609]
[852.34606934 273.93478394]
[860.80017090 286.32543945]
[864.36456299 300.89578247]
[862.58508301 315.78985596]
[855.68847656 329.11041260]
[844.55322266 339.16058350]
[830.59777832 344.66021729]
[815.60217285 344.90908813]
[828.62530518 352.35211182]
[844.44598389 352.48217773]
[851.65661621 365.51504517]
[864.67974854 372.95803833]
[877.75152588 380.31530762]
[890.87133789 387.58648682]
[903.99114990 394.85766602]
[917.11096191 402.12887573]
[930.23083496 409.40005493]
[943.35064697 416.67123413]
[956.47045898 423.94241333]
[969.59027100 431.21359253]
[982.71008301 438.48480225]
[995.82995605 445.75598145]
[1012.20812988 444.92773438]
[1020.88616943 458.84265137]
[1012.93670654 473.18624878]
[996.53759766 473.20306396]
[988.55877686 458.87579346]
[975.43890381 451.60461426]
[962.31909180 444.33343506]
[949.19927979 437.06225586]
[936.07946777 429.79107666]
[922.95959473 422.51986694]
[909.83978271 415.24868774]
[896.71997070 407.97750854]
[883.60015869 400.70632935]
[870.48028564 393.43511963]
[863.12048340 392.94277954]
[857.23675537 385.98117065]
[844.21362305 378.53814697]
[829.32446289 378.94046021]
[821.18225098 365.37521362]
[808.15917969 357.93222046]
[801.68603516 359.16934204]
[794.80627441 356.34759521]
[790.06597900 349.55145264]
[775.96685791 344.43145752]
[761.86773682 339.31146240]
[748.52398682 345.82907104]
[734.15252686 340.83752441]
[727.40667725 326.79714966]
[713.30755615 321.67715454]
[699.20843506 316.55712891]
[685.10931396 311.43713379]
[671.01019287 306.31710815]
[656.91101074 301.19711304]
[642.30712891 304.12548828]
[631.97674561 292.14239502]
[617.87762451 287.02239990]
[603.77850342 281.90237427]
[589.67938232 276.78237915]
[575.58026123 271.66235352]
[563.82550049 283.82077026]
[547.88330078 289.62796021]
[530.95214844 287.86718750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 142]
[3 141]
[4 140]
[5 139]
[6 138]
[7 137]
[8 136]
[10 132]
[11 131]
[12 130]
[13 129]
[14 128]
[23 123]
[24 122]
[25 121]
[26 120]
[34 114]
[35 113]
[36 112]
[37 111]
[38 47]
[39 46]
[40 45]
[50 110]
[51 109]
[52 108]
[53 107]
[54 106]
[56 105]
[57 104]
[58 103]
[59 102]
[60 101]
[61 97]
[62 96]
[63 95]
[64 94]
[65 93]
[66 91]
[67 90]
[70 87]
[71 86]
[72 85]
[73 84]
[74 82]
[75 81]
[76 80]
[150 235]
[151 234]
[152 233]
[153 232]
[154 231]
[156 229]
[157 228]
[158 227]
[159 226]
[160 225]
[161 224]
[164 221]
[165 220]
[166 219]
[182 216]
[183 215]
[185 213]
[186 212]
[187 210]
[188 209]
[189 208]
[190 207]
[191 206]
[192 205]
[193 204]
[194 203]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
