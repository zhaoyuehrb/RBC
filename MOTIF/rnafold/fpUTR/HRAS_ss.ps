%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGUCUCCGCCGCCCGUGCCCUGCGCCCGCAACCCGAGCCGCACCCGCCGCGGACGGAGCCCAUGCGCGGGGCGAACCGCGCGCCCCCGCCCCCGCCCCGCCCCGGCCUCGGCCCCGGCCCUGGCCCCGGGGGCAGUCGCGCCUGUGAACGGUGGGGCAGGAGACCCUGUAGGAGGACCCCGGGCCGCAGGCCCCUGAGGAGCG\
) } def
/len { sequence length } bind def

/coor [
[164.80259705 292.26742554]
[179.66075134 290.20950317]
[193.68151855 295.54034424]
[203.41874695 306.94888306]
[195.59101868 294.15332031]
[187.76329041 281.35772705]
[179.93556213 268.56216431]
[172.10784912 255.76658630]
[164.28012085 242.97102356]
[156.35505676 230.23550415]
[148.33311462 217.56079102]
[140.31117249 204.88606262]
[123.76178741 201.90330505]
[114.30234528 187.59347534]
[118.19215393 170.53996277]
[109.97785187 157.98904419]
[101.76355743 145.43814087]
[93.54925537 132.88723755]
[79.84917450 126.77921295]
[65.02326965 129.05792236]
[50.19736481 131.33663940]
[35.37145996 133.61534119]
[20.54555511 135.89405823]
[5.71964931 138.17277527]
[-9.10625648 140.45147705]
[-23.93216133 142.73019409]
[-38.75806808 145.00889587]
[-49.36884689 160.69996643]
[-67.76325226 163.60661316]
[-82.19161987 152.34457397]
[-96.94113922 155.07435608]
[-102.57883453 164.38204956]
[-112.21103668 168.95434570]
[-122.55181122 167.49882507]
[-130.21801758 160.73562622]
[-145.04393005 163.01434326]
[-159.86982727 165.29304504]
[-168.11619568 175.21408081]
[-180.51443481 176.80497742]
[-190.34634399 169.75373840]
[-205.20527649 171.80609131]
[-220.06420898 173.85844421]
[-234.92314148 175.91079712]
[-243.08746338 189.24787903]
[-257.93096924 194.16770935]
[-272.44497681 188.34729004]
[-279.77642822 174.53485107]
[-276.46365356 159.25219727]
[-264.07083130 149.71533203]
[-248.44946289 150.42727661]
[-236.97549438 161.05186462]
[-222.11656189 158.99951172]
[-207.25762939 156.94715881]
[-192.39869690 154.89480591]
[-179.14735413 143.39219666]
[-162.14854431 150.46714783]
[-147.32263184 148.18843079]
[-132.49673462 145.90972900]
[-118.34422302 132.73757935]
[-99.67092133 140.32484436]
[-84.92140198 137.59506226]
[-80.64579773 127.01249695]
[-71.69889069 119.73408508]
[-60.23171616 117.65889740]
[-49.07419968 121.41667175]
[-41.03677750 130.18299866]
[-26.21087265 127.90428162]
[-11.38496685 125.62557220]
[3.44093871 123.34686279]
[18.26684380 121.06815338]
[33.09275055 118.78944397]
[47.91865540 116.51073456]
[62.74456024 114.23202515]
[77.57046509 111.95330811]
[75.75607300 102.19217682]
[77.83433533 92.91711426]
[83.14877319 85.55238342]
[90.57337189 81.09623718]
[98.73535919 79.98917389]
[103.45755768 65.75186920]
[108.17974854 51.51456070]
[112.68427277 37.20689774]
[116.97008514 22.83220291]
[121.25589752 8.45750999]
[125.54170990 -5.91718388]
[115.10769653 -17.10103798]
[111.69509888 -31.90816307]
[116.12282562 -46.33943558]
[127.10602570 -56.54851151]
[141.62683105 -59.86694717]
[145.91264343 -74.24163818]
[150.19845581 -88.61633301]
[154.48426819 -102.99102783]
[158.77008057 -117.36572266]
[163.05589294 -131.74041748]
[167.34170532 -146.11511230]
[161.78727722 -165.49053955]
[176.39239502 -178.15898132]
[180.23783875 -192.65768433]
[174.09512329 -211.85470581]
[188.30711365 -224.96266174]
[191.70861816 -239.57189941]
[195.11012268 -254.18113708]
[187.02400208 -267.49475098]
[190.68173218 -282.26214600]
[203.42405701 -289.88897705]
[206.82556152 -304.49819946]
[210.22706604 -319.10745239]
[204.94651794 -334.63314819]
[215.95397949 -346.78912354]
[231.92590332 -343.07034302]
[236.43176270 -327.30236816]
[224.83630371 -315.70593262]
[221.43479919 -301.09671021]
[218.03329468 -286.48745728]
[226.09620667 -274.01651001]
[222.85472107 -259.15219116]
[209.71936035 -250.77963257]
[206.31785583 -236.17039490]
[202.91635132 -221.56115723]
[209.07589722 -213.40200806]
[209.73944092 -202.98040771]
[204.44667053 -193.72450256]
[194.73655701 -188.81224060]
[190.89111328 -174.31352234]
[196.79896545 -165.97033691]
[197.14437866 -155.53335571]
[191.57180786 -146.44316101]
[181.71640015 -141.82929993]
[177.43058777 -127.45460510]
[173.14477539 -113.07991028]
[168.85896301 -98.70521545]
[164.57315063 -84.33052063]
[160.28733826 -69.95582581]
[156.00152588 -55.58113480]
[166.33422852 -44.85263062]
[169.93347168 -30.29579926]
[165.73542786 -15.79604912]
[154.77133179 -5.27533293]
[139.91641235 -1.63137114]
[135.63059998 12.74332237]
[131.34478760 27.11801529]
[127.05896759 41.49271011]
[128.50404358 46.04848099]
[127.09976196 51.56042099]
[122.41705322 56.23675156]
[117.69486237 70.47406006]
[112.97267151 84.71136475]
[122.13140106 105.19654083]
[106.10016632 124.67293549]
[114.31446075 137.22384644]
[122.52876282 149.77474976]
[130.74305725 162.32565308]
[144.15927124 163.54376221]
[154.27581787 172.14189148]
[157.54347229 184.80937195]
[152.98588562 196.86412048]
[161.00782776 209.53883362]
[169.02976990 222.21356201]
[176.26644897 227.79408264]
[177.07569885 235.14329529]
[184.90342712 247.93887329]
[192.73114014 260.73443604]
[200.55886841 273.53002930]
[208.38659668 286.32559204]
[216.21430969 299.12115479]
[226.90148926 309.64657593]
[239.81494141 317.27825928]
[252.72840881 324.90994263]
[268.56170654 322.32412720]
[280.35809326 333.19723511]
[279.06838989 349.18838501]
[265.68197632 358.03048706]
[250.46771240 352.94067383]
[245.09672546 337.82339478]
[232.18325806 330.19171143]
[219.26980591 322.56002808]
[213.76820374 327.65734863]
[217.09542847 342.28366089]
[202.76502991 337.85195923]
[197.26342773 342.94924927]
[203.88922119 356.40655518]
[210.92231750 369.65554810]
[218.35617065 382.68386841]
[225.79003906 395.71221924]
[233.22390747 408.74053955]
[240.65777588 421.76889038]
[253.75909424 432.52954102]
[247.04577637 448.09771729]
[230.22758484 445.95645142]
[227.62944031 429.20275879]
[220.19557190 416.17440796]
[212.76170349 403.14608765]
[205.32783508 390.11773682]
[197.89396667 377.08941650]
[195.22442627 376.22183228]
[192.73841858 374.24246216]
[190.86192322 371.21612549]
[189.98947144 367.36083984]
[190.43191528 363.03231812]
[183.80613708 349.57504272]
[168.80615234 349.60202026]
[155.63638306 342.42169189]
[147.53337097 329.79864502]
[146.48849487 314.83508301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[9 161]
[10 159]
[11 158]
[12 157]
[15 153]
[16 152]
[17 151]
[18 150]
[19 74]
[20 73]
[21 72]
[22 71]
[23 70]
[24 69]
[25 68]
[26 67]
[27 66]
[30 61]
[31 60]
[35 58]
[36 57]
[37 56]
[40 54]
[41 53]
[42 52]
[43 51]
[79 148]
[80 147]
[81 146]
[82 143]
[83 142]
[84 141]
[85 140]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[98 125]
[99 124]
[101 120]
[102 119]
[103 118]
[106 115]
[107 114]
[108 113]
[167 177]
[168 176]
[169 175]
[181 201]
[182 200]
[183 195]
[184 194]
[185 193]
[186 192]
[187 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
