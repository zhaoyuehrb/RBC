%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGCCUGUGUCUUUCCAUUUCUCUAACUUCACAUUACCAGAAAUGCACAGUUCAUGUGGGAUGACAUUUAUUCAAGGUGAUUGGGAGAUUUUAACUUAGAUCUCCAGCAAGUGCUACAAGGAAGAAAAGAUCCUGAAGAAUCAAUCAAGUUUUCCGUGAAGUCAAGUCCAAGUAACAUCCCCGCCUUAACCACAAGCAGGAGAA\
) } def
/len { sequence length } bind def

/coor [
[103.27455139 287.37686157]
[107.49022675 272.44342041]
[119.69924164 262.86639404]
[119.01652527 247.88192749]
[118.33380127 232.89747620]
[117.65108490 217.91302490]
[109.34252930 205.55110168]
[116.44370270 191.41307068]
[115.76097870 176.42861938]
[115.07826233 161.44415283]
[114.39554596 146.45970154]
[107.71041107 143.05984497]
[101.12562561 156.53724670]
[94.11269379 169.79692078]
[80.74246216 162.99714661]
[87.32725525 149.51982117]
[94.34014893 136.26013184]
[87.65502167 132.86027527]
[75.14359283 141.13458252]
[62.63216400 149.40888977]
[50.12073517 157.68319702]
[37.60931015 165.95750427]
[25.09788132 174.23181152]
[12.58645344 182.50611877]
[16.14365196 197.24119568]
[14.44355011 212.30390930]
[7.69144630 225.87538147]
[-3.29731178 236.31678772]
[-17.19577789 242.36727905]
[-32.32564545 243.29623413]
[-46.85990524 238.99145508]
[-59.04347992 229.97279358]
[-67.40514374 217.32928467]
[-70.93518066 202.58769226]
[-69.20732117 187.52812195]
[-62.43022156 173.96911621]
[-51.42223740 163.54798889]
[-37.51264572 157.52311707]
[-22.38109398 156.62205505]
[-7.85478926 160.95359802]
[4.31214476 169.99468994]
[16.82357216 161.72038269]
[29.33500099 153.44607544]
[41.84642792 145.17176819]
[54.35785675 136.89746094]
[66.86928558 128.62315369]
[79.38071442 120.34884644]
[75.55342865 105.84533691]
[60.58839417 104.82170105]
[45.62336349 103.79805756]
[30.65833282 102.77442169]
[17.67016411 112.19180298]
[2.24845886 107.77020264]
[-3.77656960 92.90148926]
[4.21696424 78.99166870]
[20.09710503 76.71117401]
[31.68196869 87.80939484]
[46.64699936 88.83303070]
[61.61203003 89.85666656]
[76.57706451 90.88030243]
[80.73350525 76.46766663]
[67.52148438 69.36536407]
[54.30947495 62.26306534]
[41.09746170 55.16076279]
[27.88544655 48.05846024]
[14.67343235 40.95616150]
[-2.14055252 38.78216171]
[-4.70608902 22.02345276]
[10.68747330 14.91890526]
[21.77573395 27.74414635]
[34.98774719 34.84644699]
[48.19976044 41.94874954]
[61.41177368 49.05105209]
[74.62378693 56.15335083]
[87.83580017 63.25565338]
[102.76287842 61.77831650]
[114.32637787 52.22397614]
[125.88987732 42.66963577]
[137.45338440 33.11529160]
[149.01687622 23.56095123]
[160.58038330 14.00660896]
[150.71380615 -8.27336884]
[149.57717896 -32.84907532]
[157.49485779 -56.39029694]
[173.55276489 -75.64527893]
[195.70057678 -87.88977814]
[192.53738403 -102.55245972]
[189.37417603 -117.21513367]
[186.21098328 -131.87782288]
[183.04779053 -146.54049683]
[179.88459778 -161.20317078]
[176.72138977 -175.86585999]
[173.55819702 -190.52853394]
[160.14334106 -198.88421631]
[156.64739990 -214.29699707]
[165.14442444 -227.62275696]
[180.59330750 -230.95555115]
[193.82849121 -222.31811523]
[196.99777222 -206.83485413]
[188.22088623 -193.69172668]
[191.38407898 -179.02905273]
[194.54727173 -164.36637878]
[197.71046448 -149.70368958]
[200.87367249 -135.04101562]
[204.03686523 -120.37833405]
[207.20005798 -105.71565247]
[210.36325073 -91.05297089]
[225.35633850 -90.59774017]
[229.40328979 -105.04149628]
[233.45024109 -119.48526001]
[228.86441040 -135.23016357]
[240.40086365 -146.88531494]
[256.19189453 -142.46087646]
[259.99304199 -126.50833893]
[247.89401245 -115.43830872]
[243.84706116 -100.99454498]
[239.80010986 -86.55078888]
[257.32443237 -74.66904449]
[269.99005127 -58.40525055]
[283.30831909 -65.30622864]
[292.00164795 -78.52503967]
[306.86166382 -77.51057434]
[320.17993164 -84.41155243]
[333.49819946 -91.31252289]
[346.81649780 -98.21350098]
[360.13476562 -105.11447906]
[373.45303345 -112.01544952]
[375.88879395 -127.22640991]
[386.68798828 -137.96098328]
[401.56140137 -140.25119019]
[414.77325439 -133.42585754]
[428.09152222 -140.32684326]
[441.40982056 -147.22781372]
[445.29138184 -152.58618164]
[450.51300049 -154.83932495]
[455.23867798 -154.12918091]
[468.76025391 -160.62277222]
[482.28182983 -167.11637878]
[491.08270264 -180.95388794]
[507.45294189 -179.98062134]
[514.55224609 -165.19778442]
[505.07745361 -151.81271362]
[488.77542114 -153.59480286]
[475.25384521 -147.10119629]
[461.73226929 -140.60758972]
[448.31079102 -133.90953064]
[434.99252319 -127.00856018]
[421.67422485 -120.10758209]
[419.63131714 -105.37786865]
[409.18307495 -94.54743958]
[394.18557739 -91.91526031]
[380.35403442 -98.69717407]
[367.03573608 -91.79619598]
[353.71746826 -84.89522552]
[340.39920044 -77.99424744]
[327.08090210 -71.09326935]
[313.76263428 -64.19229889]
[306.02194214 -51.46709061]
[290.20928955 -51.98794556]
[276.89102173 -45.08697128]
[279.12927246 -38.08258438]
[280.56741333 -30.86923599]
[281.18685913 -23.53803253]
[280.97933960 -16.18162537]
[279.94696045 -8.89303112]
[278.10241699 -1.76445985]
[275.46850586 5.11384916]
[272.07818604 11.65477467]
[267.97384644 17.77541351]
[263.20706177 23.39813423]
[257.83770752 28.45155525]
[251.93338013 32.87146378]
[245.56846619 36.60161591]
[238.82319641 39.59446335]
[231.78266907 41.81175613]
[224.53575134 43.22502899]
[217.17398071 43.81597900]
[209.79040527 43.57667923]
[202.47837830 42.50970459]
[195.33041382 40.62810135]
[188.43699646 37.95521927]
[181.88543701 34.52443314]
[175.75877380 30.37871742]
[170.13471985 25.57011032]
[158.57122803 35.12445068]
[147.00772095 44.67879486]
[135.44421387 54.23313522]
[123.88071442 63.78747559]
[112.31721497 73.34181976]
[129.33190918 79.78495026]
[141.78080750 97.11734772]
[143.01176453 121.61409760]
[129.38000488 145.77697754]
[130.06271362 160.76144409]
[130.74543762 175.74589539]
[131.42816162 190.73034668]
[139.78555298 204.16406250]
[132.63554382 217.23030090]
[133.31825256 232.21475220]
[134.00097656 247.19921875]
[134.68370056 262.18365479]
[147.71301270 270.61077881]
[153.26919556 285.09899902]
[149.21577454 300.07730103]
[137.11135864 309.78622437]
[121.61036682 310.49246216]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 201]
[4 200]
[5 199]
[6 198]
[8 196]
[9 195]
[10 194]
[11 193]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[48 60]
[49 59]
[50 58]
[51 57]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[66 70]
[76 189]
[77 188]
[78 187]
[79 186]
[80 185]
[81 184]
[86 107]
[87 106]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[108 117]
[109 116]
[110 115]
[119 160]
[120 159]
[122 157]
[123 156]
[124 155]
[125 154]
[126 153]
[127 152]
[131 148]
[132 147]
[133 146]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
