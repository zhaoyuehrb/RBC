%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ARHGAP19)
} def

/sequence { (\
GGGGCGGGACGUAAGGUGGGGCGGUGAAAGAAGUUUGCUGACGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.008273498 ubox
2 36 0.014928481 ubox
2 38 0.008148156 ubox
2 39 0.015877793 ubox
3 35 0.017856403 ubox
3 38 0.013275063 ubox
3 39 0.206344753 ubox
4 12 0.437920505 ubox
4 17 0.100688470 ubox
4 22 0.608972465 ubox
4 25 0.016256655 ubox
4 34 0.019370466 ubox
4 38 0.216959832 ubox
5 11 0.446338993 ubox
5 16 0.104036152 ubox
5 18 0.041801407 ubox
5 21 0.628447134 ubox
5 23 0.052006424 ubox
5 24 0.015537026 ubox
5 26 0.018171930 ubox
5 33 0.019524806 ubox
5 37 0.217042809 ubox
5 40 0.028802470 ubox
5 43 0.090352819 ubox
6 10 0.417873746 ubox
6 17 0.035780273 ubox
6 22 0.054558547 ubox
6 25 0.015753914 ubox
6 35 0.008629572 ubox
6 36 0.188907447 ubox
6 39 0.028686611 ubox
6 42 0.090771339 ubox
7 34 0.011884974 ubox
7 35 0.155806269 ubox
7 36 0.092670710 ubox
7 38 0.028309253 ubox
7 39 0.003581548 ubox
8 34 0.101919053 ubox
8 35 0.136270093 ubox
8 36 0.005127441 ubox
8 38 0.003737262 ubox
9 17 0.660899900 ubox
9 25 0.043334507 ubox
9 34 0.166426017 ubox
9 35 0.005630097 ubox
10 16 0.666077217 ubox
10 18 0.068717309 ubox
10 23 0.142277937 ubox
10 24 0.033358763 ubox
10 26 0.003442053 ubox
10 33 0.176836291 ubox
10 37 0.003188401 ubox
10 40 0.009124617 ubox
10 43 0.357660120 ubox
11 17 0.054894066 ubox
11 22 0.149416381 ubox
11 38 0.033327904 ubox
11 42 0.364373728 ubox
12 16 0.015701352 ubox
12 18 0.010371775 ubox
12 21 0.148995411 ubox
12 26 0.014864524 ubox
12 37 0.033393620 ubox
12 40 0.010846562 ubox
12 41 0.354274757 ubox
13 17 0.010541587 ubox
13 25 0.014982234 ubox
13 36 0.033115649 ubox
13 39 0.008804630 ubox
14 35 0.032277317 ubox
14 39 0.103401567 ubox
15 34 0.029708416 ubox
15 38 0.105357606 ubox
15 39 0.315246210 ubox
16 22 0.040606887 ubox
16 25 0.021648841 ubox
16 38 0.320345354 ubox
16 42 0.353777625 ubox
17 21 0.038261084 ubox
17 23 0.028217877 ubox
17 24 0.020720996 ubox
17 26 0.070189564 ubox
17 37 0.305758562 ubox
17 40 0.012860954 ubox
17 41 0.351425027 ubox
17 43 0.120517707 ubox
18 22 0.027978153 ubox
18 25 0.068801056 ubox
18 35 0.008753699 ubox
18 36 0.247290894 ubox
18 39 0.013074079 ubox
18 42 0.165120370 ubox
19 34 0.008469310 ubox
19 35 0.208657910 ubox
19 36 0.178529720 ubox
19 38 0.012950837 ubox
19 39 0.236227676 ubox
20 34 0.163125524 ubox
20 35 0.250496238 ubox
20 36 0.007846578 ubox
20 38 0.179133390 ubox
20 39 0.288528271 ubox
21 34 0.297343224 ubox
21 35 0.007989104 ubox
21 38 0.333859192 ubox
22 33 0.323666596 ubox
22 37 0.367822625 ubox
22 40 0.545982313 ubox
22 43 0.024116644 ubox
23 35 0.036719078 ubox
23 36 0.355953724 ubox
23 39 0.756887284 ubox
23 42 0.036063989 ubox
24 34 0.033896547 ubox
24 35 0.329732590 ubox
24 38 0.778159820 ubox
24 42 0.061360757 ubox
25 33 0.033241206 ubox
25 37 0.775423525 ubox
25 40 0.005595719 ubox
25 41 0.060664484 ubox
25 43 0.031730970 ubox
26 35 0.058490045 ubox
26 36 0.755634679 ubox
26 39 0.009719514 ubox
26 42 0.041405273 ubox
27 34 0.064456723 ubox
27 35 0.751593883 ubox
27 36 0.156901343 ubox
28 34 0.685152794 ubox
28 35 0.175585235 ubox
28 36 0.034075852 ubox
29 34 0.180240340 ubox
29 35 0.036939144 ubox
29 36 0.027143085 ubox
29 39 0.055672158 ubox
30 34 0.027951375 ubox
30 35 0.023720248 ubox
30 36 0.026329874 ubox
30 38 0.056643361 ubox
31 35 0.022916748 ubox
32 39 0.037112451 ubox
33 38 0.037941827 ubox
33 42 0.187082412 ubox
34 41 0.186839979 ubox
34 44 0.005764121 ubox
34 45 0.097094038 ubox
34 46 0.011504563 ubox
35 40 0.182091911 ubox
35 41 0.006009322 ubox
35 43 0.005592263 ubox
35 44 0.111596270 ubox
35 45 0.017379467 ubox
35 46 0.007761860 ubox
36 40 0.006584929 ubox
36 43 0.113103345 ubox
36 44 0.018078141 ubox
36 45 0.011955264 ubox
37 42 0.112088082 ubox
38 46 0.035025632 ubox
39 45 0.037076218 ubox
4 22 0.9500000 lbox
5 21 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
showpage
end
%%EOF
