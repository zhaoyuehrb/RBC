%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NID1)
} def

/sequence { (\
GGGAGGCGGGAGGAGAGGGGGCUGCCAGGGGCGUCCGGUUACAUCCCCGCCUUCCUCUGUCCUGGCCGCGGGACCGGGUUUGCGGGACCGCAGUUCGGGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 54 0.003454845 ubox
1 55 0.994341697 ubox
1 56 0.070737373 ubox
1 57 0.033962344 ubox
1 58 0.003987009 ubox
2 54 0.996042228 ubox
2 55 0.086990395 ubox
2 56 0.010902976 ubox
2 57 0.003590015 ubox
3 53 0.995350699 ubox
3 54 0.086909894 ubox
3 55 0.010048199 ubox
4 52 0.997737441 ubox
4 53 0.061804738 ubox
5 51 0.999929306 ubox
5 52 0.010024297 ubox
6 50 0.999960899 ubox
6 51 0.007348303 ubox
7 49 0.999917236 ubox
8 47 0.308321591 ubox
8 48 0.949497669 ubox
9 46 0.436049287 ubox
9 47 0.896085996 ubox
9 48 0.056800928 ubox
10 45 0.533969761 ubox
10 46 0.818380060 ubox
10 47 0.080176160 ubox
11 39 0.007185318 ubox
11 40 0.028757166 ubox
11 44 0.612395333 ubox
12 39 0.030369683 ubox
12 40 0.026446731 ubox
12 45 0.562024339 ubox
12 46 0.207850885 ubox
13 39 0.026340482 ubox
13 40 0.338400737 ubox
13 44 0.507019392 ubox
13 45 0.282810966 ubox
13 46 0.003865926 ubox
14 39 0.359235985 ubox
14 40 0.179543541 ubox
14 44 0.287557952 ubox
15 39 0.166811745 ubox
15 40 0.428031017 ubox
15 45 0.040835358 ubox
16 23 0.003368430 ubox
16 39 0.424269064 ubox
16 40 0.226456733 ubox
16 44 0.040772552 ubox
17 22 0.003456725 ubox
17 36 0.533029717 ubox
17 39 0.221730802 ubox
17 40 0.070190450 ubox
17 45 0.004336331 ubox
18 35 0.533267147 ubox
18 36 0.084833968 ubox
18 39 0.062826811 ubox
18 40 0.046981385 ubox
18 44 0.004295004 ubox
18 45 0.004329581 ubox
19 34 0.527841432 ubox
19 35 0.081012560 ubox
19 36 0.829731840 ubox
19 39 0.014834965 ubox
19 40 0.004215920 ubox
19 44 0.003855578 ubox
19 45 0.003180932 ubox
19 46 0.003201986 ubox
20 34 0.070021075 ubox
20 35 0.830627260 ubox
20 36 0.136902665 ubox
20 40 0.008840716 ubox
20 45 0.003245330 ubox
21 32 0.536108465 ubox
21 34 0.830228401 ubox
21 35 0.137001393 ubox
21 39 0.009190894 ubox
22 29 0.003167964 ubox
22 30 0.019332420 ubox
22 31 0.535776016 ubox
22 33 0.830608602 ubox
22 38 0.009226865 ubox
23 28 0.005809316 ubox
23 29 0.027008827 ubox
23 30 0.529117681 ubox
23 33 0.141025278 ubox
23 37 0.008191798 ubox
24 32 0.843548645 ubox
24 36 0.003303096 ubox
24 39 0.008151311 ubox
25 31 0.843920408 ubox
25 38 0.008351041 ubox
26 30 0.837786937 ubox
26 37 0.008324373 ubox
28 36 0.008196540 ubox
29 35 0.008204191 ubox
29 36 0.003252293 ubox
30 34 0.005314705 ubox
30 35 0.003278440 ubox
37 45 0.050602451 ubox
37 46 0.023728885 ubox
38 44 0.049505502 ubox
38 45 0.032176298 ubox
39 43 0.045947893 ubox
56 99 0.010520713 ubox
56 100 0.015653127 ubox
57 98 0.012650888 ubox
57 99 0.015150290 ubox
58 97 0.012687981 ubox
58 98 0.006945681 ubox
59 74 0.003378219 ubox
59 96 0.012708648 ubox
59 102 0.275236235 ubox
60 73 0.004706031 ubox
60 99 0.066901325 ubox
60 100 0.915576496 ubox
60 101 0.197460032 ubox
61 72 0.004911293 ubox
61 98 0.086397986 ubox
61 99 0.995821927 ubox
62 71 0.004912237 ubox
62 93 0.007098655 ubox
62 97 0.086741582 ubox
62 98 0.996076247 ubox
62 99 0.004097205 ubox
63 70 0.004907213 ubox
63 92 0.007046917 ubox
63 97 0.994601759 ubox
63 98 0.003771012 ubox
64 69 0.004895182 ubox
64 91 0.003290050 ubox
64 95 0.117307963 ubox
64 96 0.989751092 ubox
65 94 0.693297972 ubox
65 95 0.708139847 ubox
66 93 0.974462647 ubox
68 91 0.999048883 ubox
69 90 0.999964296 ubox
70 89 0.999963491 ubox
71 88 0.999975443 ubox
72 88 0.003268174 ubox
74 85 0.999968558 ubox
74 86 0.004919436 ubox
75 84 0.999955236 ubox
75 85 0.004360958 ubox
75 98 0.003253344 ubox
76 83 0.997208574 ubox
77 96 0.003488444 ubox
78 95 0.003490153 ubox
80 93 0.004280642 ubox
81 92 0.004606464 ubox
82 91 0.004688594 ubox
83 90 0.004688542 ubox
84 89 0.004623958 ubox
1 55 0.9500000 lbox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
7 49 0.9500000 lbox
8 48 0.9500000 lbox
9 47 0.9500000 lbox
10 46 0.9500000 lbox
12 45 0.9500000 lbox
13 44 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
60 100 0.9500000 lbox
61 99 0.9500000 lbox
62 98 0.9500000 lbox
63 97 0.9500000 lbox
64 96 0.9500000 lbox
65 94 0.9500000 lbox
66 93 0.9500000 lbox
68 91 0.9500000 lbox
69 90 0.9500000 lbox
70 89 0.9500000 lbox
71 88 0.9500000 lbox
74 85 0.9500000 lbox
75 84 0.9500000 lbox
76 83 0.9500000 lbox
showpage
end
%%EOF
