%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LCN1)
} def

/sequence { (\
ACAGCCUCUCCCAGCCCCAGCAAGCGACCUGUCAGGCGGCCGUGGACUCAGACUCCGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.006955037 ubox
1 43 0.188119600 ubox
2 31 0.008049310 ubox
2 42 0.208335001 ubox
2 44 0.038021234 ubox
3 9 0.041652924 ubox
3 30 0.008056815 ubox
3 43 0.035542862 ubox
3 48 0.133142944 ubox
3 54 0.151366271 ubox
4 8 0.044601174 ubox
4 15 0.093335307 ubox
4 21 0.011317058 ubox
4 29 0.008022750 ubox
4 37 0.115592557 ubox
4 40 0.248302958 ubox
4 43 0.013202145 ubox
4 47 0.143647268 ubox
4 53 0.161380843 ubox
5 14 0.092998763 ubox
5 20 0.011168444 ubox
5 36 0.115829338 ubox
5 39 0.249974935 ubox
5 42 0.015302955 ubox
5 45 0.243706042 ubox
5 58 0.138391453 ubox
6 14 0.015307890 ubox
6 35 0.115798149 ubox
6 38 0.249664566 ubox
6 39 0.006956822 ubox
6 44 0.244085199 ubox
6 45 0.030541679 ubox
6 51 0.198319462 ubox
6 57 0.138652021 ubox
6 58 0.018735437 ubox
6 60 0.199936844 ubox
7 13 0.019141354 ubox
7 27 0.008209491 ubox
7 34 0.111081134 ubox
7 36 0.090272239 ubox
7 38 0.007303788 ubox
7 39 0.005913643 ubox
7 44 0.028588413 ubox
7 45 0.016251491 ubox
7 46 0.073292286 ubox
7 50 0.195506095 ubox
7 52 0.141516048 ubox
7 57 0.015760859 ubox
7 58 0.011677639 ubox
7 59 0.204166028 ubox
8 14 0.010141353 ubox
8 24 0.005232828 ubox
8 26 0.008969472 ubox
8 35 0.091761029 ubox
8 36 0.040941410 ubox
8 38 0.008301582 ubox
8 39 0.011207541 ubox
8 44 0.021047972 ubox
8 45 0.078503737 ubox
8 51 0.146661118 ubox
8 57 0.015606981 ubox
8 58 0.203914959 ubox
8 60 0.562655295 ubox
9 13 0.011242047 ubox
9 23 0.005065560 ubox
9 27 0.011921418 ubox
9 34 0.090536638 ubox
9 35 0.037570806 ubox
9 36 0.011177148 ubox
9 38 0.010892743 ubox
9 39 0.010260169 ubox
9 44 0.071693293 ubox
9 45 0.022080808 ubox
9 46 0.366572047 ubox
9 50 0.130601059 ubox
9 52 0.068899538 ubox
9 57 0.165669928 ubox
9 58 0.008742669 ubox
9 59 0.580178531 ubox
10 26 0.012503503 ubox
10 35 0.015218426 ubox
10 36 0.030611061 ubox
10 38 0.013729161 ubox
10 39 0.093035478 ubox
10 44 0.037191795 ubox
10 45 0.390370362 ubox
10 51 0.076075524 ubox
10 57 0.048664601 ubox
10 58 0.580874888 ubox
11 35 0.030576496 ubox
11 36 0.011552212 ubox
11 38 0.092425739 ubox
11 39 0.356590701 ubox
11 44 0.385178050 ubox
11 45 0.458457953 ubox
11 57 0.575093466 ubox
11 58 0.071512561 ubox
12 31 0.109379990 ubox
12 35 0.011736626 ubox
12 38 0.360172506 ubox
12 44 0.464846667 ubox
12 57 0.080086696 ubox
13 30 0.109279574 ubox
13 43 0.434520864 ubox
13 48 0.109431899 ubox
13 54 0.100051260 ubox
14 21 0.222587742 ubox
14 25 0.114732685 ubox
14 29 0.099702002 ubox
14 32 0.015638305 ubox
14 37 0.477594181 ubox
14 40 0.792745850 ubox
14 43 0.012215442 ubox
14 47 0.111792878 ubox
14 53 0.102427736 ubox
15 20 0.222245708 ubox
15 24 0.116651142 ubox
15 31 0.014436207 ubox
15 36 0.477158190 ubox
15 39 0.794982046 ubox
15 42 0.014766663 ubox
15 45 0.060821436 ubox
15 58 0.010780653 ubox
16 35 0.475972389 ubox
16 36 0.039829922 ubox
16 38 0.794601826 ubox
16 39 0.010503841 ubox
16 44 0.060617999 ubox
16 45 0.066292645 ubox
16 57 0.010833475 ubox
16 58 0.010096837 ubox
17 35 0.052459854 ubox
17 36 0.790476146 ubox
17 38 0.011372575 ubox
17 39 0.040140405 ubox
17 44 0.064061383 ubox
17 45 0.172944093 ubox
17 57 0.010029634 ubox
17 58 0.013686872 ubox
18 31 0.438629667 ubox
18 35 0.788793990 ubox
18 38 0.040131561 ubox
18 44 0.174113094 ubox
18 57 0.013708624 ubox
19 30 0.442513352 ubox
19 43 0.166382620 ubox
19 48 0.082394008 ubox
20 29 0.441677736 ubox
20 32 0.722008699 ubox
20 37 0.076868237 ubox
20 40 0.063718383 ubox
20 43 0.091855233 ubox
20 47 0.085118903 ubox
21 31 0.733921763 ubox
21 36 0.076834856 ubox
21 39 0.063801871 ubox
21 42 0.115847388 ubox
21 44 0.028245321 ubox
22 30 0.663103556 ubox
22 43 0.029028314 ubox
23 30 0.384760048 ubox
24 29 0.456583750 ubox
24 32 0.126785828 ubox
24 37 0.051877738 ubox
24 40 0.249763026 ubox
24 43 0.162341675 ubox
25 31 0.129588870 ubox
25 36 0.051652863 ubox
25 38 0.135715887 ubox
25 39 0.246929649 ubox
25 42 0.167199597 ubox
26 30 0.080050740 ubox
26 33 0.039674534 ubox
26 37 0.144892640 ubox
26 41 0.167076168 ubox
26 49 0.005387815 ubox
26 55 0.004831320 ubox
27 32 0.035249565 ubox
27 43 0.013344061 ubox
27 48 0.005236257 ubox
27 54 0.004770596 ubox
28 36 0.285001399 ubox
28 39 0.151981467 ubox
28 42 0.013672750 ubox
28 45 0.007222264 ubox
29 35 0.285051078 ubox
29 36 0.009443525 ubox
29 38 0.151514849 ubox
29 39 0.069179291 ubox
29 44 0.007246368 ubox
29 51 0.010654883 ubox
30 34 0.256807420 ubox
30 35 0.011059586 ubox
30 38 0.070652263 ubox
30 50 0.010561782 ubox
31 37 0.105686819 ubox
31 40 0.025837495 ubox
31 47 0.009857284 ubox
31 49 0.009766812 ubox
31 53 0.003943051 ubox
32 36 0.098905587 ubox
32 39 0.025975107 ubox
32 45 0.006164599 ubox
32 46 0.010471851 ubox
32 52 0.003957692 ubox
33 38 0.025852821 ubox
33 44 0.006959602 ubox
33 45 0.010313190 ubox
33 51 0.003946178 ubox
34 43 0.007076260 ubox
34 48 0.003396202 ubox
35 41 0.010227505 ubox
35 47 0.003661763 ubox
36 40 0.010078053 ubox
36 43 0.011060207 ubox
37 42 0.011491397 ubox
37 44 0.004703568 ubox
37 57 0.013615705 ubox
38 43 0.009785477 ubox
38 48 0.004511995 ubox
38 49 0.006778499 ubox
38 54 0.006492901 ubox
38 55 0.012076865 ubox
38 56 0.095941980 ubox
39 47 0.005182621 ubox
39 48 0.006186853 ubox
39 53 0.007179478 ubox
39 54 0.010896459 ubox
39 55 0.095931870 ubox
40 58 0.294060289 ubox
41 57 0.299131825 ubox
42 53 0.145760598 ubox
42 56 0.292123401 ubox
43 50 0.076250177 ubox
43 52 0.145857627 ubox
43 57 0.161979250 ubox
44 49 0.080070405 ubox
44 54 0.194776496 ubox
44 55 0.206764932 ubox
44 56 0.612937491 ubox
45 53 0.202990726 ubox
45 54 0.194195260 ubox
45 55 0.614578915 ubox
46 54 0.589404517 ubox
47 58 0.045515372 ubox
47 60 0.538737323 ubox
48 57 0.043938545 ubox
48 58 0.035921192 ubox
48 59 0.547746726 ubox
49 57 0.050804715 ubox
49 58 0.548540685 ubox
53 60 0.037309972 ubox
54 59 0.035112058 ubox
8 60 0.9500000 lbox
9 59 0.9500000 lbox
10 58 0.9500000 lbox
11 57 0.9500000 lbox
14 40 0.9500000 lbox
15 39 0.9500000 lbox
16 38 0.9500000 lbox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
44 56 0.9500000 lbox
45 55 0.9500000 lbox
46 54 0.9500000 lbox
showpage
end
%%EOF
