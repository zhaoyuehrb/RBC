%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAUUUCCGGGGUCGGGGUAUAUAAGCGGGGCGCGAGGGCGCUGCUGCUGCCACCGCUCCUGCCACUGCAGUGCUCGAGCCCCGUGCAGGGGAGCUUGCGGGAGGAUCGACCGACAGACGGACGCACGCCGAGGCACUGCGCCCCCAGCCCCGCGCCGGUGCCACCGCAGCCCGACCCCGGCCGCCAGUCCAGCCGCCCCUCGCCCGGUGCCUAGGUGCCCGGCCCCACACCGCCAGCUGCUCGGCGCCCGGGU\
CCGCC\
) } def
/len { sequence length } bind def

/coor [
[576.68316650 531.35852051]
[561.68542480 531.09967041]
[547.77178955 525.49511719]
[536.78210449 515.28601074]
[530.16943359 501.82223511]
[528.80828857 486.88412476]
[532.87860107 472.44692993]
[541.84216309 460.41967773]
[554.51373291 452.39273071]
[569.21771240 449.42749023]
[584.00738525 451.91516113]
[572.12084961 442.76583862]
[560.23431396 433.61651611]
[548.34777832 424.46722412]
[536.35192871 415.46163940]
[524.24859619 406.60110474]
[512.14526367 397.74053955]
[499.98883057 388.95300293]
[487.77972412 380.23880005]
[475.57061768 371.52456665]
[463.36151123 362.81036377]
[451.15240479 354.09613037]
[437.65368652 360.39300537]
[422.71615601 359.07901001]
[410.36029053 350.40725708]
[403.96194458 336.62475586]
[405.33029175 321.39074707]
[393.12118530 312.67651367]
[380.91207886 303.96231079]
[368.70294189 295.24807739]
[356.49383545 286.53387451]
[344.28472900 277.81964111]
[332.07562256 269.10543823]
[319.87808228 274.49081421]
[306.50421143 273.14288330]
[295.45016479 265.30676270]
[289.65859985 252.93756104]
[290.73553467 239.21368408]
[278.63220215 230.35313416]
[266.52886963 221.49259949]
[254.42552185 212.63206482]
[242.32218933 203.77151489]
[230.21885681 194.91098022]
[218.00973511 186.19676208]
[205.69662476 177.63012695]
[193.38351440 169.06349182]
[181.07038879 160.49685669]
[168.60462952 152.15391541]
[155.99026489 144.03741455]
[143.32727051 135.99696350]
[130.61613464 128.03286743]
[117.90498352 120.06876373]
[103.15252686 126.70964813]
[87.25934601 123.68585205]
[75.97628021 112.09151459]
[73.38600922 96.12195587]
[59.73471451 89.90566254]
[43.96888351 91.22821045]
[35.59246063 78.91217804]
[21.94116974 72.69588470]
[8.28987885 66.47959137]
[-5.36141157 60.26330185]
[-21.12724304 61.58585358]
[-29.50366783 49.26981354]
[-43.15495682 43.05352402]
[-48.28923416 43.54805756]
[-52.67222595 42.17893600]
[-55.72420883 39.53741455]
[-57.18058395 36.35845947]
[-70.59855652 29.65337753]
[-84.01651764 22.94829559]
[-97.43448639 16.24321175]
[-106.47860718 15.21338749]
[-110.97287750 9.37581921]
[-124.30916595 2.50971675]
[-137.64546204 -4.35638523]
[-141.90303040 -4.00441313]
[-145.68013000 -4.91673517]
[-148.64199829 -6.79181528]
[-150.58422852 -9.25108814]
[-151.44650269 -11.88742733]
[-164.43688965 -19.38742828]
[-177.42727661 -26.88742828]
[-190.41764832 -34.38742828]
[-206.22383118 -31.64076805]
[-218.13015747 -42.39339066]
[-217.00311279 -58.39680862]
[-203.70727539 -67.37456512]
[-188.44206238 -62.43969345]
[-182.91764832 -47.37780762]
[-169.92727661 -39.87780762]
[-156.93688965 -32.37780762]
[-143.94650269 -24.87780952]
[-130.77935791 -17.69267654]
[-117.44306946 -10.82657337]
[-104.10677338 -3.96047139]
[-90.72940826 2.82524419]
[-77.31143951 9.53032684]
[-63.89347076 16.23541069]
[-50.47550201 22.94049263]
[-36.93866730 29.40223312]
[-23.28737640 35.61852646]
[-8.49797726 33.85134506]
[0.85487962 46.61201096]
[14.50617027 52.82830429]
[28.15745926 59.04459381]
[41.80875015 65.26088715]
[56.59814835 63.49370575]
[65.95100403 76.25437164]
[79.60229492 82.47066498]
[81.97965240 80.03475952]
[84.64562988 77.91862488]
[79.85610962 63.70382309]
[75.06658173 49.48902893]
[61.39076233 41.10144806]
[59.56477737 25.16264915]
[70.98936462 13.89951134]
[86.90056610 15.95215034]
[95.09265900 29.74595642]
[89.28137970 44.69950485]
[94.07090759 58.91430283]
[98.86042786 73.12909698]
[114.91213989 77.61759186]
[125.23676300 90.70217133]
[125.86907959 107.35762024]
[138.58023071 115.32171631]
[151.29136658 123.28581238]
[160.19458008 125.18041229]
[164.10676575 131.42304993]
[176.72113037 139.53956604]
[181.87312317 139.78919983]
[186.01341248 141.77494812]
[188.65339661 144.82826233]
[189.63702393 148.18374634]
[201.95013428 156.75038147]
[214.26325989 165.31700134]
[226.57637024 173.88363647]
[233.07156372 174.81260681]
[237.47920227 178.33779907]
[239.07939148 182.80763245]
[251.18272400 191.66818237]
[263.28607178 200.52871704]
[275.38940430 209.38926697]
[287.49273682 218.24980164]
[299.59606934 227.11035156]
[315.64566040 221.72436523]
[331.58117676 226.92539978]
[341.17098999 240.47073364]
[340.78982544 256.89630127]
[352.99896240 265.61053467]
[365.20806885 274.32473755]
[377.41717529 283.03897095]
[389.62628174 291.75317383]
[401.83538818 300.46740723]
[414.04449463 309.18164062]
[428.00680542 302.93652344]
[443.12060547 304.50823975]
[455.33721924 313.37506104]
[461.43457031 327.07461548]
[459.86660767 341.88702393]
[472.07571411 350.60122681]
[484.28482056 359.31546021]
[496.49392700 368.02969360]
[508.70306396 376.74389648]
[517.47619629 379.17056274]
[521.00579834 385.63720703]
[533.10913086 394.49774170]
[545.21252441 403.35830688]
[551.68347168 404.44332886]
[556.00494385 408.07360840]
[557.49707031 412.58065796]
[569.38360596 421.72998047]
[581.27020264 430.87930298]
[593.15673828 440.02862549]
[605.81970215 448.06906128]
[619.15600586 454.93518066]
[632.49230957 461.80126953]
[645.82855225 468.66735840]
[659.16485596 475.53347778]
[674.97607422 474.97125244]
[682.75006104 487.67614746]
[696.08636475 494.54226685]
[709.42260742 501.40835571]
[718.45367432 502.54696655]
[722.87738037 508.43820190]
[736.13006592 515.46435547]
[749.38275146 522.49047852]
[762.67749023 529.43670654]
[776.01373291 536.30279541]
[782.57476807 536.36614990]
[787.40917969 539.27862549]
[789.58544922 543.49804688]
[802.75262451 550.68322754]
[815.91979980 557.86834717]
[829.08691406 565.05346680]
[847.49548340 564.19580078]
[856.01733398 579.55187988]
[869.27001953 586.57800293]
[883.47247314 575.52508545]
[901.03234863 571.83489990]
[918.37933350 576.21008301]
[932.00738525 587.71807861]
[939.18322754 603.98980713]
[938.49462891 621.70703125]
[951.99230957 628.25012207]
[965.48999023 634.79321289]
[981.28314209 633.85058594]
[989.36065674 646.36468506]
[1002.85833740 652.90777588]
[1016.35607910 659.45086670]
[1029.85375977 665.99395752]
[1043.35144043 672.53704834]
[1059.65991211 670.81469727]
[1069.08557129 684.23437500]
[1061.93212891 698.99108887]
[1045.55847168 699.90435791]
[1036.80834961 686.03472900]
[1023.31066895 679.49163818]
[1009.81298828 672.94854736]
[996.31524658 666.40545654]
[982.81756592 659.86236572]
[967.98992920 661.27301025]
[958.94689941 648.29095459]
[945.44921875 641.74786377]
[931.95153809 635.20477295]
[923.27716064 643.75970459]
[912.38018799 649.26275635]
[900.29827881 651.17315674]
[888.18688965 649.29321289]
[877.20904541 643.78820801]
[868.42340088 635.17248535]
[862.68249512 624.26098633]
[860.54962158 612.09252930]
[862.24383545 599.83068848]
[848.99121094 592.80456543]
[837.35961914 596.05426025]
[826.27026367 590.33483887]
[821.90179443 578.22064209]
[808.73461914 571.03546143]
[795.56750488 563.85034180]
[782.40032959 556.66522217]
[769.14764404 549.63909912]
[755.81134033 542.77301025]
[748.44897461 542.50622559]
[742.35662842 535.74316406]
[729.10394287 528.71704102]
[715.85125732 521.69085693]
[702.55651855 514.74462891]
[689.22021484 507.87854004]
[675.88397217 501.01245117]
[661.02661133 502.06579590]
[652.29876709 488.86975098]
[638.96246338 482.00366211]
[625.62615967 475.13757324]
[612.28991699 468.27145386]
[598.95361328 461.40536499]
[607.49676514 473.73474121]
[611.06646729 488.30380249]
[609.19067383 503.18603516]
[602.11737061 516.41363525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 174]
[12 173]
[13 172]
[14 171]
[15 168]
[16 167]
[17 166]
[18 164]
[19 163]
[20 162]
[21 161]
[22 160]
[27 155]
[28 154]
[29 153]
[30 152]
[31 151]
[32 150]
[33 149]
[38 145]
[39 144]
[40 143]
[41 142]
[42 141]
[43 140]
[44 137]
[45 136]
[46 135]
[47 134]
[48 130]
[49 129]
[50 127]
[51 126]
[52 125]
[56 110]
[57 109]
[59 107]
[60 106]
[61 105]
[62 104]
[64 102]
[65 101]
[69 100]
[70 99]
[71 98]
[72 97]
[74 96]
[75 95]
[76 94]
[81 93]
[82 92]
[83 91]
[84 90]
[112 122]
[113 121]
[114 120]
[175 256]
[176 255]
[177 254]
[178 253]
[179 252]
[181 250]
[182 249]
[183 248]
[185 247]
[186 246]
[187 245]
[188 243]
[189 242]
[192 241]
[193 240]
[194 239]
[195 238]
[197 235]
[198 234]
[204 225]
[205 224]
[206 223]
[208 221]
[209 220]
[210 219]
[211 218]
[212 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
