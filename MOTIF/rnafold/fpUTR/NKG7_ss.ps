%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUGUGACAAAGCGCAGGACCCCUCACUGCCCCAACUGCUUGCUGUUCUCUCUUUCUUGGGCUCUAAGGACCCAGGAGUCUGGGUGCACAGCCUCCUUCUCUCUGAGAUUCAAGAGUCUGAUCAGCAGCCUCUUCCUCCUCCAGGACCCAGAAGCCCUGAGCUUAUCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.42423248 328.16491699]
[77.34683228 329.56158447]
[62.63345718 325.98452759]
[49.88011169 317.82174683]
[40.47017670 305.95867920]
[35.42437744 291.68218994]
[35.29004288 276.54083252]
[40.08174133 262.17703247]
[49.27970886 250.14891052]
[61.88621521 241.76113892]
[76.53380585 237.92358398]
[77.62873840 222.96359253]
[78.72366333 208.00361633]
[79.81859589 193.04362488]
[73.03096771 179.78552246]
[81.75497437 166.58694458]
[82.84990692 151.62696838]
[83.94483185 136.66697693]
[85.03976440 121.70699310]
[79.18824768 117.01554108]
[71.05516052 129.61921692]
[62.92206955 142.22290039]
[58.38712311 156.52096558]
[44.03038406 160.86653137]
[32.32750320 151.48342896]
[33.44799423 136.52534485]
[46.41767502 128.99049377]
[56.95144653 118.31155396]
[67.48522186 107.63262177]
[61.63370514 102.94116211]
[47.26969528 107.26264954]
[41.26204300 121.70018005]
[27.35593033 128.85238647]
[12.11740112 125.34222412]
[2.74162221 112.82707977]
[3.65554976 97.21622467]
[14.42765522 85.88063049]
[29.97167969 84.17260742]
[42.94820786 92.89864349]
[57.31221771 88.57715607]
[80.73788452 80.82148743]
[97.32742310 90.18360901]
[96.77958679 75.19361877]
[96.23175812 60.20362854]
[95.68392944 45.21363449]
[95.13610077 30.22364235]
[86.89994812 16.71525764]
[94.16725922 3.71389532]
[93.61943054 -11.27609730]
[82.38002777 -16.84367752]
[74.63088226 -26.61424065]
[71.80212402 -38.68539810]
[74.37342834 -50.74006653]
[81.79393005 -60.49123383]
[92.59884644 -66.11581421]
[92.59884644 -81.11581421]
[92.59884644 -96.11581421]
[92.59884644 -111.11581421]
[92.59884644 -126.11581421]
[92.59884644 -141.11581421]
[92.59884644 -156.11581421]
[92.59884644 -171.11581421]
[92.46186066 -186.11518860]
[92.18789673 -201.11268616]
[91.91394043 -216.11018372]
[80.81786346 -227.04246521]
[80.75367737 -242.25596619]
[91.24432373 -252.76701355]
[90.97035980 -267.76449585]
[90.55944824 -282.75888062]
[90.01161957 -297.74887085]
[87.19430542 -302.23062134]
[86.47549438 -306.87841797]
[87.56161499 -310.85641479]
[89.86712646 -313.57003784]
[90.14109039 -328.56753540]
[90.41504669 -343.56503296]
[90.68901062 -358.56253052]
[90.96297455 -373.56002808]
[83.47901154 -387.49920654]
[91.44747162 -400.08303833]
[91.72142792 -415.08053589]
[91.99539185 -430.07803345]
[80.84699249 -441.28021240]
[80.96855927 -457.08404541]
[92.28797913 -468.11337280]
[108.08963013 -467.82473755]
[118.99868011 -456.38934326]
[118.54297638 -440.59161377]
[106.99288940 -429.80407715]
[106.71892548 -414.80657959]
[106.44496918 -399.80908203]
[113.94852448 -386.94262695]
[105.96047211 -373.28607178]
[105.68650818 -358.28857422]
[105.41254425 -343.29107666]
[105.13858795 -328.29357910]
[104.86462402 -313.29608154]
[105.00160980 -298.29669189]
[105.54943848 -283.30670166]
[108.94861603 -276.71279907]
[105.96785736 -268.03845215]
[106.24182129 -253.04096985]
[117.10935211 -242.92008972]
[117.60083771 -227.71438599]
[106.91143799 -216.38414001]
[107.18539429 -201.38664246]
[107.45935822 -186.38914490]
[110.73753357 -179.73426819]
[107.59884644 -171.11581421]
[107.59884644 -156.11581421]
[107.59884644 -141.11581421]
[107.59884644 -126.11581421]
[107.59884644 -111.11581421]
[107.59884644 -96.11581421]
[107.59884644 -81.11581421]
[107.59884644 -66.11581421]
[122.33871460 -56.44207764]
[128.40055847 -39.71928787]
[123.19219208 -22.54743385]
[108.60942841 -11.82392788]
[109.15725708 3.16606498]
[117.35421753 15.60226440]
[110.12609100 29.67581177]
[110.67391968 44.66580582]
[111.22174835 59.65579605]
[111.76958466 74.64579010]
[112.31741333 89.63578033]
[120.24812317 102.36778259]
[133.46076965 109.46891785]
[149.27944946 109.18669891]
[156.82727051 122.02725220]
[170.03990173 129.12838745]
[183.25254822 136.22952271]
[196.65475464 142.96604919]
[210.23648071 149.33290100]
[223.81820679 155.69973755]
[237.39993286 162.06658936]
[252.91490173 157.98426819]
[265.69342041 167.68421936]
[265.93289185 183.72549438]
[253.44963074 193.80258179]
[237.81971741 190.18521118]
[231.03308105 175.64831543]
[217.45135498 169.28146362]
[203.86962891 162.91461182]
[190.28791809 156.54776001]
[186.83575439 157.42056274]
[182.78643799 156.64141846]
[178.93176270 153.94692993]
[176.15141296 149.44216919]
[162.93876648 142.34103394]
[149.72613525 135.23989868]
[134.85249329 136.03002930]
[126.35962677 122.68155670]
[113.14698792 115.58042145]
[99.99974823 122.80192566]
[98.90481567 137.76191711]
[97.80989075 152.72189331]
[96.71495819 167.68188477]
[103.42427063 182.01002502]
[94.77857971 194.13854980]
[93.68364716 209.09854126]
[92.58872223 224.05851746]
[91.49378967 239.01850891]
[105.42652893 244.94787598]
[116.67742920 255.08178711]
[124.02606201 268.32098389]
[126.67531586 283.22937012]
[124.33781433 298.18981934]
[117.26710510 311.57949829]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 165]
[12 164]
[13 163]
[14 162]
[16 160]
[17 159]
[18 158]
[19 157]
[30 40]
[31 39]
[42 128]
[43 127]
[44 126]
[45 125]
[46 124]
[48 122]
[49 121]
[55 117]
[56 116]
[57 115]
[58 114]
[59 113]
[60 112]
[61 111]
[62 110]
[63 108]
[64 107]
[65 106]
[68 103]
[69 102]
[70 100]
[71 99]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[81 92]
[82 91]
[83 90]
[129 156]
[130 155]
[132 153]
[133 152]
[134 151]
[135 147]
[136 146]
[137 145]
[138 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
