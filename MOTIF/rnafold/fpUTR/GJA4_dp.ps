%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:13:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GJA4)
} def

/sequence { (\
CAGCAGGGCUCCCGCGGGCGUCACUCCGGCCAUCGUCCCCACCUCCACCUGGGCCGCCCGGCAGGCAGGCGACGGAGGCCCGGGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 15 0.004425810 ubox
4 14 0.004420502 ubox
6 13 0.003621894 ubox
6 22 0.004023807 ubox
6 88 0.074177982 ubox
7 12 0.003611330 ubox
7 21 0.003625063 ubox
7 22 0.010411426 ubox
7 87 0.052946109 ubox
7 88 0.985663676 ubox
8 19 0.006308511 ubox
8 21 0.010478424 ubox
8 87 0.998451614 ubox
9 18 0.006312516 ubox
9 20 0.010496140 ubox
9 86 0.999897862 ubox
10 17 0.006112397 ubox
10 85 0.999761672 ubox
11 16 0.006031259 ubox
11 18 0.010290504 ubox
11 84 0.999825909 ubox
12 17 0.010297359 ubox
12 83 0.999736572 ubox
12 84 0.012592219 ubox
13 82 0.998707711 ubox
13 83 0.017758470 ubox
14 19 0.006565414 ubox
14 21 0.020435012 ubox
14 27 0.084210001 ubox
14 79 0.004197925 ubox
14 81 0.957024773 ubox
15 20 0.030595197 ubox
15 28 0.341174240 ubox
15 78 0.004572890 ubox
15 82 0.045785178 ubox
16 22 0.038158741 ubox
16 25 0.154333611 ubox
16 26 0.294618438 ubox
16 27 0.898810599 ubox
16 31 0.006200812 ubox
16 38 0.005522695 ubox
16 80 0.033173272 ubox
16 81 0.098841894 ubox
17 21 0.024851188 ubox
17 24 0.169714977 ubox
17 25 0.294701298 ubox
17 26 0.899168629 ubox
17 27 0.161303153 ubox
17 30 0.006236533 ubox
17 31 0.004509700 ubox
17 37 0.005555602 ubox
17 79 0.022051296 ubox
17 80 0.107523896 ubox
17 81 0.004319224 ubox
17 88 0.004211417 ubox
18 24 0.367513431 ubox
18 25 0.686095385 ubox
18 26 0.160581286 ubox
18 30 0.005609451 ubox
18 36 0.005631213 ubox
18 79 0.108125635 ubox
18 80 0.003885616 ubox
18 87 0.004267510 ubox
19 28 0.022125031 ubox
19 29 0.005801364 ubox
19 35 0.006098794 ubox
19 74 0.008484502 ubox
19 78 0.108595643 ubox
19 86 0.004254112 ubox
20 27 0.033108213 ubox
20 30 0.033151172 ubox
20 34 0.005576404 ubox
20 73 0.011216653 ubox
21 29 0.033312816 ubox
21 72 0.011221186 ubox
21 76 0.046584196 ubox
21 85 0.003330254 ubox
22 28 0.033501890 ubox
22 71 0.011213385 ubox
22 75 0.045462153 ubox
22 84 0.003323751 ubox
24 68 0.008796409 ubox
24 69 0.006952022 ubox
24 77 0.091877035 ubox
24 84 0.003185481 ubox
24 86 0.010924630 ubox
25 67 0.008871352 ubox
25 68 0.006310142 ubox
25 72 0.014531357 ubox
25 76 0.092037019 ubox
25 84 0.004054734 ubox
25 85 0.010983831 ubox
26 65 0.011243061 ubox
26 69 0.008381997 ubox
26 71 0.014469923 ubox
26 75 0.092203361 ubox
26 82 0.004343896 ubox
26 83 0.007075271 ubox
26 84 0.010719504 ubox
27 35 0.004823707 ubox
27 64 0.011220248 ubox
27 68 0.008444876 ubox
27 71 0.004212641 ubox
27 74 0.092112349 ubox
27 82 0.008289347 ubox
27 83 0.010371514 ubox
28 34 0.006647996 ubox
28 37 0.013909371 ubox
28 38 0.006480703 ubox
28 39 0.005212954 ubox
28 40 0.003538337 ubox
28 70 0.003475433 ubox
28 73 0.090453988 ubox
28 80 0.930957152 ubox
28 81 0.023962982 ubox
29 33 0.004488060 ubox
29 36 0.016656150 ubox
29 37 0.006730444 ubox
29 38 0.005484116 ubox
29 39 0.003569276 ubox
29 62 0.011344544 ubox
29 66 0.009104001 ubox
29 70 0.031145904 ubox
29 79 0.993264882 ubox
29 80 0.023186138 ubox
30 35 0.017800295 ubox
30 52 0.003254748 ubox
30 61 0.011386949 ubox
30 65 0.009133680 ubox
30 69 0.031345384 ubox
30 75 0.004359830 ubox
30 78 0.993946499 ubox
31 51 0.003268212 ubox
31 60 0.011365056 ubox
31 64 0.009123805 ubox
31 68 0.031282008 ubox
31 74 0.004838334 ubox
31 77 0.994246951 ubox
33 61 0.004186554 ubox
33 65 0.003269819 ubox
33 72 0.082598087 ubox
33 75 0.970904539 ubox
33 76 0.053876690 ubox
34 56 0.008772828 ubox
34 60 0.004513980 ubox
34 64 0.003519952 ubox
34 71 0.083117500 ubox
34 74 0.994449021 ubox
34 75 0.038391700 ubox
35 42 0.004738768 ubox
35 54 0.006608316 ubox
35 55 0.010950998 ubox
35 57 0.005049699 ubox
35 59 0.004380424 ubox
35 62 0.006271664 ubox
35 66 0.015417753 ubox
35 70 0.082978081 ubox
35 73 0.995424292 ubox
36 41 0.004392495 ubox
36 53 0.005359143 ubox
36 56 0.005014761 ubox
36 61 0.006228856 ubox
36 65 0.014172837 ubox
36 69 0.063842113 ubox
36 72 0.995350250 ubox
36 76 0.005995185 ubox
37 52 0.005577016 ubox
37 53 0.006891092 ubox
37 60 0.006202025 ubox
37 64 0.013960952 ubox
37 65 0.005892321 ubox
37 68 0.061740832 ubox
37 69 0.037096076 ubox
37 71 0.994563135 ubox
37 75 0.006085250 ubox
38 51 0.005576098 ubox
38 52 0.012484631 ubox
38 53 0.043114307 ubox
38 64 0.005918243 ubox
38 65 0.007138664 ubox
38 68 0.036816170 ubox
38 69 0.827533259 ubox
38 74 0.006115839 ubox
39 51 0.011736829 ubox
39 52 0.090395477 ubox
39 64 0.007132216 ubox
39 65 0.013398460 ubox
39 68 0.826825544 ubox
39 69 0.383876897 ubox
40 51 0.090689668 ubox
40 64 0.013442554 ubox
40 68 0.382915347 ubox
41 50 0.088442379 ubox
42 52 0.061601831 ubox
42 53 0.011194601 ubox
42 61 0.003807145 ubox
42 65 0.864962774 ubox
42 69 0.386428994 ubox
42 78 0.008004906 ubox
43 51 0.061714662 ubox
43 52 0.013142217 ubox
43 53 0.003744954 ubox
43 60 0.003777293 ubox
43 64 0.865344762 ubox
43 65 0.069415061 ubox
43 68 0.388978023 ubox
43 69 0.003992026 ubox
43 77 0.008260579 ubox
44 51 0.012127007 ubox
44 52 0.004286997 ubox
44 53 0.009605938 ubox
44 63 0.845701222 ubox
44 64 0.060385339 ubox
44 65 0.028165480 ubox
44 67 0.392524735 ubox
44 68 0.003688722 ubox
44 76 0.008261736 ubox
45 51 0.006370197 ubox
45 52 0.117866310 ubox
45 53 0.004582800 ubox
45 60 0.004013888 ubox
45 61 0.308719585 ubox
45 64 0.042584500 ubox
45 65 0.477739054 ubox
45 75 0.008256383 ubox
46 51 0.117975202 ubox
46 52 0.008241505 ubox
46 60 0.305545223 ubox
46 64 0.477917870 ubox
46 74 0.008235692 ubox
48 61 0.597121929 ubox
48 65 0.026253841 ubox
48 69 0.009326669 ubox
49 60 0.591711208 ubox
49 61 0.716701990 ubox
49 64 0.026249643 ubox
49 68 0.009399896 ubox
50 56 0.009279442 ubox
50 60 0.724039928 ubox
50 63 0.024809530 ubox
50 67 0.009492953 ubox
51 55 0.009663661 ubox
51 58 0.353803717 ubox
51 59 0.917844788 ubox
51 62 0.013623252 ubox
51 66 0.009237038 ubox
52 57 0.354006495 ubox
52 58 0.917899011 ubox
52 59 0.027925622 ubox
53 57 0.903072872 ubox
53 58 0.027973206 ubox
53 62 0.124669909 ubox
53 66 0.049365850 ubox
53 70 0.097440510 ubox
54 61 0.125379545 ubox
54 65 0.049881798 ubox
54 69 0.100664261 ubox
55 60 0.125205594 ubox
55 64 0.049873664 ubox
55 68 0.100649721 ubox
55 71 0.005699295 ubox
56 62 0.032704174 ubox
56 66 0.101795470 ubox
56 70 0.007455661 ubox
57 61 0.032570928 ubox
57 65 0.101100352 ubox
57 69 0.007269811 ubox
58 64 0.099945637 ubox
58 65 0.035771156 ubox
58 68 0.006606539 ubox
59 64 0.038623067 ubox
7 88 0.9500000 lbox
8 87 0.9500000 lbox
9 86 0.9500000 lbox
10 85 0.9500000 lbox
11 84 0.9500000 lbox
12 83 0.9500000 lbox
13 82 0.9500000 lbox
14 81 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
28 80 0.9500000 lbox
29 79 0.9500000 lbox
30 78 0.9500000 lbox
31 77 0.9500000 lbox
33 75 0.9500000 lbox
34 74 0.9500000 lbox
35 73 0.9500000 lbox
36 72 0.9500000 lbox
37 71 0.9500000 lbox
38 69 0.9500000 lbox
39 68 0.9500000 lbox
42 65 0.9500000 lbox
43 64 0.9500000 lbox
44 63 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
52 58 0.9500000 lbox
53 57 0.9500000 lbox
showpage
end
%%EOF
