%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGACGAAGGGAAGCUCCAGCGUGUGGCCCCGGCGAGUGCGGAUAAAAGCCGCCCCGCCGGGCUCGGGCUUCAUUCUGAGCCGAGCCCGGUGCCAAGCGCAGCUAGCUCAGCAGGCGGCAGCGGCGGCCUGAGCUUCAGGGCAGCCAGCUCCCUCCCGGUCUCGCCUUCCCUCGCGGUCAGC\
) } def
/len { sequence length } bind def

/coor [
[67.69768524 367.17739868]
[65.14903259 352.39550781]
[62.60037613 337.61361694]
[60.05171967 322.83172607]
[57.50306320 308.04983521]
[50.26417542 306.08807373]
[46.34045029 320.56579590]
[31.86278915 316.64184570]
[35.78639221 302.16458130]
[28.54750252 300.20285034]
[18.88390541 311.67520142]
[9.22031021 323.14755249]
[10.38032150 338.68112183]
[0.41663298 350.17807007]
[-14.39941120 351.18823242]
[-24.06300735 362.66058350]
[-20.20706940 377.69091797]
[-25.95345497 392.10476685]
[-39.09255981 400.35968018]
[-54.57213211 399.28149414]
[-66.43995667 389.28475952]
[-70.13261414 374.21347046]
[-64.23020935 359.86282349]
[-51.00232315 351.75091553]
[-35.53536224 352.99697876]
[-25.87176514 341.52462769]
[-27.39368820 326.75238037]
[-17.75685692 314.98013306]
[-2.25204396 313.48394775]
[7.41155195 302.01159668]
[17.07514763 290.53924561]
[26.90354156 265.67221069]
[47.21049118 260.60952759]
[51.25744247 246.16577148]
[55.30439377 231.72200012]
[59.35134506 217.27824402]
[63.39829636 202.83448792]
[67.44525146 188.39073181]
[59.94412994 175.57398987]
[63.84255600 160.86831665]
[77.33679199 153.08735657]
[81.38374329 138.64358521]
[85.43069458 124.19982910]
[76.88349152 117.40057373]
[71.38778687 107.66111755]
[69.91864014 96.31149292]
[72.88512421 84.98798370]
[80.04234314 75.39723969]
[90.50001526 69.05934906]
[102.83003235 67.06861115]
[99.27857208 52.49510193]
[95.72710419 37.92159653]
[92.17563629 23.34809113]
[88.62416840 8.77458382]
[85.07270813 -5.79892206]
[69.22597504 -11.16896152]
[60.19017029 -27.21968079]
[64.50988007 -46.85937881]
[56.28310394 -59.40211105]
[48.05632782 -71.94484711]
[39.82954788 -84.48757935]
[31.60276985 -97.03031158]
[23.37599182 -109.57303619]
[15.14921379 -122.11576843]
[6.92243624 -134.65850830]
[-1.30434191 -147.20123291]
[-9.53112030 -159.74397278]
[-17.75789833 -172.28669739]
[-25.09935951 -177.76280212]
[-26.01592827 -185.11454773]
[-34.02736664 -197.79589844]
[-42.03880310 -210.47726440]
[-57.50861359 -213.71153259]
[-66.09040833 -226.98286438]
[-62.69276047 -242.41761780]
[-49.33143616 -250.85862732]
[-33.93347168 -247.29798889]
[-25.63420296 -233.84815979]
[-29.35744286 -218.48870850]
[-21.34600639 -205.80734253]
[-13.33456898 -193.12597656]
[-5.21516609 -180.51347351]
[3.01161194 -167.97074890]
[11.23838997 -155.42800903]
[19.46516800 -142.88528442]
[27.69194603 -130.34254456]
[35.91872406 -117.79981995]
[44.14550400 -105.25708771]
[52.37228012 -92.71435547]
[60.59906006 -80.17162323]
[68.82583618 -67.62889099]
[77.05261230 -55.08615875]
[91.97397614 -56.62012100]
[97.47678375 -70.57429504]
[91.42605591 -84.92791748]
[97.20546722 -99.00104523]
[110.92674255 -104.68103790]
[116.42955780 -118.63521576]
[121.93236542 -132.58938599]
[114.31743622 -146.24760437]
[117.31414032 -161.59536743]
[129.50753784 -171.38592529]
[145.14025879 -170.99649048]
[156.83103943 -160.61093140]
[159.05982971 -145.13299561]
[150.77426147 -131.87089539]
[135.88655090 -127.08657837]
[130.38372803 -113.13240051]
[124.88092041 -99.17822266]
[131.03201294 -85.66158295]
[125.65016174 -71.43167877]
[111.43096161 -65.07148743]
[105.92815399 -51.11730576]
[113.32839203 -26.79027557]
[99.64620972 -9.35038853]
[103.19767761 5.22311783]
[106.74914551 19.79662323]
[110.30061340 34.37012863]
[113.85207367 48.94363785]
[117.40354156 63.51714325]
[129.50862122 72.37531281]
[144.47364807 71.35167694]
[159.43867493 70.32803345]
[174.39442444 69.17668152]
[189.33979797 67.89769745]
[204.28517151 66.61871338]
[217.37536621 57.73291016]
[230.71601868 64.35683441]
[245.66139221 63.07784653]
[260.60675049 61.79885864]
[275.55212402 60.51987457]
[283.45364380 47.16525269]
[297.70907593 41.03644180]
[312.83691406 44.49008942]
[323.02023315 56.19819641]
[324.34329224 71.65876770]
[316.29739380 84.92687988]
[301.97631836 90.90068817]
[286.88681030 87.28314209]
[276.83111572 75.46524811]
[261.88574219 76.74423218]
[246.94036865 78.02321625]
[231.99499512 79.30220795]
[219.97380066 88.09652710]
[205.56416321 81.56408691]
[190.61878967 82.84307098]
[175.67341614 84.12205505]
[169.26168823 87.83391571]
[160.46232605 85.29306793]
[145.49728394 86.31670380]
[130.53225708 87.34033966]
[132.18370056 97.90488434]
[130.36906433 108.17784882]
[125.44962311 117.08022308]
[118.10347748 123.73236084]
[109.23687744 127.54028320]
[99.87445068 128.24678040]
[95.82749939 142.69053650]
[91.78054810 157.13430786]
[99.26742554 170.79389954]
[94.95748138 185.38427734]
[81.88900757 192.43768311]
[77.84205627 206.88143921]
[73.79510498 221.32519531]
[69.74815369 235.76895142]
[65.70120239 250.21272278]
[61.65425110 264.65646362]
[76.36683655 279.30374146]
[72.28495789 305.50119019]
[74.83361053 320.28308105]
[77.38227081 335.06497192]
[79.93092346 349.84686279]
[82.47958374 364.62875366]
[92.44916534 376.91360474]
[86.98686981 390.77047729]
[89.53552246 405.55236816]
[101.76027679 415.94155884]
[101.11569977 431.97164917]
[88.09626007 441.34573364]
[72.68936157 436.87283325]
[66.71385193 421.98416138]
[74.75363159 408.10101318]
[72.20497894 393.31912231]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 173]
[2 172]
[3 171]
[4 170]
[5 169]
[10 31]
[11 30]
[12 29]
[15 26]
[16 25]
[33 167]
[34 166]
[35 165]
[36 164]
[37 163]
[38 162]
[41 159]
[42 158]
[43 157]
[50 120]
[51 119]
[52 118]
[53 117]
[54 116]
[55 115]
[58 92]
[59 91]
[60 90]
[61 89]
[62 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[70 81]
[71 80]
[72 79]
[93 113]
[94 112]
[97 109]
[98 108]
[99 107]
[121 151]
[122 150]
[123 149]
[124 147]
[125 146]
[126 145]
[128 143]
[129 142]
[130 141]
[131 140]
[175 183]
[176 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
