%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGCGCCGCGCGCGCCGAGGGAGGAGCGGGCGCCGGGGGCCGGCUGGCGCGGGGGCUCCGGUAACCCGGGCUGGGCGGGGGAGAGGAAGGGGCGGGGCAGGGAGCCCGCCAGAGUGCGGGGUCGCGGUGCGGACUUCGAGCACGAGCCCUAAAGACGCUCAGCACUCGUCGCUUCUCCUAGCAGACCCUGCCCGGCUUGGCG\
) } def
/len { sequence length } bind def

/coor [
[123.35757446 142.63479614]
[106.67722321 149.56181335]
[88.11286926 150.01206970]
[83.58705902 164.31300354]
[79.06124878 178.61395264]
[74.53543854 192.91490173]
[70.00963593 207.21585083]
[65.48382568 221.51679993]
[66.46939087 238.44206238]
[50.47838974 244.07450867]
[40.63932800 230.26765442]
[51.18287659 216.99098206]
[55.70868683 202.69003296]
[60.23449707 188.38909912]
[64.76030731 174.08815002]
[69.28610992 159.78720093]
[73.81192017 145.48625183]
[68.65274048 140.04264832]
[57.82472992 150.42312622]
[50.59339142 163.56495667]
[35.85087204 160.79763794]
[33.87757874 145.92799377]
[47.38832092 139.41137695]
[58.33436966 129.15544128]
[53.17518616 123.71184540]
[38.65217209 127.46444702]
[24.12915802 131.21705627]
[9.60614395 134.96966553]
[-4.91686964 138.72227478]
[-13.90145302 155.39715576]
[-31.91116142 160.13323975]
[-47.39590836 150.37553406]
[-61.79710007 154.57144165]
[-76.19829559 158.76733398]
[-90.59948730 162.96324158]
[-105.00068665 167.15914917]
[-119.40187836 171.35504150]
[-133.80307007 175.55094910]
[-139.93655396 189.93547058]
[-153.90458679 196.96598816]
[-169.11189270 193.32289124]
[-178.37803650 180.72636414]
[-177.32783508 165.12408447]
[-166.45716858 153.88298035]
[-150.89881897 152.31074524]
[-137.99897766 161.14974976]
[-123.59777832 156.95385742]
[-109.19658661 152.75794983]
[-94.79539490 148.56204224]
[-80.39419556 144.36614990]
[-65.99300385 140.17024231]
[-51.59180832 135.97433472]
[-48.39919281 125.01531982]
[-40.22668076 116.87562561]
[-29.02442551 113.66093445]
[-17.54551888 116.28171539]
[-8.66947842 124.19926453]
[5.85353470 120.44665527]
[20.37654877 116.69404602]
[34.89956284 112.94143677]
[49.42257690 109.18882751]
[50.67224121 90.63445282]
[58.34363174 74.17401123]
[71.12059784 61.89001465]
[87.06616974 55.21020889]
[103.91194916 54.74530411]
[119.37959290 60.24492264]
[131.48889160 70.67268372]
[144.07936096 62.51916885]
[156.66984558 54.36565399]
[169.26033020 46.21214294]
[181.85081482 38.05862808]
[194.44129944 29.90511513]
[207.03176880 21.75160217]
[219.62225342 13.59808922]
[232.21273804 5.44457579]
[244.80322266 -2.70893741]
[257.39370728 -10.86245060]
[269.98419189 -19.01596451]
[282.57467651 -27.16947746]
[295.16513062 -35.32299042]
[307.75561523 -43.47650528]
[307.96508789 -62.61021423]
[319.56808472 -77.63661957]
[337.73709106 -82.59976196]
[355.08929443 -75.67031860]
[367.29174805 -84.39385986]
[379.49420166 -93.11739349]
[391.69665527 -101.84092712]
[396.86099243 -109.38124847]
[404.15362549 -110.60295868]
[416.48831177 -119.13847351]
[428.82302856 -127.67399597]
[441.15771484 -136.20950317]
[453.49243164 -144.74502563]
[465.82714844 -153.28054810]
[472.89175415 -166.51275635]
[473.12161255 -181.51098633]
[473.35147095 -196.50923157]
[473.58132935 -211.50746155]
[463.48950195 -223.97880554]
[467.08837891 -239.61299133]
[481.61724854 -246.41679382]
[495.93078613 -239.17094421]
[499.04885864 -223.43382263]
[488.57958984 -211.27760315]
[488.34973145 -196.27935791]
[488.11984253 -181.28112793]
[487.88998413 -166.28288269]
[494.05734253 -162.01512146]
[502.59307861 -174.34968567]
[514.92749023 -165.81376648]
[506.39205933 -153.47961426]
[512.55938721 -149.21185303]
[526.51446533 -154.71234131]
[540.46960449 -160.21282959]
[554.42468262 -165.71331787]
[568.37976074 -171.21380615]
[582.33483887 -176.71429443]
[596.24737549 -182.32154846]
[610.11657715 -188.03524780]
[623.98571777 -193.74893188]
[637.81072998 -199.56874084]
[651.59069824 -205.49429321]
[665.37066650 -211.41984558]
[678.86376953 -217.97245789]
[692.04144287 -225.13824463]
[701.28283691 -241.06298828]
[718.79357910 -239.93626404]
[731.85986328 -247.30316162]
[744.92620850 -254.67004395]
[757.99255371 -262.03695679]
[758.78131104 -277.44412231]
[767.79321289 -289.96569824]
[782.15252686 -295.60604858]
[797.27728271 -292.56539917]
[808.34118652 -281.81396484]
[811.81384277 -266.78253174]
[806.58709717 -252.26754761]
[794.32879639 -242.90069580]
[778.95056152 -241.67091370]
[765.35943604 -248.97061157]
[752.29309082 -241.60372925]
[739.22680664 -234.23683167]
[726.16046143 -226.86993408]
[722.60778809 -215.30371094]
[711.77825928 -209.06024170]
[699.20721436 -211.96057129]
[686.02954102 -204.79476929]
[700.05889893 -199.48651123]
[706.35473633 -185.87171936]
[701.31286621 -171.74444580]
[687.81964111 -165.19213867]
[673.59948730 -169.96577454]
[666.79302979 -183.33261108]
[671.29620361 -197.63987732]
[657.51623535 -191.71430969]
[643.73626709 -185.78875732]
[638.83099365 -180.25584412]
[629.69940186 -179.87977600]
[615.83026123 -174.16607666]
[601.96112061 -168.45239258]
[596.97161865 -162.99530029]
[587.83532715 -162.75920105]
[573.88024902 -157.25871277]
[559.92517090 -151.75822449]
[545.97009277 -146.25773621]
[532.01495361 -140.75724792]
[518.05987549 -135.25675964]
[499.74429321 -127.81581879]
[483.53015137 -131.11715698]
[474.36264038 -140.94584656]
[462.02795410 -132.41032410]
[449.69323730 -123.87480927]
[437.35855103 -115.33928680]
[425.02383423 -106.80377197]
[412.68911743 -98.26824951]
[400.42019653 -89.63847351]
[388.21774292 -80.91493988]
[376.01528931 -72.19139862]
[363.81283569 -63.46786499]
[365.83676147 -52.48912811]
[363.60522461 -41.49831772]
[357.40335083 -32.09255219]
[348.09609985 -25.65318680]
[337.00762939 -23.14299202]
[325.73309326 -24.96236610]
[315.90914917 -30.88602257]
[303.31866455 -22.73250961]
[290.72817993 -14.57899570]
[278.13769531 -6.42548275]
[265.54721069 1.72803068]
[252.95672607 9.88154411]
[240.36625671 18.03505707]
[227.77577209 26.18857002]
[215.18528748 34.34208298]
[202.59480286 42.49559784]
[190.00431824 50.64910889]
[177.41384888 58.80262375]
[164.82336426 66.95613861]
[152.23287964 75.10964966]
[139.64239502 83.26316071]
[144.40342712 98.56888580]
[143.27416992 115.06734467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[68 202]
[69 201]
[70 200]
[71 199]
[72 198]
[73 197]
[74 196]
[75 195]
[76 194]
[77 193]
[78 192]
[79 191]
[80 190]
[81 189]
[82 188]
[86 181]
[87 180]
[88 179]
[89 178]
[91 177]
[92 176]
[93 175]
[94 174]
[95 173]
[96 172]
[97 109]
[98 108]
[99 107]
[100 106]
[114 169]
[115 168]
[116 167]
[117 166]
[118 165]
[119 164]
[120 162]
[121 161]
[122 160]
[123 158]
[124 157]
[125 156]
[126 149]
[127 148]
[129 145]
[130 144]
[131 143]
[132 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
