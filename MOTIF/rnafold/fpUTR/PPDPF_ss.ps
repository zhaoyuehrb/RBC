%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGGGCGCGUCCGCGCGUGCGCACCCCGCGCGCGCCUCUCUGUCGUGGCGCGGCUUCCCGCGGUCUUCUCUGCAAAUGGGCUCCGUGGCCUAGCGCCCCCGUCCCCGCCACCCGUGAUCGUGCGCCGAGGCCCGCGAGGGGUCGCCGCCCAGAUCCCACCAGCCAGCAAGCUAAAGC\
) } def
/len { sequence length } bind def

/coor [
[105.39095306 182.60939026]
[108.45732880 177.04014587]
[112.99542236 172.53009033]
[108.86086273 158.11117554]
[104.72630310 143.69224548]
[100.59174347 129.27331543]
[96.45718384 114.85439301]
[81.50275421 113.67745972]
[66.54965973 112.50061798]
[60.21038818 126.09523773]
[62.17791748 142.37593079]
[48.90154648 152.00245667]
[34.03887177 145.07188416]
[32.87933731 128.71377563]
[46.61577225 119.75596619]
[52.95504761 106.16134644]
[41.38067627 96.62017059]
[29.24542236 105.43695068]
[17.11016655 114.25373077]
[4.97491264 123.07051086]
[-7.16034222 131.88728333]
[-19.29559708 140.70407104]
[-31.43085289 149.52084351]
[-43.56610870 158.33763123]
[-47.48586273 173.89445496]
[-62.15161133 180.39794922]
[-76.31304932 172.85916138]
[-79.10673523 157.06121826]
[-68.38958740 145.12295532]
[-52.38288498 146.20236206]
[-40.24763107 137.38558960]
[-28.11237526 128.56881714]
[-15.97712135 119.75202942]
[-3.84186625 110.93525696]
[8.29338837 102.11847687]
[20.42864418 93.30169678]
[32.56389999 84.48491669]
[36.57306290 70.03062439]
[46.63580322 58.90671921]
[60.61714935 53.47331619]
[75.55074310 54.88319397]
[88.26818848 62.83722687]
[96.07127380 75.64784241]
[97.30421448 90.59867096]
[102.43451691 76.50328064]
[107.56481934 62.40789032]
[107.56216431 53.24477768]
[112.90960693 48.11259079]
[118.28512573 34.10888290]
[123.66064453 20.10517693]
[123.81791687 10.94341469]
[129.25411987 5.90533352]
[134.87321472 -8.00242424]
[140.49230957 -21.91018295]
[146.11140442 -35.81793976]
[151.73051453 -49.72569656]
[145.79980469 -64.12932587]
[151.69648743 -78.15372467]
[165.46469116 -83.71898651]
[171.08378601 -97.62673950]
[176.70288086 -111.53450012]
[173.96936035 -126.28332520]
[163.73937988 -137.25363159]
[153.50939941 -148.22393799]
[143.27943420 -159.19424438]
[127.47800446 -159.49525452]
[116.57790375 -170.93917847]
[117.04595947 -186.73652649]
[128.60449219 -197.51502991]
[144.39601135 -196.87997437]
[155.05171204 -185.20814514]
[154.24974060 -169.42420959]
[164.47970581 -158.45390320]
[174.70968628 -147.48359680]
[184.93966675 -136.51330566]
[192.43966675 -136.51330566]
[183.08718872 -148.24067688]
[186.42471313 -162.86465454]
[199.93904114 -169.37333679]
[213.45384216 -162.86563110]
[216.79240417 -148.24188232]
[207.43966675 -136.51330566]
[214.93966675 -136.51330566]
[225.16963196 -147.48359680]
[235.39961243 -158.45390320]
[245.53346252 -169.51307678]
[255.57041931 -180.66024780]
[259.00051880 -189.15711975]
[265.88113403 -191.91241455]
[276.11111450 -202.88272095]
[286.34109497 -213.85302734]
[296.57107544 -224.82333374]
[306.80105591 -235.79364014]
[310.51147461 -253.81689453]
[327.46136475 -258.31677246]
[337.49835205 -269.46392822]
[347.53530884 -280.61111450]
[357.57226562 -291.75830078]
[356.37512207 -302.60467529]
[361.25885010 -312.11651611]
[370.38745117 -317.24871826]
[380.61325073 -316.50961304]
[391.03314209 -327.29971313]
[388.51214600 -338.95202637]
[391.90698242 -350.25506592]
[400.25949097 -358.42205811]
[411.40447998 -361.49832153]
[422.53027344 -358.82818604]
[433.32037354 -369.24804688]
[444.11044312 -379.66793823]
[445.82696533 -395.61889648]
[459.44488525 -404.10015869]
[474.51770020 -398.60565186]
[479.48284912 -383.35025024]
[470.53149414 -370.03662109]
[454.53033447 -368.87783813]
[443.74023438 -358.45797729]
[432.95013428 -348.03808594]
[433.75106812 -329.76974487]
[420.74197388 -316.46963501]
[401.82324219 -316.87985229]
[391.40335083 -306.08975220]
[388.14263916 -287.04696655]
[368.71942139 -281.72131348]
[358.68246460 -270.57415771]
[348.64550781 -259.42697144]
[338.60855103 -248.27981567]
[338.92382812 -236.16981506]
[330.62866211 -226.79843140]
[317.77136230 -225.56365967]
[307.54138184 -214.59335327]
[297.31140137 -203.62304688]
[287.08142090 -192.65275574]
[276.85144043 -181.68244934]
[266.71759033 -170.62327576]
[256.68063354 -159.47610474]
[254.53550720 -152.38153076]
[246.36991882 -148.22393799]
[236.13993835 -137.25363159]
[225.90995789 -126.28332520]
[190.61064148 -105.91539764]
[184.99154663 -92.00764465]
[179.37245178 -78.09988403]
[185.41050720 -64.53237152]
[179.91006470 -50.34788132]
[165.63827515 -44.10659790]
[160.01916504 -30.19884109]
[154.40007019 -16.29108429]
[148.78097534 -2.38332558]
[143.16186523 11.52443218]
[137.66435242 25.48069572]
[132.28883362 39.48440170]
[126.91331482 53.48810959]
[121.66020203 67.53819275]
[116.52989960 81.63358307]
[111.39959717 95.72897339]
[110.87610626 110.71983337]
[115.01066589 125.13875580]
[119.14522552 139.55767822]
[123.27979279 153.97660828]
[127.41435242 168.39553833]
[146.68516541 183.39730835]
[140.77270508 206.36776733]
[146.63366699 220.17533875]
[152.49462891 233.98291016]
[167.24015808 239.67018127]
[173.56884766 254.15200806]
[167.72601318 268.83657837]
[153.17808533 275.01181030]
[138.55610657 269.01403809]
[132.53503418 254.40162659]
[138.68705750 239.84388733]
[132.82609558 226.03631592]
[126.96512604 212.22874451]
[120.90893555 211.75759888]
[115.19216156 209.58714294]
[110.28476715 205.87147522]
[106.59697723 200.89268494]
[104.44502258 195.03947449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 161]
[4 160]
[5 159]
[6 158]
[7 157]
[9 16]
[10 15]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[44 156]
[45 155]
[46 154]
[48 153]
[49 152]
[50 151]
[52 150]
[53 149]
[54 148]
[55 147]
[56 146]
[59 143]
[60 142]
[61 141]
[62 75]
[63 74]
[64 73]
[65 72]
[83 140]
[84 139]
[85 138]
[86 136]
[87 135]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[95 127]
[96 126]
[97 125]
[98 124]
[102 122]
[103 121]
[108 118]
[109 117]
[110 116]
[163 174]
[164 173]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
