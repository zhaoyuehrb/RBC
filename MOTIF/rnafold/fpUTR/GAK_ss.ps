%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGAGGCCGCGGCGGAGGGGACGGGGCUAGGCCGGGUCGCCGCCUGACGCGACGCGUCCUCACGGGCGCCUACGUCACGGCGUCGAGGCGGAAGAUGGUGCACCUCCGGGCCGGCGGUUGCUGAGCUGACCCGGACGGCGAGGGAGCGGGAGCCCGAGCCCGACCACUCCGGCUGCCGCGGGGUGCGGCGCAGCCACCGCC\
) } def
/len { sequence length } bind def

/coor [
[279.31674194 193.40905762]
[268.81808472 204.12251282]
[253.90237427 205.71041870]
[241.38351440 197.44735718]
[236.98048401 183.10812378]
[242.70469666 169.24330139]
[255.94229126 162.18656921]
[241.57983398 157.85993958]
[227.21736145 153.53330994]
[212.85490417 149.20668030]
[210.32084656 150.41763306]
[207.15313721 150.69490051]
[203.70603943 149.79164124]
[200.41670227 147.59400940]
[197.75653076 144.14620972]
[183.68766785 138.94361877]
[169.61880493 133.74102783]
[155.54992676 128.53843689]
[141.48106384 123.33584595]
[127.41219330 118.13326263]
[104.29000854 132.58587646]
[78.21508789 124.61018372]
[65.97212982 133.27679443]
[53.72917557 141.94338989]
[50.93694305 157.26792908]
[38.39738846 165.88269043]
[23.80499840 163.12628174]
[11.56204510 171.79289246]
[-0.68090862 180.45950317]
[-10.11534309 194.54594421]
[-26.26299095 189.37971497]
[-25.76878357 172.43298340]
[-9.34751606 168.21653748]
[2.89543772 159.54994202]
[15.13839149 150.88333130]
[17.38852310 136.20434570]
[29.68115997 127.24076843]
[45.06256866 129.70043945]
[57.30552292 121.03383636]
[69.54847717 112.36722565]
[67.18067169 101.77067566]
[68.39463806 90.98087311]
[55.29030228 83.68180847]
[42.18596649 76.38273621]
[29.08162880 69.08367157]
[15.97729397 61.78460312]
[2.87295794 54.48553848]
[-10.28719139 47.28759003]
[-23.50237465 40.19118500]
[-36.71755600 33.09478378]
[-49.93273926 25.99837875]
[-63.14792252 18.90197563]
[-76.52349091 12.11270809]
[-90.05230713 5.63419962]
[-103.58113098 -0.84430885]
[-117.30303955 -6.90312386]
[-131.20501709 -12.53649807]
[-145.10699463 -18.16987228]
[-159.00898743 -23.80324745]
[-172.91096497 -29.43662262]
[-186.81294250 -35.06999588]
[-202.97123718 -32.26968765]
[-213.26629639 -45.03462219]
[-207.10746765 -60.23333359]
[-190.83041382 -62.23068619]
[-181.17956543 -48.97197723]
[-167.27758789 -43.33860397]
[-153.37561035 -37.70523071]
[-139.47363281 -32.07185364]
[-125.57164764 -26.43848038]
[-111.66966248 -20.80510521]
[-109.03468323 -21.77707672]
[-105.85490417 -21.76089478]
[-102.50585175 -20.54342461]
[-99.43331909 -18.05167198]
[-97.10262299 -14.37312698]
[-83.57379913 -7.89461899]
[-70.04498291 -1.41611040]
[-66.61132050 -2.24038005]
[-62.60742569 -1.43899572]
[-58.80329514 1.23807192]
[-56.05152130 5.68679237]
[-42.83633804 12.78319550]
[-29.62115479 19.87959862]
[-16.40597153 26.97600174]
[-3.19078827 34.07240677]
[4.19351292 34.46747589]
[10.17202473 41.38120270]
[23.27636147 48.68026733]
[36.38069534 55.97933578]
[49.48503113 63.27840424]
[62.58936691 70.57746887]
[75.69370270 77.87654114]
[80.85546875 73.28426361]
[86.86316681 69.87248230]
[93.45134735 67.79194641]
[100.32889557 67.13458252]
[107.19190216 67.92945099]
[113.73712921 70.14141846]
[119.67534637 73.67274475]
[124.74417114 78.36740112]
[128.71963501 84.01792908]
[131.42604065 90.37466431]
[132.74385071 97.15670776]
[132.61479187 104.06439209]
[146.68365479 109.26698303]
[160.75251770 114.46957397]
[174.82139587 119.67216492]
[188.89025879 124.87475586]
[202.95912170 130.07734680]
[217.18153381 134.84420776]
[231.54399109 139.17083740]
[245.90646362 143.49748230]
[260.26892090 147.82411194]
[274.84362793 151.37069702]
[289.58819580 154.12693787]
[304.33279419 156.88317871]
[319.07739258 159.63941956]
[333.82199097 162.39566040]
[348.56658936 165.15190125]
[363.55352783 160.08212280]
[374.64236450 170.02630615]
[389.38696289 172.78254700]
[404.13156128 175.53880310]
[418.87615967 178.29504395]
[433.86306763 173.22525024]
[444.95190430 183.16944885]
[459.69650269 185.92568970]
[474.44110107 188.68193054]
[489.18569946 191.43817139]
[503.95108032 194.08079529]
[518.73638916 196.60966492]
[533.52166748 199.13851929]
[548.30694580 201.66737366]
[558.33435059 192.66981506]
[571.52069092 191.11477661]
[583.02374268 197.34757996]
[588.74884033 208.89471436]
[603.49346924 211.65095520]
[618.23803711 214.40719604]
[632.98266602 217.16343689]
[647.72723389 219.91967773]
[661.97271729 209.77116394]
[678.81927490 212.99903870]
[687.93804932 227.12713623]
[702.72332764 229.65599060]
[717.50860596 232.18484497]
[732.29388428 234.71371460]
[747.15008545 236.78605652]
[762.06298828 238.39991760]
[776.97589111 240.01379395]
[791.88885498 241.62765503]
[802.20709229 230.03826904]
[817.37390137 226.76005554]
[831.55737305 233.05357361]
[839.30371094 246.49880981]
[837.63421631 261.92581177]
[827.19085693 273.40258789]
[811.98937988 276.51605225]
[797.87493896 270.06906128]
[790.27496338 256.54058838]
[775.36206055 254.92671204]
[760.44909668 253.31285095]
[745.53619385 251.69898987]
[743.26782227 253.35494995]
[740.20495605 254.20956421]
[736.65057373 253.95509338]
[733.01342773 252.39929199]
[729.76501465 249.49900818]
[714.97973633 246.97013855]
[700.19445801 244.44128418]
[685.40917969 241.91242981]
[676.03442383 250.75706482]
[663.08367920 252.61326599]
[651.25524902 246.58120728]
[644.97100830 234.66427612]
[630.22637939 231.90803528]
[615.48181152 229.15179443]
[600.73718262 226.39555359]
[585.99261475 223.63931274]
[572.53973389 233.72766113]
[555.61938477 230.91210938]
[545.77807617 216.45266724]
[530.99279785 213.92381287]
[516.20751953 211.39495850]
[501.42224121 208.86608887]
[494.29516602 210.83816528]
[486.42947388 206.18276978]
[471.68487549 203.42652893]
[456.94027710 200.67028809]
[442.19567871 197.91404724]
[428.26336670 203.18096924]
[416.11990356 193.03964233]
[401.37530518 190.28338623]
[386.63070679 187.52714539]
[371.88610840 184.77090454]
[357.95382690 190.03784180]
[345.81036377 179.89649963]
[331.06576538 177.14025879]
[316.32116699 174.38401794]
[301.57656860 171.62777710]
[286.83197021 168.87153625]
[272.08737183 166.11529541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 114]
[8 113]
[9 112]
[10 111]
[15 110]
[16 109]
[17 108]
[18 107]
[19 106]
[20 105]
[22 40]
[23 39]
[24 38]
[27 35]
[28 34]
[29 33]
[42 93]
[43 92]
[44 91]
[45 90]
[46 89]
[47 88]
[48 86]
[49 85]
[50 84]
[51 83]
[52 82]
[53 78]
[54 77]
[55 76]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[115 203]
[116 202]
[117 201]
[118 200]
[119 199]
[120 198]
[122 196]
[123 195]
[124 194]
[125 193]
[127 191]
[128 190]
[129 189]
[130 188]
[131 186]
[132 185]
[133 184]
[134 183]
[138 180]
[139 179]
[140 178]
[141 177]
[142 176]
[145 172]
[146 171]
[147 170]
[148 169]
[149 164]
[150 163]
[151 162]
[152 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
