%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGAUUUUCAAAACAUUUACUAACGCUUUCAAUUAUUUACCCCAUUAAUGGAAUUUGUCAACAGACUGGAGUCCUUGACAGGAUUGUGAAUGCAUAGAGGAUGCAAAGAAAUGGACACACUGAGGUAGCUAUGCCAGUGGUCUGCAUGCGCAGGCAGUAAACUGAAGACAUUUGAGCGGUGAAUUACUUGGCAUUUGGAAACACCACCGUCUGUGUCGGGAAAGCAGAAUAACUCUCCAGUAUCUCGUCAUUAG\
CUUGCUGGAAGCAGGAGGGCU\
) } def
/len { sequence length } bind def

/coor [
[135.48291016 326.64950562]
[131.61431885 341.14202881]
[127.74573517 355.63458252]
[123.87714386 370.12713623]
[120.00855255 384.61968994]
[131.62046814 394.52554321]
[137.77659607 408.49212646]
[137.25463867 423.74630737]
[130.15821838 437.25939941]
[117.89633179 446.34835815]
[102.90360260 449.20855713]
[88.15683746 445.27209473]
[76.58401489 435.32058716]
[70.48293304 421.32989502]
[71.06496429 406.07788086]
[78.21454620 392.59283447]
[90.51212311 383.55224609]
[105.51600647 380.75109863]
[109.38459778 366.25854492]
[113.25318146 351.76599121]
[117.12177277 337.27343750]
[120.99036407 322.78091431]
[105.06067657 308.70828247]
[98.86971283 288.27203369]
[104.36186981 267.53570557]
[119.99905396 252.70838928]
[115.80274963 238.30729675]
[111.60645294 223.90621948]
[107.41014862 209.50514221]
[103.21385193 195.10406494]
[99.01754761 180.70298767]
[92.10072327 177.80342102]
[88.87907410 192.45336914]
[85.65743256 207.10331726]
[86.22134399 222.09271240]
[75.83844757 232.91839600]
[60.83857346 232.98060608]
[50.36624527 222.24140930]
[50.80580902 207.24784851]
[61.89060593 197.14013672]
[70.07883453 184.57220459]
[78.26706696 172.00428772]
[71.35024261 169.10470581]
[58.13900375 176.20846558]
[44.92776871 183.31221008]
[36.76737595 197.53683472]
[20.36977768 197.31146240]
[12.60341644 182.86793518]
[21.45765877 169.06451416]
[37.82402039 170.10096741]
[51.03525543 162.99722290]
[64.24649048 155.89347839]
[61.86424255 148.78187561]
[47.64103699 153.54637146]
[32.94106674 150.56124878]
[42.87653732 139.32316589]
[57.09974289 134.55867004]
[54.71749115 127.44706726]
[39.89297104 129.73475647]
[25.06844711 132.02244568]
[12.62885475 142.70834351]
[-2.75350761 137.02372742]
[-5.25458431 120.81642151]
[7.69851780 110.75912476]
[22.78075790 117.19792175]
[37.60528183 114.91023254]
[52.42980194 112.62254333]
[52.85505295 97.62857056]
[38.18401718 94.50434875]
[23.07496262 99.19764709]
[12.23834896 88.97917938]
[-2.43268466 85.85495758]
[-17.10371780 82.73073578]
[-31.77475166 79.60651398]
[-46.44578552 76.48229218]
[-61.11682129 73.35807037]
[-76.53974915 78.93169403]
[-88.90200806 68.15642548]
[-85.48637390 52.11692429]
[-69.80654907 47.31326294]
[-57.99259949 58.68703079]
[-43.32156372 61.81125641]
[-28.65052986 64.93547821]
[-13.97949696 68.05970001]
[0.69153732 71.18392181]
[15.36257172 74.30814362]
[29.42225647 69.39138794]
[41.30823898 79.83332062]
[55.97927475 82.95754242]
[59.18954086 76.17932892]
[65.61007690 62.62289810]
[68.82034302 55.84468460]
[57.10803986 46.47334671]
[45.39573669 37.10201263]
[33.68342972 27.73067665]
[21.97112656 18.35934067]
[5.93155479 18.69354630]
[-4.21907711 6.27001190]
[-0.69407368 -9.38099098]
[13.80248451 -16.25335312]
[28.15007973 -9.07518482]
[31.34246254 6.64703655]
[43.05476761 16.01837158]
[54.76707077 25.38970757]
[66.47937775 34.76104355]
[78.19168091 44.13237762]
[84.58536530 40.21182632]
[76.74426270 27.42444801]
[68.90316010 14.63706779]
[61.06205368 1.84968793]
[53.22095108 -10.93769169]
[45.38005829 -23.72520065]
[58.16769791 -31.56588173]
[66.00833130 -18.77879715]
[73.84943390 -5.99141645]
[81.69053650 6.79596329]
[89.53164673 19.58334351]
[97.37274933 32.37072372]
[103.76644135 28.45017052]
[100.72546387 13.76165581]
[97.68448639 -0.92685878]
[94.64350891 -15.61537361]
[90.57693481 -20.74894142]
[89.80038452 -26.32961845]
[91.70411682 -30.67136574]
[88.99707794 -45.42507172]
[86.29003143 -60.17878342]
[83.58299255 -74.93248749]
[72.54871368 -87.06414032]
[77.79496765 -102.60147858]
[93.92485046 -105.56101990]
[104.34532166 -92.89825439]
[98.33670044 -77.63953400]
[101.04373932 -62.88582611]
[103.75078583 -48.13211823]
[106.45782471 -33.37840652]
[109.33202362 -18.65634918]
[112.37300110 -3.96783519]
[115.41397858 10.72067928]
[118.45495605 25.40919304]
[133.45399475 25.57931328]
[136.82733154 10.96354866]
[140.20068359 -3.65221453]
[143.57402039 -18.26797867]
[146.94737244 -32.88374329]
[150.32070923 -47.49950409]
[145.01025391 -63.01501465]
[155.99426270 -75.19218445]
[171.97334290 -71.50418854]
[176.50956726 -55.74491882]
[164.93647766 -44.12615967]
[161.56312561 -29.51039696]
[158.18978882 -14.89463329]
[154.81643677 -0.27886954]
[151.44309998 14.33689404]
[148.06974792 28.95265770]
[153.65092468 33.96270370]
[163.61848450 22.75343132]
[173.58604431 11.54415989]
[183.55360413 0.33488846]
[189.80181885 -13.30181503]
[204.71553040 -11.69517136]
[207.91595459 2.95942926]
[195.03045654 10.63732243]
[184.95806885 21.75247955]
[174.88566589 32.86763763]
[164.81326294 43.98279572]
[170.39442444 48.99283981]
[184.56268311 44.06733704]
[198.73094177 39.14183807]
[212.89918518 34.21633530]
[227.06744385 29.29083252]
[233.36250305 18.06222916]
[245.23457336 14.23890400]
[256.17333984 19.34600830]
[270.39654541 14.58150959]
[277.50622559 8.90987301]
[284.80813599 9.84462261]
[299.08447266 5.24173880]
[313.36080933 0.63885486]
[327.63711548 -3.96402907]
[341.91345215 -8.56691265]
[344.01187134 -24.72001457]
[352.92050171 -38.28715515]
[366.80877686 -46.57321548]
[382.86312866 -47.95881271]
[397.85690308 -42.21653366]
[408.79888916 -30.54643059]
[423.02209473 -35.31092834]
[427.55444336 -50.15133667]
[439.96435547 -59.46654129]
[455.48004150 -59.67465591]
[468.13537598 -50.69565964]
[473.06411743 -35.98215866]
[468.37106323 -21.19179153]
[455.86080933 -12.01175880]
[440.34378052 -11.97197056]
[427.78659058 -21.08772469]
[413.56341553 -16.32322502]
[412.50988770 -2.51022935]
[406.25790405 9.90032864]
[395.71948242 19.02476883]
[382.46002197 23.46417809]
[368.46575928 22.51880646]
[355.84622192 16.29815102]
[346.51632690 5.70941257]
[332.24002075 10.31229591]
[317.96368408 14.91518021]
[303.68734741 19.51806450]
[289.41104126 24.12094688]
[275.16104126 28.80471420]
[260.93783569 33.56921387]
[250.01489258 47.32541656]
[231.99295044 43.45908737]
[217.82469177 48.38459015]
[203.65643311 53.31008911]
[189.48818970 58.23559189]
[175.31993103 63.16109467]
[180.71200562 113.22942352]
[156.69262695 156.06336975]
[113.41862488 176.50668335]
[117.61492920 190.90776062]
[121.81122589 205.30885315]
[126.00753021 219.70993042]
[130.20382690 234.11100769]
[134.40013123 248.51208496]
[146.75486755 249.40032959]
[158.20135498 254.05975342]
[167.62113953 262.01629639]
[174.09957886 272.47457886]
[177.01472473 284.39752197]
[176.09698486 296.60910034]
[171.45390320 307.91040039]
[163.55793762 317.19723511]
[171.03337097 330.20178223]
[178.50880432 343.20629883]
[185.98423767 356.21084595]
[193.45967102 369.21536255]
[200.93510437 382.21990967]
[214.52058411 390.32824707]
[214.15538025 405.21838379]
[221.63079834 418.22293091]
[235.21629333 426.33126831]
[234.85107422 441.22137451]
[242.32650757 454.22592163]
[249.28866577 460.07772827]
[249.81202698 467.42059326]
[257.13949585 480.50909424]
[270.63214111 488.77099609]
[270.09808350 503.65600586]
[277.42553711 516.74450684]
[292.70199585 520.79479980]
[300.56771851 534.50268555]
[296.35610962 549.73547363]
[282.56585693 557.45587158]
[267.37841797 553.08343506]
[259.80429077 539.21228027]
[264.33706665 524.07196045]
[257.00958252 510.98348999]
[244.04106140 503.65774536]
[244.05101013 487.83654785]
[236.72354126 474.74807739]
[229.32197571 461.70135498]
[221.84654236 448.69680786]
[208.79576111 441.51864624]
[208.62626648 425.69833374]
[201.15083313 412.69381714]
[188.10005188 405.51565552]
[187.93057251 389.69534302]
[180.45513916 376.69079590]
[172.97970581 363.68627930]
[165.50427246 350.68173218]
[158.02883911 337.67721558]
[150.55340576 324.67266846]
[146.87730408 325.72235107]
[143.11581421 326.40551758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 18]
[26 226]
[27 225]
[28 224]
[29 223]
[30 222]
[31 221]
[43 52]
[44 51]
[45 50]
[58 67]
[59 66]
[60 65]
[68 89]
[69 88]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[119 140]
[120 139]
[121 138]
[122 137]
[125 136]
[126 135]
[127 134]
[128 133]
[141 156]
[142 155]
[143 154]
[144 153]
[145 152]
[146 151]
[168 218]
[169 217]
[170 216]
[171 215]
[172 214]
[175 212]
[176 211]
[178 210]
[179 209]
[180 208]
[181 207]
[182 206]
[188 199]
[189 198]
[234 274]
[235 273]
[236 272]
[237 271]
[238 270]
[239 269]
[241 267]
[242 266]
[244 264]
[245 263]
[247 262]
[248 261]
[250 259]
[251 258]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
