%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGCUCCUCUCCCAGCCUGCGAGCAUUUCCAGGCUCUUGUUUCCCAUCAGCCUCUGGGUCCAAACUAACCACAGGUCUCUGGGUCCUUUUCCGGUGUCCUUAAGGUUCUUGGACUCUGCAUGUGCUGCCAGGUUGCCAGAUUUCUAAGAAGGAGUUUGAAGAGGAGAAAAGGAUUUUUGCAUGUUUAGAAAUCAAGGUUCAGGAGAAUCUUGACAGUGAAUGUGUCUCAUUACAUUGAAUAACAGCUACAGGA\
UGUUCGAGAGCUG\
) } def
/len { sequence length } bind def

/coor [
[69.23548126 161.78703308]
[53.44564438 149.70622253]
[41.94675064 133.81495667]
[35.58424377 115.54176331]
[34.75033188 96.47683716]
[39.36295700 78.23380280]
[25.93091583 71.55695343]
[12.49887657 64.88010406]
[-0.93316239 58.20325470]
[-14.36520195 51.52640533]
[-27.79724121 44.84955597]
[-41.22928238 38.17270660]
[-57.86489868 45.34606552]
[-74.64545441 39.31117630]
[-82.64334106 23.69044304]
[-97.33114624 20.64606094]
[-112.01895905 17.60167885]
[-126.70676422 14.55729675]
[-141.39457703 11.51291370]
[-156.08238220 8.46853161]
[-170.77018738 5.42414904]
[-183.88275146 13.83239079]
[-198.73490906 10.53572083]
[-206.67007446 -2.01691866]
[-221.35789490 -5.06130123]
[-236.04570007 -8.10568333]
[-250.73350525 -11.15006638]
[-265.42132568 -14.19444847]
[-274.57034302 -0.85734218]
[-288.17422485 7.78563118]
[-304.02380371 10.38325691]
[-319.56564331 6.56182098]
[-332.31350708 -3.02185726]
[-345.15545654 4.72955894]
[-357.99740601 12.48097515]
[-370.83935547 20.23239136]
[-383.68130493 27.98380852]
[-387.58282471 43.06412506]
[-400.71679688 50.74222565]
[-415.06951904 46.92979050]
[-427.91146851 54.68120575]
[-433.14169312 69.84776306]
[-448.30795288 75.07881165]
[-461.77600098 66.36153412]
[-463.21432495 50.38308716]
[-451.51953125 39.40076447]
[-435.66287231 41.83926010]
[-422.82095337 34.08784485]
[-419.50711060 19.61185646]
[-406.59399414 11.56787968]
[-391.43270874 15.14186382]
[-378.59075928 7.39044714]
[-365.74880981 -0.36096916]
[-352.90686035 -8.11238575]
[-340.06494141 -15.86380196]
[-342.14257812 -24.16875458]
[-342.39248657 -32.72599792]
[-340.80307007 -41.13804626]
[-354.07550049 -48.12678528]
[-367.34793091 -55.11552429]
[-380.62036133 -62.10426712]
[-393.89282227 -69.09300232]
[-407.16525269 -76.08174133]
[-420.43768311 -83.07048035]
[-433.71011353 -90.05921936]
[-443.85275269 -86.25445557]
[-454.20578003 -88.59214783]
[-461.42489624 -96.07085419]
[-463.31384277 -106.06940460]
[-476.41943359 -113.36622620]
[-489.52502441 -120.66304016]
[-502.63061523 -127.95985413]
[-519.38372803 -122.86695099]
[-534.33361816 -131.31517029]
[-538.44824219 -147.63813782]
[-551.63812256 -154.78140259]
[-564.82806396 -161.92466736]
[-578.78125000 -155.39669800]
[-593.72814941 -158.30258179]
[-603.97668457 -169.32218933]
[-605.75000000 -184.08677673]
[-618.93994141 -191.23004150]
[-632.12982178 -198.37330627]
[-645.31976318 -205.51657104]
[-658.50964355 -212.65983582]
[-673.58496094 -207.91528320]
[-687.56091309 -215.29421997]
[-692.14581299 -230.41885376]
[-684.61950684 -244.31599426]
[-669.44726562 -248.74072266]
[-655.63049316 -241.06793213]
[-651.36639404 -225.84974670]
[-638.17651367 -218.70648193]
[-624.98657227 -211.56321716]
[-611.79663086 -204.41995239]
[-598.60675049 -197.27668762]
[-585.27233887 -203.85939026]
[-570.44323730 -201.29769897]
[-559.84210205 -190.36750793]
[-557.68481445 -175.11457825]
[-544.49487305 -167.97131348]
[-531.30499268 -160.82804871]
[-519.61016846 -166.18867493]
[-506.76940918 -163.80987549]
[-497.49887085 -154.33801270]
[-495.33377075 -141.06544495]
[-482.22817993 -133.76863098]
[-469.12261963 -126.47180939]
[-456.01702881 -119.17499542]
[-436.73373413 -120.85396576]
[-426.72137451 -103.33165741]
[-413.44894409 -96.34291840]
[-400.17651367 -89.35417938]
[-386.90408325 -82.36544037]
[-373.63162231 -75.37670135]
[-360.35919189 -68.38796234]
[-347.08676147 -61.39922333]
[-333.81433105 -54.41048050]
[-321.26312256 -64.89904785]
[-305.50610352 -69.46364594]
[-289.19665527 -67.29531860]
[-275.09744263 -58.72232056]
[-265.61239624 -45.16106796]
[-262.37692261 -28.88225746]
[-247.68911743 -25.83787537]
[-233.00131226 -22.79349327]
[-218.31350708 -19.74910927]
[-203.62570190 -16.70472717]
[-191.35498047 -25.06923676]
[-176.41607666 -22.19103432]
[-167.72581482 -9.26366043]
[-153.03800964 -6.21927786]
[-138.35018921 -3.17489505]
[-123.66238403 -0.13051264]
[-108.97457886 2.91386986]
[-94.28676605 5.95825243]
[-79.59896088 9.00263500]
[-70.63785553 0.20482139]
[-58.43936157 -2.77842164]
[-53.29077148 -16.86714172]
[-48.14218521 -30.95586205]
[-42.99359512 -45.04458237]
[-37.84500885 -59.13330078]
[-32.69641876 -73.22202301]
[-27.54783058 -87.31074524]
[-22.39924240 -101.39945984]
[-17.25065231 -115.48818207]
[-20.60882378 -131.53981018]
[-8.20804691 -142.27073669]
[7.19481945 -136.64190674]
[9.75462818 -120.44377899]
[-3.16193295 -110.33959198]
[-8.31052113 -96.25087738]
[-13.45911026 -82.16215515]
[-18.60769844 -68.07343292]
[-23.75628662 -53.98471451]
[-28.90487671 -39.89599228]
[-34.05346298 -25.80727386]
[-39.20205307 -11.71855354]
[-44.35064316 2.37016702]
[-36.49324036 12.08936977]
[-34.55243301 24.74066925]
[-21.12039185 31.41751862]
[-7.68835258 38.09436798]
[5.74368668 44.77121735]
[19.17572594 51.44806671]
[32.60776520 58.12491608]
[46.03980637 64.80176544]
[53.75996399 55.13935471]
[63.18421173 47.13019562]
[73.96523285 41.06945038]
[85.70571899 37.18048096]
[97.97299194 35.60660172]
[110.31496429 36.40581894]
[122.27680206 39.54867554]
[133.41766357 44.91934967]
[143.32699585 52.31991577]
[151.63958740 61.47764206]
[158.04908752 72.05503082]
[162.31932068 83.66228485]
[164.29287720 95.87162781]
[179.27217102 96.65958405]
[194.25146484 97.44754028]
[209.23075867 98.23548889]
[224.21003723 99.02344513]
[239.18933105 99.81140137]
[254.16862488 100.59935760]
[269.14791870 101.38731384]
[284.12719727 102.17527008]
[291.96850586 90.86343384]
[304.27362061 84.94200897]
[317.79022217 85.85763550]
[329.00387573 93.26528168]
[335.05169678 105.14587402]
[350.02078247 106.10871124]
[364.98983765 107.07154846]
[379.95892334 108.03438568]
[394.92797852 108.99722290]
[409.89703369 109.96006012]
[424.86611938 110.92289734]
[439.83517456 111.88573456]
[454.80422974 112.84857178]
[469.25543213 105.09648895]
[483.05010986 113.96437836]
[481.99746704 130.32969666]
[467.18038940 137.35722351]
[453.84140015 127.81763458]
[438.87234497 126.85479736]
[423.90325928 125.89196014]
[408.93420410 124.92912292]
[393.96514893 123.96628571]
[378.99606323 123.00344849]
[364.02700806 122.04061127]
[349.05795288 121.07777405]
[334.08886719 120.11493683]
[324.00158691 133.08605957]
[308.00680542 137.52088928]
[292.36984253 131.47619629]
[283.33923340 117.15455627]
[268.35995483 116.36660004]
[253.38066101 115.57864380]
[238.40138245 114.79069519]
[223.42208862 114.00273895]
[208.44279480 113.21478271]
[193.46351624 112.42682648]
[178.48422241 111.63887024]
[163.50492859 110.85091400]
[162.79745483 125.14143372]
[158.78686523 139.56541443]
[169.60800171 149.95304871]
[180.42915344 160.34066772]
[196.22303772 159.76715088]
[207.73948669 170.59059143]
[208.14599609 186.38964844]
[197.20138550 197.79101562]
[181.39891052 198.03047180]
[170.11389160 186.96594238]
[170.04153442 171.16181946]
[159.22038269 160.77418518]
[148.39923096 150.38656616]
[142.00100708 154.29969788]
[149.82708740 167.09628296]
[137.03038025 174.92216492]
[129.20454407 162.12597656]
[122.80631256 166.03910828]
[127.12389374 180.40429688]
[131.44148254 194.76947021]
[135.75906372 209.13465881]
[140.07664490 223.49983215]
[154.57429504 228.70797729]
[163.12538147 241.30686951]
[162.62406921 256.34722900]
[153.47204590 268.06808472]
[157.78962708 282.43328857]
[170.09448242 293.27404785]
[166.59370422 309.29519653]
[150.88859558 314.01550293]
[139.13520813 302.57913208]
[143.42443848 286.75085449]
[139.10685730 272.38568115]
[125.00946808 267.65264893]
[116.29924774 255.38088989]
[116.48744965 240.15531921]
[125.71147156 227.81742859]
[121.39388275 213.45223999]
[117.07630157 199.08706665]
[112.75871277 184.72187805]
[108.44113159 170.35668945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[12 162]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[24 128]
[25 127]
[26 126]
[27 125]
[28 124]
[33 55]
[34 54]
[35 53]
[36 52]
[37 51]
[40 48]
[41 47]
[58 118]
[59 117]
[60 116]
[61 115]
[62 114]
[63 113]
[64 112]
[65 111]
[69 109]
[70 108]
[71 107]
[72 106]
[75 102]
[76 101]
[77 100]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[139 160]
[140 159]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
[181 227]
[182 226]
[183 225]
[184 224]
[185 223]
[186 222]
[187 221]
[188 220]
[189 219]
[194 215]
[195 214]
[196 213]
[197 212]
[198 211]
[199 210]
[200 209]
[201 208]
[202 207]
[229 240]
[230 239]
[231 238]
[245 268]
[246 267]
[247 266]
[248 265]
[249 264]
[253 260]
[254 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
