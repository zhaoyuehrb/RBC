%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCGAGGCCGCCGGGCCCUCCUCCAGAGUCCCGCCAGUCCCCCAGAGUCCAGGCCAGUCCCCGCCGUCACCCGGUGCGAGCCCGCGAGAGGCCUAGUGCAGCUGGCAGCCCCGCCCCGGCACCCGCCUGCUCUUCUCGCGGGUCCGGACCGCGAGCGCGGGGGCCGACGGGUCGCCGCUGCGCCGGGCCGGG\
) } def
/len { sequence length } bind def

/coor [
[0.52358907 430.38412476]
[-3.18372083 439.19628906]
[-9.81126976 446.00573730]
[-18.41423416 449.90243530]
[-27.78806305 450.38714600]
[-33.91868591 464.07711792]
[-40.04930878 477.76708984]
[-46.17993164 491.45709229]
[-52.19950867 505.19625854]
[-58.10764694 518.98370361]
[-55.62853241 535.19439697]
[-68.59525299 545.23413086]
[-83.66875458 538.77490234]
[-85.34271240 522.46136475]
[-71.89510345 513.07556152]
[-65.98696136 499.28811646]
[-66.24248505 491.89111328]
[-59.86990738 485.32644653]
[-53.73928452 471.63647461]
[-47.60866165 457.94650269]
[-41.47803879 444.25653076]
[-50.35626221 425.85861206]
[-42.68906784 406.60809326]
[-23.04519844 399.14349365]
[-17.81358147 385.08538818]
[-22.89032364 376.19744873]
[-22.21503830 365.76385498]
[-15.76985550 357.25390625]
[-5.49517393 353.63034058]
[0.18892679 339.74902344]
[5.87302732 325.86770630]
[11.55712795 311.98638916]
[9.21973896 297.27630615]
[21.60943794 287.43731689]
[27.29353905 273.55599976]
[32.86505890 259.62911987]
[38.32363129 245.65756226]
[43.78220749 231.68601990]
[49.24077988 217.71449280]
[40.12601089 200.51075745]
[46.68189240 181.85530090]
[65.11460876 173.89389038]
[69.88825226 159.67376709]
[74.66189575 145.45362854]
[73.41714478 142.14033508]
[73.72409821 138.05741882]
[75.92782593 133.94476318]
[80.02810669 130.66870117]
[85.48668671 116.69715118]
[90.94525909 102.72560883]
[89.97842407 97.55446625]
[91.98564148 92.21183014]
[96.81344604 88.39472961]
[102.72158051 74.60727692]
[108.62971497 60.81982040]
[114.53785706 47.03236389]
[113.86270905 42.71034241]
[114.53836060 38.79559708]
[116.26875305 35.66469574]
[118.66554260 33.55841827]
[121.30070496 32.56338882]
[128.08891296 19.18727875]
[134.87712097 5.81117105]
[141.66531372 -7.56493711]
[148.45352173 -20.94104576]
[143.77667236 -35.79920197]
[150.85142517 -49.26777649]
[165.04522705 -53.63487625]
[171.83343506 -67.01098633]
[167.85839844 -77.15487671]
[170.08445740 -87.59537506]
[177.53822327 -94.92730713]
[187.58276367 -96.89614868]
[194.80055237 -110.04542542]
[202.01834106 -123.19470978]
[209.23612976 -136.34397888]
[209.09391785 -152.16455078]
[222.00076294 -159.59843445]
[229.21855164 -172.74771118]
[229.07633972 -188.56828308]
[241.98318481 -196.00216675]
[249.20097351 -209.15144348]
[256.41876221 -222.30072021]
[263.63653564 -235.44999695]
[270.85433960 -248.59927368]
[278.07214355 -261.74856567]
[285.28991699 -274.89782715]
[292.50772095 -288.04711914]
[299.72549438 -301.19638062]
[306.94329834 -314.34567261]
[314.16107178 -327.49493408]
[321.37887573 -340.64422607]
[317.69741821 -347.23461914]
[316.54727173 -354.62643433]
[318.02517700 -361.89022827]
[321.90026855 -368.12918091]
[327.64889526 -372.58987427]
[334.52471924 -374.75317383]
[341.65563965 -374.39434814]
[349.91329956 -386.91677856]
[358.17098999 -399.43920898]
[366.42864990 -411.96160889]
[367.56646729 -427.74185181]
[381.03228760 -434.10748291]
[389.28994751 -446.62988281]
[397.54760742 -459.15231323]
[394.58142090 -474.44412231]
[403.13424683 -487.02600098]
[417.73095703 -489.75955200]
[425.98861694 -502.28198242]
[434.24627686 -514.80438232]
[429.60623169 -529.73773193]
[435.69836426 -544.13983154]
[449.64614868 -551.21044922]
[464.86386108 -547.61108398]
[474.16613770 -535.04119873]
[473.16079712 -519.43597412]
[462.32244873 -508.16366577]
[446.76870728 -506.54675293]
[438.51101685 -494.02432251]
[430.25335693 -481.50189209]
[433.49005127 -467.00848389]
[425.29400635 -454.19134521]
[410.07003784 -450.89465332]
[401.81237793 -438.37222290]
[393.55468750 -425.84982300]
[393.00750732 -410.96527100]
[378.95104980 -403.70394897]
[370.69338989 -391.18154907]
[362.43572998 -378.65911865]
[354.17807007 -366.13668823]
[355.31362915 -343.71450806]
[334.52813721 -333.42642212]
[327.31036377 -320.27716064]
[320.09255981 -307.12786865]
[312.87478638 -293.97860718]
[305.65698242 -280.82931519]
[298.43920898 -267.68005371]
[291.22140503 -254.53076172]
[284.00363159 -241.38148499]
[276.78582764 -228.23220825]
[269.56805420 -215.08293152]
[262.35025024 -201.93365479]
[255.13246155 -188.78437805]
[255.79093933 -173.90432739]
[242.36782837 -165.52992249]
[235.15003967 -152.38064575]
[235.80851746 -137.50059509]
[222.38540649 -129.12619019]
[215.16761780 -115.97691345]
[207.94982910 -102.82763672]
[200.73204041 -89.67835999]
[202.57682800 -70.43868256]
[185.20954895 -60.22277832]
[178.42134094 -46.84666824]
[183.27667236 -32.81237793]
[176.58300781 -19.15040016]
[161.82963562 -14.15283966]
[155.04142761 -0.77673161]
[148.25321960 12.59937668]
[141.46501160 25.97548485]
[134.67680359 39.35159302]
[128.32530212 52.94050217]
[122.41717529 66.72795868]
[116.50903320 80.51541138]
[110.60089874 94.30286407]
[104.91680145 108.18418884]
[99.45822906 122.15572357]
[93.99964905 136.12727356]
[88.88203430 150.22726440]
[84.10839081 164.44740295]
[79.33473969 178.66754150]
[86.33302307 186.75326538]
[89.31349945 196.93899536]
[87.80108643 207.36184692]
[82.13609314 216.14448547]
[73.40058899 221.73329163]
[63.21232224 223.17306519]
[57.75374985 237.14460754]
[52.29517365 251.11614990]
[46.83660126 265.08767700]
[46.62670898 274.23428345]
[41.17485809 279.24008179]
[35.49075699 293.12142944]
[37.42158127 308.82437134]
[25.43844604 317.67047119]
[19.75434494 331.55178833]
[14.07024479 345.43310547]
[8.38614464 359.31442261]
[12.00945663 379.13510132]
[-3.75548100 390.31701660]
[-8.98709679 404.37512207]
[-2.54906774 411.67611694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 21]
[6 20]
[7 19]
[8 18]
[9 16]
[10 15]
[24 192]
[25 191]
[29 189]
[30 188]
[31 187]
[32 186]
[34 184]
[35 183]
[36 181]
[37 180]
[38 179]
[39 178]
[42 172]
[43 171]
[44 170]
[48 169]
[49 168]
[50 167]
[53 166]
[54 165]
[55 164]
[56 163]
[61 162]
[62 161]
[63 160]
[64 159]
[65 158]
[68 155]
[69 154]
[73 152]
[74 151]
[75 150]
[76 149]
[78 147]
[79 146]
[81 144]
[82 143]
[83 142]
[84 141]
[85 140]
[86 139]
[87 138]
[88 137]
[89 136]
[90 135]
[91 134]
[92 133]
[99 131]
[100 130]
[101 129]
[102 128]
[104 126]
[105 125]
[106 124]
[109 121]
[110 120]
[111 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
