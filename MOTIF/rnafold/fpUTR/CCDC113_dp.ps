%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC113)
} def

/sequence { (\
GCAGCCGGAGUGACGCGUGGCCGCCGGCACCCGGAGCUCCUGGGCACACGGCAUUGGCAGGGGCCGCUUCGGCAGAGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 73 0.007597614 ubox
1 78 0.376271041 ubox
2 72 0.005629912 ubox
2 77 0.389795720 ubox
2 79 0.063746739 ubox
3 78 0.064323790 ubox
4 73 0.998993635 ubox
5 72 0.999964594 ubox
6 71 0.999971032 ubox
7 70 0.999856968 ubox
8 69 0.999187974 ubox
9 68 0.999659749 ubox
10 16 0.005091499 ubox
10 67 0.999821498 ubox
11 15 0.004770711 ubox
11 53 0.004973009 ubox
11 66 0.998811492 ubox
12 52 0.008390817 ubox
12 65 0.964173953 ubox
14 23 0.014069039 ubox
14 33 0.032226333 ubox
14 50 0.015573721 ubox
14 66 0.014007215 ubox
15 21 0.021032928 ubox
15 22 0.013278448 ubox
15 24 0.017631196 ubox
15 32 0.032458515 ubox
15 49 0.015762366 ubox
15 52 0.005885155 ubox
15 58 0.009177348 ubox
15 64 0.979629979 ubox
15 65 0.012880490 ubox
16 20 0.021518096 ubox
16 23 0.022138993 ubox
16 33 0.003812654 ubox
16 50 0.006846824 ubox
16 51 0.004298944 ubox
16 56 0.003880749 ubox
16 57 0.009138649 ubox
16 63 0.983592131 ubox
17 22 0.021745379 ubox
17 30 0.032433776 ubox
17 32 0.003770756 ubox
17 47 0.015950405 ubox
17 49 0.008028753 ubox
17 54 0.004171093 ubox
17 55 0.003972993 ubox
17 58 0.011040797 ubox
17 64 0.015226218 ubox
17 67 0.017122473 ubox
18 29 0.031989399 ubox
18 46 0.015955552 ubox
18 48 0.008038653 ubox
18 53 0.004329779 ubox
18 57 0.010979399 ubox
18 59 0.097420083 ubox
18 63 0.014154851 ubox
18 66 0.020670970 ubox
19 28 0.023932803 ubox
19 45 0.015941377 ubox
19 47 0.008024890 ubox
19 58 0.071476422 ubox
19 65 0.035216373 ubox
20 28 0.023850777 ubox
20 45 0.006696425 ubox
20 52 0.013943971 ubox
20 58 0.994756272 ubox
20 64 0.036394299 ubox
21 27 0.031959737 ubox
21 43 0.015150597 ubox
21 44 0.006670815 ubox
21 51 0.014286152 ubox
21 57 0.997576788 ubox
21 61 0.004549422 ubox
21 63 0.036354617 ubox
22 26 0.031738052 ubox
22 42 0.015171743 ubox
22 43 0.006592181 ubox
22 50 0.014286209 ubox
22 56 0.996709387 ubox
22 60 0.004587847 ubox
22 61 0.003385878 ubox
22 62 0.036286669 ubox
23 41 0.014425063 ubox
23 49 0.014193532 ubox
23 52 0.989168274 ubox
23 55 0.130071374 ubox
23 58 0.010168546 ubox
24 34 0.032501140 ubox
24 51 0.998407019 ubox
24 57 0.010177333 ubox
24 61 0.014457802 ubox
25 33 0.036753835 ubox
25 50 0.998399348 ubox
25 56 0.010171776 ubox
25 60 0.014419586 ubox
26 32 0.036833451 ubox
26 38 0.008501632 ubox
26 49 0.997142733 ubox
26 55 0.009538228 ubox
26 65 0.003517325 ubox
27 31 0.036239274 ubox
27 37 0.008996542 ubox
27 45 0.134376995 ubox
27 52 0.005672628 ubox
27 54 0.007412649 ubox
27 58 0.013397846 ubox
27 64 0.003705973 ubox
28 36 0.008997216 ubox
28 44 0.130866072 ubox
28 51 0.005663477 ubox
28 56 0.004354670 ubox
28 57 0.012991356 ubox
28 63 0.003703517 ubox
29 55 0.005203269 ubox
30 43 0.135091229 ubox
30 44 0.987324700 ubox
30 62 0.003720154 ubox
31 42 0.134708579 ubox
31 43 0.989308332 ubox
31 44 0.012378475 ubox
31 51 0.013629837 ubox
31 57 0.003755417 ubox
31 61 0.003722654 ubox
32 42 0.989310531 ubox
32 43 0.011598472 ubox
32 50 0.013690177 ubox
32 56 0.004222261 ubox
32 60 0.003718824 ubox
33 39 0.007978396 ubox
33 40 0.311309873 ubox
33 41 0.947444655 ubox
33 49 0.013702486 ubox
33 55 0.004221974 ubox
34 38 0.005724533 ubox
34 39 0.314007817 ubox
34 40 0.945094911 ubox
34 54 0.004183429 ubox
35 41 0.008796501 ubox
36 40 0.010241733 ubox
36 45 0.013910259 ubox
36 52 0.005344307 ubox
36 58 0.003579839 ubox
36 64 0.047320076 ubox
37 44 0.013915411 ubox
37 51 0.005316830 ubox
37 57 0.003580626 ubox
37 63 0.047432613 ubox
38 43 0.012791550 ubox
38 50 0.003926878 ubox
38 56 0.003429191 ubox
38 62 0.047384046 ubox
39 50 0.003437458 ubox
39 61 0.047458546 ubox
40 60 0.047457905 ubox
41 48 0.005795791 ubox
41 59 0.047124657 ubox
42 47 0.005934885 ubox
42 58 0.045084219 ubox
43 54 0.006652899 ubox
44 52 0.016710551 ubox
44 58 0.014368740 ubox
45 51 0.016826874 ubox
45 56 0.033900888 ubox
45 57 0.015931759 ubox
46 55 0.033078822 ubox
47 56 0.016695267 ubox
48 55 0.015094385 ubox
49 56 0.003776772 ubox
51 58 0.006932624 ubox
51 64 0.004046090 ubox
52 57 0.006976303 ubox
52 63 0.004047873 ubox
54 61 0.004186046 ubox
55 60 0.005023363 ubox
55 61 0.003686156 ubox
55 66 0.007481013 ubox
56 65 0.025796746 ubox
57 64 0.027447584 ubox
58 63 0.027409770 ubox
74 78 0.010036395 ubox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
15 64 0.9500000 lbox
16 63 0.9500000 lbox
20 58 0.9500000 lbox
21 57 0.9500000 lbox
22 56 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
25 50 0.9500000 lbox
26 49 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
showpage
end
%%EOF
