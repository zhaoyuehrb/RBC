%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAGGGCUGCAGCUCCGGAGCCUACGGGAGUGUGACCCUCUCGCCUCCUGGCGGGAAGCUCUUGAGGAGAUAUUUUCUUUUCUAAACACUAAGAAAUUUGAGGAUGGUGGGGCAAAACGACUAACUCCCACUUUCCUGUGACUCUGUAGCCGGAAAAACUGUCAAAAUCUGUGGAUAAAUUUGUGAGACAAGAAGAAGA\
) } def
/len { sequence length } bind def

/coor [
[179.27755737 257.07223511]
[178.45774841 245.62965393]
[179.78929138 234.22985840]
[183.22735596 223.27395630]
[188.65295410 213.14779663]
[195.87709045 204.20843506]
[186.53784180 192.47053528]
[177.19859314 180.73262024]
[167.85934448 168.99472046]
[158.52009583 157.25680542]
[149.18084717 145.51890564]
[139.84159851 133.78100586]
[130.50234985 122.04309082]
[64.22633362 132.10906982]
[49.91764450 136.61035156]
[35.60895920 141.11161804]
[24.76664543 152.63354492]
[10.30409527 149.07209778]
[-4.00459385 153.57336426]
[-18.31328201 158.07463074]
[-32.62197113 162.57589722]
[-46.93066025 167.07717896]
[-47.57995605 176.68063354]
[-52.33248138 185.77340698]
[-60.82995987 192.59252930]
[-71.96096039 195.60528564]
[-83.99855804 193.82589722]
[-96.87014008 201.52799988]
[-109.74171448 209.23011780]
[-112.03731537 224.69828796]
[-123.77281952 235.03326416]
[-139.40708923 235.35520935]
[-151.55809021 225.51208496]
[-154.48851013 210.15151978]
[-146.81466675 196.52632141]
[-132.15994263 191.06987000]
[-117.44382477 196.35855103]
[-104.57225037 188.65643311]
[-91.70067596 180.95431519]
[-96.08998871 166.61088562]
[-111.06755066 167.43104553]
[-126.04511261 168.25120544]
[-141.02267456 169.07136536]
[-156.00022888 169.89151001]
[-170.97779846 170.71166992]
[-185.95535278 171.53182983]
[-199.38462830 180.94387817]
[-214.13406372 173.77548218]
[-215.03073120 157.40086365]
[-201.15219116 148.66484070]
[-186.77551270 156.55426025]
[-171.79794312 155.73411560]
[-156.82038879 154.91395569]
[-141.84281921 154.09379578]
[-126.86526489 153.27363586]
[-111.88770294 152.45349121]
[-96.91014099 151.63333130]
[-71.67303467 139.59645081]
[-51.43193054 152.76847839]
[-37.12324142 148.26721191]
[-22.81455231 143.76594543]
[-8.50586319 139.26467896]
[5.80282545 134.76339722]
[15.62168503 123.56343842]
[31.10768890 126.80292511]
[45.41637802 122.30165863]
[59.72506714 117.80038452]
[62.98119736 103.15806580]
[51.92863846 93.01701355]
[40.87607956 82.87596130]
[29.82352257 72.73490143]
[13.79800797 71.98493958]
[4.50971889 58.90414047]
[9.08383560 43.52698135]
[24.01148605 37.64950180]
[37.84145737 45.78039932]
[39.96457672 61.68234634]
[51.01713181 71.82340240]
[62.06969070 81.96445465]
[73.12224579 92.10550690]
[85.48745728 83.61424255]
[79.99176025 69.65726471]
[74.49606323 55.70028687]
[69.00035858 41.74330521]
[53.94487762 37.98670197]
[43.99863052 26.07654572]
[42.98615265 10.59253788]
[51.29676437 -2.51140642]
[65.73486328 -8.19655323]
[80.74871063 -4.27684689]
[90.56517029 7.74050522]
[91.40961456 23.23458481]
[82.95733643 36.24760437]
[88.45304108 50.20458603]
[93.94873810 64.16156769]
[99.44444275 78.11854553]
[106.89296722 78.99570465]
[103.95801544 64.28564453]
[117.04118347 56.94869614]
[128.06193542 67.12430573]
[121.79002380 80.75003815]
[129.23855591 81.62720490]
[137.82618713 69.32872772]
[146.41383362 57.03025055]
[155.00146484 44.73177338]
[156.55838013 28.98736000]
[170.18865967 22.98196411]
[178.77629089 10.68348789]
[187.36393738 -1.61498857]
[195.95156860 -13.91346455]
[204.53919983 -26.21194077]
[213.12684631 -38.51041794]
[221.71447754 -50.80889511]
[213.81788635 -63.83056259]
[211.90684509 -78.93909454]
[216.31240845 -93.51684570]
[226.27131653 -105.03813171]
[240.05812073 -111.50682068]
[255.28417969 -111.80216980]
[269.31146240 -105.87300873]
[279.70968628 -94.74660492]
[284.67727661 -80.35067749]
[283.35360718 -65.17939758]
[275.96795654 -51.86128616]
[263.79995728 -42.70378876]
[248.95777893 -39.29349518]
[234.01295471 -42.22126007]
[225.42530823 -29.92278290]
[216.83767700 -17.62430573]
[208.25004578 -5.32582951]
[199.66241455 6.97264671]
[191.07476807 19.27112389]
[182.48713684 31.56959915]
[181.54446411 46.43434525]
[167.29994202 53.31940842]
[158.71229553 65.61788177]
[150.12466431 77.91635895]
[141.53703308 90.21483612]
[153.33679199 80.95386505]
[168.30053711 81.99614716]
[178.70245361 92.80355835]
[179.17201233 107.79620361]
[169.46676636 119.23335266]
[154.59756470 121.20997620]
[142.24026489 112.70384979]
[151.57951355 124.44174957]
[160.91876221 136.17965698]
[170.25801086 147.91755676]
[179.59725952 159.65547180]
[188.93650818 171.39337158]
[198.27575684 183.13128662]
[207.61500549 194.86918640]
[225.07560730 187.65136719]
[243.88937378 186.09700012]
[262.26705933 190.34425354]
[278.46383667 199.98001099]
[290.94494629 214.08006287]
[298.53112793 231.29765320]
[300.51004028 249.99218750]
[296.70309448 268.38558960]
[287.48159790 284.73126221]
[298.04669189 295.37921143]
[308.61175537 306.02719116]
[319.17684937 316.67514038]
[332.18319702 309.04067993]
[346.67977905 304.88137817]
[361.75534058 304.45874023]
[376.46218872 307.79931641]
[389.87585449 314.69314575]
[401.15313721 324.70681763]
[409.58511353 337.21090698]
[414.64178467 351.41937256]
[416.00527954 366.43908691]
[413.58987427 381.32589722]
[407.54739380 395.14395142]
[398.25765991 407.02471924]
[386.30468750 416.22128296]
[372.43981934 422.15560913]
[357.53460693 424.45458984]
[342.52600098 422.97378540]
[328.35748291 417.80624390]
[315.91964722 409.27676392]
[305.99441528 397.92160034]
[299.20565796 384.45446777]
[295.98010254 369.72195435]
[296.52053833 354.65017700]
[300.79296875 340.18652344]
[308.52886963 327.24023438]
[297.96380615 316.59225464]
[287.39871216 305.94430542]
[276.83364868 295.29632568]
[267.20407104 301.42144775]
[256.59524536 305.64306641]
[245.37950134 307.81082153]
[233.95083618 307.84652710]
[222.71113586 305.74691772]
[212.05604553 301.58383179]
[202.36094666 295.50177002]
[193.96788025 287.71295166]
[187.17332458 278.48974609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 152]
[7 151]
[8 150]
[9 149]
[10 148]
[11 147]
[12 146]
[13 145]
[14 67]
[15 66]
[16 65]
[18 63]
[19 62]
[20 61]
[21 60]
[22 59]
[27 39]
[28 38]
[29 37]
[40 57]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[68 80]
[69 79]
[70 78]
[71 77]
[81 96]
[82 95]
[83 94]
[84 93]
[102 138]
[103 137]
[104 136]
[105 135]
[107 133]
[108 132]
[109 131]
[110 130]
[111 129]
[112 128]
[113 127]
[161 191]
[162 190]
[163 189]
[164 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
