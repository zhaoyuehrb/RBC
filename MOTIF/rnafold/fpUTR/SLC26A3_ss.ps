%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUGGAUGCACACAGAGCCUGUAGACCUGAGUGGAUGGACACUGCCUCUUAGAACUAGAACUUAGAACUUUAUCUUGAAAAUGUACCACUGUUGCAGAAGCUCCUCACAGAGUAUGUGUCAGGCAUUUUUAACCUGCUAAAGGCAAGAAGAAGUGUUCACCACAUAGUUGCAAAGGUCUUCAACUUGCCACAGCCAACAGAAAAAUCAAA\
) } def
/len { sequence length } bind def

/coor [
[208.57501221 782.49572754]
[215.37562561 768.98254395]
[226.02064514 758.23364258]
[239.46717834 751.30212402]
[237.03288269 736.50097656]
[234.59860229 721.69982910]
[217.97955322 711.53387451]
[214.13687134 692.12347412]
[225.98919678 675.89910889]
[222.89952087 661.22070312]
[219.80984497 646.54235840]
[204.33311462 641.89532471]
[193.24809265 630.00878906]
[189.64970398 614.06262207]
[194.61248779 598.38854980]
[206.87216187 587.29327393]
[203.56532288 572.66235352]
[200.25846863 558.03137207]
[196.84330750 543.42535400]
[193.32000732 528.84497070]
[189.79672241 514.26464844]
[174.42825317 508.49407959]
[165.43785095 494.56045532]
[166.53526306 477.84793091]
[177.48568726 464.95617676]
[173.74671936 450.42965698]
[170.00776672 435.90310669]
[165.29658508 430.20941162]
[166.32272339 421.13360596]
[162.79943848 406.55325317]
[152.28915405 395.99945068]
[156.56851196 380.76797485]
[153.04522705 366.18762207]
[149.52192688 351.60729980]
[145.99864197 337.02694702]
[141.37236023 331.26406860]
[142.53286743 322.20446777]
[139.22602844 307.57351685]
[135.91917419 292.94256592]
[132.61231995 278.31161499]
[129.30548096 263.68063354]
[125.99862671 249.04969788]
[122.69178009 234.41874695]
[119.38493347 219.78779602]
[105.65132904 214.08462524]
[97.81673431 201.23616028]
[99.06464386 186.06065369]
[109.12537384 174.39498901]
[105.81852722 159.76403809]
[102.51168060 145.13307190]
[99.20482635 130.50212097]
[85.84001160 130.18540955]
[72.79736328 123.83988953]
[62.82417297 111.78768921]
[58.40357590 95.59484863]
[61.20202255 77.88510132]
[46.62167740 74.36181641]
[32.04133606 70.83852386]
[17.65560913 77.93996429]
[3.19596004 70.99028015]
[-0.24540709 55.32067490]
[9.97142982 42.95152664]
[26.00898743 43.37139130]
[35.56462479 56.25817871]
[50.14496994 59.78147125]
[64.72531128 63.30475998]
[70.51406860 58.53607941]
[59.40776825 48.45391083]
[45.10507965 43.93361282]
[39.17928696 30.15373611]
[45.73662567 16.66294861]
[60.23323441 12.80959320]
[72.62379456 21.26382256]
[74.32228088 36.16758347]
[82.09157562 48.99871826]
[87.88033295 44.23003769]
[87.21370697 29.24485779]
[86.54707336 14.25967884]
[85.88044739 -0.72550064]
[85.21382141 -15.71068001]
[84.54719543 -30.69585991]
[83.88056183 -45.68103790]
[83.21393585 -60.66621780]
[82.54730988 -75.65139771]
[81.88068390 -90.63658142]
[79.41690826 -94.20991516]
[78.32746124 -98.00016785]
[78.51183319 -101.54879761]
[79.73097229 -104.47696686]
[81.64523315 -106.52383423]
[81.86750793 -121.52218628]
[82.08978271 -136.52053833]
[71.36139679 -147.81387329]
[71.80047607 -163.02117920]
[82.63306427 -173.17945862]
[82.85533905 -188.17781067]
[83.07761383 -203.17616272]
[75.06351471 -210.52883911]
[72.47190094 -220.86534119]
[75.92414093 -230.71473694]
[84.05268097 -236.90512085]
[84.71930695 -251.89028931]
[85.38593292 -266.87548828]
[86.05256653 -281.86065674]
[75.20135498 -293.35095215]
[75.73675537 -309.14614868]
[87.34113312 -319.87527466]
[103.12980652 -319.17291260]
[113.73564148 -307.45574951]
[112.86637878 -291.67538452]
[101.03774261 -281.19403076]
[100.37111664 -266.20883179]
[99.70449066 -251.22366333]
[99.03785706 -236.23847961]
[109.18297577 -219.77699280]
[98.07596588 -202.95388794]
[97.85369110 -187.95553589]
[97.63141632 -172.95718384]
[108.15822601 -162.48236084]
[108.14646912 -147.26872253]
[97.08813477 -136.29826355]
[96.86585999 -121.29991150]
[96.64358521 -106.30155945]
[96.86585999 -91.30320740]
[97.53248596 -76.31802368]
[98.19911957 -61.33284760]
[98.86574554 -46.34766769]
[99.53237152 -31.36248779]
[100.19899750 -16.37730789]
[100.86563110 -1.39212847]
[101.53225708 13.59305096]
[102.19888306 28.57822990]
[102.86550903 43.56341171]
[116.26074982 50.31378555]
[128.70184326 41.93408203]
[141.14292908 33.55438232]
[145.61335754 18.14676285]
[160.50108337 12.16887093]
[174.38551331 20.20643234]
[176.61569214 36.09371948]
[165.48081970 47.64336395]
[149.52262878 45.99546814]
[137.08154297 54.37516785]
[124.64045715 62.75486755]
[137.52445984 102.13822174]
[113.83578491 127.19528198]
[117.14263153 141.82623291]
[120.44947815 156.45718384]
[123.75632477 171.08813477]
[137.85612488 177.29310608]
[145.50920105 190.45684814]
[143.96182251 205.42579651]
[134.01588440 216.48094177]
[137.32273865 231.11189270]
[140.62957764 245.74284363]
[143.93643188 260.37380981]
[147.24327087 275.00476074]
[150.55012512 289.63571167]
[153.85697937 304.26666260]
[157.16381836 318.89761353]
[160.57897949 333.50366211]
[164.10227966 348.08401489]
[167.62556458 362.66433716]
[171.14884949 377.24468994]
[181.91116333 388.84140015]
[177.37977600 403.02996826]
[180.90307617 417.61032104]
[184.53430176 432.16415405]
[188.27325439 446.69067383]
[192.01222229 461.21722412]
[205.17205811 465.31570435]
[214.51432800 475.30212402]
[217.67707825 488.49511719]
[213.93823242 501.42391968]
[204.37705994 510.74136353]
[207.90036011 525.32171631]
[211.42364502 539.90203857]
[216.48085022 547.50787354]
[214.88941956 554.72454834]
[218.19627380 569.35546875]
[221.50311279 583.98645020]
[235.05790710 587.43878174]
[245.75192261 596.35186768]
[251.53480530 608.94250488]
[251.32987976 622.73004150]
[245.23413086 635.02471924]
[234.48818970 643.45269775]
[237.57786560 658.13104248]
[240.66754150 672.80938721]
[250.77346802 676.22491455]
[258.49133301 683.47149658]
[262.47470093 693.19305420]
[262.06689453 703.61029053]
[257.40850830 712.84649658]
[249.39974976 719.26550293]
[251.83404541 734.06665039]
[254.26834106 748.86785889]
[269.22656250 751.12768555]
[282.75341797 757.90112305]
[293.52368164 768.52453613]
[300.48220825 781.95709229]
[302.94726562 796.88287354]
[300.67736816 811.83959961]
[293.89486694 825.36187744]
[283.26425171 836.12506104]
[269.82702637 843.07458496]
[254.89961243 845.52960205]
[239.94444275 843.24969482]
[226.42666626 836.45812988]
[215.67063904 825.82031250]
[208.73011780 812.37841797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[9 189]
[10 188]
[11 187]
[16 181]
[17 180]
[18 179]
[19 177]
[20 176]
[21 175]
[25 170]
[26 169]
[27 168]
[29 167]
[30 166]
[32 164]
[33 163]
[34 162]
[35 161]
[37 160]
[38 159]
[39 158]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[48 149]
[49 148]
[50 147]
[51 146]
[56 66]
[57 65]
[58 64]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[90 123]
[91 122]
[92 121]
[95 118]
[96 117]
[97 116]
[101 114]
[102 113]
[103 112]
[104 111]
[134 144]
[135 143]
[136 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
