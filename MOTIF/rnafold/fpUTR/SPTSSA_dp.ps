%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPTSSA)
} def

/sequence { (\
GUGAGCGGGCGGCCGGCCGGACAGACUGACGUGUGAGCUGCAUCGCGGGAGGCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.071055169 ubox
1 17 0.004075306 ubox
1 22 0.014815523 ubox
1 26 0.012476166 ubox
1 30 0.027798804 ubox
1 41 0.008951389 ubox
1 43 0.010519474 ubox
1 46 0.087350939 ubox
1 53 0.729708066 ubox
1 55 0.084897555 ubox
2 9 0.070587785 ubox
2 11 0.011001239 ubox
2 16 0.004043203 ubox
2 19 0.011722747 ubox
2 21 0.014416668 ubox
2 23 0.020482471 ubox
2 25 0.012104416 ubox
2 29 0.027724401 ubox
2 40 0.008665725 ubox
2 42 0.011665307 ubox
2 45 0.087383972 ubox
2 47 0.018461633 ubox
2 52 0.727802285 ubox
2 54 0.085531969 ubox
3 10 0.014330011 ubox
3 14 0.003604194 ubox
3 18 0.016091849 ubox
3 22 0.022925415 ubox
3 41 0.011852436 ubox
3 44 0.091779058 ubox
3 46 0.007781958 ubox
3 53 0.082279166 ubox
4 27 0.027522551 ubox
4 39 0.015406282 ubox
4 43 0.090175390 ubox
5 13 0.008780468 ubox
5 17 0.015481702 ubox
5 26 0.027487293 ubox
5 38 0.015840202 ubox
5 41 0.085512955 ubox
5 46 0.967212256 ubox
5 53 0.040070983 ubox
5 55 0.031507260 ubox
6 12 0.008815275 ubox
6 15 0.022965178 ubox
6 16 0.014117945 ubox
6 19 0.028309582 ubox
6 37 0.015800528 ubox
6 40 0.085595695 ubox
6 45 0.968394953 ubox
6 47 0.015318908 ubox
6 52 0.040149365 ubox
6 54 0.031724709 ubox
7 14 0.024931832 ubox
7 18 0.025356920 ubox
7 39 0.082285510 ubox
7 44 0.969551063 ubox
7 46 0.014472200 ubox
7 53 0.022686456 ubox
8 13 0.024918815 ubox
8 14 0.012647372 ubox
8 17 0.021875908 ubox
8 18 0.038136569 ubox
8 38 0.079196417 ubox
8 39 0.023688568 ubox
8 43 0.873817053 ubox
8 44 0.014303181 ubox
9 13 0.012453851 ubox
9 17 0.040596065 ubox
9 32 0.005421676 ubox
9 34 0.004913999 ubox
9 38 0.031741536 ubox
9 41 0.973465273 ubox
9 43 0.005681556 ubox
9 46 0.056355104 ubox
9 53 0.026949556 ubox
9 55 0.151541886 ubox
10 16 0.042567349 ubox
10 19 0.018751819 ubox
10 31 0.005442091 ubox
10 33 0.004949303 ubox
10 35 0.018977796 ubox
10 37 0.037858458 ubox
10 40 0.974623869 ubox
10 45 0.056412329 ubox
10 47 0.003515926 ubox
10 52 0.027558028 ubox
10 54 0.153049558 ubox
11 18 0.019077260 ubox
11 30 0.005439160 ubox
11 32 0.004004209 ubox
11 34 0.017360974 ubox
11 39 0.973903393 ubox
11 44 0.056238842 ubox
11 46 0.003336640 ubox
11 53 0.108437724 ubox
12 17 0.018960862 ubox
12 32 0.003266760 ubox
12 34 0.081040005 ubox
12 38 0.974622524 ubox
12 41 0.027131354 ubox
12 43 0.049411008 ubox
12 46 0.004122043 ubox
12 53 0.151654715 ubox
13 20 0.007122998 ubox
13 33 0.081885330 ubox
13 37 0.974306690 ubox
13 40 0.019492873 ubox
13 45 0.004258603 ubox
13 48 0.005261822 ubox
13 49 0.030062144 ubox
13 52 0.186470723 ubox
14 19 0.009285231 ubox
14 28 0.007288007 ubox
14 31 0.093562933 ubox
14 33 0.013976987 ubox
14 35 0.361560541 ubox
14 40 0.057752199 ubox
14 47 0.005270561 ubox
14 48 0.030054956 ubox
14 51 0.186468056 ubox
15 27 0.007372989 ubox
15 30 0.093764175 ubox
15 32 0.012888542 ubox
15 34 0.326969998 ubox
15 39 0.062412590 ubox
15 46 0.004730438 ubox
16 26 0.007382648 ubox
16 32 0.076524679 ubox
16 34 0.910737208 ubox
16 38 0.063186249 ubox
16 41 0.003875815 ubox
16 46 0.030087316 ubox
16 53 0.012058400 ubox
17 31 0.075508463 ubox
17 33 0.922137627 ubox
17 37 0.063237253 ubox
17 40 0.003288163 ubox
17 45 0.026882386 ubox
17 48 0.186485257 ubox
17 49 0.005038391 ubox
17 52 0.012070247 ubox
18 28 0.155625263 ubox
18 31 0.959179332 ubox
18 33 0.012607105 ubox
18 35 0.081894593 ubox
18 40 0.009028294 ubox
18 45 0.014116266 ubox
18 47 0.186550358 ubox
18 48 0.004193258 ubox
18 51 0.012038399 ubox
19 27 0.158646075 ubox
19 30 0.958735416 ubox
19 32 0.013612530 ubox
19 34 0.082424707 ubox
19 39 0.009791308 ubox
19 44 0.019801358 ubox
19 46 0.185833198 ubox
20 26 0.162713436 ubox
20 38 0.009949511 ubox
20 43 0.018586701 ubox
20 44 0.179489711 ubox
21 32 0.097091247 ubox
21 34 0.021429646 ubox
21 43 0.171260869 ubox
22 28 0.491437431 ubox
22 31 0.097520452 ubox
22 33 0.022652768 ubox
22 35 0.038474352 ubox
22 40 0.186480572 ubox
23 27 0.399577287 ubox
23 32 0.022646468 ubox
23 34 0.038695084 ubox
23 39 0.187833182 ubox
24 38 0.187862513 ubox
24 44 0.003573257 ubox
25 32 0.041680024 ubox
25 34 0.025624752 ubox
25 43 0.003579312 ubox
26 31 0.041835367 ubox
26 33 0.025983425 ubox
26 37 0.185557797 ubox
26 48 0.011238092 ubox
26 51 0.015401008 ubox
26 52 0.005358154 ubox
27 35 0.007972123 ubox
27 36 0.185307790 ubox
27 42 0.007372147 ubox
27 47 0.011243007 ubox
27 50 0.015438657 ubox
27 51 0.005347650 ubox
28 34 0.008978022 ubox
28 41 0.007442450 ubox
28 46 0.011246948 ubox
30 45 0.009757444 ubox
30 47 0.016067546 ubox
30 54 0.006061060 ubox
31 38 0.007519643 ubox
31 43 0.007906435 ubox
31 44 0.009573273 ubox
31 46 0.016046625 ubox
31 53 0.006248047 ubox
31 55 0.043293646 ubox
32 37 0.007418034 ubox
32 42 0.012079185 ubox
32 45 0.015999945 ubox
32 47 0.006656463 ubox
32 52 0.006193554 ubox
32 54 0.043551173 ubox
33 41 0.012255024 ubox
33 43 0.004520020 ubox
33 44 0.015757849 ubox
33 46 0.008322500 ubox
33 53 0.043868042 ubox
34 40 0.012069413 ubox
34 42 0.014967292 ubox
34 45 0.008438526 ubox
34 52 0.043728049 ubox
35 39 0.005602766 ubox
35 41 0.015208388 ubox
35 44 0.009107148 ubox
36 43 0.009027393 ubox
37 46 0.003878906 ubox
37 55 0.005058947 ubox
38 45 0.003958932 ubox
38 48 0.045168503 ubox
38 54 0.004988679 ubox
39 47 0.045179852 ubox
39 54 0.004824749 ubox
40 46 0.045254448 ubox
40 53 0.009387190 ubox
41 45 0.044931172 ubox
41 52 0.009390977 ubox
43 50 0.013218493 ubox
43 52 0.004304563 ubox
44 49 0.014058603 ubox
44 51 0.005862928 ubox
44 54 0.072044850 ubox
45 53 0.080296309 ubox
45 55 0.076984476 ubox
46 52 0.080513457 ubox
46 54 0.083489953 ubox
47 53 0.148947361 ubox
1 53 0.9500000 lbox
2 52 0.9500000 lbox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
8 43 0.9500000 lbox
9 41 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
showpage
end
%%EOF
