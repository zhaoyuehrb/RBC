%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGGUUUCAUUUCCGGGUGGCGCGGGCGCCAUUUUGUGAGGAGCGAUAUAAACGGGCGCAGAGGCCGGCUGCCCGCCCAGUUGUUACUCAGGUGCGCUAGCCUGCGGAGCCCGUCCGUGCUGUUCUGCGGCAAGGCCUUUCCCAGUGUCCCCACGCGGAAGGCAACUGCCUGAGAGGCGCGGCGUCGCACCGCCCAGAGCUGAGGAAGCCGGCGCCAGUUCGCGGGGCUCCGGGCCGCCACUCAGAGCU\
) } def
/len { sequence length } bind def

/coor [
[90.38064575 321.15502930]
[84.45668030 335.12896729]
[73.88196564 346.01657104]
[60.08665466 352.34539795]
[44.93644333 353.25949097]
[30.48027611 348.63522339]
[18.67323112 339.09802246]
[11.11211491 325.93771362]
[8.81950474 310.93411255]
[12.10545731 296.11630249]
[20.52557564 283.48831177]
[32.94110489 274.75796509]
[47.67295074 271.10595703]
[49.53810883 256.22238159]
[51.40326309 241.33879089]
[45.30856705 227.74821472]
[54.70178604 215.01722717]
[56.56694031 200.13363647]
[58.43209457 185.25004578]
[60.29725266 170.36645508]
[62.16240692 155.48286438]
[64.02756500 140.59927368]
[65.89271545 125.71569061]
[56.32271576 114.16514587]
[41.35184860 113.23075867]
[26.38097763 112.29636383]
[11.41010952 111.36196899]
[-3.56075931 110.42758179]
[-18.53162766 109.49318695]
[-33.51298141 108.74549866]
[-48.50249100 108.18463135]
[-63.49520874 107.71720886]
[-78.49054718 107.34324646]
[-93.48588562 106.96928406]
[-108.48122406 106.59532928]
[-113.01972198 109.06581116]
[-117.59663391 109.52077484]
[-121.44354248 108.27906036]
[-124.02737427 105.91656494]
[-138.99824524 104.98217773]
[-153.96911621 104.04778290]
[-168.93998718 103.11338806]
[-180.73013306 113.29327393]
[-195.89941406 112.13240051]
[-205.53172302 100.82955170]
[-220.50259399 99.89515686]
[-235.47344971 98.96076965]
[-250.44432068 98.02637482]
[-265.41519165 97.09197998]
[-272.52563477 109.12118530]
[-284.06695557 116.88101959]
[-297.75918579 118.90711975]
[-310.92681885 114.86112213]
[-321.02154541 105.58557129]
[-326.11547852 92.92922211]
[-341.07354736 91.80827332]
[-356.03158569 90.68732452]
[-370.98965454 89.56636810]
[-385.94769287 88.44541931]
[-400.91244507 87.41772461]
[-415.88333130 86.48333740]
[-425.66415405 98.52971649]
[-440.66632080 102.49388123]
[-455.12118530 96.85153198]
[-463.47058105 83.77226257]
[-462.50396729 68.28532410]
[-452.59304810 56.34575653]
[-437.54876709 52.54456711]
[-423.15594482 58.34339523]
[-414.94894409 71.51246643]
[-399.97805786 72.44686127]
[-393.12472534 69.73401642]
[-384.82675171 73.48736572]
[-369.86868286 74.60831451]
[-354.91064453 75.72926331]
[-339.95257568 76.85021973]
[-324.99453735 77.97116852]
[-316.21063232 64.39368439]
[-301.69104004 57.06325912]
[-285.36288452 58.06881332]
[-271.69631958 67.23010254]
[-264.48080444 82.12110901]
[-249.50993347 83.05550385]
[-234.53906250 83.98989868]
[-219.56819153 84.92429352]
[-204.59732056 85.85868073]
[-193.63433838 75.84127045]
[-178.43844604 76.57561493]
[-168.00558472 88.14251709]
[-153.03472900 89.07691193]
[-138.06385803 90.01130676]
[-123.09298706 90.94570160]
[-108.10726166 91.59999084]
[-93.11192322 91.97394562]
[-78.11658478 92.34790802]
[-63.12124634 92.72187042]
[-56.37413788 89.75466919]
[-47.94162369 93.19512177]
[-32.95211411 93.75598907]
[-28.92083168 91.24018860]
[-23.27106667 91.21214294]
[-17.59723473 94.52231598]
[-2.62636685 95.45671082]
[12.34450150 96.39110565]
[27.31537056 97.32549286]
[42.28623962 98.25988770]
[57.25710678 99.19428253]
[103.17520142 80.82108307]
[111.77884674 68.53380585]
[113.35627747 52.79143524]
[126.99436188 46.80379486]
[135.59800720 34.51651382]
[136.78887939 16.12867737]
[152.99285889 9.36166954]
[161.44265747 -3.03191233]
[163.68186951 -11.85970402]
[170.07583618 -15.52642918]
[178.67948914 -27.81370926]
[187.28314209 -40.10099030]
[195.88677979 -52.38827133]
[204.49043274 -64.67555237]
[213.09407043 -76.96282959]
[221.69772339 -89.25011444]
[222.64729309 -95.74995422]
[226.19180298 -100.14962769]
[230.67219543 -101.73284149]
[239.57949829 -113.80180359]
[248.48680115 -125.87077332]
[246.33213806 -141.29786682]
[255.53733826 -153.41062927]
[270.25799561 -155.36968994]
[279.16528320 -167.43865967]
[288.07260132 -179.50762939]
[296.97988892 -191.57659912]
[294.06155396 -208.83766174]
[304.33819580 -222.58998108]
[321.04727173 -224.60125732]
[329.80343628 -236.78033447]
[338.55960083 -248.95941162]
[347.31573486 -261.13848877]
[356.07189941 -273.31753540]
[364.82806396 -285.49661255]
[373.58419800 -297.67568970]
[369.89657593 -310.61358643]
[374.26190186 -323.13308716]
[384.87850952 -330.74649048]
[397.74786377 -330.86157227]
[406.65515137 -342.93054199]
[415.56246948 -354.99951172]
[416.85989380 -371.34725952]
[431.78048706 -378.15225220]
[444.97521973 -368.41412354]
[442.87045288 -352.15060425]
[427.63143921 -346.09222412]
[418.72412109 -334.02325439]
[409.81683350 -321.95428467]
[413.02618408 -305.43341064]
[403.08767700 -291.43478394]
[385.76327515 -288.91952515]
[377.00711060 -276.74044800]
[368.25097656 -264.56140137]
[359.49481201 -252.38232422]
[350.73864746 -240.20324707]
[341.98251343 -228.02418518]
[333.22634888 -215.84510803]
[337.06311035 -203.56045532]
[333.07202148 -191.12071228]
[322.49426270 -183.12666321]
[309.04885864 -182.66929626]
[300.14157104 -170.60032654]
[291.23425293 -158.53135681]
[282.32696533 -146.46238708]
[284.79391479 -131.81828308]
[275.93255615 -119.45175171]
[260.55575562 -116.96347046]
[251.64846802 -104.89450073]
[242.74116516 -92.82553864]
[233.98500061 -80.64646912]
[225.38136292 -68.35918427]
[216.77770996 -56.07190323]
[208.17405701 -43.78462601]
[199.57041931 -31.49734306]
[190.96676636 -19.21006393]
[182.36312866 -6.92278242]
[173.83622742 5.41788864]
[165.38642883 17.81147003]
[167.32838440 29.73431396]
[160.41270447 40.12342453]
[147.88528442 43.12016296]
[139.28164673 55.40744400]
[138.31961060 70.27094269]
[124.06612396 77.13745117]
[115.46247864 89.42473602]
[117.69811249 104.25719452]
[129.54125977 113.46261597]
[141.38441467 122.66803741]
[153.22756958 131.87345886]
[168.87173462 134.23362732]
[174.17213440 148.15321350]
[186.01528931 157.35864258]
[197.85842896 166.56405640]
[209.70158386 175.76948547]
[206.63183594 161.08694458]
[212.69035339 147.36491394]
[225.60861206 139.74134827]
[240.54957581 141.07078552]
[251.91885376 150.85543823]
[255.45941162 165.43161011]
[249.84553528 179.34147644]
[237.17924500 187.37672424]
[222.20460510 186.52920532]
[233.07234192 196.86808777]
[248.40379333 200.77416992]
[252.29190063 215.15234375]
[263.15963745 225.49122620]
[274.02737427 235.83009338]
[289.81851196 235.18557739]
[301.38348389 245.95715332]
[301.86102295 261.75421143]
[290.96777344 273.20468140]
[275.16653442 273.51516724]
[263.83190918 262.50146484]
[263.68847656 246.69783020]
[252.82075500 236.35894775]
[241.95301819 226.02008057]
[227.39891052 222.85350037]
[222.73347473 207.73582458]
[211.86573792 197.39694214]
[200.49615479 187.61262512]
[188.65301514 178.40721130]
[176.80986023 169.20178223]
[164.96670532 159.99636841]
[150.16963196 158.29463196]
[144.02214050 143.71661377]
[132.17898560 134.51118469]
[120.33584595 125.30577087]
[108.49269104 116.10034943]
[101.56359863 118.97047424]
[80.77630615 127.58084869]
[78.91114807 142.46443176]
[77.04599762 157.34802246]
[75.18083954 172.23161316]
[73.31568146 187.11520386]
[71.45053101 201.99879456]
[69.58537292 216.88237000]
[75.54666138 231.53753662]
[66.28684998 243.20394897]
[64.42169952 258.08752441]
[62.55654144 272.97113037]
[75.93167877 280.14538574]
[85.80901337 291.66940308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 249]
[14 248]
[15 247]
[17 245]
[18 244]
[19 243]
[20 242]
[21 241]
[22 240]
[23 239]
[24 107]
[25 106]
[26 105]
[27 104]
[28 103]
[29 102]
[30 99]
[31 98]
[32 96]
[33 95]
[34 94]
[35 93]
[39 92]
[40 91]
[41 90]
[42 89]
[45 86]
[46 85]
[47 84]
[48 83]
[49 82]
[55 77]
[56 76]
[57 75]
[58 74]
[59 73]
[60 71]
[61 70]
[108 193]
[109 192]
[111 190]
[112 189]
[114 186]
[115 185]
[117 184]
[118 183]
[119 182]
[120 181]
[121 180]
[122 179]
[123 178]
[126 177]
[127 176]
[128 175]
[131 172]
[132 171]
[133 170]
[134 169]
[137 165]
[138 164]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[147 156]
[148 155]
[149 154]
[194 237]
[195 236]
[196 235]
[197 234]
[199 232]
[200 231]
[201 230]
[202 229]
[211 228]
[212 227]
[214 225]
[215 224]
[216 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
