%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ADAM15)
} def

/sequence { (\
GGGGCCUGGUGGCCGCGCGGCGCUGCUGGGUUCUCCGAGGCGACCUGGCCGCCGGCCGCUCCUCCGCGCGCUGUUCCGCACUUGCUGCCCUCGCCCGGCCCGGAGCGCCGCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.011115405 ubox
1 115 0.055176199 ubox
2 13 0.007703093 ubox
2 14 0.064590380 ubox
2 114 0.053453603 ubox
2 115 0.016311422 ubox
3 13 0.045819913 ubox
3 14 0.996922855 ubox
4 13 0.998894110 ubox
5 12 0.999963402 ubox
6 11 0.999418149 ubox
7 11 0.003523169 ubox
11 115 0.004104128 ubox
12 114 0.004153269 ubox
13 113 0.004047020 ubox
14 113 0.004862956 ubox
15 111 0.004328369 ubox
15 112 0.025586932 ubox
15 114 0.967424131 ubox
16 110 0.004013882 ubox
16 113 0.969023082 ubox
17 111 0.978667957 ubox
17 112 0.202900524 ubox
18 110 0.999931065 ubox
19 109 0.999970316 ubox
20 108 0.999989212 ubox
21 107 0.999975264 ubox
22 106 0.999974698 ubox
23 105 0.999973982 ubox
24 104 0.996147872 ubox
26 103 0.997379207 ubox
27 102 0.998980569 ubox
28 101 0.999942033 ubox
29 99 0.003732357 ubox
29 100 0.999967575 ubox
29 101 0.003576089 ubox
30 99 0.999399661 ubox
30 100 0.004368550 ubox
31 98 0.339706766 ubox
32 38 0.003380659 ubox
32 97 0.081415800 ubox
32 98 0.027319720 ubox
33 37 0.003801953 ubox
33 97 0.025002996 ubox
33 98 0.015986548 ubox
34 97 0.009225306 ubox
34 98 0.014666403 ubox
35 97 0.028597721 ubox
35 98 0.939236717 ubox
36 93 0.036275424 ubox
36 97 0.995402586 ubox
37 92 0.036530666 ubox
37 96 0.998086380 ubox
38 91 0.036473699 ubox
39 50 0.003280258 ubox
39 89 0.019542604 ubox
39 90 0.030609740 ubox
39 95 0.999184783 ubox
39 96 0.004190748 ubox
40 49 0.003755546 ubox
40 52 0.003744957 ubox
40 85 0.005311771 ubox
40 88 0.027579820 ubox
40 89 0.022617691 ubox
40 94 0.999315445 ubox
41 48 0.003873946 ubox
41 51 0.004164980 ubox
41 84 0.006914967 ubox
41 87 0.033738116 ubox
41 93 0.999305991 ubox
42 50 0.004196831 ubox
42 83 0.007044182 ubox
42 86 0.029297791 ubox
42 92 0.999201008 ubox
43 74 0.003658140 ubox
43 82 0.006854994 ubox
43 91 0.991817435 ubox
44 73 0.003915497 ubox
46 58 0.010069387 ubox
46 73 0.007245722 ubox
46 78 0.006004996 ubox
46 80 0.005896557 ubox
46 87 0.038488489 ubox
47 53 0.003918301 ubox
47 57 0.023414230 ubox
47 72 0.012396401 ubox
47 77 0.022602600 ubox
47 79 0.005838771 ubox
47 82 0.013156917 ubox
47 86 0.059148796 ubox
47 89 0.995430280 ubox
47 90 0.043888990 ubox
48 52 0.003920134 ubox
48 56 0.023473346 ubox
48 71 0.012888548 ubox
48 76 0.022592151 ubox
48 79 0.025811279 ubox
48 81 0.013240517 ubox
48 85 0.060405146 ubox
48 88 0.996318298 ubox
48 89 0.035382036 ubox
49 55 0.023474103 ubox
49 70 0.011299898 ubox
49 78 0.024187288 ubox
49 84 0.060314658 ubox
49 87 0.995410640 ubox
50 54 0.023326956 ubox
50 68 0.010554294 ubox
50 70 0.027407931 ubox
50 73 0.004011346 ubox
50 78 0.125745910 ubox
50 84 0.026644500 ubox
50 87 0.035589545 ubox
51 67 0.011245487 ubox
51 69 0.030612896 ubox
51 71 0.003877030 ubox
51 74 0.046630305 ubox
51 77 0.132640952 ubox
51 79 0.074010327 ubox
51 83 0.011514497 ubox
51 85 0.967408174 ubox
51 86 0.025286910 ubox
51 88 0.011582222 ubox
52 66 0.008464213 ubox
52 68 0.030614769 ubox
52 70 0.003718652 ubox
52 73 0.034814719 ubox
52 78 0.074290893 ubox
52 84 0.967333404 ubox
52 87 0.011576790 ubox
53 66 0.035508137 ubox
53 70 0.005147877 ubox
53 73 0.987413591 ubox
53 78 0.059285747 ubox
53 84 0.013297845 ubox
54 62 0.005672154 ubox
54 65 0.036771912 ubox
54 69 0.005446722 ubox
54 72 0.993875644 ubox
54 75 0.003398595 ubox
54 76 0.004551426 ubox
54 77 0.056963823 ubox
54 82 0.046706829 ubox
54 83 0.010509639 ubox
54 86 0.005322268 ubox
55 61 0.005640144 ubox
55 64 0.036685559 ubox
55 67 0.006004516 ubox
55 69 0.024713401 ubox
55 71 0.996241061 ubox
55 74 0.006237476 ubox
55 76 0.046903639 ubox
55 79 0.019808504 ubox
55 81 0.043273357 ubox
55 82 0.003234293 ubox
55 85 0.005364977 ubox
56 66 0.005459451 ubox
56 68 0.018806764 ubox
56 70 0.994638225 ubox
56 73 0.015218474 ubox
56 78 0.019877615 ubox
56 84 0.005339541 ubox
57 66 0.011252403 ubox
57 68 0.993009602 ubox
57 70 0.072399007 ubox
57 73 0.004059124 ubox
58 65 0.011409473 ubox
58 67 0.994322695 ubox
58 69 0.096453281 ubox
58 71 0.008010869 ubox
58 74 0.004471902 ubox
58 79 0.006860249 ubox
58 85 0.003746269 ubox
58 88 0.003550643 ubox
59 66 0.993301607 ubox
59 68 0.096449636 ubox
59 70 0.008043050 ubox
59 73 0.004543690 ubox
59 78 0.006851709 ubox
59 84 0.003752477 ubox
59 87 0.003563769 ubox
66 74 0.003625152 ubox
66 79 0.008542454 ubox
66 85 0.005884485 ubox
66 88 0.009774393 ubox
67 73 0.003710547 ubox
67 78 0.008580621 ubox
67 84 0.005894839 ubox
67 87 0.009792338 ubox
68 77 0.008547911 ubox
68 79 0.038396952 ubox
68 83 0.004553131 ubox
68 85 0.009300659 ubox
68 86 0.007078790 ubox
68 88 0.009125408 ubox
69 78 0.038787303 ubox
69 84 0.009416026 ubox
69 87 0.009140932 ubox
70 77 0.037681086 ubox
70 79 0.039122973 ubox
70 83 0.007918000 ubox
70 85 0.013715288 ubox
70 88 0.004382829 ubox
71 78 0.039173813 ubox
71 84 0.013890661 ubox
71 87 0.004387865 ubox
72 78 0.003565409 ubox
72 80 0.032649947 ubox
73 77 0.010842191 ubox
73 79 0.056946919 ubox
73 81 0.036493853 ubox
73 83 0.003318828 ubox
73 85 0.007055655 ubox
73 106 0.003410697 ubox
74 78 0.054140226 ubox
74 80 0.037091359 ubox
74 84 0.007189351 ubox
74 105 0.003410160 ubox
75 104 0.003419793 ubox
76 103 0.003428094 ubox
77 84 0.013848058 ubox
77 87 0.003598865 ubox
77 102 0.003427751 ubox
78 83 0.019436375 ubox
78 85 0.192593445 ubox
78 88 0.024380620 ubox
78 101 0.003350854 ubox
79 84 0.192853285 ubox
79 87 0.024534973 ubox
80 86 0.022877594 ubox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
15 114 0.9500000 lbox
16 113 0.9500000 lbox
17 111 0.9500000 lbox
18 110 0.9500000 lbox
19 109 0.9500000 lbox
20 108 0.9500000 lbox
21 107 0.9500000 lbox
22 106 0.9500000 lbox
23 105 0.9500000 lbox
24 104 0.9500000 lbox
26 103 0.9500000 lbox
27 102 0.9500000 lbox
28 101 0.9500000 lbox
29 100 0.9500000 lbox
30 99 0.9500000 lbox
35 98 0.9500000 lbox
36 97 0.9500000 lbox
37 96 0.9500000 lbox
39 95 0.9500000 lbox
40 94 0.9500000 lbox
41 93 0.9500000 lbox
42 92 0.9500000 lbox
43 91 0.9500000 lbox
47 89 0.9500000 lbox
48 88 0.9500000 lbox
49 87 0.9500000 lbox
51 85 0.9500000 lbox
52 84 0.9500000 lbox
53 73 0.9500000 lbox
54 72 0.9500000 lbox
55 71 0.9500000 lbox
56 70 0.9500000 lbox
57 68 0.9500000 lbox
58 67 0.9500000 lbox
59 66 0.9500000 lbox
showpage
end
%%EOF
