%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGGGCUCCGGCUGCGCUCGUGGCCGGGCCGGGCGGGGAGGCCGGUCCCGCGGGCGGGGGCAGGGGCGGCUCCGCGGCUUCUCCCGCCGCCGCCGCCAAGGGGAGUUUCCAGGAAGUGGCCAUAUUGGAUCCAUUCAGCCGCAGCCGCCCGGGCGGAGCGCGUCCCGCAGCCGGCUGGUCCCUGUCGCUGCCCCUGCGCUCGUCCCAGCCCACCCGCCCGGUGCGGAGCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[-68.81551361 843.62518311]
[-82.08918762 833.07788086]
[-75.62857819 817.40313721]
[-75.23428345 802.40832520]
[-74.83998871 787.41351318]
[-74.44568634 772.41870117]
[-74.05139160 757.42388916]
[-73.65709686 742.42907715]
[-76.61753082 735.67291260]
[-73.15777588 727.24011230]
[-72.56642151 712.25177002]
[-71.97505951 697.26342773]
[-71.38369751 682.27508545]
[-85.70338440 677.80889893]
[-93.73745728 690.47595215]
[-101.77153015 703.14300537]
[-109.80560303 715.80999756]
[-117.83967590 728.47705078]
[-125.87374115 741.14404297]
[-126.01517487 757.54260254]
[-140.41876221 765.38281250]
[-154.26733398 756.59936523]
[-153.31465149 740.22790527]
[-138.54077148 733.10998535]
[-130.50669861 720.44299316]
[-122.47263336 707.77593994]
[-114.43856049 695.10888672]
[-106.40448761 682.44189453]
[-98.37041473 669.77484131]
[-99.17839813 649.91168213]
[-88.36302948 635.25933838]
[-72.35633850 631.06732178]
[-68.64891815 616.53271484]
[-64.94149017 601.99810791]
[-61.23406219 587.46350098]
[-57.52663422 572.92889404]
[-53.81921005 558.39428711]
[-50.11178207 543.85968018]
[-46.40435410 529.32507324]
[-42.69692993 514.79040527]
[-38.98950195 500.25582886]
[-46.78885651 487.61834717]
[-43.23604965 472.82537842]
[-29.92782593 464.73037720]
[-26.22039986 450.19577026]
[-22.51297379 435.66116333]
[-26.86452293 421.41638184]
[-15.95640278 409.95672607]
[-12.24897671 395.42211914]
[-25.02893829 403.27529907]
[-39.88275146 401.18624878]
[-50.00080872 390.11264038]
[-50.74456787 375.13107300]
[-41.77305984 363.10977173]
[-27.19919777 359.55975342]
[-13.70425034 366.10852051]
[-7.47488546 379.75360107]
[-2.44765234 365.62112427]
[2.57958031 351.48864746]
[7.60681295 337.35617065]
[12.63404560 323.22369385]
[17.66127968 309.09121704]
[14.63699436 294.50686646]
[26.55192184 284.09796143]
[31.57915497 269.96548462]
[36.60638809 255.83300781]
[41.63362122 241.70053101]
[46.66085434 227.56805420]
[51.68808365 213.43557739]
[56.71531677 199.30310059]
[61.74254990 185.17062378]
[66.76978302 171.03814697]
[71.79701996 156.90567017]
[76.82424927 142.77319336]
[61.92456055 130.28071594]
[53.10723495 112.95105743]
[51.78079987 93.55252838]
[58.15714264 75.18394470]
[46.58939743 65.63474274]
[35.02165222 56.08554459]
[23.45390320 46.53634262]
[11.88615704 36.98714447]
[-3.45766878 40.00393295]
[-17.12583733 32.40687943]
[-22.66465569 17.78308105]
[-17.45886421 3.03744626]
[-3.96647811 -4.86758661]
[11.44180965 -2.19950247]
[21.49067879 9.78191090]
[21.43535805 25.41939545]
[33.00310516 34.96859741]
[44.57085037 44.51779938]
[56.13859940 54.06699753]
[67.70634460 63.61619949]
[73.94371796 58.91799545]
[80.85243225 55.27828598]
[77.14500427 40.74367142]
[73.43758392 26.20905685]
[69.73015594 11.67444420]
[66.02272797 -2.86016941]
[51.11595154 -5.95038462]
[39.07818222 -15.16879463]
[32.26447296 -28.64445877]
[31.97848320 -43.68038940]
[38.22338486 -57.29327393]
[49.71185303 -66.80540466]
[46.00442505 -81.34001923]
[42.29700089 -95.87463379]
[32.52342606 -109.72792053]
[43.12972641 -122.95451355]
[58.77553177 -116.42419434]
[56.83161545 -99.58205414]
[60.53903961 -85.04744720]
[64.24646759 -70.51283264]
[78.88748169 -67.66569519]
[90.88978577 -58.70722961]
[97.84075165 -45.37137222]
[98.31418610 -30.27845955]
[92.16266632 -16.42040253]
[80.55734253 -6.56759596]
[84.26477051 7.96701765]
[87.97219086 22.50163078]
[91.67961884 37.03624344]
[95.38704681 51.57085800]
[101.99797821 51.39270401]
[108.57198334 52.11281967]
[114.98757935 53.71789169]
[121.12620544 56.17826462]
[126.87441254 59.44846725]
[132.12597656 63.46806335]
[136.78385925 68.16278076]
[149.50341797 60.21213150]
[162.22297668 52.26148224]
[174.94253540 44.31083679]
[161.09362793 38.54823685]
[156.83447266 24.16562271]
[165.31245422 11.79130363]
[180.26260376 10.56951714]
[190.63723755 21.40312767]
[188.76899719 36.28768921]
[201.98327637 29.18958092]
[215.19754028 22.09147453]
[228.41180420 14.99336910]
[241.62606812 7.89526224]
[254.84034729 0.79715604]
[258.62136841 -4.58895397]
[263.77755737 -6.92118216]
[268.49658203 -6.30866194]
[281.89285278 -13.05695915]
[290.73669434 -26.17554283]
[305.58413696 -24.99129868]
[318.98043823 -31.73959541]
[323.74929810 -43.71036148]
[335.03054810 -49.05942535]
[346.55282593 -45.41601944]
[360.03668213 -51.98764801]
[373.52050781 -58.55927658]
[387.00433350 -65.13090515]
[400.48815918 -71.70253754]
[407.05404663 -86.34044647]
[422.62744141 -90.19390106]
[435.26174927 -80.30685425]
[435.26501465 -64.26380157]
[422.63473511 -54.37160110]
[407.05978394 -58.21870422]
[393.57595825 -51.64707565]
[380.09213257 -45.07544708]
[366.60830688 -38.50381851]
[353.12445068 -31.93218803]
[344.09317017 -16.87608147]
[325.72872925 -18.34330940]
[312.33245850 -11.59501171]
[304.44680786 1.04088843]
[288.64117432 0.33932692]
[275.24487305 7.08762455]
[261.93844604 14.01142406]
[248.72418213 21.10953140]
[235.50991821 28.20763779]
[222.29563904 35.30574417]
[209.08137512 42.40385056]
[195.86711121 49.50195694]
[182.89318848 57.03039551]
[170.17362976 64.98104095]
[157.45407104 72.93169403]
[144.73451233 80.88233948]
[148.60212708 97.87994385]
[146.22927856 115.14977264]
[137.92062378 130.47438049]
[124.74299622 141.88609314]
[108.38839722 147.91967773]
[90.95672607 147.80041504]
[85.92949677 161.93290710]
[80.90225983 176.06538391]
[75.87503052 190.19786072]
[70.84779358 204.33033752]
[65.82056427 218.46281433]
[60.79333115 232.59529114]
[55.76609802 246.72776794]
[50.73886490 260.86026001]
[45.71163177 274.99273682]
[40.68439865 289.12521362]
[43.34910202 304.72039795]
[31.79375648 314.11843872]
[26.76652336 328.25091553]
[21.73929024 342.38339233]
[16.71205902 356.51586914]
[11.68482494 370.64834595]
[6.65759277 384.78082275]
[2.28563690 399.12954712]
[-1.42178965 413.66415405]
[2.66458011 428.94854736]
[-7.97835970 439.36856079]
[-11.68578625 453.90319824]
[-15.39321232 468.43780518]
[-7.58835411 481.91824341]
[-11.55526257 496.60559082]
[-24.45488930 503.96325684]
[-28.16231537 518.49786377]
[-31.86974144 533.03247070]
[-35.57716751 547.56707764]
[-39.28459549 562.10168457]
[-42.99202347 576.63629150]
[-46.69944763 591.17089844]
[-50.40687561 605.70556641]
[-54.11429977 620.24017334]
[-57.82172775 634.77478027]
[-45.49038315 646.99908447]
[-44.02731323 666.05780029]
[-56.39535904 682.86645508]
[-56.98672104 697.85479736]
[-57.57807922 712.84313965]
[-58.16944122 727.83148193]
[-58.66228104 742.82336426]
[-59.05657578 757.81817627]
[-59.45087433 772.81298828]
[-59.84516907 787.80780029]
[-60.23946762 802.80261230]
[-60.63376236 817.79742432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 238]
[4 237]
[5 236]
[6 235]
[7 234]
[8 233]
[10 232]
[11 231]
[12 230]
[13 229]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[32 226]
[33 225]
[34 224]
[35 223]
[36 222]
[37 221]
[38 220]
[39 219]
[40 218]
[41 217]
[44 214]
[45 213]
[46 212]
[48 210]
[49 209]
[57 208]
[58 207]
[59 206]
[60 205]
[61 204]
[62 203]
[64 201]
[65 200]
[66 199]
[67 198]
[68 197]
[69 196]
[70 195]
[71 194]
[72 193]
[73 192]
[74 191]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[96 124]
[97 123]
[98 122]
[99 121]
[100 120]
[106 114]
[107 113]
[108 112]
[131 185]
[132 184]
[133 183]
[134 182]
[140 181]
[141 180]
[142 179]
[143 178]
[144 177]
[145 176]
[148 175]
[149 174]
[151 172]
[152 171]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
