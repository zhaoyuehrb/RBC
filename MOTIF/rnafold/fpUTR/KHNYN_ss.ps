%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGUGACUCAAGAAACAGUUUGCGUGCGAUGUGGACAAGAGAGGUCCCCGCUGGGUGAGGAACCCGGGAAGGCCCGCCCAGAUUCGGGCCCCCUGCCCUUGUCCCCUGGGCUGGGGGCGCGGGCAAAGCGGGGGCCUGGCGGGCGCUGAGAGGACCUGAAGCCGGCGCGGGCGGCGGAGGCGGGCUGGGGGCAGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[171.26054382 316.03845215]
[183.47471619 324.74560547]
[192.64152527 336.61865234]
[197.97427368 350.63870239]
[199.01530457 365.60253906]
[195.67526245 380.22595215]
[188.24082947 393.25396729]
[177.34999084 403.56848145]
[163.93740845 410.28436279]
[149.15417480 412.82519531]
[134.26896667 410.97296143]
[120.55926514 404.88659668]
[109.20161438 395.08843994]
[101.17073822 382.41937256]
[97.15586090 367.96667480]
[97.50152588 352.97064209]
[102.17807770 338.71829224]
[110.78417206 326.43270874]
[122.58050537 317.16870117]
[128.81378174 303.52517700]
[135.04705811 289.88162231]
[123.03578186 298.86657715]
[111.02450562 307.85150146]
[99.01322174 316.83645630]
[87.00194550 325.82138062]
[74.99066925 334.80633545]
[62.97938538 343.79125977]
[50.96810532 352.77621460]
[41.90662384 367.10540771]
[25.62895012 362.36477661]
[25.67821693 345.41088867]
[41.98316574 340.76492310]
[53.99444580 331.77999878]
[66.00572205 322.79504395]
[78.01700592 313.81011963]
[90.02828217 304.82516479]
[102.03956604 295.84024048]
[114.05084229 286.85528564]
[126.06212616 277.87036133]
[111.30598450 280.56411743]
[99.36456299 271.48654175]
[98.01236725 256.54760742]
[108.12976074 245.47340393]
[123.12976074 245.47380066]
[133.24641418 256.54815674]
[129.12176514 242.12638855]
[124.99712372 227.70462036]
[120.87248230 213.28285217]
[116.74784088 198.86108398]
[112.62319946 184.43933105]
[108.49855804 170.01756287]
[104.37391663 155.59579468]
[100.24927521 141.17402649]
[96.12463379 126.75225830]
[91.99999237 112.33049774]
[81.76907349 101.36106873]
[67.66927338 96.24288940]
[53.56948090 91.12470245]
[39.46968460 86.00652313]
[24.38527870 91.46914673]
[10.78533936 82.95907593]
[9.10257912 67.00452423]
[20.62786674 55.84444427]
[36.51998901 58.03990173]
[44.58786774 71.90673065]
[58.68766403 77.02490997]
[72.78746033 82.14308929]
[86.88725281 87.26127625]
[96.14857483 75.46178436]
[87.82708740 62.98168564]
[79.50559998 50.50158691]
[73.74886322 47.22920990]
[70.93588257 42.28189850]
[71.12670135 37.50400162]
[63.19541550 24.77235985]
[55.26413345 12.04071522]
[47.33285141 -0.69092846]
[39.40156937 -13.42257214]
[31.47028732 -26.15421677]
[15.98351860 -27.12355995]
[4.04570484 -37.03659439]
[0.24717951 -52.08155441]
[6.04855251 -66.47334290]
[19.21907806 -74.67803192]
[34.69441986 -73.54074860]
[46.52399445 -63.49879456]
[50.15908432 -48.41350937]
[44.20193100 -34.08549881]
[52.13321304 -21.35385513]
[60.06449509 -8.62221050]
[67.99578094 4.10943317]
[75.92706299 16.84107780]
[83.85834503 29.57272148]
[91.98570251 42.18010330]
[100.30718994 54.66020203]
[108.62866974 67.14029694]
[123.51386261 65.28794098]
[128.52278137 51.14896393]
[133.53170776 37.00998688]
[138.54063416 22.87101173]
[143.54956055 8.73203564]
[140.86466980 -6.85968971]
[152.40783691 -16.27269173]
[157.41676331 -30.41166878]
[162.42568970 -44.55064392]
[167.43461609 -58.68962097]
[172.44354248 -72.82859802]
[177.45246887 -86.96757507]
[182.46139526 -101.10655212]
[175.43392944 -115.26248169]
[180.55363464 -130.21453857]
[194.78308105 -137.09194946]
[209.68017578 -131.81443787]
[216.40675354 -117.51308441]
[210.97204590 -102.67262268]
[196.60037231 -96.09762573]
[191.59144592 -81.95864868]
[186.58251953 -67.81967163]
[181.57359314 -53.68069458]
[176.56466675 -39.54171753]
[171.55574036 -25.40274239]
[166.54681396 -11.26376534]
[169.58998108 3.31664562]
[157.68853760 13.74096203]
[152.67961121 27.87993813]
[147.67068481 42.01891327]
[142.66175842 56.15789032]
[137.65283203 70.29686737]
[128.98127747 103.47763824]
[106.42175293 108.20585632]
[110.54639435 122.62761688]
[114.67103577 137.04937744]
[118.79567719 151.47114563]
[122.92032623 165.89291382]
[127.04496765 180.31468201]
[131.16960144 194.73645020]
[135.29425049 209.15821838]
[139.41888428 223.57998657]
[143.54353333 238.00173950]
[147.66816711 252.42350769]
[165.95880127 276.94403076]
[178.37414551 285.36184692]
[190.78947449 293.77963257]
[203.58468628 292.12026978]
[213.75344849 299.39230347]
[216.15888977 311.25137329]
[228.44247437 319.86029053]
[240.79229736 328.37393188]
[253.20764160 336.79171753]
[265.62298584 345.20953369]
[278.20593262 339.57391357]
[291.82223511 340.88296509]
[302.92388916 348.68804932]
[308.67138672 360.86206055]
[307.65948486 374.17794800]
[319.94308472 382.78686523]
[328.77285767 385.15179443]
[332.34872437 391.62530518]
[344.49761963 400.42327881]
[356.64651489 409.22125244]
[368.79537964 418.01925659]
[383.47906494 413.36138916]
[397.92108154 418.18649292]
[406.64944458 430.44534302]
[406.48754883 445.31518555]
[418.63641357 454.11315918]
[430.78530884 462.91116333]
[446.50061035 464.73876953]
[452.27056885 478.47036743]
[464.41946411 487.26834106]
[480.77822876 488.41815186]
[487.71765137 503.27670288]
[478.09902954 516.55877686]
[461.81716919 514.60095215]
[455.62145996 499.41723633]
[443.47259521 490.61926270]
[428.62625122 489.42092896]
[421.98733521 475.06002808]
[409.83843994 466.26205444]
[397.68954468 457.46408081]
[383.61230469 462.25668335]
[369.24230957 457.78817749]
[360.15270996 445.57211304]
[359.99740601 430.16815186]
[347.84851074 421.37014771]
[335.69964600 412.57217407]
[323.55075073 403.77416992]
[311.33413696 395.07046509]
[299.05056763 386.46151733]
[283.70901489 392.29403687]
[267.75354004 387.79000854]
[257.52334595 374.53320312]
[257.20516968 357.62487793]
[244.78984070 349.20706177]
[232.37449646 340.78927612]
[225.06935120 339.63681030]
[219.83354187 332.14389038]
[207.54997253 323.53494263]
[190.01361084 322.94531250]
[182.37167358 306.19497681]
[169.95632935 297.77716064]
[157.54100037 289.35937500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 68]
[57 67]
[58 66]
[59 65]
[69 96]
[70 95]
[71 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[141 202]
[142 201]
[143 200]
[146 198]
[147 197]
[148 195]
[149 194]
[150 193]
[155 189]
[156 188]
[158 187]
[159 186]
[160 185]
[161 184]
[165 180]
[166 179]
[167 178]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
