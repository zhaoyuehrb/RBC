%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAUUUUCUAGCUGAGGAAUGAAGUGACUUGGAACCAAACUGGGCUUUUCUACUGAGCAUGUCCCUCUCCAGCAGGGUCUGGCUUGGGUGGAGCCAGUCUUGCUCGUUAAGCUUUUGGACGCUGGAUUUCCAUCAGCUUUCCACAGUUUUCCAAUGACAGGAAAUAGCAGACAGCGGGCUUGAUGUGCUUAAAAGCUGCCAUAAGCUGUGGCC\
) } def
/len { sequence length } bind def

/coor [
[304.55899048 307.80044556]
[292.08581543 316.13229370]
[277.41033936 319.23553467]
[262.63201904 316.66616821]
[249.86509705 308.79180908]
[240.93600464 296.73895264]
[237.12214661 282.23190308]
[238.96914673 267.34603882]
[246.21278381 254.21098328]
[257.81674194 244.70582581]
[272.12097168 240.19038391]
[287.08078003 241.31112671]
[275.04895020 232.35375977]
[263.01708984 223.39637756]
[250.98524475 214.43899536]
[238.95339966 205.48161316]
[226.92155457 196.52423096]
[214.82487488 187.65458679]
[202.66403198 178.87315369]
[190.50317383 170.09170532]
[178.34233093 161.31027222]
[162.91487122 166.92520142]
[147.02172852 162.18939209]
[136.98460388 148.77981567]
[136.91873169 131.86376953]
[124.63145447 123.26012421]
[112.34417725 114.65647888]
[122.74450684 125.46542358]
[126.03185272 140.10076904]
[121.25311279 154.31918335]
[109.79380035 163.99824524]
[94.97640228 166.33163452]
[81.09702301 160.64279175]
[72.17980194 148.58116150]
[70.81017303 133.64381409]
[77.38523865 120.16165924]
[89.99631500 112.04438782]
[76.05609894 117.58248138]
[62.11588669 123.12057495]
[49.62817383 134.58763123]
[35.15231323 125.76233673]
[39.62539291 109.40911102]
[56.57779694 109.18035889]
[70.51800537 103.64226532]
[84.45822144 98.10417175]
[81.42495728 83.41406250]
[66.43130493 83.85033417]
[51.43764877 84.28660583]
[36.44399643 84.72287750]
[26.88758659 97.10063934]
[11.59972191 100.38929749]
[-2.20113325 93.03604126]
[-7.99863911 78.51285553]
[-3.05538988 63.67714310]
[10.29456329 55.53387833]
[25.74777985 57.92805862]
[36.00772476 69.72922516]
[51.00137711 69.29295349]
[65.99503326 68.85668182]
[80.98868561 68.42041016]
[84.87948608 62.00857162]
[92.66108704 49.18489456]
[96.55188751 42.77305603]
[90.01556396 29.27207375]
[83.47924042 15.77109337]
[76.94291687 2.27011228]
[69.92011261 -10.98433018]
[62.42011642 -23.97471046]
[45.88463974 -23.80487442]
[31.60220528 -31.95139313]
[23.42504692 -46.10795975]
[23.50354767 -62.36238480]
[31.72155952 -76.27758026]
[24.03342056 -89.15750122]
[16.34528351 -102.03742981]
[8.65714645 -114.91735840]
[0.96900886 -127.79728699]
[-6.71912861 -140.67721558]
[-14.40726662 -153.55714417]
[-21.49008942 -159.31918335]
[-22.11198807 -166.68077087]
[-29.61198807 -179.67115784]
[-37.11198807 -192.66154480]
[-44.61198807 -205.65191650]
[-52.11198807 -218.64230347]
[-59.61198807 -231.63269043]
[-67.11199188 -244.62306213]
[-82.17387390 -250.14747620]
[-87.10874176 -265.41268921]
[-78.13098907 -278.70852661]
[-62.12757111 -279.83557129]
[-51.37494659 -267.92926025]
[-54.12160873 -252.12306213]
[-46.62160873 -239.13269043]
[-39.12160873 -226.14230347]
[-31.62160873 -213.15191650]
[-24.12160873 -200.16154480]
[-16.62160873 -187.17115784]
[-9.12160778 -174.18077087]
[-1.52733839 -161.24528503]
[6.16079903 -148.36535645]
[13.84893703 -135.48542786]
[21.53707504 -122.60549927]
[29.22521210 -109.72557068]
[36.91334915 -96.84564209]
[44.60148621 -83.96571350]
[58.21234131 -85.06429291]
[71.03050232 -80.16858673]
[80.53479767 -70.18050385]
[84.82961273 -57.00946045]
[83.02285004 -43.20746613]
[75.41049957 -31.47471046]
[82.91049957 -18.48432922]
[89.23509979 -32.08577728]
[103.77649689 -35.76652908]
[115.81050873 -26.81205940]
[116.46215057 -11.82621956]
[105.25083923 -1.86095226]
[90.44390106 -4.26621008]
[96.98022461 9.23477077]
[103.51654053 22.73575211]
[110.05286407 36.23673248]
[120.94782257 102.36920166]
[133.23510742 110.97284698]
[145.52238464 119.57649231]
[158.18301392 114.13217163]
[171.77278137 115.64166260]
[182.75483704 123.60452271]
[188.32415771 135.85484314]
[187.12376404 149.14941406]
[199.28462219 157.93086243]
[211.44546509 166.71229553]
[223.60632324 175.49374390]
[232.39210510 177.97917175]
[235.87892151 184.49238586]
[247.91078186 193.44976807]
[259.94262695 202.40715027]
[271.97445679 211.36453247]
[284.00631714 220.32189941]
[296.03817749 229.27928162]
[304.29101562 229.49630737]
[310.41949463 233.66195679]
[312.96289062 239.71861267]
[326.36740112 246.45060730]
[339.77188110 253.18258667]
[353.17636108 259.91458130]
[366.58087158 266.64657593]
[379.98535156 273.37854004]
[393.38983154 280.11053467]
[408.16195679 282.71527100]
[423.06051636 280.97387695]
[437.95910645 279.23248291]
[452.85766602 277.49108887]
[467.75625610 275.74969482]
[476.19750977 262.58612061]
[491.14056396 257.97756958]
[505.52978516 264.10000610]
[512.57098389 278.06265259]
[508.93957520 293.27273560]
[496.35015869 302.54855347]
[480.74710083 301.51031494]
[469.49765015 290.64825439]
[454.59906006 292.38964844]
[439.70050049 294.13104248]
[424.80191040 295.87243652]
[409.90335083 297.61383057]
[407.85705566 304.82928467]
[403.76443481 319.26016235]
[401.71813965 326.47561646]
[413.48437500 335.77914429]
[425.25061035 345.08267212]
[437.01684570 354.38623047]
[450.74087524 347.79739380]
[465.90289307 347.82055664]
[479.49566650 354.39752197]
[488.84649658 366.17559814]
[492.14263916 380.78536987]
[488.78256226 395.31723022]
[500.54879761 404.62075806]
[512.31506348 413.92431641]
[524.08129883 423.22784424]
[539.35815430 419.88867188]
[553.18328857 427.19625854]
[559.02874756 441.70019531]
[554.13458252 456.55215454]
[540.81164551 464.73953247]
[525.35058594 462.39645386]
[515.05169678 450.62924194]
[514.77770996 434.99407959]
[503.01150513 425.69055176]
[491.24526978 416.38699341]
[479.47903442 407.08346558]
[466.11373901 413.70425415]
[451.13766479 413.86621094]
[437.52062988 407.48364258]
[427.98620605 395.77401733]
[424.46707153 381.02603149]
[427.71331787 366.15246582]
[415.94708252 356.84890747]
[404.18084717 347.54537964]
[392.41461182 338.24185181]
[385.31362915 330.40322876]
[380.90936279 321.76708984]
[379.16439819 313.10900879]
[379.83917236 305.14062500]
[382.51989746 298.46063232]
[386.65783691 293.51504517]
[373.25335693 286.78305054]
[359.84887695 280.05105591]
[346.44436646 273.31906128]
[333.03988647 266.58706665]
[319.63540649 259.85510254]
[306.23092651 253.12310791]
[313.94580078 265.98703003]
[316.33105469 280.79617310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[17 135]
[18 133]
[19 132]
[20 131]
[21 130]
[25 125]
[26 124]
[27 123]
[37 45]
[38 44]
[39 43]
[46 60]
[47 59]
[48 58]
[49 57]
[63 122]
[64 121]
[65 120]
[66 119]
[67 113]
[68 112]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[79 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[143 213]
[144 212]
[145 211]
[146 210]
[147 209]
[148 208]
[149 207]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[169 201]
[170 200]
[171 199]
[172 198]
[178 192]
[179 191]
[180 190]
[181 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
