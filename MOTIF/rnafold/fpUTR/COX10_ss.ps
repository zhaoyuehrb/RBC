%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCAGACCUGUCAGCCCGCCACACUCCAGCCAGUCCCUUCCGAUCACCUCCAGACACCACGCUCUCCUUUCGGAGCCCGCCCGCCGGAAGUGGCGGCCCGGAACUACUCCCACAGGGGGGCGGGGAAGGAAGAUGGCGGCGCCCAGCGUCCCGUGAGGAGAGAGGACACAGGGAUCCCGGGGAGCGGCCCCAGACUCGUAAAUU\
) } def
/len { sequence length } bind def

/coor [
[80.50176239 732.23840332]
[69.05696869 722.07592773]
[63.65668106 707.75482178]
[65.54183960 692.56579590]
[74.27925873 679.99932861]
[87.86113739 672.94305420]
[87.86113739 657.94305420]
[77.18025970 647.62536621]
[76.96658325 632.41326904]
[87.86113739 621.28015137]
[87.86113739 606.28015137]
[87.86113739 591.28015137]
[75.60723114 585.24456787]
[67.10928345 574.46569824]
[64.07101440 561.01251221]
[67.14118195 547.49865723]
[75.77603149 536.57495117]
[88.33465576 530.40924072]
[88.56452179 515.41101074]
[88.79438019 500.41275024]
[81.04570770 493.74267578]
[78.19005585 483.69696045]
[81.40349579 473.52932739]
[89.85456085 466.67233276]
[90.54393768 451.68817139]
[91.23330688 436.70401001]
[91.92268372 421.71987915]
[78.74696350 414.72946167]
[69.87645721 402.66198730]
[67.11373901 387.87930298]
[71.05942535 373.30355835]
[80.98261261 361.83984375]
[94.95559692 355.79690552]
[95.64497375 340.81274414]
[96.33435059 325.82858276]
[97.02372742 310.84445190]
[97.71309662 295.86029053]
[98.40247345 280.87612915]
[98.74725342 265.88009644]
[98.74725342 250.88011169]
[98.74725342 235.88011169]
[88.06638336 225.56242371]
[87.85269928 210.35029602]
[98.74725342 199.21716309]
[98.74725342 184.21716309]
[91.00995636 171.48989868]
[98.74725342 157.68972778]
[98.74725342 142.68972778]
[98.74725342 127.68972015]
[98.74725342 112.68972015]
[94.02570343 113.10865784]
[88.97240448 111.67589569]
[84.32585907 108.25441742]
[80.86444092 102.99973297]
[79.29273987 96.36595154]
[80.13020325 89.06880188]
[83.61759949 82.00849152]
[78.22419739 68.01165771]
[72.21563721 61.12514877]
[72.85720062 53.75878906]
[67.67892456 39.68095398]
[62.50065231 25.60311699]
[57.32237625 11.52528095]
[52.14410400 -2.55255556]
[46.96582794 -16.63039207]
[41.78755569 -30.70822906]
[36.60927963 -44.78606415]
[31.43100548 -58.86389923]
[16.64498329 -63.18590927]
[7.34774160 -75.24470520]
[6.93873262 -90.28787231]
[15.36530972 -102.54065704]
[10.18703461 -116.61849213]
[5.00876045 -130.69633484]
[-0.16951394 -144.77416992]
[-18.39271355 -157.81069946]
[-13.90694904 -178.98252869]
[-19.93791962 -192.71669006]
[-25.96888924 -206.45086670]
[-41.05909348 -217.00009155]
[-38.46219254 -234.35382080]
[-44.70291901 -247.99395752]
[-50.94364929 -261.63409424]
[-57.18437576 -275.27423096]
[-63.42510605 -288.91436768]
[-69.66583252 -302.55450439]
[-83.33708191 -311.61148071]
[-82.05919647 -327.96078491]
[-67.14675903 -334.78359985]
[-53.94040298 -325.06124878]
[-56.02569580 -308.79522705]
[-49.78496933 -295.15509033]
[-43.54423904 -281.51495361]
[-37.30351257 -267.87481689]
[-31.06278419 -254.23469543]
[-24.82205582 -240.59455872]
[-13.59598064 -236.08079529]
[-8.28637505 -224.76408386]
[-12.23472118 -212.48182678]
[-6.20375061 -198.74766541]
[-0.17277992 -185.01348877]
[7.61881256 -183.78088379]
[14.36682320 -179.51663208]
[18.93090630 -172.85346985]
[20.50535965 -164.83621216]
[18.76051140 -156.75816345]
[13.90832233 -149.95243835]
[19.08659744 -135.87460327]
[24.26487160 -121.79676819]
[29.44314575 -107.71893311]
[43.80092239 -103.84695435]
[53.23722458 -92.12431335]
[53.96997833 -76.91522217]
[45.50884247 -64.04217529]
[50.68711472 -49.96434021]
[55.86539078 -35.88650131]
[61.04366302 -21.80866623]
[66.22193909 -7.73083019]
[71.40021515 6.34700632]
[76.57849121 20.42484283]
[81.75675964 34.50267792]
[86.93503571 48.58051682]
[92.22103119 62.61825943]
[97.61442566 76.61508942]
[99.59171295 61.74598312]
[99.41235352 46.74705505]
[108.65355682 34.93180084]
[123.25400543 31.49277496]
[136.79711914 37.94135284]
[143.33097839 51.44352341]
[139.98411560 66.06536865]
[128.22598267 75.38139343]
[117.92877960 86.28862000]
[132.19462585 81.65336609]
[146.46047974 77.01811218]
[160.72631836 72.38285828]
[167.92504883 66.75212860]
[175.24642944 67.78768921]
[189.58163452 63.37159348]
[203.91683960 58.95549393]
[218.25202942 54.53939819]
[232.58723450 50.12330246]
[245.94430542 39.68178940]
[259.67535400 49.62635803]
[253.92056274 65.57373047]
[237.00334167 64.45850372]
[222.66813660 68.87460327]
[208.33293152 73.29070282]
[193.99772644 77.70679474]
[179.66252136 82.12289429]
[165.36157227 86.64870453]
[151.09573364 91.28395844]
[136.82987976 95.91921234]
[122.56403351 100.55446625]
[113.74725342 112.68972015]
[113.74725342 127.68972015]
[113.74725342 142.68972778]
[113.74725342 157.68972778]
[121.48455048 171.48989868]
[113.74725342 184.21716309]
[113.74725342 199.21716309]
[124.64180756 210.35029602]
[124.42812347 225.56242371]
[113.74725342 235.88011169]
[113.74725342 250.88011169]
[113.74725342 265.88009644]
[116.36389160 270.40774536]
[116.92297363 275.02435303]
[115.73589325 278.93020630]
[113.38662720 281.56552124]
[112.69725037 296.54968262]
[112.00787354 311.53381348]
[111.31849670 326.51797485]
[110.62912750 341.50210571]
[109.93975067 356.48626709]
[123.29885101 363.78668213]
[132.12751770 376.11312866]
[134.71820068 390.98956299]
[130.60981750 405.45614624]
[120.66875458 416.65814209]
[106.90683746 422.40924072]
[106.21746063 437.39340210]
[105.52808380 452.37756348]
[104.83870697 467.36169434]
[114.90611267 484.82266235]
[103.79262543 500.64260864]
[103.56275940 515.64086914]
[103.33289337 530.63909912]
[117.60902405 538.97631836]
[125.68759155 553.29272461]
[125.44680023 569.63549805]
[117.04700470 583.54687500]
[102.86113739 591.28015137]
[102.86113739 606.28015137]
[102.86113739 621.28015137]
[113.75569153 632.41326904]
[113.54200745 647.62536621]
[102.86113739 657.94305420]
[102.86113739 672.94305420]
[116.44301605 679.99932861]
[125.18042755 692.56579590]
[127.06558990 707.75482178]
[121.66529846 722.07592773]
[110.22050476 732.23840332]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 199]
[7 198]
[10 195]
[11 194]
[12 193]
[18 188]
[19 187]
[20 186]
[24 184]
[25 183]
[26 182]
[27 181]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[38 170]
[39 166]
[40 165]
[41 164]
[44 161]
[45 160]
[47 158]
[48 157]
[49 156]
[50 155]
[57 124]
[58 123]
[60 122]
[61 121]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[72 110]
[73 109]
[74 108]
[75 107]
[77 101]
[78 100]
[79 99]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
[133 154]
[134 153]
[135 152]
[136 151]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
