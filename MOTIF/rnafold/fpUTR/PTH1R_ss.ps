%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACAGAAGCUGCUCAGGGACUAUCCAUGGCCUCCCCGUGGCCAACUUGAGUCUGCUCUGCAGCUUUAGGCCCGACUUGGAAGGCCCAUGGGCUGCAGAUGAGGAAACUGAGGUCCAGACAGCCGAAGAGUGGUAGUGUCCAGGACACACAACUGGGCCGGCGGCGGCGGCUGCCCCGAGGGACGCGGCCCUAGGCGGUGGCG\
) } def
/len { sequence length } bind def

/coor [
[92.67239380 191.20121765]
[92.21046448 176.20832825]
[91.74854279 161.21543884]
[91.28661346 146.22254944]
[83.25710297 131.11050415]
[83.03572083 116.43921661]
[69.50690460 122.91772461]
[55.97808838 129.39624023]
[42.44926834 135.87474060]
[28.92045021 142.35325623]
[15.39163208 148.83175659]
[1.86281323 155.31027222]
[-11.66600513 161.78877258]
[-17.00184250 176.42320251]
[-30.81427765 182.80061340]
[-44.73308945 177.62351990]
[-58.26190567 184.10203552]
[-71.74044037 190.68452454]
[-85.16789246 197.37059021]
[-98.59533691 204.05667114]
[-112.02278900 210.74273682]
[-125.45024109 217.42881775]
[-125.33086395 232.65206909]
[-131.80654907 246.36163330]
[-143.54444885 255.86122131]
[-158.18272400 259.30822754]
[-172.80566406 256.07113647]
[-184.52449036 246.84429932]
[-197.95193481 253.53038025]
[-211.37939453 260.21646118]
[-224.80683899 266.90252686]
[-238.23428345 273.58859253]
[-241.71646118 288.83355713]
[-254.21435547 298.23229980]
[-269.82687378 297.34704590]
[-281.18222046 286.59576416]
[-282.91879272 271.05490112]
[-274.21661377 258.06237793]
[-259.18457031 253.75285339]
[-244.92036438 260.16116333]
[-231.49290466 253.47508240]
[-218.06546021 246.78900146]
[-204.63801575 240.10292053]
[-191.21057129 233.41685486]
[-191.51158142 218.50460815]
[-185.28253174 204.88446045]
[-173.71022034 195.28016663]
[-159.05574036 191.63789368]
[-144.21278381 194.73205566]
[-132.13630676 204.00137329]
[-118.70886230 197.31529236]
[-105.28141785 190.62922668]
[-91.85396576 183.94314575]
[-78.42651367 177.25706482]
[-73.83760834 171.45828247]
[-64.74041748 170.57321167]
[-51.21159744 164.09471130]
[-46.51893616 150.00518799]
[-32.89107895 143.24234009]
[-18.14451408 148.25996399]
[-4.61569548 141.78144836]
[8.91312313 135.30294800]
[22.44194221 128.82443237]
[35.97076035 122.34592438]
[49.49958038 115.86741638]
[63.02839661 109.38890839]
[76.55721283 102.91040039]
[92.02024841 65.58325958]
[144.46588135 84.66268158]
[149.88450623 70.67559814]
[155.30313110 56.68851471]
[160.72175598 42.70143127]
[166.14038086 28.71434784]
[171.55900574 14.72726345]
[174.54197693 0.02685968]
[175.00390625 -14.96602631]
[175.46582031 -29.95891190]
[175.92774963 -44.95179749]
[164.43106079 -52.56126785]
[158.24598694 -64.76164246]
[158.89328003 -78.31654358]
[166.09693909 -89.68910217]
[177.88421631 -95.96482086]
[178.57696533 -110.94881439]
[179.26971436 -125.93280792]
[165.91836548 -136.31295776]
[161.42745972 -152.44508362]
[167.37545776 -167.92077637]
[181.23428345 -176.71435547]
[181.69619751 -191.70724487]
[182.15812683 -206.70011902]
[182.62005615 -221.69300842]
[183.08198547 -236.68589783]
[183.54389954 -251.67878723]
[176.23524475 -265.71069336]
[184.36082458 -278.19363403]
[184.82273865 -293.18652344]
[185.28466797 -308.17941284]
[172.51139832 -316.83084106]
[166.46418762 -331.02362061]
[169.07264709 -346.22885132]
[179.50445557 -357.59463501]
[194.43084717 -361.49417114]
[209.08886719 -356.68316650]
[218.80119324 -344.69674683]
[220.46865845 -329.35974121]
[213.55918884 -315.56616211]
[200.27755737 -307.71749878]
[199.81562805 -292.72460938]
[199.35369873 -277.73171997]
[206.69540405 -264.77221680]
[198.53678894 -251.21685791]
[198.07485962 -236.22396851]
[197.61294556 -221.23107910]
[197.15101624 -206.23820496]
[196.68908691 -191.24531555]
[196.22715759 -176.25242615]
[207.49674988 -169.08857727]
[213.80424500 -157.19558716]
[213.40693665 -143.63105774]
[206.30168152 -131.94261169]
[194.25370789 -125.24005890]
[193.56095886 -110.25606537]
[192.86820984 -95.27207184]
[206.00952148 -85.43847656]
[210.74945068 -69.55108643]
[205.03091431 -53.81222916]
[190.92063904 -44.48987198]
[190.45870972 -29.49698639]
[189.99678040 -14.50409985]
[189.53486633 0.48878556]
[202.08415222 -3.61884356]
[213.00288391 1.64606655]
[227.07174683 -3.55652380]
[234.04002380 -9.47137451]
[241.39753723 -8.72907925]
[255.54484558 -13.71440125]
[269.69216919 -18.69972420]
[283.83947754 -23.68504524]
[297.98678589 -28.67036819]
[310.91601562 -39.63721085]
[325.03344727 -30.24919701]
[319.92041016 -14.08463001]
[302.97210693 -14.52305031]
[288.82479858 -9.53772831]
[274.67749023 -4.55240679]
[260.53018188 0.43291521]
[246.38285828 5.41823721]
[232.27433777 10.51234436]
[218.20547485 15.71493435]
[214.12440491 25.15610695]
[204.70541382 30.35621071]
[193.60491943 28.63709641]
[185.54608154 20.14588928]
[180.12745667 34.13297272]
[174.70883179 48.12005615]
[169.29020691 62.10713959]
[163.87158203 76.09422302]
[158.45295715 90.08130646]
[163.97912598 104.02625275]
[177.50794983 110.50476074]
[191.03675842 116.98326874]
[204.56558228 123.46177673]
[218.09439087 129.94029236]
[231.62321472 136.41879272]
[247.92324829 134.61851501]
[257.41296387 147.99301147]
[250.33016968 162.78375244]
[233.96102905 163.77528381]
[225.14471436 149.94761658]
[211.61589050 143.46910095]
[198.08706665 136.99060059]
[184.55825806 130.51208496]
[171.02943420 124.03357697]
[157.50061035 117.55506897]
[147.56707764 128.79450989]
[155.65902710 141.42465210]
[169.61857605 148.87054443]
[169.96958923 163.76101685]
[178.06152344 176.39115906]
[186.15345764 189.02130127]
[194.24539185 201.65144348]
[209.73547363 204.78724670]
[218.40150452 218.00372314]
[215.10211182 233.45977783]
[201.79473877 241.98559570]
[186.37443542 238.52297974]
[177.98979187 225.12622070]
[181.61524963 209.74337769]
[173.52331543 197.11323547]
[165.43138123 184.48309326]
[157.33944702 171.85295105]
[143.95867920 165.31045532]
[143.02888489 149.51658630]
[134.93693542 136.88644409]
[127.77258301 139.10499573]
[113.44386292 143.54208374]
[106.27950287 145.76063538]
[106.74142456 160.75350952]
[107.20335388 175.74639893]
[107.66527557 190.73928833]
[114.19651794 206.38470459]
[100.97055054 216.99179077]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[4 198]
[6 67]
[7 66]
[8 65]
[9 64]
[10 63]
[11 62]
[12 61]
[13 60]
[16 57]
[17 56]
[18 54]
[19 53]
[20 52]
[21 51]
[22 50]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[69 159]
[70 158]
[71 157]
[72 156]
[73 155]
[74 154]
[75 131]
[76 130]
[77 129]
[78 128]
[83 124]
[84 123]
[85 122]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[96 110]
[97 109]
[98 108]
[133 150]
[134 149]
[136 148]
[137 147]
[138 146]
[139 145]
[140 144]
[160 175]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
[176 195]
[177 194]
[179 192]
[180 191]
[181 190]
[182 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
