%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPL37A)
} def

/sequence { (\
ACUUCCGCUCGUCCGCCUAAUACCGCGCCUGCGCACCGCGUCUCUUCCUUUCUGGGCUCGGACCUAGGUCGCGGCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.006552636 ubox
2 11 0.007532030 ubox
3 20 0.014046587 ubox
3 77 0.020593091 ubox
4 19 0.015655782 ubox
4 76 0.012339375 ubox
4 77 0.108763193 ubox
5 74 0.027680131 ubox
5 76 0.083371292 ubox
6 15 0.011088724 ubox
6 25 0.003342092 ubox
6 73 0.027990463 ubox
6 76 0.689405704 ubox
7 14 0.011163235 ubox
7 16 0.060477860 ubox
7 24 0.003260962 ubox
7 26 0.004426858 ubox
7 72 0.027965162 ubox
7 75 0.701242597 ubox
8 15 0.060532559 ubox
8 25 0.004550008 ubox
8 71 0.027145455 ubox
8 74 0.697102482 ubox
9 73 0.166124095 ubox
9 74 0.076745366 ubox
9 77 0.654206250 ubox
10 25 0.004453056 ubox
10 71 0.111092351 ubox
10 73 0.680592691 ubox
10 76 0.706961992 ubox
11 23 0.004032842 ubox
11 24 0.004516151 ubox
11 70 0.111899616 ubox
11 72 0.689661400 ubox
11 75 0.708003519 ubox
11 78 0.011511568 ubox
12 22 0.003880974 ubox
12 71 0.667552863 ubox
12 74 0.703891421 ubox
12 77 0.011609434 ubox
13 68 0.015538341 ubox
13 73 0.703529644 ubox
13 74 0.073786285 ubox
13 76 0.009763131 ubox
14 25 0.009721969 ubox
14 27 0.012810806 ubox
14 67 0.015332840 ubox
14 71 0.702750212 ubox
14 73 0.074199298 ubox
14 76 0.010531495 ubox
15 24 0.010006313 ubox
15 26 0.017368901 ubox
15 69 0.702179188 ubox
15 70 0.693114976 ubox
15 72 0.067360325 ubox
15 75 0.012235715 ubox
16 25 0.017570281 ubox
16 68 0.995397407 ubox
16 71 0.051497561 ubox
16 74 0.011457426 ubox
17 67 0.996578383 ubox
17 68 0.013146577 ubox
17 73 0.010456822 ubox
18 66 0.993768829 ubox
18 67 0.012317105 ubox
19 65 0.958916221 ubox
21 66 0.010775103 ubox
22 65 0.011791491 ubox
23 61 0.995113384 ubox
23 74 0.025207973 ubox
24 33 0.013953391 ubox
24 60 0.996579131 ubox
24 73 0.025871204 ubox
24 76 0.003372567 ubox
25 32 0.014865575 ubox
25 34 0.019970314 ubox
25 39 0.004494040 ubox
25 59 0.995971582 ubox
25 72 0.027671040 ubox
25 75 0.003188042 ubox
26 31 0.014848683 ubox
26 33 0.019991890 ubox
26 38 0.004497198 ubox
26 71 0.027673611 ubox
26 76 0.069094604 ubox
27 32 0.019476152 ubox
27 34 0.003503481 ubox
27 37 0.004032922 ubox
27 57 0.996214856 ubox
27 69 0.006380807 ubox
27 70 0.027058874 ubox
27 75 0.071076353 ubox
28 33 0.003584209 ubox
28 55 0.008524156 ubox
28 56 0.996534781 ubox
28 68 0.027748426 ubox
28 74 0.070167120 ubox
29 54 0.011642002 ubox
29 55 0.994499307 ubox
29 56 0.004171335 ubox
29 67 0.027748495 ubox
29 73 0.069165457 ubox
29 74 0.013477216 ubox
30 40 0.105891533 ubox
30 54 0.978957939 ubox
30 55 0.004151040 ubox
30 66 0.027538170 ubox
30 73 0.018275850 ubox
31 39 0.204748843 ubox
31 41 0.958278730 ubox
31 53 0.151285943 ubox
31 65 0.025156487 ubox
31 72 0.072343662 ubox
32 38 0.204984435 ubox
32 40 0.973721545 ubox
32 54 0.003468143 ubox
32 71 0.072376495 ubox
33 37 0.191766866 ubox
33 39 0.973689193 ubox
33 41 0.012079259 ubox
33 53 0.003315477 ubox
33 70 0.072331753 ubox
33 72 0.003860150 ubox
34 38 0.966619333 ubox
34 40 0.012343030 ubox
34 71 0.003883469 ubox
35 41 0.003253243 ubox
35 69 0.072661709 ubox
36 40 0.003344993 ubox
36 61 0.033549093 ubox
36 68 0.072957930 ubox
36 74 0.003639509 ubox
37 60 0.033693035 ubox
37 67 0.072935473 ubox
37 73 0.003678771 ubox
38 59 0.033681820 ubox
38 72 0.003717059 ubox
39 71 0.003717081 ubox
40 57 0.033635890 ubox
40 63 0.074084141 ubox
40 70 0.003681922 ubox
41 56 0.030650264 ubox
41 62 0.074326139 ubox
42 54 0.029224442 ubox
42 55 0.030192788 ubox
42 56 0.013769835 ubox
42 61 0.074323552 ubox
43 54 0.023607266 ubox
43 55 0.014130700 ubox
43 60 0.070959469 ubox
43 62 0.004172969 ubox
44 54 0.040766522 ubox
44 55 0.010952500 ubox
44 60 0.012132417 ubox
44 61 0.004406032 ubox
45 54 0.016232236 ubox
45 60 0.004410058 ubox
46 54 0.004002920 ubox
46 55 0.003536450 ubox
46 56 0.034543098 ubox
47 54 0.027113800 ubox
47 55 0.071765117 ubox
47 56 0.064434771 ubox
48 54 0.093858140 ubox
48 55 0.065227477 ubox
49 54 0.064479725 ubox
50 54 0.004576035 ubox
52 67 0.003265221 ubox
53 66 0.003418791 ubox
54 65 0.003478309 ubox
55 64 0.003491769 ubox
56 63 0.003479979 ubox
61 70 0.007694886 ubox
62 69 0.008485430 ubox
63 68 0.008569062 ubox
6 76 0.9500000 lbox
7 75 0.9500000 lbox
8 74 0.9500000 lbox
10 73 0.9500000 lbox
11 72 0.9500000 lbox
12 71 0.9500000 lbox
15 69 0.9500000 lbox
16 68 0.9500000 lbox
17 67 0.9500000 lbox
18 66 0.9500000 lbox
19 65 0.9500000 lbox
23 61 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
34 38 0.9500000 lbox
showpage
end
%%EOF
