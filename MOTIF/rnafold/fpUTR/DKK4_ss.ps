%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGACGACGUGCUGAGCUGCCAGCUUAGUGGAAGCUCUGCUCUGGGUGGAGAGCAGCCUCGCUUUGGUGACGCACAGUGCUGGGACCCUCCAGGAGCCCCGGGAUUGAAGG\
) } def
/len { sequence length } bind def

/coor [
[127.25648499 187.70559692]
[116.73012543 198.39184570]
[103.47086334 205.40554810]
[88.71365356 208.09344482]
[73.83297729 206.20521545]
[60.21480179 199.91671753]
[49.12751007 189.81364441]
[41.60376358 176.83700562]
[38.34432220 162.19541931]
[39.65275955 147.25259399]
[45.40721130 133.40029907]
[55.07172012 121.92871094]
[67.74613190 113.90628815]
[82.25073242 110.08015442]
[67.39801788 112.17700958]
[52.54529953 114.27386475]
[37.69258118 116.37071991]
[22.83986473 118.46757507]
[10.25679493 128.05802917]
[-3.42710972 122.17584991]
[-18.27982712 124.27270508]
[-33.13254166 126.36956024]
[-42.43447876 139.14648438]
[-58.05935669 141.52108765]
[-70.73721313 132.08459473]
[-72.94649506 116.43548584]
[-63.37648392 103.85810852]
[-47.70489502 101.81439209]
[-35.22939682 111.51684570]
[-20.37668228 109.41999054]
[-5.52396488 107.32313538]
[5.99673986 97.88265991]
[20.74300957 103.61485291]
[35.59572601 101.51799774]
[50.44844437 99.42114258]
[65.30116272 97.32428741]
[80.15387726 95.22743225]
[86.66213226 81.71289825]
[79.04100037 68.79321289]
[71.41987610 55.87352371]
[63.79874420 42.95383453]
[56.17761230 30.03414345]
[48.55648422 17.11445427]
[33.19245529 13.41009998]
[25.01921654 -0.11667683]
[28.88580132 -15.44067955]
[42.49823380 -23.47044945]
[57.78050232 -19.44206619]
[65.66590118 -5.74549723]
[61.47617340 9.49332428]
[69.09730530 22.41301346]
[76.71842957 35.33270264]
[84.33956146 48.25239182]
[91.96069336 61.17208099]
[99.58182526 74.09177399]
[114.57592010 73.67108154]
[121.46064758 60.34439468]
[120.92050934 44.53240967]
[133.63626099 36.77620316]
[140.52099609 23.44951630]
[147.40571594 10.12283230]
[154.29045105 -3.20385218]
[152.98399353 -19.55087662]
[166.63938904 -28.63174057]
[181.20915222 -21.10482979]
[181.70513916 -4.71318388]
[167.61714172 3.68087578]
[160.73240662 17.00756073]
[153.84767151 30.33424568]
[146.96295166 43.66093063]
[147.99552917 58.51969910]
[134.78733826 67.22911835]
[127.90260315 80.55580902]
[120.83721924 92.39321899]
[110.31198120 99.05448151]
[124.17017365 104.79473114]
[138.02836609 110.53498077]
[151.88655090 116.27523041]
[167.59719849 114.40799713]
[176.39471436 126.42684937]
[190.25291443 132.16709900]
[204.11111450 137.90734863]
[217.96929932 143.64759827]
[231.82749939 149.38784790]
[241.78857422 144.58644104]
[252.51728821 146.11103821]
[260.41671753 153.20181274]
[262.97726440 163.27519226]
[276.49179077 169.78344727]
[290.00631714 176.29170227]
[306.90029907 177.71647644]
[310.20791626 194.34465027]
[295.14523315 202.12614441]
[283.49807739 189.80622864]
[269.98355103 183.29797363]
[256.46899414 176.78971863]
[237.45162964 179.77947998]
[226.08723450 163.24604797]
[212.22904968 157.50579834]
[198.37084961 151.76554871]
[184.51266479 146.02529907]
[170.65446472 140.28503418]
[155.93507385 142.56285095]
[146.14630127 130.13342285]
[132.28811646 124.39317322]
[118.42992401 118.65292358]
[104.57172394 112.91267395]
[117.66030121 120.23996735]
[127.92933655 131.17372131]
[134.42239380 144.69555664]
[136.53469849 159.54608154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[20 31]
[21 30]
[22 29]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[56 73]
[57 72]
[59 70]
[60 69]
[61 68]
[62 67]
[75 107]
[76 106]
[77 105]
[78 104]
[80 102]
[81 101]
[82 100]
[83 99]
[84 98]
[88 96]
[89 95]
[90 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
