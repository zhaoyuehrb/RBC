%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COG8)
} def

/sequence { (\
UUCUUCCUGUCCUAAGUUCGGAGUCAGCGCCCCUUGUGGUCCGGAAGGGAAGUGACGUUGUUGCUGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 49 0.004787444 ubox
1 69 0.004224955 ubox
1 70 0.013813199 ubox
1 71 0.007670903 ubox
2 48 0.006081213 ubox
2 68 0.004309892 ubox
2 69 0.013783250 ubox
2 70 0.011431550 ubox
3 47 0.006601487 ubox
3 67 0.004409199 ubox
3 68 0.013455838 ubox
3 71 0.581106257 ubox
4 46 0.006619075 ubox
4 66 0.004291213 ubox
4 67 0.011727698 ubox
4 69 0.027381234 ubox
4 70 0.598857545 ubox
4 71 0.015425599 ubox
5 45 0.006635315 ubox
5 66 0.010473508 ubox
5 68 0.029051024 ubox
5 69 0.600561622 ubox
5 70 0.024171287 ubox
6 44 0.006640754 ubox
6 67 0.030916344 ubox
6 68 0.600614643 ubox
7 27 0.003389032 ubox
7 43 0.006620602 ubox
7 66 0.031788095 ubox
7 67 0.599310735 ubox
7 68 0.003731592 ubox
7 71 0.366942608 ubox
8 14 0.004807852 ubox
8 15 0.003698704 ubox
8 26 0.005760928 ubox
8 66 0.589204277 ubox
8 70 0.370383154 ubox
9 13 0.006232684 ubox
9 19 0.003382054 ubox
9 24 0.003662656 ubox
9 25 0.008300073 ubox
9 28 0.004097932 ubox
9 56 0.006660815 ubox
9 64 0.088024726 ubox
9 65 0.156890676 ubox
10 21 0.004858422 ubox
10 22 0.122619933 ubox
10 27 0.003438152 ubox
10 49 0.048813412 ubox
10 50 0.157393355 ubox
10 55 0.006627995 ubox
10 63 0.083906404 ubox
10 67 0.004851871 ubox
10 68 0.046607821 ubox
10 69 0.747599376 ubox
11 20 0.006596798 ubox
11 21 0.132967970 ubox
11 39 0.007466156 ubox
11 48 0.062194102 ubox
11 49 0.168170636 ubox
11 54 0.006584575 ubox
11 66 0.029595948 ubox
11 67 0.066645374 ubox
11 68 0.795952918 ubox
12 20 0.132928265 ubox
12 21 0.013591919 ubox
12 23 0.003547116 ubox
12 38 0.007481055 ubox
12 47 0.062439187 ubox
12 48 0.168126182 ubox
12 49 0.005377316 ubox
12 52 0.006352010 ubox
12 66 0.074144207 ubox
12 67 0.796272349 ubox
12 68 0.025769906 ubox
13 20 0.013170659 ubox
13 22 0.003696972 ubox
13 36 0.007044335 ubox
13 46 0.061940659 ubox
13 47 0.161214340 ubox
13 48 0.005131867 ubox
13 51 0.006130522 ubox
13 60 0.008484310 ubox
13 63 0.068920668 ubox
13 66 0.771901387 ubox
13 67 0.024289602 ubox
14 35 0.007340140 ubox
14 59 0.008415284 ubox
14 62 0.074560836 ubox
14 65 0.563798492 ubox
15 34 0.007362658 ubox
15 58 0.006503939 ubox
15 59 0.005518307 ubox
15 61 0.072915851 ubox
15 62 0.039631631 ubox
15 65 0.763586991 ubox
16 28 0.003644173 ubox
16 33 0.007344011 ubox
16 58 0.003672514 ubox
16 61 0.033059588 ubox
16 64 0.934897402 ubox
17 27 0.003628514 ubox
17 45 0.176403819 ubox
17 46 0.011705869 ubox
17 57 0.003384057 ubox
17 60 0.007930856 ubox
17 63 0.928203392 ubox
18 26 0.003273532 ubox
18 44 0.178747997 ubox
18 45 0.011010154 ubox
18 55 0.003208365 ubox
19 29 0.005609731 ubox
19 43 0.179476251 ubox
19 44 0.007823232 ubox
19 54 0.003264173 ubox
19 57 0.012079900 ubox
19 60 0.940223584 ubox
19 63 0.005506130 ubox
19 66 0.006710232 ubox
20 28 0.005868481 ubox
20 31 0.005223289 ubox
20 32 0.004967504 ubox
20 42 0.179677953 ubox
20 56 0.008219757 ubox
20 59 0.938488693 ubox
20 62 0.006520715 ubox
20 65 0.008186384 ubox
21 30 0.005287555 ubox
21 31 0.004973615 ubox
21 41 0.179677579 ubox
21 58 0.926012743 ubox
21 59 0.169197616 ubox
21 61 0.003895913 ubox
21 62 0.003921860 ubox
21 64 0.008275208 ubox
22 40 0.177904823 ubox
22 58 0.164504030 ubox
22 59 0.009349510 ubox
22 61 0.003941631 ubox
22 62 0.004189604 ubox
22 65 0.008506726 ubox
23 30 0.016734663 ubox
23 37 0.006449690 ubox
23 40 0.007168316 ubox
23 56 0.982169087 ubox
23 61 0.004377873 ubox
23 64 0.010454238 ubox
24 29 0.015833557 ubox
24 39 0.122005728 ubox
24 55 0.982322642 ubox
24 63 0.009091259 ubox
25 36 0.060333626 ubox
25 38 0.132341933 ubox
25 54 0.980827418 ubox
25 60 0.015795363 ubox
25 63 0.005076912 ubox
25 66 0.009417338 ubox
26 34 0.014244232 ubox
26 35 0.059642494 ubox
26 37 0.116714935 ubox
26 53 0.865655215 ubox
26 59 0.015867241 ubox
26 62 0.005161461 ubox
26 65 0.009646574 ubox
27 33 0.017805325 ubox
27 34 0.048144318 ubox
27 37 0.111285042 ubox
27 53 0.454601431 ubox
27 58 0.015867077 ubox
27 61 0.005149683 ubox
27 64 0.009682709 ubox
28 36 0.137863516 ubox
28 38 0.019497174 ubox
28 39 0.003730869 ubox
28 52 0.774125304 ubox
28 54 0.015459008 ubox
28 57 0.015757424 ubox
28 60 0.005106223 ubox
28 63 0.009651677 ubox
29 35 0.112127695 ubox
29 37 0.022014967 ubox
29 40 0.014203248 ubox
29 53 0.033215237 ubox
29 56 0.014966414 ubox
29 59 0.003689790 ubox
29 61 0.004561639 ubox
29 62 0.006790521 ubox
30 36 0.022907590 ubox
30 39 0.019261496 ubox
30 48 0.004682830 ubox
30 49 0.178253621 ubox
30 52 0.039683555 ubox
30 57 0.004244148 ubox
30 60 0.006473463 ubox
31 38 0.019201775 ubox
31 39 0.009711684 ubox
31 47 0.004629585 ubox
31 48 0.153518949 ubox
31 49 0.965900568 ubox
32 38 0.009629557 ubox
32 39 0.027987870 ubox
32 44 0.004106037 ubox
32 47 0.123667563 ubox
32 48 0.971549450 ubox
32 49 0.007284299 ubox
33 38 0.028193074 ubox
33 39 0.003208179 ubox
33 43 0.005091638 ubox
33 44 0.017747767 ubox
33 47 0.975776417 ubox
33 48 0.007146145 ubox
34 43 0.017211786 ubox
34 44 0.022800621 ubox
34 45 0.076098918 ubox
34 46 0.978974286 ubox
34 47 0.006962918 ubox
35 43 0.034200116 ubox
35 44 0.079701503 ubox
35 45 0.974318895 ubox
35 46 0.008950579 ubox
35 57 0.003900356 ubox
36 42 0.042682540 ubox
36 56 0.004071449 ubox
37 43 0.943625150 ubox
37 55 0.004053129 ubox
38 42 0.902522643 ubox
40 49 0.003547050 ubox
40 50 0.007680996 ubox
41 48 0.004895929 ubox
41 49 0.008355819 ubox
42 47 0.004978235 ubox
42 48 0.008349093 ubox
51 65 0.174598274 ubox
52 64 0.183011064 ubox
53 63 0.182644174 ubox
54 62 0.182126442 ubox
55 61 0.182689265 ubox
56 60 0.180926282 ubox
56 63 0.005186151 ubox
57 62 0.007343803 ubox
57 64 0.093483486 ubox
58 63 0.092073976 ubox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
17 63 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
21 58 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
showpage
end
%%EOF
