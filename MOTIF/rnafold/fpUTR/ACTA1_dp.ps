%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ACTA1)
} def

/sequence { (\
CCACCGCAGCGGACAGCGCCAAGUGAAGCCUCGCUUCCCCUCCGCGGCGACCAGGGCCCGAGCCGAGAGUAGCAGUUGUAGCUACCCGCCCAGAAACUAGACACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
4 12 0.005828473 ubox
4 47 0.006272296 ubox
5 11 0.005858196 ubox
5 46 0.006334640 ubox
5 49 0.069422047 ubox
6 10 0.005514000 ubox
6 45 0.006459542 ubox
6 48 0.070123239 ubox
6 89 0.015817623 ubox
7 44 0.006436160 ubox
7 47 0.069859812 ubox
7 88 0.014993002 ubox
8 41 0.005238088 ubox
8 98 0.009337033 ubox
9 19 0.005046008 ubox
9 40 0.005625937 ubox
9 45 0.071459742 ubox
9 89 0.994783415 ubox
9 97 0.004552264 ubox
10 18 0.005056398 ubox
10 44 0.071723460 ubox
10 88 0.997136965 ubox
11 17 0.005047533 ubox
11 38 0.005489148 ubox
11 43 0.071722292 ubox
11 86 0.020253891 ubox
11 87 0.997128895 ubox
12 37 0.005513506 ubox
12 42 0.071691595 ubox
12 85 0.026807731 ubox
12 86 0.996427263 ubox
13 24 0.006174171 ubox
13 36 0.005471197 ubox
13 41 0.066222192 ubox
14 23 0.006934479 ubox
15 35 0.013353145 ubox
15 41 0.020894691 ubox
15 83 0.985435187 ubox
16 24 0.016036362 ubox
16 34 0.013768298 ubox
16 40 0.034726289 ubox
16 45 0.003906183 ubox
16 82 0.997187922 ubox
17 23 0.016891185 ubox
17 25 0.003387090 ubox
17 33 0.013768229 ubox
17 44 0.003926774 ubox
17 49 0.006263649 ubox
17 81 0.996974421 ubox
18 24 0.005325000 ubox
18 29 0.005441578 ubox
18 32 0.012676423 ubox
18 43 0.003909054 ubox
18 45 0.003716250 ubox
18 48 0.006355618 ubox
18 79 0.123805410 ubox
18 82 0.008611950 ubox
19 23 0.005401069 ubox
19 28 0.005858132 ubox
19 44 0.003719198 ubox
19 47 0.006355804 ubox
19 78 0.094710398 ubox
19 81 0.008670018 ubox
20 46 0.006344047 ubox
20 78 0.988727544 ubox
21 36 0.061693822 ubox
21 77 0.995606546 ubox
22 31 0.008851970 ubox
22 35 0.066502071 ubox
22 41 0.007211320 ubox
22 76 0.988211226 ubox
22 77 0.008159543 ubox
23 29 0.005880395 ubox
23 30 0.008872821 ubox
23 34 0.066934702 ubox
23 40 0.009363984 ubox
23 73 0.005138572 ubox
23 76 0.008034748 ubox
24 28 0.005584930 ubox
24 33 0.066910067 ubox
24 72 0.005119415 ubox
24 74 0.995195051 ubox
25 32 0.066886247 ubox
25 37 0.026050137 ubox
25 73 0.997042425 ubox
26 31 0.062574569 ubox
26 36 0.026436153 ubox
27 35 0.026523638 ubox
28 34 0.026550030 ubox
28 70 0.993789911 ubox
28 73 0.003378786 ubox
29 33 0.026357122 ubox
29 69 0.995885521 ubox
29 72 0.003637953 ubox
30 67 0.996667614 ubox
30 69 0.019237628 ubox
30 72 0.003841818 ubox
31 66 0.996788501 ubox
31 68 0.024146136 ubox
31 71 0.003842238 ubox
32 65 0.996582061 ubox
32 67 0.023974679 ubox
33 45 0.004635340 ubox
33 48 0.004237091 ubox
33 63 0.677024403 ubox
33 64 0.731479781 ubox
33 70 0.004578019 ubox
34 44 0.004670110 ubox
34 47 0.004228318 ubox
34 54 0.005208454 ubox
34 62 0.956928730 ubox
34 67 0.003301475 ubox
34 69 0.004624116 ubox
35 46 0.003993083 ubox
35 53 0.004952987 ubox
35 61 0.950055574 ubox
35 62 0.234271003 ubox
35 66 0.003529819 ubox
35 67 0.004053579 ubox
35 68 0.004103934 ubox
36 50 0.010626433 ubox
36 56 0.007577871 ubox
36 60 0.904735088 ubox
36 61 0.270920119 ubox
36 66 0.014954545 ubox
37 49 0.011694819 ubox
37 55 0.012274832 ubox
37 56 0.181568952 ubox
37 60 0.285783170 ubox
37 65 0.015335608 ubox
38 47 0.008914459 ubox
38 54 0.012260741 ubox
38 55 0.180273882 ubox
38 56 0.913053657 ubox
39 46 0.008961045 ubox
39 47 0.011819897 ubox
39 54 0.178545224 ubox
39 55 0.913862125 ubox
39 56 0.044936310 ubox
40 46 0.013072437 ubox
40 47 0.014760234 ubox
40 54 0.914053240 ubox
40 55 0.044259337 ubox
40 56 0.084732428 ubox
40 62 0.113880100 ubox
40 67 0.010060382 ubox
41 46 0.013642745 ubox
41 47 0.011581179 ubox
41 50 0.205504365 ubox
41 53 0.885734819 ubox
41 54 0.037198390 ubox
41 55 0.049856407 ubox
41 56 0.148705066 ubox
41 61 0.116933340 ubox
41 66 0.010128062 ubox
42 46 0.021072028 ubox
42 49 0.234582801 ubox
42 54 0.052823938 ubox
42 55 0.175092237 ubox
42 56 0.089232042 ubox
42 60 0.092093344 ubox
42 65 0.010111513 ubox
43 49 0.626847422 ubox
43 54 0.175493959 ubox
43 55 0.089366167 ubox
43 60 0.240887553 ubox
44 48 0.588672587 ubox
44 57 0.005145574 ubox
44 59 0.273750997 ubox
44 63 0.015301532 ubox
45 56 0.005153078 ubox
45 60 0.023818183 ubox
45 62 0.015306134 ubox
46 52 0.536893656 ubox
46 58 0.288189071 ubox
46 59 0.021531477 ubox
46 90 0.015328367 ubox
47 51 0.528511394 ubox
47 57 0.288651767 ubox
47 58 0.015422138 ubox
47 63 0.003172830 ubox
47 89 0.015406589 ubox
48 56 0.289008110 ubox
48 62 0.003170396 ubox
48 88 0.015444175 ubox
49 87 0.015282307 ubox
54 64 0.003235307 ubox
54 91 0.067360121 ubox
55 64 0.028425026 ubox
55 90 0.067423200 ubox
56 63 0.028618887 ubox
56 89 0.067413023 ubox
57 62 0.028559819 ubox
57 88 0.066791214 ubox
59 65 0.038842004 ubox
60 64 0.036725095 ubox
60 87 0.006854132 ubox
61 83 0.027474955 ubox
62 82 0.027711237 ubox
63 81 0.027642331 ubox
64 78 0.016691577 ubox
64 88 0.008155224 ubox
65 77 0.017145458 ubox
65 87 0.019851838 ubox
66 76 0.016887946 ubox
66 77 0.004066333 ubox
67 76 0.004071392 ubox
67 77 0.017919228 ubox
68 76 0.017844090 ubox
68 77 0.005495788 ubox
68 83 0.003821698 ubox
69 76 0.004537489 ubox
69 82 0.003897463 ubox
69 85 0.067507939 ubox
70 81 0.003834500 ubox
70 84 0.067720153 ubox
71 83 0.067757522 ubox
72 79 0.004705101 ubox
72 82 0.067780015 ubox
73 78 0.004851277 ubox
73 81 0.067742026 ubox
92 98 0.089292050 ubox
93 97 0.091706830 ubox
9 89 0.9500000 lbox
10 88 0.9500000 lbox
11 87 0.9500000 lbox
12 86 0.9500000 lbox
15 83 0.9500000 lbox
16 82 0.9500000 lbox
17 81 0.9500000 lbox
20 78 0.9500000 lbox
21 77 0.9500000 lbox
22 76 0.9500000 lbox
24 74 0.9500000 lbox
25 73 0.9500000 lbox
28 70 0.9500000 lbox
29 69 0.9500000 lbox
30 67 0.9500000 lbox
31 66 0.9500000 lbox
32 65 0.9500000 lbox
33 64 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
38 56 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
41 53 0.9500000 lbox
43 49 0.9500000 lbox
44 48 0.9500000 lbox
showpage
end
%%EOF
