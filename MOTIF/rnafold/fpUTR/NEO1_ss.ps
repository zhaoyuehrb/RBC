%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGAGGCGCCCUGGAGUCUCCCCUCCAGCGAGAGGGGCUGCGCGGGCCGGGCCGGGCCGGGCUGGGCUGGAGCAGCGGCGGCCGCGGGAGCCGAGCUUGCAGCGAGGGACCGGCUGAGGCGCGCGGGAGGGAAGGAGGCAAGGGCUCCGCGGCGCUGUCGCCGCCGCUGCCGCUCACUCUCGGGGAAGAG\
) } def
/len { sequence length } bind def

/coor [
[-101.73159027 480.38983154]
[-107.84666443 482.82540894]
[-114.36408997 483.24081421]
[-120.74636078 496.81527710]
[-127.12863159 510.38977051]
[-133.51089478 523.96423340]
[-139.89317322 537.53875732]
[-146.27543640 551.11322021]
[-152.65771484 564.68768311]
[-145.06016541 578.21759033]
[-146.89971924 593.62524414]
[-157.46900940 604.98608398]
[-172.70391846 607.93176270]
[-186.74633789 601.32946777]
[-194.19667053 587.71795654]
[-192.19007874 572.33117676]
[-181.49816895 561.08563232]
[-166.23219299 558.30541992]
[-159.84992981 544.73095703]
[-153.46765137 531.15649414]
[-147.08538818 517.58197021]
[-140.70310974 504.00750732]
[-134.32084656 490.43301392]
[-127.93856812 476.85852051]
[-132.60374451 454.20550537]
[-113.05567932 440.54013062]
[-108.02748871 426.40798950]
[-102.99929047 412.27584839]
[-107.90715027 401.20925903]
[-103.82199860 389.38818359]
[-92.42058563 383.33618164]
[-87.16302490 369.28775024]
[-81.90547180 355.23934937]
[-76.64791107 341.19091797]
[-71.39035797 327.14251709]
[-66.13279724 313.09408569]
[-60.98974991 299.00335693]
[-55.96155548 284.87121582]
[-50.93336105 270.73907471]
[-45.90516663 256.60693359]
[-52.31211090 249.06135559]
[-55.13287735 239.57305908]
[-69.71700287 236.06544495]
[-84.94385529 240.36117554]
[-95.50896454 229.86222839]
[-110.09308624 226.35461426]
[-124.67720795 222.84700012]
[-139.90406799 227.14273071]
[-150.46917725 216.64379883]
[-165.05329895 213.13618469]
[-179.63742065 209.62857056]
[-194.22154236 206.12095642]
[-207.56771851 214.58589172]
[-222.97204590 211.05287170]
[-231.29541016 197.61795044]
[-227.59971619 182.25184631]
[-214.07756042 174.07098389]
[-198.75137329 177.92892456]
[-190.71392822 191.53683472]
[-176.12980652 195.04444885]
[-161.54568481 198.55206299]
[-146.96156311 202.05967712]
[-132.77786255 197.51304626]
[-121.16959381 208.26287842]
[-106.58547211 211.77049255]
[-92.00135040 215.27810669]
[-77.81764984 210.73149109]
[-66.20938110 221.48132324]
[-51.62526321 224.98893738]
[-46.84583282 219.09655762]
[-40.41256332 214.94071960]
[-32.93737030 212.96975708]
[-25.14797974 213.42166138]
[-17.81711388 216.29621887]
[-6.42292547 206.54057312]
[4.97126245 196.78494263]
[16.36544991 187.02929688]
[27.75963783 177.27366638]
[39.15382767 167.51802063]
[50.54801559 157.76239014]
[61.94220352 148.00674438]
[73.33638763 138.25111389]
[84.73057556 128.49546814]
[96.12476349 118.73983002]
[82.83295441 101.38951111]
[94.52870178 85.70095825]
[96.71833801 70.86163330]
[91.07840729 56.07983017]
[100.59069824 44.61834717]
[102.78033447 29.77902603]
[93.62764740 17.17481613]
[96.05963898 2.15682578]
[108.13223267 -6.49118710]
[110.32186890 -21.33050919]
[101.16918182 -33.93471909]
[103.60117340 -48.95270920]
[115.67376709 -57.60072327]
[117.86340332 -72.44004822]
[120.05303955 -87.27936554]
[116.38359070 -103.83145142]
[131.27301025 -111.93956757]
[143.18606567 -99.87657928]
[134.89236450 -85.08972931]
[132.70272827 -70.25041199]
[130.51309204 -55.41108704]
[139.57342529 -43.64477921]
[137.56420898 -28.56440353]
[125.16119385 -19.14087486]
[122.97155762 -4.30155230]
[132.03189087 7.46475601]
[130.02267456 22.54513168]
[117.61965942 31.96866035]
[115.43002319 46.80798340]
[121.22657013 60.52838135]
[111.55766296 73.05126953]
[109.36802673 87.89059448]
[116.83674622 96.37203979]
[116.90361786 108.97030640]
[131.68505859 106.41903687]
[146.44525146 103.74755096]
[161.18319702 100.95601654]
[175.92115784 98.16448975]
[190.65911865 95.37295532]
[205.39707947 92.58142853]
[213.26057434 87.90306091]
[220.39752197 89.86645508]
[235.17895508 87.31518555]
[249.93914795 84.64369202]
[264.67709351 81.85216522]
[279.41506958 79.06063080]
[294.15301514 76.26910400]
[296.87734985 61.33784485]
[304.81484985 48.40105057]
[316.89199829 39.20830917]
[331.47552490 35.00287247]
[346.59307861 36.35348129]
[360.20013428 43.07748413]
[370.45648193 54.26551437]
[375.97500610 68.40447998]
[376.00936890 83.58219910]
[370.55496216 97.74601746]
[360.34939575 108.98039246]
[346.77291870 115.76596069]
[331.66165161 117.18503571]
[317.05923462 113.04570770]
[304.94055176 103.90776825]
[296.94454956 91.00705719]
[282.20660400 93.79859161]
[267.46862793 96.59011841]
[252.73068237 99.38165283]
[246.73466492 103.72201538]
[237.73023987 102.09662628]
[222.94879150 104.64789581]
[208.18859863 107.31938171]
[193.45065308 110.11091614]
[178.71269226 112.90244293]
[163.97473145 115.69397736]
[149.23677063 118.48550415]
[143.24076843 122.82587433]
[134.23632812 121.20047760]
[119.45488739 123.75174713]
[105.88040161 130.13401794]
[94.48621368 139.88966370]
[83.09202576 149.64529419]
[71.69783783 159.40093994]
[60.30365372 169.15657043]
[48.90946579 178.91221619]
[37.51527786 188.66784668]
[26.12108803 198.42349243]
[14.72690105 208.17912292]
[3.33271289 217.93476868]
[-8.06147480 227.69039917]
[-10.81690407 251.40077209]
[-31.77302933 261.63513184]
[-36.80122375 275.76727295]
[-41.82942200 289.89941406]
[-46.85761642 304.03152466]
[-46.78742218 313.18121338]
[-52.08437729 318.35165405]
[-57.34193420 332.40005493]
[-62.59949493 346.44848633]
[-67.85704803 360.49691772]
[-73.11460876 374.54531860]
[-78.37216949 388.59375000]
[-74.91294861 406.67294312]
[-88.86715698 417.30404663]
[-93.89535522 431.43618774]
[-98.92354584 445.56832886]
[-94.48121643 450.83749390]
[-91.91165924 457.17684937]
[-91.43865967 463.94903564]
[-93.07695770 470.48388672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 24]
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[26 188]
[27 187]
[28 186]
[31 184]
[32 183]
[33 182]
[34 181]
[35 180]
[36 179]
[37 177]
[38 176]
[39 175]
[40 174]
[42 69]
[43 68]
[45 66]
[46 65]
[47 64]
[49 62]
[50 61]
[51 60]
[52 59]
[74 172]
[75 171]
[76 170]
[77 169]
[78 168]
[79 167]
[80 166]
[81 165]
[82 164]
[83 163]
[84 162]
[86 116]
[87 115]
[89 113]
[90 112]
[93 109]
[94 108]
[97 105]
[98 104]
[99 103]
[118 161]
[119 160]
[120 158]
[121 157]
[122 156]
[123 155]
[124 154]
[126 153]
[127 152]
[128 150]
[129 149]
[130 148]
[131 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
