%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC26A9)
} def

/sequence { (\
GAGCAGAGCCCUUUCACACACCUCAGGAACACCUUUCGGCUGCCCGCUCCCCAGACACACCUGCAGCCCUGCCCAGCCGGCUUUGCUCACCCACUGCUUGUAAAUGCCCCAGAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 88 0.998988832 ubox
2 87 0.999738182 ubox
3 86 0.999988347 ubox
4 85 0.999988019 ubox
5 84 0.999070272 ubox
6 83 0.998870152 ubox
7 82 0.999663684 ubox
8 81 0.999968230 ubox
9 27 0.005346223 ubox
9 80 0.997489191 ubox
10 26 0.006813276 ubox
10 27 0.189498512 ubox
10 79 0.908673630 ubox
10 80 0.055368908 ubox
11 26 0.196939681 ubox
11 27 0.063089762 ubox
11 76 0.042851173 ubox
11 79 0.074693411 ubox
12 25 0.187446398 ubox
12 26 0.062739298 ubox
12 27 0.008560271 ubox
12 28 0.015767184 ubox
12 29 0.143465813 ubox
12 75 0.040813938 ubox
12 76 0.013684799 ubox
13 25 0.055998303 ubox
13 26 0.012678025 ubox
13 27 0.015844759 ubox
13 28 0.168254869 ubox
13 29 0.088040933 ubox
13 75 0.013386704 ubox
13 76 0.018382543 ubox
14 25 0.014842606 ubox
14 26 0.014175487 ubox
14 27 0.170942502 ubox
14 28 0.103318337 ubox
14 75 0.017699790 ubox
15 26 0.173982075 ubox
15 27 0.104600770 ubox
15 71 0.020402976 ubox
15 79 0.003329682 ubox
16 70 0.018179879 ubox
17 71 0.031126922 ubox
18 70 0.027940223 ubox
19 42 0.007887904 ubox
19 71 0.024298859 ubox
20 41 0.007916587 ubox
20 70 0.021764525 ubox
21 27 0.157073414 ubox
21 39 0.012282765 ubox
22 26 0.157906260 ubox
22 38 0.014814169 ubox
22 39 0.003293844 ubox
22 66 0.013080635 ubox
22 76 0.006357763 ubox
23 38 0.004050460 ubox
23 65 0.013088087 ubox
23 75 0.006206096 ubox
24 38 0.007875810 ubox
24 63 0.013797356 ubox
24 71 0.014860523 ubox
25 34 0.789148760 ubox
25 35 0.118117280 ubox
25 36 0.024107249 ubox
25 62 0.013833954 ubox
25 70 0.015031602 ubox
26 33 0.844398532 ubox
26 34 0.135035755 ubox
26 35 0.025279933 ubox
26 36 0.027300976 ubox
26 37 0.315733206 ubox
26 44 0.003580897 ubox
26 45 0.005248964 ubox
26 61 0.013840389 ubox
26 69 0.014969147 ubox
26 73 0.003583887 ubox
26 78 0.017519942 ubox
27 32 0.839452218 ubox
27 33 0.137604413 ubox
27 34 0.022380461 ubox
27 35 0.033434382 ubox
27 36 0.317278684 ubox
27 37 0.226504943 ubox
27 43 0.003589845 ubox
27 44 0.005243191 ubox
27 60 0.013809532 ubox
27 68 0.009124513 ubox
27 72 0.003574836 ubox
27 77 0.017507486 ubox
28 34 0.034808723 ubox
28 35 0.312988615 ubox
28 36 0.226006211 ubox
29 34 0.254250498 ubox
29 35 0.203741660 ubox
30 42 0.007369963 ubox
31 41 0.007368470 ubox
32 39 0.009810823 ubox
33 38 0.010406352 ubox
33 54 0.010034119 ubox
33 76 0.005131700 ubox
34 53 0.009759204 ubox
34 75 0.005115907 ubox
35 76 0.009909435 ubox
36 75 0.012200239 ubox
36 79 0.003681584 ubox
36 80 0.033249456 ubox
37 46 0.004765768 ubox
37 71 0.008302049 ubox
37 79 0.405589888 ubox
38 45 0.007148545 ubox
38 48 0.012261159 ubox
38 49 0.004500931 ubox
38 68 0.183223503 ubox
38 69 0.014845986 ubox
38 73 0.039333706 ubox
38 74 0.008121733 ubox
38 78 0.980840726 ubox
39 44 0.007065786 ubox
39 47 0.013514223 ubox
39 67 0.184037960 ubox
39 68 0.010550115 ubox
39 72 0.039482334 ubox
39 73 0.007731062 ubox
39 77 0.981761126 ubox
40 46 0.013531136 ubox
40 66 0.184350594 ubox
40 71 0.039525549 ubox
40 76 0.981766924 ubox
41 65 0.184307972 ubox
41 75 0.967345296 ubox
42 64 0.184300725 ubox
42 67 0.007166324 ubox
42 70 0.006644932 ubox
42 72 0.437419560 ubox
42 74 0.876305628 ubox
43 63 0.179147666 ubox
43 66 0.007510186 ubox
43 71 0.486167038 ubox
45 71 0.580592457 ubox
46 62 0.008400069 ubox
46 64 0.014812146 ubox
46 67 0.927637453 ubox
46 70 0.148433823 ubox
46 72 0.254578259 ubox
46 77 0.003706181 ubox
47 54 0.036748227 ubox
47 63 0.014811969 ubox
47 66 0.931715316 ubox
47 71 0.254442280 ubox
47 76 0.003729120 ubox
48 53 0.033630615 ubox
48 55 0.068691120 ubox
48 65 0.920761147 ubox
48 75 0.003609313 ubox
49 54 0.070086852 ubox
52 63 0.978757086 ubox
52 71 0.008832999 ubox
53 62 0.983239321 ubox
53 70 0.011699007 ubox
54 61 0.980932483 ubox
54 69 0.011710717 ubox
56 63 0.032924500 ubox
57 62 0.028359915 ubox
63 72 0.024298762 ubox
64 71 0.025638817 ubox
65 70 0.023254951 ubox
66 72 0.016934022 ubox
66 77 0.003729716 ubox
67 71 0.016866277 ubox
67 76 0.003749012 ubox
69 76 0.038502943 ubox
69 79 0.008649278 ubox
70 75 0.036458186 ubox
71 77 0.104834486 ubox
71 78 0.022254334 ubox
72 76 0.104758058 ubox
73 79 0.003263264 ubox
89 95 0.012455033 ubox
89 99 0.003439664 ubox
89 101 0.031247525 ubox
89 105 0.010864393 ubox
90 100 0.032609291 ubox
92 100 0.059108555 ubox
92 106 0.024334715 ubox
93 99 0.055053368 ubox
93 101 0.157424104 ubox
93 105 0.021293559 ubox
94 100 0.165418848 ubox
94 112 0.511806830 ubox
95 102 0.018453589 ubox
95 106 0.005410350 ubox
95 111 0.512978205 ubox
96 101 0.016801143 ubox
96 105 0.007808660 ubox
96 107 0.775342695 ubox
96 110 0.442921393 ubox
97 106 0.789032057 ubox
97 112 0.070063980 ubox
98 104 0.066482402 ubox
98 111 0.066477954 ubox
98 112 0.064498250 ubox
98 113 0.014581877 ubox
99 103 0.058257887 ubox
99 106 0.036824992 ubox
99 111 0.078015331 ubox
99 112 0.015163894 ubox
100 105 0.029808763 ubox
100 107 0.382861465 ubox
100 110 0.081544773 ubox
100 114 0.007593351 ubox
101 106 0.367986641 ubox
101 113 0.008117557 ubox
104 114 0.022782978 ubox
105 111 0.037723572 ubox
105 113 0.025556967 ubox
106 110 0.041195591 ubox
1 88 0.9500000 lbox
2 87 0.9500000 lbox
3 86 0.9500000 lbox
4 85 0.9500000 lbox
5 84 0.9500000 lbox
6 83 0.9500000 lbox
7 82 0.9500000 lbox
8 81 0.9500000 lbox
9 80 0.9500000 lbox
10 79 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
27 32 0.9500000 lbox
38 78 0.9500000 lbox
39 77 0.9500000 lbox
40 76 0.9500000 lbox
41 75 0.9500000 lbox
42 74 0.9500000 lbox
46 67 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
52 63 0.9500000 lbox
53 62 0.9500000 lbox
54 61 0.9500000 lbox
96 107 0.9500000 lbox
97 106 0.9500000 lbox
showpage
end
%%EOF
