%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PKHD1L1)
} def

/sequence { (\
GGGACGAAGCGGGCCCGCCAGCGAGUCGCAGUCCCAGGAGCCGAGCUCCAGCACUAGAGCCAGCUGCGAGCGGAGGGCACCAACUCCGCAGAACUGGCUUUUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.003525792 ubox
1 16 0.022302970 ubox
1 35 0.998942263 ubox
1 103 0.005341739 ubox
2 14 0.003552630 ubox
2 15 0.022317211 ubox
2 34 0.999708580 ubox
2 35 0.003659734 ubox
3 14 0.022282571 ubox
3 27 0.004936586 ubox
3 33 0.999713022 ubox
4 26 0.005351969 ubox
4 32 0.999531606 ubox
5 11 0.021154449 ubox
5 25 0.005865925 ubox
5 28 0.045918366 ubox
5 31 0.997571709 ubox
6 10 0.020190613 ubox
6 27 0.074064807 ubox
7 26 0.072053207 ubox
9 18 0.118362209 ubox
9 22 0.084966876 ubox
9 26 0.085511765 ubox
9 29 0.974616530 ubox
10 17 0.118636189 ubox
10 21 0.084886620 ubox
10 23 0.037341875 ubox
10 25 0.086950471 ubox
10 28 0.975983685 ubox
11 16 0.117014431 ubox
11 19 0.073399286 ubox
11 22 0.035986609 ubox
11 27 0.822710619 ubox
12 18 0.073740750 ubox
12 19 0.071836820 ubox
12 26 0.623519909 ubox
12 27 0.536260482 ubox
13 18 0.071775842 ubox
13 22 0.251236703 ubox
13 26 0.749875853 ubox
14 21 0.250892729 ubox
14 25 0.916353826 ubox
16 23 0.943518773 ubox
17 22 0.921124007 ubox
17 26 0.016891541 ubox
17 98 0.022407919 ubox
18 25 0.018514697 ubox
18 97 0.022435542 ubox
19 96 0.022435626 ubox
20 95 0.022406078 ubox
21 29 0.124470539 ubox
21 94 0.022270646 ubox
22 28 0.124590867 ubox
23 27 0.116581682 ubox
26 69 0.021074222 ubox
27 68 0.022609241 ubox
28 67 0.022644333 ubox
29 66 0.022644603 ubox
30 55 0.003438194 ubox
30 65 0.022634260 ubox
31 54 0.003594820 ubox
31 64 0.022627508 ubox
32 53 0.003503609 ubox
32 63 0.021814097 ubox
36 55 0.011431580 ubox
36 101 0.004805153 ubox
36 102 0.025327317 ubox
37 49 0.998411795 ubox
37 54 0.006193114 ubox
37 101 0.028893923 ubox
37 103 0.004134162 ubox
38 48 0.999472956 ubox
38 100 0.030924397 ubox
39 47 0.999334978 ubox
39 99 0.031265143 ubox
40 46 0.999421220 ubox
40 52 0.003476046 ubox
40 98 0.031359186 ubox
41 45 0.992155690 ubox
41 51 0.003473794 ubox
41 97 0.031360186 ubox
42 96 0.031313913 ubox
43 67 0.004107480 ubox
43 95 0.023966714 ubox
44 65 0.011531065 ubox
44 95 0.010241079 ubox
45 52 0.003677965 ubox
45 60 0.008131782 ubox
45 64 0.011806109 ubox
45 71 0.020466534 ubox
45 94 0.011642512 ubox
46 51 0.003670652 ubox
46 59 0.008160983 ubox
46 63 0.011807138 ubox
46 70 0.021422332 ubox
47 58 0.008164716 ubox
47 62 0.011663266 ubox
47 69 0.026298307 ubox
47 92 0.006060240 ubox
48 57 0.008164324 ubox
48 68 0.026793176 ubox
48 91 0.006123396 ubox
49 66 0.027611924 ubox
50 65 0.027651559 ubox
50 101 0.007620829 ubox
50 102 0.021187423 ubox
51 60 0.025396681 ubox
51 64 0.027658877 ubox
51 67 0.004006429 ubox
51 100 0.004514697 ubox
51 101 0.017898752 ubox
52 59 0.025429467 ubox
52 63 0.027621069 ubox
52 66 0.004012137 ubox
53 65 0.003962845 ubox
54 63 0.004095918 ubox
55 62 0.004317605 ubox
56 100 0.020579181 ubox
56 101 0.788440081 ubox
56 102 0.063478099 ubox
57 99 0.015544530 ubox
57 100 0.972622760 ubox
57 101 0.063516938 ubox
57 102 0.012074623 ubox
57 103 0.046444804 ubox
58 99 0.994620007 ubox
58 100 0.045995759 ubox
58 101 0.007966384 ubox
58 102 0.036456492 ubox
59 98 0.999185230 ubox
59 99 0.006601487 ubox
59 101 0.004553775 ubox
60 97 0.999233518 ubox
61 96 0.999224869 ubox
62 95 0.998447853 ubox
62 99 0.003861015 ubox
63 94 0.992057582 ubox
63 98 0.004058391 ubox
64 70 0.004015736 ubox
64 91 0.598600850 ubox
64 97 0.004059097 ubox
65 69 0.008650371 ubox
65 90 0.603603196 ubox
65 96 0.003971818 ubox
66 89 0.504409361 ubox
67 88 0.473454865 ubox
68 86 0.130402608 ubox
68 87 0.233450369 ubox
69 85 0.184379034 ubox
70 78 0.017061033 ubox
70 84 0.183889871 ubox
70 89 0.862053702 ubox
71 77 0.017794911 ubox
71 88 0.880439777 ubox
72 81 0.180917469 ubox
72 85 0.013749191 ubox
72 86 0.014432724 ubox
72 87 0.963435114 ubox
73 80 0.180488635 ubox
73 84 0.013924031 ubox
73 85 0.007513570 ubox
73 86 0.981739270 ubox
74 85 0.981575785 ubox
75 81 0.044876485 ubox
75 84 0.980973133 ubox
75 85 0.014867612 ubox
75 86 0.016706230 ubox
76 80 0.045428711 ubox
76 84 0.033602494 ubox
76 85 0.017055550 ubox
77 84 0.017612753 ubox
1 35 0.9500000 lbox
2 34 0.9500000 lbox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
41 45 0.9500000 lbox
56 101 0.9500000 lbox
57 100 0.9500000 lbox
58 99 0.9500000 lbox
59 98 0.9500000 lbox
60 97 0.9500000 lbox
61 96 0.9500000 lbox
62 95 0.9500000 lbox
63 94 0.9500000 lbox
70 89 0.9500000 lbox
71 88 0.9500000 lbox
72 87 0.9500000 lbox
73 86 0.9500000 lbox
74 85 0.9500000 lbox
75 84 0.9500000 lbox
showpage
end
%%EOF
