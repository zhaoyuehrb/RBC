%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WNT8B)
} def

/sequence { (\
GGAAGUUGGGCUUUGAGAAUUCCAUCCCACUGGCACUGAGGAGAAUAUUUCUCCGUCUUGCUUACCCAUCUCCCAGUUUUUUGGAAUUUUCUCUAGCUGUUACUCCAGAGGAUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 73 0.004623703 ubox
1 74 0.007499026 ubox
1 101 0.017625239 ubox
1 104 0.005050170 ubox
1 105 0.007415417 ubox
1 106 0.994431579 ubox
2 14 0.012615629 ubox
2 72 0.004674181 ubox
2 73 0.007479892 ubox
2 100 0.018112506 ubox
2 101 0.019325477 ubox
2 103 0.007118388 ubox
2 104 0.005073677 ubox
2 105 0.995094516 ubox
3 13 0.013262115 ubox
3 71 0.003531814 ubox
3 100 0.018665836 ubox
3 101 0.005869261 ubox
3 104 0.768291734 ubox
4 12 0.013436183 ubox
4 71 0.007865751 ubox
4 98 0.151569305 ubox
4 100 0.005542661 ubox
4 101 0.022488413 ubox
4 104 0.625106373 ubox
5 11 0.013468476 ubox
5 70 0.008537141 ubox
5 97 0.153168634 ubox
5 100 0.022205632 ubox
5 103 0.884647623 ubox
6 10 0.012599764 ubox
6 96 0.153111978 ubox
6 99 0.010059654 ubox
6 102 0.853016688 ubox
6 108 0.008461959 ubox
7 68 0.008570390 ubox
7 95 0.152932868 ubox
7 99 0.038702940 ubox
7 102 0.062400942 ubox
7 107 0.010435230 ubox
8 67 0.008766284 ubox
8 94 0.153068682 ubox
8 98 0.050674739 ubox
8 101 0.077242869 ubox
8 106 0.010749484 ubox
9 66 0.008765840 ubox
9 93 0.153043990 ubox
9 94 0.003290735 ubox
9 97 0.041975822 ubox
9 98 0.967722563 ubox
9 100 0.030051375 ubox
9 101 0.008037961 ubox
9 105 0.010430755 ubox
10 65 0.008725225 ubox
10 91 0.003711054 ubox
10 92 0.149040447 ubox
10 93 0.004184695 ubox
10 97 0.986997623 ubox
10 100 0.008272975 ubox
11 96 0.987379967 ubox
11 99 0.008370242 ubox
12 95 0.949684939 ubox
12 96 0.008973493 ubox
13 95 0.050454491 ubox
13 96 0.003347695 ubox
14 29 0.005036415 ubox
14 95 0.009307266 ubox
15 26 0.003384754 ubox
15 28 0.005669544 ubox
15 90 0.005314229 ubox
15 91 0.921727023 ubox
15 93 0.380077244 ubox
15 94 0.003278927 ubox
16 25 0.003389975 ubox
16 89 0.005372418 ubox
16 90 0.923633966 ubox
16 92 0.380030253 ubox
16 94 0.004013680 ubox
17 26 0.006018379 ubox
17 88 0.004798223 ubox
17 89 0.924394591 ubox
17 90 0.006943445 ubox
17 91 0.377960184 ubox
17 93 0.004027439 ubox
18 25 0.005684568 ubox
18 87 0.003965312 ubox
18 88 0.931188958 ubox
18 89 0.034626614 ubox
18 90 0.354283589 ubox
18 92 0.003671611 ubox
19 87 0.964496195 ubox
19 88 0.035233614 ubox
19 89 0.232945693 ubox
20 85 0.003624526 ubox
20 86 0.992571599 ubox
21 85 0.999329521 ubox
22 84 0.999926296 ubox
23 83 0.999875568 ubox
24 82 0.986056814 ubox
25 68 0.004395021 ubox
26 33 0.005889803 ubox
27 32 0.006537084 ubox
27 33 0.004272681 ubox
28 32 0.004602711 ubox
29 77 0.967360977 ubox
30 76 0.997521309 ubox
31 64 0.013486743 ubox
31 68 0.007402096 ubox
31 75 0.996841688 ubox
32 62 0.279590026 ubox
32 63 0.016779885 ubox
32 66 0.008748775 ubox
32 67 0.009663617 ubox
32 70 0.005732297 ubox
32 71 0.003770305 ubox
32 72 0.009958476 ubox
32 73 0.047341061 ubox
32 74 0.957835331 ubox
32 79 0.003561209 ubox
33 56 0.003794324 ubox
33 57 0.003692319 ubox
33 61 0.671483747 ubox
33 62 0.010689079 ubox
33 65 0.007687128 ubox
33 66 0.007658283 ubox
33 70 0.005002299 ubox
33 72 0.050889731 ubox
33 73 0.737763602 ubox
33 78 0.003650977 ubox
33 79 0.003320513 ubox
34 55 0.009601662 ubox
34 60 0.876059538 ubox
35 56 0.047272839 ubox
35 59 0.858684054 ubox
35 77 0.010981098 ubox
36 55 0.050437276 ubox
36 76 0.011458963 ubox
37 55 0.010941914 ubox
37 60 0.015571430 ubox
37 64 0.015137152 ubox
37 68 0.098605950 ubox
37 75 0.011488666 ubox
38 53 0.037317268 ubox
38 54 0.005961952 ubox
38 57 0.812641608 ubox
38 59 0.016568278 ubox
38 63 0.015703722 ubox
38 67 0.097381032 ubox
38 70 0.160648137 ubox
38 72 0.082741039 ubox
38 74 0.011495919 ubox
39 52 0.037451838 ubox
39 56 0.792463734 ubox
39 58 0.018315137 ubox
39 59 0.007125254 ubox
39 62 0.016358805 ubox
39 63 0.006432942 ubox
39 69 0.156791803 ubox
39 71 0.081351157 ubox
40 51 0.037384988 ubox
40 52 0.005304099 ubox
40 54 0.996772595 ubox
40 57 0.009305732 ubox
40 61 0.010171272 ubox
40 66 0.013926581 ubox
40 67 0.011230465 ubox
40 70 0.042462878 ubox
40 73 0.012327128 ubox
41 50 0.037136598 ubox
41 51 0.006423451 ubox
41 53 0.998955986 ubox
41 59 0.007145285 ubox
41 65 0.012534411 ubox
41 66 0.010179793 ubox
41 69 0.008459258 ubox
41 72 0.013206999 ubox
42 49 0.035963184 ubox
42 50 0.006871718 ubox
42 52 0.998889097 ubox
42 58 0.009566833 ubox
42 59 0.003694726 ubox
42 62 0.005560642 ubox
42 71 0.013208640 ubox
43 48 0.022204677 ubox
43 49 0.006913902 ubox
43 50 0.004281136 ubox
43 51 0.998972335 ubox
43 57 0.009799281 ubox
43 61 0.005844855 ubox
43 63 0.005095805 ubox
43 70 0.013206954 ubox
44 48 0.007005766 ubox
44 49 0.031983974 ubox
44 50 0.985269594 ubox
44 56 0.008933389 ubox
44 59 0.003671978 ubox
44 62 0.005228817 ubox
44 63 0.004777083 ubox
44 69 0.012459075 ubox
45 49 0.750886830 ubox
45 56 0.004305463 ubox
45 58 0.003476995 ubox
45 62 0.004485241 ubox
46 55 0.005217322 ubox
46 60 0.005604262 ubox
47 56 0.004098252 ubox
47 59 0.005702081 ubox
48 55 0.004057460 ubox
54 60 0.008785736 ubox
55 59 0.008851922 ubox
55 61 0.137165301 ubox
55 65 0.075786370 ubox
55 69 0.009390605 ubox
56 60 0.128451658 ubox
56 64 0.072868066 ubox
56 68 0.009397723 ubox
59 68 0.141635286 ubox
60 67 0.156208802 ubox
64 77 0.006913245 ubox
65 76 0.007467594 ubox
68 77 0.005461095 ubox
69 76 0.005314208 ubox
70 76 0.009315799 ubox
71 75 0.008554703 ubox
73 84 0.005813237 ubox
74 83 0.006137921 ubox
75 82 0.006583045 ubox
75 114 0.006565773 ubox
76 81 0.006597920 ubox
76 113 0.008610863 ubox
77 112 0.008769724 ubox
78 111 0.008794950 ubox
79 110 0.008787618 ubox
80 109 0.008820073 ubox
81 108 0.008821175 ubox
82 107 0.008824340 ubox
83 106 0.008832643 ubox
84 105 0.008831023 ubox
85 104 0.008432348 ubox
92 112 0.011864669 ubox
93 110 0.003327840 ubox
93 111 0.012679186 ubox
94 110 0.012589247 ubox
97 108 0.013795855 ubox
98 107 0.013974795 ubox
99 106 0.014319313 ubox
99 113 0.005258517 ubox
100 112 0.005414631 ubox
101 111 0.005003201 ubox
103 110 0.011250435 ubox
103 111 0.006326125 ubox
104 109 0.010455714 ubox
104 110 0.005967428 ubox
104 111 0.005016397 ubox
104 112 0.066524422 ubox
105 110 0.006930318 ubox
105 111 0.075256063 ubox
106 110 0.074766170 ubox
107 114 0.020219432 ubox
108 113 0.016365446 ubox
108 114 0.023811538 ubox
109 113 0.022528628 ubox
1 106 0.9500000 lbox
2 105 0.9500000 lbox
3 104 0.9500000 lbox
5 103 0.9500000 lbox
6 102 0.9500000 lbox
9 98 0.9500000 lbox
10 97 0.9500000 lbox
11 96 0.9500000 lbox
12 95 0.9500000 lbox
15 91 0.9500000 lbox
16 90 0.9500000 lbox
17 89 0.9500000 lbox
18 88 0.9500000 lbox
19 87 0.9500000 lbox
20 86 0.9500000 lbox
21 85 0.9500000 lbox
22 84 0.9500000 lbox
23 83 0.9500000 lbox
24 82 0.9500000 lbox
29 77 0.9500000 lbox
30 76 0.9500000 lbox
31 75 0.9500000 lbox
32 74 0.9500000 lbox
33 61 0.9500000 lbox
34 60 0.9500000 lbox
35 59 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
40 54 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
45 49 0.9500000 lbox
showpage
end
%%EOF
