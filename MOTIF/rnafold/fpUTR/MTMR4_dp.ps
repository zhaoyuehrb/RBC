%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MTMR4)
} def

/sequence { (\
GCGCGGCCUCAGCAGCUGCGGGAGACGGAAGUGGCAAGAGCGCGGCCUCAGAGGGUCGGGCGGACGCCGCCUGGUGAGAAGCAGGCAGCCAGUACCCUUGCCACGGUAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007468671 ubox
1 13 0.003836266 ubox
1 16 0.012427149 ubox
1 19 0.051472329 ubox
1 107 0.029131282 ubox
2 6 0.007453118 ubox
2 12 0.003838241 ubox
2 15 0.012461855 ubox
2 18 0.051567892 ubox
2 20 0.983049984 ubox
2 27 0.036233767 ubox
2 105 0.009366114 ubox
2 106 0.029527745 ubox
3 13 0.013000363 ubox
3 16 0.052089114 ubox
3 17 0.011858726 ubox
3 19 0.995873730 ubox
3 26 0.036238254 ubox
3 107 0.004446009 ubox
4 12 0.013038482 ubox
4 15 0.053004827 ubox
4 18 0.995959763 ubox
4 27 0.052124269 ubox
4 105 0.003424716 ubox
4 106 0.004559530 ubox
5 17 0.995233171 ubox
5 26 0.052693910 ubox
6 13 0.054456203 ubox
6 16 0.995893062 ubox
6 107 0.008351477 ubox
7 12 0.054838920 ubox
7 15 0.978795543 ubox
7 21 0.021757878 ubox
7 22 0.034764391 ubox
7 28 0.003175260 ubox
7 106 0.008510195 ubox
8 15 0.177329504 ubox
8 20 0.021824756 ubox
8 21 0.034752467 ubox
8 22 0.017347193 ubox
8 24 0.052674726 ubox
8 105 0.008103472 ubox
9 14 0.229175487 ubox
9 20 0.032142383 ubox
9 21 0.017417973 ubox
9 22 0.005945702 ubox
9 23 0.052980230 ubox
10 18 0.034988922 ubox
10 20 0.019812822 ubox
10 21 0.007700832 ubox
10 22 0.052771650 ubox
11 17 0.034960723 ubox
12 16 0.034198570 ubox
12 19 0.060286879 ubox
13 18 0.060243767 ubox
16 109 0.003537914 ubox
17 108 0.003825744 ubox
18 107 0.003842485 ubox
19 27 0.021533212 ubox
19 106 0.003734263 ubox
20 26 0.047315175 ubox
20 97 0.004121941 ubox
21 96 0.004329638 ubox
21 102 0.007338887 ubox
22 95 0.004327092 ubox
22 101 0.007324637 ubox
24 99 0.005564512 ubox
25 32 0.023713220 ubox
25 93 0.004750505 ubox
25 98 0.006471837 ubox
25 107 0.145683145 ubox
26 31 0.026169295 ubox
26 92 0.004769798 ubox
26 105 0.079863569 ubox
26 106 0.147176032 ubox
27 90 0.004877248 ubox
27 96 0.007246340 ubox
27 97 0.003236950 ubox
27 104 0.050340304 ubox
28 89 0.004877952 ubox
28 95 0.007249450 ubox
28 96 0.003226211 ubox
31 104 0.995705084 ubox
32 91 0.007889242 ubox
32 103 0.998860157 ubox
33 68 0.006771747 ubox
33 90 0.007953845 ubox
33 102 0.999930320 ubox
34 67 0.006779031 ubox
34 89 0.007952072 ubox
34 101 0.999940096 ubox
35 66 0.006769599 ubox
35 88 0.007942813 ubox
35 100 0.999932913 ubox
36 99 0.999236859 ubox
37 98 0.998406601 ubox
37 99 0.003699514 ubox
38 97 0.995415969 ubox
38 98 0.004322585 ubox
40 61 0.997901383 ubox
40 89 0.005734696 ubox
40 93 0.022320110 ubox
41 60 0.999029672 ubox
41 62 0.006785455 ubox
41 88 0.005736822 ubox
41 92 0.022392494 ubox
42 61 0.007430897 ubox
42 89 0.013552379 ubox
42 93 0.005762447 ubox
43 58 0.999574124 ubox
43 60 0.006805161 ubox
43 88 0.013488327 ubox
43 92 0.005762824 ubox
44 57 0.999756634 ubox
44 90 0.006439321 ubox
45 56 0.999490399 ubox
45 86 0.013064254 ubox
45 89 0.006430750 ubox
46 54 0.032975613 ubox
46 55 0.999285771 ubox
46 85 0.013119693 ubox
46 88 0.006339543 ubox
47 53 0.045344593 ubox
47 54 0.998456001 ubox
47 55 0.010406684 ubox
47 78 0.004660235 ubox
47 84 0.013103520 ubox
48 52 0.049550786 ubox
48 53 0.917808876 ubox
48 54 0.014467987 ubox
48 77 0.004873019 ubox
48 83 0.012511969 ubox
49 53 0.112237272 ubox
49 54 0.003480157 ubox
49 76 0.004994567 ubox
50 75 0.004954349 ubox
53 68 0.003834581 ubox
54 67 0.003836220 ubox
55 65 0.003908492 ubox
55 75 0.008182574 ubox
56 64 0.003914277 ubox
56 74 0.012596107 ubox
57 63 0.003914545 ubox
57 73 0.013586236 ubox
58 72 0.014339684 ubox
59 68 0.033628886 ubox
59 71 0.017597129 ubox
59 90 0.003771900 ubox
59 96 0.006735583 ubox
60 67 0.033673010 ubox
60 70 0.017719879 ubox
60 89 0.003773863 ubox
60 93 0.003454613 ubox
60 95 0.006731556 ubox
61 66 0.033641076 ubox
61 69 0.017744856 ubox
61 88 0.003767053 ubox
61 92 0.004558955 ubox
62 68 0.056220879 ubox
62 90 0.073657951 ubox
62 96 0.932551804 ubox
62 97 0.027370061 ubox
63 67 0.055364573 ubox
63 89 0.066400857 ubox
63 95 0.933439968 ubox
63 96 0.030588022 ubox
64 93 0.921173605 ubox
65 92 0.915671343 ubox
66 86 0.035347267 ubox
66 89 0.984545012 ubox
66 93 0.009249028 ubox
67 85 0.035294334 ubox
67 88 0.988599191 ubox
67 92 0.009339495 ubox
68 84 0.035196105 ubox
69 82 0.028954871 ubox
69 86 0.998291105 ubox
70 81 0.027980298 ubox
70 85 0.999189913 ubox
71 78 0.023807410 ubox
71 81 0.019572178 ubox
71 84 0.999187020 ubox
71 92 0.004271105 ubox
72 77 0.023844214 ubox
72 80 0.020919181 ubox
72 83 0.998485820 ubox
72 91 0.005985933 ubox
73 82 0.993281325 ubox
73 90 0.006293741 ubox
73 96 0.010384823 ubox
74 82 0.107069874 ubox
74 89 0.006292680 ubox
74 95 0.010423816 ubox
75 81 0.147284099 ubox
75 83 0.003839207 ubox
75 88 0.005907120 ubox
75 94 0.010408802 ubox
76 82 0.005375488 ubox
76 93 0.010205101 ubox
81 89 0.010547526 ubox
82 88 0.010554676 ubox
91 98 0.004144410 ubox
92 97 0.005286210 ubox
94 107 0.003263015 ubox
95 106 0.003283265 ubox
96 105 0.003279668 ubox
98 109 0.004176686 ubox
99 108 0.004969817 ubox
100 107 0.005119804 ubox
101 106 0.005126492 ubox
2 20 0.9500000 lbox
3 19 0.9500000 lbox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
31 104 0.9500000 lbox
32 103 0.9500000 lbox
33 102 0.9500000 lbox
34 101 0.9500000 lbox
35 100 0.9500000 lbox
36 99 0.9500000 lbox
37 98 0.9500000 lbox
38 97 0.9500000 lbox
40 61 0.9500000 lbox
41 60 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
62 96 0.9500000 lbox
63 95 0.9500000 lbox
64 93 0.9500000 lbox
65 92 0.9500000 lbox
66 89 0.9500000 lbox
67 88 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
72 83 0.9500000 lbox
73 82 0.9500000 lbox
showpage
end
%%EOF
