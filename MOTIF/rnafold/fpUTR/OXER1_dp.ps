%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OXER1)
} def

/sequence { (\
GGCUGCAGGGUUCCCCUUGGCCUGCAAACAGGAACACAGGGUGUUUCUCAGUGGCUGCGAGAAUGCUGAUGAAAACCCCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.011254085 ubox
1 13 0.004239698 ubox
1 14 0.005441096 ubox
1 15 0.004886106 ubox
1 16 0.003754040 ubox
1 22 0.774828883 ubox
1 23 0.009064747 ubox
1 56 0.046198196 ubox
1 67 0.005204755 ubox
1 77 0.023847145 ubox
1 78 0.016891671 ubox
1 79 0.048255331 ubox
2 11 0.017031953 ubox
2 13 0.005322047 ubox
2 14 0.004844351 ubox
2 15 0.003680575 ubox
2 21 0.784964467 ubox
2 22 0.007439674 ubox
2 25 0.056358242 ubox
2 52 0.010949505 ubox
2 55 0.048941255 ubox
2 66 0.005514797 ubox
2 76 0.023841307 ubox
2 77 0.016799712 ubox
2 78 0.038012005 ubox
3 9 0.004929336 ubox
3 10 0.018250406 ubox
3 20 0.790956095 ubox
3 24 0.056404481 ubox
3 31 0.034153845 ubox
3 32 0.020379941 ubox
3 39 0.020559217 ubox
3 51 0.011568007 ubox
3 54 0.048954685 ubox
3 65 0.005508892 ubox
3 81 0.432654179 ubox
3 82 0.042133023 ubox
4 8 0.004466494 ubox
4 9 0.017950437 ubox
4 19 0.768956972 ubox
4 26 0.293548037 ubox
4 30 0.026510430 ubox
4 31 0.014426320 ubox
4 36 0.018160766 ubox
4 38 0.031945260 ubox
4 50 0.011578479 ubox
4 53 0.048558418 ubox
4 71 0.004732955 ubox
4 80 0.433718036 ubox
4 81 0.041556895 ubox
5 11 0.005841861 ubox
5 18 0.688604270 ubox
5 21 0.051005494 ubox
5 25 0.318433753 ubox
5 29 0.015377516 ubox
5 35 0.020414547 ubox
5 37 0.033331474 ubox
5 49 0.011576027 ubox
5 52 0.048322981 ubox
5 58 0.003324216 ubox
5 70 0.006679735 ubox
5 79 0.427437440 ubox
6 10 0.005864506 ubox
6 19 0.380181928 ubox
6 20 0.049073390 ubox
6 24 0.318675615 ubox
6 51 0.048355998 ubox
6 57 0.003319603 ubox
6 68 0.035003178 ubox
7 17 0.779190094 ubox
7 18 0.380088888 ubox
7 23 0.316302035 ubox
7 48 0.020498521 ubox
7 67 0.035086097 ubox
8 14 0.008557019 ubox
8 15 0.043375177 ubox
8 16 0.794352522 ubox
8 17 0.376111588 ubox
8 18 0.004350750 ubox
8 22 0.309430304 ubox
8 23 0.038705104 ubox
8 47 0.021669577 ubox
8 48 0.008683925 ubox
8 49 0.043445438 ubox
8 66 0.035102071 ubox
8 77 0.012591819 ubox
8 78 0.340088887 ubox
8 79 0.032385028 ubox
9 13 0.008478131 ubox
9 14 0.043860576 ubox
9 15 0.794375820 ubox
9 16 0.376709855 ubox
9 17 0.005463296 ubox
9 21 0.302073896 ubox
9 22 0.076550171 ubox
9 46 0.021371759 ubox
9 47 0.010648983 ubox
9 48 0.043338293 ubox
9 76 0.012478698 ubox
9 77 0.341854080 ubox
9 78 0.032238564 ubox
10 14 0.781595764 ubox
10 15 0.373968713 ubox
10 16 0.010869158 ubox
10 17 0.006264812 ubox
10 21 0.100826647 ubox
10 35 0.032639629 ubox
10 45 0.020196043 ubox
10 46 0.010307974 ubox
10 47 0.043326142 ubox
10 64 0.034968356 ubox
10 76 0.341775894 ubox
10 77 0.031589771 ubox
11 20 0.116974470 ubox
11 34 0.032704329 ubox
11 43 0.012312192 ubox
11 63 0.035081292 ubox
11 73 0.016581787 ubox
11 74 0.010585211 ubox
11 75 0.333535210 ubox
12 19 0.096212119 ubox
12 20 0.036802837 ubox
12 33 0.032837026 ubox
12 41 0.004812107 ubox
12 62 0.035050335 ubox
12 69 0.007888992 ubox
12 72 0.034982515 ubox
12 73 0.011971821 ubox
12 74 0.263431157 ubox
13 19 0.045414553 ubox
13 20 0.175646285 ubox
13 32 0.032824408 ubox
13 40 0.008887967 ubox
13 41 0.116205985 ubox
13 61 0.034644388 ubox
13 68 0.008614653 ubox
13 71 0.038238801 ubox
14 19 0.175124005 ubox
14 20 0.078926983 ubox
14 31 0.032708847 ubox
14 39 0.008869992 ubox
14 40 0.116865570 ubox
14 41 0.310849876 ubox
15 19 0.078640578 ubox
15 32 0.003669281 ubox
15 39 0.116267727 ubox
15 40 0.313077726 ubox
15 41 0.041172050 ubox
15 82 0.008757987 ubox
16 31 0.003711751 ubox
16 32 0.005039635 ubox
16 39 0.313294260 ubox
16 40 0.041469130 ubox
16 61 0.008543361 ubox
16 81 0.008957786 ubox
16 82 0.008652957 ubox
17 27 0.026761505 ubox
17 28 0.013204618 ubox
17 31 0.005160970 ubox
17 34 0.003407794 ubox
17 38 0.308132829 ubox
17 39 0.041327297 ubox
17 60 0.010362416 ubox
17 69 0.070727597 ubox
17 80 0.007966641 ubox
17 81 0.009801982 ubox
18 26 0.029731350 ubox
18 27 0.012697228 ubox
18 30 0.008781076 ubox
18 33 0.005381158 ubox
18 36 0.331045910 ubox
18 38 0.045548362 ubox
18 57 0.022560228 ubox
18 59 0.010039270 ubox
18 60 0.008664080 ubox
18 68 0.073212316 ubox
18 80 0.012663796 ubox
19 25 0.030249039 ubox
19 29 0.009123264 ubox
19 35 0.339371605 ubox
19 37 0.047757645 ubox
19 56 0.035024795 ubox
19 58 0.008015897 ubox
19 67 0.076362954 ubox
19 79 0.013356039 ubox
20 55 0.036740027 ubox
20 58 0.010267440 ubox
20 66 0.076881333 ubox
20 78 0.007069343 ubox
21 32 0.517737742 ubox
21 54 0.036641034 ubox
21 57 0.010588539 ubox
21 65 0.076746986 ubox
21 82 0.016744119 ubox
22 31 0.531810437 ubox
22 32 0.020138225 ubox
22 39 0.004164671 ubox
22 51 0.004239327 ubox
22 53 0.036269495 ubox
22 54 0.005085997 ubox
22 61 0.069819844 ubox
22 81 0.024880712 ubox
23 30 0.554682100 ubox
23 31 0.025865728 ubox
23 36 0.059562282 ubox
23 38 0.064730395 ubox
23 50 0.007980963 ubox
23 53 0.006415611 ubox
23 59 0.107832786 ubox
23 60 0.061139515 ubox
23 80 0.035128533 ubox
23 81 0.003440966 ubox
24 29 0.555197817 ubox
24 35 0.066993352 ubox
24 37 0.069696550 ubox
24 49 0.008445011 ubox
24 52 0.030389178 ubox
24 55 0.040587276 ubox
24 58 0.143450336 ubox
24 66 0.004856192 ubox
24 79 0.036364224 ubox
25 51 0.031405031 ubox
25 53 0.018401065 ubox
25 54 0.039644654 ubox
25 57 0.143519806 ubox
25 65 0.004882360 ubox
25 71 0.004541496 ubox
26 52 0.020788163 ubox
26 56 0.141757872 ubox
26 64 0.004459424 ubox
26 70 0.004119285 ubox
28 52 0.065174309 ubox
29 51 0.065441298 ubox
29 53 0.129970435 ubox
29 57 0.003553325 ubox
29 71 0.003279058 ubox
30 48 0.134389498 ubox
30 52 0.093796654 ubox
30 56 0.003607691 ubox
31 47 0.179019693 ubox
31 48 0.027544665 ubox
31 49 0.009736747 ubox
31 55 0.003604236 ubox
31 77 0.017625866 ubox
31 78 0.010599225 ubox
31 79 0.029255435 ubox
32 46 0.179507674 ubox
32 47 0.029208051 ubox
32 48 0.003742656 ubox
32 49 0.007034902 ubox
32 76 0.017655113 ubox
32 77 0.010561736 ubox
32 78 0.021928616 ubox
33 45 0.181237820 ubox
33 46 0.024026570 ubox
33 48 0.006419241 ubox
34 44 0.182776927 ubox
34 45 0.017227377 ubox
35 43 0.183770308 ubox
35 53 0.005731139 ubox
35 71 0.031829229 ubox
36 42 0.183379190 ubox
36 44 0.005366762 ubox
36 52 0.005767504 ubox
36 70 0.031763459 ubox
37 41 0.181578318 ubox
37 43 0.005549194 ubox
37 51 0.005758725 ubox
37 68 0.037240956 ubox
37 71 0.011613060 ubox
38 42 0.004506014 ubox
38 67 0.037265262 ubox
38 70 0.011476640 ubox
39 49 0.005804435 ubox
39 66 0.037236809 ubox
39 67 0.004487964 ubox
39 77 0.008310435 ubox
39 78 0.641525798 ubox
39 79 0.658735609 ubox
40 48 0.005819821 ubox
40 66 0.004467094 ubox
40 67 0.015159612 ubox
40 76 0.007971813 ubox
40 77 0.644892297 ubox
40 78 0.658448465 ubox
40 79 0.037614238 ubox
41 47 0.006128879 ubox
41 64 0.035611523 ubox
41 66 0.023603607 ubox
41 76 0.646100648 ubox
41 77 0.656947741 ubox
41 78 0.037618196 ubox
42 50 0.004631262 ubox
42 63 0.034910600 ubox
42 65 0.025713673 ubox
42 68 0.005513054 ubox
42 71 0.003913605 ubox
42 75 0.639625444 ubox
43 49 0.005174155 ubox
43 55 0.004085192 ubox
43 64 0.027754302 ubox
43 66 0.069144418 ubox
43 67 0.003311054 ubox
43 70 0.006279840 ubox
43 76 0.603472514 ubox
44 54 0.004063533 ubox
44 62 0.044001303 ubox
44 63 0.023081559 ubox
44 65 0.066932194 ubox
44 69 0.006203291 ubox
44 72 0.024942421 ubox
44 73 0.215004185 ubox
44 74 0.621957263 ubox
44 75 0.562732357 ubox
45 53 0.003879424 ubox
45 61 0.048421100 ubox
45 62 0.016707873 ubox
45 63 0.080693898 ubox
45 68 0.005000846 ubox
45 71 0.025690166 ubox
45 72 0.247910462 ubox
45 73 0.756765921 ubox
45 74 0.515716140 ubox
45 75 0.024019966 ubox
46 60 0.050504266 ubox
46 61 0.005620491 ubox
46 62 0.093854940 ubox
46 71 0.237791825 ubox
46 72 0.803943067 ubox
46 73 0.457930813 ubox
46 74 0.031965770 ubox
47 59 0.050903428 ubox
47 61 0.095608217 ubox
47 71 0.833914117 ubox
48 60 0.095534390 ubox
48 69 0.872404233 ubox
48 72 0.410323917 ubox
49 57 0.052101103 ubox
49 59 0.094756540 ubox
49 68 0.885166911 ubox
49 71 0.418351684 ubox
50 56 0.053292406 ubox
50 67 0.884261268 ubox
50 70 0.416675188 ubox
51 55 0.052337833 ubox
51 58 0.082446275 ubox
51 64 0.004786906 ubox
51 66 0.883396529 ubox
51 70 0.015855596 ubox
52 57 0.079120175 ubox
52 59 0.030491739 ubox
52 63 0.012551516 ubox
52 65 0.873590799 ubox
52 68 0.209859140 ubox
52 69 0.022757067 ubox
52 80 0.004310860 ubox
53 58 0.080729663 ubox
53 64 0.771109690 ubox
53 67 0.418186113 ubox
53 79 0.005214632 ubox
54 66 0.423945046 ubox
54 78 0.005196782 ubox
55 61 0.577997348 ubox
55 65 0.424189207 ubox
55 81 0.003692383 ubox
56 60 0.522481501 ubox
56 65 0.007734081 ubox
56 80 0.003769216 ubox
57 64 0.033895725 ubox
57 66 0.062959317 ubox
57 79 0.003672894 ubox
58 65 0.064311913 ubox
58 68 0.004715965 ubox
59 64 0.036911044 ubox
59 67 0.003302973 ubox
60 67 0.021369830 ubox
61 66 0.021912564 ubox
63 70 0.016765414 ubox
64 69 0.017622200 ubox
64 80 0.003256572 ubox
65 79 0.003587522 ubox
66 81 0.106132599 ubox
66 82 0.005162653 ubox
67 80 0.106715136 ubox
67 81 0.004865596 ubox
68 79 0.106667405 ubox
70 80 0.018133084 ubox
71 79 0.020147017 ubox
76 82 0.033461305 ubox
77 81 0.033614686 ubox
1 22 0.9500000 lbox
2 21 0.9500000 lbox
3 20 0.9500000 lbox
4 19 0.9500000 lbox
5 18 0.9500000 lbox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
10 14 0.9500000 lbox
39 79 0.9500000 lbox
40 78 0.9500000 lbox
41 77 0.9500000 lbox
43 76 0.9500000 lbox
44 75 0.9500000 lbox
45 74 0.9500000 lbox
46 73 0.9500000 lbox
48 72 0.9500000 lbox
49 71 0.9500000 lbox
50 70 0.9500000 lbox
53 67 0.9500000 lbox
54 66 0.9500000 lbox
55 65 0.9500000 lbox
showpage
end
%%EOF
