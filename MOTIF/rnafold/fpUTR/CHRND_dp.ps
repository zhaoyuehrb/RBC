%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CHRND)
} def

/sequence { (\
AUUCCACAGCCCUGUAGACAGGAGGGGCAGAUGCACGUCCCAGUCAGAGGGAUGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.016754476 ubox
1 53 0.066983574 ubox
2 24 0.003506734 ubox
2 27 0.012531873 ubox
2 30 0.005716546 ubox
2 31 0.017184235 ubox
2 52 0.071530635 ubox
2 55 0.003492630 ubox
2 56 0.024091475 ubox
3 8 0.006262315 ubox
3 23 0.004763242 ubox
3 26 0.026352933 ubox
3 27 0.026387583 ubox
3 29 0.008142983 ubox
3 30 0.015900315 ubox
3 31 0.041800018 ubox
3 51 0.072490963 ubox
3 52 0.020069455 ubox
3 55 0.015145815 ubox
3 56 0.437922869 ubox
4 22 0.004859172 ubox
4 25 0.030597590 ubox
4 26 0.052454730 ubox
4 27 0.016409754 ubox
4 30 0.044763103 ubox
4 50 0.073003144 ubox
4 51 0.021521054 ubox
4 54 0.014782049 ubox
4 55 0.710040984 ubox
4 56 0.555781508 ubox
5 21 0.004846954 ubox
5 24 0.030581819 ubox
5 25 0.052523662 ubox
5 26 0.016960018 ubox
5 33 0.067443886 ubox
5 49 0.072937143 ubox
5 50 0.021470758 ubox
5 54 0.710497877 ubox
5 55 0.567840916 ubox
6 15 0.005557716 ubox
6 32 0.065269088 ubox
6 44 0.015043598 ubox
6 53 0.679042159 ubox
7 14 0.005704975 ubox
7 33 0.067449816 ubox
7 43 0.015179168 ubox
7 54 0.571752351 ubox
8 13 0.005140678 ubox
8 32 0.066808771 ubox
8 53 0.537627203 ubox
9 28 0.352787575 ubox
9 34 0.009422794 ubox
9 44 0.022934242 ubox
10 22 0.013670191 ubox
10 25 0.006995766 ubox
10 26 0.081349858 ubox
10 27 0.352062453 ubox
10 33 0.009361940 ubox
10 43 0.023273106 ubox
10 50 0.034322624 ubox
10 51 0.921083434 ubox
10 56 0.003407506 ubox
11 21 0.009965357 ubox
11 22 0.112924940 ubox
11 24 0.005560491 ubox
11 25 0.086113562 ubox
11 26 0.350558553 ubox
11 49 0.033842847 ubox
11 50 0.923293106 ubox
11 51 0.053240651 ubox
11 55 0.003326282 ubox
12 21 0.115194144 ubox
12 22 0.004695313 ubox
12 24 0.090430922 ubox
12 25 0.349003443 ubox
12 30 0.007959408 ubox
12 47 0.032950911 ubox
12 49 0.923219573 ubox
12 50 0.053648238 ubox
13 20 0.119680522 ubox
13 21 0.006522951 ubox
13 23 0.093888221 ubox
13 24 0.341811076 ubox
13 29 0.007984486 ubox
13 46 0.033650043 ubox
13 48 0.910573479 ubox
13 49 0.053631466 ubox
14 19 0.123435565 ubox
14 28 0.007988325 ubox
14 45 0.027309225 ubox
15 27 0.007878254 ubox
17 45 0.915174216 ubox
18 44 0.919125644 ubox
19 43 0.916106880 ubox
21 39 0.006147092 ubox
21 40 0.374061782 ubox
21 41 0.137574901 ubox
21 45 0.035942083 ubox
22 38 0.005937467 ubox
22 39 0.378307932 ubox
22 40 0.118748363 ubox
22 44 0.035843943 ubox
22 45 0.050871265 ubox
23 38 0.380526001 ubox
23 44 0.048567561 ubox
24 39 0.076855265 ubox
24 40 0.014880411 ubox
24 41 0.837132571 ubox
25 38 0.069021263 ubox
25 39 0.016009592 ubox
25 40 0.839988306 ubox
25 41 0.016348774 ubox
26 38 0.014658628 ubox
26 39 0.841181129 ubox
26 40 0.016343694 ubox
27 34 0.404303012 ubox
27 38 0.840515081 ubox
27 39 0.016259725 ubox
28 33 0.403924762 ubox
28 37 0.840825062 ubox
30 39 0.005811302 ubox
31 38 0.006196354 ubox
32 37 0.006032378 ubox
34 54 0.010790381 ubox
35 53 0.008121038 ubox
36 54 0.363504362 ubox
37 53 0.367811626 ubox
38 52 0.368983664 ubox
39 51 0.369213380 ubox
39 56 0.015191905 ubox
40 50 0.369210191 ubox
40 55 0.015686434 ubox
41 49 0.369009126 ubox
41 54 0.015684082 ubox
42 53 0.014484421 ubox
43 53 0.016532012 ubox
44 51 0.010276267 ubox
44 52 0.020959926 ubox
44 55 0.007754464 ubox
45 49 0.004063631 ubox
45 50 0.013278391 ubox
45 51 0.021491928 ubox
45 54 0.010360184 ubox
46 53 0.010184686 ubox
4 55 0.9500000 lbox
5 54 0.9500000 lbox
6 53 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
17 45 0.9500000 lbox
18 44 0.9500000 lbox
19 43 0.9500000 lbox
24 41 0.9500000 lbox
25 40 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
showpage
end
%%EOF
