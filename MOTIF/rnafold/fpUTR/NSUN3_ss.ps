%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGAAGUAACUGCGCACGAAAUCUCCCGCGGGAGCUAAGCCUCUUCGACAAGAAUUCUAUAGCGCGAGCAAAUCAGUAUCUCGCGAGAAAUUGAAGAGGAAACGUGAGAAUGAAAGUGGAUGCCCGCGAAUCCCGGAAGUCAGACUGUUUUUUUCAGUUCCCUGGAGGCUUUUUGAUACUGAUUCGCGUACACCUGUUGUUUGAAAGCUCUCAGCGGGACA\
) } def
/len { sequence length } bind def

/coor [
[38.55440140 370.51770020]
[22.72459221 373.78256226]
[18.35136604 388.13092041]
[27.52750397 400.50445557]
[27.65670013 415.73065186]
[18.89897919 427.96856689]
[4.78335428 432.64691162]
[0.41013014 446.99526978]
[4.63798666 462.84005737]
[-7.15962076 474.23077393]
[-22.84632492 469.44961548]
[-26.28499031 453.41503906]
[-13.93821144 442.62203979]
[-9.56498718 428.27371216]
[-18.67151642 416.51745605]
[-19.11454773 401.47525024]
[-10.51468849 388.90960693]
[4.00302505 383.75769043]
[8.37624931 369.40936279]
[-1.58127213 360.06927490]
[-6.56878138 347.28939819]
[-5.56046009 333.54159546]
[1.30385828 321.51126099]
[12.73488426 313.57302856]
[26.53568077 311.32186890]
[31.11060143 297.03656006]
[35.68552399 282.75125122]
[40.26044464 268.46594238]
[44.83536530 254.18063354]
[49.41028595 239.89532471]
[53.88447189 225.57814026]
[58.25769424 211.22979736]
[62.63092041 196.88145447]
[67.00414276 182.53311157]
[71.37736511 168.18476868]
[75.75059509 153.83642578]
[80.12381744 139.48808289]
[68.17259979 130.68205261]
[59.81028748 118.41626740]
[55.97982407 104.07383728]
[57.11314011 89.27203369]
[43.38997650 83.21606445]
[29.66681480 77.16008759]
[15.94365215 71.10411835]
[2.22048879 65.04814911]
[-11.50267410 58.99217224]
[-25.22583771 52.93620300]
[-38.94900131 46.88022995]
[-52.67216110 40.82425690]
[-58.87235260 45.02458191]
[-66.07674408 46.80437469]
[-73.38441467 45.98951340]
[-79.89815521 42.72736359]
[-84.83463287 37.46282959]
[-87.61849976 30.87822533]
[-87.94928741 23.80505562]
[-101.21219635 16.79825211]
[-114.47509766 9.79144669]
[-127.73800659 2.78464103]
[-132.04890442 3.09911561]
[-135.85539246 2.12795258]
[-138.81626892 0.18621477]
[-140.72715759 -2.33279395]
[-141.53411865 -5.00871277]
[-154.38133240 -12.75138378]
[-167.22856140 -20.49405479]
[-180.07577515 -28.23672676]
[-192.92300415 -35.97939682]
[-205.77021790 -43.72206879]
[-218.82446289 -35.73174667]
[-234.09747314 -34.73484802]
[-248.07962036 -40.96045685]
[-257.55789185 -52.97797012]
[-260.35427856 -68.02585602]
[-255.82618713 -82.64620972]
[-245.01412964 -93.47940063]
[-230.40263367 -98.03601837]
[-215.34931946 -95.26899719]
[-203.31333923 -85.81418610]
[-197.06045532 -71.84421539]
[-198.02754211 -56.56929016]
[-185.18032837 -48.82661819]
[-172.33309937 -41.08394623]
[-159.48588562 -33.34127426]
[-146.63867188 -25.59860229]
[-133.79144287 -17.85593224]
[-120.73120117 -10.47826481]
[-107.46829224 -3.47146010]
[-94.20539093 3.53534508]
[-80.94248199 10.54215050]
[-58.72441101 7.31476307]
[-46.61619186 27.10109329]
[-32.89302826 33.15706635]
[-19.16986465 39.21303940]
[-5.44670200 45.26901245]
[8.27646065 51.32498169]
[21.99962425 57.38095474]
[35.72278595 63.43692780]
[49.44594955 69.49289703]
[63.16911316 75.54887390]
[69.70641327 67.80263519]
[77.83623505 61.74899673]
[87.13119507 57.70619583]
[97.10266113 55.88676453]
[107.22644043 56.38634872]
[116.97032928 59.17868423]
[125.82209778 64.11698151]
[133.31640625 70.94162750]
[139.05928040 79.29386139]
[153.31201172 74.61843109]
[167.56474304 69.94300079]
[181.81747437 65.26757050]
[196.07020569 60.59213638]
[210.32293701 55.91670609]
[213.51911926 44.47673416]
[221.75346375 36.08314896]
[232.90063477 32.73739243]
[244.16188049 35.15885162]
[252.76759338 42.63380432]
[267.14639282 38.36175537]
[274.47363281 32.92246628]
[281.75790405 34.13233948]
[296.19543457 30.06327629]
[303.95571899 16.55714226]
[318.65542603 12.63620186]
[331.48364258 20.11768532]
[345.92117310 16.04862213]
[360.35873413 11.97955704]
[374.79626465 7.91049290]
[389.23382568 3.84142852]
[403.67135620 -0.22763577]
[418.10888672 -4.29670000]
[432.54644775 -8.36576462]
[437.41604614 -12.81683445]
[442.96890259 -13.97358036]
[447.44824219 -12.33994102]
[461.99468994 -16.00065613]
[469.26699829 -26.64624405]
[481.45159912 -29.39922333]
[491.90124512 -23.31653404]
[506.49780273 -26.77196503]
[521.09436035 -30.22739410]
[535.69097900 -33.68282318]
[550.28753662 -37.13825607]
[564.88409424 -40.59368515]
[573.20812988 -53.75987625]
[588.06036377 -57.05624008]
[600.56103516 -49.03943253]
[615.15759277 -52.49486160]
[618.94201660 -56.06464386]
[623.28259277 -57.67113113]
[627.34039307 -57.43046188]
[630.44372559 -55.77405548]
[645.17327881 -58.60968018]
[659.90277100 -61.44530487]
[674.63232422 -64.28092957]
[689.36187744 -67.11655426]
[704.09136963 -69.95217896]
[716.12634277 -81.09184265]
[731.70886230 -75.98130798]
[734.80895996 -59.87785339]
[722.23754883 -49.34733200]
[706.92700195 -55.22264099]
[692.19750977 -52.38701630]
[677.46795654 -49.55139160]
[662.73840332 -46.71576691]
[648.00885010 -43.88014221]
[633.27935791 -41.04451752]
[618.61303711 -37.89828873]
[604.01641846 -34.44285965]
[596.43670654 -21.67244530]
[581.68292236 -17.96021461]
[568.33953857 -25.99711037]
[553.74298096 -22.54167938]
[539.14642334 -19.08625031]
[524.54980469 -15.63081932]
[509.95324707 -12.17538929]
[495.35665894 -8.71995926]
[483.25061035 3.98991203]
[465.65539551 -1.45420742]
[451.10894775 2.20650744]
[436.61550903 6.07178068]
[422.17797852 10.14084530]
[407.74041748 14.20990944]
[393.30288696 18.27897453]
[378.86532593 22.34803772]
[364.42779541 26.41710281]
[349.99023438 30.48616791]
[335.55270386 34.55523300]
[328.51931763 47.63449097]
[313.93554688 51.96677017]
[300.26449585 44.50082397]
[285.82696533 48.56988525]
[271.41842651 52.74054718]
[257.03964233 57.01259613]
[249.29446411 73.60652161]
[231.57278442 79.35968018]
[214.99836731 70.16943359]
[200.74563599 74.84486389]
[186.49290466 79.52030182]
[172.24017334 84.19573212]
[157.98744202 88.87116241]
[143.73471069 93.54659271]
[142.04447937 113.66138458]
[131.58851624 130.92794800]
[114.54673767 141.74642944]
[94.47216034 143.86131287]
[90.09893036 158.20965576]
[85.72570801 172.55799866]
[81.35248566 186.90634155]
[76.97926331 201.25468445]
[72.60603333 215.60302734]
[68.23281097 229.95137024]
[68.72473907 239.06356812]
[63.69559860 244.47024536]
[59.12067413 258.75555420]
[54.54575348 273.04086304]
[49.97083282 287.32617188]
[45.39591217 301.61148071]
[40.82099152 315.89678955]
[52.06396866 328.02627563]
[55.63290405 344.07910156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[3 18]
[7 14]
[8 13]
[25 220]
[26 219]
[27 218]
[28 217]
[29 216]
[30 215]
[31 213]
[32 212]
[33 211]
[34 210]
[35 209]
[36 208]
[37 207]
[41 100]
[42 99]
[43 98]
[44 97]
[45 96]
[46 95]
[47 94]
[48 93]
[49 92]
[56 90]
[57 89]
[58 88]
[59 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[69 81]
[109 203]
[110 202]
[111 201]
[112 200]
[113 199]
[114 198]
[119 195]
[120 194]
[122 193]
[123 192]
[126 189]
[127 188]
[128 187]
[129 186]
[130 185]
[131 184]
[132 183]
[133 182]
[136 181]
[137 180]
[140 178]
[141 177]
[142 176]
[143 175]
[144 174]
[145 173]
[148 170]
[149 169]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
