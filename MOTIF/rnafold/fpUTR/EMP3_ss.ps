%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGAGCAAGAGAGAAGGAGGCCCAGACAGUGAGGGCAGGAGGGAGAGAAGAGACGCAGAAGGAGAGCGAGCGAGAGAGAAAGGGUUCUGGAUUGGAGGGGAGAGCAAGGGAGGGAGGAAGGCGGUGAGAGAGGCGGGGGCCUCGGGAGGGUGAAAGGAGGGAGGAGAAGGGCGGGGCACGGAGGCCCGAGCGAGGGACAAGACUCCGACUCCAGCUCUGACUUUUUUCGCGGCUCUCGGCUUCCACUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[87.38722229 253.49182129]
[89.81514740 234.26280212]
[89.99993896 219.26394653]
[79.44699097 208.81546021]
[79.42073822 193.60185242]
[90.45161438 182.60379028]
[90.63641357 167.60491943]
[90.82120514 152.60606384]
[83.81111145 149.93988037]
[78.47874451 163.96006775]
[73.14638519 177.98027039]
[67.81401825 192.00047302]
[62.48165894 206.02066040]
[57.14906311 220.04077148]
[43.12904358 214.70794678]
[48.46146393 200.68830872]
[53.79382324 186.66810608]
[59.12618637 172.64790344]
[64.45854950 158.62771606]
[69.79090881 144.60751343]
[62.78081512 141.94132996]
[52.95155716 153.27207947]
[43.12229919 164.60281372]
[33.29304123 175.93356323]
[37.72972488 190.70919800]
[33.45182800 205.53158569]
[21.82441521 215.67094421]
[6.55775023 217.89186096]
[-7.47663069 211.48564148]
[-15.80040646 198.49647522]
[-15.75749111 183.06918335]
[-7.36157799 170.12652588]
[6.70822668 163.79847717]
[21.96229935 166.10429382]
[31.79155731 154.77355957]
[41.62081528 143.44282532]
[51.45007324 132.11207581]
[49.44207382 124.88587952]
[35.38384247 130.11714172]
[21.32561111 135.34840393]
[7.26738024 140.57966614]
[-6.79085159 145.81092834]
[-20.84908295 151.04219055]
[-34.90731430 156.27345276]
[-48.96554565 161.50473022]
[-63.02377701 166.73599243]
[-77.08200836 171.96725464]
[-89.38148499 180.55346680]
[-104.37603760 180.14921570]
[-116.19501495 170.91278076]
[-120.21105957 156.46038818]
[-114.85182190 142.45045471]
[-102.21553802 134.36810303]
[-87.24938965 135.37782288]
[-72.50766754 132.60623169]
[-57.76594925 129.83462524]
[-43.02423096 127.06304169]
[-28.28251266 124.29144287]
[-13.54079437 121.51985168]
[1.20092416 118.74826050]
[15.94264317 115.97666931]
[30.68436241 113.20507050]
[45.42607880 110.43347931]
[43.41808319 103.20728302]
[29.15223503 98.57202911]
[14.88638783 93.93677521]
[0.62053978 89.30152130]
[-13.64530754 84.66625977]
[-22.95814514 96.62648010]
[-35.80163574 104.67760468]
[-50.62486267 107.84741974]
[-65.63785553 105.75315094]
[-79.02770996 98.64769745]
[-89.17755127 87.38907623]
[-94.86172485 73.33682251]
[-95.39384460 58.18780518]
[-90.70965576 43.77135086]
[-81.37479401 31.82831383]
[-68.51648712 23.80087280]
[-53.68744659 20.65838242]
[-38.67834091 22.78031158]
[-25.30159950 29.91042900]
[-15.17252541 41.18773651]
[-9.51425552 55.25044632]
[-9.01005268 70.40041351]
[5.25579453 75.03566742]
[19.52164268 79.67092896]
[33.78749084 84.30618286]
[48.05333710 88.94143677]
[61.00922775 70.80622864]
[78.94627380 61.01464462]
[97.51844025 60.17197037]
[112.86219025 66.90832520]
[122.38993835 78.41291046]
[135.38031006 70.91291046]
[148.37069702 63.41291046]
[161.36108398 55.91291046]
[174.35145569 48.41291046]
[187.34184265 40.91291046]
[196.19313049 24.75083733]
[213.73937988 25.46778488]
[226.63638306 17.80831718]
[239.53337097 10.14884949]
[252.43037415 2.48938155]
[265.32736206 -5.17008638]
[278.22436523 -12.82955456]
[279.77658081 -28.15589714]
[289.93704224 -39.49690628]
[304.65316772 -42.64323044]
[318.23754883 -36.59320068]
[331.13455200 -44.25266647]
[344.03155518 -51.91213608]
[356.92855835 -59.57160568]
[369.82553101 -67.23107147]
[382.72253418 -74.89054108]
[395.61953735 -82.55001068]
[408.51654053 -90.20947266]
[412.52569580 -105.26152802]
[425.71420288 -112.84559631]
[440.03933716 -108.93071747]
[452.93630981 -116.59018707]
[465.78588867 -124.32894897]
[478.58755493 -132.14672852]
[463.66305542 -130.64360046]
[450.94128418 -138.59069824]
[445.74609375 -152.66230774]
[450.25158691 -166.96966553]
[462.57226562 -175.52539062]
[477.55218506 -174.74903870]
[488.92242432 -164.96551514]
[491.92459106 -150.26779175]
[495.58331299 -164.81474304]
[499.24200439 -179.36170959]
[502.90072632 -193.90866089]
[506.55941772 -208.45561218]
[501.55358887 -224.07206726]
[512.77380371 -236.03196716]
[528.67761230 -232.03199768]
[532.90460205 -216.18696594]
[521.10638428 -204.79690552]
[517.44769287 -190.24995422]
[513.78894043 -175.70300293]
[510.13024902 -161.15603638]
[506.47155762 -146.60908508]
[517.40838623 -142.35894775]
[523.52593994 -134.30848694]
[537.90167236 -138.59086609]
[552.27740479 -142.87322998]
[566.65307617 -147.15560913]
[568.15142822 -155.87019348]
[572.36309814 -163.59590149]
[578.81219482 -169.51814270]
[586.78863525 -173.02284241]
[595.42633057 -173.76005554]
[603.79724121 -171.67863464]
[611.01092529 -167.02879333]
[616.30950928 -160.33239746]
[630.92156982 -163.72166443]
[645.53369141 -167.11093140]
[660.14575195 -170.50019836]
[660.38153076 -185.56771851]
[664.21447754 -200.13209534]
[671.41748047 -213.34783936]
[681.56811523 -224.44880676]
[694.07305908 -232.79264832]
[708.20300293 -237.89796448]
[723.13519287 -239.47207642]
[738.00115967 -237.42778015]
[751.93737793 -231.88824463]
[764.13531494 -223.17948914]
[773.88842773 -211.81126404]
[780.63311768 -198.44723511]
[795.24523926 -201.83650208]
[808.42187500 -214.71803284]
[824.99774170 -208.91940308]
[839.56695557 -212.48843384]
[854.13616943 -216.05746460]
[868.70538330 -219.62649536]
[876.68542480 -233.26812744]
[891.99523926 -237.19061279]
[905.55175781 -229.06678772]
[909.31213379 -213.71638489]
[901.04547119 -200.24652100]
[885.65612793 -196.64862061]
[872.27441406 -205.05726624]
[857.70520020 -201.48825073]
[843.13598633 -197.91921997]
[828.56677246 -194.35018921]
[822.04174805 -184.18531799]
[809.95465088 -181.08088684]
[798.63446045 -187.22442627]
[784.02239990 -183.83515930]
[783.84942627 -168.86657715]
[780.09661865 -154.36566162]
[772.97796631 -141.17640686]
[762.90338135 -130.06756592]
[750.45526123 -121.68778992]
[736.35479736 -116.52777863]
[721.42016602 -114.89156342]
[706.51898193 -116.87855530]
[692.51800537 -122.37757111]
[680.23272705 -131.07299805]
[670.37969971 -142.46293640]
[663.53503418 -155.88812256]
[648.92291260 -152.49885559]
[634.31085205 -149.10958862]
[619.69879150 -145.72032166]
[610.12377930 -126.73509979]
[589.34240723 -121.03245544]
[570.93548584 -132.77989197]
[556.55975342 -128.49751282]
[542.18402100 -124.21514130]
[527.80828857 -119.93276978]
[510.32449341 -101.69623566]
[486.40533447 -119.34506989]
[473.60366821 -111.52729797]
[469.54458618 -105.37636566]
[460.59579468 -103.69318390]
[447.69879150 -96.03372192]
[444.28164673 -81.58177948]
[431.31137085 -73.63026428]
[416.17599487 -77.31247711]
[403.27899170 -69.65300751]
[390.38201904 -61.99354172]
[377.48501587 -54.33407593]
[364.58801270 -46.67460632]
[351.69100952 -39.01513672]
[338.79400635 -31.35567093]
[325.89703369 -23.69620323]
[324.70916748 -8.87301159]
[314.90460205 2.54339933]
[300.08438110 6.03830290]
[285.88385010 0.06744360]
[272.98684692 7.72691154]
[260.08984375 15.38637924]
[247.19284058 23.04584694]
[234.29585266 30.70531464]
[221.39884949 38.36478424]
[218.11888123 49.98988342]
[207.46093750 56.48163986]
[194.84184265 53.90328979]
[181.85145569 61.40328979]
[168.86108398 68.90328979]
[155.87069702 76.40328979]
[142.88031006 83.90328979]
[129.88993835 91.40328979]
[134.97673035 123.44264984]
[105.82006836 152.79084778]
[105.63527679 167.78971863]
[105.45047760 182.78857422]
[116.20704651 194.05506897]
[115.80597687 209.26342773]
[104.99880219 219.44873047]
[104.81401062 234.44760132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 254]
[3 253]
[6 250]
[7 249]
[8 248]
[21 37]
[22 36]
[23 35]
[24 34]
[64 89]
[65 88]
[66 87]
[67 86]
[68 85]
[94 246]
[95 245]
[96 244]
[97 243]
[98 242]
[99 241]
[101 238]
[102 237]
[103 236]
[104 235]
[105 234]
[106 233]
[110 229]
[111 228]
[112 227]
[113 226]
[114 225]
[115 224]
[116 223]
[117 222]
[120 219]
[121 218]
[122 216]
[123 215]
[131 144]
[132 143]
[133 142]
[134 141]
[135 140]
[146 213]
[147 212]
[148 211]
[149 210]
[157 207]
[158 206]
[159 205]
[160 204]
[172 192]
[173 191]
[175 188]
[176 187]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
