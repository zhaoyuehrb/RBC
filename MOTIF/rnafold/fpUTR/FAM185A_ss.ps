%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAGCGAAAGGGGGUGGACUUAGGCAAGGGGUCCAGGUCAGAGUUUAGAGCUUUCAAAUCCCAACUUGCCCCUGGGGAUUGCGCGGCUGAUGUUUAGAACGCCUAGUCAAGCCAACCGGCUCGCUCUUGUUUCAGCAAACCCUGACUUACGUCUCCUAUUUGACUUGAGGCGGCACAGUGGCCAAGUCGAUUGGCCGUGGCAAGUGACCCUCCCUGUGGCUGAAGUGUUCUGAGGACUGGCGAGAGAGGCGCGC\
C\
) } def
/len { sequence length } bind def

/coor [
[541.74218750 668.92431641]
[554.48016357 656.38708496]
[548.93103027 642.45123291]
[543.38189697 628.51544189]
[537.83276367 614.57958984]
[532.28363037 600.64379883]
[517.82836914 597.15325928]
[508.08508301 585.68450928]
[506.94995117 570.50012207]
[515.06732178 557.40765381]
[509.51821899 543.47180176]
[503.96908569 529.53601074]
[498.41992188 515.60015869]
[492.87078857 501.66433716]
[487.32165527 487.72851562]
[481.94314575 482.69165039]
[481.79101562 473.58828735]
[476.41265869 459.58566284]
[469.99768066 435.51641846]
[480.07830811 419.89633179]
[469.12121582 409.65222168]
[458.16412354 399.40808105]
[447.20700073 389.16397095]
[436.24990845 378.91986084]
[425.29281616 368.67572021]
[414.27331543 358.49877930]
[403.19180298 348.38934326]
[391.92681885 338.48480225]
[380.48211670 328.78848267]
[369.03741455 319.09216309]
[357.59271240 309.39581299]
[346.14801025 299.69949341]
[330.31964111 304.10134888]
[314.83508301 298.13159180]
[305.88015747 283.96231079]
[307.15859985 267.08242798]
[295.59622192 257.52673340]
[284.03387451 247.97102356]
[272.47149658 238.41531372]
[260.90911865 228.85960388]
[249.34674072 219.30389404]
[237.78437805 209.74818420]
[223.04484558 207.60441589]
[217.33636475 192.84895325]
[205.77398682 183.29324341]
[194.21160889 173.73754883]
[182.64924622 164.18183899]
[170.57897949 155.27629089]
[158.03733826 147.04783630]
[145.49569702 138.81939697]
[132.95407104 130.59095764]
[120.41242218 122.36251068]
[115.75347900 128.58122253]
[109.25473785 133.74659729]
[101.17902374 137.33137512]
[91.93565369 138.87982178]
[82.05988312 138.04725647]
[72.18196106 134.63351440]
[62.98759460 128.60772705]
[55.17226028 120.12224579]
[49.39234924 109.51430511]
[34.49338150 107.77628326]
[19.59441185 106.03826141]
[4.69544220 104.30023956]
[-5.01311827 116.28971100]
[-19.66962433 121.10534668]
[-34.59724045 117.21049500]
[-45.03261566 105.84799194]
[-47.64586258 90.64356995]
[-41.60309982 76.44890594]
[-28.83255577 67.79345703]
[-13.40926075 67.43915558]
[-0.25473416 75.49905396]
[6.43346310 89.40126801]
[21.33243179 91.13928986]
[36.23140335 92.87731171]
[51.13037109 94.61533356]
[57.18671799 80.89233398]
[45.86139679 71.05683136]
[34.53607941 61.22133255]
[23.21075821 51.38582993]
[11.88543701 41.55032730]
[-3.60733747 38.34337997]
[-8.14335060 24.15627670]
[-19.46867180 14.32077408]
[-30.79399109 4.48527145]
[-48.95910645 1.38617849]
[-54.00070190 -15.43591213]
[-65.44540405 -25.13224220]
[-76.89010620 -34.82857132]
[-88.33480835 -44.52490234]
[-104.32823944 -50.15042496]
[-103.34998322 -67.07612610]
[-86.81493378 -70.82160187]
[-78.63848114 -55.96960068]
[-67.19377899 -46.27327347]
[-55.74907303 -36.57694244]
[-44.30437469 -26.88061333]
[-32.24570084 -27.56883049]
[-22.63483238 -19.60961151]
[-20.95848846 -6.84004927]
[-9.63316822 2.99545336]
[1.69215202 12.83095646]
[16.37486267 15.33440399]
[21.72093964 30.22500610]
[33.04626083 40.06050873]
[44.37158203 49.89601135]
[55.69689941 59.73151398]
[67.02222443 69.56701660]
[73.31806946 65.49119568]
[92.20561218 53.26374435]
[87.86779785 38.90465927]
[83.52998352 24.54557228]
[79.19216156 10.18648720]
[66.87204742 -0.63694727]
[70.35025024 -16.66299248]
[86.04870605 -21.40542603]
[97.81817627 -9.98563957]
[93.55124664 5.84867001]
[97.88906860 20.20775604]
[102.22688293 34.56684113]
[106.56469727 48.92592621]
[134.72070312 78.40967560]
[128.64086914 109.82086945]
[141.18251038 118.04931641]
[153.72415161 126.27776337]
[166.26579285 134.50621033]
[178.80741882 142.73464966]
[173.83776855 128.58181763]
[177.22331238 113.96887970]
[187.91047668 103.44345093]
[202.57333374 100.28110504]
[216.64874268 105.46597290]
[225.75636292 117.38450623]
[227.06182861 132.32759094]
[220.15890503 145.64485168]
[207.19580078 153.19189453]
[192.20495605 152.61946106]
[203.76731873 162.17517090]
[215.32969666 171.73088074]
[226.89207458 181.28659058]
[242.45860291 184.11384583]
[247.34008789 198.18582153]
[258.90246582 207.74153137]
[270.46481323 217.29722595]
[282.02719116 226.85293579]
[293.58956909 236.40864563]
[305.15194702 245.96435547]
[316.71432495 255.52006531]
[329.75421143 251.10447693]
[343.16812134 253.68081665]
[353.47976685 262.47271729]
[358.07061768 275.10729980]
[355.84436035 288.25479126]
[367.28906250 297.95111084]
[378.73376465 307.64746094]
[390.17843628 317.34378052]
[401.62313843 327.04010010]
[406.70227051 327.96182251]
[410.54956055 330.47460938]
[412.76730347 333.85021973]
[413.30123901 337.30786133]
[424.38275146 347.41726685]
[432.80529785 350.87490845]
[435.53695679 357.71862793]
[446.49404907 367.96276855]
[457.45114136 378.20687866]
[468.40823364 388.45098877]
[479.36532593 398.69512939]
[490.32241821 408.93923950]
[504.54226685 413.71377563]
[519.46136475 412.15802002]
[534.13085938 401.00537109]
[549.86206055 408.81112671]
[564.76104736 407.07312012]
[572.89428711 402.98107910]
[579.85260010 405.40606689]
[594.77172852 403.85028076]
[602.95440674 399.85800171]
[609.88250732 402.36782837]
[624.81951904 400.99453735]
[639.75653076 399.62127686]
[654.69354248 398.24798584]
[669.63055420 396.87469482]
[684.56756592 395.50140381]
[699.50457764 394.12811279]
[710.82672119 382.76205444]
[726.75585938 384.67059326]
[735.07244873 398.38967896]
[729.39678955 413.39523315]
[714.08264160 418.17623901]
[700.87780762 409.06512451]
[685.94085693 410.43841553]
[671.00384521 411.81170654]
[656.06683350 413.18496704]
[641.12982178 414.55825806]
[626.19281006 415.93154907]
[611.25579834 417.30484009]
[596.32745361 418.76937866]
[581.40838623 420.32516479]
[566.49908447 421.97207642]
[551.60009766 423.71011353]
[543.86743164 432.98864746]
[531.48980713 434.57345581]
[521.01715088 427.07711792]
[506.09802246 428.63287354]
[502.17733765 435.02648926]
[494.33593750 447.81369019]
[490.41525269 454.20730591]
[495.79364014 468.20989990]
[501.25747681 482.17938232]
[506.80661011 496.11520386]
[512.35577393 510.05102539]
[517.90490723 523.98681641]
[523.45404053 537.92266846]
[529.00317383 551.85845947]
[543.89843750 555.78753662]
[553.51165771 567.59600830]
[554.31872559 582.62304688]
[546.21948242 595.09466553]
[551.76861572 609.03045654]
[557.31774902 622.96630859]
[562.86688232 636.90209961]
[568.41601562 650.83795166]
[581.33087158 649.76422119]
[594.53790283 655.69183350]
[604.21099854 668.43841553]
[606.88580322 685.76593018]
[615.19073486 698.25701904]
[623.49572754 710.74810791]
[631.80065918 723.23925781]
[645.60522461 733.08148193]
[639.96911621 749.07116699]
[623.04406738 748.08172607]
[619.30950928 731.54418945]
[611.00457764 719.05310059]
[602.69964600 706.56195068]
[594.39471436 694.07086182]
[580.59808350 699.95928955]
[566.80267334 705.84716797]
[570.07659912 720.48547363]
[573.35058594 735.12384033]
[576.62451172 749.76220703]
[591.14544678 754.97241211]
[600.52624512 767.22003174]
[601.77349854 782.59692383]
[594.48925781 796.19628906]
[580.99792480 803.67871094]
[565.60443115 802.65655518]
[553.22088623 793.45593262]
[547.79876709 779.01281738]
[551.06829834 763.93585205]
[561.98614502 753.03613281]
[558.71221924 738.39776611]
[555.43829346 723.75946045]
[552.16436768 709.12109375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 224]
[3 223]
[4 222]
[5 221]
[6 220]
[10 216]
[11 215]
[12 214]
[13 213]
[14 212]
[15 211]
[17 210]
[18 209]
[20 170]
[21 169]
[22 168]
[23 167]
[24 166]
[25 165]
[26 163]
[27 162]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[36 149]
[37 148]
[38 147]
[39 146]
[40 145]
[41 144]
[42 143]
[44 141]
[45 140]
[46 139]
[47 138]
[48 128]
[49 127]
[50 126]
[51 125]
[52 124]
[61 77]
[62 76]
[63 75]
[64 74]
[78 109]
[79 108]
[80 107]
[81 106]
[82 105]
[84 103]
[85 102]
[86 101]
[88 98]
[89 97]
[90 96]
[91 95]
[111 122]
[112 121]
[113 120]
[114 119]
[171 206]
[172 205]
[174 202]
[175 201]
[177 200]
[178 199]
[180 198]
[181 197]
[182 196]
[183 195]
[184 194]
[185 193]
[186 192]
[228 238]
[229 237]
[230 236]
[231 235]
[240 256]
[241 255]
[242 254]
[243 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
