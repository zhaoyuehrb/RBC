%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAACAGGCUCCUUACUCAAGCUCGGGUUCUUCUCCUAGGCGGAAGCCAGACCAGAGAGCGUGCGUGUUUUUCCCAGGGUGCCCCGCGCUGCUGUUAUGGCCGCCUCCUUGAGGUAGUAUCCGCACAUGGAAUUCUAGGGCCGCAGGUGUAUUUACGGUAACUGUCGCCACUAGAUUUCAGCGCCUUUGGACUCUCCUGUUUUCACUUUCUUUUGUUGACUCCCGUGUGGCCCUCGUGGGAGCCUGUUUUGGCU\
GCAGCGGUGUCUGGGGUG\
) } def
/len { sequence length } bind def

/coor [
[-86.09987640 303.17184448]
[-98.11267853 312.15475464]
[-110.12548065 321.13763428]
[-109.49871826 332.96493530]
[-114.59094238 343.52560425]
[-124.04071808 350.26126099]
[-135.44718933 351.60202026]
[-145.97956848 347.33105469]
[-158.19517517 356.03613281]
[-155.69482422 371.05313110]
[-159.94514465 385.60720825]
[-170.05171204 396.82672119]
[-183.97015381 402.52218628]
[-198.91952515 401.61349487]
[-211.93794250 394.33435059]
[-224.15356445 403.03945923]
[-236.36918640 411.74453735]
[-243.11741638 426.05438232]
[-257.97244263 427.13946533]
[-270.18807983 435.84457397]
[-276.93630981 450.15441895]
[-291.79132080 451.23950195]
[-304.00695801 459.94461060]
[-316.22256470 468.64971924]
[-328.43817139 477.35479736]
[-336.01364136 496.06179810]
[-355.34951782 496.97763062]
[-367.36233521 505.96054077]
[-379.37512207 514.94342041]
[-391.38793945 523.92633057]
[-403.24447632 533.11450195]
[-414.94125366 542.50524902]
[-426.63800049 551.89593506]
[-438.33477783 561.28668213]
[-450.03155518 570.67736816]
[-450.18930054 586.31414795]
[-460.40045166 598.15753174]
[-475.84365845 600.61547852]
[-489.22711182 592.52734375]
[-494.23150635 577.71215820]
[-488.49398804 563.16516113]
[-474.72357178 555.75506592]
[-459.42227173 558.98059082]
[-447.72549438 549.58990479]
[-436.02871704 540.19915771]
[-424.33197021 530.80847168]
[-412.63519287 521.41772461]
[-411.88265991 518.00897217]
[-409.46353149 514.78778076]
[-405.48022461 512.52380371]
[-400.37081909 511.91354370]
[-388.35803223 502.93063354]
[-376.34524536 493.94772339]
[-364.33242798 484.96484375]
[-363.79727173 474.80633545]
[-357.64550781 466.43124390]
[-347.70153809 462.72903442]
[-337.14328003 465.13919067]
[-324.92767334 456.43408203]
[-312.71203613 447.72900391]
[-300.49642944 439.02389526]
[-294.62194824 425.33670044]
[-278.89315796 423.62896729]
[-266.67755127 414.92385864]
[-260.80303955 401.23666382]
[-245.07427979 399.52893066]
[-232.85865784 390.82382202]
[-220.64305115 382.11874390]
[-223.27413940 367.43734741]
[-219.25341797 353.01019287]
[-209.32678223 341.71316528]
[-195.42288208 335.82232666]
[-180.27859497 336.55541992]
[-166.90026855 343.82052612]
[-154.68466187 335.11541748]
[-152.71923828 316.88812256]
[-137.77516174 305.72451782]
[-119.10838318 309.12484741]
[-107.09558105 300.14193726]
[-95.08277893 291.15902710]
[-89.02333069 274.67248535]
[-70.69854736 272.69296265]
[-58.78952789 263.57290649]
[-46.88050842 254.45288086]
[-34.97148895 245.33282471]
[-23.06246948 236.21278381]
[-11.25879765 226.95678711]
[0.43797448 217.56607056]
[12.13474655 208.17535400]
[23.83151817 198.78465271]
[35.52828979 189.39393616]
[47.22506332 180.00321960]
[58.92183304 170.61250305]
[70.61860657 161.22178650]
[82.31537628 151.83106995]
[94.01215363 142.44035339]
[78.70639038 133.76329041]
[69.18738556 120.43596649]
[66.42168427 105.52629089]
[69.95345306 92.02664185]
[78.15037537 82.26251221]
[69.44528198 70.04689789]
[55.13542938 63.29865265]
[54.05034637 48.44362640]
[45.34524536 36.22801208]
[36.64014816 24.01239586]
[27.93505096 11.79677963]
[19.22995186 -0.41883591]
[5.11388731 -9.80888748]
[10.22925663 -25.97271538]
[27.17747116 -25.53184891]
[31.44556808 -9.12393475]
[40.15066528 3.09168124]
[48.85576248 15.30729675]
[57.56086349 27.52291298]
[66.26596069 39.73852921]
[79.95316315 45.61302567]
[81.66089630 61.34179688]
[90.36599731 73.55741119]
[109.49288177 68.34385681]
[130.47227478 77.37248230]
[142.86059570 100.08608246]
[154.66427612 90.83009338]
[166.46794128 81.57410431]
[178.27160645 72.31811523]
[190.07528687 63.06212616]
[201.87895203 53.80613708]
[204.19062805 41.14168549]
[214.18107605 33.67332840]
[226.18580627 34.95635986]
[238.09483337 25.83631516]
[250.00384521 16.71626663]
[245.98124695 1.30922091]
[253.38525391 -15.61693192]
[271.85876465 -25.69513512]
[278.03305054 -39.36547470]
[284.20733643 -53.03581619]
[290.38162231 -66.70616150]
[296.55590820 -80.37650299]
[302.65170288 -94.08201599]
[308.66885376 -107.82224274]
[314.68600464 -121.56247711]
[313.13433838 -137.30741882]
[325.32730103 -145.86203003]
[331.34442139 -159.60226440]
[337.36157227 -173.34249878]
[343.37872314 -187.08273315]
[332.59323120 -197.76158142]
[326.39727783 -211.61708069]
[325.62881470 -226.77537537]
[330.39178467 -241.18643188]
[340.04199219 -252.90127563]
[353.27435303 -260.33557129]
[368.29931641 -262.48391724]
[383.08483887 -259.05572510]
[395.63134766 -250.51463318]
[404.24197388 -238.01577759]
[407.75225830 -223.24952698]
[405.68740845 -208.21287537]
[398.32672119 -194.93940735]
[386.66564941 -185.22427368]
[372.28128052 -180.38134766]
[357.11895752 -181.06559753]
[351.10180664 -167.32536316]
[345.08465576 -153.58512878]
[339.06753540 -139.84489441]
[341.04956055 -125.08274841]
[328.42623901 -115.54534149]
[322.40908813 -101.80510712]
[316.39193726 -88.06487274]
[316.58670044 -80.70493317]
[310.22625732 -74.20221710]
[304.05197144 -60.53187561]
[297.87768555 -46.86153412]
[291.70339966 -33.19119263]
[285.52911377 -19.52085114]
[290.02056885 -13.51445103]
[299.00347900 -1.50164902]
[303.49493408 4.50475168]
[318.35317993 2.44743729]
[333.21142578 0.39012256]
[348.06967163 -1.66719210]
[362.92791748 -3.72450662]
[377.78616333 -5.78182125]
[383.01119995 -24.98897362]
[396.11187744 -39.91118622]
[414.39208984 -47.54165268]
[434.11779785 -46.36761856]
[451.27993774 -36.67011642]
[462.40905762 -20.45819473]
[477.09072876 -23.53199577]
[491.77243042 -26.60579491]
[506.45410156 -29.67959595]
[514.89135742 -43.04328918]
[530.32513428 -46.44527054]
[543.59887695 -37.86720276]
[546.83752441 -22.39830208]
[538.11956787 -9.21599197]
[522.61730957 -6.14110422]
[509.52789307 -14.99791527]
[494.84622192 -11.92411423]
[480.16455078 -8.85031414]
[465.48284912 -5.77651405]
[464.64215088 4.57565784]
[461.37161255 14.44695091]
[455.85128784 23.27473640]
[448.38964844 30.55436325]
[439.40634155 35.86800385]
[429.40856934 38.90863037]
[418.96252441 39.49776077]
[408.66125488 37.59591293]
[399.09097290 33.30519104]
[390.79782104 26.86383438]
[384.25656128 18.63297844]
[379.84347534 9.07642365]
[364.98522949 11.13373852]
[350.12698364 13.19105339]
[335.26873779 15.24836826]
[320.41049194 17.30568314]
[305.55224609 19.36299706]
[281.67816162 36.85094070]
[259.12390137 28.62528610]
[247.21487427 37.74533463]
[235.30584717 46.86537933]
[229.43582153 63.42033005]
[211.13494873 65.60980988]
[199.33126831 74.86579895]
[187.52760315 84.12178802]
[175.72392273 93.37777710]
[163.92025757 102.63376617]
[152.11659241 111.88975525]
[151.77264404 126.88581085]
[163.13955688 136.67323303]
[174.50645447 146.46064758]
[190.71084595 148.98054504]
[196.37759399 164.36950684]
[185.67724609 176.79667664]
[169.61740112 173.47804260]
[164.71903992 157.82754517]
[153.35214233 148.04013062]
[141.98522949 138.25271606]
[130.73129272 148.16981506]
[139.01113892 160.67758179]
[147.29100037 173.18533325]
[155.57084656 185.69309998]
[171.10606384 188.59696960]
[179.96871948 201.68241882]
[176.90075684 217.18606567]
[163.72233582 225.90988159]
[148.25198364 222.67817688]
[139.66799927 209.40826416]
[143.06307983 193.97294617]
[134.78323364 181.46517944]
[126.50337982 168.95742798]
[118.22353363 156.44966125]
[103.40286255 154.13713074]
[91.70609283 163.52784729]
[80.00932312 172.91856384]
[68.31254578 182.30928040]
[56.61577606 191.69998169]
[44.91900635 201.09069824]
[33.22223282 210.48141479]
[21.52546120 219.87213135]
[9.82868958 229.26284790]
[-1.86808264 238.65356445]
[-4.59035540 244.61244202]
[-9.20861053 247.84321594]
[-13.94242191 248.12179565]
[-25.85144234 257.24185181]
[-37.76045990 266.36190796]
[-49.66947937 275.48193359]
[-61.57849884 284.60198975]
[-64.03522491 297.23910522]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 80]
[2 79]
[3 78]
[8 75]
[9 74]
[15 68]
[16 67]
[17 66]
[19 64]
[20 63]
[22 61]
[23 60]
[24 59]
[25 58]
[27 54]
[28 53]
[29 52]
[30 51]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[82 272]
[83 271]
[84 270]
[85 269]
[86 268]
[87 265]
[88 264]
[89 263]
[90 262]
[91 261]
[92 260]
[93 259]
[94 258]
[95 257]
[96 256]
[101 119]
[102 118]
[104 116]
[105 115]
[106 114]
[107 113]
[108 112]
[122 231]
[123 230]
[124 229]
[125 228]
[126 227]
[127 226]
[130 224]
[131 223]
[132 222]
[135 176]
[136 175]
[137 174]
[138 173]
[139 172]
[140 170]
[141 169]
[142 168]
[144 166]
[145 165]
[146 164]
[147 163]
[179 220]
[180 219]
[181 218]
[182 217]
[183 216]
[184 215]
[190 203]
[191 202]
[192 201]
[193 200]
[232 241]
[233 240]
[234 239]
[242 255]
[243 254]
[244 253]
[245 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
