%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LOC388436)
} def

/sequence { (\
CCCUGCUCGCAUCUUGGCUUGCUGAGGCUGCGGGUCUUGGCCGGGCCUUCGAGAAUCCCCCGCCGCCUCCCCUUCUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.008851982 ubox
1 78 0.084660522 ubox
2 16 0.008877900 ubox
2 17 0.031737353 ubox
2 34 0.005311782 ubox
2 77 0.086396134 ubox
2 78 0.148848698 ubox
3 16 0.032025016 ubox
3 17 0.004010597 ubox
3 33 0.005345405 ubox
3 77 0.151069804 ubox
3 78 0.029943115 ubox
4 11 0.013166445 ubox
4 16 0.003951211 ubox
4 21 0.005602229 ubox
4 24 0.006913499 ubox
4 32 0.005321957 ubox
4 77 0.029035310 ubox
5 10 0.014125056 ubox
5 18 0.151976534 ubox
5 20 0.004485402 ubox
5 22 0.881164092 ubox
5 23 0.013052480 ubox
5 31 0.005591101 ubox
5 35 0.042363384 ubox
5 76 0.010142896 ubox
6 17 0.152062217 ubox
6 21 0.882562619 ubox
6 26 0.012095305 ubox
6 30 0.005558287 ubox
6 34 0.044493768 ubox
6 53 0.003976251 ubox
6 78 0.010074870 ubox
7 16 0.135763681 ubox
7 17 0.019644846 ubox
7 25 0.019207328 ubox
7 33 0.044496473 ubox
7 52 0.003995877 ubox
7 77 0.008814783 ubox
7 78 0.011168588 ubox
8 16 0.066794334 ubox
8 21 0.005429905 ubox
8 24 0.023999149 ubox
8 32 0.044761231 ubox
8 51 0.003998510 ubox
8 77 0.019278211 ubox
9 15 0.054407300 ubox
9 18 0.885204417 ubox
9 22 0.424649984 ubox
9 23 0.006340587 ubox
9 28 0.004894651 ubox
9 31 0.045199212 ubox
9 50 0.003968852 ubox
9 76 0.003476672 ubox
10 16 0.077800772 ubox
10 17 0.882759295 ubox
10 21 0.425215897 ubox
10 27 0.004836428 ubox
10 30 0.045198313 ubox
10 77 0.013335198 ubox
11 15 0.079048097 ubox
11 20 0.422986174 ubox
11 29 0.044385100 ubox
11 76 0.012915758 ubox
12 27 0.043214158 ubox
12 78 0.003950613 ubox
13 26 0.044180583 ubox
13 27 0.004599743 ubox
13 77 0.006050606 ubox
13 78 0.006408217 ubox
14 25 0.044208383 ubox
14 26 0.004314695 ubox
14 77 0.006125234 ubox
14 78 0.006279476 ubox
15 24 0.044024960 ubox
15 25 0.004135692 ubox
15 77 0.010636761 ubox
16 23 0.044831112 ubox
16 29 0.007090047 ubox
16 47 0.004301437 ubox
16 71 0.018200580 ubox
16 72 0.013735817 ubox
16 75 0.007352941 ubox
16 76 0.014408099 ubox
17 22 0.044744879 ubox
17 28 0.009797700 ubox
17 46 0.004328860 ubox
17 70 0.018315717 ubox
17 71 0.013690816 ubox
17 74 0.006751234 ubox
17 75 0.014802826 ubox
18 27 0.009796852 ubox
18 45 0.004322901 ubox
18 78 0.003689232 ubox
19 26 0.009755833 ubox
19 44 0.004301477 ubox
19 77 0.004413884 ubox
20 25 0.009475001 ubox
20 43 0.004129555 ubox
21 41 0.003195208 ubox
22 40 0.004335956 ubox
22 78 0.006996582 ubox
23 39 0.004319495 ubox
23 77 0.010581708 ubox
24 38 0.004337502 ubox
24 69 0.994087862 ubox
24 75 0.004320551 ubox
25 37 0.004358176 ubox
25 68 0.998099906 ubox
25 74 0.003529050 ubox
26 36 0.004360003 ubox
26 67 0.998855562 ubox
27 35 0.004358474 ubox
27 66 0.998933372 ubox
28 34 0.004358951 ubox
28 65 0.998272208 ubox
29 33 0.003926972 ubox
29 62 0.004792462 ubox
29 65 0.006681561 ubox
30 61 0.005905833 ubox
30 63 0.998017163 ubox
30 64 0.022571480 ubox
31 62 0.998891126 ubox
32 58 0.013785017 ubox
32 59 0.030232465 ubox
32 60 0.063425763 ubox
32 61 0.996339147 ubox
32 71 0.006890661 ubox
32 72 0.003208267 ubox
33 42 0.004142698 ubox
33 57 0.015334186 ubox
33 58 0.033833131 ubox
33 59 0.089406926 ubox
33 60 0.994208942 ubox
33 70 0.007755908 ubox
33 71 0.003318596 ubox
34 41 0.004567287 ubox
34 56 0.024296786 ubox
34 57 0.037099043 ubox
34 58 0.109112659 ubox
34 59 0.991442062 ubox
34 60 0.003229815 ubox
34 69 0.007777739 ubox
34 70 0.003294366 ubox
35 40 0.004364460 ubox
35 45 0.003880208 ubox
35 52 0.067688429 ubox
35 54 0.985217385 ubox
35 55 0.065214094 ubox
36 44 0.003969837 ubox
36 51 0.067766778 ubox
36 53 0.993564221 ubox
37 43 0.003802791 ubox
37 52 0.991613357 ubox
37 53 0.005642016 ubox
37 54 0.012522120 ubox
37 55 0.014207458 ubox
38 51 0.983670512 ubox
38 52 0.009955335 ubox
38 53 0.012865528 ubox
38 54 0.015037554 ubox
38 65 0.031921585 ubox
39 47 0.675565520 ubox
39 48 0.032059453 ubox
39 49 0.004032612 ubox
39 50 0.731085532 ubox
39 58 0.013443905 ubox
39 64 0.043045608 ubox
39 67 0.015106452 ubox
40 46 0.708317046 ubox
40 47 0.046996907 ubox
40 48 0.020300577 ubox
40 49 0.653691709 ubox
40 57 0.013412166 ubox
40 63 0.043069137 ubox
40 66 0.015135762 ubox
41 45 0.704076949 ubox
41 62 0.041171173 ubox
41 65 0.014994709 ubox
42 51 0.061715177 ubox
42 62 0.018922820 ubox
43 49 0.013772727 ubox
43 50 0.062951417 ubox
43 58 0.011016135 ubox
43 59 0.011138471 ubox
43 60 0.038130928 ubox
43 61 0.022866673 ubox
44 48 0.016359646 ubox
44 49 0.050211558 ubox
44 50 0.008506330 ubox
44 57 0.011017402 ubox
44 58 0.012105482 ubox
44 59 0.038135596 ubox
44 60 0.022818129 ubox
44 64 0.003925983 ubox
45 49 0.006436127 ubox
45 56 0.009238825 ubox
45 57 0.012221126 ubox
45 58 0.038000586 ubox
45 59 0.022624699 ubox
45 63 0.004022476 ubox
46 62 0.004089157 ubox
47 53 0.013299009 ubox
48 52 0.012078632 ubox
48 54 0.009983385 ubox
48 55 0.025881557 ubox
49 53 0.009374401 ubox
49 54 0.023177813 ubox
51 57 0.018720156 ubox
52 56 0.016321911 ubox
66 78 0.013085622 ubox
67 77 0.013356342 ubox
69 77 0.003570983 ubox
69 78 0.025307132 ubox
70 77 0.057658472 ubox
70 78 0.225788991 ubox
71 77 0.226760556 ubox
71 78 0.694984209 ubox
72 77 0.706762168 ubox
72 78 0.041572878 ubox
73 77 0.038343983 ubox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
24 69 0.9500000 lbox
25 68 0.9500000 lbox
26 67 0.9500000 lbox
27 66 0.9500000 lbox
28 65 0.9500000 lbox
30 63 0.9500000 lbox
31 62 0.9500000 lbox
32 61 0.9500000 lbox
33 60 0.9500000 lbox
34 59 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
71 78 0.9500000 lbox
72 77 0.9500000 lbox
showpage
end
%%EOF
