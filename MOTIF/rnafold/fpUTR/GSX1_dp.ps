%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GSX1)
} def

/sequence { (\
GUGGGCGCAGAGGGCGGGCUGGCUGCGGGGCGACCGCGCGCCGGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.052660175 ubox
1 15 0.022092772 ubox
1 19 0.385135260 ubox
1 23 0.014556079 ubox
1 37 0.010155270 ubox
1 47 0.020504357 ubox
2 7 0.050526475 ubox
2 9 0.054605612 ubox
2 14 0.021846276 ubox
2 16 0.007704416 ubox
2 18 0.374214681 ubox
2 21 0.060280531 ubox
2 22 0.015648227 ubox
2 36 0.010156271 ubox
2 43 0.005351926 ubox
2 46 0.019936661 ubox
3 8 0.060680724 ubox
3 15 0.009016771 ubox
3 20 0.508027515 ubox
3 35 0.010159923 ubox
3 42 0.006193365 ubox
3 48 0.020513992 ubox
4 19 0.532203520 ubox
4 20 0.366780868 ubox
4 24 0.003184629 ubox
4 34 0.010080011 ubox
4 41 0.005152210 ubox
4 42 0.055411832 ubox
4 47 0.020313533 ubox
4 48 0.071933026 ubox
5 15 0.287927681 ubox
5 19 0.385015881 ubox
5 23 0.003692263 ubox
5 39 0.003836737 ubox
5 41 0.055581278 ubox
5 47 0.072799345 ubox
6 14 0.288363746 ubox
6 16 0.859102136 ubox
6 18 0.360711391 ubox
6 22 0.003829468 ubox
6 32 0.010184702 ubox
6 38 0.003839532 ubox
6 40 0.055686793 ubox
6 46 0.071298194 ubox
7 15 0.919459784 ubox
7 19 0.044159675 ubox
7 26 0.005458088 ubox
7 31 0.010525422 ubox
7 37 0.003812623 ubox
7 39 0.055675901 ubox
7 47 0.021335093 ubox
8 14 0.919241392 ubox
8 18 0.044209802 ubox
8 21 0.024756348 ubox
8 25 0.005641911 ubox
8 30 0.010521661 ubox
8 36 0.003806882 ubox
8 38 0.055623962 ubox
8 46 0.021396182 ubox
9 20 0.028120266 ubox
9 24 0.006433385 ubox
10 19 0.028464883 ubox
10 23 0.006475066 ubox
11 20 0.044851466 ubox
12 19 0.045987112 ubox
12 20 0.020291055 ubox
12 24 0.006285815 ubox
12 35 0.008505639 ubox
12 42 0.006693729 ubox
12 48 0.014216664 ubox
13 19 0.021920215 ubox
13 20 0.012300092 ubox
13 23 0.006645358 ubox
13 24 0.038526116 ubox
13 34 0.008452120 ubox
13 35 0.004647836 ubox
13 41 0.005347869 ubox
13 42 0.049956050 ubox
13 47 0.012997320 ubox
13 48 0.112764309 ubox
14 19 0.012744140 ubox
14 23 0.040493221 ubox
14 26 0.011171717 ubox
14 34 0.004662570 ubox
14 37 0.036041985 ubox
14 39 0.003420242 ubox
14 41 0.050134395 ubox
14 47 0.114226529 ubox
15 21 0.006660560 ubox
15 22 0.040514815 ubox
15 25 0.011193148 ubox
15 32 0.008670970 ubox
15 36 0.036053513 ubox
15 38 0.003422604 ubox
15 40 0.050295070 ubox
15 46 0.114127513 ubox
16 20 0.004629286 ubox
16 24 0.011305501 ubox
16 31 0.008814270 ubox
16 35 0.036034944 ubox
16 37 0.003395003 ubox
16 39 0.050268014 ubox
16 48 0.106174295 ubox
17 23 0.011329944 ubox
17 34 0.035993265 ubox
17 35 0.003511735 ubox
17 42 0.006430262 ubox
17 47 0.112841653 ubox
17 48 0.189137018 ubox
18 31 0.010239161 ubox
18 34 0.003691732 ubox
18 37 0.050189182 ubox
18 41 0.006458929 ubox
18 47 0.191293683 ubox
19 28 0.009122492 ubox
19 30 0.010267490 ubox
19 36 0.049171928 ubox
19 40 0.006440863 ubox
19 44 0.181361887 ubox
19 45 0.083938955 ubox
19 46 0.184793378 ubox
20 27 0.009232574 ubox
20 29 0.010173723 ubox
20 32 0.009789045 ubox
20 36 0.009965709 ubox
20 43 0.209546554 ubox
20 44 0.060690646 ubox
20 45 0.151138293 ubox
21 26 0.009406948 ubox
21 31 0.010316838 ubox
21 35 0.047492823 ubox
21 42 0.272629375 ubox
21 48 0.945566317 ubox
22 31 0.036917071 ubox
22 34 0.047433921 ubox
22 39 0.006517682 ubox
22 41 0.273031874 ubox
22 47 0.958720060 ubox
23 29 0.009858923 ubox
23 30 0.037111670 ubox
23 38 0.006509546 ubox
23 40 0.271700807 ubox
23 45 0.003600642 ubox
23 46 0.958793668 ubox
24 28 0.008899415 ubox
24 29 0.036406377 ubox
24 32 0.045865707 ubox
24 38 0.238359704 ubox
24 40 0.026316887 ubox
24 44 0.004105316 ubox
24 45 0.955765179 ubox
25 31 0.047295711 ubox
25 37 0.246509677 ubox
25 39 0.124596171 ubox
26 30 0.046955254 ubox
26 36 0.246530252 ubox
26 38 0.124647878 ubox
26 43 0.958773153 ubox
27 35 0.246248136 ubox
27 37 0.124487519 ubox
27 42 0.958920634 ubox
28 34 0.245880405 ubox
28 35 0.073538204 ubox
28 41 0.958784218 ubox
28 42 0.005201889 ubox
29 34 0.074561854 ubox
29 35 0.101382692 ubox
29 41 0.007157894 ubox
29 42 0.003969485 ubox
30 34 0.099758420 ubox
30 37 0.004347838 ubox
30 39 0.958840229 ubox
30 41 0.004218542 ubox
31 36 0.004478663 ubox
31 38 0.958894652 ubox
31 40 0.004432621 ubox
32 37 0.940758637 ubox
32 39 0.004388171 ubox
38 47 0.009596402 ubox
39 46 0.009614387 ubox
40 47 0.003303308 ubox
41 46 0.003299480 ubox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
