%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUCAGUAACUCACUCGAAAGACGGGUAGGCGGGAGGAGACAUUCGCGUUCAAAAUCUUUUUGCCUCUAUCCGCUCGCCGUAGCGCUUUAGCCCGCUCGAGUUUCAAUGCGCGUUGUUGCUUAACGAAGCAGAGUCCUACACACUGUCUGCUGCUCUCCUGAUC\
) } def
/len { sequence length } bind def

/coor [
[89.29113770 248.21275330]
[78.38964081 236.77015686]
[78.85577393 220.97274780]
[90.41297913 210.19284058]
[90.69683838 195.19552612]
[90.98070526 180.19821167]
[91.26456451 165.20089722]
[73.52751160 160.22184753]
[57.86663818 150.51974487]
[45.51019669 136.85546875]
[37.42727661 120.30069733]
[34.25180435 102.15378571]
[36.23282242 83.83795929]
[43.21496964 66.78968811]
[31.21459007 57.79019928]
[19.21420860 48.79070663]
[7.21382713 39.79121399]
[-4.78655434 30.79172325]
[-11.36426067 29.61103249]
[-15.68285275 25.83189964]
[-17.06214523 21.21759796]
[-28.71337700 11.77044010]
[-37.39127350 8.77729034]
[-40.49349213 2.03258991]
[-51.96385956 -7.63336563]
[-63.43422318 -17.29932022]
[-74.90459442 -26.96527672]
[-86.37495422 -36.63123322]
[-128.43070984 -31.32586479]
[-142.97901917 -34.97917175]
[-157.52732849 -38.63248062]
[-172.07563782 -42.28578949]
[-186.62394714 -45.93909454]
[-201.17225647 -49.59240341]
[-215.72058105 -53.24570847]
[-230.26889038 -56.89901733]
[-244.81719971 -60.55232620]
[-259.36550903 -64.20563507]
[-273.91381836 -67.85894012]
[-288.61862183 -70.82009125]
[-303.44705200 -73.08245087]
[-318.27545166 -75.34481812]
[-330.85836792 -65.78209686]
[-346.50619507 -68.00045776]
[-355.93533325 -80.68377686]
[-353.55166626 -96.30727386]
[-340.76937866 -105.60179901]
[-325.17196655 -103.05308533]
[-316.01309204 -90.17322540]
[-301.18466187 -87.91086578]
[-286.35626221 -85.64849854]
[-292.77423096 -99.20614624]
[-286.35089111 -112.76125336]
[-271.79382324 -116.37953186]
[-259.77163696 -107.40920258]
[-259.09515381 -92.42446136]
[-270.26049805 -82.40724945]
[-255.71220398 -78.75394440]
[-241.16389465 -75.10063934]
[-226.61557007 -71.44732666]
[-212.06726074 -67.79402161]
[-197.51895142 -64.14071655]
[-182.97064209 -60.48740768]
[-168.42233276 -56.83409882]
[-153.87402344 -53.18078995]
[-139.32571411 -49.52748489]
[-124.77740479 -45.87417603]
[-119.18170929 -50.86799622]
[-132.13874817 -58.42544556]
[-128.95495605 -73.08366394]
[-114.03028870 -74.58514404]
[-107.99032593 -60.85563278]
[-102.39463043 -65.84944916]
[-104.37597656 -80.71801758]
[-106.35732269 -95.58658600]
[-108.33866119 -110.45514679]
[-121.04289246 -119.85611725]
[-123.29598236 -135.49897766]
[-113.76123047 -148.10310364]
[-98.09542084 -150.19068909]
[-85.59280396 -140.52319336]
[-83.67096710 -124.83619690]
[-93.47010040 -112.43649292]
[-91.48875427 -97.56792450]
[-89.50740814 -82.69936371]
[-87.52606201 -67.83079529]
[-79.51104736 -80.50989532]
[-64.74416351 -83.14411163]
[-52.83945847 -74.01843262]
[-51.54754639 -59.07417297]
[-61.70953369 -48.04085541]
[-76.70899963 -48.10159683]
[-65.23863220 -38.43564224]
[-53.76826859 -28.76968765]
[-42.29790115 -19.10373116]
[-30.82753563 -9.43777657]
[-19.26622009 0.11920798]
[-7.61498737 9.56636620]
[4.21293736 18.79134178]
[16.21331787 27.79083443]
[28.21369934 36.79032516]
[40.21408081 45.78981781]
[52.21446228 54.78931046]
[62.68503189 45.82382965]
[74.79404449 39.23714828]
[88.00981140 35.31847382]
[101.75205231 34.23987198]
[115.41736603 36.04869843]
[128.40573120 40.66553116]
[140.14682007 47.88765717]
[150.12513733 57.39795685]
[157.90254211 68.77884674]
[163.13751221 81.53061676]
[177.92045593 78.98804474]
[192.70339966 76.44546509]
[207.48634338 73.90289307]
[222.26927185 71.36032104]
[232.66348267 59.13984299]
[248.69331360 59.79101181]
[258.06207275 72.81430817]
[253.58280945 88.21936798]
[238.69168091 94.18875122]
[224.81184387 86.14325714]
[210.02891541 88.68583679]
[195.24597168 91.22840881]
[180.46302795 93.77098083]
[165.68008423 96.31355286]
[164.09432983 114.81153870]
[157.40333557 132.12976074]
[169.57186890 140.90054321]
[181.74041748 149.67132568]
[193.90895081 158.44210815]
[206.07749939 167.21289062]
[218.24603271 175.98367310]
[231.38446045 168.28291321]
[246.51991272 166.59825134]
[261.03005981 171.22155762]
[272.40097046 181.35183716]
[278.66253662 195.23393250]
[278.72991943 210.46269226]
[272.59146118 224.39965820]
[261.31063843 234.63014221]
[246.84194946 239.38168335]
[231.69218445 237.83100891]
[218.48612976 230.24681091]
[209.51181030 217.94309998]
[206.32409668 203.05154419]
[209.47525024 188.15220642]
[197.30671692 179.38142395]
[185.13816833 170.61064148]
[172.96963501 161.83985901]
[160.80108643 153.06907654]
[148.63255310 144.29829407]
[143.71020508 149.16180420]
[138.30419922 153.48132324]
[132.47436523 157.20909119]
[126.28520203 160.30383301]
[119.80519867 162.73132324]
[113.10604858 164.46469116]
[106.26187897 165.48475647]
[105.97801971 180.48207092]
[105.69415283 195.47938538]
[105.41029358 210.47669983]
[116.55130005 221.68623352]
[116.41929626 237.48995972]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 163]
[5 162]
[6 161]
[7 160]
[14 103]
[15 102]
[16 101]
[17 100]
[18 99]
[21 98]
[22 97]
[24 96]
[25 95]
[26 94]
[27 93]
[28 92]
[29 67]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[35 61]
[36 60]
[37 59]
[38 58]
[39 57]
[40 51]
[41 50]
[42 49]
[73 86]
[74 85]
[75 84]
[76 83]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[129 153]
[130 152]
[131 151]
[132 150]
[133 149]
[134 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
