%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACAACCAAGAUGGCUGAGGAGAGGGCGGAAGUGUCCGCACGUCGGGCCUCCGAGGCUUCUCUUUCUCCCCUGGCGGUCCGGCUCUCGAUGGUGGCGUGACGGGGGCGGGGGUGGCGGCGCGUUCUCCUCGGUUGGGAGGGAACCAGCCCGCGAACCCAGGCCGGGAGGGGGGUUCGGCCUGGGGGGGAAGGGACUGAC\
) } def
/len { sequence length } bind def

/coor [
[118.22367859 172.90821838]
[116.82598877 157.97348022]
[115.42829895 143.03874207]
[108.00164795 141.99237061]
[105.90867615 156.84562683]
[91.05544281 154.75241089]
[93.14835358 139.89964294]
[85.72170258 138.85327148]
[80.25193024 152.82043457]
[74.78215790 166.78759766]
[74.63640594 183.74092102]
[58.30527878 188.29400635]
[49.40921783 173.86152649]
[60.81499481 161.31782532]
[66.28476715 147.35066223]
[71.75453949 133.38349915]
[66.83507538 127.72232819]
[56.99614716 116.39998627]
[52.07668304 110.73881531]
[37.48300552 114.20645905]
[22.88932800 117.67410278]
[8.29564953 121.14174652]
[-6.29802847 124.60939026]
[-20.89170647 128.07704163]
[-35.48538589 131.54467773]
[-50.07906342 135.01232910]
[-64.67273712 138.47996521]
[-78.67928314 152.97096252]
[-96.95040131 146.65499878]
[-111.42917633 150.57481384]
[-125.90795135 154.49464417]
[-133.38011169 159.76153564]
[-140.64241028 158.36097717]
[-155.18040466 162.05516052]
[-162.73356628 167.20521545]
[-169.97320557 165.69187927]
[-184.56689453 169.15953064]
[-199.16056824 172.62716675]
[-213.75424194 176.09481812]
[-228.34793091 179.56245422]
[-237.95265198 192.41270447]
[-253.99169922 192.77137756]
[-264.16128540 180.36335754]
[-260.66015625 164.70698547]
[-246.17410278 157.81251526]
[-231.81556702 164.96878052]
[-217.22189331 161.50112915]
[-202.62821960 158.03349304]
[-188.03453064 154.56584167]
[-173.44085693 151.09820557]
[-158.87458801 147.51718140]
[-144.33659363 143.82299805]
[-129.82778931 140.01586914]
[-115.34900665 136.09603882]
[-100.87023163 132.17620850]
[-96.59702301 122.88462830]
[-87.72660065 117.36640930]
[-77.06396484 117.65114594]
[-68.14038849 123.88629150]
[-53.54670715 120.41864777]
[-38.95302963 116.95100403]
[-24.35935211 113.48336029]
[-9.76567364 110.01571655]
[4.82800436 106.54807281]
[19.42168236 103.08042145]
[34.01536179 99.61277771]
[48.60903931 96.14513397]
[83.30181122 67.45536041]
[111.26080322 81.54230499]
[123.02971649 72.24215698]
[134.79862976 62.94201660]
[146.56753540 53.64187241]
[158.33645630 44.34172821]
[151.48234558 35.90005493]
[148.22888184 23.82291031]
[150.20199585 9.77336979]
[158.25146484 -3.93674421]
[156.15873718 -18.79004288]
[146.57176208 -31.37577629]
[152.45774841 -45.05804443]
[150.36502075 -59.91134644]
[148.27229309 -74.76464081]
[138.68531799 -87.35037994]
[144.57130432 -101.03264618]
[142.47857666 -115.88594818]
[140.38583374 -130.73924255]
[138.29310608 -145.59254456]
[136.20037842 -160.44584656]
[134.10765076 -175.29913330]
[132.01492310 -190.15243530]
[129.69145203 -204.97138977]
[127.13779449 -219.75242615]
[124.58414459 -234.53346252]
[113.67647552 -246.77905273]
[119.08382416 -262.26107788]
[135.24357605 -265.05291748]
[145.53196716 -252.28259277]
[139.36517334 -237.08711243]
[141.91882324 -222.30607605]
[144.47247314 -207.52505493]
[147.79542542 -204.08557129]
[148.98838806 -198.51982117]
[146.86822510 -192.24516296]
[148.96095276 -177.39187622]
[151.05368042 -162.53857422]
[153.14640808 -147.68527222]
[155.23913574 -132.83197021]
[157.33186340 -117.97867584]
[159.42460632 -103.12537384]
[168.86187744 -91.60205078]
[163.12557983 -76.85737610]
[165.21832275 -62.00407410]
[167.31105042 -47.15077591]
[176.74832153 -35.62744904]
[171.01202393 -20.88277245]
[173.10476685 -6.02947426]
[186.50148010 0.71795142]
[199.68188477 -6.44284678]
[212.86228943 -13.60364437]
[226.04269409 -20.76444244]
[232.09486389 -27.61605072]
[239.48422241 -27.93230057]
[252.77438354 -34.88725281]
[265.95480347 -42.04805374]
[279.02224731 -49.41296387]
[292.08969116 -56.77787399]
[305.15713501 -64.14278412]
[311.10202026 -71.08768463]
[318.48556519 -71.51881409]
[331.66595459 -78.67961884]
[344.84634399 -85.84041595]
[358.02676392 -93.00121307]
[362.27059937 -108.22505188]
[376.07717896 -115.91621399]
[391.25531006 -111.51165009]
[398.80004883 -97.62452698]
[394.23526001 -82.49382019]
[380.26916504 -75.09631348]
[365.18756104 -79.82080841]
[352.00714111 -72.66001129]
[338.82675171 -65.49921417]
[325.64636230 -58.33841705]
[312.52203369 -51.07534409]
[299.45458984 -43.71043015]
[286.38714600 -36.34552002]
[273.31970215 -28.98060799]
[271.19448853 -24.69628143]
[266.35162354 -21.70505714]
[259.72933960 -21.59708405]
[246.43917847 -14.64213085]
[233.20349121 -7.58404207]
[220.02308655 -0.42324379]
[206.84268188 6.73755455]
[193.66227722 13.89835262]
[193.13781738 21.37999153]
[205.57194519 29.77000999]
[192.08888245 36.34327316]
[191.56442261 43.82491302]
[203.61686707 52.75454330]
[215.66932678 61.68417740]
[227.72178650 70.61380768]
[239.77423096 79.54344177]
[251.82669067 88.47307587]
[263.87915039 97.40270996]
[275.93161011 106.33234406]
[287.98403931 115.26197815]
[300.03649902 124.19161224]
[312.08895874 133.12124634]
[327.25354004 129.30419922]
[341.30117798 136.17425537]
[347.59902954 150.48757935]
[343.17343140 165.48583984]
[330.11401367 174.08734131]
[314.58703613 172.23071289]
[303.92388916 160.79257202]
[303.15933228 145.17369080]
[291.10687256 136.24406433]
[279.05441284 127.31443024]
[267.00195312 118.38479614]
[254.94950867 109.45516205]
[242.89706421 100.52552795]
[230.84460449 91.59590149]
[218.79214478 82.66626740]
[206.73970032 73.73663330]
[194.68724060 64.80699921]
[182.63478088 55.87736511]
[167.63659668 56.11064148]
[155.86769104 65.41078949]
[144.09877014 74.71092987]
[132.32986450 84.01107025]
[120.56094360 93.31121826]
[134.79985046 111.26736450]
[130.36303711 141.64105225]
[131.76072693 156.57579041]
[133.15841675 171.51052856]
[146.12400818 180.25280762]
[150.38708496 195.29808044]
[143.93475342 209.54241943]
[129.81359863 216.26010132]
[114.69120789 212.27922058]
[105.70790863 199.47944641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[8 16]
[9 15]
[10 14]
[19 67]
[20 66]
[21 65]
[22 64]
[23 63]
[24 62]
[25 61]
[26 60]
[27 59]
[29 55]
[30 54]
[31 53]
[33 52]
[34 51]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[69 191]
[70 190]
[71 189]
[72 188]
[73 187]
[77 116]
[78 115]
[80 113]
[81 112]
[82 111]
[84 109]
[85 108]
[86 107]
[87 106]
[88 105]
[89 104]
[90 103]
[91 100]
[92 99]
[93 98]
[117 154]
[118 153]
[119 152]
[120 151]
[122 150]
[123 149]
[124 146]
[125 145]
[126 144]
[127 143]
[129 142]
[130 141]
[131 140]
[132 139]
[158 186]
[159 185]
[160 184]
[161 183]
[162 182]
[163 181]
[164 180]
[165 179]
[166 178]
[167 177]
[168 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
