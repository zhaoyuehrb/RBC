%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCUCCUGCCGCCUCCUAGCGGCCCGGGCCGCGACCACGCUGCCCGCCCCGCCCCGAGCCCGGGGCCCCGCGCUCCGCUGCAGUGAAGGGCGUUGCAUUUCCCGGGGUACCCCGAGCUGCCCUCUUGUGACUCCUUGGCGGGGCGGCUGGUCAGACAAAGUGUGCCUCCGGGCCGGAGGGCGACCCAGAGGAGGGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[179.91860962 734.24261475]
[166.82264709 742.01538086]
[151.69667053 743.78308105]
[137.16134644 739.23950195]
[125.73500824 729.17175293]
[119.39733887 715.32427979]
[119.24637604 700.09606934]
[125.30828094 686.12567139]
[136.53277588 675.83337402]
[150.97517395 671.00250244]
[152.37286377 656.06781006]
[145.85513306 642.67492676]
[154.84466553 629.65576172]
[156.24235535 614.72100830]
[157.64004517 599.78625488]
[159.03773499 584.85150146]
[160.43542480 569.91680908]
[161.83311462 554.98205566]
[152.15318298 532.51470947]
[158.87149048 512.01855469]
[175.05656433 502.67474365]
[173.89131165 487.72006226]
[172.72604370 472.76541138]
[171.56079102 457.81072998]
[170.39553833 442.85604858]
[169.23027039 427.90139771]
[168.06501770 412.94671631]
[166.89976501 397.99206543]
[165.50207520 383.05731201]
[163.87228394 368.14611816]
[162.12660217 353.24804688]
[160.26512146 338.36398315]
[158.40364075 323.47994995]
[155.73512268 308.71920776]
[152.26748657 294.12554932]
[148.79983521 279.53186035]
[145.33218384 264.93817139]
[141.86454773 250.34451294]
[137.25637817 244.55941772]
[138.45832825 235.49693298]
[135.21806335 220.85108948]
[131.97778320 206.20524597]
[128.73751831 191.55940247]
[125.49725342 176.91355896]
[122.25698853 162.26771545]
[119.01672363 147.62187195]
[115.66266632 133.00167847]
[112.19501495 118.40799713]
[108.72737122 103.81432343]
[110.71363068 119.93975067]
[93.85784912 135.21528625]
[63.67032242 132.66912842]
[49.25425720 128.52459717]
[34.83819199 124.38008118]
[20.42212868 120.23554993]
[6.00606441 116.09102631]
[-8.40999985 111.94650269]
[-24.18555832 116.42575836]
[-35.76242447 104.81076050]
[-31.23131180 89.05001831]
[-15.25343990 85.35683441]
[-4.26547384 97.53043365]
[10.15058994 101.67496490]
[24.56665421 105.81948853]
[38.98271942 109.96401215]
[53.39878082 114.10853577]
[67.81484985 118.25306702]
[71.84732819 111.92937469]
[79.91228485 99.28198242]
[83.94476318 92.95829010]
[74.10583496 81.63594055]
[64.26690674 70.31359863]
[54.34022903 59.06810760]
[44.32640839 47.90014648]
[28.53387642 47.29065704]
[17.85930443 35.63608551]
[18.63572693 19.85087776]
[30.40250778 9.30012226]
[46.17862320 10.24339294]
[56.60438156 22.12106323]
[55.49436951 37.88632202]
[65.50819397 49.05428314]
[72.31909180 51.93772507]
[75.58924866 60.47467041]
[85.42817688 71.79701233]
[95.26710510 83.11936188]
[110.00663757 80.33614349]
[115.03939056 66.20562744]
[120.07213593 52.07511520]
[125.10488892 37.94459915]
[130.13763428 23.81408691]
[130.06962585 14.67249203]
[135.36009216 9.50398922]
[140.61198425 -4.54654741]
[145.86389160 -18.59708405]
[151.11578369 -32.64762115]
[156.36767578 -46.69815826]
[161.61958313 -60.74869537]
[155.20236206 -68.04705811]
[151.90774536 -77.12833405]
[152.14964294 -86.72779083]
[155.85250854 -95.52482605]
[162.46760559 -102.32460785]
[171.05386353 -106.22036743]
[180.41163635 -106.71416473]
[186.52690125 -120.41101837]
[192.64215088 -134.10786438]
[198.75740051 -147.80471802]
[204.87266541 -161.50155640]
[210.98791504 -175.19841003]
[203.12690735 -188.57690430]
[204.66441345 -204.01762390]
[215.00923157 -215.58328247]
[230.18354797 -218.82666016]
[244.35255432 -212.50061035]
[252.06796265 -199.03761292]
[250.36305237 -183.61448669]
[239.89337158 -172.16172791]
[224.68476868 -169.08316040]
[218.56950378 -155.38630676]
[212.45425415 -141.68945312]
[206.33900452 -127.99260712]
[200.22373962 -114.29576111]
[194.10848999 -100.59891510]
[202.99983215 -82.20082855]
[195.32704163 -62.94579697]
[175.67012024 -55.49679565]
[170.41821289 -41.44626236]
[165.16632080 -27.39572334]
[159.91442871 -13.34518719]
[154.66252136 0.70534921]
[149.41062927 14.75588608]
[144.26815796 28.84683800]
[139.23539734 42.97735214]
[134.20265198 57.10786438]
[129.16990662 71.23838043]
[124.13715363 85.36889648]
[123.32105255 100.34667969]
[126.78869629 114.94035339]
[130.25634766 129.53402710]
[135.28829956 137.16638184]
[133.66256714 144.38160706]
[136.90283203 159.02745056]
[140.14309692 173.67329407]
[143.38336182 188.31913757]
[146.62362671 202.96498108]
[149.86389160 217.61082458]
[153.10417175 232.25665283]
[156.45822144 246.87686157]
[159.92587280 261.47055054]
[163.39350891 276.06420898]
[166.86116028 290.65789795]
[170.32879639 305.25158691]
[178.16769409 292.46282959]
[192.35092163 287.58062744]
[206.40061951 292.83477783]
[213.89988708 305.82556152]
[211.42359924 320.61975098]
[200.10276794 330.46041870]
[185.10791016 330.85305786]
[173.28768921 321.61846924]
[175.14916992 336.50250244]
[177.01065063 351.38656616]
[181.18354797 359.52044678]
[178.78347778 366.51632690]
[180.41326904 381.42752075]
[184.01345825 386.98675537]
[184.22795105 392.67486572]
[181.85443115 396.82678223]
[183.01968384 411.78146362]
[184.18495178 426.73614502]
[185.35020447 441.69079590]
[186.51545715 456.64547729]
[187.68070984 471.60015869]
[188.84597778 486.55480957]
[190.01123047 501.50949097]
[205.35900879 505.71435547]
[216.89801025 519.94122314]
[218.29963684 540.63360596]
[226.65742493 553.08941650]
[235.01521301 565.54522705]
[248.86135864 575.32891846]
[243.29299927 591.34234619]
[226.36392212 590.42456055]
[222.55938721 573.90301514]
[214.20159912 561.44720459]
[205.84382629 548.99139404]
[198.57482910 550.83843994]
[184.03684998 554.53265381]
[176.76785278 556.37976074]
[175.37016296 571.31445312]
[173.97247314 586.24920654]
[172.57478333 601.18395996]
[171.17709351 616.11871338]
[169.77940369 631.05346680]
[176.19715881 645.51452637]
[167.30760193 657.46545410]
[165.90991211 672.40020752]
[179.20515442 679.82696533]
[188.32504272 692.02313232]
[191.68948364 706.87579346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 198]
[11 197]
[13 195]
[14 194]
[15 193]
[16 192]
[17 191]
[18 190]
[21 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 170]
[28 169]
[29 166]
[30 165]
[31 163]
[32 162]
[33 161]
[34 153]
[35 152]
[36 151]
[37 150]
[38 149]
[40 148]
[41 147]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 140]
[48 139]
[49 138]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[70 86]
[71 85]
[72 84]
[73 82]
[74 81]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[105 124]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[179 187]
[180 186]
[181 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
