%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUUACGUCACAGUGGGCGGAAGUCGCGGCCGCUGUUUUGAAAUCGGGCCGCGGGGGGUCUCUCAAGCUGGUUCCAACGCUGAGGCCCCACAGCCUCCCAAUUCCGGGCAGACCCCUGACACCUGCUGUCUGGCCCCUUCCGGCCUGAAGCUGCAGCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[-201.60722351 704.66326904]
[-205.50604248 715.77178955]
[-212.36264038 725.31811523]
[-221.61373901 732.53674316]
[-232.50465393 736.85247803]
[-244.15075684 737.92657471]
[-255.60935974 735.68298340]
[-262.98535156 748.74414062]
[-270.36135864 761.80535889]
[-277.73733521 774.86657715]
[-273.26080322 790.02362061]
[-280.88638306 803.86651611]
[-296.08990479 808.18255615]
[-309.85144043 800.41107178]
[-314.00646973 785.16271973]
[-306.08993530 771.48413086]
[-290.79852295 767.49053955]
[-283.42254639 754.42938232]
[-276.04653931 741.36816406]
[-268.67056274 728.30700684]
[-279.82476807 713.75073242]
[-283.54461670 695.74182129]
[-279.04589844 677.85937500]
[-267.18225098 663.67694092]
[-250.28352356 656.04840088]
[-231.69847107 656.53375244]
[-225.33764648 642.94921875]
[-218.97680664 629.36462402]
[-212.61596680 615.78009033]
[-206.25512695 602.19555664]
[-199.89430237 588.61102295]
[-201.50440979 573.80371094]
[-188.64518738 564.58679199]
[-182.28434753 551.00225830]
[-183.89445496 536.19494629]
[-171.03523254 526.97808838]
[-164.67439270 513.39349365]
[-158.31355286 499.80899048]
[-172.82801819 503.59454346]
[-185.85630798 496.16058350]
[-189.98178101 481.73904419]
[-182.85592651 468.53973389]
[-168.53529358 464.07659912]
[-155.17221069 470.89041138]
[-150.37394714 485.10266113]
[-142.50604248 472.33175659]
[-134.63815308 459.56085205]
[-126.77025604 446.78991699]
[-118.90235901 434.01901245]
[-111.03446960 421.24810791]
[-103.16657257 408.47717285]
[-95.29867554 395.70626831]
[-95.21038055 380.81192017]
[-81.38433075 373.12097168]
[-73.51643372 360.35003662]
[-65.64854431 347.57913208]
[-57.78064728 334.80822754]
[-49.91275024 322.03729248]
[-42.04485321 309.26638794]
[-34.17695999 296.49548340]
[-26.30906487 283.72457886]
[-33.58429718 272.13796997]
[-35.15549088 258.48046875]
[-30.65827179 245.41921997]
[-20.91897011 235.52969360]
[-7.80344772 230.78805542]
[6.14020586 232.17626953]
[14.24981785 219.55746460]
[22.35943031 206.93865967]
[22.73128128 192.04869080]
[36.70124817 184.62234497]
[44.81085968 172.00355530]
[52.92047501 159.38475037]
[49.51331329 144.93045044]
[57.55785370 132.01765442]
[72.74195862 128.54191589]
[80.85157013 115.92311859]
[74.46732330 109.08596039]
[70.70312500 99.70913696]
[70.54280090 88.85374451]
[74.52684784 77.94747925]
[82.62245941 68.59776306]
[94.17173767 62.36157990]
[98.67097473 48.05225372]
[103.17021179 33.74292374]
[107.66944122 19.43359756]
[112.16867828 5.12426901]
[104.63864899 -8.77084446]
[109.21946716 -23.89670563]
[123.19342041 -31.27940750]
[138.27000427 -26.53892517]
[145.50454712 -12.48770237]
[140.60493469 2.53791928]
[126.47801208 9.62350559]
[121.97877502 23.93283272]
[117.47953796 38.24216080]
[112.98030090 52.55149078]
[108.48106384 66.86081696]
[114.19568634 71.71809387]
[123.91023254 60.28884888]
[133.62477112 48.85960770]
[143.33950806 37.43051529]
[154.76844788 47.14541245]
[145.05401611 58.57415390]
[135.33947754 70.00339508]
[125.62492371 81.43264008]
[131.33955383 86.28990936]
[144.73690796 79.54374695]
[158.13427734 72.79758453]
[166.67396545 58.79738617]
[183.05958557 59.46332932]
[190.43501282 74.11035156]
[181.21302795 87.67084503]
[164.88043213 86.19494629]
[151.48307800 92.94110870]
[138.08570862 99.68727112]
[119.23211670 124.94175720]
[93.47036743 124.03273010]
[85.36075592 136.65153503]
[88.50682068 151.90734863]
[80.10276031 164.58908081]
[65.53927612 167.49435425]
[57.42966461 180.11315918]
[49.32005310 192.73196411]
[48.36814880 208.52450562]
[34.97823334 215.04826355]
[26.86862183 227.66706848]
[18.75900841 240.28587341]
[26.48303604 254.88110352]
[25.80990410 271.28662109]
[17.01710892 285.04205322]
[2.57689023 292.45507812]
[-13.53815079 291.59246826]
[-21.40604591 304.36337280]
[-29.27394104 317.13427734]
[-37.14183807 329.90521240]
[-45.00973129 342.67611694]
[-52.87762833 355.44702148]
[-60.74552155 368.21795654]
[-68.61341858 380.98886108]
[-69.26448059 396.79666138]
[-82.52776337 403.57415771]
[-90.39566040 416.34509277]
[-98.26354980 429.11599731]
[-106.13144684 441.88690186]
[-113.99934387 454.65780640]
[-121.86724091 467.42874146]
[-129.73513794 480.19964600]
[-137.60302734 492.97055054]
[-144.72901917 506.16979980]
[-151.08985901 519.75433350]
[-157.45068359 533.33886719]
[-156.29554749 549.11785889]
[-168.69979858 557.36309814]
[-175.06063843 570.94763184]
[-173.90550232 586.72662354]
[-186.30975342 594.97186279]
[-192.67059326 608.55639648]
[-199.03143311 622.14093018]
[-205.39225769 635.72546387]
[-211.75309753 649.30999756]
[-218.11393738 662.89459229]
[-209.58232117 671.11883545]
[-203.72004700 681.39514160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 20]
[8 19]
[9 18]
[10 17]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[31 157]
[33 155]
[34 154]
[36 152]
[37 151]
[38 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[54 140]
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[67 128]
[68 127]
[69 126]
[71 124]
[72 123]
[73 122]
[76 119]
[77 118]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[107 116]
[108 115]
[109 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
