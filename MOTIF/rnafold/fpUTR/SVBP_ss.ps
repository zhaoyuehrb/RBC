%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGCCGCUCCUGCGGGCGGAAGCCUCCUGGCGCUCGGCCCUGCGCCCCUCCCCCCGGCGCGCGGCCCCGCCCAGGACGAGGGGCGGUGGGCAGGCAGCGCUGGGUCCAGUGGUCGGGGGAAGGCGAGGAUUACCCUCCCGGAGGCGUUGUCUGCGACUCGGCGGAGGCUCCAACUUCCAGUGGCCCGGUCGGGAAAGAUCAGAGCCUCCUAAGAAAUAUCCAGAAGUCAAGCC\
) } def
/len { sequence length } bind def

/coor [
[315.14294434 319.12203979]
[329.21524048 313.92871094]
[344.03918457 311.63745117]
[359.02273560 312.33978271]
[373.57067871 316.00885010]
[361.89675903 306.58975220]
[350.22280884 297.17065430]
[338.54888916 287.75152588]
[326.04721069 292.40939331]
[312.76925659 290.26876831]
[302.19601440 281.78262329]
[297.15267944 269.08151245]
[299.05422974 255.43943787]
[287.50671387 245.86578369]
[275.95919800 236.29211426]
[264.41171265 226.71844482]
[252.86419678 217.14479065]
[241.31668091 207.57112122]
[229.76918030 197.99746704]
[218.22166443 188.42379761]
[206.67414856 178.85014343]
[194.61593628 179.66540527]
[184.91923523 171.79888916]
[183.11795044 159.03849792]
[171.69889832 149.31196594]
[160.27986145 139.58543396]
[148.86080933 129.85890198]
[137.44175720 120.13237762]
[126.02271271 110.40585327]
[105.96537781 124.70796204]
[85.01816559 117.19956207]
[71.99462891 124.64184570]
[58.97109604 132.08413696]
[45.94756317 139.52641296]
[32.92403412 146.96870422]
[31.36752319 162.40751648]
[21.00848579 173.96043396]
[5.83017969 177.18513489]
[-8.33102608 170.84164429]
[-16.02985764 157.36915588]
[-14.30595970 141.94815063]
[-3.82220411 130.50828552]
[11.39019012 127.44843292]
[25.48174858 133.94517517]
[38.50527954 126.50288391]
[51.52881241 119.06060028]
[64.55234528 111.61831665]
[77.57588196 104.17603302]
[77.28929901 97.87760925]
[78.73794556 91.74134064]
[67.31889343 82.01481628]
[55.89984894 72.28828430]
[44.48080063 62.56175613]
[33.06175232 52.83522797]
[21.02108002 43.88971710]
[8.41209984 35.76484299]
[-4.19688034 27.63996315]
[-16.80586052 19.51508713]
[-29.41484070 11.39020920]
[-42.02381897 3.26533246]
[-54.63280106 -4.85954475]
[-67.24177551 -12.98442173]
[-79.90455627 -21.02519608]
[-92.62057495 -28.98150826]
[-111.04119873 -29.21528816]
[-118.64537811 -45.03932571]
[-131.46617126 -52.82566833]
[-144.28697205 -60.61200714]
[-157.10777283 -68.39834595]
[-170.03108215 -76.01333618]
[-183.05462646 -83.45561981]
[-196.07815552 -90.89790344]
[-209.10168457 -98.34018707]
[-222.12521362 -105.78247070]
[-236.21678162 -99.28572845]
[-251.42916870 -102.34558105]
[-261.91293335 -113.78544617]
[-263.63681030 -129.20646667]
[-255.93798828 -142.67893982]
[-241.77677917 -149.02243042]
[-226.59848022 -145.79772949]
[-216.23944092 -134.24481201]
[-214.68293762 -118.80600739]
[-201.65939331 -111.36371613]
[-188.63586426 -103.92143250]
[-175.61233521 -96.47914886]
[-162.58880615 -89.03686523]
[-157.84252930 -89.40137482]
[-152.81417847 -86.79999542]
[-149.32144165 -81.21914673]
[-136.50064087 -73.43280792]
[-123.67983246 -65.64646912]
[-110.85903931 -57.86012650]
[-99.04881287 -60.42605209]
[-88.30810547 -54.05853653]
[-84.66426086 -41.69752502]
[-71.94824219 -33.74121094]
[-64.62345886 -32.85934448]
[-59.11690140 -25.59340096]
[-46.50792313 -17.46852493]
[-33.89894104 -9.34364700]
[-21.28996277 -1.21877015]
[-8.68098259 6.90610695]
[3.92799687 15.03098392]
[16.53697586 23.15586090]
[29.14595604 31.28073883]
[23.59972191 17.34376335]
[25.67734909 2.48834491]
[34.83434677 -9.39228630]
[48.67089462 -15.18451500]
[63.56078339 -13.37034512]
[75.60174561 -4.42522383]
[81.63815308 9.30655670]
[80.08801270 24.22624397]
[71.35757446 36.42376328]
[57.73487091 42.70244980]
[42.78828049 41.41617966]
[54.20732880 51.14271164]
[65.62638092 60.86923981]
[77.04542542 70.59576416]
[88.46446991 80.32229614]
[97.14831543 75.61771393]
[107.70239258 74.86644745]
[118.29325104 78.76747131]
[123.94113922 64.87137604]
[124.27079773 55.76053619]
[129.75779724 50.82870483]
[135.59016418 37.00902557]
[141.42253113 23.18934631]
[147.25488281 9.36966705]
[142.57063293 -5.97429752]
[151.76487732 -19.12135887]
[167.78460693 -19.98621559]
[178.34083557 -7.90542507]
[175.33573914 7.85366583]
[161.07456970 15.20203018]
[155.24220276 29.02170944]
[149.40983582 42.84138870]
[143.57748413 56.66106796]
[137.83723450 70.51926422]
[132.18934631 84.41535187]
[135.74923706 98.98680115]
[147.16828918 108.71333313]
[158.58734131 118.43985748]
[170.00639343 128.16638184]
[181.42543030 137.89291382]
[192.84448242 147.61944580]
[211.03385925 150.53843689]
[216.24781799 167.30262756]
[227.79533386 176.87629700]
[239.34283447 186.44995117]
[250.89035034 196.02362061]
[262.43786621 205.59727478]
[273.98535156 215.17094421]
[285.53286743 224.74459839]
[297.08038330 234.31826782]
[308.62789917 243.89193726]
[324.96566772 239.48165894]
[340.55575562 245.62351990]
[349.31967163 259.70968628]
[347.96798706 276.07760620]
[359.64193726 285.49670410]
[371.31585693 294.91580200]
[382.98977661 304.33493042]
[396.25372314 311.33975220]
[410.61505127 315.67013550]
[424.97637939 320.00048828]
[439.33770752 324.33087158]
[453.69903564 328.66125488]
[468.06039429 332.99163818]
[482.42172241 337.32202148]
[496.78305054 341.65240479]
[510.12042236 331.23663330]
[526.87182617 330.83340454]
[540.42321777 340.40353394]
[545.54211426 356.00906372]
[559.95983887 360.14788818]
[574.37750244 364.28671265]
[588.82244873 368.32949829]
[603.29394531 372.27603149]
[609.74700928 370.97082520]
[615.09442139 372.82998657]
[618.09552002 376.52505493]
[632.45684814 380.85543823]
[646.81817627 385.18579102]
[661.17950439 389.51617432]
[678.08978271 388.29992676]
[683.93975830 404.21261597]
[670.26831055 414.23904419]
[656.84912109 403.87750244]
[642.48779297 399.54711914]
[628.12646484 395.21676636]
[613.76513672 390.88638306]
[599.34741211 386.74755859]
[584.87591553 382.80102539]
[577.60839844 384.07128906]
[570.23870850 378.70443726]
[555.82098389 374.56558228]
[541.40332031 370.42675781]
[531.69641113 379.57907104]
[518.63098145 382.76965332]
[505.59008789 379.06240845]
[496.00509644 369.32171631]
[492.45266724 356.01373291]
[478.09133911 351.68334961]
[463.73001099 347.35296631]
[449.36868286 343.02258301]
[435.00735474 338.69219971]
[420.64599609 334.36181641]
[406.28466797 330.03146362]
[391.92333984 325.70108032]
[403.15396118 335.64459229]
[412.18292236 347.62280273]
[418.64965820 361.15725708]
[422.29580688 375.70736694]
[422.97576904 390.69195557]
[420.66238403 405.51248169]
[415.44802856 419.57699585]
[407.54101562 432.32373047]
[397.25714111 443.24353027]
[385.00717163 451.90020752]
[371.28042603 457.94805908]
[356.62518311 461.14544678]
[341.62677002 461.36471558]
[326.88430786 458.59707642]
[312.98663330 452.95309448]
[300.48886108 444.65817261]
[289.89019775 434.04364014]
[281.61392212 421.53350830]
[275.99069214 407.62741089]
[273.24505615 392.88085938]
[273.48672485 377.88278198]
[276.70599365 363.23233032]
[282.77432251 349.51461792]
[291.44927979 337.27758789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 164]
[6 163]
[7 162]
[8 161]
[13 157]
[14 156]
[15 155]
[16 154]
[17 153]
[18 152]
[19 151]
[20 150]
[21 149]
[24 147]
[25 146]
[26 145]
[27 144]
[28 143]
[29 142]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[50 121]
[51 120]
[52 119]
[53 118]
[54 117]
[55 106]
[56 105]
[57 104]
[58 103]
[59 102]
[60 101]
[61 100]
[62 99]
[63 97]
[64 96]
[66 93]
[67 92]
[68 91]
[69 90]
[70 87]
[71 86]
[72 85]
[73 84]
[74 83]
[124 141]
[125 140]
[127 139]
[128 138]
[129 137]
[130 136]
[165 211]
[166 210]
[167 209]
[168 208]
[169 207]
[170 206]
[171 205]
[172 204]
[176 199]
[177 198]
[178 197]
[179 195]
[180 194]
[183 193]
[184 192]
[185 191]
[186 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
