%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:49:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SS18)
} def

/sequence { (\
GAGAGGCCGGCGUCUCUCCCCCAGUUUGCCGUUCACCCGGAGCGCUCGGGACUUGCCGAUAGUGGUGACGGCGGCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.010659909 ubox
1 18 0.995267129 ubox
2 15 0.010673348 ubox
2 17 0.998939995 ubox
3 14 0.010667794 ubox
3 16 0.999536049 ubox
4 13 0.010600601 ubox
4 15 0.999403090 ubox
5 14 0.999482766 ubox
6 13 0.997522086 ubox
6 75 0.027578353 ubox
7 12 0.995511203 ubox
7 74 0.027612279 ubox
8 73 0.027611956 ubox
9 72 0.027585121 ubox
11 70 0.027584737 ubox
12 69 0.027588544 ubox
13 68 0.027547666 ubox
14 67 0.027453853 ubox
16 65 0.007762075 ubox
17 51 0.012094783 ubox
17 64 0.006893834 ubox
18 50 0.013046377 ubox
18 65 0.003720375 ubox
19 49 0.012890647 ubox
19 50 0.061783824 ubox
19 64 0.003701681 ubox
19 73 0.003980317 ubox
19 74 0.028441239 ubox
20 48 0.012666032 ubox
20 49 0.061942646 ubox
20 50 0.041602713 ubox
20 73 0.028338592 ubox
20 74 0.033446639 ubox
21 48 0.061908913 ubox
21 49 0.041744468 ubox
21 73 0.033346569 ubox
21 74 0.046180193 ubox
22 48 0.041774786 ubox
22 73 0.046140681 ubox
23 46 0.074132091 ubox
24 43 0.005359025 ubox
24 45 0.074889447 ubox
24 75 0.449507794 ubox
24 78 0.326467494 ubox
25 42 0.005263886 ubox
25 44 0.072878050 ubox
25 74 0.369827278 ubox
25 77 0.280808805 ubox
26 41 0.004290031 ubox
26 42 0.012328094 ubox
26 73 0.251589106 ubox
26 74 0.363313058 ubox
26 76 0.205088315 ubox
26 77 0.638236338 ubox
27 41 0.013336133 ubox
27 73 0.503395531 ubox
27 76 0.761233522 ubox
28 43 0.005852459 ubox
28 45 0.010043156 ubox
28 72 0.599972916 ubox
28 75 0.796216506 ubox
29 40 0.073805651 ubox
29 42 0.005198273 ubox
29 44 0.007270582 ubox
29 71 0.600148161 ubox
29 74 0.796254496 ubox
30 39 0.073898178 ubox
30 44 0.013512626 ubox
30 70 0.600151637 ubox
30 73 0.796230167 ubox
31 38 0.072503912 ubox
31 43 0.017190562 ubox
31 69 0.599889460 ubox
31 72 0.796035886 ubox
32 41 0.004031573 ubox
32 42 0.017177608 ubox
32 68 0.426944927 ubox
32 71 0.770295282 ubox
33 40 0.004349634 ubox
33 41 0.017257167 ubox
33 67 0.074819794 ubox
33 68 0.842004348 ubox
33 70 0.232296076 ubox
33 71 0.013018856 ubox
34 39 0.004484614 ubox
34 40 0.017236378 ubox
34 67 0.987948516 ubox
34 70 0.016735640 ubox
35 66 0.990732854 ubox
36 50 0.050682060 ubox
36 65 0.987934248 ubox
36 71 0.008774467 ubox
37 49 0.051031544 ubox
37 50 0.005246094 ubox
37 64 0.983400710 ubox
37 65 0.080637975 ubox
37 70 0.007144505 ubox
37 71 0.088310315 ubox
38 44 0.022346254 ubox
38 48 0.051262271 ubox
38 49 0.005822857 ubox
38 58 0.011041135 ubox
38 64 0.111633426 ubox
38 67 0.008726100 ubox
38 70 0.093716302 ubox
39 43 0.021987855 ubox
39 46 0.009292305 ubox
39 47 0.050933516 ubox
39 57 0.011042263 ubox
39 63 0.079663114 ubox
39 66 0.008398858 ubox
39 69 0.094145353 ubox
40 45 0.021751168 ubox
40 46 0.042289279 ubox
40 47 0.008172073 ubox
40 56 0.010635621 ubox
41 46 0.008855256 ubox
41 53 0.004304334 ubox
41 54 0.003185818 ubox
42 52 0.004693789 ubox
42 56 0.003399510 ubox
42 63 0.966111343 ubox
42 66 0.087208760 ubox
43 55 0.004032464 ubox
43 58 0.013014243 ubox
43 62 0.971925361 ubox
43 64 0.079662620 ubox
43 65 0.067071677 ubox
43 67 0.003578550 ubox
44 54 0.003206690 ubox
44 56 0.010523955 ubox
44 57 0.009590313 ubox
44 63 0.170742318 ubox
44 66 0.003644239 ubox
45 55 0.013405265 ubox
45 62 0.172286506 ubox
45 65 0.003651135 ubox
46 59 0.970422102 ubox
46 61 0.104411161 ubox
47 55 0.004166286 ubox
47 58 0.995055162 ubox
48 54 0.003904205 ubox
48 57 0.995328093 ubox
49 56 0.994560887 ubox
49 57 0.023094618 ubox
50 56 0.028783381 ubox
51 63 0.009877094 ubox
51 66 0.003492562 ubox
52 62 0.010152293 ubox
52 65 0.003616475 ubox
52 74 0.003463197 ubox
53 61 0.010014697 ubox
53 64 0.003185013 ubox
53 68 0.037638430 ubox
53 74 0.006982895 ubox
53 77 0.058380304 ubox
54 67 0.041382726 ubox
54 73 0.009466753 ubox
54 76 0.068501165 ubox
55 63 0.003731979 ubox
55 66 0.055193189 ubox
55 72 0.012801894 ubox
55 75 0.070086945 ubox
56 62 0.003887765 ubox
56 65 0.056303228 ubox
56 71 0.012900539 ubox
56 74 0.070090530 ubox
57 64 0.056296036 ubox
57 70 0.012912408 ubox
57 73 0.070087743 ubox
58 63 0.039810002 ubox
58 69 0.012767146 ubox
58 72 0.069529291 ubox
60 67 0.008835405 ubox
61 66 0.009181269 ubox
62 69 0.068068652 ubox
63 68 0.067548844 ubox
63 70 0.007262341 ubox
64 69 0.010153556 ubox
1 18 0.9500000 lbox
2 17 0.9500000 lbox
3 16 0.9500000 lbox
4 15 0.9500000 lbox
5 14 0.9500000 lbox
6 13 0.9500000 lbox
7 12 0.9500000 lbox
26 77 0.9500000 lbox
27 76 0.9500000 lbox
28 75 0.9500000 lbox
29 74 0.9500000 lbox
30 73 0.9500000 lbox
31 72 0.9500000 lbox
32 71 0.9500000 lbox
33 68 0.9500000 lbox
34 67 0.9500000 lbox
35 66 0.9500000 lbox
36 65 0.9500000 lbox
37 64 0.9500000 lbox
42 63 0.9500000 lbox
43 62 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
showpage
end
%%EOF
