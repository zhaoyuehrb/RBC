%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:05:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCUUGCGCCGAUCUCGGCCUCAGCGUGAGCAUGCGCAGGUCCCCGCCCUCGCUGCGUUUGCGCUUGAGCGCCGAUAAUUUGGUGGCGGCGUCCGGAGGGUGCUGGUUUGUUCUCGGUGAACGGCGCGCGGGGUCUCUCCUGAGUGCGAGCUACGGGACCUUCGCC\
) } def
/len { sequence length } bind def

/coor [
[83.45913696 125.81970978]
[75.79339600 118.82279968]
[70.90087891 109.66946411]
[69.34209442 99.40834808]
[54.87118912 95.45955658]
[40.40028381 91.51076508]
[25.92938232 87.56197357]
[11.45847797 83.61318207]
[-2.14996791 91.19262695]
[-16.76926994 86.98184967]
[-23.91124535 73.96156311]
[-38.38214874 70.01277161]
[-52.85305405 66.06398010]
[-67.32395935 62.11518860]
[-81.79486084 58.16639709]
[-96.26576233 54.21760559]
[-112.30706787 64.24091339]
[-130.28330994 59.47627640]
[-138.95190430 43.38395691]
[-153.55810547 39.96942520]
[-168.16430664 36.55489349]
[-182.77050781 33.14036560]
[-197.37669373 29.72583389]
[-212.01364136 26.44561768]
[-226.68009949 23.29999352]
[-241.34655762 20.15436745]
[-256.01303101 17.00874138]
[-270.70776367 13.99797153]
[-285.42953491 11.12231255]
[-300.15130615 8.24665260]
[-314.87307739 5.37099314]
[-329.59484863 2.49533367]
[-344.31661987 -0.38032576]
[-359.03839111 -3.25598526]
[-373.76016235 -6.13164473]
[-388.06948853 3.89962506]
[-404.87942505 0.56279141]
[-413.90948486 -13.60478020]
[-428.68157959 -16.20950317]
[-443.45370483 -18.81422615]
[-456.30950928 -10.01843166]
[-471.25344849 -12.87042522]
[-479.55966187 -25.18067741]
[-494.33178711 -27.78540039]
[-509.10388184 -30.39012337]
[-524.32061768 -24.27588463]
[-537.05529785 -34.60834122]
[-534.20758057 -50.75835037]
[-518.70697021 -56.11216354]
[-506.49917603 -45.16223907]
[-491.72705078 -42.55751801]
[-476.95492554 -39.95279312]
[-464.93930054 -48.67975235]
[-449.92114258 -46.24863052]
[-440.84899902 -33.58634186]
[-426.07687378 -30.98161888]
[-411.30474854 -28.37689590]
[-401.86791992 -37.18287659]
[-388.88693237 -38.96052170]
[-377.08419800 -32.83641815]
[-370.88452148 -20.85341644]
[-356.16271973 -17.97775841]
[-341.44094849 -15.10209846]
[-326.71917725 -12.22643852]
[-311.99740601 -9.35077953]
[-297.27563477 -6.47511959]
[-282.55386353 -3.59946012]
[-267.83209229 -0.72380078]
[-260.63708496 -2.53451157]
[-252.86740112 2.34228158]
[-238.20094299 5.48790741]
[-223.53448486 8.63353348]
[-208.86801147 11.77915859]
[-201.64094543 10.10093212]
[-193.96217346 15.11963844]
[-179.35597229 18.53416824]
[-164.74977112 21.94869804]
[-150.14358521 25.36322784]
[-135.53738403 28.77775955]
[-127.34440613 20.77428627]
[-116.18539429 17.70465851]
[-104.81813049 20.44803429]
[-96.11048889 28.43184853]
[-92.31697083 39.74670410]
[-77.84606934 43.69549561]
[-63.37516403 47.64428711]
[-48.90426254 51.59307861]
[-34.43335724 55.54187012]
[-19.96245384 59.49066162]
[-7.19693995 51.90269470]
[7.53486633 55.70118713]
[15.40726948 69.14228058]
[29.87817383 73.09107208]
[44.34907532 77.03986359]
[58.81998062 80.98865509]
[73.29088593 84.93744659]
[87.66959381 71.92477417]
[106.98012543 70.14141083]
[123.49879456 80.30065918]
[130.61860657 98.33910370]
[145.34037781 101.21476746]
[160.06214905 104.09042358]
[174.78392029 106.96607971]
[189.50569153 109.84174347]
[204.22746277 112.71739960]
[219.25498962 107.76925659]
[230.26286316 117.80299377]
[244.98463440 120.67865753]
[259.70642090 123.55431366]
[274.47851562 126.15903473]
[289.29598999 128.49194336]
[304.11346436 130.82484436]
[318.93093872 133.15776062]
[333.74841309 135.49066162]
[348.56588745 137.82356262]
[363.40148926 132.32672119]
[374.77053833 141.94931030]
[389.58801270 144.28221130]
[404.40548706 146.61512756]
[419.22296143 148.94802856]
[434.04043579 151.28092957]
[443.04336548 149.52073669]
[449.10766602 153.79521179]
[463.87979126 156.39993286]
[476.73559570 147.60414124]
[491.67953491 150.45613098]
[499.98574829 162.76638794]
[514.75787354 165.37110901]
[529.52996826 167.97583008]
[541.39196777 157.78625488]
[557.02899170 157.65701294]
[569.05780029 167.64913940]
[571.79864502 183.04464722]
[563.95751953 196.57424927]
[549.23663330 201.84968567]
[534.58685303 196.38005066]
[526.92523193 182.74795532]
[512.15313721 180.14321899]
[497.38101196 177.53849792]
[485.36538696 186.26545715]
[470.34722900 183.83433533]
[461.27508545 171.17204285]
[446.50296021 168.56732178]
[431.70755005 166.09840393]
[416.89007568 163.76550293]
[402.07260132 161.43260193]
[387.25512695 159.09968567]
[372.43765259 156.76678467]
[358.66186523 162.43049622]
[346.23300171 152.64103699]
[331.41552734 150.30813599]
[316.59805298 147.97523499]
[301.78057861 145.64231873]
[286.96310425 143.30941772]
[272.14562988 140.97651672]
[267.79852295 143.03657532]
[262.10748291 142.36083984]
[256.83074951 138.27609253]
[242.10897827 135.40042114]
[227.38720703 132.52476501]
[213.41268921 137.67860413]
[201.35180664 127.43917084]
[186.63003540 124.56351471]
[171.90826416 121.68785858]
[157.18649292 118.81219482]
[142.46472168 115.93653870]
[127.74294281 113.06087494]
[121.79676056 121.56753540]
[113.35344696 127.60331726]
[103.38029480 130.47673035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 96]
[5 95]
[6 94]
[7 93]
[8 92]
[11 89]
[12 88]
[13 87]
[14 86]
[15 85]
[16 84]
[19 79]
[20 78]
[21 77]
[22 76]
[23 75]
[24 73]
[25 72]
[26 71]
[27 70]
[28 68]
[29 67]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[35 61]
[38 57]
[39 56]
[40 55]
[43 52]
[44 51]
[45 50]
[100 167]
[101 166]
[102 165]
[103 164]
[104 163]
[105 162]
[107 160]
[108 159]
[109 158]
[110 155]
[111 154]
[112 153]
[113 152]
[114 151]
[115 150]
[117 148]
[118 147]
[119 146]
[120 145]
[121 144]
[123 143]
[124 142]
[127 139]
[128 138]
[129 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
