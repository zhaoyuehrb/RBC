%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAAUCACUUCUGUCUUUAUGUAACAGUCUGUGGCCCAGACCCAGGCAAGUGGUAAAUAUUUACCUUCACGCUGGAGCCAAGAUCGCUGCGGGGAGUCCCGUGAAGCACCACUGCCCUCUAAGACCUUGGAAGGGGAAACACCAGAAGGUGUGGGUGCUGAGCUCCGCUGCGUCAGACUGCCAGGACCUGAGUGGAACUCAGUGCUGAAACCUGGGUUCUCACUGCAGCUGGAUAGCAGCUCUGCCCGG\
) } def
/len { sequence length } bind def

/coor [
[191.22273254 379.29086304]
[196.31581116 365.18197632]
[206.72203064 354.37872314]
[220.63041687 348.76116943]
[235.62048340 349.30697632]
[249.08470154 355.92205811]
[262.54211426 362.54763794]
[253.90858459 350.28134155]
[245.27505493 338.01501465]
[236.64154053 325.74871826]
[228.00801086 313.48242188]
[213.33515930 311.19265747]
[204.40480042 298.87588501]
[206.90599060 283.50115967]
[198.27246094 271.23486328]
[189.63893127 258.96853638]
[181.00540161 246.70223999]
[177.63929749 245.73764038]
[174.56695557 243.10954285]
[172.55851746 238.97077942]
[172.28822327 233.80944824]
[164.12126160 221.22769165]
[154.00688171 220.01683044]
[146.05239868 213.30807495]
[143.02751160 203.12268066]
[146.15701294 192.73973083]
[138.30754089 179.95748901]
[130.45805359 167.17524719]
[122.60857391 154.39300537]
[114.75909424 141.61076355]
[106.90961456 128.82853699]
[99.06013489 116.04629517]
[85.47655487 109.68339539]
[70.63167572 111.83500671]
[55.78678894 113.98662567]
[40.94190598 116.13823700]
[26.11077881 118.38271332]
[11.29398823 120.71995544]
[-3.52280283 123.05720520]
[-18.33959389 125.39444733]
[-24.12351608 140.89746094]
[-36.86824036 151.30264282]
[-53.02931595 153.83865356]
[-68.17353821 147.90586853]
[-78.19499969 135.21463013]
[-92.98137665 137.73715210]
[-107.76775360 140.25965881]
[-120.07022858 150.20750427]
[-133.91740417 144.72070312]
[-148.70378113 147.24320984]
[-163.49015808 149.76571655]
[-178.27653503 152.28822327]
[-193.06291199 154.81072998]
[-203.47369385 167.01708984]
[-219.50262451 166.34416199]
[-228.85369873 153.30816650]
[-224.35354614 137.90919495]
[-209.45431519 131.96003723]
[-195.58541870 140.02435303]
[-180.79904175 137.50184631]
[-166.01266479 134.97933960]
[-151.22628784 132.45683289]
[-136.43991089 129.93432617]
[-125.19506073 120.16690063]
[-110.29026031 125.47327423]
[-95.50388336 122.95076752]
[-80.71750641 120.42826080]
[-76.83611298 107.34873962]
[-67.65797424 97.16496277]
[-54.92875671 91.89888000]
[-41.10639954 92.62892914]
[-28.88654900 99.26973724]
[-20.67683792 110.57765961]
[-5.86004734 108.24040985]
[8.95674324 105.90316772]
[23.77353287 103.56592560]
[29.87501717 99.43002319]
[38.79029083 101.29335785]
[53.63517380 99.14173889]
[68.48005676 96.99012756]
[83.32494354 94.83850861]
[69.67849731 88.61158752]
[66.85135651 73.88042450]
[77.22308350 63.04403305]
[92.06393433 65.22326660]
[98.88256836 78.58396912]
[100.38201904 63.65910339]
[101.88146973 48.73423767]
[95.56243134 34.22974014]
[104.53323364 22.33966446]
[106.03268433 7.41479731]
[107.53213501 -7.51006937]
[109.03157806 -22.43493652]
[110.53102875 -37.35980225]
[112.03047943 -52.28467178]
[104.49378967 -62.73091125]
[106.03383636 -75.11627960]
[115.28657532 -82.88289642]
[116.97270966 -97.78782654]
[104.69504547 -89.17046356]
[89.90043640 -91.64424133]
[81.09403992 -103.78704071]
[83.33850098 -118.61816406]
[95.34352112 -127.61147308]
[110.20761871 -125.59687042]
[119.38569641 -113.73248291]
[122.18534851 -128.46890259]
[124.98500061 -143.20530701]
[127.78466034 -157.94172668]
[130.58430481 -172.67814636]
[133.38397217 -187.41455078]
[124.38334656 -191.67726135]
[117.22466278 -200.00683594]
[113.72270966 -211.49833679]
[115.21936798 -224.46020508]
[122.25608826 -236.66307068]
[122.44382477 -251.66189575]
[122.63156128 -266.66070557]
[122.81930542 -281.65954590]
[122.91317749 -296.65924072]
[122.91317749 -311.65924072]
[122.91317749 -326.65924072]
[122.91317749 -341.65924072]
[114.24947357 -355.58306885]
[122.21360016 -369.91848755]
[138.61274719 -369.91848755]
[146.57687378 -355.58306885]
[137.91317749 -341.65924072]
[137.91317749 -326.65924072]
[137.91317749 -311.65924072]
[137.91317749 -296.65924072]
[141.04785156 -289.98785400]
[137.81813049 -281.47180176]
[137.63038635 -266.47299194]
[137.44265747 -251.47415161]
[137.25491333 -236.47532654]
[144.48498535 -234.48135376]
[155.16853333 -245.01045227]
[158.94514465 -230.49337769]
[166.17521667 -228.49938965]
[173.70230103 -241.47410583]
[181.22938538 -254.44880676]
[188.75646973 -267.42352295]
[196.28355408 -280.39822388]
[195.77665710 -296.78955078]
[209.85906982 -305.19296265]
[224.04402161 -296.96377563]
[223.73922729 -280.56747437]
[209.25825500 -272.87115479]
[201.73117065 -259.89642334]
[194.20410156 -246.92172241]
[186.67701721 -233.94702148]
[179.14993286 -220.97232056]
[170.76736450 -192.46276855]
[148.12037659 -184.61489868]
[145.32072449 -169.87849426]
[142.52107239 -155.14207458]
[139.72142029 -140.40565491]
[136.92176819 -125.66924286]
[134.12211609 -110.93282318]
[131.87763977 -96.10169983]
[130.19151306 -81.19676971]
[138.05273438 -65.49472809]
[126.95534515 -50.78522110]
[125.45589447 -35.86035538]
[123.95644379 -20.93548775]
[122.45700073 -6.01062155]
[120.95755005 8.91424561]
[119.45809937 23.83911324]
[125.88439178 37.27608109]
[116.80633545 50.23368454]
[115.30688477 65.15855408]
[113.80744171 80.08341980]
[119.00783539 96.54938507]
[111.84236908 108.19680786]
[119.69184875 120.97904968]
[127.54133606 133.76129150]
[135.39080811 146.54353333]
[143.24029541 159.32577515]
[151.08978271 172.10800171]
[158.93925476 184.89024353]
[177.08290100 193.71343994]
[176.70303345 213.06072998]
[184.86999512 225.64248657]
[193.27171326 238.06871033]
[201.90524292 250.33502197]
[210.53875732 262.60131836]
[219.17228699 274.86764526]
[234.48922729 277.70123291]
[243.07011414 290.26400757]
[240.27432251 304.84887695]
[248.90783691 317.11520386]
[257.54135132 329.38150024]
[266.17489624 341.64779663]
[274.80841064 353.91412354]
[286.02648926 363.87176514]
[299.23034668 370.98922729]
[312.43417358 378.10671997]
[325.63803101 385.22418213]
[338.84188843 392.34164429]
[352.04571533 399.45913696]
[365.24957275 406.57659912]
[378.45343018 413.69409180]
[391.90347290 406.13763428]
[407.30230713 407.07522583]
[419.73623657 416.20764160]
[425.23764038 430.62075806]
[422.05102539 445.71542358]
[411.19320679 456.67498779]
[396.12893677 460.00225830]
[381.66510010 454.63555908]
[372.41711426 442.28735352]
[371.33593750 426.89791870]
[358.13208008 419.78045654]
[344.92825317 412.66296387]
[331.72439575 405.54550171]
[318.52056885 398.42803955]
[305.31671143 391.31054688]
[292.11285400 384.19308472]
[278.90902710 377.07559204]
[273.29998779 382.05441284]
[286.23681641 389.64639282]
[283.01412964 404.29611206]
[268.08554077 405.75811768]
[262.08190918 392.01205444]
[256.47286987 396.99090576]
[261.97378540 410.94580078]
[267.47470093 424.90072632]
[273.14984131 438.78573608]
[278.99832153 452.59860229]
[284.84680176 466.41146851]
[290.69528198 480.22430420]
[304.96502686 487.55603027]
[307.98849487 503.31161499]
[297.44638062 515.40472412]
[281.42565918 514.55853271]
[272.21606445 501.42221069]
[276.88241577 486.07281494]
[271.03393555 472.25994873]
[265.18545532 458.44708252]
[259.33697510 444.63421631]
[255.34858704 442.05001831]
[252.92726135 436.94458008]
[253.51976013 430.40164185]
[248.01884460 416.44671631]
[242.51792908 402.49179077]
[240.65509033 417.37567139]
[225.90844727 420.12091064]
[211.32493591 416.61074829]
[199.44255066 407.45602417]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[14 188]
[15 187]
[16 186]
[17 185]
[21 184]
[22 183]
[26 181]
[27 180]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[33 81]
[34 80]
[35 79]
[36 78]
[37 76]
[38 75]
[39 74]
[40 73]
[45 67]
[46 66]
[47 65]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[86 173]
[87 172]
[88 171]
[90 169]
[91 168]
[92 167]
[93 166]
[94 165]
[95 164]
[98 162]
[99 161]
[106 160]
[107 159]
[108 158]
[109 157]
[110 156]
[111 155]
[116 136]
[117 135]
[118 134]
[119 133]
[120 131]
[121 130]
[122 129]
[123 128]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
[196 220]
[197 219]
[198 218]
[199 217]
[200 216]
[201 215]
[202 214]
[203 213]
[226 246]
[227 245]
[228 244]
[229 241]
[230 240]
[231 239]
[232 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
