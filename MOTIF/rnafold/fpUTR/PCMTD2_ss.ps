%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCAGGCCGUUGUGCGCAGGCGCAGAGGCGGCGGCGGCGGCGGCGGCGGCGGAUGUUUACGGCGGCCGAGGUUGGAGCGGCGCUGCUCGGCCGCGGACACACGAGGGACGCGCCCGAGGAGCUGCAGGUGGCAGCCCAGGCGGUCCGAACCCGUCGGCCGGCCGAGCCUGGAGUAUUGCCUAAGUGUAAUCUUGAAC\
) } def
/len { sequence length } bind def

/coor [
[129.64744568 217.55307007]
[125.48284149 203.14279175]
[121.31824493 188.73251343]
[117.15364075 174.32223511]
[112.98904419 159.91195679]
[108.37609100 145.63888550]
[103.31929779 131.51695251]
[98.26249695 117.39502716]
[83.42755127 115.17595673]
[74.45972443 127.20001984]
[65.49190521 139.22409058]
[63.44365692 154.91213989]
[49.63233948 160.48860168]
[40.66451645 172.51266479]
[31.69669533 184.53672791]
[22.72887230 196.56079102]
[13.76104832 208.58485413]
[4.79322529 220.60893250]
[3.41367364 236.94995117]
[-11.54091644 243.67990112]
[-24.68654442 233.87559509]
[-22.50011635 217.62284851]
[-7.23084021 211.64109802]
[1.73698282 199.61703491]
[10.70480633 187.59297180]
[19.67262840 175.56890869]
[28.64045143 163.54484558]
[37.60827637 151.52078247]
[39.01508331 136.69276428]
[53.46783829 130.25625610]
[62.43566132 118.23219299]
[71.40348053 106.20812988]
[66.79052734 91.93505859]
[52.48184204 87.43378448]
[38.17315292 82.93251801]
[23.86446381 78.43124390]
[8.37846184 81.67073822]
[-1.44039822 70.47077179]
[-15.74908733 65.96949768]
[-35.20206451 71.23554993]
[-47.65597534 56.45019913]
[-62.09835815 52.39833832]
[-76.54074097 48.34648132]
[-90.98312378 44.29462051]
[-104.64526367 51.77685165]
[-119.23416901 47.46195221]
[-126.28314209 34.39108276]
[-140.72552490 30.33922577]
[-155.16790771 26.28736687]
[-169.61029053 22.23550797]
[-184.98747253 25.95742035]
[-195.15159607 15.06980991]
[-209.59397888 11.01795101]
[-220.05673218 22.18885803]
[-234.51623535 27.20696068]
[-249.64979553 24.91913795]
[-261.97982788 15.85111427]
[-268.67297363 2.08665419]
[-268.19119263 -13.21127033]
[-260.64523315 -26.52730751]
[-247.76904297 -34.80152893]
[-232.52153015 -36.13257980]
[-218.40643311 -30.21459579]
[-208.66729736 -18.40748405]
[-205.54211426 -3.42443275]
[-191.09973145 0.62742627]
[-176.75555420 -3.38430357]
[-165.55842590 7.79312372]
[-151.11604309 11.84498310]
[-136.67366028 15.89684200]
[-122.23127747 19.94869995]
[-109.41199493 12.45193672]
[-94.70764160 16.35536003]
[-86.93126678 29.85223770]
[-72.48888397 33.90409851]
[-58.04649734 37.95595551]
[-43.60411453 42.00781631]
[-35.17293549 36.21727753]
[-24.72691345 36.02365112]
[-15.71563435 41.73261261]
[-11.24781704 51.66080856]
[3.06087136 56.16207886]
[17.52342033 52.60063171]
[28.36573410 64.12255859]
[42.67442322 68.62382507]
[56.98311234 73.12509918]
[71.29180145 77.62636566]
[107.00559235 86.23128510]
[118.67015076 76.80059052]
[130.33471680 67.36989594]
[141.99928284 57.93920517]
[153.66384888 48.50851059]
[165.32839966 39.07781982]
[176.99296570 29.64712524]
[188.65753174 20.21643257]
[200.24803162 10.69487095]
[211.76377869 1.08302224]
[217.40042114 -13.70004082]
[232.12933350 -15.91549683]
[243.64508057 -25.52734566]
[255.16082764 -35.13919449]
[250.51699829 -48.60786057]
[250.75033569 -62.82282639]
[255.81239319 -76.07600403]
[265.07574463 -86.78184509]
[277.41162109 -93.66700745]
[291.32748413 -95.92182159]
[305.14764404 -93.29542542]
[317.21493530 -86.12351227]
[328.87948608 -95.55420685]
[340.54403687 -104.98490143]
[352.20861816 -114.41558838]
[356.91952515 -122.25119019]
[364.12997437 -123.90081024]
[375.94052124 -133.14804077]
[387.75103760 -142.39527893]
[399.56158447 -151.64251709]
[400.25112915 -162.50782776]
[406.67800903 -171.02195740]
[416.52441406 -174.51554871]
[426.45373535 -172.06117249]
[438.54751587 -180.93476868]
[443.62051392 -188.54093933]
[450.90036011 -189.85076904]
[463.13134766 -198.53425598]
[475.36233521 -207.21774292]
[487.59332275 -215.90122986]
[499.82434082 -224.58470154]
[503.91406250 -240.09773254]
[518.65008545 -246.44036865]
[532.72821045 -238.74710083]
[535.34887695 -222.91954041]
[524.50177002 -211.09924316]
[508.50781250 -212.35371399]
[496.27682495 -203.67022705]
[484.04583740 -194.98675537]
[471.81484985 -186.30326843]
[459.58386230 -177.61978149]
[447.42108154 -168.84098816]
[435.32730103 -159.96739197]
[428.87088013 -141.74597168]
[408.80880737 -139.83198547]
[396.99826050 -130.58474731]
[385.18774414 -121.33750916]
[373.37719727 -112.09027863]
[361.63931274 -102.75102997]
[349.97473145 -93.32033539]
[338.31018066 -83.88964081]
[326.64559937 -74.45894623]
[331.36743164 -59.33569717]
[329.92233276 -43.51980591]
[322.50207520 -29.43451118]
[310.21609497 -19.24927139]
[294.92587280 -14.54564381]
[278.96276855 -16.07174683]
[264.77267456 -23.62344933]
[253.25692749 -14.01160049]
[241.74118042 -4.39975214]
[236.92823792 9.69580650]
[221.37562561 12.59876633]
[209.85989380 22.21061516]
[206.73669434 28.91565895]
[198.08822632 31.88099480]
[186.42366028 41.31168747]
[174.75909424 50.74238205]
[163.09452820 60.17307281]
[151.42997742 69.60376740]
[139.76541138 79.03446198]
[128.10084534 88.46515656]
[116.43627930 97.89584351]
[112.38442230 112.33822632]
[117.44122314 126.46015930]
[122.49801636 140.58207703]
[125.92287445 143.28094482]
[128.08818054 146.59741211]
[128.95457458 150.05807495]
[128.64105225 153.22558594]
[127.39932251 155.74736023]
[131.56391907 170.15763855]
[135.72851562 184.56791687]
[139.89312744 198.97819519]
[144.05772400 213.38845825]
[160.38328552 227.26168823]
[154.61582947 247.07394409]
[159.45129395 261.27316284]
[164.28675842 275.47241211]
[169.12222290 289.67166138]
[183.41233826 296.42208862]
[188.66496277 311.32797241]
[181.76382446 325.54589844]
[166.80323792 330.64065552]
[152.65905762 323.58956909]
[147.72276306 308.57595825]
[154.92298889 294.50711060]
[150.08752441 280.30786133]
[145.25205994 266.10864258]
[140.41659546 251.90940857]
[131.90446472 249.33520508]
[125.43619537 243.03350830]
[122.55420685 234.33010864]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[4 179]
[5 178]
[6 173]
[7 172]
[8 171]
[9 32]
[10 31]
[11 30]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[33 87]
[34 86]
[35 85]
[36 84]
[38 82]
[39 81]
[41 77]
[42 76]
[43 75]
[44 74]
[47 71]
[48 70]
[49 69]
[50 68]
[52 66]
[53 65]
[88 170]
[89 169]
[90 168]
[91 167]
[92 166]
[93 165]
[94 164]
[95 163]
[96 161]
[97 160]
[99 158]
[100 157]
[101 156]
[109 149]
[110 148]
[111 147]
[112 146]
[114 145]
[115 144]
[116 143]
[117 142]
[121 140]
[122 139]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
[184 197]
[185 196]
[186 195]
[187 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
