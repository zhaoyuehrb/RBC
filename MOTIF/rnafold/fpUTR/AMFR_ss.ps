%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUCCGCGCCGGCAGGGGCAGCAGCGGGAGCAGCGCGGGGCGGAGCGGCGCCAGCAGCCAGGAGCGGCCCGGCCCGGCCCGGCGCGGCGGCGGCGGCGGCAGCGGCAGCGGCAGCGACGCCAGAGCCCGUGGGCGCCGUUCGCGAGGCCGCCGCAGAGGCCCGGCCGCAGCGCAGGGAAGCCUGGGGGCCAGAGGUCGCCGCUGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[114.37907410 118.55284119]
[113.44692993 128.59375000]
[108.66256714 138.76695251]
[101.22682953 151.79421997]
[93.79108429 164.82148743]
[86.35534668 177.84875488]
[78.91960144 190.87602234]
[71.48386383 203.90328979]
[64.04811859 216.93057251]
[56.70911026 230.01257324]
[49.46722412 243.14859009]
[52.29473495 255.73251343]
[45.99313354 266.52423096]
[34.41136169 270.01385498]
[26.97562218 283.04113770]
[27.59766006 299.42849731]
[13.57463169 307.93063354]
[-0.66777599 299.80133057]
[-0.47819400 283.40325928]
[13.94835186 275.60540771]
[21.38409233 262.57812500]
[20.35224724 245.05917358]
[36.33119965 235.90670776]
[43.57308578 222.77069092]
[44.04949570 215.39598083]
[51.02085114 209.49482727]
[58.45659256 196.46755981]
[65.89233398 183.44029236]
[73.32807922 170.41300964]
[80.76381683 157.38574219]
[88.19956207 144.35847473]
[95.63529968 131.33120728]
[92.66281128 124.44540405]
[86.71783447 110.67378998]
[83.74534607 103.78798676]
[69.16500854 100.26469421]
[54.58465958 96.74140167]
[40.00431824 93.21811676]
[24.77285004 97.49748230]
[14.21903419 86.98719025]
[-0.36130992 83.46389771]
[-14.94165325 79.94060516]
[-29.52199745 76.41731262]
[-44.12804794 73.00215149]
[-58.75899887 69.69530487]
[-72.01998901 77.86744690]
[-86.81074524 74.30541229]
[-94.51991272 61.61272049]
[-109.15086365 58.30587006]
[-123.78181458 54.99902344]
[-132.84143066 56.15953827]
[-138.60430908 51.53325272]
[-153.18464661 48.00996017]
[-167.76499939 44.48667145]
[-176.84082031 45.51280975]
[-182.53450012 40.80163574]
[-197.06103516 37.06267548]
[-208.93678284 47.04998398]
[-224.41720581 48.11591339]
[-237.54975891 39.85059357]
[-243.28471375 25.43220520]
[-239.41687012 10.40491772]
[-227.43348694 0.54702717]
[-211.94241333 -0.35090619]
[-198.90028381 8.05639172]
[-193.32208252 22.53614235]
[-178.79554749 26.27510262]
[-164.24169922 29.90632629]
[-149.66136169 33.42961884]
[-135.08102417 36.95290756]
[-120.47496796 40.36807251]
[-105.84401703 43.67491913]
[-91.21306610 46.98176575]
[-78.79456329 38.83827972]
[-63.90958786 41.98347092]
[-55.45214844 55.06435394]
[-40.82119751 58.37120056]
[-33.60450745 56.77977371]
[-25.99870682 61.83697128]
[-11.41836262 65.36026001]
[3.16198087 68.88355255]
[17.74232483 72.40684509]
[31.93090820 67.87546539]
[43.52760696 78.63777161]
[58.10795212 82.16106415]
[72.68829346 85.68434906]
[87.26863861 89.20764160]
[102.26493073 88.87424469]
[116.67429352 84.70645905]
[131.08364868 80.53867340]
[145.49299622 76.37088776]
[159.90235901 72.20309448]
[174.31172180 68.03530884]
[188.72106934 63.86752319]
[203.13043213 59.69973755]
[217.53977966 55.53194809]
[231.94914246 51.36416245]
[246.35848999 47.19637299]
[260.76785278 43.02858734]
[275.17721558 38.86080170]
[289.58657837 34.69301224]
[303.99591064 30.52522659]
[306.25323486 13.59328747]
[315.33770752 -0.78291231]
[329.53408813 -10.00752831]
[346.21112061 -12.44629955]
[349.95007324 -26.97283363]
[353.68902588 -41.49936676]
[345.91345215 -54.99670029]
[349.91223145 -69.67540741]
[362.82778931 -77.00505829]
[366.56674194 -91.53159332]
[361.64721680 -107.17545319]
[372.93325806 -119.07322693]
[388.81478882 -114.98551178]
[392.95422363 -99.11739349]
[381.09329224 -87.79263306]
[377.35430908 -73.26610565]
[385.12622070 -60.61173630]
[381.54132080 -45.82649994]
[368.21557617 -37.76040649]
[364.47662354 -23.23387337]
[360.73764038 -8.70733929]
[368.50433350 -3.83029461]
[374.93008423 2.71317911]
[379.66531372 10.56713772]
[382.45245361 19.30434799]
[397.45245361 19.30434799]
[412.45245361 19.30434799]
[427.45245361 19.30434799]
[441.25262451 11.56704807]
[453.97988892 19.30434799]
[468.97988892 19.30434799]
[483.97988892 19.30434799]
[498.97988892 19.30434799]
[513.97991943 19.30434799]
[529.70953369 9.72975922]
[544.55334473 19.09139633]
[559.55169678 18.86912155]
[568.52789307 6.34975815]
[582.98571777 1.57224226]
[597.31494141 6.16972256]
[606.08435059 18.17951012]
[621.08270264 17.95723724]
[636.08105469 17.73496246]
[648.03466797 4.96216822]
[665.18975830 4.79020977]
[676.92529297 16.83709335]
[691.91870117 16.39259338]
[706.91210938 15.94809341]
[721.90551758 15.50359344]
[736.89068604 14.83696556]
[751.86437988 13.94835567]
[766.83801270 13.05974674]
[778.52252197 2.06647348]
[794.38146973 4.49011993]
[802.24920654 18.47147179]
[796.09027100 33.28523254]
[780.62933350 37.56755447]
[767.72662354 28.03340340]
[752.75299072 28.92201233]
[737.77929688 29.81062126]
[733.99511719 32.72304916]
[728.34136963 33.28969193]
[722.35003662 30.49700546]
[707.35662842 30.94150543]
[692.36322021 31.38600540]
[677.36981201 31.83050537]
[669.93182373 42.35165024]
[657.60821533 46.73337936]
[644.82287598 43.16498184]
[636.30334473 32.73331451]
[621.30499268 32.95558929]
[606.30664062 33.17786407]
[597.89697266 45.44224548]
[583.71026611 50.46232986]
[569.11718750 46.11534500]
[559.77398682 33.86747360]
[544.77563477 34.08974838]
[536.12805176 42.54754257]
[523.63494873 42.85591888]
[513.97991943 34.30434799]
[498.97988892 34.30434799]
[483.97988892 34.30434799]
[468.97988892 34.30434799]
[453.97988892 34.30434799]
[441.25262451 42.04164886]
[427.45245361 34.30434799]
[412.45245361 34.30434799]
[397.45245361 34.30434799]
[382.45245361 34.30434799]
[376.28784180 49.24213791]
[364.60787964 60.47991562]
[349.35244751 66.09721375]
[333.07699585 65.11156464]
[318.52465820 57.65007401]
[308.16369629 44.93458176]
[293.75436401 49.10237122]
[279.34500122 53.27015686]
[264.93563843 57.43794250]
[250.52629089 61.60573196]
[236.11692810 65.77352142]
[221.70756531 69.94130707]
[207.29821777 74.10909271]
[192.88885498 78.27687836]
[178.47950745 82.44466400]
[164.07014465 86.61245728]
[149.66079712 90.78024292]
[135.25143433 94.94802856]
[120.84207916 99.11581421]
[106.43272400 103.28359985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 32]
[4 31]
[5 30]
[6 29]
[7 28]
[8 27]
[9 26]
[10 24]
[11 23]
[14 21]
[15 20]
[35 87]
[36 86]
[37 85]
[38 84]
[40 82]
[41 81]
[42 80]
[43 79]
[44 77]
[45 76]
[48 73]
[49 72]
[50 71]
[52 70]
[53 69]
[54 68]
[56 67]
[57 66]
[88 211]
[89 210]
[90 209]
[91 208]
[92 207]
[93 206]
[94 205]
[95 204]
[96 203]
[97 202]
[98 201]
[99 200]
[100 199]
[101 198]
[102 197]
[106 123]
[107 122]
[108 121]
[111 118]
[112 117]
[127 191]
[128 190]
[129 189]
[130 188]
[132 186]
[133 185]
[134 184]
[135 183]
[136 182]
[138 179]
[139 178]
[143 174]
[144 173]
[145 172]
[148 168]
[149 167]
[150 166]
[151 165]
[152 162]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
