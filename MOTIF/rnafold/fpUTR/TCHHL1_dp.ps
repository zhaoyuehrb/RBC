%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TCHHL1)
} def

/sequence { (\
ACAGCCCGCUGCCCCACGUUCUACCUGCUCUCGCUUGUGAACUAGCCUCUCCUGAGUUUGUAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.021665878 ubox
1 57 0.011225729 ubox
1 61 0.307537299 ubox
2 11 0.585476681 ubox
2 27 0.012781090 ubox
2 37 0.023036617 ubox
2 54 0.205434372 ubox
2 56 0.011092340 ubox
2 60 0.325523097 ubox
3 10 0.587602589 ubox
3 20 0.005381317 ubox
3 22 0.013857609 ubox
3 26 0.012879675 ubox
3 29 0.008377275 ubox
3 35 0.018546422 ubox
3 36 0.016955429 ubox
3 43 0.009647647 ubox
3 48 0.021584534 ubox
3 50 0.034519109 ubox
3 53 0.206287497 ubox
3 58 0.047429459 ubox
3 59 0.311472658 ubox
4 9 0.583097007 ubox
4 12 0.223729184 ubox
4 19 0.006759223 ubox
4 21 0.016303697 ubox
4 25 0.012826076 ubox
4 28 0.009101210 ubox
4 34 0.024707155 ubox
4 35 0.006280306 ubox
4 42 0.010196844 ubox
4 46 0.024897372 ubox
4 47 0.023637086 ubox
4 49 0.036989993 ubox
4 52 0.205610955 ubox
4 57 0.063635649 ubox
4 58 0.234027931 ubox
4 61 0.068733313 ubox
5 11 0.223926510 ubox
5 18 0.006768295 ubox
5 27 0.009087215 ubox
5 33 0.024762938 ubox
5 37 0.003352173 ubox
5 45 0.024849063 ubox
5 56 0.073305386 ubox
5 60 0.070084484 ubox
7 18 0.031092608 ubox
7 33 0.003783723 ubox
7 39 0.020977296 ubox
7 54 0.056759404 ubox
7 60 0.024707790 ubox
8 17 0.053951179 ubox
8 19 0.016776688 ubox
8 28 0.021227191 ubox
8 32 0.004237336 ubox
8 34 0.007272976 ubox
8 38 0.021114597 ubox
8 46 0.686954564 ubox
8 53 0.037070734 ubox
8 57 0.033489830 ubox
8 59 0.009839198 ubox
8 61 0.030901492 ubox
9 18 0.017537716 ubox
9 27 0.021244199 ubox
9 33 0.007259213 ubox
9 37 0.021116468 ubox
9 45 0.688318264 ubox
9 56 0.033687837 ubox
9 60 0.031797825 ubox
9 65 0.019129231 ubox
10 16 0.045463029 ubox
10 18 0.005554920 ubox
10 44 0.687089429 ubox
10 55 0.032307545 ubox
10 62 0.054203166 ubox
10 64 0.018869265 ubox
11 15 0.049760123 ubox
11 17 0.041716275 ubox
11 19 0.014371224 ubox
11 28 0.016739162 ubox
11 34 0.020157626 ubox
11 43 0.675290012 ubox
11 46 0.106312196 ubox
11 57 0.006353367 ubox
11 61 0.058181557 ubox
12 18 0.015923327 ubox
12 27 0.016661291 ubox
12 33 0.020140016 ubox
12 45 0.107258117 ubox
12 56 0.006222548 ubox
12 60 0.059011295 ubox
15 27 0.011141151 ubox
15 39 0.086506149 ubox
15 54 0.004522873 ubox
15 60 0.039844203 ubox
16 26 0.011326884 ubox
16 38 0.086710268 ubox
16 53 0.004248348 ubox
16 57 0.009991711 ubox
16 59 0.035119436 ubox
16 61 0.064372171 ubox
17 27 0.005099116 ubox
17 33 0.004251595 ubox
17 37 0.086613669 ubox
17 56 0.010007237 ubox
17 60 0.067460616 ubox
18 24 0.016340825 ubox
18 26 0.004490293 ubox
18 28 0.020282248 ubox
18 32 0.005055763 ubox
18 34 0.011085444 ubox
18 36 0.074903824 ubox
18 42 0.988911484 ubox
18 46 0.011359297 ubox
18 59 0.006824285 ubox
19 23 0.014784309 ubox
19 27 0.020244760 ubox
19 33 0.010912503 ubox
19 40 0.005518025 ubox
19 41 0.989892634 ubox
19 45 0.011065650 ubox
19 64 0.007485568 ubox
19 65 0.008316466 ubox
20 39 0.004484854 ubox
20 40 0.990644171 ubox
20 44 0.008242669 ubox
20 63 0.008339637 ubox
20 64 0.012229103 ubox
21 39 0.978206380 ubox
21 65 0.004634628 ubox
22 37 0.049779897 ubox
22 39 0.169108802 ubox
22 62 0.045059845 ubox
22 64 0.004044210 ubox
23 36 0.049159509 ubox
23 38 0.949679008 ubox
23 61 0.047168893 ubox
24 37 0.966458071 ubox
24 60 0.047171958 ubox
26 33 0.016108165 ubox
26 39 0.005424145 ubox
26 62 0.008840081 ubox
27 32 0.016361887 ubox
27 34 0.993391493 ubox
27 38 0.023754532 ubox
27 46 0.013327236 ubox
27 57 0.047528921 ubox
27 61 0.009463567 ubox
28 33 0.991897931 ubox
28 37 0.023914322 ubox
28 45 0.013380329 ubox
28 56 0.048115349 ubox
28 60 0.009500228 ubox
29 40 0.007731630 ubox
29 44 0.013060254 ubox
29 55 0.048097153 ubox
30 39 0.008250232 ubox
30 54 0.048051717 ubox
30 56 0.008038266 ubox
31 40 0.014953434 ubox
31 55 0.008099953 ubox
32 39 0.015192547 ubox
32 54 0.008116930 ubox
33 38 0.009848142 ubox
33 46 0.049736816 ubox
33 53 0.003256235 ubox
33 57 0.004664000 ubox
34 45 0.049824243 ubox
34 56 0.004789816 ubox
34 65 0.008236692 ubox
35 44 0.049551688 ubox
35 55 0.004787378 ubox
35 63 0.014971490 ubox
35 64 0.008458271 ubox
36 54 0.004728901 ubox
36 62 0.017030995 ubox
36 63 0.008204495 ubox
37 43 0.003955047 ubox
37 46 0.020405362 ubox
37 53 0.003914171 ubox
37 61 0.016897108 ubox
38 45 0.020239436 ubox
38 60 0.016024403 ubox
39 49 0.004492066 ubox
39 51 0.004493683 ubox
39 59 0.026052410 ubox
40 48 0.004381464 ubox
40 50 0.004337187 ubox
40 58 0.028505837 ubox
41 57 0.029277362 ubox
41 61 0.061497804 ubox
42 56 0.029349460 ubox
42 60 0.064598220 ubox
42 65 0.006468716 ubox
43 54 0.047326905 ubox
43 55 0.024072446 ubox
43 60 0.379559200 ubox
43 62 0.089212835 ubox
43 64 0.012776130 ubox
44 50 0.008543123 ubox
44 53 0.054648667 ubox
44 58 0.175347147 ubox
44 59 0.415258103 ubox
44 61 0.089568811 ubox
45 49 0.008992977 ubox
45 52 0.054768354 ubox
45 57 0.216559435 ubox
45 58 0.395599298 ubox
45 61 0.169919946 ubox
46 56 0.156774095 ubox
46 60 0.174525694 ubox
47 56 0.940930892 ubox
47 65 0.005034229 ubox
48 55 0.959386302 ubox
48 64 0.004846987 ubox
49 54 0.959655092 ubox
49 56 0.026144979 ubox
49 65 0.004753721 ubox
50 55 0.024445237 ubox
50 64 0.004679723 ubox
52 65 0.018302451 ubox
53 60 0.004024508 ubox
53 62 0.008944589 ubox
53 64 0.018608395 ubox
54 59 0.004099577 ubox
54 61 0.008893955 ubox
57 63 0.020670805 ubox
57 64 0.029645142 ubox
57 65 0.021467867 ubox
58 62 0.019838992 ubox
58 63 0.029717731 ubox
58 64 0.032083383 ubox
58 65 0.037184844 ubox
59 63 0.028584325 ubox
59 64 0.056569910 ubox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
11 43 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
