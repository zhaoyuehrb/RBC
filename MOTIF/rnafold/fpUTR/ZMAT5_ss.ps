%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCCCGGAGCUGCAGCCACCGGGGAGCCAGGUACCUUCCGCGAGACGUCGAGGGGCGAGUCCUAGUCUCUUUUCUCCGCACUGGAAGACUUGAACACUUCCUUCUCUGGUCUCUGUCACCCAGGCUGGAGUGUAGUGGCGCAAUCUCAGCUGGCUGGAGCCUUGACCUCCUUGGGCUCAAGCUAUCCUCCCACCUCAGCCUCUCAAAUAGCUGGGACUACAGGCAGCAAAGCACCUGCUCUGAGUGGCC\
) } def
/len { sequence length } bind def

/coor [
[409.85012817 377.27728271]
[414.77664185 356.76147461]
[403.28598022 347.11965942]
[391.79531860 337.47784424]
[380.30462646 327.83602905]
[368.81396484 318.19421387]
[357.32330322 308.55239868]
[345.71331787 299.05459595]
[333.98587036 289.70223999]
[322.25839233 280.34988403]
[310.13412476 271.51797485]
[297.63616943 263.22335815]
[285.13821411 254.92871094]
[270.25534058 254.33752441]
[263.03564453 240.25965881]
[250.53767395 231.96502686]
[238.03971863 223.67037964]
[225.54176331 215.37573242]
[213.04380798 207.08110046]
[200.54585266 198.78645325]
[186.67601013 204.14979553]
[172.13555908 200.27171326]
[162.55477905 188.43695068]
[161.77070618 173.05216980]
[149.27273560 164.75752258]
[136.77478027 156.46287537]
[124.27683258 148.16824341]
[111.67644501 140.03004456]
[98.97557831 132.04956055]
[84.51116943 128.07704163]
[69.51583099 128.45100403]
[54.52049637 128.82496643]
[39.52515793 129.19892883]
[24.52982140 129.57287598]
[18.73618507 132.66859436]
[13.09142208 132.42930603]
[9.15702629 129.76454163]
[-5.84297371 129.76454163]
[-20.84297371 129.76454163]
[-35.84297562 129.76454163]
[-50.84297562 129.76454163]
[-65.84035492 130.04502869]
[-80.82986450 130.60589600]
[-95.81937408 131.16676331]
[-110.80509949 131.82104492]
[-125.78645325 132.56874084]
[-140.76780701 133.31642151]
[-146.08050537 141.04928589]
[-154.22685242 145.41983032]
[-163.33309937 145.56558228]
[-171.36907959 141.57986450]
[-176.60084534 134.46316528]
[-191.59967041 134.65016174]
[-206.59851074 134.83714294]
[-221.59733582 135.02413940]
[-236.59617615 135.21113586]
[-251.59501648 135.39813232]
[-266.59384155 135.58512878]
[-275.44708252 148.32875061]
[-290.11105347 153.40293884]
[-304.94717407 148.85658264]
[-314.25064087 136.43783569]
[-314.44409180 120.92196655]
[-305.45312500 108.27513885]
[-290.73495483 103.36032104]
[-275.94903564 108.06735229]
[-266.78085327 120.58629608]
[-251.78201294 120.39929962]
[-236.78317261 120.21230316]
[-221.78433228 120.02530670]
[-206.78550720 119.83831787]
[-191.78666687 119.65132141]
[-176.78784180 119.46432495]
[-159.99180603 107.44664764]
[-141.51548767 118.33507538]
[-126.53414154 117.58738708]
[-111.55278778 116.83969879]
[-105.04627991 113.37657928]
[-96.38024139 116.17724609]
[-81.39073181 115.61637878]
[-66.40122223 115.05551147]
[-63.75928879 112.75817108]
[-59.88261795 111.61275482]
[-55.31847000 112.18167877]
[-50.84297562 114.76454163]
[-35.84297562 114.76454163]
[-20.84297371 114.76454163]
[-5.84297371 114.76454163]
[9.15702629 114.76454163]
[24.15586090 114.57754517]
[39.15119934 114.20358276]
[54.14653778 113.82962799]
[69.14187622 113.45566559]
[84.13721466 113.08170319]
[80.92411041 103.01451111]
[83.19879150 93.36434937]
[89.66651917 86.73408508]
[86.69432831 72.03149414]
[83.72213745 57.32891083]
[80.74994659 42.62632370]
[68.82322693 38.98410797]
[59.62307739 30.67284393]
[54.84773636 19.30913544]
[55.34357452 7.06494379]
[60.95574188 -3.74747396]
[70.56896973 -11.11223125]
[67.96424866 -25.88434792]
[65.35952759 -40.65646362]
[62.75480270 -55.42858124]
[60.15008163 -70.20069885]
[57.54535675 -84.97281647]
[54.94063568 -99.74492645]
[52.33591080 -114.51704407]
[49.73118973 -129.28916931]
[35.46228409 -135.15446472]
[26.64828682 -147.81610107]
[26.10171318 -163.23377991]
[33.99697495 -176.48777771]
[47.81471634 -183.34880066]
[63.14575577 -181.62750244]
[75.09800720 -171.87315369]
[79.85755157 -157.19833374]
[75.90563965 -142.28572083]
[64.50330353 -131.89389038]
[67.10803223 -117.12176514]
[69.71275330 -102.34965515]
[72.31747437 -87.57753754]
[74.92219543 -72.80541992]
[77.52691650 -58.03330231]
[80.13164520 -43.26118851]
[82.73636627 -28.48907089]
[85.34108734 -13.71695423]
[101.57035828 -6.70162201]
[110.39990997 8.79809666]
[108.11763763 26.64862823]
[95.45253754 39.65412903]
[98.42472839 54.35671616]
[101.39691925 69.05930328]
[104.36911011 83.76189423]
[116.15893555 91.92527771]
[117.92682648 107.18372345]
[106.95606232 119.34870148]
[119.65692139 127.32918549]
[126.19601440 127.95359039]
[130.76690674 131.27438354]
[132.57147217 135.67028809]
[145.06942749 143.96492004]
[157.56738281 152.25956726]
[170.06533813 160.55421448]
[184.54661560 155.30073547]
[199.17358398 159.53216553]
[208.39515686 171.42445374]
[208.84048462 186.28849792]
[221.33843994 194.58312988]
[233.83641052 202.87777710]
[246.33436584 211.17242432]
[258.83230591 219.46705627]
[271.33026123 227.76170349]
[287.10708618 228.94618225]
[293.43286133 242.43075562]
[305.93081665 250.72538757]
[318.42877197 259.02001953]
[315.17694092 244.37675476]
[322.00485229 231.02087402]
[335.77899170 225.08180237]
[350.17803955 229.28512573]
[358.59381104 241.70184326]
[357.16409302 256.63354492]
[346.54498291 267.22766113]
[331.61074829 268.62240601]
[343.33819580 277.97476196]
[355.06567383 287.32711792]
[361.49374390 288.67974854]
[365.66406250 292.49142456]
[366.96511841 297.06173706]
[378.45578003 306.70355225]
[389.94644165 316.34536743]
[401.43710327 325.98718262]
[412.92779541 335.62899780]
[424.41845703 345.27081299]
[432.44201660 340.24960327]
[441.40802002 337.26025391]
[450.81158447 336.46411133]
[460.12487793 337.89929199]
[468.82662964 341.47879028]
[476.43139648 346.99581909]
[482.51660156 354.13565063]
[486.74606323 362.49368286]
[488.88845825 371.59823608]
[488.83007812 380.93725586]
[486.58074951 389.98715210]
[482.27297974 398.24197388]
[492.87960815 408.84860229]
[503.48620605 419.45520020]
[514.09277344 430.06179810]
[526.38006592 438.66543579]
[539.97467041 445.00469971]
[553.56933594 451.34399414]
[567.16394043 457.68325806]
[580.75854492 464.02252197]
[594.35314941 470.36181641]
[606.88824463 461.48669434]
[622.18298340 460.08416748]
[636.12310791 466.53143311]
[644.95886230 479.09426880]
[646.31347656 494.39331055]
[639.82257080 508.31320190]
[627.23205566 517.10955811]
[611.92889404 518.41619873]
[598.02941895 511.88162231]
[589.27258301 499.26364136]
[588.01391602 483.95642090]
[574.41925049 477.61715698]
[560.82464600 471.27786255]
[547.23004150 464.93859863]
[533.63543701 458.59933472]
[520.04083252 452.26004028]
[514.83758545 457.66159058]
[525.64050293 468.06817627]
[515.23376465 478.87094116]
[504.43118286 468.46466064]
[499.22796631 473.86621094]
[506.07113647 487.21429443]
[512.91430664 500.56237793]
[519.84051514 513.86755371]
[526.84954834 527.12927246]
[533.85858154 540.39099121]
[540.86761475 553.65270996]
[556.24676514 555.71722412]
[567.45196533 566.45135498]
[570.17468262 581.72766113]
[563.36791992 595.67211914]
[549.64904785 602.92279053]
[534.29321289 600.69158936]
[523.20507812 589.83648682]
[520.64825439 574.53155518]
[527.60589600 560.66174316]
[520.59686279 547.40002441]
[513.58782959 534.13830566]
[506.57879639 520.87658691]
[500.69036865 516.44323730]
[499.56622314 507.40551758]
[492.72305298 494.05746460]
[485.87988281 480.70938110]
[487.67788696 453.66113281]
[503.48620605 440.66839600]
[492.87960815 430.06179810]
[482.27297974 419.45520020]
[471.66638184 408.84860229]
[452.00677490 415.63864136]
[431.55792236 411.44656372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 180]
[3 179]
[4 178]
[5 177]
[6 176]
[7 175]
[8 172]
[9 171]
[10 170]
[11 162]
[12 161]
[13 160]
[15 158]
[16 157]
[17 156]
[18 155]
[19 154]
[20 153]
[24 149]
[25 148]
[26 147]
[27 146]
[28 143]
[29 142]
[30 94]
[31 93]
[32 92]
[33 91]
[34 90]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[42 81]
[43 80]
[44 79]
[45 77]
[46 76]
[47 75]
[52 73]
[53 72]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[97 139]
[98 138]
[99 137]
[100 136]
[106 132]
[107 131]
[108 130]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[192 249]
[193 248]
[194 247]
[195 246]
[196 217]
[197 216]
[198 215]
[199 214]
[200 213]
[201 212]
[222 244]
[223 243]
[224 242]
[225 240]
[226 239]
[227 238]
[228 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
