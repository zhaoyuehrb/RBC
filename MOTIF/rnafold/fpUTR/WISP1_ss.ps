%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUCUGGUGCUCCUGAUGGGCCGGCCAGUCUGGGCCCAGCUCCCCCGAGAGGUGGUCGGAUCCUCUGGGCUGCUCGGUCGAUGCCUGUGCCACUGACGUCCAGGC\
) } def
/len { sequence length } bind def

/coor [
[102.99499512 140.12062073]
[94.11495972 139.79949951]
[85.52200317 137.53694153]
[77.63528442 133.44328308]
[70.83953857 127.71825409]
[58.23157120 135.84469604]
[45.62360382 143.97114563]
[33.01563644 152.09759521]
[20.40766525 160.22404480]
[8.04369450 168.71710205]
[-4.06562138 177.56947327]
[-9.25087261 185.28575134]
[-16.66288567 186.49778748]
[-29.02685738 194.99085999]
[-35.59832764 210.01576233]
[-51.92384720 211.56799316]
[-61.20912170 198.05076599]
[-53.90225220 183.36941528]
[-37.51992416 182.62687683]
[-25.15595436 174.13381958]
[-12.91799259 165.46015930]
[-0.80867618 156.60778809]
[0.80672473 151.95950317]
[5.45095205 148.34675598]
[12.28121948 147.61607361]
[24.88918877 139.48962402]
[37.49715805 131.36317444]
[50.10512543 123.23673248]
[62.71309662 115.11028290]
[59.76966095 99.60788727]
[63.01470184 84.16580963]
[71.94904327 71.15943909]
[85.19835663 62.58950043]
[100.72454834 59.77427292]
[103.78576660 45.08996201]
[106.84697723 30.40565300]
[109.90818787 15.72134304]
[105.15008545 0.63257360]
[115.32193756 -10.24780560]
[118.38314819 -24.93211555]
[121.44436646 -39.61642456]
[113.05115509 -52.73861313]
[116.36484528 -67.58698273]
[128.92657471 -75.50775909]
[131.98777771 -90.19207001]
[135.04899597 -104.87638092]
[130.29087830 -119.96514893]
[140.46273804 -130.84552002]
[143.52395630 -145.52983093]
[146.58517456 -160.21414185]
[145.26635742 -169.41677856]
[149.95780945 -175.28169250]
[153.44877625 -189.86981201]
[156.93975830 -204.45793152]
[148.45957947 -217.79443359]
[151.97503662 -233.20277405]
[165.40045166 -241.54147339]
[180.77076721 -237.86331177]
[188.96705627 -224.35049438]
[185.12660217 -209.01991272]
[171.52787781 -200.96694946]
[168.03689575 -186.37884521]
[164.54592896 -171.79072571]
[161.26947021 -157.15293884]
[158.20826721 -142.46862793]
[155.14704895 -127.78431702]
[160.12411499 -113.74586487]
[149.73330688 -101.81516266]
[146.67208862 -87.13085175]
[143.61088562 -72.44654846]
[151.96131897 -60.16624832]
[149.06599426 -45.23065948]
[136.12867737 -36.55521393]
[133.06745911 -21.87090302]
[130.00624084 -7.18659210]
[134.98332214 6.85185719]
[124.59249878 18.78255653]
[121.53128815 33.46686554]
[118.47007751 48.15117645]
[115.40885925 62.83548737]
[130.41438293 73.66372681]
[138.98583984 90.06330872]
[139.30999756 108.56496429]
[131.31823730 125.25473785]
[141.03482056 136.68225098]
[150.75140381 148.10975647]
[160.46798706 159.53727722]
[170.18457031 170.96478271]
[185.01847839 176.46623230]
[187.36830139 191.17430115]
[197.08488464 202.60182190]
[212.71990967 202.31886292]
[224.84632874 212.19226074]
[227.73843384 227.56007385]
[220.03063965 241.16610718]
[205.36235046 246.58599854]
[190.65946960 241.26063538]
[182.86425781 227.70451355]
[185.65736389 212.31840515]
[175.94078064 200.89088440]
[161.80187988 196.20681763]
[158.75704956 180.68136597]
[149.04046631 169.25386047]
[139.32389832 157.82633972]
[129.60731506 146.39883423]
[119.89073181 134.97131348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 22]
[11 21]
[13 20]
[14 19]
[34 80]
[35 79]
[36 78]
[37 77]
[39 75]
[40 74]
[41 73]
[44 70]
[45 69]
[46 68]
[48 66]
[49 65]
[50 64]
[52 63]
[53 62]
[54 61]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[90 100]
[91 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
