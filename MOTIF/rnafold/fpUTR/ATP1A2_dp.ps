%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ATP1A2)
} def

/sequence { (\
AUUUAAAGCUACCCUGUUGCUUUGGCUUUCUCUGUCUGCCAGGGUCUCCGACUGUCCCAGACGGGCUGGUGUGGGCUUGGGAUCCUCCUGGUGACCUCUCCCGCUAAGGUCCCUCAGCCACUCUGCCCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 55 0.004817357 ubox
2 25 0.043104969 ubox
2 51 0.006081356 ubox
2 54 0.005257506 ubox
2 61 0.003860125 ubox
2 131 0.026152641 ubox
2 132 0.023957849 ubox
3 24 0.042059423 ubox
3 25 0.673029905 ubox
3 50 0.006367804 ubox
3 51 0.021519816 ubox
3 60 0.004189990 ubox
3 130 0.024659508 ubox
3 131 0.032080545 ubox
3 132 0.011674862 ubox
4 11 0.004871731 ubox
4 24 0.882985596 ubox
4 50 0.023271104 ubox
4 59 0.003810084 ubox
4 130 0.028249325 ubox
4 131 0.014544616 ubox
5 10 0.005361053 ubox
5 22 0.006982838 ubox
5 23 0.912923576 ubox
5 28 0.009464196 ubox
5 29 0.293876095 ubox
5 33 0.004665724 ubox
6 18 0.004413298 ubox
6 21 0.005867776 ubox
6 22 0.919453560 ubox
6 23 0.009387357 ubox
6 27 0.007658906 ubox
6 28 0.337386135 ubox
6 29 0.010976331 ubox
7 15 0.009521418 ubox
7 17 0.003586904 ubox
7 18 0.059805126 ubox
7 21 0.922201616 ubox
7 22 0.007159453 ubox
7 27 0.347038567 ubox
7 28 0.008628363 ubox
7 31 0.005172619 ubox
7 47 0.054137526 ubox
7 53 0.010236543 ubox
7 67 0.010003076 ubox
8 14 0.009757511 ubox
8 17 0.065652308 ubox
8 20 0.923064289 ubox
8 26 0.348534364 ubox
8 30 0.005415198 ubox
8 46 0.056445462 ubox
8 52 0.010507382 ubox
8 55 0.006969915 ubox
8 66 0.010426529 ubox
8 70 0.004988801 ubox
8 126 0.006587213 ubox
9 16 0.066506916 ubox
9 19 0.921615952 ubox
9 25 0.348442870 ubox
9 54 0.007201914 ubox
9 60 0.010104107 ubox
9 65 0.010374431 ubox
9 69 0.005245790 ubox
9 125 0.006587396 ubox
9 132 0.011986123 ubox
10 16 0.033354579 ubox
10 19 0.018502185 ubox
10 24 0.345988355 ubox
10 59 0.009873782 ubox
10 64 0.004131203 ubox
10 68 0.005243548 ubox
10 131 0.011871214 ubox
11 15 0.032006399 ubox
11 17 0.610801275 ubox
11 18 0.083355763 ubox
11 23 0.319294218 ubox
11 45 0.117738118 ubox
11 55 0.007999578 ubox
11 67 0.005091901 ubox
12 16 0.640493821 ubox
12 25 0.005209052 ubox
12 44 0.127279164 ubox
12 54 0.008502666 ubox
13 24 0.006212240 ubox
13 25 0.012330220 ubox
13 43 0.128649883 ubox
13 65 0.005133050 ubox
14 24 0.014599949 ubox
14 25 0.003514294 ubox
14 42 0.128659475 ubox
14 60 0.034677996 ubox
14 64 0.005173335 ubox
14 132 0.006660996 ubox
15 24 0.004760810 ubox
15 41 0.128391140 ubox
15 50 0.010104795 ubox
15 59 0.034777733 ubox
15 63 0.005193452 ubox
15 130 0.007404926 ubox
15 131 0.006423563 ubox
16 23 0.013302130 ubox
16 26 0.005179655 ubox
16 39 0.004465923 ubox
16 40 0.126675037 ubox
16 49 0.012515073 ubox
16 52 0.042297242 ubox
16 58 0.034651887 ubox
16 62 0.007713201 ubox
16 129 0.008058893 ubox
17 25 0.005170137 ubox
17 38 0.006196367 ubox
17 51 0.042468484 ubox
17 61 0.007646859 ubox
17 131 0.004255553 ubox
18 24 0.004850160 ubox
18 38 0.006842545 ubox
18 50 0.042297204 ubox
18 60 0.007226602 ubox
18 130 0.005075734 ubox
19 26 0.041015906 ubox
19 35 0.007298906 ubox
19 37 0.006620224 ubox
19 39 0.126067602 ubox
19 45 0.068966273 ubox
19 49 0.028718775 ubox
19 55 0.033432312 ubox
19 129 0.005086976 ubox
20 25 0.041058267 ubox
20 34 0.007406570 ubox
20 38 0.126473209 ubox
20 43 0.006219883 ubox
20 44 0.077393848 ubox
20 54 0.033670085 ubox
20 132 0.004171602 ubox
21 42 0.005109084 ubox
21 43 0.078394568 ubox
21 131 0.004010242 ubox
21 132 0.007762159 ubox
22 41 0.003705722 ubox
22 42 0.081284651 ubox
22 51 0.036522952 ubox
22 130 0.003447582 ubox
22 131 0.022106972 ubox
23 34 0.007481541 ubox
23 41 0.091140475 ubox
23 50 0.039671490 ubox
23 130 0.030300297 ubox
24 30 0.028571331 ubox
24 31 0.022077939 ubox
24 32 0.031577881 ubox
24 33 0.034069025 ubox
24 36 0.125341322 ubox
24 37 0.006519854 ubox
24 40 0.098457842 ubox
24 49 0.046525869 ubox
24 67 0.009989316 ubox
24 127 0.032981397 ubox
24 128 0.005206059 ubox
24 129 0.035605823 ubox
25 29 0.019499250 ubox
25 30 0.031897886 ubox
25 31 0.026984490 ubox
25 32 0.042652021 ubox
25 35 0.126492737 ubox
25 36 0.006562479 ubox
25 39 0.098634739 ubox
25 48 0.046545285 ubox
25 66 0.013812110 ubox
25 70 0.013247897 ubox
25 126 0.033720624 ubox
25 127 0.004995722 ubox
25 128 0.025937352 ubox
26 34 0.126831099 ubox
26 38 0.098606422 ubox
26 65 0.013715170 ubox
26 69 0.014217684 ubox
26 125 0.033686741 ubox
26 132 0.071879295 ubox
27 64 0.006710381 ubox
27 68 0.013979384 ubox
27 131 0.072747832 ubox
27 132 0.013443977 ubox
28 63 0.003896801 ubox
28 130 0.064834945 ubox
28 131 0.021216782 ubox
28 132 0.007651650 ubox
29 44 0.005887106 ubox
29 130 0.020358426 ubox
29 131 0.010162015 ubox
30 43 0.008740216 ubox
30 44 0.050667132 ubox
30 63 0.004785020 ubox
30 65 0.015943049 ubox
30 68 0.004139198 ubox
30 132 0.034439307 ubox
31 43 0.052629818 ubox
31 61 0.015718399 ubox
31 64 0.007923380 ubox
31 65 0.047114053 ubox
31 131 0.033550750 ubox
32 42 0.054695482 ubox
32 60 0.016982689 ubox
32 63 0.021543123 ubox
32 64 0.097377393 ubox
32 132 0.045833499 ubox
33 41 0.054707170 ubox
33 59 0.016977286 ubox
33 63 0.130158269 ubox
33 130 0.011045363 ubox
33 131 0.045793179 ubox
34 40 0.054547834 ubox
34 58 0.016876416 ubox
34 62 0.983366283 ubox
34 129 0.005938908 ubox
35 61 0.984671836 ubox
36 60 0.985078106 ubox
37 59 0.984589720 ubox
38 55 0.018125899 ubox
38 58 0.980538081 ubox
39 54 0.028352340 ubox
40 54 0.354698520 ubox
41 53 0.350718832 ubox
42 49 0.044508635 ubox
42 52 0.343525933 ubox
42 53 0.117387204 ubox
42 56 0.060943743 ubox
42 57 0.085461755 ubox
42 58 0.053496316 ubox
42 128 0.006902772 ubox
42 129 0.008350459 ubox
43 48 0.048528990 ubox
43 49 0.142309288 ubox
43 52 0.118228064 ubox
43 53 0.900333957 ubox
43 55 0.031439975 ubox
43 56 0.083783464 ubox
43 57 0.057975190 ubox
43 127 0.006940532 ubox
43 128 0.007901540 ubox
44 48 0.140735828 ubox
44 52 0.912118524 ubox
44 55 0.042926642 ubox
44 56 0.057582691 ubox
44 62 0.044198423 ubox
44 126 0.006935091 ubox
44 127 0.007598953 ubox
45 51 0.913373378 ubox
45 54 0.027481474 ubox
45 61 0.045605769 ubox
45 125 0.006525381 ubox
46 50 0.905841801 ubox
46 60 0.047307572 ubox
46 132 0.004102786 ubox
47 59 0.046047355 ubox
47 61 0.006755521 ubox
47 65 0.010681815 ubox
47 131 0.003997814 ubox
48 60 0.007303402 ubox
48 64 0.024860182 ubox
48 69 0.005111698 ubox
49 63 0.030417132 ubox
49 68 0.005186695 ubox
50 56 0.044455182 ubox
50 62 0.050156517 ubox
50 67 0.004705145 ubox
51 55 0.038738876 ubox
51 70 0.006550373 ubox
52 60 0.075746310 ubox
52 64 0.012158771 ubox
52 69 0.006726940 ubox
52 132 0.007686296 ubox
53 59 0.076044177 ubox
53 63 0.015793165 ubox
53 68 0.006587835 ubox
53 130 0.004969179 ubox
53 131 0.007529734 ubox
54 58 0.074894085 ubox
54 62 0.117812848 ubox
54 66 0.005483242 ubox
54 67 0.004739113 ubox
54 129 0.005359251 ubox
55 61 0.117896723 ubox
55 65 0.004682558 ubox
56 60 0.116938465 ubox
56 64 0.004694141 ubox
56 65 0.006787235 ubox
57 63 0.004690638 ubox
57 64 0.006830885 ubox
58 63 0.006848982 ubox
63 127 0.005145173 ubox
63 128 0.969608818 ubox
63 129 0.192426793 ubox
64 126 0.004125949 ubox
64 127 0.977681488 ubox
64 128 0.182932831 ubox
64 129 0.007595642 ubox
65 72 0.003346148 ubox
65 126 0.982543574 ubox
65 127 0.172394466 ubox
65 128 0.008317817 ubox
66 71 0.003605706 ubox
66 125 0.979490423 ubox
66 132 0.008764179 ubox
67 125 0.156684141 ubox
67 130 0.022651310 ubox
67 131 0.007738992 ubox
68 122 0.092332026 ubox
68 123 0.548679074 ubox
68 124 0.738410615 ubox
68 127 0.038964790 ubox
68 128 0.006998888 ubox
68 129 0.024849323 ubox
69 121 0.104760227 ubox
69 122 0.522136295 ubox
69 123 0.785589677 ubox
69 126 0.039229157 ubox
69 127 0.006911723 ubox
69 128 0.024730829 ubox
70 120 0.103482615 ubox
70 125 0.038985268 ubox
71 119 0.051112744 ubox
71 121 0.985519289 ubox
71 124 0.015391677 ubox
71 126 0.024272186 ubox
71 129 0.003214940 ubox
72 120 0.977522447 ubox
72 125 0.023898028 ubox
73 115 0.003446181 ubox
73 119 0.834351756 ubox
73 122 0.004464567 ubox
73 123 0.008608392 ubox
73 124 0.020461649 ubox
73 128 0.003670452 ubox
74 114 0.003375822 ubox
74 118 0.660405716 ubox
74 119 0.548539870 ubox
74 123 0.010232538 ubox
74 127 0.003687901 ubox
75 118 0.750741552 ubox
75 126 0.003696254 ubox
76 117 0.907408993 ubox
76 125 0.003698279 ubox
77 116 0.894600612 ubox
77 117 0.013179863 ubox
78 116 0.036841105 ubox
79 89 0.005693698 ubox
79 112 0.005291357 ubox
79 113 0.981851461 ubox
79 114 0.179056844 ubox
79 115 0.043178258 ubox
80 88 0.006288845 ubox
80 111 0.005088242 ubox
80 112 0.982597260 ubox
80 113 0.184663941 ubox
80 114 0.016911785 ubox
81 87 0.006294183 ubox
81 110 0.004173986 ubox
81 111 0.982801451 ubox
81 112 0.183499221 ubox
81 113 0.016347299 ubox
82 86 0.005480031 ubox
82 110 0.972970904 ubox
83 109 0.344163862 ubox
84 91 0.006072356 ubox
84 108 0.318867810 ubox
84 109 0.925884611 ubox
85 90 0.006868126 ubox
85 108 0.932360165 ubox
85 109 0.021878335 ubox
86 107 0.894290509 ubox
86 108 0.017332377 ubox
86 109 0.033217716 ubox
87 108 0.058921802 ubox
87 109 0.147688986 ubox
88 108 0.151111769 ubox
89 103 0.257828958 ubox
89 106 0.862955023 ubox
89 107 0.110944190 ubox
90 99 0.003487062 ubox
90 101 0.045634148 ubox
90 102 0.288166294 ubox
90 105 0.952976059 ubox
90 113 0.006786065 ubox
91 98 0.003988292 ubox
91 100 0.046459061 ubox
91 101 0.288065092 ubox
91 104 0.956281688 ubox
91 112 0.006826786 ubox
92 103 0.955737926 ubox
93 100 0.288302802 ubox
93 102 0.953277138 ubox
93 111 0.008971928 ubox
94 99 0.260668926 ubox
94 110 0.009039686 ubox
95 109 0.009083485 ubox
96 108 0.009085059 ubox
97 107 0.008710277 ubox
123 132 0.004629350 ubox
124 131 0.004776085 ubox
3 25 0.9500000 lbox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
6 22 0.9500000 lbox
7 21 0.9500000 lbox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
38 58 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
46 50 0.9500000 lbox
63 128 0.9500000 lbox
64 127 0.9500000 lbox
65 126 0.9500000 lbox
66 125 0.9500000 lbox
68 124 0.9500000 lbox
69 123 0.9500000 lbox
71 121 0.9500000 lbox
72 120 0.9500000 lbox
73 119 0.9500000 lbox
74 118 0.9500000 lbox
76 117 0.9500000 lbox
77 116 0.9500000 lbox
79 113 0.9500000 lbox
80 112 0.9500000 lbox
81 111 0.9500000 lbox
82 110 0.9500000 lbox
84 109 0.9500000 lbox
85 108 0.9500000 lbox
86 107 0.9500000 lbox
89 106 0.9500000 lbox
90 105 0.9500000 lbox
91 104 0.9500000 lbox
92 103 0.9500000 lbox
93 102 0.9500000 lbox
showpage
end
%%EOF
