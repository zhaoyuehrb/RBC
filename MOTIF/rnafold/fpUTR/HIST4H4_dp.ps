%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIST4H4)
} def

/sequence { (\
ACAGUGGGCAGCCCGAUUUUCUGCUGAGUAGGCGCUGUGAUUUCAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.004984387 ubox
1 38 0.313359604 ubox
2 23 0.034909122 ubox
2 26 0.026715781 ubox
2 28 0.005185223 ubox
2 37 0.332940070 ubox
2 39 0.053636929 ubox
3 18 0.024721888 ubox
3 19 0.004097498 ubox
3 22 0.035169907 ubox
3 25 0.026848585 ubox
3 36 0.332807083 ubox
3 38 0.040858291 ubox
3 42 0.360365911 ubox
3 43 0.225105608 ubox
4 17 0.029718745 ubox
4 18 0.004160178 ubox
4 21 0.035115076 ubox
4 24 0.026866422 ubox
4 33 0.008084372 ubox
4 35 0.332653002 ubox
4 38 0.006570786 ubox
4 41 0.429489107 ubox
4 42 0.258701079 ubox
5 15 0.060155107 ubox
5 16 0.030762418 ubox
5 23 0.026618468 ubox
5 30 0.005414152 ubox
5 32 0.008058457 ubox
5 34 0.330753820 ubox
5 37 0.007080711 ubox
5 39 0.032977300 ubox
5 40 0.428908179 ubox
5 45 0.316699093 ubox
6 13 0.016160317 ubox
6 14 0.102335883 ubox
6 22 0.025308193 ubox
6 29 0.011432307 ubox
6 33 0.314468608 ubox
6 36 0.009110245 ubox
6 38 0.010688029 ubox
6 42 0.045465249 ubox
6 43 0.028647263 ubox
6 44 0.351239416 ubox
7 12 0.017734336 ubox
7 13 0.103664170 ubox
7 14 0.046925232 ubox
7 21 0.025376721 ubox
7 25 0.146744922 ubox
7 35 0.007211050 ubox
7 36 0.072381587 ubox
7 41 0.049107951 ubox
7 42 0.041090179 ubox
7 43 0.344276026 ubox
7 44 0.046612684 ubox
8 12 0.102008989 ubox
8 13 0.046388332 ubox
8 20 0.022369026 ubox
8 24 0.148318123 ubox
8 29 0.031538760 ubox
8 33 0.009590365 ubox
8 35 0.077539737 ubox
8 38 0.910868027 ubox
8 41 0.014131220 ubox
8 42 0.097877947 ubox
8 43 0.019125603 ubox
9 23 0.148369730 ubox
9 26 0.270251749 ubox
9 28 0.027080539 ubox
9 32 0.009615908 ubox
9 34 0.077954664 ubox
9 37 0.935775410 ubox
9 39 0.006660135 ubox
10 18 0.012812597 ubox
10 19 0.010962508 ubox
10 22 0.148118322 ubox
10 25 0.271622081 ubox
10 36 0.935757798 ubox
10 38 0.004753070 ubox
11 17 0.011006760 ubox
11 18 0.009305892 ubox
11 21 0.146199968 ubox
11 24 0.271886062 ubox
11 29 0.013839486 ubox
11 33 0.108771396 ubox
11 35 0.935972750 ubox
12 23 0.271255040 ubox
12 28 0.014013184 ubox
12 32 0.110445291 ubox
12 34 0.935849390 ubox
13 31 0.109928125 ubox
13 32 0.935380224 ubox
14 23 0.010464969 ubox
14 26 0.012937644 ubox
14 31 0.933603774 ubox
14 34 0.006228754 ubox
15 21 0.198354041 ubox
15 22 0.026046916 ubox
15 25 0.011036228 ubox
15 33 0.015550658 ubox
15 42 0.005794769 ubox
15 44 0.004449960 ubox
16 20 0.173003432 ubox
16 29 0.726629193 ubox
16 41 0.006692169 ubox
16 43 0.004396289 ubox
17 27 0.093722717 ubox
17 28 0.752599503 ubox
17 31 0.009775801 ubox
17 32 0.007228096 ubox
17 40 0.006852520 ubox
18 26 0.093261274 ubox
18 27 0.747971852 ubox
18 28 0.070078626 ubox
18 30 0.026781481 ubox
18 31 0.007891221 ubox
18 32 0.003208786 ubox
18 39 0.006789395 ubox
19 26 0.735971420 ubox
19 27 0.067743504 ubox
19 28 0.504733272 ubox
19 30 0.015474816 ubox
19 31 0.003719657 ubox
19 40 0.003445480 ubox
20 26 0.056312302 ubox
20 27 0.540139380 ubox
20 30 0.009042022 ubox
20 32 0.059769072 ubox
20 39 0.003179946 ubox
20 47 0.005836563 ubox
21 26 0.544598938 ubox
21 28 0.081988477 ubox
21 31 0.076949191 ubox
21 39 0.003377939 ubox
21 46 0.006833149 ubox
22 27 0.081485494 ubox
22 30 0.079062856 ubox
22 34 0.039816342 ubox
22 45 0.006771838 ubox
23 29 0.079115787 ubox
23 33 0.075083749 ubox
23 44 0.006634309 ubox
24 28 0.078663043 ubox
24 31 0.004442790 ubox
24 32 0.075152459 ubox
24 46 0.047575101 ubox
25 30 0.004961762 ubox
25 31 0.074256373 ubox
25 45 0.047817362 ubox
26 33 0.003947382 ubox
26 43 0.003781364 ubox
26 44 0.047925323 ubox
27 36 0.008806235 ubox
27 42 0.005665584 ubox
27 43 0.047611711 ubox
28 35 0.009245936 ubox
28 41 0.006840120 ubox
28 42 0.045233514 ubox
29 34 0.008881624 ubox
29 37 0.007722110 ubox
29 39 0.004589479 ubox
29 40 0.007703223 ubox
30 36 0.008003134 ubox
30 38 0.005045959 ubox
31 35 0.007857080 ubox
32 38 0.042201538 ubox
33 37 0.042083938 ubox
33 39 0.010832328 ubox
34 38 0.006705176 ubox
35 46 0.065229655 ubox
36 45 0.065919445 ubox
37 44 0.066612054 ubox
38 45 0.053139100 ubox
39 44 0.106824789 ubox
41 47 0.017411376 ubox
42 46 0.018654331 ubox
8 38 0.9500000 lbox
9 37 0.9500000 lbox
10 36 0.9500000 lbox
11 35 0.9500000 lbox
12 34 0.9500000 lbox
13 32 0.9500000 lbox
14 31 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
showpage
end
%%EOF
