%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGGGGCGGACCUCGGCGCGCUCCCGGCCGCUCGCUGGCUCCGGGGCCGCGGCGGCUCCUCUGCCGGGUCGCGCCGGACGACUGGCUUCGGGCGGCGGCCCCGGCGGCCUGUGGACGGACGGGUGGGCCGAGGUACAGGCCCCACGGCCGCCGUCUCCCGCUUCUGCCCGCGCAGAGUCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[95.11196899 225.00030518]
[106.54911804 215.29505920]
[121.30058289 218.01666260]
[115.18418884 204.32032776]
[109.06780243 190.62397766]
[102.95140839 176.92764282]
[96.83501434 163.23130798]
[90.71862030 149.53495789]
[84.60222626 135.83862305]
[78.48583221 122.14228821]
[70.58934784 109.38903046]
[61.05519867 97.80887604]
[51.52104950 86.22872162]
[41.98690033 74.64855957]
[32.45275116 63.06840897]
[22.91860008 51.48825455]
[13.38445091 39.90809631]
[3.85030127 28.32794380]
[-10.89450169 22.59197235]
[-13.01080704 7.84848213]
[-22.54495621 -3.73167253]
[-28.62296677 -6.41803598]
[-31.92192650 -11.07779121]
[-32.19697571 -15.86475945]
[-41.33672333 -27.75866508]
[-50.47647476 -39.65256882]
[-59.61622238 -51.54647446]
[-74.16001129 -57.77453995]
[-75.77983856 -72.58080292]
[-84.91958618 -84.47470856]
[-94.05933380 -96.36861420]
[-108.60312653 -102.59667969]
[-110.22294617 -117.40293884]
[-119.36269379 -129.29684448]
[-128.50244141 -141.19075012]
[-137.64219666 -153.08465576]
[-152.18598938 -159.31271362]
[-153.80580139 -174.11898804]
[-162.94555664 -186.01289368]
[-172.08531189 -197.90679932]
[-181.22505188 -209.80070496]
[-190.46438599 -221.61741638]
[-199.80265808 -233.35609436]
[-209.14093018 -245.09478760]
[-218.47918701 -256.83346558]
[-227.81745911 -268.57214355]
[-237.15573120 -280.31085205]
[-246.49398804 -292.04953003]
[-255.83226013 -303.78820801]
[-265.17053223 -315.52691650]
[-274.50878906 -327.26559448]
[-289.15515137 -333.24844360]
[-291.02349854 -348.02542114]
[-300.36175537 -359.76409912]
[-310.08911133 -371.18246460]
[-320.19451904 -382.26757812]
[-330.29995728 -393.35272217]
[-340.40539551 -404.43786621]
[-355.95690918 -405.32571411]
[-366.04733276 -416.71157837]
[-365.10507202 -431.53210449]
[-375.21051025 -442.61721802]
[-390.76199341 -443.50509644]
[-400.85244751 -454.89096069]
[-399.91015625 -469.71145630]
[-410.01559448 -480.79660034]
[-420.12103271 -491.88174438]
[-430.22647095 -502.96685791]
[-446.02346802 -503.44631958]
[-456.79364014 -515.01257324]
[-456.14721680 -530.80364990]
[-444.46771240 -541.45092773]
[-428.68435669 -540.63757324]
[-418.16116333 -528.84619141]
[-419.14132690 -513.07232666]
[-409.03588867 -501.98718262]
[-398.93045044 -490.90203857]
[-388.82501221 -479.81689453]
[-373.98080444 -479.38769531]
[-363.57452393 -468.28976440]
[-364.12536621 -452.72265625]
[-354.01992798 -441.63754272]
[-339.17568970 -441.20834351]
[-328.76943970 -430.11038208]
[-329.32028198 -414.54330444]
[-319.21484375 -403.45816040]
[-309.10940552 -392.37301636]
[-299.00396729 -381.28790283]
[-296.19235229 -381.03378296]
[-293.31332397 -379.63891602]
[-290.80624390 -377.07238770]
[-289.11331177 -373.46441650]
[-288.62307739 -369.10235596]
[-279.28479004 -357.36367798]
[-265.30636597 -352.22045898]
[-262.77011108 -336.60385132]
[-253.43183899 -324.86517334]
[-244.09358215 -313.12649536]
[-234.75531006 -301.38778687]
[-225.41703796 -289.64910889]
[-216.07878113 -277.91043091]
[-206.74050903 -266.17175293]
[-197.40223694 -254.43304443]
[-188.06396484 -242.69436646]
[-178.72570801 -230.95567322]
[-172.08721924 -227.67158508]
[-169.33114624 -218.94044495]
[-160.19140625 -207.04653931]
[-151.05165100 -195.15263367]
[-141.91189575 -183.25872803]
[-128.02185059 -177.88139343]
[-125.74829102 -162.22441101]
[-116.60854340 -150.33050537]
[-107.46878815 -138.43659973]
[-98.32904053 -126.54268646]
[-84.43898773 -121.16535950]
[-82.16542816 -105.50836182]
[-73.02568054 -93.61445618]
[-63.88592911 -81.72055054]
[-49.99587631 -76.34322357]
[-47.72231674 -60.68622589]
[-38.58256912 -48.79232025]
[-29.44281960 -36.89841461]
[-20.30307007 -25.00450897]
[-10.96480179 -13.26582241]
[-1.43065226 -1.68566751]
[12.63220501 3.22201252]
[15.43045616 18.79379272]
[24.96460533 30.37394905]
[34.49875641 41.95410156]
[44.03290558 53.53425980]
[53.56705475 65.11441040]
[63.10120392 76.69456482]
[72.63535309 88.27471924]
[82.16950226 99.85488129]
[86.85544586 88.99349976]
[96.97702789 83.82278442]
[107.61910248 86.19231415]
[114.02075195 94.43875885]
[128.86807251 96.57347870]
[143.71539307 98.70819855]
[158.56271362 100.84292603]
[173.57775879 94.24897003]
[186.63386536 104.17218018]
[184.30003357 120.40440369]
[168.97709656 126.24732971]
[156.42799377 115.69024658]
[141.58067322 113.55551910]
[126.73334503 111.42079926]
[111.88602448 109.28607941]
[103.70160675 116.03555298]
[92.18217468 116.02589417]
[98.29856873 129.72222900]
[104.41496277 143.41857910]
[110.53134918 157.11491394]
[116.64774323 170.81124878]
[122.76413727 184.50759888]
[128.88053894 198.20393372]
[134.99693298 211.90026855]
[141.68299866 225.32772827]
[148.92697144 238.46260071]
[156.17092896 251.59747314]
[163.74356079 264.54565430]
[171.64004517 277.29891968]
[179.53652954 290.05215454]
[187.43299866 302.80541992]
[195.32948303 315.55868530]
[203.22596741 328.31195068]
[217.92193604 335.58935547]
[218.69732666 351.97015381]
[204.75450134 360.60317993]
[190.43663025 352.60751343]
[190.47271729 336.20840454]
[182.57623291 323.45516968]
[174.67974854 310.70190430]
[166.78326416 297.94863892]
[158.88677979 285.19540405]
[150.99029541 272.44213867]
[147.63868713 271.28530884]
[144.68664551 268.43582153]
[142.92898560 264.10192871]
[143.03605652 258.84143066]
[135.79208374 245.70655823]
[128.54812622 232.57168579]
[121.83064270 245.98344421]
[107.19335938 249.26217651]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 159]
[4 158]
[5 157]
[6 156]
[7 155]
[8 154]
[9 153]
[10 152]
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[18 128]
[20 126]
[21 125]
[24 124]
[25 123]
[26 122]
[27 121]
[29 119]
[30 118]
[31 117]
[33 115]
[34 114]
[35 113]
[36 112]
[38 110]
[39 109]
[40 108]
[41 107]
[42 105]
[43 104]
[44 103]
[45 102]
[46 101]
[47 100]
[48 99]
[49 98]
[50 97]
[51 96]
[53 94]
[54 93]
[55 88]
[56 87]
[57 86]
[58 85]
[61 82]
[62 81]
[65 78]
[66 77]
[67 76]
[68 75]
[139 150]
[140 149]
[141 148]
[142 147]
[160 184]
[161 183]
[162 182]
[163 178]
[164 177]
[165 176]
[166 175]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
