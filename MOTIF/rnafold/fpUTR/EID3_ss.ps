%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCAUGGGCGGGCGUCCUCGGCUCUAACUGCCGCCACUUUCCACACGCUGGGAGGGCCGUUACCUCAGAGAUACCCGUGGCCGGCAUGUUGGUUGAAAAAGCUUCCCGGAAGGGAGACGAAGAGAAAGGAGAGGAGCAGCUCGUGAUCAUCCCCGGUAGCGAGUACGCGGCGAAGUAGGCGGCGGCGGAGGGAGCGCUG\
) } def
/len { sequence length } bind def

/coor [
[31.12503815 400.78729248]
[15.33742237 402.12747192]
[11.01079178 416.48992920]
[14.43868637 431.93530273]
[3.35916162 441.88989258]
[-0.96746880 456.25234985]
[-5.29409933 470.61480713]
[-1.01483703 486.44580078]
[-12.77541161 497.87472534]
[-28.47755241 493.14453125]
[-31.96824265 477.12121582]
[-19.65655899 466.28817749]
[-15.32992935 451.92572021]
[-11.00329876 437.56326294]
[-14.74066353 423.14517212]
[-3.35166860 412.16329956]
[0.97496182 397.80084229]
[-10.22249699 389.33703613]
[-17.87387276 377.53384399]
[-21.04262352 363.79852295]
[-19.32809830 349.77697754]
[-12.91608143 337.15661621]
[-2.55888700 327.46316528]
[10.51285076 321.87634277]
[24.73638344 321.08624268]
[29.28367424 306.79211426]
[33.83096313 292.49798584]
[38.37825394 278.20382690]
[42.92554474 263.90969849]
[35.87512589 250.83963013]
[40.28309631 236.27856445]
[54.04001236 228.97206116]
[58.58730316 214.67793274]
[63.13459396 200.38378906]
[67.68188477 186.08966064]
[72.22917175 171.79553223]
[76.77645874 157.50140381]
[81.32375336 143.20727539]
[85.87104034 128.91314697]
[71.68021393 103.58272552]
[83.83405304 81.04778290]
[77.98726654 67.23419952]
[72.14048004 53.42061615]
[66.29369354 39.60703278]
[60.44690323 25.79345131]
[54.60011673 11.97986889]
[-10.46623039 3.58565092]
[-22.97026634 -4.69982386]
[-35.47430038 -12.98529816]
[-51.25197220 -14.15819836]
[-57.58764267 -27.63813019]
[-70.09167480 -35.92360306]
[-82.59571075 -44.20907974]
[-95.09974670 -52.49455261]
[-107.60378265 -60.78002930]
[-126.00808716 -56.30436325]
[-141.57569885 -66.52231598]
[-144.68228149 -84.55887604]
[-157.43553162 -92.45536041]
[-170.18879700 -100.35183716]
[-182.90376282 -98.16403198]
[-193.36473083 -105.00808716]
[-196.25981140 -116.75669098]
[-208.88995361 -124.84863281]
[-221.52009583 -132.94056702]
[-235.92242432 -127.16541290]
[-250.96044922 -130.99131775]
[-260.85174561 -142.94715881]
[-261.79287720 -158.43566895]
[-253.42199707 -171.50119019]
[-238.95787048 -177.11978149]
[-223.96223450 -173.13096619]
[-214.20123291 -161.06852722]
[-213.42816162 -145.57070923]
[-200.79801941 -137.47877502]
[-188.16787720 -129.38684082]
[-170.62179565 -129.52478027]
[-162.29231262 -113.10509491]
[-149.53904724 -105.20861816]
[-136.78579712 -97.31213379]
[-126.50371552 -102.27132416]
[-114.98542786 -101.64219666]
[-105.10125732 -95.46558380]
[-99.37018585 -85.17911530]
[-99.31831360 -73.28406525]
[-86.81427765 -64.99858856]
[-74.31024170 -56.71311569]
[-61.80620193 -48.42763901]
[-49.30216980 -40.14216614]
[-34.41886902 -39.56189728]
[-27.18882751 -25.48933411]
[-14.68479156 -17.20385933]
[-2.18075562 -8.91838455]
[4.37141228 -12.56791878]
[24.02791595 -23.51651955]
[23.56599045 -38.50940323]
[23.10406494 -53.50229263]
[22.64213753 -68.49517822]
[11.98599720 -80.48793030]
[14.86018944 -96.27142334]
[29.05988121 -103.73790741]
[43.69228363 -97.15972900]
[47.53266907 -81.58311462]
[37.63502502 -68.95709991]
[38.09695053 -53.96421814]
[38.55887604 -38.97133255]
[39.02080154 -23.97844505]
[53.82512665 -21.56350708]
[59.02771759 -35.63237381]
[64.23030853 -49.70124435]
[69.43289948 -63.77011108]
[66.13632202 -79.83450317]
[78.57817078 -90.51778412]
[93.95932770 -84.82991791]
[96.45699310 -68.62208557]
[83.50177002 -58.56752014]
[78.29917908 -44.49865341]
[73.09658813 -30.42978477]
[67.89399719 -16.36091614]
[75.36422729 -29.36843872]
[87.60182190 -38.04261017]
[102.34931946 -40.78330231]
[116.88624573 -37.08494186]
[128.53097534 -27.62976646]
[135.13539124 -14.16197109]
[135.48121643 0.83404231]
[129.50460815 14.59195995]
[118.30811310 24.57386017]
[103.95711517 28.93838120]
[89.09896851 26.88040161]
[76.47453308 18.77955818]
[68.41369629 6.13308096]
[74.26049042 19.94666290]
[80.10727692 33.76024628]
[85.95406342 47.57382965]
[91.80084991 61.38741302]
[97.64763641 75.20099640]
[109.45697021 76.95461273]
[119.09401703 84.00178528]
[124.34513855 94.72377777]
[139.28115845 96.10780334]
[155.82330322 88.02424622]
[169.74223328 98.70820618]
[184.69778442 99.86206055]
[199.65335083 101.01591492]
[214.60890198 102.16976929]
[229.56445312 103.32363129]
[244.52000427 104.47748566]
[258.87448120 97.82466888]
[270.96884155 106.51807404]
[285.92440796 107.67192841]
[300.87997437 108.82579041]
[312.71725464 98.35418701]
[328.48666382 99.40325165]
[338.83255005 111.35057831]
[337.61682129 127.10803986]
[325.56076050 137.32701111]
[309.81704712 135.94474792]
[299.72610474 123.78134155]
[284.77053833 122.62748718]
[269.81500244 121.47363281]
[256.53024292 128.20896912]
[243.36614990 119.43303680]
[228.41059875 118.27918243]
[213.45504761 117.12532806]
[198.49949646 115.97147369]
[183.54393005 114.81761169]
[168.58837891 113.66375732]
[159.19793701 121.29467773]
[146.72543335 120.45220947]
[137.89712524 111.04381561]
[122.96111298 109.65979004]
[124.68334961 114.33800507]
[125.53542328 119.58416748]
[135.97743225 130.35284424]
[151.56060791 129.04960632]
[164.30584717 138.11012268]
[168.19522095 153.25630188]
[161.39230347 167.33657837]
[147.10920715 173.70268250]
[132.08998108 169.34872437]
[123.42624664 156.33052063]
[125.20875549 140.79486084]
[114.76674652 130.02618408]
[100.16517639 133.46043396]
[95.61788177 147.75456238]
[91.07059479 162.04869080]
[86.52330017 176.34281921]
[81.97601318 190.63696289]
[77.42871857 204.93109131]
[72.88143158 219.22521973]
[68.33414459 233.51934814]
[75.34098053 247.43127441]
[70.52575684 261.86279297]
[57.21967316 268.45700073]
[52.67238235 282.75112915]
[48.12509537 297.04525757]
[43.57780457 311.33938599]
[39.03051376 325.63351440]
[51.38539124 335.91854858]
[58.83062744 350.12258911]
[60.25277328 366.05780029]
[55.46358871 381.28228760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[5 14]
[6 13]
[7 12]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[41 137]
[42 136]
[43 135]
[44 134]
[45 133]
[46 132]
[47 93]
[48 92]
[49 91]
[51 89]
[52 88]
[53 87]
[54 86]
[55 85]
[58 80]
[59 79]
[60 78]
[63 76]
[64 75]
[65 74]
[95 107]
[96 106]
[97 105]
[98 104]
[108 119]
[109 118]
[110 117]
[111 116]
[140 172]
[141 171]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[150 161]
[151 160]
[152 159]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
