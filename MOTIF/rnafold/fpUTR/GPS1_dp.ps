%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPS1)
} def

/sequence { (\
GCGCCCCGGAAGCGACGGCUUCGCUGCCCCGGAAGUGGACGGCACGCCGCGGCGGGGUGGGUGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 64 0.998167385 ubox
2 59 0.016295870 ubox
2 63 0.998893782 ubox
3 58 0.016897727 ubox
3 62 0.998464777 ubox
3 64 0.042471581 ubox
4 57 0.016992314 ubox
4 60 0.008656422 ubox
4 61 0.995529284 ubox
4 63 0.042511582 ubox
5 56 0.017035751 ubox
5 59 0.011815931 ubox
5 60 0.990711255 ubox
5 61 0.092076909 ubox
6 18 0.003653942 ubox
6 55 0.017070321 ubox
6 56 0.003318016 ubox
6 57 0.027489247 ubox
6 59 0.981507621 ubox
6 60 0.122554220 ubox
6 61 0.004310108 ubox
7 14 0.022975340 ubox
7 17 0.009001837 ubox
7 23 0.244294088 ubox
7 26 0.035944284 ubox
7 54 0.017086311 ubox
7 55 0.003819573 ubox
7 56 0.037277529 ubox
7 59 0.146601630 ubox
7 60 0.004280075 ubox
8 13 0.023112033 ubox
8 16 0.009199627 ubox
8 22 0.205307614 ubox
8 25 0.043843690 ubox
8 28 0.004336869 ubox
8 53 0.012240459 ubox
8 58 0.052016079 ubox
9 21 0.140449069 ubox
9 22 0.948414906 ubox
9 24 0.030502253 ubox
9 27 0.005380403 ubox
10 20 0.099063326 ubox
10 21 0.960959209 ubox
11 20 0.966380236 ubox
11 25 0.225239508 ubox
12 19 0.972087709 ubox
12 24 0.232325221 ubox
12 50 0.009744858 ubox
12 53 0.014366454 ubox
13 18 0.971772984 ubox
13 23 0.232359357 ubox
13 49 0.009740166 ubox
13 51 0.003887231 ubox
13 52 0.014199982 ubox
14 22 0.232230059 ubox
14 48 0.009674748 ubox
14 50 0.004600986 ubox
15 20 0.011168084 ubox
15 21 0.220865468 ubox
16 23 0.005662438 ubox
16 26 0.017926831 ubox
16 46 0.009618051 ubox
16 49 0.014744147 ubox
17 22 0.005785929 ubox
17 25 0.021748748 ubox
17 45 0.009601296 ubox
17 48 0.014788562 ubox
18 24 0.022381826 ubox
18 43 0.009620896 ubox
18 47 0.014794858 ubox
18 58 0.010365012 ubox
19 23 0.022223152 ubox
19 42 0.009618328 ubox
19 46 0.014650183 ubox
19 57 0.010695470 ubox
20 39 0.005311555 ubox
20 41 0.007735946 ubox
20 56 0.010690507 ubox
21 38 0.008765170 ubox
21 55 0.010674223 ubox
22 37 0.009602479 ubox
22 54 0.010761040 ubox
22 56 0.005470674 ubox
23 36 0.009667087 ubox
23 43 0.019980774 ubox
23 45 0.004823422 ubox
23 47 0.004920818 ubox
23 53 0.011775259 ubox
23 58 0.014144410 ubox
24 35 0.009679189 ubox
24 42 0.020019164 ubox
24 46 0.004966747 ubox
24 52 0.011826383 ubox
24 55 0.139184695 ubox
24 56 0.009027119 ubox
24 57 0.012709347 ubox
24 60 0.054241302 ubox
25 34 0.009664898 ubox
25 41 0.019997369 ubox
25 44 0.009060850 ubox
25 51 0.011813102 ubox
25 54 0.139875228 ubox
25 55 0.006536472 ubox
25 56 0.009760390 ubox
25 59 0.087515845 ubox
26 40 0.019910361 ubox
26 43 0.010567710 ubox
26 50 0.011800800 ubox
26 53 0.141204745 ubox
26 58 0.957737876 ubox
27 38 0.013406175 ubox
27 42 0.010568087 ubox
27 49 0.010898605 ubox
27 52 0.141103203 ubox
27 55 0.003665412 ubox
27 57 0.989253896 ubox
28 37 0.013386473 ubox
28 38 0.008836508 ubox
28 41 0.010507336 ubox
28 51 0.140808516 ubox
28 52 0.007180846 ubox
28 54 0.003675277 ubox
28 56 0.989551376 ubox
28 57 0.003677390 ubox
29 37 0.008527262 ubox
29 38 0.016015147 ubox
29 42 0.004550138 ubox
29 51 0.009661776 ubox
29 52 0.003801069 ubox
29 55 0.989560321 ubox
29 56 0.003764504 ubox
30 37 0.016236269 ubox
30 41 0.004607624 ubox
30 49 0.141139942 ubox
30 51 0.003837777 ubox
30 54 0.989537221 ubox
30 55 0.003746100 ubox
31 36 0.014581561 ubox
31 40 0.004675333 ubox
31 48 0.141693257 ubox
31 50 0.003895104 ubox
31 53 0.987220587 ubox
32 47 0.141229245 ubox
35 43 0.006658560 ubox
35 45 0.142003843 ubox
35 47 0.013466921 ubox
35 50 0.988609471 ubox
36 42 0.006680119 ubox
36 44 0.142120607 ubox
36 46 0.013747133 ubox
36 49 0.988837587 ubox
37 43 0.142131976 ubox
37 45 0.013793291 ubox
37 48 0.989309146 ubox
38 47 0.989133565 ubox
40 46 0.888443198 ubox
40 49 0.007945682 ubox
41 45 0.831509852 ubox
41 48 0.009021031 ubox
42 47 0.009054886 ubox
44 58 0.014065152 ubox
45 54 0.006271830 ubox
45 57 0.015040308 ubox
46 53 0.007036506 ubox
47 52 0.007092009 ubox
47 55 0.015018411 ubox
48 54 0.015024818 ubox
49 53 0.014057533 ubox
1 64 0.9500000 lbox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
4 61 0.9500000 lbox
5 60 0.9500000 lbox
6 59 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
35 50 0.9500000 lbox
36 49 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
40 46 0.9500000 lbox
41 45 0.9500000 lbox
showpage
end
%%EOF
