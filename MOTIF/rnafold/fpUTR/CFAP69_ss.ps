%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAACGCGCUGGCUUGUGUUAACAACCGGCCCGGGAUCAGAGGUCUGGGUCAACUGGGGGGCGGCAGCGGCGCUAAGCGGACUGUAUGGCGGUGGCCUAGGCCCCUGGCGGAAUUUUGGGACCUUUCGCGACUCUAGCGACUCUCAGGCUGCCUUCCCUUCUCGGUGGCGGGGCCUCUUUGGGCCCAGCGGCUGCGGGCGCACUGUAGGACAGGAAGAUCCCCCCACUCUCCACCCCGCCGCCACCGGCC\
) } def
/len { sequence length } bind def

/coor [
[124.84313965 215.36253357]
[111.76387024 223.71192932]
[96.27693176 222.74531555]
[84.33736420 212.83439636]
[80.53617859 197.79011536]
[86.33500671 183.39729309]
[99.50407410 175.19027710]
[100.43846893 160.21940613]
[86.02471161 156.06687927]
[78.85089874 169.24020386]
[71.67709351 182.41352844]
[64.50328064 195.58685303]
[57.32947159 208.76016235]
[55.98034286 217.76704407]
[49.98323441 222.05218506]
[42.64575958 235.13505554]
[35.30828476 248.21792603]
[27.97080803 261.30078125]
[28.71617699 277.68298340]
[14.75753975 286.29046631]
[0.45434693 278.26858521]
[0.52049613 261.86956787]
[14.88793945 253.96331787]
[22.22541428 240.88044739]
[29.56288910 227.79757690]
[36.90036392 214.71470642]
[44.15614700 201.58636475]
[51.32995605 188.41304016]
[58.50376511 175.23971558]
[65.67757416 162.06639099]
[72.85138702 148.89306641]
[61.98365021 138.55418396]
[49.18428802 146.37571716]
[41.44322586 160.17378235]
[26.54866219 160.20806885]
[13.74929810 168.02958679]
[0.94993526 175.85112000]
[-11.84942818 183.67265320]
[-24.64879036 191.49417114]
[-35.01140594 204.91253662]
[-50.77403259 198.66947937]
[-49.13848114 181.79460144]
[-32.47031784 178.69480896]
[-19.67095566 170.87327576]
[-6.87159300 163.05175781]
[5.92777061 155.23022461]
[18.72713280 147.40869141]
[25.55269814 134.17008972]
[41.36275864 133.57635498]
[54.16212463 125.75482941]
[52.52052307 115.07530975]
[53.19641876 104.83693695]
[55.93748093 95.51290894]
[60.40055466 87.49184418]
[66.17547607 81.06156921]
[72.81149292 76.39909363]
[79.84482574 73.56698608]
[73.67552185 59.89439392]
[67.50621033 46.22180939]
[61.33690643 32.54922104]
[55.16759872 18.87663269]
[48.99829483 5.20404482]
[36.26986694 -4.19264126]
[38.08789825 -18.97587585]
[31.91859055 -32.64846420]
[25.74928474 -46.32105255]
[19.57997894 -59.99364090]
[13.41067123 -73.66622925]
[7.24136496 -87.33881378]
[-59.04050064 -78.25294495]
[-71.43408203 -86.70274353]
[-83.82766724 -95.15254974]
[-92.65545654 -97.39176941]
[-96.32218170 -103.78573608]
[-108.60945892 -112.38938141]
[-120.89674377 -120.99303436]
[-136.63911438 -122.57045746]
[-142.62675476 -136.20854187]
[-154.91403198 -144.81219482]
[-167.71089172 -143.34358215]
[-177.76280212 -150.74084473]
[-180.01580811 -162.60884094]
[-192.19488525 -171.36499023]
[-204.37394714 -180.12115479]
[-216.55302429 -188.87730408]
[-228.73208618 -197.63346863]
[-245.12199402 -201.97019958]
[-245.49191284 -218.92012024]
[-229.30682373 -223.96777344]
[-219.97593689 -209.81253052]
[-207.79685974 -201.05638123]
[-195.61779785 -192.30021667]
[-183.43872070 -183.54406738]
[-171.25965881 -174.78791809]
[-153.71844482 -173.97108459]
[-146.31037903 -157.09947205]
[-134.02310181 -148.49583435]
[-119.15959930 -147.53378296]
[-112.29309845 -133.28030396]
[-100.00581360 -124.67666626]
[-87.71853638 -116.07302094]
[-75.37786102 -107.54612732]
[-62.98427963 -99.09632874]
[-50.59069824 -90.64653015]
[-39.16035461 -100.35977936]
[-45.49962997 -113.95439911]
[-59.23606491 -122.91220856]
[-58.07653046 -139.27030945]
[-43.21385574 -146.20088196]
[-29.93748474 -136.57435608]
[-31.90501404 -120.29367065]
[-25.56573868 -106.69905090]
[-18.13615036 -107.72432709]
[-20.18645668 -122.58354187]
[-5.32720900 -124.63360596]
[-3.27696967 -109.77488708]
[4.15262032 -110.80016327]
[6.57298660 -125.60359955]
[8.99335289 -140.40704346]
[11.41371918 -155.21047974]
[13.83408642 -170.01391602]
[16.25445175 -184.81735229]
[9.81213856 -191.63780212]
[7.25295925 -200.52122498]
[9.02596569 -209.45439148]
[14.61286831 -216.47218323]
[22.67085075 -220.08988953]
[25.64304161 -234.79248047]
[28.61523438 -249.49505615]
[31.58742714 -264.19766235]
[21.69674873 -276.30996704]
[21.95739174 -291.94540405]
[32.24629211 -303.72131348]
[47.70534134 -306.07754517]
[61.03525543 -297.90151978]
[65.94204712 -283.05371094]
[60.10889053 -268.54479980]
[46.29001236 -261.22546387]
[43.31782150 -246.52287292]
[40.34563065 -231.82028198]
[37.37343597 -217.11769104]
[45.58919144 -198.16954041]
[31.05789185 -182.39698792]
[28.63752556 -167.59355164]
[26.21715927 -152.79011536]
[23.79679298 -137.98667908]
[21.37642670 -123.18323517]
[18.95606041 -108.37979126]
[20.91395378 -93.50812531]
[27.08325958 -79.83553314]
[33.25256729 -66.16294861]
[39.42187119 -52.49035645]
[45.59117889 -38.81777191]
[51.76048660 -25.14518166]
[64.04764557 -16.72645187]
[62.67088318 -0.96526194]
[68.84018707 12.70732594]
[75.00949097 26.37991333]
[81.17880249 40.05250168]
[87.34810638 53.72509003]
[93.51741791 67.39767456]
[124.90458679 69.10074615]
[146.12477112 99.18125153]
[134.42651367 139.73962402]
[148.09910583 145.90892029]
[161.77168274 152.07823181]
[175.44427490 158.24754333]
[189.11686707 164.41683960]
[202.78945923 170.58615112]
[216.46203613 176.75546265]
[230.13462830 182.92475891]
[245.06910706 184.32521057]
[259.65026855 180.80535889]
[274.23144531 177.28549194]
[288.81262207 173.76564026]
[303.39379883 170.24577332]
[317.97497559 166.72590637]
[329.47698975 155.03678894]
[345.28100586 159.41462708]
[349.12918091 175.35588074]
[337.06286621 186.46156311]
[321.49484253 181.30708313]
[306.91366577 184.82695007]
[292.33248901 188.34680176]
[277.75131226 191.86666870]
[263.17013550 195.38653564]
[248.58897400 198.90638733]
[247.10287476 206.25769043]
[242.64459229 228.31156921]
[254.71354675 237.21887207]
[266.78253174 246.12617493]
[278.85147095 255.03347778]
[292.24197388 261.79330444]
[306.57556152 266.21463013]
[320.90914917 270.63595581]
[335.24273682 275.05728149]
[349.57632446 279.47860718]
[363.90991211 283.89993286]
[378.70861816 277.70492554]
[392.70910645 285.53857422]
[395.17141724 301.39154053]
[384.20666504 313.10278320]
[368.22607422 311.68847656]
[359.48858643 298.23352051]
[345.15499878 293.81219482]
[330.82141113 289.39086914]
[316.48782349 284.96954346]
[302.15423584 280.54821777]
[287.82061768 276.12689209]
[283.71234131 282.40161133]
[296.26162720 290.61837769]
[288.04461670 303.16754150]
[275.49575806 294.95101929]
[271.38748169 301.22570801]
[281.17178345 312.59530640]
[290.95608521 323.96487427]
[298.90353394 328.41259766]
[300.79043579 335.53771973]
[310.43225098 347.02838135]
[325.72213745 344.97344971]
[339.68609619 351.53173828]
[347.86828613 364.61053467]
[347.65780640 380.03646851]
[339.12179565 392.88714600]
[324.98406982 399.06198120]
[309.75595093 396.59060669]
[298.29666138 386.26162720]
[294.26278687 371.37097168]
[298.94158936 356.67019653]
[289.29977417 345.17953491]
[279.58651733 333.74917603]
[269.80221558 322.37960815]
[260.01791382 311.01004028]
[255.39755249 296.43853760]
[256.42047119 283.13537598]
[261.85702515 272.94882202]
[269.94418335 267.10244751]
[257.87521362 258.19512939]
[245.80624390 249.28784180]
[233.73728943 240.38053894]
[223.96531677 196.59735107]
[210.29273987 190.42803955]
[196.62014771 184.25874329]
[182.94755554 178.08943176]
[169.27496338 171.92012024]
[155.60238647 165.75082397]
[141.92979431 159.58151245]
[128.25720215 153.41220093]
[115.40933990 161.15379333]
[114.47494507 176.12466431]
[126.52132416 185.90548706]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 250]
[8 249]
[9 31]
[10 30]
[11 29]
[12 28]
[13 27]
[15 26]
[16 25]
[17 24]
[18 23]
[32 50]
[33 49]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[57 161]
[58 160]
[59 159]
[60 158]
[61 157]
[62 156]
[64 154]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 104]
[71 103]
[72 102]
[74 101]
[75 100]
[76 99]
[78 97]
[79 96]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[105 112]
[106 111]
[117 148]
[118 147]
[119 146]
[120 145]
[121 144]
[122 143]
[127 141]
[128 140]
[129 139]
[130 138]
[164 248]
[165 247]
[166 246]
[167 245]
[168 244]
[169 243]
[170 242]
[171 241]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
[189 240]
[190 239]
[191 238]
[192 237]
[193 209]
[194 208]
[195 207]
[196 206]
[197 205]
[198 204]
[214 233]
[215 232]
[216 231]
[218 230]
[219 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
