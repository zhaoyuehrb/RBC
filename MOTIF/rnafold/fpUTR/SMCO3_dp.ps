%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SMCO3)
} def

/sequence { (\
ACUUUAACAAUACUCCUAAACAACUGCUAGGACCACGGAACUCAGAAACACAGCAAGCGAUCAUAUUGGAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 30 0.004777758 ubox
2 31 0.006466399 ubox
2 38 0.017280924 ubox
2 45 0.085007838 ubox
2 53 0.012111773 ubox
2 57 0.016902290 ubox
2 69 0.020949717 ubox
3 10 0.030414629 ubox
3 19 0.003906914 ubox
3 20 0.016640905 ubox
3 29 0.004679639 ubox
3 30 0.006257154 ubox
3 31 0.005892641 ubox
3 37 0.016633213 ubox
3 38 0.003530079 ubox
3 39 0.017590709 ubox
3 40 0.047841650 ubox
3 44 0.081954628 ubox
3 45 0.010510671 ubox
3 46 0.020766693 ubox
3 47 0.015481710 ubox
3 48 0.013068387 ubox
3 52 0.011729173 ubox
3 56 0.016722323 ubox
3 57 0.003362232 ubox
3 68 0.014550392 ubox
3 69 0.007144893 ubox
3 70 0.045993134 ubox
3 71 0.079082522 ubox
3 72 0.136358556 ubox
4 9 0.029818172 ubox
4 10 0.022631076 ubox
4 18 0.004181427 ubox
4 19 0.019515638 ubox
4 29 0.005728062 ubox
4 30 0.007283923 ubox
4 37 0.003718597 ubox
4 38 0.018358213 ubox
4 39 0.056316143 ubox
4 40 0.027019117 ubox
4 44 0.010975765 ubox
4 45 0.021720555 ubox
4 46 0.017026727 ubox
4 47 0.015307970 ubox
4 48 0.003841356 ubox
4 55 0.014358088 ubox
4 56 0.004312200 ubox
4 69 0.048146881 ubox
4 70 0.085866452 ubox
4 71 0.154372203 ubox
4 72 0.253784723 ubox
5 9 0.021698863 ubox
5 12 0.042495451 ubox
5 18 0.020063888 ubox
5 29 0.007876636 ubox
5 37 0.016376307 ubox
5 38 0.056502171 ubox
5 39 0.030446497 ubox
5 44 0.019318068 ubox
5 45 0.016405904 ubox
5 46 0.015347384 ubox
5 47 0.004088123 ubox
5 55 0.004335969 ubox
5 65 0.006046831 ubox
5 68 0.041621695 ubox
5 69 0.079955079 ubox
5 70 0.146987154 ubox
5 71 0.289376140 ubox
6 11 0.042100742 ubox
6 17 0.019532165 ubox
6 28 0.007950178 ubox
6 64 0.005959376 ubox
6 67 0.040879718 ubox
7 66 0.034760729 ubox
8 26 0.009430020 ubox
8 68 0.507506587 ubox
9 25 0.008936448 ubox
9 67 0.507765665 ubox
10 61 0.008149450 ubox
10 64 0.015676156 ubox
10 66 0.506490483 ubox
10 73 0.027553651 ubox
11 18 0.007667247 ubox
11 60 0.008626654 ubox
11 63 0.017005945 ubox
11 65 0.503784520 ubox
11 68 0.003296157 ubox
11 72 0.029617429 ubox
12 17 0.007552846 ubox
12 64 0.478794250 ubox
12 67 0.003372310 ubox
13 30 0.006873161 ubox
13 31 0.003842620 ubox
13 38 0.045395580 ubox
13 45 0.020876902 ubox
13 53 0.017624106 ubox
13 57 0.036941691 ubox
13 69 0.016023326 ubox
14 29 0.006632993 ubox
14 30 0.003221737 ubox
14 32 0.789164395 ubox
14 37 0.028123427 ubox
14 39 0.069325799 ubox
14 44 0.013070024 ubox
14 46 0.004508113 ubox
14 52 0.011914685 ubox
14 56 0.032424239 ubox
14 60 0.305967929 ubox
14 68 0.011000267 ubox
14 69 0.005710617 ubox
14 70 0.348006651 ubox
15 30 0.003464831 ubox
15 31 0.852609044 ubox
15 38 0.072696436 ubox
15 45 0.004430448 ubox
15 59 0.308225291 ubox
15 68 0.006752052 ubox
15 69 0.365320675 ubox
16 30 0.852941604 ubox
16 31 0.006366332 ubox
16 37 0.072588624 ubox
16 38 0.006853232 ubox
16 45 0.007394962 ubox
16 53 0.033329909 ubox
16 57 0.300892079 ubox
16 68 0.364907225 ubox
16 69 0.062539807 ubox
17 26 0.015957472 ubox
17 29 0.850724114 ubox
17 30 0.006219972 ubox
17 37 0.006700799 ubox
17 44 0.007235879 ubox
17 52 0.032370542 ubox
17 56 0.296568210 ubox
17 65 0.034360462 ubox
17 68 0.063272986 ubox
18 25 0.026889911 ubox
18 28 0.824950883 ubox
18 64 0.035910684 ubox
18 67 0.086072929 ubox
19 66 0.081364345 ubox
19 67 0.011512984 ubox
20 66 0.012641863 ubox
21 68 0.016113683 ubox
22 67 0.016401225 ubox
23 66 0.015698555 ubox
24 30 0.043241257 ubox
24 31 0.034835505 ubox
24 38 0.024498463 ubox
24 45 0.075252124 ubox
24 53 0.089243470 ubox
24 57 0.114146664 ubox
24 69 0.009126795 ubox
25 29 0.039007934 ubox
25 30 0.034089064 ubox
25 35 0.005776981 ubox
25 37 0.024605126 ubox
25 44 0.075578749 ubox
25 50 0.021660620 ubox
25 52 0.089568494 ubox
25 55 0.310721510 ubox
25 56 0.081067641 ubox
25 59 0.312664656 ubox
25 68 0.008841875 ubox
26 34 0.006299380 ubox
26 36 0.024508936 ubox
26 43 0.075094084 ubox
26 49 0.022611189 ubox
26 51 0.089403385 ubox
26 54 0.326652926 ubox
26 58 0.353529756 ubox
26 67 0.006796418 ubox
27 38 0.024545261 ubox
27 45 0.135578049 ubox
27 53 0.326635842 ubox
27 57 0.353592332 ubox
27 69 0.019772912 ubox
28 37 0.024463892 ubox
28 44 0.134587620 ubox
28 52 0.315298709 ubox
28 56 0.343770655 ubox
28 65 0.009223004 ubox
28 68 0.019837887 ubox
29 42 0.232084382 ubox
29 64 0.008814113 ubox
29 67 0.019708730 ubox
30 41 0.235210115 ubox
30 42 0.072910700 ubox
30 43 0.041199369 ubox
30 66 0.019124004 ubox
31 41 0.075124032 ubox
31 42 0.034446842 ubox
31 43 0.074003176 ubox
31 62 0.017663088 ubox
32 42 0.070071609 ubox
32 61 0.018333062 ubox
33 69 0.454568930 ubox
34 68 0.456562470 ubox
35 67 0.437466092 ubox
36 59 0.367117124 ubox
36 68 0.027067303 ubox
37 43 0.227755570 ubox
37 58 0.371930234 ubox
37 62 0.064791284 ubox
37 67 0.025704617 ubox
38 42 0.148824514 ubox
38 61 0.054280152 ubox
38 62 0.302963564 ubox
38 66 0.021053424 ubox
38 67 0.009070237 ubox
39 61 0.292063344 ubox
39 66 0.012427604 ubox
39 67 0.007114526 ubox
40 66 0.009160961 ubox
41 53 0.190873719 ubox
41 57 0.146057671 ubox
41 69 0.026580615 ubox
42 52 0.182450632 ubox
42 56 0.139412153 ubox
42 60 0.345167974 ubox
42 68 0.014183440 ubox
42 69 0.067068865 ubox
42 70 0.043102526 ubox
43 59 0.355780559 ubox
43 68 0.083710560 ubox
43 69 0.044620222 ubox
44 67 0.081197598 ubox
45 62 0.121601364 ubox
45 66 0.056057371 ubox
45 67 0.020429176 ubox
46 61 0.115012197 ubox
46 66 0.022340767 ubox
46 67 0.011628127 ubox
47 66 0.011298701 ubox
47 67 0.006831616 ubox
48 66 0.006685952 ubox
49 68 0.037327447 ubox
50 67 0.033673480 ubox
51 68 0.080762887 ubox
52 67 0.078939985 ubox
53 66 0.064004016 ubox
54 68 0.222874727 ubox
55 67 0.222642388 ubox
56 66 0.217132909 ubox
56 67 0.017946017 ubox
57 66 0.020108500 ubox
58 68 0.276640767 ubox
59 67 0.278355232 ubox
60 66 0.274874034 ubox
60 73 0.009520088 ubox
61 65 0.243823616 ubox
61 69 0.072798098 ubox
61 70 0.156425324 ubox
61 72 0.007962954 ubox
62 68 0.113170043 ubox
62 69 0.166707946 ubox
63 67 0.092325167 ubox
63 73 0.011095617 ubox
64 72 0.012235261 ubox
65 73 0.018272437 ubox
66 72 0.020717360 ubox
67 71 0.018164891 ubox
14 32 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
showpage
end
%%EOF
