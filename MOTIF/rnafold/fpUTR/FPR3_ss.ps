%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUAACUAUCAAAACACUCAUUUUGUUUUAUAGCAUGACAGGCUGUCUGAUUCCAUCUUUAUAACCAAAGCCAAUUAAGAUCUUAAAACCAAACAUAUAACUUCAUCUUUUUACAAGUACUUAGAGCCUGAGUUGCUCCACAGGAAUCCAGGAACUGGGCACAGGAAAAGGAUCUAAGCUGGUGGUGUGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[128.32649231 111.63327026]
[125.60293579 117.99101257]
[121.44297028 123.70119476]
[116.00300598 128.43780518]
[109.51363373 131.91317749]
[102.27007294 133.89480591]
[94.61888885 134.21992493]
[86.94141388 132.80668640]
[77.44285583 144.41606140]
[67.94430542 156.02543640]
[58.44575119 167.63479614]
[55.42851639 176.26905823]
[48.70198822 179.35198975]
[39.01951218 190.80841064]
[29.33703804 202.26483154]
[19.65456390 213.72126770]
[9.97208977 225.17768860]
[0.28961566 236.63410950]
[3.12857652 252.01184082]
[-4.62619591 265.59115601]
[-19.31313515 270.96029663]
[-33.99751663 265.58413696]
[-41.74582672 252.00115967]
[-38.89954758 236.62478638]
[-26.80260658 226.71530151]
[-11.16681004 226.95164490]
[-1.48433578 215.49520874]
[8.19813824 204.03878784]
[17.88061333 192.58236694]
[27.56308746 181.12593079]
[37.24555969 169.66950989]
[46.83638000 158.13624573]
[56.33493423 146.52687073]
[65.83348846 134.91751099]
[75.33203888 123.30813599]
[67.69435883 110.39822388]
[52.94589996 113.13371277]
[45.06805420 117.78060913]
[37.94056320 115.79327393]
[23.15035629 118.29322815]
[8.36015034 120.79319000]
[-6.43005610 123.29314423]
[-21.03995132 131.89472961]
[-33.34980774 120.23695374]
[-25.55532455 105.18097687]
[-8.93001461 108.50293732]
[5.86019135 106.00298309]
[20.65039825 103.50302124]
[35.44060516 101.00306702]
[50.21040726 98.38525391]
[64.95886993 95.64976501]
[85.93591309 71.67234039]
[114.02082062 75.82863617]
[124.75351715 65.34964752]
[135.48622131 54.87066269]
[146.21891785 44.39167404]
[156.95161438 33.91268539]
[167.68431091 23.43370056]
[152.68537903 23.25537682]
[141.22293091 13.58003426]
[138.52894592 -1.17606497]
[145.83308411 -14.27757168]
[159.80142212 -19.74436569]
[174.05815125 -15.08115673]
[182.09587097 -2.41644263]
[180.24571228 12.46922588]
[192.07894897 3.25106835]
[203.91218567 -5.96708918]
[205.88037109 -10.82658386]
[209.18914795 -14.11006069]
[213.01054382 -15.57056427]
[216.53898621 -15.32687950]
[228.79953003 -23.96858597]
[241.06007385 -32.61029053]
[253.32061768 -41.25199890]
[260.14288330 -55.52669907]
[275.00332642 -56.53482056]
[287.26388550 -65.17652893]
[294.08615112 -79.45123291]
[308.94659424 -80.45935059]
[321.20715332 -89.10105896]
[333.46768188 -97.74276733]
[345.72824097 -106.38446808]
[357.98876953 -115.02617645]
[343.13302612 -112.95093536]
[328.20700073 -114.43886566]
[314.05328369 -119.40596008]
[301.47082520 -127.57184601]
[291.16989136 -138.47555542]
[283.73196411 -151.50157166]
[279.57693481 -165.91461182]
[278.93933105 -180.90106201]
[281.85513306 -195.61492920]
[288.15975952 -209.22564697]
[297.49731445 -220.96488953]
[309.34072876 -230.16999817]
[323.02139282 -236.32133484]
[337.76712036 -239.07167053]
[352.74545288 -238.26574707]
[367.11090088 -233.94906616]
[380.05255127 -226.36528015]
[390.83984375 -215.94252014]
[398.86386108 -203.26911926]
[403.67166138 -189.06048584]
[404.99182129 -174.11869812]
[402.74981689 -159.28718567]
[397.07223511 -145.40321350]
[388.27957153 -133.25048828]
[376.87319946 -123.51839447]
[391.47393799 -126.95607758]
[406.07470703 -130.39376831]
[420.67547607 -133.83143616]
[435.27624512 -137.26911926]
[449.87701416 -140.70680237]
[454.05187988 -151.85287476]
[463.00082397 -159.51710510]
[474.42132568 -161.88006592]
[485.44769287 -158.46713257]
[493.36990356 -150.23837280]
[508.07287598 -153.20870972]
[520.06762695 -163.52552795]
[534.07501221 -158.46173096]
[548.77795410 -161.43206787]
[563.48095703 -164.40238953]
[578.18389893 -167.37272644]
[592.88684082 -170.34304810]
[601.64215088 -183.22647095]
[616.59533691 -186.02935791]
[628.82379150 -177.60311890]
[643.52673340 -180.57345581]
[658.22973633 -183.54379272]
[672.93267822 -186.51411438]
[684.92742920 -196.83094788]
[698.93481445 -191.76713562]
[713.63775635 -194.73747253]
[728.34075928 -197.70780945]
[740.33544922 -208.02462769]
[754.34289551 -202.96081543]
[769.04583740 -205.93115234]
[780.97833252 -217.18051147]
[796.60693359 -212.21282959]
[799.85430908 -196.13842773]
[787.37982178 -185.49327087]
[772.01617432 -191.22819519]
[757.31317139 -188.25785828]
[746.37011719 -178.15348816]
[731.31103516 -183.00483704]
[716.60809326 -180.03451538]
[701.90515137 -177.06417847]
[690.96203613 -166.95980835]
[675.90301514 -171.81115723]
[661.20001221 -168.84082031]
[646.49707031 -165.87049866]
[631.79412842 -162.90016174]
[623.79577637 -150.38766479]
[608.92718506 -147.16587830]
[595.85717773 -155.64009094]
[581.15423584 -152.66975403]
[566.45123291 -149.69943237]
[551.74829102 -146.72909546]
[537.04534912 -143.75875854]
[526.10223389 -133.65440369]
[511.04321289 -138.50575256]
[496.34024048 -135.53541565]
[487.16278076 -119.70555115]
[469.02062988 -115.52790070]
[453.31469727 -126.10604095]
[438.71392822 -122.66835785]
[424.11315918 -119.23067474]
[409.51239014 -115.79299927]
[394.91162109 -112.35531616]
[380.31088257 -108.91763306]
[366.63049316 -102.76563263]
[354.36993408 -94.12392426]
[342.10940552 -85.48222351]
[329.84884644 -76.84051514]
[317.58831787 -68.19880676]
[311.64300537 -54.54222107]
[295.90557861 -52.91598511]
[283.64505005 -44.27428055]
[277.69973755 -30.61768913]
[261.96231079 -28.99145508]
[249.70176697 -20.34974861]
[237.44123840 -11.70804214]
[225.18069458 -3.06633615]
[213.13035583 5.86615086]
[201.29710388 15.08430862]
[189.46386719 24.30246544]
[178.16329956 34.16639709]
[167.43060303 44.64538574]
[156.69790649 55.12437439]
[145.96520996 65.60336304]
[135.23249817 76.08234406]
[124.49980927 86.56133270]
[127.50785065 92.12395477]
[129.23695374 98.36067200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 35]
[9 34]
[10 33]
[11 32]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[36 51]
[37 50]
[39 49]
[40 48]
[41 47]
[42 46]
[53 194]
[54 193]
[55 192]
[56 191]
[57 190]
[58 189]
[66 188]
[67 187]
[68 186]
[72 185]
[73 184]
[74 183]
[75 182]
[77 180]
[78 179]
[80 177]
[81 176]
[82 175]
[83 174]
[84 173]
[109 172]
[110 171]
[111 170]
[112 169]
[113 168]
[114 167]
[119 164]
[120 163]
[122 161]
[123 160]
[124 159]
[125 158]
[126 157]
[129 154]
[130 153]
[131 152]
[132 151]
[134 149]
[135 148]
[136 147]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
