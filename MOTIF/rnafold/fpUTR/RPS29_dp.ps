%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPS29)
} def

/sequence { (\
CUCAAAAAUUUGAAGAGCGCAUGCGUGGGCCAGCUUCUUCCUUUUACCUCGUUGCACUGCUGAGAGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.084891560 ubox
1 17 0.027656947 ubox
1 64 0.114803892 ubox
1 66 0.040098777 ubox
1 70 0.023957430 ubox
2 13 0.187961567 ubox
2 14 0.060625857 ubox
2 16 0.028420177 ubox
2 63 0.115478435 ubox
2 65 0.040476463 ubox
2 69 0.022070866 ubox
3 12 0.210738044 ubox
3 15 0.028499282 ubox
3 54 0.018527023 ubox
3 62 0.115527528 ubox
3 64 0.037619954 ubox
4 10 0.019399356 ubox
4 11 0.210156195 ubox
4 43 0.008611682 ubox
4 44 0.031915195 ubox
4 45 0.131981388 ubox
4 53 0.018765523 ubox
4 61 0.106103769 ubox
5 9 0.017200712 ubox
5 10 0.183430122 ubox
5 11 0.030106624 ubox
5 42 0.008981086 ubox
5 43 0.035324818 ubox
5 44 0.142671124 ubox
5 45 0.457490723 ubox
5 52 0.017282892 ubox
5 53 0.004474505 ubox
6 10 0.024572689 ubox
6 42 0.033647998 ubox
6 43 0.142359592 ubox
6 44 0.488309051 ubox
6 45 0.228930700 ubox
6 52 0.004854231 ubox
6 53 0.003865109 ubox
7 42 0.129860941 ubox
7 43 0.493898762 ubox
7 44 0.242452738 ubox
7 45 0.218408062 ubox
7 52 0.004238903 ubox
7 53 0.007277367 ubox
8 42 0.483760475 ubox
8 43 0.232759007 ubox
8 44 0.227702226 ubox
8 52 0.008272236 ubox
9 51 0.008227420 ubox
9 63 0.005044972 ubox
9 64 0.005227388 ubox
9 65 0.019739018 ubox
9 66 0.059983358 ubox
9 69 0.007026735 ubox
9 70 0.022805147 ubox
10 62 0.005158811 ubox
10 63 0.008438776 ubox
10 64 0.020989346 ubox
10 65 0.078579973 ubox
10 66 0.007849963 ubox
10 68 0.006543954 ubox
10 69 0.033169609 ubox
10 70 0.006041575 ubox
11 16 0.003895993 ubox
11 46 0.013775862 ubox
11 51 0.006852709 ubox
11 62 0.008349182 ubox
11 63 0.020461510 ubox
11 64 0.080371253 ubox
11 65 0.009433930 ubox
11 68 0.034656335 ubox
11 69 0.007898341 ubox
12 18 0.003758110 ubox
12 37 0.077179848 ubox
12 39 0.012903684 ubox
12 40 0.962167619 ubox
12 43 0.003775028 ubox
12 44 0.007201207 ubox
12 45 0.007448836 ubox
12 50 0.007234461 ubox
12 61 0.003927770 ubox
12 67 0.033311649 ubox
13 36 0.077243550 ubox
13 38 0.012961282 ubox
13 39 0.965814110 ubox
13 42 0.003648841 ubox
13 43 0.007922788 ubox
13 44 0.006881337 ubox
13 45 0.004649221 ubox
13 49 0.006604503 ubox
14 35 0.077173712 ubox
14 38 0.968935026 ubox
14 39 0.004489954 ubox
14 42 0.008327471 ubox
14 43 0.005365020 ubox
14 44 0.005663688 ubox
14 58 0.016380604 ubox
14 61 0.108238231 ubox
15 34 0.077033428 ubox
15 36 0.051809786 ubox
15 37 0.969329046 ubox
15 39 0.011587524 ubox
15 40 0.010954053 ubox
15 41 0.007378581 ubox
15 43 0.005921531 ubox
15 50 0.004384808 ubox
15 57 0.018875879 ubox
15 60 0.111288440 ubox
16 35 0.268925913 ubox
16 36 0.931433217 ubox
16 38 0.013334378 ubox
16 39 0.011070766 ubox
16 42 0.005970581 ubox
16 49 0.004378607 ubox
16 58 0.177513121 ubox
16 61 0.051623099 ubox
17 24 0.008540089 ubox
17 26 0.005198436 ubox
17 30 0.097191731 ubox
17 34 0.376934150 ubox
17 35 0.872075063 ubox
17 37 0.013771043 ubox
17 38 0.010150174 ubox
17 41 0.005932761 ubox
17 48 0.004279474 ubox
17 52 0.003194780 ubox
17 55 0.023742743 ubox
17 57 0.193816483 ubox
17 60 0.053333633 ubox
17 67 0.013058162 ubox
18 23 0.008552960 ubox
18 25 0.005514988 ubox
18 27 0.010411698 ubox
18 29 0.097521212 ubox
18 33 0.378577808 ubox
18 51 0.003320832 ubox
18 54 0.023755313 ubox
18 59 0.053302624 ubox
18 62 0.003943734 ubox
18 66 0.013059848 ubox
19 24 0.005508383 ubox
19 26 0.014578524 ubox
19 30 0.107876591 ubox
19 34 0.891016924 ubox
19 50 0.003269644 ubox
19 53 0.022966292 ubox
19 55 0.221535993 ubox
19 58 0.014559363 ubox
19 60 0.014255824 ubox
19 67 0.005736951 ubox
20 25 0.014648328 ubox
20 27 0.097223841 ubox
20 29 0.108311171 ubox
20 33 0.890669303 ubox
20 54 0.221705540 ubox
20 59 0.014296477 ubox
20 62 0.003964249 ubox
20 66 0.005734919 ubox
21 26 0.080955042 ubox
21 52 0.005907525 ubox
21 53 0.206209829 ubox
21 58 0.014136334 ubox
21 61 0.003906381 ubox
22 32 0.228952610 ubox
22 51 0.007360313 ubox
22 56 0.017238896 ubox
22 68 0.004623320 ubox
23 30 0.946674406 ubox
23 31 0.165353780 ubox
23 34 0.017675652 ubox
23 50 0.007450616 ubox
23 52 0.215116605 ubox
23 55 0.017574584 ubox
23 60 0.006332104 ubox
23 67 0.005132184 ubox
24 29 0.960515837 ubox
24 33 0.017690293 ubox
24 51 0.223132736 ubox
24 54 0.017502352 ubox
24 59 0.006328970 ubox
24 62 0.005235314 ubox
24 66 0.005130645 ubox
25 34 0.003336387 ubox
25 47 0.005566783 ubox
25 50 0.222669969 ubox
25 53 0.015517667 ubox
25 57 0.005522387 ubox
25 60 0.011667851 ubox
26 32 0.005982115 ubox
26 33 0.003295066 ubox
26 46 0.005742560 ubox
26 51 0.005716291 ubox
26 56 0.005637481 ubox
26 59 0.011658759 ubox
27 31 0.006054822 ubox
27 41 0.004527141 ubox
27 42 0.005532387 ubox
27 45 0.004665083 ubox
27 48 0.214923454 ubox
27 49 0.057664579 ubox
27 50 0.010389531 ubox
27 55 0.005566292 ubox
27 58 0.011994278 ubox
28 40 0.004561981 ubox
28 41 0.006505918 ubox
28 44 0.004033163 ubox
28 47 0.215062238 ubox
28 48 0.061268070 ubox
28 49 0.008546698 ubox
28 57 0.012229652 ubox
28 61 0.003699661 ubox
29 34 0.003940285 ubox
29 39 0.003854796 ubox
29 40 0.006858939 ubox
29 41 0.005860093 ubox
29 43 0.004081939 ubox
29 44 0.003381513 ubox
29 47 0.061172303 ubox
29 48 0.008493483 ubox
29 52 0.003502209 ubox
29 55 0.006725861 ubox
29 60 0.003731317 ubox
30 51 0.003518505 ubox
30 54 0.004843873 ubox
30 59 0.003659025 ubox
31 54 0.013123211 ubox
31 62 0.008174761 ubox
32 38 0.010751076 ubox
32 39 0.005756561 ubox
32 42 0.086985149 ubox
32 43 0.048099982 ubox
32 44 0.026145673 ubox
32 45 0.011239843 ubox
32 49 0.003168186 ubox
32 53 0.013945522 ubox
32 61 0.008197018 ubox
33 37 0.010908832 ubox
33 38 0.004865112 ubox
33 41 0.089437239 ubox
33 42 0.050023850 ubox
33 43 0.023371986 ubox
33 44 0.010755451 ubox
33 48 0.003179416 ubox
33 52 0.013998063 ubox
33 55 0.003191953 ubox
33 60 0.008204237 ubox
33 67 0.005008009 ubox
34 51 0.013995907 ubox
34 54 0.003204865 ubox
34 59 0.008201451 ubox
34 66 0.005004981 ubox
35 65 0.004542248 ubox
37 70 0.013294480 ubox
38 69 0.014503089 ubox
39 68 0.013953339 ubox
41 64 0.009209461 ubox
41 66 0.082660293 ubox
41 70 0.099661963 ubox
42 63 0.009191794 ubox
42 65 0.083538711 ubox
42 66 0.006853578 ubox
42 69 0.100592613 ubox
42 70 0.037495761 ubox
43 62 0.008964156 ubox
43 64 0.081116661 ubox
43 65 0.008646421 ubox
43 66 0.008704608 ubox
43 68 0.092923720 ubox
43 69 0.060728008 ubox
43 70 0.037398990 ubox
44 63 0.080812503 ubox
44 64 0.005323202 ubox
44 65 0.010930547 ubox
44 66 0.025920035 ubox
44 68 0.062964439 ubox
44 69 0.056624400 ubox
44 70 0.038753539 ubox
45 54 0.009373730 ubox
45 62 0.080581265 ubox
45 63 0.004648015 ubox
45 64 0.004119675 ubox
45 65 0.022635551 ubox
45 68 0.056632487 ubox
45 69 0.058173162 ubox
46 52 0.038451084 ubox
46 53 0.010595126 ubox
46 61 0.077815438 ubox
47 51 0.046102794 ubox
48 64 0.357997639 ubox
48 66 0.324538590 ubox
48 70 0.075014032 ubox
49 63 0.360016644 ubox
49 65 0.327993673 ubox
49 69 0.067853826 ubox
50 59 0.042894583 ubox
50 62 0.360027115 ubox
50 64 0.328237423 ubox
51 57 0.052958938 ubox
51 58 0.032979482 ubox
51 60 0.280359647 ubox
51 61 0.200879829 ubox
51 67 0.044364934 ubox
52 56 0.047940053 ubox
52 59 0.277698491 ubox
52 63 0.057912627 ubox
52 65 0.007069225 ubox
52 66 0.044009986 ubox
52 69 0.676807947 ubox
52 70 0.021847318 ubox
53 59 0.039861312 ubox
53 62 0.056996398 ubox
53 63 0.006435078 ubox
53 64 0.006942308 ubox
53 65 0.042889845 ubox
53 68 0.780609860 ubox
53 69 0.024137938 ubox
54 58 0.021110058 ubox
54 60 0.392073178 ubox
54 61 0.021224036 ubox
54 67 0.797085304 ubox
55 59 0.389680751 ubox
55 62 0.032654261 ubox
55 66 0.796059996 ubox
56 61 0.028216823 ubox
57 64 0.781572047 ubox
57 66 0.022668326 ubox
57 70 0.077468092 ubox
58 63 0.776702770 ubox
58 65 0.032767135 ubox
58 68 0.236984311 ubox
58 69 0.055784173 ubox
59 67 0.289522488 ubox
60 66 0.289550537 ubox
60 70 0.010571624 ubox
61 65 0.260858688 ubox
61 68 0.017241275 ubox
61 69 0.010483378 ubox
62 67 0.020418541 ubox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
52 69 0.9500000 lbox
53 68 0.9500000 lbox
54 67 0.9500000 lbox
55 66 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
