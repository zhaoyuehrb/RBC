%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GZMK)
} def

/sequence { (\
GAUCAACACAUUUCAUCUGGGCUUCUUAAAUCUAAAUCUUUAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.059125327 ubox
1 13 0.024749932 ubox
1 14 0.302271187 ubox
1 17 0.291449524 ubox
1 24 0.016832343 ubox
1 25 0.219747907 ubox
1 27 0.017876130 ubox
1 32 0.184043283 ubox
1 38 0.080824364 ubox
1 40 0.004220146 ubox
1 41 0.011035347 ubox
2 11 0.068524179 ubox
2 12 0.031680781 ubox
2 13 0.298421770 ubox
2 16 0.290751010 ubox
2 23 0.019795530 ubox
2 24 0.217972045 ubox
2 26 0.018205942 ubox
2 31 0.183671063 ubox
2 37 0.080332715 ubox
2 39 0.004585993 ubox
2 40 0.011470739 ubox
3 10 0.066932048 ubox
3 15 0.279008356 ubox
3 20 0.101684845 ubox
3 21 0.041126369 ubox
3 30 0.172207619 ubox
3 36 0.075200635 ubox
4 19 0.131885964 ubox
4 20 0.051184190 ubox
5 12 0.069289870 ubox
5 13 0.205672764 ubox
5 18 0.124827075 ubox
5 24 0.019191646 ubox
5 27 0.025771329 ubox
5 40 0.014299820 ubox
5 41 0.016755483 ubox
6 11 0.060178811 ubox
6 12 0.196082144 ubox
6 23 0.020475659 ubox
6 26 0.025360457 ubox
6 39 0.015080065 ubox
6 40 0.016749243 ubox
7 19 0.215251164 ubox
8 18 0.202854729 ubox
9 19 0.153416749 ubox
10 16 0.123980323 ubox
10 18 0.145131726 ubox
10 31 0.043300028 ubox
10 37 0.082491735 ubox
11 15 0.114917112 ubox
11 20 0.039345275 ubox
11 21 0.024957074 ubox
11 29 0.015610860 ubox
11 30 0.046351040 ubox
11 35 0.056332581 ubox
11 36 0.088816109 ubox
11 43 0.021871847 ubox
11 44 0.014819937 ubox
12 19 0.045196654 ubox
12 20 0.029629480 ubox
12 21 0.189243023 ubox
12 28 0.016700034 ubox
12 29 0.046623933 ubox
12 30 0.014567783 ubox
12 34 0.062705355 ubox
12 35 0.090437853 ubox
12 36 0.019720595 ubox
12 42 0.024379300 ubox
12 43 0.019081916 ubox
12 44 0.006150907 ubox
13 19 0.026174942 ubox
13 20 0.234721428 ubox
13 21 0.087672952 ubox
13 28 0.039370352 ubox
13 29 0.015746951 ubox
13 34 0.081931306 ubox
13 35 0.022093500 ubox
13 42 0.018278200 ubox
13 43 0.007639741 ubox
14 19 0.248829875 ubox
14 20 0.110745554 ubox
15 31 0.111852628 ubox
15 37 0.142986497 ubox
16 30 0.114576157 ubox
16 36 0.149369115 ubox
18 28 0.248756819 ubox
18 34 0.396038199 ubox
18 42 0.034101059 ubox
19 25 0.084587025 ubox
19 26 0.135162784 ubox
19 27 0.263720953 ubox
19 32 0.068954726 ubox
19 33 0.422321066 ubox
19 38 0.045587874 ubox
19 39 0.072091082 ubox
19 40 0.045328611 ubox
19 41 0.034802896 ubox
20 24 0.055299239 ubox
20 25 0.149458118 ubox
20 26 0.267343362 ubox
20 27 0.031030831 ubox
20 31 0.065099048 ubox
20 32 0.424813299 ubox
20 33 0.078800455 ubox
20 37 0.042433887 ubox
20 38 0.078324754 ubox
20 39 0.058362728 ubox
20 40 0.032887643 ubox
20 41 0.011859065 ubox
21 25 0.262697113 ubox
21 26 0.024599498 ubox
21 31 0.367272854 ubox
21 32 0.081473695 ubox
21 37 0.067187732 ubox
21 38 0.059993039 ubox
21 39 0.027197390 ubox
21 40 0.011156381 ubox
23 29 0.201358042 ubox
23 30 0.196322386 ubox
23 35 0.038759080 ubox
23 36 0.047946095 ubox
23 43 0.010912560 ubox
23 44 0.013591489 ubox
24 28 0.171644208 ubox
24 29 0.174385367 ubox
24 34 0.035947983 ubox
24 35 0.043847662 ubox
24 42 0.009276572 ubox
24 43 0.013759005 ubox
26 35 0.111063500 ubox
26 36 0.023769195 ubox
26 43 0.391062815 ubox
26 44 0.015766575 ubox
27 34 0.123083450 ubox
27 35 0.025725538 ubox
27 42 0.435477298 ubox
27 43 0.018170848 ubox
28 33 0.117495815 ubox
28 40 0.015281593 ubox
28 41 0.439062988 ubox
29 39 0.017072937 ubox
29 40 0.437237422 ubox
29 41 0.036272363 ubox
30 37 0.037710996 ubox
30 39 0.424174383 ubox
30 40 0.038686593 ubox
31 36 0.040487779 ubox
33 42 0.123662702 ubox
34 40 0.017860404 ubox
34 41 0.127898700 ubox
35 39 0.016310311 ubox
35 40 0.112429674 ubox
35 41 0.029089543 ubox
36 40 0.023859981 ubox
showpage
end
%%EOF
