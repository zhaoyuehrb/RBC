%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPACA5B)
} def

/sequence { (\
AAUUCCGAACACCACAGGGUGAGUCUGGAGCAAGUCACCUGGGAGGGCUUACAGGUGCCAUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 24 0.006922314 ubox
2 35 0.028904110 ubox
2 61 0.014656963 ubox
3 9 0.003370064 ubox
3 23 0.007215041 ubox
3 29 0.086276421 ubox
3 30 0.729983857 ubox
3 33 0.019291558 ubox
3 34 0.026872266 ubox
3 44 0.028933068 ubox
3 45 0.025663618 ubox
3 60 0.013065605 ubox
4 8 0.003371359 ubox
4 22 0.007370098 ubox
4 28 0.089401124 ubox
4 29 0.960508235 ubox
4 32 0.009004286 ubox
4 33 0.009406467 ubox
4 43 0.031218179 ubox
4 44 0.033768729 ubox
4 47 0.004121515 ubox
5 18 0.005390413 ubox
5 21 0.006072865 ubox
5 27 0.092062525 ubox
5 28 0.981867670 ubox
5 42 0.032257030 ubox
5 43 0.034423297 ubox
5 45 0.003355902 ubox
5 46 0.008874132 ubox
5 55 0.004357224 ubox
6 17 0.005453648 ubox
6 27 0.981554441 ubox
6 41 0.032265712 ubox
6 42 0.033882623 ubox
6 45 0.012960490 ubox
6 46 0.003169732 ubox
6 54 0.004389582 ubox
7 25 0.762039587 ubox
7 26 0.580750047 ubox
7 40 0.016307127 ubox
8 24 0.759066223 ubox
9 20 0.015936607 ubox
9 24 0.286334139 ubox
10 19 0.016093680 ubox
10 21 0.957035080 ubox
10 23 0.224644832 ubox
10 41 0.005437879 ubox
10 57 0.020423961 ubox
11 20 0.980903803 ubox
11 24 0.062754749 ubox
11 40 0.003843596 ubox
11 56 0.020511221 ubox
12 18 0.029430838 ubox
12 19 0.984439030 ubox
12 23 0.063972767 ubox
12 42 0.042557326 ubox
12 43 0.124051883 ubox
12 46 0.006618647 ubox
12 55 0.020522406 ubox
13 17 0.033849423 ubox
13 18 0.982629136 ubox
13 21 0.094637642 ubox
13 41 0.042905892 ubox
13 42 0.124486251 ubox
13 45 0.008776216 ubox
13 54 0.020419181 ubox
13 57 0.009310580 ubox
14 20 0.094615291 ubox
14 40 0.030115133 ubox
14 56 0.009387916 ubox
15 19 0.093699034 ubox
15 21 0.003517666 ubox
15 27 0.010356181 ubox
15 41 0.123775478 ubox
15 55 0.009372753 ubox
16 26 0.010545303 ubox
16 40 0.117872221 ubox
17 25 0.010651310 ubox
17 39 0.097127436 ubox
17 40 0.068195730 ubox
18 24 0.010142580 ubox
18 38 0.070357964 ubox
18 39 0.102875634 ubox
18 59 0.004957585 ubox
19 38 0.122767529 ubox
19 52 0.021954112 ubox
19 58 0.004987969 ubox
20 37 0.139810668 ubox
20 51 0.022006086 ubox
20 57 0.004951064 ubox
21 36 0.140989348 ubox
21 50 0.022013504 ubox
22 35 0.135694214 ubox
22 49 0.022034224 ubox
23 31 0.031844133 ubox
23 35 0.012425637 ubox
23 48 0.022042314 ubox
23 56 0.003371015 ubox
23 58 0.003711302 ubox
24 30 0.031163893 ubox
24 34 0.015707295 ubox
24 47 0.022000680 ubox
24 55 0.010513628 ubox
24 57 0.003237562 ubox
25 34 0.112555506 ubox
25 42 0.003625879 ubox
25 46 0.021971333 ubox
25 54 0.013882681 ubox
26 32 0.036095229 ubox
26 33 0.112488484 ubox
26 37 0.004696760 ubox
26 41 0.003671873 ubox
26 45 0.021790746 ubox
26 53 0.013920377 ubox
26 60 0.053366305 ubox
27 31 0.038428917 ubox
27 36 0.005297333 ubox
27 39 0.006455931 ubox
27 40 0.003865485 ubox
27 52 0.013818130 ubox
27 59 0.059270495 ubox
28 35 0.004337773 ubox
28 36 0.006184693 ubox
28 38 0.006421296 ubox
28 39 0.003878828 ubox
28 50 0.012942649 ubox
28 58 0.059108645 ubox
29 35 0.007495891 ubox
29 40 0.009355044 ubox
29 49 0.014301269 ubox
30 39 0.009437969 ubox
30 48 0.014451780 ubox
30 56 0.009957896 ubox
30 58 0.071606859 ubox
31 41 0.018868187 ubox
31 47 0.014433900 ubox
31 55 0.010475872 ubox
31 57 0.067302466 ubox
32 40 0.016625778 ubox
32 50 0.006879256 ubox
32 56 0.045891325 ubox
33 40 0.012284821 ubox
33 49 0.008176570 ubox
34 39 0.014533247 ubox
34 48 0.008248934 ubox
34 52 0.011444269 ubox
34 58 0.716624975 ubox
34 61 0.151023080 ubox
35 42 0.007619872 ubox
35 43 0.008594195 ubox
35 44 0.013362948 ubox
35 47 0.007897528 ubox
35 51 0.011084766 ubox
35 57 0.140361785 ubox
35 60 0.143621468 ubox
36 41 0.008413233 ubox
36 42 0.009175565 ubox
36 43 0.013905707 ubox
36 45 0.003903755 ubox
36 46 0.006017946 ubox
36 57 0.970530381 ubox
37 56 0.986880157 ubox
38 46 0.009865384 ubox
38 47 0.011519387 ubox
38 55 0.988848889 ubox
39 45 0.011072276 ubox
39 46 0.011586036 ubox
39 54 0.988850275 ubox
40 44 0.009986370 ubox
40 45 0.011330343 ubox
40 51 0.025954269 ubox
40 53 0.988107357 ubox
41 49 0.038634632 ubox
41 50 0.051308842 ubox
41 52 0.985850455 ubox
42 48 0.094346286 ubox
42 49 0.236273610 ubox
42 50 0.080562123 ubox
43 48 0.253757037 ubox
43 49 0.092080965 ubox
43 50 0.368795365 ubox
44 49 0.526583654 ubox
44 50 0.084527392 ubox
45 49 0.064793059 ubox
45 59 0.017895902 ubox
46 58 0.016440253 ubox
46 59 0.143619957 ubox
47 56 0.014065992 ubox
47 58 0.144250752 ubox
48 55 0.014927052 ubox
48 57 0.144408819 ubox
49 54 0.013943478 ubox
49 55 0.009834642 ubox
50 54 0.007917680 ubox
3 30 0.9500000 lbox
4 29 0.9500000 lbox
5 28 0.9500000 lbox
6 27 0.9500000 lbox
7 25 0.9500000 lbox
8 24 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
36 57 0.9500000 lbox
37 56 0.9500000 lbox
38 55 0.9500000 lbox
39 54 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
showpage
end
%%EOF
