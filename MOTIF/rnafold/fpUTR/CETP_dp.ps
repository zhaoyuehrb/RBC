%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CETP)
} def

/sequence { (\
AUAUACGGGCUCCAGGCUGAACGGCUCGGGCCACUUACACACCACUGCCUGAUAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 53 0.027923502 ubox
2 37 0.120895936 ubox
2 47 0.003980015 ubox
2 51 0.004957557 ubox
2 52 0.028943044 ubox
2 54 0.521085093 ubox
3 36 0.128855204 ubox
3 46 0.004174371 ubox
3 50 0.005551852 ubox
3 53 0.551264260 ubox
4 37 0.067465541 ubox
4 47 0.004393888 ubox
4 51 0.006361893 ubox
4 52 0.551593641 ubox
4 54 0.180194709 ubox
5 36 0.067517581 ubox
5 46 0.004642310 ubox
5 50 0.006563547 ubox
5 53 0.189612351 ubox
6 19 0.050104561 ubox
6 23 0.046335398 ubox
6 28 0.037277267 ubox
6 47 0.016640544 ubox
6 51 0.727854697 ubox
7 13 0.022326111 ubox
7 18 0.046569522 ubox
7 22 0.047197583 ubox
7 27 0.040352797 ubox
7 32 0.051541506 ubox
7 35 0.018031680 ubox
7 36 0.012958633 ubox
7 43 0.016451270 ubox
7 46 0.016362193 ubox
7 49 0.019599254 ubox
7 50 0.733997573 ubox
7 57 0.163136446 ubox
8 12 0.022110994 ubox
8 17 0.042212759 ubox
8 18 0.087568769 ubox
8 26 0.042182052 ubox
8 31 0.040953211 ubox
8 32 0.637173332 ubox
8 34 0.010600352 ubox
8 35 0.004720149 ubox
8 42 0.011937105 ubox
8 45 0.008308667 ubox
8 48 0.012862639 ubox
8 49 0.734636341 ubox
8 56 0.164141625 ubox
8 57 0.043215927 ubox
9 17 0.093284564 ubox
9 25 0.044077245 ubox
9 31 0.639209136 ubox
9 34 0.004612269 ubox
9 48 0.734512803 ubox
9 56 0.043724069 ubox
10 16 0.095386580 ubox
10 24 0.044036425 ubox
10 29 0.021070657 ubox
10 30 0.636901431 ubox
10 47 0.733409531 ubox
11 15 0.085957793 ubox
11 20 0.029467000 ubox
11 23 0.040878635 ubox
11 28 0.020371587 ubox
11 29 0.295652709 ubox
11 30 0.470315101 ubox
11 52 0.042872102 ubox
12 19 0.031315714 ubox
12 23 0.009162386 ubox
12 24 0.006084555 ubox
12 28 0.289276791 ubox
12 29 0.744773295 ubox
12 30 0.077110822 ubox
12 51 0.031120188 ubox
13 19 0.035610652 ubox
13 23 0.006481937 ubox
13 28 0.746406969 ubox
13 29 0.077395391 ubox
13 47 0.018763063 ubox
13 51 0.185655462 ubox
14 18 0.029038296 ubox
14 26 0.089012028 ubox
14 35 0.010909844 ubox
14 36 0.009114127 ubox
14 46 0.040178578 ubox
14 50 0.188826942 ubox
15 25 0.068033419 ubox
15 26 0.789496614 ubox
15 27 0.100011286 ubox
15 32 0.202470744 ubox
15 34 0.006046577 ubox
15 35 0.006353962 ubox
15 43 0.462629075 ubox
15 45 0.038015721 ubox
15 46 0.012467240 ubox
15 49 0.188951862 ubox
16 25 0.809951748 ubox
16 26 0.011518517 ubox
16 31 0.202958415 ubox
16 34 0.006357923 ubox
16 42 0.462709061 ubox
16 45 0.012576994 ubox
16 48 0.188950334 ubox
17 24 0.812001956 ubox
17 29 0.111170251 ubox
17 30 0.174542940 ubox
17 47 0.188620103 ubox
18 23 0.759625773 ubox
18 28 0.152044222 ubox
18 29 0.138396493 ubox
18 33 0.006147616 ubox
18 37 0.251175961 ubox
18 39 0.311315437 ubox
18 41 0.229703246 ubox
18 44 0.035675369 ubox
19 27 0.185581887 ubox
19 32 0.004599338 ubox
19 36 0.267771129 ubox
19 38 0.320023732 ubox
19 40 0.228907656 ubox
19 43 0.038045816 ubox
19 46 0.006844227 ubox
20 26 0.180388596 ubox
20 35 0.273103851 ubox
20 36 0.270378013 ubox
21 35 0.256457757 ubox
22 28 0.033233599 ubox
22 47 0.005021042 ubox
22 51 0.005089969 ubox
23 27 0.031225861 ubox
23 32 0.528405146 ubox
23 35 0.011806783 ubox
23 36 0.004829446 ubox
23 43 0.027022824 ubox
23 46 0.017455040 ubox
23 49 0.020226741 ubox
23 57 0.069188243 ubox
24 31 0.529202470 ubox
24 34 0.011827948 ubox
24 42 0.026986953 ubox
24 45 0.017544637 ubox
24 48 0.020286505 ubox
24 56 0.069975675 ubox
25 30 0.527488237 ubox
25 47 0.020286228 ubox
26 52 0.102052570 ubox
27 51 0.110628847 ubox
28 35 0.043335173 ubox
28 36 0.015176014 ubox
28 43 0.090015372 ubox
28 46 0.011315361 ubox
28 50 0.111624937 ubox
29 34 0.046643001 ubox
29 35 0.017846244 ubox
29 36 0.007137955 ubox
29 42 0.090156266 ubox
29 43 0.042938165 ubox
29 45 0.012247314 ubox
29 46 0.004829235 ubox
29 49 0.117235103 ubox
30 34 0.026686201 ubox
30 35 0.011697479 ubox
30 42 0.046572084 ubox
30 45 0.015120530 ubox
30 48 0.117268657 ubox
31 47 0.114809327 ubox
32 47 0.022978292 ubox
32 51 0.003935913 ubox
33 46 0.030930762 ubox
33 50 0.005881266 ubox
35 52 0.103678036 ubox
35 55 0.062871936 ubox
36 47 0.021116461 ubox
36 51 0.111776495 ubox
36 54 0.073550570 ubox
37 46 0.033579296 ubox
37 50 0.109299889 ubox
37 53 0.073298633 ubox
38 47 0.133585155 ubox
38 51 0.092815269 ubox
39 46 0.123736274 ubox
39 50 0.085554807 ubox
40 47 0.167360452 ubox
40 51 0.111858060 ubox
41 46 0.144843775 ubox
41 50 0.109454416 ubox
43 51 0.132683720 ubox
44 50 0.123075830 ubox
46 54 0.022189372 ubox
47 53 0.021951174 ubox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
12 29 0.9500000 lbox
13 28 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
showpage
end
%%EOF
