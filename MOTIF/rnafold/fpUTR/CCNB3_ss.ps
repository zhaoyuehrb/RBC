%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGUCUGGAACUGGAUUACAGUUUCUUCUGAUUGAACGCAGCCUUUGAAUACUGCCUGGCCUAUCGCGAAUACAUCCCUGCCUUGGACAAGACGCAGCUGAAUCUCUAAGUG\
) } def
/len { sequence length } bind def

/coor [
[86.74591064 241.19984436]
[95.15814972 228.65348816]
[106.76522827 218.98640442]
[100.78921509 205.22824097]
[94.81319427 191.47007751]
[88.83718109 177.71189880]
[82.86116791 163.95373535]
[76.88514709 150.19555664]
[62.49801254 145.95170593]
[50.01175690 154.26394653]
[37.52550125 162.57620239]
[25.03924751 170.88844299]
[12.55299377 179.20069885]
[0.06673914 187.51293945]
[-12.41951561 195.82518005]
[-16.97327805 211.20838928]
[-31.89313889 217.10562134]
[-45.73385620 208.99302673]
[-47.87801743 193.09390259]
[-36.68080521 181.60469055]
[-20.73176193 183.33892822]
[-8.24550724 175.02668762]
[4.24074697 166.71443176]
[16.72700119 158.40219116]
[29.21325684 150.08995056]
[41.69951248 141.77769470]
[54.18576431 133.46545410]
[51.53621674 118.70130920]
[36.93879318 115.24945831]
[22.34137344 111.79759979]
[7.99059391 118.96939850]
[-6.50291157 112.09059906]
[-10.02096558 96.43803406]
[0.13518120 84.01900482]
[16.17460251 84.36033630]
[25.79322815 97.20018005]
[40.39064789 100.65203094]
[54.98807144 104.10388947]
[62.28166199 84.48593140]
[76.58562469 72.16940308]
[69.50338745 58.94662476]
[62.42114639 45.72384644]
[55.33890152 32.50106812]
[39.98546219 32.09184647]
[26.90200233 24.04705811]
[19.60790634 10.53070641]
[20.06525040 -4.82137489]
[28.15101242 -17.87955475]
[41.69015884 -25.13124657]
[57.04073334 -24.62578392]
[70.07350159 -16.49913216]
[77.28272247 -2.93732023]
[76.72914124 12.41159248]
[68.56168365 25.41882515]
[75.64392090 38.64160538]
[82.72616577 51.86437988]
[89.80840302 65.08715820]
[94.25250244 61.65692520]
[99.44193268 58.83086395]
[105.28904724 56.74779129]
[111.68233490 55.53312302]
[117.65834808 41.77495575]
[113.13419342 26.38302231]
[122.46491241 13.33245754]
[138.49278259 12.63453770]
[148.92257690 24.82464600]
[145.75347900 40.55157471]
[131.41651917 47.75096893]
[125.44050598 61.50914001]
[130.01298523 67.45408630]
[141.85345459 58.24521637]
[153.69390869 49.03633881]
[162.29188538 36.74508667]
[176.66551208 41.03445816]
[177.12130737 56.02753067]
[163.03591919 61.18242264]
[151.09693909 70.26320648]
[139.15794373 79.34398651]
[143.73042297 85.28894043]
[158.56143188 83.04365540]
[167.73512268 70.17436218]
[183.33547974 67.64360809]
[196.10707092 76.95285797]
[198.47273254 92.57908630]
[189.02897644 105.25154114]
[173.37861633 107.45187378]
[160.80671692 97.87466431]
[145.97570801 100.11994171]
[141.28765869 119.78079224]
[128.65904236 135.45216370]
[110.59841156 144.13833618]
[90.64331818 144.21954346]
[96.61933136 157.97772217]
[102.59535217 171.73588562]
[108.57136536 185.49404907]
[114.54738617 199.25222778]
[120.52339935 213.01039124]
[135.51089478 211.12580872]
[150.42201233 213.54139709]
[164.04798889 220.06134033]
[175.28422546 230.15707397]
[183.21983337 243.01019287]
[187.21151733 257.57876587]
[186.93569946 272.68176270]
[182.41471863 287.09484863]
[174.01509094 299.64965820]
[162.41772461 309.32839966]
[148.56277466 315.34643555]
[133.57339478 317.21597290]
[118.66470337 314.78540039]
[105.04528809 308.25177002]
[93.81921387 298.14477539]
[85.89651489 285.28366089]
[81.91946411 270.71109009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 97]
[4 96]
[5 95]
[6 94]
[7 93]
[8 92]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[15 21]
[28 38]
[29 37]
[30 36]
[40 57]
[41 56]
[42 55]
[43 54]
[61 69]
[62 68]
[79 88]
[80 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
