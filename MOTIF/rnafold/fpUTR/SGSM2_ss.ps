%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGAUGGCUGCGGAGCCGAGCACCGGGCAGUGGCUGCGGCGGCGGCGGCGGCGGCGGGCCGGGAGCGCGGCGGGCGGGGGCUCCGCCUUGCGCGUGGGGCGCUGAGCCGAGAGGCGCGGAGGCGGCGAGGGCGCGGGGGCUCUGAGGACCGCUCGGCGCCGCCUCCUGCCACACC\
) } def
/len { sequence length } bind def

/coor [
[314.77694702 251.96025085]
[307.17498779 247.46989441]
[300.66958618 241.48577881]
[295.54980469 234.26809692]
[292.04428101 226.13200378]
[290.31112671 217.43380737]
[290.43069458 208.55543518]
[292.40188599 199.88754272]
[279.32415771 192.54090881]
[266.24642944 185.19427490]
[253.16871643 177.84762573]
[245.77473450 177.31129456]
[239.92666626 170.25418091]
[226.98063660 162.67788696]
[214.03460693 155.10159302]
[199.14208984 155.35104370]
[191.13958740 141.70294189]
[178.19355774 134.12664795]
[165.24752808 126.55036163]
[150.94789124 130.55737305]
[137.71084595 123.05834961]
[133.60488892 108.03241730]
[120.65885162 100.45612335]
[104.07038879 117.88281250]
[85.71784973 107.24906921]
[70.72018433 106.98434448]
[56.78561020 114.47688293]
[44.19687271 106.51617432]
[29.19920731 106.25144958]
[14.20154381 105.98671722]
[-1.67560160 115.28643036]
[-16.36005402 105.70084381]
[-31.36005402 105.70084381]
[-45.16022491 113.43814850]
[-57.88749695 105.70084381]
[-72.88749695 105.70084381]
[-87.88749695 105.70084381]
[-102.88749695 105.70084381]
[-117.88749695 105.70084381]
[-131.68766785 113.43814850]
[-144.41494751 105.70084381]
[-159.41494751 105.70084381]
[-173.33874512 114.36454773]
[-187.67417908 106.40042114]
[-187.67417908 90.00127411]
[-173.33874512 82.03713989]
[-159.41494751 90.70084381]
[-144.41494751 90.70084381]
[-131.68766785 82.96354675]
[-117.88749695 90.70084381]
[-102.88749695 90.70084381]
[-87.88749695 90.70084381]
[-72.88749695 90.70084381]
[-57.88749695 90.70084381]
[-45.16022491 82.96354675]
[-31.36005402 90.70084381]
[-16.36005402 90.70084381]
[-7.57030010 82.36272430]
[4.94591236 82.25782013]
[14.46627045 90.98905945]
[29.46393394 91.25378418]
[44.46159744 91.51850891]
[57.32344055 84.00703430]
[70.98490906 91.98667908]
[85.98257446 92.25140381]
[92.51486969 83.25676727]
[104.61057281 79.85704041]
[100.43079376 65.45115662]
[96.25101471 51.04527664]
[92.07122803 36.63939667]
[87.63785553 22.30952454]
[82.95227814 8.06012821]
[78.26669312 -6.18926859]
[73.58110809 -20.43866539]
[68.89553070 -34.68806076]
[64.08438110 -48.89555740]
[59.14804840 -63.06003952]
[46.38475418 -73.35714722]
[49.18764114 -89.51498413]
[64.67333984 -94.91176605]
[76.91149139 -83.99573517]
[73.31253052 -67.99637604]
[78.24886322 -53.83189011]
[83.43488312 -48.53436279]
[83.14492798 -39.37364578]
[87.83050537 -25.12424850]
[92.51609039 -10.87485123]
[97.20167542 3.37454581]
[101.88725281 17.62394333]
[105.69705200 20.54922867]
[107.69208527 25.91114235]
[106.47711182 32.45961380]
[110.65689087 46.86549759]
[114.83667755 61.27137756]
[119.01645660 75.67726135]
[128.23513794 87.51008606]
[141.18118286 95.08638000]
[156.29252625 91.30681610]
[169.31370544 99.17468262]
[172.82382202 113.60432434]
[185.76985168 121.18061829]
[198.71588135 128.75691223]
[214.53439331 129.04937744]
[221.61090088 142.15556335]
[234.55693054 149.73185730]
[247.50296021 157.30815125]
[260.51535034 164.76991272]
[273.59307861 172.11654663]
[286.67080688 179.46318054]
[299.74853516 186.80981445]
[317.71719360 174.17478943]
[339.52938843 172.25074768]
[359.30670166 181.48641968]
[371.75415039 199.33238220]
[373.57757568 220.94435120]
[387.65274048 226.12989807]
[401.72790527 231.31544495]
[415.80307007 236.50099182]
[424.96832275 236.53451538]
[430.07952881 241.90425110]
[444.06097412 247.33740234]
[458.04241943 252.77053833]
[472.02386475 258.20367432]
[486.00531006 263.63684082]
[499.98675537 269.06997681]
[513.96820068 274.50311279]
[527.94964600 279.93624878]
[541.93109131 285.36941528]
[555.91259766 290.80255127]
[570.23583984 284.68029785]
[584.33758545 290.38943481]
[590.08599854 304.08221436]
[604.06744385 309.51535034]
[613.23065186 309.71063232]
[618.24627686 315.16973877]
[632.12969971 320.84878540]
[646.01306152 326.52783203]
[659.89642334 332.20687866]
[671.19769287 321.94802856]
[685.83343506 317.61679077]
[700.89758301 320.07315063]
[713.39923096 328.82937622]
[720.85614014 342.14694214]
[721.78771973 357.38159180]
[716.00909424 371.50851440]
[704.66748047 381.72277832]
[690.01489258 385.99633789]
[674.96051025 383.48068237]
[662.49340820 374.67529297]
[655.08898926 361.32846069]
[654.21740723 346.09027100]
[640.33398438 340.41122437]
[626.45062256 334.73217773]
[612.56726074 329.05313110]
[598.63427734 323.49679565]
[584.65283203 318.06365967]
[571.16705322 324.28210449]
[556.91046143 318.97128296]
[550.47943115 304.78399658]
[536.49798584 299.35086060]
[522.51654053 293.91769409]
[508.53506470 288.48455811]
[494.55361938 283.05142212]
[480.57217407 277.61828613]
[466.59072876 272.18511963]
[452.60928345 266.75198364]
[438.62783813 261.31884766]
[424.64636230 255.88569641]
[410.61752319 250.57615662]
[396.54235840 245.39060974]
[382.46719360 240.20506287]
[368.39205933 235.01951599]
[363.20822144 242.07981873]
[356.65817261 247.91012573]
[349.02731323 252.25076294]
[340.64929199 254.90711975]
[331.89151001 255.75836182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 110]
[9 109]
[10 108]
[11 107]
[13 106]
[14 105]
[15 104]
[17 102]
[18 101]
[19 100]
[22 97]
[23 96]
[25 65]
[26 64]
[28 62]
[29 61]
[30 60]
[32 57]
[33 56]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[41 48]
[42 47]
[67 95]
[68 94]
[69 93]
[70 92]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 83]
[77 82]
[115 172]
[116 171]
[117 170]
[118 169]
[120 168]
[121 167]
[122 166]
[123 165]
[124 164]
[125 163]
[126 162]
[127 161]
[128 160]
[129 159]
[132 156]
[133 155]
[135 154]
[136 153]
[137 152]
[138 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
