%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCGUCACGUCCGGUCUCGGCGGAAGUUUUCCGGCGGCUACCGGGAAGUCGCUGAAGACAGAGCGAUGGUAGUUCUGGAGGCCUCGCUCCGGGGCCGACCCGAGGCCACAGUGCCUCCGCGGUAGACCGGACUUGGGUGACGGGCUCCGGGCUCCCGAGGUGAAGAGCAUCGGGGGCUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[240.81675720 347.06954956]
[231.83680725 335.05453491]
[219.90074158 333.00796509]
[212.32298279 323.05249023]
[213.60804749 310.20413208]
[204.83230591 298.03915405]
[196.05656433 285.87420654]
[187.28083801 273.70922852]
[178.50509644 261.54425049]
[169.72937012 249.37928772]
[160.54777527 237.51765442]
[150.97080994 225.97288513]
[141.39384460 214.42811584]
[131.81687927 202.88334656]
[122.23990631 191.33857727]
[112.66293335 179.79380798]
[103.08596802 168.24903870]
[93.50900269 156.70426941]
[83.93202972 145.15950012]
[69.08634949 143.01338196]
[56.63193130 151.37324524]
[49.48590851 165.48866272]
[34.60633087 166.15763855]
[22.15191078 174.51750183]
[9.69748878 182.87738037]
[-2.75693321 191.23724365]
[-15.21135521 199.59710693]
[-24.99273109 213.44488525]
[-41.00708771 207.87922668]
[-40.09214401 190.94998169]
[-23.57122231 187.14268494]
[-11.11680031 178.78282166]
[1.33762169 170.42295837]
[13.79204369 162.06307983]
[26.24646568 153.70321655]
[32.50166702 140.18576050]
[48.27206421 138.91882324]
[60.72648621 130.55895996]
[58.95713425 115.66368103]
[44.89085388 110.45410156]
[30.82457161 105.24452209]
[16.75828934 100.03494263]
[2.69200754 94.82536316]
[-11.37427425 89.61578369]
[-7.70151091 104.15919495]
[-16.64361000 116.20240021]
[-31.62770081 116.89307404]
[-41.63975906 105.72352600]
[-39.32043457 90.90391541]
[-26.37604523 83.32749939]
[-39.95276260 76.94998169]
[-53.52947998 70.57246399]
[-67.10620117 64.19494629]
[-80.68291473 57.81742859]
[-94.25963593 51.43991089]
[-107.78682709 59.04218674]
[-123.19512177 57.20803452]
[-134.55970764 46.64272690]
[-137.51068115 31.40883636]
[-130.91331482 17.36410522]
[-117.30444336 9.90902138]
[-101.91695404 11.91021538]
[-90.66764832 22.59818649]
[-87.88211823 37.86319351]
[-74.30539703 44.24071121]
[-60.72867966 50.61822891]
[-47.15196228 56.99574661]
[-33.57524490 63.37326813]
[-19.99852562 69.75078583]
[-6.16469574 75.54949951]
[7.90158653 80.75907898]
[21.96786880 85.96865845]
[36.03414917 91.17823792]
[50.10043335 96.38781738]
[64.16671753 101.59739685]
[70.59867096 84.88731384]
[83.50854492 74.64411926]
[98.42844391 72.60878754]
[101.69564819 57.96893311]
[104.96285248 43.32907486]
[108.23005676 28.68922043]
[111.49726105 14.04936409]
[114.76446533 -0.59049165]
[118.03166199 -15.23034763]
[121.17511749 -29.89727402]
[124.19459534 -44.59022141]
[116.96362305 -63.39180374]
[130.37263489 -77.30568695]
[132.89414978 -92.09223938]
[135.41566467 -106.87878418]
[130.10829163 -121.78322601]
[139.87495422 -133.02873230]
[142.39645386 -147.81527710]
[144.91796875 -162.60183716]
[147.43948364 -177.38838196]
[139.37423706 -191.25672913]
[145.32240295 -206.15635681]
[160.72106934 -210.65753174]
[173.75769043 -201.30735779]
[174.43168640 -185.27847290]
[162.22602844 -174.86686707]
[159.70452881 -160.08032227]
[157.18301392 -145.29377747]
[154.66149902 -130.50721741]
[160.14923096 -116.66041565]
[150.20220947 -104.35726929]
[147.68069458 -89.57072449]
[145.15917969 -74.78417969]
[151.80764771 -66.98948669]
[153.08331299 -56.60271835]
[148.32298279 -47.03709030]
[138.88754272 -41.57074356]
[135.86807251 -26.87779617]
[137.60511780 -19.67721176]
[132.67152405 -11.96314430]
[129.40431213 2.67671180]
[126.13711548 17.31656837]
[122.86991119 31.95642281]
[119.60270691 46.59627914]
[116.33550262 61.23613739]
[113.06829834 75.87599182]
[125.27297974 85.52890015]
[130.79118347 101.05631256]
[127.02725983 118.04178619]
[114.18354797 131.10079956]
[95.47679901 135.58253479]
[105.05377197 147.12730408]
[114.63073730 158.67207336]
[124.20770264 170.21684265]
[133.78466797 181.76161194]
[143.36163330 193.30638123]
[152.93861389 204.85115051]
[162.51557922 216.39591980]
[172.09254456 227.94068909]
[176.26388550 229.31457520]
[179.44987488 231.71212769]
[181.44857788 234.69354248]
[182.22322083 237.79876709]
[181.89433289 240.60354614]
[190.67007446 252.76852417]
[199.44580078 264.93350220]
[208.22154236 277.09844971]
[216.99726868 289.26342773]
[225.77301025 301.42840576]
[242.73472595 308.57049561]
[243.85182190 326.07458496]
[252.83177185 338.08959961]
[269.91168213 344.94421387]
[271.32424927 362.42694092]
[280.50585938 374.28857422]
[297.69912720 380.85372925]
[299.40676880 398.31008911]
[308.78738403 410.01495361]
[318.16799927 421.71984863]
[327.54861450 433.42471313]
[336.92922974 445.12957764]
[346.30984497 456.83444214]
[355.69046021 468.53933716]
[365.07107544 480.24420166]
[374.45169067 491.94906616]
[389.11956787 497.87896729]
[391.04129028 512.64910889]
[400.42190552 524.35394287]
[416.14663696 527.53387451]
[423.33618164 541.87579346]
[416.47531128 556.37780762]
[400.82711792 559.91516113]
[388.39553833 549.77441406]
[388.71701050 533.73455811]
[379.33639526 522.02972412]
[365.33947754 516.93701172]
[362.74682617 501.32968140]
[353.36621094 489.62481689]
[343.98559570 477.91995239]
[334.60498047 466.21505737]
[325.22436523 454.51019287]
[315.84375000 442.80532837]
[306.46310425 431.10046387]
[297.08248901 419.39556885]
[287.70187378 407.69070435]
[275.70349121 406.04843140]
[267.79382324 396.35458374]
[268.64422607 383.47015381]
[259.46261597 371.60852051]
[247.49369812 369.76382446]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[5 144]
[6 143]
[7 142]
[8 141]
[9 140]
[10 139]
[11 134]
[12 133]
[13 132]
[14 131]
[15 130]
[16 129]
[17 128]
[18 127]
[19 126]
[20 38]
[21 37]
[23 35]
[24 34]
[25 33]
[26 32]
[27 31]
[39 75]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[55 64]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 113]
[86 112]
[88 108]
[89 107]
[90 106]
[92 104]
[93 103]
[94 102]
[95 101]
[149 184]
[150 183]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
[158 174]
[159 173]
[160 172]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
