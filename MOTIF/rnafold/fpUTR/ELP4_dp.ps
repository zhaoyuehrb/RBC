%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ELP4)
} def

/sequence { (\
AGGACGGGUGUUUGCGUUCCCAGAGUUCCUAUUGGGUUAACACUGGAGGCUCUAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.003629563 ubox
1 51 0.012975693 ubox
1 53 0.013020154 ubox
2 13 0.026785906 ubox
2 18 0.007011684 ubox
2 19 0.801484520 ubox
2 20 0.523601649 ubox
2 21 0.138588410 ubox
2 29 0.003840318 ubox
2 50 0.014828352 ubox
2 51 0.011069037 ubox
2 52 0.013275495 ubox
2 53 0.015338110 ubox
3 12 0.034242433 ubox
3 17 0.004795204 ubox
3 18 0.811896504 ubox
3 19 0.524975780 ubox
3 20 0.131502741 ubox
3 28 0.003835053 ubox
3 50 0.014047604 ubox
3 51 0.008126869 ubox
3 52 0.015800671 ubox
4 11 0.035284039 ubox
4 17 0.901279863 ubox
4 18 0.372757805 ubox
4 26 0.003200332 ubox
4 51 0.015029508 ubox
5 10 0.035424630 ubox
5 14 0.015890448 ubox
5 16 0.976036082 ubox
5 25 0.003970385 ubox
5 45 0.013102686 ubox
6 13 0.015369029 ubox
6 15 0.975299323 ubox
6 18 0.003196287 ubox
6 19 0.012712227 ubox
6 20 0.021506988 ubox
6 21 0.190090043 ubox
6 44 0.010782200 ubox
6 52 0.061170213 ubox
6 53 0.009225485 ubox
7 11 0.006070879 ubox
7 12 0.019936922 ubox
7 13 0.043281144 ubox
7 17 0.005184457 ubox
7 18 0.012917849 ubox
7 19 0.021698506 ubox
7 20 0.190283998 ubox
7 21 0.006508265 ubox
7 43 0.007812561 ubox
7 44 0.029832036 ubox
7 51 0.061572844 ubox
7 52 0.009664583 ubox
7 53 0.009295708 ubox
8 12 0.037782044 ubox
8 15 0.051067481 ubox
8 17 0.012626956 ubox
8 18 0.019833930 ubox
8 19 0.189981216 ubox
8 20 0.006477192 ubox
8 43 0.031957558 ubox
8 50 0.061934547 ubox
8 51 0.007785831 ubox
8 52 0.009575765 ubox
9 14 0.050981685 ubox
9 16 0.051142501 ubox
9 42 0.032820829 ubox
9 49 0.061729976 ubox
10 15 0.061750581 ubox
10 17 0.069693176 ubox
10 41 0.032893487 ubox
10 50 0.011629362 ubox
11 16 0.037811683 ubox
11 40 0.032675873 ubox
11 47 0.060507367 ubox
11 49 0.011613968 ubox
11 55 0.003351846 ubox
11 56 0.007356471 ubox
12 39 0.031502612 ubox
12 45 0.003952142 ubox
12 46 0.058536766 ubox
12 47 0.004009434 ubox
12 48 0.011462691 ubox
12 54 0.003722222 ubox
12 55 0.011532653 ubox
13 39 0.004230218 ubox
13 42 0.015376442 ubox
13 45 0.051662456 ubox
13 46 0.004114961 ubox
13 47 0.011273796 ubox
13 54 0.012635230 ubox
14 37 0.009634763 ubox
14 38 0.004352856 ubox
14 41 0.016648046 ubox
14 44 0.037338466 ubox
14 50 0.030895808 ubox
14 53 0.012632491 ubox
15 36 0.006425115 ubox
15 45 0.010270786 ubox
15 49 0.030932688 ubox
16 37 0.003309423 ubox
16 41 0.053920469 ubox
16 43 0.012195699 ubox
16 44 0.004497419 ubox
16 50 0.032003469 ubox
17 40 0.053737389 ubox
17 42 0.011391261 ubox
17 47 0.018344064 ubox
17 48 0.019413005 ubox
17 49 0.031506231 ubox
18 39 0.045933165 ubox
18 46 0.004759966 ubox
18 47 0.022098172 ubox
18 48 0.028967613 ubox
18 49 0.013842760 ubox
19 36 0.068493929 ubox
19 46 0.019181833 ubox
19 48 0.031824024 ubox
20 35 0.069004610 ubox
20 45 0.013846229 ubox
20 46 0.254529408 ubox
21 34 0.069005005 ubox
21 45 0.255788327 ubox
22 30 0.004841635 ubox
22 33 0.068027262 ubox
22 44 0.256060689 ubox
22 51 0.005383339 ubox
22 53 0.917410498 ubox
23 29 0.006614161 ubox
23 32 0.059505077 ubox
23 33 0.004317229 ubox
23 43 0.255146358 ubox
23 50 0.005740661 ubox
23 52 0.963553860 ubox
24 30 0.046792867 ubox
24 32 0.006841748 ubox
24 33 0.004175050 ubox
24 38 0.005635836 ubox
24 44 0.003366785 ubox
24 51 0.963664798 ubox
24 53 0.020072586 ubox
25 29 0.046073665 ubox
25 32 0.010066440 ubox
25 37 0.003385085 ubox
25 41 0.250040573 ubox
25 43 0.003965181 ubox
25 50 0.963398426 ubox
25 52 0.020688944 ubox
26 31 0.011266702 ubox
26 40 0.249066338 ubox
26 42 0.004284950 ubox
26 47 0.003252189 ubox
26 48 0.394126401 ubox
26 49 0.863375076 ubox
27 36 0.138722639 ubox
27 39 0.190381959 ubox
27 46 0.004375314 ubox
27 47 0.559760975 ubox
27 48 0.702301221 ubox
27 49 0.124169928 ubox
28 34 0.003292145 ubox
28 35 0.186812312 ubox
28 36 0.173530844 ubox
28 45 0.005307402 ubox
28 46 0.588796330 ubox
28 48 0.176094904 ubox
28 49 0.086364954 ubox
29 34 0.187002834 ubox
29 35 0.173731858 ubox
29 36 0.026776296 ubox
29 45 0.586775321 ubox
29 46 0.752750717 ubox
29 48 0.091453167 ubox
29 49 0.009241009 ubox
30 34 0.156520651 ubox
30 35 0.025876348 ubox
30 39 0.023972609 ubox
30 45 0.753535125 ubox
30 47 0.086530590 ubox
30 48 0.009918624 ubox
31 37 0.004914116 ubox
31 38 0.024087428 ubox
31 44 0.777452126 ubox
32 36 0.004784738 ubox
32 40 0.032775762 ubox
32 46 0.052604885 ubox
32 47 0.072876140 ubox
33 39 0.034222139 ubox
33 42 0.900831632 ubox
33 45 0.060642329 ubox
33 46 0.081283619 ubox
34 38 0.028745633 ubox
34 41 0.922189691 ubox
34 44 0.130028414 ubox
34 52 0.003926396 ubox
35 43 0.132600728 ubox
35 44 0.139937748 ubox
35 51 0.003961261 ubox
36 43 0.141992280 ubox
36 50 0.004445300 ubox
37 42 0.129970349 ubox
37 49 0.004401420 ubox
38 48 0.003995827 ubox
39 44 0.003643376 ubox
44 54 0.008192742 ubox
45 53 0.011331459 ubox
46 52 0.012124575 ubox
47 51 0.010827321 ubox
47 53 0.028399411 ubox
48 52 0.028637682 ubox
50 56 0.014971783 ubox
51 55 0.013856785 ubox
2 19 0.9500000 lbox
3 18 0.9500000 lbox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
22 53 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
25 50 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
showpage
end
%%EOF
