%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCAUUCACAUAAAACGCUGCGCGGCCGGCGGAAUCCCCGGCUUCUAGGGCGGCGAGCGGCCGGGCUGGCUAUCGAGCGAGCGGGGCGGGAACGCGGAGUUGCGCCGCCGCUCGGGCGCCGGGCUCCGUCGCGGCCGCAGCCCCGCGGGUCGCCCUCCCGUGCCUCGCCCGCGGACACCCUGGCCGUGGACACCCUGGCCGUGGGCACCCGCGGGGCGCGCGGCGCGGGGCCGCUGGCCGGCGGCGGCGGCGGC\
) } def
/len { sequence length } bind def

/coor [
[74.99783325 423.27880859]
[62.29907990 431.26263428]
[47.70855713 434.74356079]
[32.77320099 433.35247803]
[19.07649803 427.23687744]
[8.07061386 417.04519653]
[0.92242658 403.85797119]
[-1.61019278 389.07330322]
[0.74127197 374.25875854]
[7.72751141 360.98501587]
[18.60782433 350.65939331]
[32.22864532 344.37661743]
[47.14585876 342.80282593]
[61.77789307 346.10488892]
[74.57341766 353.93267822]
[84.17581177 365.45632935]
[89.56670380 379.45257568]
[91.03696442 364.52481079]
[92.50722504 349.59704590]
[93.97747803 334.66925049]
[95.44773865 319.74148560]
[96.91799164 304.81372070]
[94.45305634 297.86907959]
[98.49898529 289.71218872]
[100.15231323 274.80355835]
[101.80564880 259.89495850]
[103.45898438 244.98635864]
[105.11231995 230.07775879]
[106.76564789 215.16915894]
[108.41898346 200.26054382]
[110.07231903 185.35194397]
[111.72564697 170.44334412]
[113.37898254 155.53472900]
[107.19456482 151.29174805]
[98.70839691 163.66046143]
[86.33981323 155.17410278]
[94.82572174 142.80577087]
[88.64130402 138.56277466]
[75.32670593 145.47085571]
[62.01211548 152.37893677]
[59.83086777 167.74194336]
[49.01189804 178.86532593]
[33.71531677 181.47190857]
[19.82297707 174.55941772]
[12.67676258 160.78584290]
[15.02454090 145.44741821]
[25.96354294 134.44206238]
[41.28749847 132.00155640]
[55.10403442 139.06434631]
[68.41862488 132.15626526]
[81.73322296 125.24818420]
[77.11547852 110.97666168]
[62.27782822 113.17761993]
[47.44018173 115.37857819]
[32.60253525 117.57953644]
[21.92925072 129.55703735]
[5.91870070 128.53634644]
[-3.14719367 115.30043793]
[1.68614662 100.00278473]
[16.71099663 94.37841797]
[30.40157700 102.74188995]
[45.23922348 100.54093170]
[60.07687378 98.33997345]
[74.91452026 96.13901520]
[75.32848358 88.65045166]
[76.57038116 66.18474579]
[62.06573105 62.36176300]
[47.56108475 58.53877640]
[32.24467087 62.50337601]
[21.90966988 51.77784348]
[7.40502214 47.95485687]
[-7.09962511 44.13187408]
[-22.77169609 48.96076965]
[-34.60393906 37.60603714]
[-30.42436028 21.74844551]
[-14.53254986 17.70092964]
[-3.27664018 29.62722588]
[11.22800732 33.45021057]
[25.73265457 37.27319717]
[40.01159668 33.03515244]
[51.38406754 44.03413010]
[65.88871765 47.85711670]
[80.39336395 51.68009949]
[91.38317871 41.47108459]
[88.63758087 26.72450256]
[85.89198303 11.97792053]
[83.14638519 -2.76866126]
[80.40077972 -17.51524353]
[77.65518188 -32.26182556]
[74.90958405 -47.00840759]
[63.01346970 -53.28819656]
[56.98595428 -65.09622955]
[58.82356644 -78.02938080]
[67.63545990 -87.40766907]
[65.07103729 -102.18682861]
[62.50660706 -116.96599579]
[59.94217682 -131.74516296]
[57.37775040 -146.52432251]
[47.39505768 -158.79853821]
[52.84256744 -172.66122437]
[50.27813721 -187.44038391]
[47.71371078 -202.21955872]
[45.14928055 -216.99871826]
[42.58485413 -231.77787781]
[40.02042389 -246.55705261]
[36.11221695 -251.83251953]
[35.52174759 -257.44873047]
[37.57907104 -261.73004150]
[35.37811279 -276.56768799]
[33.17715454 -291.40533447]
[30.97620010 -306.24298096]
[28.77524185 -321.08062744]
[16.99724579 -335.25262451]
[24.11318016 -351.30740356]
[21.73030853 -366.11694336]
[19.34743690 -380.92645264]
[16.87373924 -395.72106934]
[14.30931187 -410.50024414]
[2.07348013 -420.87637329]
[2.70094824 -436.90713501]
[15.71037579 -446.29513550]
[31.12204361 -441.83868408]
[37.11343765 -426.95639038]
[29.08847618 -413.06466675]
[31.65290451 -398.28552246]
[35.88078308 -392.24984741]
[34.15695953 -383.30932617]
[36.53982925 -368.49981689]
[38.92270279 -353.69027710]
[48.52824783 -346.36727905]
[50.64838791 -334.06964111]
[43.61288834 -323.28158569]
[45.81384659 -308.44393921]
[48.01480484 -293.60629272]
[50.21575928 -278.76864624]
[52.41671753 -263.93099976]
[54.79959106 -249.12147522]
[57.36401749 -234.34231567]
[59.92844772 -219.56314087]
[62.49287415 -204.78398132]
[65.05730438 -190.00482178]
[67.62173462 -175.22564697]
[77.42099762 -164.00854492]
[72.15691376 -149.08876038]
[74.72134399 -134.30958557]
[77.28577423 -119.53042603]
[79.85019684 -104.75125885]
[82.41462708 -89.97209167]
[96.57202911 -80.87049103]
[99.81659698 -64.01100922]
[89.65616608 -49.75400543]
[92.40176392 -35.00742340]
[95.14736938 -20.26084137]
[97.89296722 -5.51425982]
[100.63856506 9.23232269]
[103.38416290 23.97890472]
[106.12976074 38.72548676]
[117.42755890 48.59258652]
[132.40950012 49.32860184]
[147.39141846 50.06461716]
[162.37335205 50.80063248]
[177.35528564 51.53664780]
[192.33721924 52.27266312]
[207.31915283 53.00867844]
[222.30108643 53.74469376]
[239.82873535 43.75010300]
[255.58184814 54.99111938]
[270.57733154 55.35924149]
[285.57281494 55.72735977]
[300.56829834 56.09547806]
[315.56378174 56.46359634]
[330.56121826 56.73969650]
[345.56008911 56.92377090]
[360.55895996 57.10784149]
[375.55783081 57.29191589]
[384.86984253 45.02028656]
[399.45178223 40.63614655]
[413.65121460 45.62008286]
[422.09213257 57.86300659]
[437.09100342 58.04707718]
[452.08987427 58.23115158]
[467.08956909 58.32318878]
[482.08956909 58.32318878]
[497.08956909 58.32318878]
[512.08959961 58.32318878]
[527.08959961 58.32318878]
[542.08959961 58.32318878]
[550.64270020 55.20098114]
[557.27337646 58.41635895]
[572.27221680 58.60042953]
[586.30133057 50.10824585]
[600.53796387 58.24769211]
[600.33666992 74.64560699]
[585.90460205 82.43321991]
[572.08819580 73.59930420]
[557.08929443 73.41522980]
[542.08959961 73.32318878]
[527.08959961 73.32318878]
[512.08959961 73.32318878]
[497.08956909 73.32318878]
[482.08956909 73.32318878]
[467.08956909 73.32318878]
[460.41998291 76.45695496]
[451.90579224 73.23001862]
[436.90692139 73.04595184]
[421.90805054 72.86187744]
[413.16921997 84.89395905]
[398.85174561 89.52792358]
[384.38180542 84.78724670]
[375.37377930 72.29078674]
[360.37490845 72.10671234]
[345.37603760 71.92263794]
[330.37716675 71.73856354]
[323.66958618 74.79024506]
[315.19564819 71.45907593]
[300.20016479 71.09095764]
[285.20468140 70.72283936]
[270.20919800 70.35472107]
[255.21372986 69.98660278]
[248.50358582 77.64653015]
[238.47804260 80.42162323]
[228.36676025 77.16838837]
[221.56506348 68.72662354]
[206.58312988 67.99060822]
[191.60121155 67.25459290]
[176.61927795 66.51857758]
[161.63734436 65.78256226]
[146.65541077 65.04654694]
[131.67347717 64.31053162]
[116.69154358 63.57452011]
[151.92903137 99.22962952]
[128.28758240 157.18806458]
[126.63425446 172.09667969]
[124.98091888 187.00527954]
[123.32758331 201.91387939]
[121.67425537 216.82249451]
[120.02091980 231.73109436]
[118.36758423 246.63969421]
[116.71425629 261.54830933]
[115.06092072 276.45690918]
[113.40758514 291.36550903]
[111.84576416 306.28396606]
[110.37550354 321.21176147]
[108.90525055 336.13952637]
[107.43498993 351.06729126]
[105.96473694 365.99505615]
[104.49447632 380.92282104]
[104.58651733 395.92254639]
[106.23985291 410.83114624]
[116.38547516 423.71517944]
[110.04995728 438.84109497]
[93.75073242 440.64865112]
[84.25504303 427.27838135]
[91.33124542 412.48449707]
[89.67790985 397.57589722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 247]
[18 246]
[19 245]
[20 244]
[21 243]
[22 242]
[24 241]
[25 240]
[26 239]
[27 238]
[28 237]
[29 236]
[30 235]
[31 234]
[32 233]
[33 232]
[38 51]
[39 50]
[40 49]
[52 64]
[53 63]
[54 62]
[55 61]
[66 83]
[67 82]
[68 81]
[70 79]
[71 78]
[72 77]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[90 151]
[94 148]
[95 147]
[96 146]
[97 145]
[98 144]
[100 142]
[101 141]
[102 140]
[103 139]
[104 138]
[105 137]
[108 136]
[109 135]
[110 134]
[111 133]
[112 132]
[114 129]
[115 128]
[116 127]
[117 125]
[118 124]
[158 230]
[159 229]
[160 228]
[161 227]
[162 226]
[163 225]
[164 224]
[165 223]
[167 219]
[168 218]
[169 217]
[170 216]
[171 215]
[172 213]
[173 212]
[174 211]
[175 210]
[179 206]
[180 205]
[181 204]
[182 202]
[183 201]
[184 200]
[185 199]
[186 198]
[187 197]
[189 196]
[190 195]
[248 255]
[249 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
