%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPL29)
} def

/sequence { (\
UUCCGGCGUUGUUGACCCUAUUUCCCGUGCUGCACCGCAGCCCCUUUCUCUUCCGGUUCUAGGCGCUUCGGGAGCCGCGGCUUAUGGUGCAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.007663688 ubox
1 73 0.010731131 ubox
1 93 0.004679668 ubox
2 14 0.005943239 ubox
2 15 0.044675400 ubox
2 72 0.011789007 ubox
2 73 0.003814681 ubox
2 93 0.013171228 ubox
3 14 0.037409605 ubox
3 71 0.013523985 ubox
3 72 0.003937298 ubox
3 92 0.013111595 ubox
4 11 0.027182235 ubox
4 14 0.255419812 ubox
4 27 0.271123537 ubox
4 29 0.024591268 ubox
4 70 0.013531800 ubox
4 71 0.003900616 ubox
5 10 0.021112327 ubox
5 13 0.258078351 ubox
5 17 0.373709106 ubox
5 18 0.803821357 ubox
5 19 0.124244823 ubox
5 24 0.013338956 ubox
5 25 0.051494527 ubox
5 26 0.281057901 ubox
5 28 0.017337565 ubox
5 31 0.012471649 ubox
5 67 0.007520998 ubox
5 69 0.011830213 ubox
6 12 0.258959602 ubox
6 16 0.374948756 ubox
6 17 0.804388231 ubox
6 18 0.130423760 ubox
6 23 0.012091549 ubox
6 24 0.052669479 ubox
6 25 0.279761615 ubox
6 28 0.079561389 ubox
6 30 0.016206532 ubox
6 66 0.014122817 ubox
6 90 0.013293980 ubox
7 11 0.257687365 ubox
7 14 0.377558760 ubox
7 27 0.083524139 ubox
7 29 0.017615857 ubox
7 65 0.014268836 ubox
7 89 0.013298362 ubox
8 13 0.329162377 ubox
8 16 0.813896666 ubox
8 21 0.091883456 ubox
8 26 0.082385553 ubox
8 28 0.013604638 ubox
8 30 0.003947787 ubox
8 64 0.014272667 ubox
8 88 0.011375077 ubox
8 94 0.023604560 ubox
9 15 0.808428135 ubox
9 20 0.091669471 ubox
9 27 0.005468789 ubox
9 29 0.004270408 ubox
9 63 0.014229659 ubox
9 87 0.004044531 ubox
9 92 0.020025985 ubox
9 93 0.022785931 ubox
10 14 0.728501798 ubox
10 20 0.077398327 ubox
10 27 0.010334245 ubox
10 62 0.013821279 ubox
10 86 0.004214279 ubox
10 91 0.025182200 ubox
10 92 0.020621889 ubox
11 19 0.075856697 ubox
11 21 0.162143388 ubox
11 26 0.014712418 ubox
11 85 0.004064251 ubox
11 90 0.026348894 ubox
11 94 0.014172728 ubox
12 20 0.161898539 ubox
12 84 0.003662673 ubox
12 89 0.025483088 ubox
12 92 0.020549163 ubox
12 93 0.013341790 ubox
13 20 0.065307179 ubox
13 27 0.007791464 ubox
13 89 0.003421089 ubox
13 91 0.027227089 ubox
13 92 0.011878384 ubox
14 19 0.063597234 ubox
14 22 0.021764008 ubox
14 23 0.019575637 ubox
14 24 0.056413163 ubox
14 26 0.012124644 ubox
14 58 0.013213741 ubox
14 59 0.003896738 ubox
14 83 0.003274966 ubox
14 90 0.028308966 ubox
15 21 0.021068231 ubox
15 22 0.019806830 ubox
15 23 0.054110958 ubox
15 28 0.030764484 ubox
15 57 0.013892254 ubox
15 82 0.003283753 ubox
15 88 0.040684377 ubox
16 27 0.031564929 ubox
16 56 0.014106281 ubox
16 80 0.003590015 ubox
16 87 0.041544002 ubox
17 55 0.014065682 ubox
17 79 0.003584845 ubox
17 86 0.041285178 ubox
17 87 0.018103843 ubox
18 86 0.018394057 ubox
18 87 0.024919066 ubox
19 29 0.064845211 ubox
19 84 0.033579445 ubox
19 86 0.025506231 ubox
20 28 0.071771573 ubox
20 83 0.033569209 ubox
20 85 0.031051652 ubox
21 27 0.070127429 ubox
21 84 0.031392751 ubox
21 93 0.004343757 ubox
22 74 0.004256425 ubox
22 93 0.004982261 ubox
23 73 0.005776694 ubox
23 80 0.003497861 ubox
23 93 0.009036137 ubox
24 72 0.005908659 ubox
24 79 0.003594830 ubox
24 80 0.009761471 ubox
24 92 0.007745110 ubox
25 71 0.005911232 ubox
25 79 0.009388084 ubox
25 80 0.051229182 ubox
25 87 0.004086890 ubox
26 70 0.005910533 ubox
26 77 0.009410072 ubox
26 79 0.051405067 ubox
26 86 0.004110311 ubox
27 69 0.005697299 ubox
27 76 0.009412899 ubox
27 78 0.051409071 ubox
27 85 0.004046918 ubox
27 94 0.615272739 ubox
28 77 0.051204490 ubox
28 84 0.003746631 ubox
28 93 0.620340839 ubox
29 41 0.015379578 ubox
29 75 0.020466309 ubox
29 76 0.046419007 ubox
29 78 0.004527734 ubox
29 81 0.003891432 ubox
30 40 0.015426647 ubox
30 74 0.027263931 ubox
30 77 0.004683633 ubox
30 80 0.003931885 ubox
30 92 0.994138197 ubox
31 39 0.015429579 ubox
31 73 0.025759255 ubox
31 79 0.003924699 ubox
31 91 0.997663241 ubox
32 38 0.015434349 ubox
32 66 0.005302523 ubox
32 75 0.043313059 ubox
32 78 0.003770704 ubox
32 90 0.998474000 ubox
33 37 0.015322152 ubox
33 65 0.005303937 ubox
33 74 0.043463937 ubox
33 77 0.003733949 ubox
33 89 0.998478358 ubox
34 88 0.998276477 ubox
35 63 0.005314143 ubox
35 71 0.052542109 ubox
35 72 0.003528456 ubox
35 80 0.004748611 ubox
35 87 0.998449882 ubox
36 62 0.005318303 ubox
36 70 0.052763487 ubox
36 79 0.005498308 ubox
36 86 0.998093367 ubox
37 64 0.003199219 ubox
37 66 0.009136694 ubox
37 69 0.054134812 ubox
37 78 0.007910144 ubox
37 81 0.013914213 ubox
37 85 0.912342344 ubox
38 63 0.003199420 ubox
38 65 0.009133300 ubox
38 77 0.007938870 ubox
38 80 0.013976249 ubox
39 45 0.003339531 ubox
39 58 0.006370042 ubox
39 67 0.055102859 ubox
39 82 0.949147257 ubox
39 83 0.181186159 ubox
39 85 0.004402507 ubox
40 44 0.003503497 ubox
40 48 0.003215690 ubox
40 57 0.007289810 ubox
40 64 0.017912084 ubox
40 66 0.056410546 ubox
40 75 0.007974638 ubox
40 78 0.012587022 ubox
40 81 0.996111312 ubox
40 82 0.045262880 ubox
41 56 0.007345642 ubox
41 63 0.017910785 ubox
41 65 0.056365585 ubox
41 74 0.007961551 ubox
41 77 0.012154517 ubox
41 80 0.994735779 ubox
42 55 0.007328183 ubox
42 62 0.017861813 ubox
42 63 0.010719935 ubox
42 72 0.007422195 ubox
42 79 0.988029689 ubox
42 80 0.072556063 ubox
43 55 0.003424882 ubox
43 56 0.033181548 ubox
43 62 0.010847288 ubox
43 63 0.057019087 ubox
43 71 0.007459518 ubox
43 72 0.005382297 ubox
43 79 0.091764013 ubox
43 80 0.025131564 ubox
44 55 0.033348617 ubox
44 56 0.005017660 ubox
44 62 0.059365669 ubox
44 70 0.007442926 ubox
44 71 0.005382576 ubox
44 74 0.017487387 ubox
44 79 0.028178225 ubox
44 80 0.006122835 ubox
45 55 0.004782144 ubox
45 61 0.058569973 ubox
45 70 0.005140034 ubox
45 73 0.017060034 ubox
45 74 0.013219867 ubox
45 79 0.007706532 ubox
46 61 0.003276411 ubox
46 72 0.016477614 ubox
46 73 0.014471151 ubox
46 74 0.067871842 ubox
47 56 0.014999228 ubox
47 71 0.015722309 ubox
47 72 0.014513305 ubox
47 73 0.075210864 ubox
48 55 0.018295844 ubox
48 56 0.028404258 ubox
48 62 0.004999619 ubox
48 70 0.015601491 ubox
48 71 0.014628780 ubox
48 72 0.075570875 ubox
48 74 0.141878633 ubox
48 79 0.005152360 ubox
49 55 0.025659796 ubox
49 56 0.024817729 ubox
49 61 0.004756230 ubox
49 70 0.013901449 ubox
49 71 0.074185741 ubox
49 73 0.141202555 ubox
49 79 0.003181255 ubox
49 80 0.003779286 ubox
50 55 0.029093345 ubox
50 56 0.040676788 ubox
50 62 0.010967471 ubox
50 70 0.073533103 ubox
50 71 0.007366783 ubox
50 72 0.139050698 ubox
50 74 0.428717767 ubox
50 79 0.021349738 ubox
50 80 0.012682162 ubox
51 55 0.036707866 ubox
51 61 0.010863397 ubox
51 70 0.007299566 ubox
51 71 0.095312132 ubox
51 72 0.003218137 ubox
51 73 0.430579024 ubox
51 74 0.004017981 ubox
51 79 0.021782608 ubox
51 80 0.003808412 ubox
52 70 0.083852087 ubox
52 71 0.009806140 ubox
52 72 0.431153847 ubox
52 73 0.005019379 ubox
52 79 0.029207890 ubox
52 80 0.013179834 ubox
53 62 0.004844812 ubox
53 63 0.035373424 ubox
53 70 0.013312003 ubox
53 71 0.443266703 ubox
53 72 0.005156129 ubox
53 79 0.071969896 ubox
54 62 0.036349140 ubox
54 65 0.066604162 ubox
54 70 0.444105571 ubox
54 71 0.004840865 ubox
54 77 0.877628805 ubox
55 64 0.066895071 ubox
55 67 0.088565224 ubox
55 68 0.005562212 ubox
55 69 0.441661795 ubox
55 76 0.884040653 ubox
56 64 0.090902389 ubox
56 66 0.117519084 ubox
56 67 0.011546528 ubox
56 68 0.401105475 ubox
56 75 0.884090714 ubox
56 78 0.004810958 ubox
57 63 0.091471206 ubox
57 65 0.116058237 ubox
57 73 0.014127460 ubox
57 74 0.883555345 ubox
57 77 0.004803623 ubox
58 62 0.067605239 ubox
58 72 0.016989528 ubox
58 73 0.883396260 ubox
59 71 0.027295645 ubox
59 72 0.883513721 ubox
60 70 0.031998665 ubox
60 71 0.825172126 ubox
61 67 0.101323557 ubox
61 68 0.053446766 ubox
62 66 0.100216976 ubox
62 67 0.051787195 ubox
62 68 0.079115298 ubox
62 69 0.811504635 ubox
62 76 0.027616359 ubox
62 82 0.003169659 ubox
63 67 0.056812890 ubox
63 68 0.574741074 ubox
63 75 0.027653500 ubox
63 78 0.039029192 ubox
64 70 0.157156561 ubox
64 74 0.027612414 ubox
64 77 0.039464810 ubox
65 69 0.147458942 ubox
65 75 0.030807363 ubox
65 76 0.028032020 ubox
65 78 0.003898064 ubox
65 81 0.015923645 ubox
66 72 0.023186694 ubox
66 74 0.041505693 ubox
66 77 0.003743708 ubox
66 80 0.015945762 ubox
67 71 0.020941954 ubox
67 73 0.041210902 ubox
67 79 0.015648366 ubox
68 72 0.037138410 ubox
69 77 0.016911734 ubox
70 76 0.017191883 ubox
70 85 0.003912673 ubox
71 75 0.016915486 ubox
72 83 0.023109602 ubox
73 82 0.024018995 ubox
74 81 0.024241413 ubox
74 88 0.003916617 ubox
74 90 0.008170817 ubox
75 80 0.024230055 ubox
75 87 0.004143642 ubox
75 89 0.006381445 ubox
76 86 0.004148529 ubox
76 89 0.006408003 ubox
77 85 0.003359028 ubox
77 88 0.008244294 ubox
77 90 0.007351649 ubox
78 86 0.003668971 ubox
78 87 0.008275375 ubox
78 89 0.007354324 ubox
79 85 0.003494228 ubox
79 88 0.006409068 ubox
80 88 0.003640271 ubox
80 90 0.003788702 ubox
81 87 0.005092526 ubox
81 89 0.003832412 ubox
82 86 0.004593976 ubox
5 18 0.9500000 lbox
6 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
10 14 0.9500000 lbox
30 92 0.9500000 lbox
31 91 0.9500000 lbox
32 90 0.9500000 lbox
33 89 0.9500000 lbox
34 88 0.9500000 lbox
35 87 0.9500000 lbox
36 86 0.9500000 lbox
37 85 0.9500000 lbox
39 82 0.9500000 lbox
40 81 0.9500000 lbox
41 80 0.9500000 lbox
42 79 0.9500000 lbox
54 77 0.9500000 lbox
55 76 0.9500000 lbox
56 75 0.9500000 lbox
57 74 0.9500000 lbox
58 73 0.9500000 lbox
59 72 0.9500000 lbox
60 71 0.9500000 lbox
62 69 0.9500000 lbox
63 68 0.9500000 lbox
showpage
end
%%EOF
