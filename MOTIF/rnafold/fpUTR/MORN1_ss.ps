%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACGCGCAGGCCGUUGGCGGGCGGGCCUCCCGGCGGAAGAGACGACAGCGGCGGAAACGCGCACAGGCGCAGCUGCGUCCUCUGGCUCCGGGCCCGGCUAGCUUCGCUCCAGAGAUUGCGCGGGCUCAGGGACUAGGCCCGUGGCCACACCCCCCCUUGCGACAAAGACCAAUGGAAGCGGGCGUUGCUGGUCGCUAAGAGAACCCUCGGCGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[74.72502899 124.91001129]
[69.61504364 117.01013947]
[66.84261322 108.20482635]
[66.51799011 99.15621948]
[51.98817825 95.43003845]
[37.45835876 91.70385742]
[22.92854309 87.97767639]
[8.39872551 84.25150299]
[-6.13109159 80.52532196]
[-20.66090965 76.79914093]
[-30.23013306 89.72305298]
[-43.99380875 97.96444702]
[-59.82836151 100.28625488]
[-75.30390930 96.36209869]
[-88.05712128 86.82176971]
[-96.15213776 73.15039062]
[-98.37439728 57.45727158]
[-112.95616913 53.93990326]
[-127.53794098 50.42253113]
[-142.11972046 46.90515900]
[-156.70149231 43.38779068]
[-171.30812073 39.97509766]
[-185.93884277 36.66725922]
[-201.10552979 41.17083359]
[-211.81323242 30.81735992]
[-226.44395447 27.50952148]
[-241.07469177 24.20168495]
[-255.70541382 20.89384651]
[-274.67214966 27.73356247]
[-288.28222656 13.99365711]
[-303.00183105 11.10688305]
[-317.72140503 8.22010994]
[-332.44100952 5.33333588]
[-347.16061401 2.44656205]
[-357.29171753 13.90553474]
[-371.70306396 18.72314644]
[-386.49261475 15.70053864]
[-397.70843506 5.74758434]
[-402.40484619 -8.38780880]
[-417.12442017 -11.27458286]
[-431.84402466 -14.16135693]
[-446.56362915 -17.04813004]
[-461.30355835 -19.82925224]
[-476.06304932 -22.50458145]
[-490.82254028 -25.17991066]
[-499.81863403 -23.63167572]
[-505.77389526 -28.00092888]
[-520.49353027 -30.88770294]
[-535.21307373 -33.77447510]
[-549.93267822 -36.66125107]
[-564.96392822 -31.72445297]
[-575.96423340 -41.76649857]
[-590.68383789 -44.65327072]
[-605.40344238 -47.54004669]
[-613.78546143 -34.85893250]
[-626.38500977 -26.35490036]
[-641.28088379 -23.32475853]
[-656.20147705 -26.23057747]
[-668.87158203 -34.62924194]
[-677.35900879 -47.24001694]
[-680.36956787 -62.13985062]
[-677.44415283 -77.05662537]
[-669.02880859 -89.71564484]
[-656.40686035 -98.18650055]
[-641.50311279 -101.17744446]
[-626.59020996 -98.23237610]
[-613.94226074 -89.80040741]
[-605.48797607 -77.16734314]
[-602.51666260 -62.25964355]
[-587.79705811 -59.37286758]
[-573.07745361 -56.48609543]
[-559.09906006 -61.62937546]
[-547.04589844 -51.38084793]
[-532.32635498 -48.49407196]
[-517.60675049 -45.60729980]
[-502.88714600 -42.72052765]
[-488.14721680 -39.93940353]
[-473.38772583 -37.26407242]
[-458.62823486 -34.58874512]
[-451.49029541 -36.48757935]
[-443.67684937 -31.76772690]
[-428.95724487 -28.88095284]
[-414.23767090 -25.99418068]
[-399.51806641 -23.10740662]
[-389.83050537 -34.42184830]
[-375.68618774 -39.40122986]
[-360.85052490 -36.61381149]
[-349.32632446 -26.70977974]
[-344.27383423 -12.27303505]
[-329.55422974 -9.38626099]
[-314.83465576 -6.49948740]
[-300.11505127 -3.61271381]
[-285.39544678 -0.72594011]
[-277.46789551 -7.16167641]
[-267.08883667 -8.19638157]
[-257.65789795 -3.24871755]
[-252.39758301 6.26311779]
[-237.76684570 9.57095623]
[-223.13612366 12.87879372]
[-208.50538635 16.18663216]
[-194.38519287 11.44645977]
[-182.63101196 22.03653145]
[-168.00027466 25.34436989]
[-160.78726196 23.75438499]
[-153.18411255 28.80601692]
[-138.60234070 32.32338715]
[-124.02056885 35.84075928]
[-109.43879700 39.35812759]
[-94.85702515 42.87549973]
[-87.03609467 31.22701073]
[-75.68524933 22.92933464]
[-62.15539551 18.99526024]
[-48.06543350 19.91674042]
[-35.10852051 25.60346603]
[-24.84863472 35.39127350]
[-18.53178978 48.11965561]
[-16.93472862 62.26932526]
[-2.40491199 65.99550629]
[12.12490463 69.72167969]
[26.65472221 73.44786072]
[41.18453979 77.17404175]
[55.71435547 80.90022278]
[70.24417114 84.62640381]
[81.41268158 70.86836243]
[98.50652313 64.41127777]
[117.07127380 67.53049469]
[131.96635437 79.92459106]
[138.78767395 98.65040588]
[153.64860535 96.61254120]
[168.50952148 94.57467651]
[181.13058472 85.03424835]
[194.79101562 90.97071838]
[209.65194702 88.93285370]
[224.51286316 86.89498138]
[228.62686157 83.70143890]
[233.10639954 82.51940155]
[237.12545776 83.15196991]
[240.05543518 85.10342407]
[254.99028015 83.70679474]
[269.92510986 82.31017303]
[284.85995483 80.91354370]
[299.79479980 79.51691437]
[314.72964478 78.12028503]
[324.80001831 66.23646545]
[339.96597290 65.03284454]
[351.23330688 74.70664978]
[366.16815186 73.31002045]
[381.10299683 71.91339111]
[384.26184082 59.90248489]
[390.93795776 49.45914459]
[400.47567749 41.58126831]
[411.94674683 37.01614380]
[424.24063110 36.18959427]
[436.17211914 39.16629410]
[446.59555054 45.64497375]
[454.51477051 54.98884964]
[459.17840576 66.28818512]
[474.15948486 65.53537750]
[489.14059448 64.78256989]
[499.55374146 52.89384842]
[515.32885742 51.93383789]
[527.10681152 62.47210693]
[527.89996338 78.25647736]
[517.23779297 89.92237091]
[501.44592285 90.54861450]
[489.89340210 79.76367188]
[474.91229248 80.51647186]
[459.93121338 81.26927948]
[453.66860962 97.82633972]
[440.75152588 110.00773621]
[423.75482178 115.32144928]
[406.09463501 112.65084839]
[391.34173584 102.48896027]
[382.49960327 86.84823608]
[367.56478882 88.24486542]
[352.62994385 89.64148712]
[343.35156250 101.23662567]
[328.22540283 102.86576080]
[316.12625122 93.05512238]
[301.19143677 94.45175171]
[286.25659180 95.84838104]
[271.32174683 97.24501038]
[256.38690186 98.64163971]
[241.45207214 100.03826904]
[226.55073547 101.75591278]
[211.68980408 103.79377747]
[196.82888794 105.83164215]
[185.27078247 115.22630310]
[170.54739380 109.43560028]
[155.68646240 111.47346497]
[140.82554626 113.51132965]
[133.70127869 126.71150970]
[140.15408325 140.25260925]
[146.60690308 153.79370117]
[153.05970764 167.33479309]
[159.51251221 180.87588501]
[165.96533203 194.41697693]
[171.17962646 198.46618652]
[173.25865173 203.74726868]
[172.40277100 208.44035339]
[178.46447754 222.16098022]
[184.52618408 235.88160706]
[198.07775879 245.11671448]
[196.58604431 261.44787598]
[181.58560181 268.07498169]
[168.50759888 258.18066406]
[170.80555725 241.94331360]
[164.74385071 228.22268677]
[158.68214417 214.50205994]
[152.42424011 200.86979675]
[145.97142029 187.32870483]
[139.51861572 173.78761292]
[133.06579590 160.24650574]
[126.61299133 146.70541382]
[120.16017914 133.16432190]
[110.48420715 136.67729187]
[100.39921570 137.47940063]
[90.63755798 135.60638428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 123]
[5 122]
[6 121]
[7 120]
[8 119]
[9 118]
[10 117]
[17 109]
[18 108]
[19 107]
[20 106]
[21 105]
[22 103]
[23 102]
[25 100]
[26 99]
[27 98]
[28 97]
[30 93]
[31 92]
[32 91]
[33 90]
[34 89]
[39 84]
[40 83]
[41 82]
[42 81]
[43 79]
[44 78]
[45 77]
[47 76]
[48 75]
[49 74]
[50 73]
[52 71]
[53 70]
[54 69]
[128 191]
[129 190]
[130 189]
[132 187]
[133 186]
[134 185]
[138 184]
[139 183]
[140 182]
[141 181]
[142 180]
[143 179]
[146 176]
[147 175]
[148 174]
[157 168]
[158 167]
[159 166]
[192 215]
[193 214]
[194 213]
[195 212]
[196 211]
[197 210]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
