%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCGGGUCUUGGCGGGCCCCCUCCUCCCUCCCGCUCCCCGCGCUCUCGCCUUUUAAUCAUGCCCCUCUGUCUGUGUGUGAGUGCAGGCAGGCUGACAAUGAUUUCCUCAGUGAUUACGUACAGAGCGAGUCCCUGCGGGUUAGGGGCCCCCUCUGGAGCCAUCCUGAUGGCUUUGGGGGCCUUGCUUCCAUUUUCCAUUAUUAUGUGGACUACCGGAGCGACAGCGCAGUCCAAGACCUUGCAGG\
) } def
/len { sequence length } bind def

/coor [
[66.72592163 335.91134644]
[76.69241333 323.33959961]
[76.31242371 308.34442139]
[67.77165222 299.79959106]
[67.31842804 287.32601929]
[75.73934174 277.57708740]
[75.54933167 262.57827759]
[75.35932159 247.57948303]
[75.16931152 232.58068848]
[74.97929382 217.58189392]
[74.78928375 202.58309937]
[74.59927368 187.58430481]
[74.40926361 172.58551025]
[74.21925354 157.58671570]
[66.55072784 114.98461151]
[90.26856232 96.90930939]
[77.43940735 89.13674164]
[64.61026001 81.36416626]
[51.78110504 73.59159088]
[38.95195389 65.81902313]
[26.12280273 58.04644775]
[13.29365158 50.27387619]
[5.97914267 55.87205505]
[-2.56251884 59.25604630]
[-11.67985630 60.18146515]
[-20.68120956 58.59091568]
[-28.88720322 54.61738968]
[-35.68202591 48.57323837]
[-40.55963898 40.92565536]
[-43.16144562 32.26057816]
[-43.30264664 23.23780632]
[-40.98529053 14.54075241]
[-53.18720627 5.81646299]
[-65.38912201 -2.90782642]
[-77.59104156 -11.63211632]
[-89.79295349 -20.35640526]
[-103.39363098 -11.76023197]
[-119.21460724 -9.05291271]
[-134.82450867 -12.62045288]
[-147.83589172 -21.88683510]
[-156.27049255 -35.40678787]
[-158.85983276 -51.09114075]
[-155.23605347 -66.52963257]
[-167.54750061 -75.09865570]
[-179.85896301 -83.66767883]
[-192.17041016 -92.23670197]
[-204.48185730 -100.80572510]
[-217.26152039 -108.65939331]
[-230.46788025 -115.77220917]
[-243.67424011 -122.88501740]
[-256.88061523 -129.99783325]
[-269.98110962 -120.32925415]
[-285.93054199 -117.35810852]
[-301.52139282 -121.63018799]
[-313.64083862 -132.23983765]
[-319.89215088 -147.02137756]
[-319.06869507 -162.99098206]
[-332.36407471 -169.93592834]
[-345.65948486 -176.88088989]
[-358.95489502 -183.82583618]
[-372.25027466 -190.77078247]
[-385.54568481 -197.71572876]
[-394.57034302 -192.10520935]
[-405.02804565 -190.74427795]
[-415.03387451 -193.81091309]
[-422.81225586 -200.69113159]
[-427.01177979 -210.10052490]
[-426.93991089 -220.32365417]
[-439.96185303 -227.76873779]
[-455.78250122 -227.90132141]
[-462.99108887 -240.93533325]
[-476.01303101 -248.38041687]
[-489.03494263 -255.82550049]
[-502.05688477 -263.27056885]
[-515.07879639 -270.71566772]
[-528.10076904 -278.16073608]
[-543.92138672 -278.29333496]
[-551.13000488 -291.32733154]
[-564.15191650 -298.77243042]
[-577.17388916 -306.21749878]
[-593.56164551 -305.60720825]
[-602.05377197 -319.63632202]
[-593.91424561 -333.87289429]
[-577.51629639 -333.67156982]
[-569.72875977 -319.23944092]
[-556.70684814 -311.79434204]
[-543.68493652 -304.34927368]
[-528.79565430 -304.74920654]
[-520.65570068 -291.18267822]
[-507.63372803 -283.73757935]
[-494.61181641 -276.29251099]
[-481.58987427 -268.84744263]
[-468.56793213 -261.40234375]
[-455.54598999 -253.95727539]
[-440.65676880 -254.35720825]
[-432.51675415 -240.79067993]
[-419.49481201 -233.34559631]
[-401.09744263 -239.81375122]
[-383.62231445 -230.48826599]
[-378.60073853 -211.01113892]
[-365.30532837 -204.06617737]
[-352.00994873 -197.12123108]
[-338.71453857 -190.17628479]
[-325.41912842 -183.23133850]
[-312.12374878 -176.28637695]
[-301.43356323 -185.10899353]
[-288.14758301 -189.20799255]
[-274.25866699 -187.93402100]
[-261.86334229 -181.44628906]
[-252.84532166 -170.69349670]
[-248.58914185 -157.27526855]
[-249.76779175 -143.20419312]
[-236.56143188 -136.09136963]
[-223.35507202 -128.97856140]
[-210.14871216 -121.86575317]
[-216.28366089 -135.55380249]
[-214.13420105 -150.39898682]
[-204.36875916 -161.78479004]
[-190.02420044 -166.17042542]
[-175.56140137 -162.19206238]
[-165.47799683 -151.08689880]
[-162.90969849 -136.30841064]
[-168.65522766 -122.45240021]
[-180.92781067 -113.82781219]
[-195.91284180 -113.11717224]
[-183.60139465 -104.54814911]
[-171.28993225 -95.97912598]
[-158.97848511 -87.41010284]
[-146.66703796 -78.84107971]
[-135.16069031 -86.85332489]
[-121.58267975 -90.46824646]
[-107.55617523 -89.23265076]
[-94.76514435 -83.27443695]
[-84.75218964 -73.28971100]
[-78.73252106 -60.46150970]
[-77.44651794 -46.31965637]
[-81.06866455 -32.55832291]
[-68.86675262 -23.83403206]
[-56.66483307 -15.10974312]
[-44.46291733 -6.38545370]
[-32.26100159 2.33883572]
[-12.93981552 -5.87514687]
[7.53332186 -0.64431280]
[20.71518517 16.04459953]
[21.06622314 37.44472504]
[33.89537430 45.21729660]
[46.72452545 52.98987198]
[59.55367661 60.76244354]
[72.38282776 68.53501129]
[85.21198273 76.30758667]
[98.04113007 84.08016205]
[113.03631592 84.46015167]
[126.24267578 77.34733582]
[139.44903564 70.23452759]
[152.65539551 63.12171936]
[165.86175537 56.00890732]
[179.06811523 48.89609909]
[192.27447510 41.78328705]
[205.48083496 34.67047882]
[218.68719482 27.55766678]
[231.89355469 20.44485664]
[245.09991455 13.33204746]
[258.30627441 6.21923685]
[271.51263428 -0.89357328]
[279.66326904 -15.12379646]
[296.06100464 -14.90966797]
[303.83728027 -0.47146544]
[294.99252319 13.33802605]
[278.62542725 12.31278610]
[265.41906738 19.42559624]
[252.21272278 26.53840637]
[239.00636292 33.65121841]
[225.80000305 40.76402664]
[212.59364319 47.87683868]
[199.38728333 54.98964691]
[186.18092346 62.10245895]
[172.97456360 69.21527100]
[159.76820374 76.32807922]
[146.56184387 83.44088745]
[133.35548401 90.55369568]
[120.14912415 97.66651154]
[120.33912659 105.16410065]
[120.71911621 120.15928650]
[120.90911102 127.65688324]
[134.45877075 134.09167480]
[148.00843811 140.52645874]
[161.55810547 146.96125793]
[175.10777283 153.39604187]
[188.65744019 159.83082581]
[202.20710754 166.26562500]
[214.10882568 156.77294922]
[228.89155579 153.40283203]
[243.61134338 156.77149963]
[255.36056519 166.15855408]
[261.84225464 179.66030884]
[261.81906128 194.57556152]
[275.36871338 201.01036072]
[288.91839600 207.44514465]
[302.46804810 213.87994385]
[316.01773071 220.31472778]
[330.82064819 214.77854919]
[345.16772461 221.40704346]
[350.54708862 236.26766968]
[343.76727295 250.54385376]
[328.85061646 255.76580811]
[314.64688110 248.83543396]
[309.58294678 233.86439514]
[296.03326416 227.42961121]
[282.48361206 220.99481201]
[268.93392944 214.56002808]
[255.38427734 208.12522888]
[243.83935547 217.56878662]
[229.27925110 221.07769775]
[214.57929993 217.90396118]
[202.66648865 208.62467957]
[195.93653870 195.03811646]
[195.77232361 179.81529236]
[182.22265625 173.38049316]
[168.67298889 166.94570923]
[155.12332153 160.51092529]
[141.57365417 154.07612610]
[128.02398682 147.64134216]
[114.47431946 141.20654297]
[108.16025543 145.25408936]
[116.96620178 157.39720154]
[125.77214813 169.54031372]
[136.37455750 180.15112305]
[130.45724487 193.93463135]
[115.46201324 193.55628967]
[110.24723053 179.49234009]
[102.88967133 166.42074585]
[95.53211975 153.34916687]
[89.21804810 157.39669800]
[89.40806580 172.39549255]
[89.59807587 187.39428711]
[89.78808594 202.39308167]
[89.97809601 217.39189148]
[90.16810608 232.39068604]
[90.35811615 247.38948059]
[90.54812622 262.38827515]
[90.73813629 277.38708496]
[100.50840759 293.00869751]
[91.30760956 307.96441650]
[91.68759918 322.95959473]
[102.27804565 335.01040649]
[99.31764984 350.77795410]
[85.07736969 358.16674805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 244]
[3 243]
[6 241]
[7 240]
[8 239]
[9 238]
[10 237]
[11 236]
[12 235]
[13 234]
[14 233]
[16 151]
[17 150]
[18 149]
[19 148]
[20 147]
[21 146]
[22 145]
[32 141]
[33 140]
[34 139]
[35 138]
[36 137]
[43 129]
[44 128]
[45 127]
[46 126]
[47 125]
[48 115]
[49 114]
[50 113]
[51 112]
[57 105]
[58 104]
[59 103]
[60 102]
[61 101]
[62 100]
[68 97]
[69 96]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[78 87]
[79 86]
[80 85]
[152 181]
[153 180]
[154 179]
[155 178]
[156 177]
[157 176]
[158 175]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
[164 169]
[184 223]
[185 222]
[186 221]
[187 220]
[188 219]
[189 218]
[190 217]
[196 211]
[197 210]
[198 209]
[199 208]
[200 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
