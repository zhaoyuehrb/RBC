%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUCCUCGCUGCAGUCGCUCCGGAGCUGCACGGGUGUUUUGCGUGUUGCUGCGUCAUCGCCAGUGGCCGGUUUGAAUGAGACUCGUCGCACCGAAGCCGCCGCCACCACCGCGCCUCCGCCUCGGCCGCCGCCGCAGCUGCUCCUGGUCCCCGUCCCUUUGCCGCCCUCGUCAGGCCCAGCUCUCCUGCGCCGCCGCCUCCCGCCGCGCCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[66.63730621 134.09518433]
[62.19372559 129.09013367]
[58.49438858 123.51242828]
[55.61211777 117.47186279]
[53.60365295 111.08735657]
[52.50854111 104.48458099]
[52.34832764 97.79352570]
[53.12617493 91.14590454]
[54.82677078 84.67258453]
[41.55659485 77.67955780]
[25.74073601 78.09091949]
[18.08833313 65.31242371]
[4.81815672 58.31939697]
[-10.99770069 58.73075867]
[-18.65010262 45.95225906]
[-31.92028046 38.95923615]
[-45.19045639 31.96620941]
[-58.46063614 24.97318459]
[-72.33881378 31.65917206]
[-87.31772614 28.92321205]
[-97.69072723 18.02069664]
[-99.63161469 3.27719164]
[-112.90179443 -3.71583295]
[-126.17196655 -10.70885754]
[-139.44213867 -17.70188332]
[-152.71232605 -24.69490814]
[-168.52818298 -24.28354645]
[-176.18058777 -37.06204605]
[-189.45075989 -44.05506897]
[-202.72093201 -51.04809570]
[-216.59910583 -44.36210632]
[-231.57803345 -47.09806824]
[-241.95103455 -58.00058365]
[-243.89192200 -72.74408722]
[-257.16207886 -79.73711395]
[-270.43228149 -86.73014069]
[-283.70245361 -93.72315979]
[-288.02255249 -93.40274811]
[-291.83752441 -94.37357330]
[-294.80401611 -96.31901550]
[-296.71646118 -98.84353638]
[-297.52093506 -101.52442169]
[-310.36413574 -109.27375793]
[-323.20730591 -117.02310181]
[-332.16732788 -118.77578735]
[-336.17919922 -124.97874451]
[-348.90887451 -132.91320801]
[-364.71304321 -133.64678955]
[-371.42123413 -146.94526672]
[-384.15087891 -154.87973022]
[-396.88055420 -162.81419373]
[-411.15975952 -167.40811157]
[-426.12796021 -168.38464355]
[-441.09613037 -169.36117554]
[-455.55441284 -161.62232971]
[-469.34094238 -170.50282288]
[-468.27334595 -186.86718750]
[-453.44982910 -193.88114929]
[-440.11959839 -184.32936096]
[-425.15142822 -183.35282898]
[-410.18322754 -182.37629700]
[-407.52758789 -189.39039612]
[-402.21633911 -203.41859436]
[-399.56069946 -210.43270874]
[-411.42233276 -219.61428833]
[-423.28396606 -228.79588318]
[-435.14562988 -237.97747803]
[-447.00726318 -247.15905762]
[-462.65612793 -249.48776245]
[-467.98449707 -263.39666748]
[-479.84616089 -272.57824707]
[-491.70779419 -281.75985718]
[-503.56942749 -290.94143677]
[-515.43103027 -300.12301636]
[-531.46319580 -299.53067017]
[-541.81243896 -311.78921509]
[-538.53985596 -327.49493408]
[-524.15582275 -334.59973145]
[-509.69451904 -327.65347290]
[-506.24948120 -311.98464966]
[-494.38781738 -302.80307007]
[-482.52618408 -293.62149048]
[-470.66455078 -284.43988037]
[-458.80291748 -275.25830078]
[-444.00244141 -273.58633423]
[-437.82565308 -259.02069092]
[-425.96401978 -249.83911133]
[-414.10238647 -240.65751648]
[-402.24075317 -231.47592163]
[-390.37911987 -222.29434204]
[-383.62442017 -213.43916321]
[-379.83673096 -203.99841309]
[-378.89672852 -194.81338501]
[-380.46838379 -186.63467407]
[-384.03479004 -180.06997681]
[-388.94610596 -175.54385376]
[-376.21643066 -167.60939026]
[-363.48675537 -159.67492676]
[-348.59307861 -159.50888062]
[-340.97439575 -145.64286804]
[-328.24475098 -137.70840454]
[-315.45797729 -129.86630249]
[-302.61477661 -122.11695862]
[-289.77157593 -114.36761475]
[-276.70941162 -106.99333954]
[-263.43923950 -100.00031281]
[-250.16906738 -93.00729370]
[-236.89889526 -86.01426697]
[-223.64010620 -92.74795532]
[-208.78288269 -90.35482788]
[-198.05828857 -79.54573059]
[-195.72790527 -64.31827545]
[-182.45773315 -57.32524872]
[-169.18756104 -50.33222198]
[-154.32087708 -51.24377060]
[-145.71929932 -37.96508408]
[-132.44912720 -30.97205925]
[-119.17894745 -23.97903442]
[-105.90876770 -16.98600960]
[-92.63858795 -9.99298573]
[-79.37979889 -16.72667313]
[-64.52258301 -14.33354568]
[-53.79799271 -3.52445102]
[-51.46760941 11.70300770]
[-38.19743347 18.69603157]
[-24.92725563 25.68905640]
[-11.65707779 32.68208313]
[3.20960784 31.77053452]
[11.81118107 45.04922104]
[25.08135796 52.04224396]
[39.94804382 51.13069534]
[48.54961777 64.40938568]
[61.81979370 71.40240479]
[83.07860565 55.39936447]
[109.60248566 53.27375031]
[133.13856506 65.68695068]
[146.36363220 88.77660370]
[161.31610107 87.58348083]
[176.26856995 86.39035797]
[191.22103882 85.19724274]
[206.17352295 84.00411987]
[216.40480042 72.25853729]
[231.58572388 71.26154327]
[242.72029114 81.08789062]
[257.67276001 79.89476776]
[272.62524414 78.70164490]
[287.57772827 77.50852203]
[302.53018188 76.31539917]
[306.00830078 73.73306274]
[309.75067139 72.51184845]
[313.29772949 72.56798553]
[316.26422119 73.67734528]
[318.37832642 75.51167297]
[333.37481689 75.18595886]
[338.52145386 60.90742493]
[348.48150635 49.45483398]
[361.90795898 42.37705612]
[376.98498535 40.63130569]
[391.67352295 44.45367813]
[403.98712158 53.32722855]
[412.26043701 66.05187988]
[415.37457275 80.90673065]
[412.90835571 95.88278961]
[405.19534302 108.95465851]
[393.27862549 118.35447693]
[378.76986694 122.81099701]
[363.63125610 121.72151184]
[349.91018677 115.23336792]
[339.46224976 104.22402954]
[333.70053101 90.18241882]
[318.70407104 90.50813293]
[303.72329712 91.26787567]
[288.77084351 92.46099854]
[273.81835938 93.65412140]
[258.86587524 94.84724426]
[243.91342163 96.04036713]
[234.47799683 107.50807953]
[219.33105469 108.93107605]
[207.36663818 98.95658875]
[192.41416931 100.14971161]
[177.46170044 101.34283447]
[162.50921631 102.53595734]
[147.55674744 103.72908020]
[146.59172058 110.23530579]
[144.74090576 116.54694366]
[142.03948975 122.54399109]
[138.53883362 128.11244202]
[134.30546570 133.14642334]
[129.41990662 137.55021667]
[136.69943237 150.66542053]
[143.97897339 163.78062439]
[151.25849915 176.89582825]
[164.72082520 185.20703125]
[164.13232422 200.08999634]
[171.41184998 213.20520020]
[186.83007812 214.95384216]
[198.25309753 225.45594788]
[201.28854370 240.67323303]
[194.76919556 254.75434875]
[181.20188904 262.28482056]
[165.80354309 260.36901855]
[154.49511719 249.74360657]
[151.62493896 234.49429321]
[158.29664612 220.48472595]
[151.01712036 207.36953735]
[138.07546997 199.99641418]
[138.14329529 184.17535400]
[130.86376953 171.06015015]
[123.58423615 157.94494629]
[116.30471039 144.82975769]
[109.86984253 146.67051697]
[103.24067688 147.59252930]
[96.54772186 147.57763672]
[89.92272949 146.62615967]
[83.49610901 144.75680542]
[77.39437866 142.00637817]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 133]
[10 132]
[12 130]
[13 129]
[15 127]
[16 126]
[17 125]
[18 124]
[22 120]
[23 119]
[24 118]
[25 117]
[26 116]
[28 114]
[29 113]
[30 112]
[34 108]
[35 107]
[36 106]
[37 105]
[42 104]
[43 103]
[44 102]
[46 101]
[47 100]
[49 98]
[50 97]
[51 96]
[52 61]
[53 60]
[54 59]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[70 84]
[71 83]
[72 82]
[73 81]
[74 80]
[137 183]
[138 182]
[139 181]
[140 180]
[141 179]
[144 176]
[145 175]
[146 174]
[147 173]
[148 172]
[153 171]
[154 170]
[189 210]
[190 209]
[191 208]
[192 207]
[194 205]
[195 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
