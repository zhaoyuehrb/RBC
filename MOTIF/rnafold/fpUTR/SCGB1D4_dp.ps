%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SCGB1D4)
} def

/sequence { (\
GUCGAAUCCAAAUCACUCAUUGUGAAAGCUGAGCUCACAGCCGAAUAAGCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.013864592 ubox
1 13 0.004056062 ubox
1 16 0.036211936 ubox
1 29 0.005118196 ubox
1 34 0.004509358 ubox
1 38 0.039606882 ubox
1 41 0.007603650 ubox
1 46 0.123657863 ubox
1 50 0.078179817 ubox
1 53 0.046885137 ubox
2 6 0.014266315 ubox
2 12 0.006243594 ubox
2 15 0.036005075 ubox
2 25 0.010613964 ubox
2 28 0.005029832 ubox
2 32 0.006376727 ubox
2 33 0.004109517 ubox
2 37 0.039207051 ubox
2 40 0.007438985 ubox
2 44 0.664650309 ubox
2 45 0.091616819 ubox
2 49 0.072134201 ubox
2 52 0.042105301 ubox
3 22 0.003564052 ubox
3 24 0.011293816 ubox
3 31 0.006871416 ubox
3 43 0.716037317 ubox
4 14 0.046506389 ubox
4 18 0.018962643 ubox
4 21 0.003581922 ubox
4 23 0.010040712 ubox
4 30 0.006198401 ubox
4 36 0.040807674 ubox
4 42 0.709721038 ubox
5 13 0.044957010 ubox
5 17 0.018344297 ubox
5 20 0.003397330 ubox
5 21 0.006083754 ubox
5 35 0.039911418 ubox
6 13 0.024956392 ubox
6 20 0.006247839 ubox
6 46 0.020575931 ubox
7 12 0.032515592 ubox
7 19 0.005974314 ubox
7 25 0.061800305 ubox
7 32 0.046294452 ubox
7 44 0.078713611 ubox
7 45 0.018143511 ubox
8 24 0.065976117 ubox
8 31 0.046649784 ubox
8 43 0.083560275 ubox
9 22 0.069641301 ubox
9 24 0.010381166 ubox
9 31 0.025986004 ubox
10 21 0.069198196 ubox
10 23 0.009677399 ubox
10 30 0.025890720 ubox
11 20 0.066951379 ubox
11 21 0.013975407 ubox
12 20 0.015504489 ubox
12 23 0.004138149 ubox
12 46 0.009039046 ubox
13 19 0.015869226 ubox
13 22 0.003765950 ubox
13 25 0.923579467 ubox
13 32 0.004701794 ubox
13 44 0.013014899 ubox
13 45 0.007504851 ubox
14 22 0.008497886 ubox
14 24 0.987423491 ubox
14 31 0.004863362 ubox
14 43 0.013865362 ubox
15 21 0.007962246 ubox
15 23 0.987491730 ubox
15 30 0.004767637 ubox
16 22 0.987398077 ubox
16 28 0.004151669 ubox
16 33 0.014739397 ubox
16 40 0.005402132 ubox
16 49 0.018476144 ubox
17 25 0.036386738 ubox
17 27 0.003442223 ubox
17 32 0.015250731 ubox
17 39 0.003833287 ubox
17 44 0.053478303 ubox
17 48 0.017485071 ubox
18 24 0.038248428 ubox
18 31 0.015301134 ubox
18 43 0.056073986 ubox
19 23 0.031006079 ubox
19 30 0.014422430 ubox
19 46 0.014946093 ubox
20 27 0.006960791 ubox
20 28 0.007033505 ubox
20 40 0.077869417 ubox
20 44 0.009570305 ubox
20 45 0.015296260 ubox
20 48 0.049861831 ubox
20 49 0.005342535 ubox
21 26 0.007803618 ubox
21 27 0.007736186 ubox
21 39 0.099825452 ubox
21 43 0.010463425 ubox
21 44 0.014298053 ubox
21 47 0.057746266 ubox
21 48 0.006537058 ubox
21 52 0.003275850 ubox
22 29 0.011754221 ubox
22 38 0.102969515 ubox
22 41 0.003414851 ubox
22 42 0.011136075 ubox
22 46 0.058742242 ubox
22 50 0.010152716 ubox
22 51 0.003248344 ubox
22 53 0.023757645 ubox
23 28 0.011608764 ubox
23 37 0.102958082 ubox
23 39 0.005404271 ubox
23 43 0.011834161 ubox
23 45 0.058477843 ubox
23 47 0.004137603 ubox
23 49 0.010281757 ubox
23 52 0.023871850 ubox
24 36 0.102717381 ubox
24 38 0.005899928 ubox
24 42 0.014108702 ubox
24 46 0.004385115 ubox
24 51 0.023859244 ubox
25 35 0.082750398 ubox
27 35 0.069875102 ubox
28 34 0.102971030 ubox
28 41 0.972667250 ubox
28 50 0.151544645 ubox
29 33 0.102386329 ubox
29 40 0.974951094 ubox
29 49 0.151889981 ubox
30 37 0.016292005 ubox
30 39 0.974560998 ubox
30 43 0.058696726 ubox
30 47 0.011740710 ubox
30 48 0.147290257 ubox
30 52 0.043589727 ubox
31 36 0.022806464 ubox
31 38 0.970973908 ubox
31 42 0.088232681 ubox
31 46 0.014905431 ubox
31 51 0.049188711 ubox
33 41 0.139448323 ubox
33 50 0.055451168 ubox
34 40 0.139574365 ubox
34 49 0.055479996 ubox
35 39 0.125742517 ubox
35 44 0.097042698 ubox
35 48 0.050359358 ubox
36 43 0.099906674 ubox
40 50 0.045863790 ubox
41 49 0.046017553 ubox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
showpage
end
%%EOF
