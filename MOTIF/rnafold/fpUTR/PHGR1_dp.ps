%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PHGR1)
} def

/sequence { (\
AGACUUCCUGCCCCUGCUCUGCACUCUCAGGUAUUCCCUGCUCUUACUCCAAAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.046158747 ubox
1 15 0.012496730 ubox
1 18 0.004174756 ubox
1 20 0.033271057 ubox
1 25 0.014963547 ubox
1 27 0.057114188 ubox
1 35 0.024837028 ubox
1 39 0.147438471 ubox
1 42 0.034882733 ubox
1 44 0.073403699 ubox
1 45 0.009762947 ubox
1 48 0.015759983 ubox
2 8 0.049454126 ubox
2 14 0.014034064 ubox
2 17 0.004779192 ubox
2 19 0.035265250 ubox
2 24 0.017139291 ubox
2 26 0.065636050 ubox
2 28 0.011153609 ubox
2 34 0.031563090 ubox
2 35 0.087757211 ubox
2 36 0.801850512 ubox
2 38 0.152601458 ubox
2 41 0.039293930 ubox
2 43 0.084500176 ubox
2 44 0.005509692 ubox
2 45 0.010923003 ubox
2 47 0.017711647 ubox
2 49 0.039843999 ubox
3 18 0.034334152 ubox
3 25 0.064000196 ubox
3 27 0.011110251 ubox
3 32 0.029273934 ubox
3 34 0.088173187 ubox
3 35 0.789043691 ubox
3 42 0.081510872 ubox
3 44 0.010748598 ubox
3 48 0.038530973 ubox
4 30 0.003202387 ubox
4 31 0.019211375 ubox
4 56 0.041186909 ubox
5 30 0.012528486 ubox
5 52 0.007070037 ubox
5 53 0.006898290 ubox
5 54 0.007103352 ubox
5 55 0.041500397 ubox
6 29 0.009648415 ubox
6 31 0.006143527 ubox
6 51 0.007470369 ubox
6 52 0.007298567 ubox
6 53 0.007610995 ubox
6 54 0.039722563 ubox
6 55 0.003885624 ubox
7 30 0.006001500 ubox
7 31 0.959928246 ubox
8 30 0.963614109 ubox
8 31 0.005980631 ubox
8 56 0.010198046 ubox
9 23 0.109905209 ubox
9 29 0.963259706 ubox
9 30 0.005568266 ubox
9 33 0.035020974 ubox
9 51 0.022541737 ubox
9 55 0.010045273 ubox
10 17 0.111645873 ubox
10 22 0.123923397 ubox
10 28 0.959800078 ubox
10 32 0.038273656 ubox
10 41 0.048218288 ubox
10 50 0.022812522 ubox
11 16 0.111346896 ubox
11 21 0.123692589 ubox
11 31 0.038140649 ubox
11 40 0.047906547 ubox
12 30 0.037796022 ubox
12 31 0.005181198 ubox
13 30 0.004762596 ubox
13 31 0.051271722 ubox
14 30 0.051818037 ubox
14 56 0.013446536 ubox
15 21 0.004231070 ubox
15 23 0.938220224 ubox
15 29 0.052016988 ubox
15 33 0.067392725 ubox
15 51 0.013958962 ubox
15 55 0.013500990 ubox
16 20 0.004591478 ubox
16 22 0.974278518 ubox
16 28 0.051420593 ubox
16 32 0.073170891 ubox
16 41 0.013733021 ubox
16 50 0.014996721 ubox
17 21 0.967298559 ubox
17 31 0.073486464 ubox
17 40 0.013411648 ubox
18 30 0.010151415 ubox
18 31 0.026044911 ubox
19 30 0.080274895 ubox
19 56 0.004122991 ubox
20 29 0.080883708 ubox
20 33 0.011870522 ubox
20 46 0.007740352 ubox
20 51 0.015832622 ubox
20 55 0.004194345 ubox
21 28 0.080156096 ubox
21 32 0.012938189 ubox
21 41 0.025009723 ubox
21 45 0.007952420 ubox
21 50 0.017032247 ubox
22 31 0.012991552 ubox
22 40 0.024125805 ubox
23 32 0.008417122 ubox
23 39 0.019503278 ubox
24 30 0.009892732 ubox
24 31 0.009349802 ubox
24 56 0.006248053 ubox
25 29 0.008968331 ubox
25 30 0.008607416 ubox
25 55 0.006092012 ubox
26 56 0.007758941 ubox
27 55 0.007903754 ubox
28 40 0.235291691 ubox
29 39 0.238789392 ubox
29 42 0.003420240 ubox
29 44 0.014572634 ubox
29 45 0.003503259 ubox
30 37 0.032113948 ubox
30 38 0.238773245 ubox
30 41 0.003468244 ubox
30 42 0.025222051 ubox
30 43 0.015602872 ubox
30 44 0.003704773 ubox
30 48 0.022926016 ubox
30 49 0.005462267 ubox
30 50 0.009753837 ubox
31 36 0.037864661 ubox
31 37 0.237256277 ubox
31 38 0.005629410 ubox
31 41 0.046258840 ubox
31 43 0.004502776 ubox
31 47 0.039806551 ubox
31 49 0.009809825 ubox
32 40 0.048952959 ubox
32 46 0.044042946 ubox
33 39 0.046937719 ubox
33 45 0.044284494 ubox
34 52 0.005851069 ubox
34 53 0.006087395 ubox
34 54 0.006225329 ubox
34 55 0.005949298 ubox
34 56 0.003658633 ubox
35 51 0.006114319 ubox
35 52 0.006466087 ubox
35 53 0.006686684 ubox
35 54 0.006253064 ubox
35 55 0.004774094 ubox
38 56 0.080837320 ubox
39 46 0.035009487 ubox
39 51 0.074268995 ubox
39 55 0.082184679 ubox
40 45 0.033895860 ubox
40 50 0.079904918 ubox
41 56 0.069321614 ubox
42 55 0.069472628 ubox
43 56 0.206246761 ubox
44 52 0.041390442 ubox
44 53 0.081677412 ubox
44 54 0.039227296 ubox
44 55 0.212199199 ubox
44 56 0.010112938 ubox
45 51 0.043393787 ubox
45 52 0.084330141 ubox
45 53 0.041865425 ubox
45 54 0.210745194 ubox
45 55 0.015265576 ubox
47 56 0.121305408 ubox
48 55 0.117397331 ubox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
showpage
end
%%EOF
