%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLASRP)
} def

/sequence { (\
GCGGCCUUUCAUUUCCGCUUCCGGUGCGGGCCGCGCGCGAGCGCAGCGGUGGGAGGCGGCGACCAGCCGGUUGAGGCCCCAGGCUUGGCCUCACCACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.010919793 ubox
1 34 0.035095205 ubox
1 47 0.004490930 ubox
1 57 0.009035943 ubox
1 60 0.766173653 ubox
1 67 0.005026200 ubox
1 71 0.004679517 ubox
2 17 0.010945655 ubox
2 33 0.035348201 ubox
2 46 0.004488370 ubox
2 56 0.008429530 ubox
2 58 0.013624977 ubox
2 59 0.766458564 ubox
2 61 0.007829298 ubox
2 66 0.005004760 ubox
2 69 0.020162660 ubox
2 70 0.004955593 ubox
3 16 0.010955807 ubox
3 32 0.035972936 ubox
3 57 0.028874145 ubox
3 60 0.007790442 ubox
3 64 0.003242233 ubox
3 68 0.037582850 ubox
3 90 0.004584958 ubox
3 95 0.015783262 ubox
4 15 0.010861535 ubox
4 31 0.035975447 ubox
4 57 0.997248859 ubox
4 67 0.037560290 ubox
4 89 0.004590698 ubox
4 94 0.014521310 ubox
5 30 0.035942878 ubox
5 53 0.007614313 ubox
5 56 0.998512354 ubox
5 66 0.036702680 ubox
5 88 0.004590561 ubox
6 29 0.034875275 ubox
6 52 0.007612616 ubox
6 55 0.998516502 ubox
6 66 0.007723252 ubox
6 87 0.004582276 ubox
7 28 0.032157886 ubox
7 51 0.007213736 ubox
7 54 0.998109819 ubox
7 65 0.010525602 ubox
8 28 0.005430848 ubox
8 53 0.996798726 ubox
8 54 0.013287399 ubox
8 65 0.003324020 ubox
9 49 0.005039067 ubox
9 52 0.994887545 ubox
9 53 0.018558601 ubox
9 54 0.004105485 ubox
9 62 0.026598744 ubox
9 65 0.006123351 ubox
10 26 0.027525328 ubox
10 48 0.005313260 ubox
10 51 0.997210785 ubox
10 52 0.022546258 ubox
10 53 0.005361776 ubox
10 61 0.027026983 ubox
11 25 0.027275820 ubox
11 50 0.950330640 ubox
12 24 0.010109467 ubox
12 46 0.003754301 ubox
12 49 0.842847553 ubox
12 52 0.008946417 ubox
12 62 0.017994546 ubox
13 23 0.007218733 ubox
13 29 0.003281257 ubox
13 30 0.008720182 ubox
13 45 0.006994978 ubox
13 46 0.062600141 ubox
13 48 0.678929553 ubox
13 49 0.038968882 ubox
13 51 0.011712259 ubox
13 61 0.018081031 ubox
13 62 0.004052815 ubox
14 28 0.003943496 ubox
14 29 0.017058845 ubox
14 30 0.191215362 ubox
14 40 0.003453747 ubox
14 45 0.086841896 ubox
14 48 0.044165469 ubox
14 49 0.011558256 ubox
14 53 0.004226078 ubox
14 61 0.004170322 ubox
15 24 0.034357091 ubox
15 28 0.019798781 ubox
15 29 0.902734845 ubox
15 30 0.004728679 ubox
15 39 0.003472035 ubox
15 48 0.013759727 ubox
15 49 0.375094859 ubox
15 52 0.006007038 ubox
15 59 0.037925609 ubox
16 23 0.034852506 ubox
16 26 0.021753528 ubox
16 28 0.904830512 ubox
16 29 0.004410202 ubox
16 37 0.003514258 ubox
16 43 0.168358777 ubox
16 48 0.383614750 ubox
16 51 0.006026273 ubox
16 58 0.038026485 ubox
17 22 0.033212997 ubox
17 25 0.022476381 ubox
17 27 0.904896185 ubox
17 36 0.003548309 ubox
17 42 0.169234117 ubox
17 44 0.033759530 ubox
17 47 0.384001889 ubox
17 50 0.006014342 ubox
17 57 0.038060325 ubox
18 24 0.023637800 ubox
18 26 0.904696778 ubox
18 35 0.003547410 ubox
18 41 0.169022504 ubox
18 43 0.033815633 ubox
18 46 0.383886136 ubox
18 49 0.005951292 ubox
18 55 0.003890238 ubox
18 56 0.037867005 ubox
19 23 0.024603302 ubox
19 40 0.156246394 ubox
19 41 0.050481854 ubox
19 45 0.360742744 ubox
19 46 0.003627647 ubox
19 48 0.005523820 ubox
19 54 0.005541402 ubox
19 55 0.037635713 ubox
20 29 0.004589511 ubox
20 30 0.141824061 ubox
20 39 0.130706983 ubox
20 40 0.117615518 ubox
20 45 0.022793919 ubox
20 53 0.005918997 ubox
20 54 0.037588265 ubox
21 28 0.005310706 ubox
21 29 0.187487473 ubox
21 30 0.050288999 ubox
21 39 0.129639599 ubox
21 49 0.005927529 ubox
21 52 0.007491953 ubox
21 53 0.037334811 ubox
22 28 0.187679721 ubox
22 29 0.050837351 ubox
22 33 0.050181177 ubox
22 37 0.085186434 ubox
22 39 0.079903019 ubox
22 43 0.094217965 ubox
22 48 0.006112990 ubox
22 51 0.008746012 ubox
22 52 0.037018995 ubox
23 27 0.175596675 ubox
23 32 0.261746989 ubox
23 36 0.062614868 ubox
23 38 0.083340380 ubox
23 42 0.093855352 ubox
23 47 0.006141357 ubox
23 50 0.009649580 ubox
23 95 0.010667096 ubox
24 31 0.261987761 ubox
24 34 0.010141741 ubox
24 36 0.161425712 ubox
24 38 0.182519775 ubox
24 42 0.036171721 ubox
24 44 0.065486005 ubox
24 50 0.018904551 ubox
24 94 0.010678218 ubox
25 30 0.258908471 ubox
25 33 0.010140030 ubox
25 35 0.171467824 ubox
25 37 0.184192048 ubox
25 39 0.030354267 ubox
25 41 0.035878894 ubox
25 43 0.065494633 ubox
25 45 0.006443771 ubox
25 48 0.010228486 ubox
25 49 0.003686885 ubox
25 51 0.013704815 ubox
25 93 0.010675035 ubox
26 32 0.010097797 ubox
26 34 0.172956263 ubox
26 36 0.184612512 ubox
26 38 0.031959675 ubox
26 42 0.065479295 ubox
26 44 0.006770529 ubox
26 47 0.010375219 ubox
26 50 0.025957765 ubox
26 92 0.010657817 ubox
27 33 0.172946984 ubox
27 35 0.184618313 ubox
27 37 0.031966673 ubox
27 39 0.040677953 ubox
27 41 0.064852715 ubox
27 43 0.006752619 ubox
27 46 0.010355937 ubox
27 48 0.011763926 ubox
27 49 0.027473711 ubox
27 51 0.004414564 ubox
28 32 0.161797246 ubox
28 34 0.184252228 ubox
28 36 0.031844601 ubox
28 38 0.045507002 ubox
28 42 0.006197038 ubox
28 47 0.009071791 ubox
28 91 0.010476684 ubox
29 90 0.010650122 ubox
30 36 0.047128417 ubox
30 38 0.060698360 ubox
30 42 0.004003616 ubox
30 44 0.012567506 ubox
30 47 0.828434221 ubox
30 50 0.267102243 ubox
30 89 0.010665608 ubox
31 35 0.046800726 ubox
31 37 0.060648022 ubox
31 41 0.004147967 ubox
31 43 0.008978758 ubox
31 46 0.829866665 ubox
31 49 0.339160419 ubox
31 52 0.008256480 ubox
31 88 0.010680421 ubox
32 39 0.005451199 ubox
32 43 0.016008024 ubox
32 48 0.344704603 ubox
32 51 0.008337377 ubox
32 87 0.010668897 ubox
33 38 0.005353778 ubox
33 42 0.018763063 ubox
33 44 0.897085848 ubox
33 47 0.343843274 ubox
33 50 0.008367388 ubox
34 41 0.018768876 ubox
34 43 0.899010948 ubox
34 46 0.343465297 ubox
34 48 0.011728932 ubox
34 49 0.008133417 ubox
35 42 0.899514556 ubox
35 44 0.332680662 ubox
35 47 0.019692767 ubox
36 41 0.899175490 ubox
36 43 0.333738080 ubox
36 46 0.019702336 ubox
36 48 0.027577980 ubox
37 42 0.325109522 ubox
37 44 0.085347799 ubox
37 47 0.027922928 ubox
38 43 0.085324526 ubox
38 46 0.027919956 ubox
45 85 0.009665349 ubox
46 84 0.010347200 ubox
47 83 0.010346448 ubox
48 95 0.003596806 ubox
49 94 0.003605019 ubox
49 97 0.035791083 ubox
50 81 0.006677078 ubox
50 93 0.003593019 ubox
50 96 0.035846051 ubox
51 80 0.006667541 ubox
51 92 0.003521170 ubox
51 95 0.035873192 ubox
52 79 0.006515838 ubox
52 80 0.009095609 ubox
52 94 0.035829832 ubox
53 78 0.004673855 ubox
53 79 0.009200811 ubox
53 92 0.032744218 ubox
54 72 0.009589652 ubox
54 91 0.032772735 ubox
55 71 0.012582490 ubox
55 78 0.010305478 ubox
55 90 0.032776781 ubox
56 77 0.011262609 ubox
56 89 0.032761226 ubox
57 69 0.026955872 ubox
57 76 0.011269263 ubox
57 88 0.032363476 ubox
58 64 0.009065144 ubox
58 68 0.638948130 ubox
58 85 0.011918123 ubox
58 95 0.003991140 ubox
59 63 0.008930131 ubox
59 67 0.639716761 ubox
59 84 0.012965558 ubox
59 94 0.003979218 ubox
60 66 0.639624000 ubox
60 73 0.028095451 ubox
60 83 0.012967663 ubox
61 68 0.098764695 ubox
61 72 0.256072443 ubox
61 92 0.004992433 ubox
62 71 0.310826949 ubox
62 91 0.004775054 ubox
63 70 0.316895507 ubox
63 88 0.007853497 ubox
64 69 0.316543149 ubox
64 87 0.007924814 ubox
65 85 0.006051371 ubox
65 86 0.005617088 ubox
66 77 0.013175690 ubox
66 84 0.008301912 ubox
67 76 0.013195063 ubox
67 83 0.008340891 ubox
68 75 0.013192107 ubox
68 82 0.008333915 ubox
69 78 0.005557943 ubox
69 80 0.006046139 ubox
69 90 0.007358591 ubox
69 95 0.943058353 ubox
70 77 0.005576295 ubox
70 79 0.006057649 ubox
70 89 0.007443748 ubox
70 94 0.944018274 ubox
70 97 0.048778719 ubox
71 76 0.005323780 ubox
71 88 0.007449544 ubox
71 93 0.665896923 ubox
71 96 0.046771317 ubox
72 87 0.006728569 ubox
72 93 0.690480059 ubox
73 86 0.004883454 ubox
73 92 0.998998737 ubox
74 85 0.004691556 ubox
74 86 0.028356544 ubox
74 91 0.999143919 ubox
75 84 0.003517144 ubox
75 85 0.030677915 ubox
75 90 0.999306468 ubox
76 84 0.031168859 ubox
76 89 0.999308168 ubox
77 83 0.031357162 ubox
77 88 0.998346452 ubox
78 82 0.031166075 ubox
78 87 0.996715127 ubox
78 88 0.032896275 ubox
79 87 0.044586594 ubox
79 88 0.028872153 ubox
80 87 0.043552976 ubox
81 86 0.064377592 ubox
81 91 0.004082195 ubox
82 90 0.004365550 ubox
83 89 0.004368676 ubox
84 88 0.004337462 ubox
1 60 0.9500000 lbox
2 59 0.9500000 lbox
4 57 0.9500000 lbox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
69 95 0.9500000 lbox
70 94 0.9500000 lbox
71 93 0.9500000 lbox
73 92 0.9500000 lbox
74 91 0.9500000 lbox
75 90 0.9500000 lbox
76 89 0.9500000 lbox
77 88 0.9500000 lbox
78 87 0.9500000 lbox
showpage
end
%%EOF
