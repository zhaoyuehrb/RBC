%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MZB1)
} def

/sequence { (\
AGCACACACACAUCUGCACCUCAACCACAGACUACACUUGCUGAACUGGCUCCUGGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.008504307 ubox
1 21 0.004339316 ubox
1 33 0.006670529 ubox
1 42 0.873425873 ubox
1 47 0.020975461 ubox
1 51 0.005837323 ubox
2 14 0.008901003 ubox
2 17 0.293000881 ubox
2 20 0.004765823 ubox
2 32 0.007051740 ubox
2 41 0.924892530 ubox
2 46 0.021668221 ubox
2 50 0.006720275 ubox
2 59 0.013862435 ubox
3 16 0.293231109 ubox
3 40 0.924994670 ubox
3 43 0.044412970 ubox
3 49 0.006712633 ubox
3 58 0.013728754 ubox
4 15 0.267856342 ubox
4 39 0.891857666 ubox
4 42 0.044197098 ubox
5 16 0.031360303 ubox
5 40 0.048364072 ubox
5 43 0.024052884 ubox
5 48 0.005791373 ubox
5 55 0.005351151 ubox
6 15 0.031643243 ubox
6 39 0.048021787 ubox
6 42 0.023884620 ubox
6 47 0.005701306 ubox
6 54 0.005052287 ubox
7 16 0.035420526 ubox
7 40 0.025483801 ubox
7 43 0.011988091 ubox
7 48 0.005299863 ubox
7 55 0.004394961 ubox
8 15 0.032396513 ubox
8 39 0.024753488 ubox
8 42 0.011785058 ubox
8 47 0.005540015 ubox
8 54 0.004062300 ubox
9 16 0.031677821 ubox
9 40 0.009695162 ubox
9 43 0.025545791 ubox
9 48 0.023286012 ubox
10 15 0.027228939 ubox
10 39 0.009355487 ubox
10 42 0.025498940 ubox
10 47 0.024768645 ubox
11 40 0.031018892 ubox
11 43 0.012144021 ubox
11 48 0.010045530 ubox
12 39 0.030955759 ubox
12 42 0.012060363 ubox
12 47 0.010223954 ubox
13 31 0.909241868 ubox
13 44 0.079560318 ubox
14 30 0.930727401 ubox
14 43 0.084022649 ubox
14 58 0.005337584 ubox
15 23 0.010180266 ubox
15 27 0.017996227 ubox
15 29 0.930370497 ubox
15 36 0.021568771 ubox
15 57 0.005391232 ubox
16 22 0.011519369 ubox
16 26 0.021339404 ubox
16 28 0.927526222 ubox
16 35 0.021737505 ubox
16 41 0.090301374 ubox
16 50 0.003486026 ubox
16 59 0.098079660 ubox
17 40 0.090487702 ubox
17 43 0.003715492 ubox
17 48 0.005812935 ubox
17 49 0.003366523 ubox
17 55 0.005435079 ubox
17 58 0.097427558 ubox
18 39 0.082770935 ubox
18 42 0.003646081 ubox
18 47 0.008094464 ubox
18 54 0.005262698 ubox
19 49 0.003655747 ubox
19 56 0.050538231 ubox
19 57 0.091045669 ubox
19 58 0.291665293 ubox
20 30 0.017912445 ubox
20 48 0.004092044 ubox
20 55 0.050756304 ubox
20 56 0.091016844 ubox
20 57 0.293216346 ubox
20 58 0.005750257 ubox
21 29 0.017346045 ubox
21 31 0.031077282 ubox
21 44 0.046777826 ubox
21 49 0.004140475 ubox
21 55 0.077346692 ubox
21 56 0.292932406 ubox
21 57 0.005506307 ubox
22 30 0.032423765 ubox
22 40 0.007734347 ubox
22 43 0.049042097 ubox
22 48 0.008760011 ubox
22 55 0.295853186 ubox
22 56 0.006325455 ubox
23 39 0.007854757 ubox
23 42 0.047131379 ubox
23 47 0.008985439 ubox
23 54 0.284294263 ubox
24 38 0.006984980 ubox
25 49 0.244247329 ubox
25 56 0.015609450 ubox
25 57 0.066011444 ubox
25 58 0.044403742 ubox
26 40 0.040039148 ubox
26 43 0.050936834 ubox
26 48 0.244702806 ubox
26 55 0.015809436 ubox
26 56 0.066137675 ubox
26 57 0.043857885 ubox
27 39 0.039372468 ubox
27 42 0.050669811 ubox
27 47 0.240635723 ubox
27 54 0.015311301 ubox
28 40 0.060297112 ubox
28 43 0.251766994 ubox
28 48 0.183672320 ubox
28 55 0.079921884 ubox
29 38 0.063390413 ubox
29 39 0.056498499 ubox
29 42 0.252047395 ubox
29 47 0.183918807 ubox
29 51 0.026637763 ubox
29 54 0.080282607 ubox
30 37 0.067586525 ubox
30 38 0.048428050 ubox
30 39 0.018494377 ubox
30 41 0.251200921 ubox
30 46 0.183418617 ubox
30 50 0.027467003 ubox
30 52 0.026298502 ubox
30 53 0.077632589 ubox
31 38 0.025316091 ubox
31 51 0.032800369 ubox
32 49 0.043812887 ubox
32 56 0.007745543 ubox
32 57 0.012679656 ubox
32 58 0.019206818 ubox
33 40 0.041025768 ubox
33 43 0.051885640 ubox
33 48 0.043383067 ubox
33 55 0.007667030 ubox
33 56 0.011886291 ubox
33 57 0.015397110 ubox
34 39 0.040686376 ubox
34 42 0.051869923 ubox
34 47 0.041154702 ubox
34 54 0.007219666 ubox
35 43 0.090700229 ubox
35 48 0.061800369 ubox
35 55 0.023886433 ubox
36 42 0.084214464 ubox
36 47 0.060743438 ubox
36 54 0.023340201 ubox
37 49 0.004019689 ubox
37 57 0.003420589 ubox
38 44 0.009935348 ubox
38 45 0.063862201 ubox
38 48 0.003976176 ubox
38 56 0.003403400 ubox
39 43 0.009425444 ubox
39 44 0.065748003 ubox
39 55 0.003259436 ubox
40 50 0.066142178 ubox
40 59 0.006630684 ubox
41 49 0.066237445 ubox
41 58 0.006651026 ubox
42 48 0.064607154 ubox
42 57 0.006540988 ubox
43 47 0.031640185 ubox
43 52 0.007780705 ubox
44 51 0.007555254 ubox
46 56 0.019735876 ubox
46 57 0.009612540 ubox
46 58 0.003293230 ubox
47 55 0.019719832 ubox
47 56 0.009570694 ubox
47 57 0.003234077 ubox
48 54 0.019620186 ubox
48 60 0.934460322 ubox
49 53 0.019390968 ubox
49 59 0.945782600 ubox
50 56 0.003353052 ubox
50 57 0.014075321 ubox
50 58 0.945696162 ubox
51 55 0.003803775 ubox
51 56 0.017868891 ubox
51 57 0.940556059 ubox
51 58 0.007349490 ubox
52 56 0.907923928 ubox
52 57 0.062833337 ubox
52 58 0.007345227 ubox
53 57 0.008930650 ubox
1 42 0.9500000 lbox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
48 60 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
52 56 0.9500000 lbox
showpage
end
%%EOF
