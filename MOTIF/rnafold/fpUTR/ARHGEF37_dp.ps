%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ARHGEF37)
} def

/sequence { (\
CCCGGGCGGCCGACCUCCGUGCGUGAGCGCCGGCAGGCACCUUGCGCGCGCGGAACCUGCUGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.008980068 ubox
1 53 0.017173109 ubox
2 8 0.009208352 ubox
2 9 0.017148104 ubox
2 52 0.016677196 ubox
2 53 0.129025101 ubox
3 8 0.017442166 ubox
3 12 0.371634681 ubox
3 19 0.018777633 ubox
3 23 0.010978161 ubox
3 48 0.006980570 ubox
3 50 0.013095151 ubox
3 52 0.129392422 ubox
3 59 0.150793465 ubox
3 62 0.524374735 ubox
4 11 0.375401401 ubox
4 15 0.064025177 ubox
4 16 0.010123224 ubox
4 17 0.004081741 ubox
4 18 0.054344841 ubox
4 22 0.011444705 ubox
4 47 0.007239984 ubox
4 49 0.013152364 ubox
4 51 0.129253051 ubox
4 57 0.034754377 ubox
4 58 0.154598207 ubox
4 61 0.481598804 ubox
5 10 0.375009477 ubox
5 11 0.012591565 ubox
5 14 0.064104201 ubox
5 15 0.014632797 ubox
5 16 0.003822449 ubox
5 17 0.054460469 ubox
5 18 0.069465338 ubox
5 31 0.003389893 ubox
5 56 0.034775513 ubox
5 57 0.155119039 ubox
5 58 0.006365170 ubox
5 60 0.432971198 ubox
5 61 0.595160515 ubox
6 10 0.012887505 ubox
6 14 0.014660096 ubox
6 15 0.004512290 ubox
6 16 0.053474347 ubox
6 17 0.069714497 ubox
6 20 0.011687051 ubox
6 30 0.003591506 ubox
6 45 0.007255570 ubox
6 47 0.013153356 ubox
6 49 0.126223691 ubox
6 56 0.154209100 ubox
6 57 0.008319169 ubox
6 60 0.657868297 ubox
7 19 0.011786203 ubox
7 29 0.003610012 ubox
7 44 0.007254331 ubox
7 46 0.013153535 ubox
7 48 0.126205665 ubox
7 59 0.691324154 ubox
7 62 0.423362934 ubox
8 15 0.140764790 ubox
8 16 0.004330293 ubox
8 18 0.012399866 ubox
8 28 0.003214696 ubox
8 43 0.006831032 ubox
8 45 0.012779041 ubox
8 47 0.122030126 ubox
8 57 0.414210221 ubox
8 58 0.666681108 ubox
8 61 0.427362062 ubox
9 14 0.140064121 ubox
9 15 0.006076803 ubox
9 17 0.012324606 ubox
9 22 0.003686884 ubox
9 34 0.005150072 ubox
9 38 0.015321806 ubox
9 42 0.004940462 ubox
9 45 0.079672577 ubox
9 47 0.030293218 ubox
9 56 0.413725194 ubox
9 57 0.664530309 ubox
9 60 0.428130067 ubox
10 21 0.003759299 ubox
10 33 0.005158494 ubox
10 37 0.015352491 ubox
10 44 0.073747342 ubox
10 46 0.042727018 ubox
10 53 0.512012718 ubox
10 59 0.420295035 ubox
11 19 0.005091658 ubox
11 32 0.005169787 ubox
11 36 0.015368947 ubox
11 44 0.100778266 ubox
11 52 0.513426080 ubox
11 59 0.078761293 ubox
12 18 0.005652257 ubox
12 31 0.005155974 ubox
12 43 0.105012631 ubox
12 51 0.512560058 ubox
12 58 0.101601341 ubox
13 42 0.104063791 ubox
14 33 0.014610441 ubox
14 37 0.125576137 ubox
14 53 0.488320052 ubox
15 32 0.014599393 ubox
15 36 0.125712717 ubox
15 52 0.488361367 ubox
15 53 0.209831402 ubox
16 35 0.125227869 ubox
16 52 0.202127962 ubox
16 53 0.099715676 ubox
16 54 0.617804545 ubox
16 63 0.005524426 ubox
17 33 0.125773155 ubox
17 52 0.119776794 ubox
17 53 0.637093557 ubox
17 62 0.005901966 ubox
18 32 0.125792835 ubox
18 48 0.003931472 ubox
18 50 0.750143435 ubox
18 52 0.636669297 ubox
18 62 0.003522612 ubox
19 30 0.075296912 ubox
19 31 0.111896628 ubox
19 47 0.003957523 ubox
19 49 0.760432875 ubox
19 51 0.634588528 ubox
20 29 0.094865535 ubox
20 46 0.003944914 ubox
20 48 0.760908077 ubox
20 50 0.633164108 ubox
21 28 0.095480777 ubox
21 30 0.096325094 ubox
21 45 0.003944279 ubox
21 47 0.765527992 ubox
21 49 0.628677492 ubox
21 51 0.003269752 ubox
22 27 0.095447520 ubox
22 29 0.096332945 ubox
22 44 0.003940051 ubox
22 46 0.765903228 ubox
22 48 0.628252744 ubox
22 50 0.003471609 ubox
23 28 0.093839657 ubox
23 43 0.003210367 ubox
23 45 0.767629025 ubox
23 47 0.625910073 ubox
23 49 0.003572123 ubox
23 56 0.004282860 ubox
24 44 0.766645569 ubox
24 46 0.622260144 ubox
24 48 0.003575436 ubox
24 55 0.004344979 ubox
25 43 0.792282108 ubox
25 45 0.576217262 ubox
25 47 0.004197862 ubox
26 42 0.863982179 ubox
26 43 0.279102845 ubox
27 34 0.012325679 ubox
27 38 0.010010704 ubox
27 41 0.874817693 ubox
27 42 0.262458964 ubox
27 45 0.082078372 ubox
27 47 0.015413490 ubox
27 49 0.004119243 ubox
27 51 0.006236417 ubox
28 33 0.012449176 ubox
28 37 0.010251300 ubox
28 44 0.085522255 ubox
28 46 0.016862790 ubox
28 48 0.004152070 ubox
28 50 0.006255118 ubox
29 38 0.988713709 ubox
29 43 0.019979475 ubox
29 45 0.017519956 ubox
29 47 0.004282117 ubox
29 49 0.006307638 ubox
30 37 0.989961184 ubox
30 44 0.017522167 ubox
30 46 0.004203196 ubox
30 48 0.006198232 ubox
31 36 0.989578150 ubox
31 62 0.048790242 ubox
32 41 0.026302070 ubox
32 42 0.006847527 ubox
32 61 0.049226436 ubox
33 40 0.026254472 ubox
33 41 0.006896536 ubox
33 45 0.019035103 ubox
33 60 0.049349984 ubox
34 44 0.019856345 ubox
34 59 0.049356742 ubox
35 42 0.005057626 ubox
35 43 0.020002903 ubox
35 58 0.049345216 ubox
36 41 0.005546414 ubox
36 42 0.019915757 ubox
36 57 0.049356376 ubox
37 41 0.019501695 ubox
37 45 0.011255280 ubox
37 56 0.049318550 ubox
38 44 0.011804305 ubox
39 43 0.010055089 ubox
40 53 0.045795467 ubox
41 52 0.045337524 ubox
41 53 0.008949607 ubox
42 52 0.006376456 ubox
42 53 0.012999933 ubox
42 55 0.005110557 ubox
43 50 0.023275546 ubox
43 52 0.016779580 ubox
43 54 0.005151056 ubox
44 49 0.023213976 ubox
44 51 0.041618478 ubox
45 50 0.041709493 ubox
45 52 0.005307122 ubox
46 51 0.005248709 ubox
49 62 0.004726783 ubox
50 60 0.097278771 ubox
51 59 0.098078316 ubox
51 62 0.040532538 ubox
52 58 0.097355403 ubox
52 61 0.040914266 ubox
53 57 0.095278455 ubox
53 60 0.040909717 ubox
5 61 0.9500000 lbox
6 60 0.9500000 lbox
7 59 0.9500000 lbox
8 58 0.9500000 lbox
9 57 0.9500000 lbox
14 53 0.9500000 lbox
15 52 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
23 45 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
showpage
end
%%EOF
