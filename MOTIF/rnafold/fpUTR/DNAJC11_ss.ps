%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCGCUGUGGCGCAGCCGGGCUGGCCCGCGCUGUCCCUGACGCGGAUCACUGGCCCCUCUUGAGCACGGCCUUGCCGGUUUGGCGGGGUGAAAGGUUGCGAAG\
) } def
/len { sequence length } bind def

/coor [
[79.41317749 115.94919586]
[65.41210175 121.33156586]
[51.41102982 126.71394348]
[37.40995789 132.09631348]
[23.40888214 137.47868347]
[13.30406857 149.65255737]
[-1.35196519 146.99739075]
[-15.35303974 152.37976074]
[-22.37365723 158.47390747]
[-29.84495926 157.70799255]
[-43.99800491 162.67701721]
[-58.15105438 167.64604187]
[-72.30410004 172.61508179]
[-79.19958496 186.58253479]
[-93.62357330 191.42022705]
[-106.89691925 184.76036072]
[-121.04997253 189.72938538]
[-135.20301819 194.69842529]
[-149.35606384 199.66744995]
[-162.29789734 210.61940002]
[-176.40449524 201.21513367]
[-171.27285767 185.05647278]
[-154.32508850 185.51440430]
[-140.17204285 180.54536438]
[-126.01899719 175.57633972]
[-111.86595154 170.60731506]
[-105.66908264 157.11160278]
[-91.38666534 151.87068176]
[-77.27313232 158.46203613]
[-63.12008286 153.49299622]
[-48.96703720 148.52397156]
[-34.81398773 143.55494690]
[-20.73541069 138.37867737]
[-6.73433638 132.99630737]
[2.36902738 121.20742035]
[18.02651215 123.47760773]
[32.02758408 118.09523773]
[46.02865982 112.71286774]
[60.02973557 107.33049774]
[74.03080750 101.94812775]
[77.89583588 86.23046875]
[90.29959869 75.83191681]
[106.45058441 74.76937866]
[120.10973358 83.45331573]
[133.94676208 77.66224670]
[147.78379822 71.87117004]
[161.62083435 66.08010101]
[168.45951843 59.78248215]
[175.95008850 60.32873154]
[189.95115662 54.94636154]
[203.95223999 49.56399155]
[206.43893433 34.47215271]
[216.08213806 22.72883987]
[230.21467590 17.42431831]
[245.00585938 19.88943672]
[256.49975586 29.36337471]
[270.50085449 23.98100281]
[284.50192261 18.59863281]
[298.50299072 13.21626091]
[312.50405884 7.83388948]
[318.51458740 -3.69467854]
[330.41104126 -7.84116173]
[341.54885864 -2.87360620]
[355.70190430 -7.84263563]
[369.85494995 -12.81166553]
[384.00799561 -17.78069496]
[398.16104126 -22.74972343]
[412.31408691 -27.71875381]
[419.51058960 -33.60417175]
[426.95617676 -32.61925507]
[441.24902344 -37.17066193]
[455.54183960 -41.72206497]
[469.83465576 -46.27347183]
[483.09240723 -56.84077454]
[496.91687012 -47.02644348]
[491.31307983 -31.02538681]
[474.38604736 -31.98064995]
[460.09323120 -27.42924500]
[445.80041504 -22.87784004]
[431.50759888 -18.32643700]
[417.28314209 -13.56570625]
[403.13006592 -8.59667683]
[388.97702026 -3.62764740]
[374.82397461 1.34138203]
[360.67092896 6.31041145]
[346.51788330 11.27944088]
[335.91915894 25.18113708]
[317.88644409 21.83496284]
[303.88537598 27.21733475]
[289.88427734 32.59970474]
[275.88320923 37.98207855]
[261.88214111 43.36444855]
[259.69421387 58.09803391]
[250.36318970 69.83634949]
[236.31666565 75.36457825]
[221.29032898 73.10486603]
[209.33460999 63.56506348]
[195.33352661 68.94743347]
[181.33245850 74.32980347]
[167.41191101 79.91712952]
[153.57487488 85.70820618]
[139.73783875 91.49927521]
[125.90081024 97.29035187]
[123.85150909 110.45465088]
[115.55973053 120.88274384]
[103.19562531 125.84535217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 38]
[4 37]
[5 36]
[7 34]
[8 33]
[10 32]
[11 31]
[12 30]
[13 29]
[16 26]
[17 25]
[18 24]
[19 23]
[44 103]
[45 102]
[46 101]
[47 100]
[49 99]
[50 98]
[51 97]
[56 92]
[57 91]
[58 90]
[59 89]
[60 88]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[70 80]
[71 79]
[72 78]
[73 77]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
