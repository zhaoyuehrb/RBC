%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCUAACUAGCAGGAAGUCCGGGGUUGACGAUGGCUGUGUUGUUGAAGGGCCUGUAGCCGGGGGGUUCCUGGCCGGAUCCCGGUCUACCCUUAGCCCAGACUCGUUCCGGACCCCAGCCCGGCCCGGAACACUCUGGGCGAGACGGCGGUGGCAACUCUCCCCUUGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[6.72284603 168.83509827]
[-5.98829842 176.79919434]
[-18.69944382 184.76329041]
[-31.41058731 192.72738647]
[-44.12173080 200.69148254]
[-56.83287811 208.65557861]
[-58.32201767 222.06285095]
[-67.14082336 232.01190186]
[-79.89325714 235.00997925]
[-91.85993958 230.17825317]
[-104.71279907 237.91156006]
[-117.56565857 245.64486694]
[-130.41851807 253.37817383]
[-143.27137756 261.11148071]
[-156.12422180 268.84478760]
[-160.02131653 285.88162231]
[-174.73571777 294.67083740]
[-190.93347168 290.20462036]
[-203.64462280 298.16873169]
[-216.35575867 306.13281250]
[-229.06690979 314.09692383]
[-241.63220215 322.28918457]
[-254.04753113 330.70700073]
[-255.46456909 346.28024292]
[-266.59674072 357.26245117]
[-282.18777466 358.46813965]
[-294.87606812 349.32806396]
[-298.67056274 334.15783691]
[-291.77966309 320.12039185]
[-277.45703125 313.84381104]
[-262.46533203 318.29165649]
[-250.05000305 309.87387085]
[-248.28269958 305.40313721]
[-243.66906738 302.01068115]
[-237.03100586 301.38577271]
[-224.31985474 293.42166138]
[-211.60871887 285.45758057]
[-198.89756775 277.49346924]
[-197.79312134 264.63552856]
[-189.35040283 254.61885071]
[-176.48814392 251.25477600]
[-163.85752869 255.99192810]
[-151.00468445 248.25862122]
[-138.15182495 240.52531433]
[-125.29896545 232.79200745]
[-112.44610596 225.05870056]
[-99.59324646 217.32539368]
[-96.24875641 200.85940552]
[-81.75380707 191.71281433]
[-64.79697418 195.94442749]
[-52.08582687 187.98033142]
[-39.37468338 180.01623535]
[-26.66353798 172.05213928]
[-13.95239353 164.08804321]
[-1.24124897 156.12396240]
[-0.08558929 142.04301453]
[10.40919399 131.35913086]
[26.15409470 129.77531433]
[39.97675323 139.09822083]
[48.61733627 126.83687592]
[57.25791931 114.57554626]
[65.89849854 102.31420898]
[68.19150543 87.49050903]
[63.65939713 73.19155884]
[59.12729263 58.89260483]
[54.59518433 44.59365463]
[50.06307983 30.29470253]
[45.53097153 15.99575043]
[36.59981918 12.78545475]
[30.25642014 5.91275835]
[27.84300423 -2.98034215]
[29.78295898 -11.84745216]
[35.51271820 -18.70852089]
[31.76138687 -33.23186493]
[28.01005745 -47.75521088]
[24.25872803 -62.27855301]
[20.50739670 -76.80189514]
[16.75606728 -91.32524109]
[6.94067526 -105.14893341]
[17.50695992 -118.40751648]
[33.17242813 -111.92450714]
[31.27941132 -95.07656860]
[35.03074265 -80.55323029]
[38.78207016 -66.02988434]
[42.53340149 -51.50653839]
[46.28473282 -36.98319626]
[50.03606033 -22.45985031]
[65.75030518 -9.10821533]
[59.82992554 11.46364403]
[64.36203003 25.76259613]
[68.89413452 40.06154633]
[73.42624664 54.36050034]
[77.95835114 68.65944672]
[82.49045563 82.95840454]
[99.47107697 77.83509064]
[113.58845520 85.44953156]
[127.20208740 79.15119934]
[140.81571960 72.85285950]
[154.42935181 66.55452728]
[168.04298401 60.25618744]
[181.65661621 53.95785141]
[195.27024841 47.65951538]
[198.43748474 34.54687881]
[208.44003296 25.78879356]
[221.46865845 24.42207336]
[232.73085022 30.72365952]
[246.45597839 24.67213249]
[260.18109131 18.62060547]
[273.90621948 12.56907749]
[287.63134766 6.51754999]
[301.35647583 0.46602270]
[315.08160400 -5.58550453]
[324.58737183 -18.23267365]
[339.35443115 -16.28760910]
[353.07955933 -22.33913612]
[357.27008057 -37.40477753]
[370.19338989 -46.20943832]
[385.74749756 -44.59582901]
[396.58822632 -33.32584381]
[397.59692383 -17.72082710]
[388.29730225 -5.14898920]
[373.08035278 -1.54636872]
[359.13107300 -8.61401272]
[345.40594482 -2.56248498]
[336.88189697 9.65183735]
[321.13311768 8.13961887]
[307.40798950 14.19114590]
[293.68289185 20.24267387]
[279.95776367 26.29420090]
[266.23263550 32.34572983]
[252.50750732 38.39725494]
[238.78237915 44.44878387]
[233.38903809 60.36186600]
[217.85676575 67.60842133]
[201.56857300 61.27314758]
[187.95495605 67.57147980]
[174.34132385 73.86981964]
[160.72769165 80.16815948]
[147.11405945 86.46649170]
[133.50042725 92.76483154]
[119.88679504 99.06316376]
[118.28896332 109.93618774]
[110.94900513 118.75695038]
[99.62946320 122.62065887]
[87.47942352 119.92064667]
[78.15983582 110.95478821]
[69.51925659 123.21612549]
[60.87867355 135.47746277]
[52.23809052 147.73880005]
[51.02070999 162.68931580]
[57.56380081 176.18701172]
[64.10689545 189.68472290]
[70.64998627 203.18241882]
[77.19307709 216.68011475]
[83.73616791 230.17782593]
[90.27926636 243.67552185]
[96.82235718 257.17321777]
[112.12029266 259.77185059]
[122.94504547 270.88958740]
[125.13429260 286.25146484]
[117.84620667 299.95050049]
[103.88321686 306.71914673]
[88.61437225 303.95471191]
[77.91085815 292.72018433]
[75.88838959 277.33547974]
[83.32465363 263.71630859]
[76.78156281 250.21861267]
[70.23847198 236.72091675]
[63.69537735 223.22320557]
[57.15228653 209.72550964]
[50.60919189 196.22781372]
[44.06610107 182.73010254]
[37.52300644 169.23240662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 55]
[2 54]
[3 53]
[4 52]
[5 51]
[6 50]
[10 47]
[11 46]
[12 45]
[13 44]
[14 43]
[15 42]
[18 38]
[19 37]
[20 36]
[21 35]
[22 32]
[23 31]
[59 149]
[60 148]
[61 147]
[62 146]
[63 94]
[64 93]
[65 92]
[66 91]
[67 90]
[68 89]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[78 82]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
[101 136]
[102 135]
[106 132]
[107 131]
[108 130]
[109 129]
[110 128]
[111 127]
[112 126]
[114 124]
[115 123]
[150 173]
[151 172]
[152 171]
[153 170]
[154 169]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
