%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WDR97)
} def

/sequence { (\
UGCGGGCCGUGACCGCUAAGUCCUGGGAGCUGUUGGGCUCUGGGACCGCAGUUGCUGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.007723818 ubox
1 18 0.111728254 ubox
1 48 0.003519586 ubox
1 50 0.087748296 ubox
1 57 0.012191518 ubox
2 8 0.020454306 ubox
2 10 0.024917458 ubox
2 16 0.910459967 ubox
2 17 0.023829722 ubox
2 49 0.097423572 ubox
2 55 0.038961919 ubox
2 56 0.003877396 ubox
3 9 0.025882673 ubox
3 15 0.912353418 ubox
3 48 0.097442923 ubox
3 54 0.038978567 ubox
3 57 0.077057501 ubox
4 8 0.028359995 ubox
4 14 0.912431550 ubox
4 47 0.096453938 ubox
4 53 0.029224463 ubox
4 56 0.068994879 ubox
5 13 0.911972493 ubox
5 14 0.043966259 ubox
5 17 0.065682889 ubox
5 46 0.060344730 ubox
5 52 0.019493976 ubox
5 53 0.016618064 ubox
5 55 0.047879539 ubox
5 56 0.110450869 ubox
6 13 0.049035015 ubox
6 16 0.072782162 ubox
6 21 0.004994264 ubox
6 49 0.004188259 ubox
6 52 0.024903463 ubox
6 55 0.120339339 ubox
7 15 0.067765524 ubox
7 20 0.005361430 ubox
7 26 0.014788936 ubox
7 43 0.011865824 ubox
7 44 0.019331968 ubox
7 48 0.003995327 ubox
7 51 0.029873796 ubox
7 54 0.124435169 ubox
8 15 0.029414581 ubox
8 25 0.015315930 ubox
8 42 0.011871793 ubox
8 43 0.019518480 ubox
8 54 0.013872563 ubox
8 57 0.121546778 ubox
9 14 0.038571145 ubox
9 16 0.014640401 ubox
9 24 0.015748857 ubox
9 41 0.005639956 ubox
9 47 0.003190097 ubox
9 49 0.031118411 ubox
9 52 0.003849402 ubox
9 53 0.010341783 ubox
9 55 0.370483640 ubox
9 56 0.010503747 ubox
10 15 0.014053147 ubox
10 48 0.031100994 ubox
10 50 0.005447292 ubox
10 54 0.371049176 ubox
11 22 0.048950685 ubox
11 40 0.004543870 ubox
11 47 0.030957178 ubox
11 49 0.005204137 ubox
11 53 0.391728654 ubox
12 21 0.049174601 ubox
12 39 0.004447374 ubox
12 52 0.394411900 ubox
13 20 0.049106970 ubox
13 26 0.007452543 ubox
13 37 0.004237462 ubox
13 51 0.394247671 ubox
14 25 0.007573016 ubox
14 36 0.004231151 ubox
14 48 0.011177606 ubox
15 24 0.006971730 ubox
15 47 0.011489866 ubox
15 49 0.394957869 ubox
15 52 0.010650381 ubox
15 55 0.004200358 ubox
16 48 0.395166697 ubox
16 51 0.014597016 ubox
16 54 0.004265051 ubox
17 50 0.022250356 ubox
17 54 0.024189102 ubox
17 57 0.017544347 ubox
18 53 0.026833050 ubox
18 56 0.017507319 ubox
19 31 0.004213081 ubox
19 52 0.026962907 ubox
19 53 0.005260920 ubox
19 56 0.010774511 ubox
20 30 0.004256658 ubox
20 46 0.992940812 ubox
20 49 0.016162801 ubox
20 55 0.006706801 ubox
21 29 0.003568620 ubox
21 44 0.010200664 ubox
21 45 0.996053717 ubox
21 48 0.015361854 ubox
21 54 0.005575279 ubox
21 58 0.008148517 ubox
22 43 0.014492858 ubox
22 44 0.994208253 ubox
22 57 0.008649089 ubox
23 42 0.016839887 ubox
23 43 0.991425018 ubox
23 44 0.100135359 ubox
24 42 0.853362500 ubox
24 43 0.122893457 ubox
24 57 0.013237095 ubox
25 40 0.004903245 ubox
25 41 0.690532197 ubox
25 56 0.020791807 ubox
26 40 0.515725559 ubox
26 41 0.689628687 ubox
26 55 0.021534967 ubox
27 38 0.003193226 ubox
27 39 0.223433118 ubox
27 40 0.856214433 ubox
28 39 0.973476233 ubox
28 53 0.021464722 ubox
29 38 0.999661657 ubox
29 52 0.021646820 ubox
30 36 0.019352299 ubox
30 37 0.999473552 ubox
30 51 0.021658869 ubox
31 35 0.022635681 ubox
31 36 0.980459206 ubox
31 50 0.021653621 ubox
32 49 0.021653591 ubox
33 48 0.015897007 ubox
34 48 0.014429925 ubox
35 47 0.020487401 ubox
36 46 0.020415394 ubox
36 47 0.006915424 ubox
37 46 0.006994322 ubox
38 44 0.013647293 ubox
39 43 0.012497871 ubox
39 45 0.003957151 ubox
40 44 0.003999464 ubox
45 52 0.004937181 ubox
46 51 0.005470433 ubox
47 54 0.038385793 ubox
47 57 0.242158465 ubox
48 53 0.026726023 ubox
48 55 0.708057312 ubox
48 56 0.061949043 ubox
49 54 0.709617983 ubox
49 57 0.420535380 ubox
50 56 0.420929202 ubox
51 55 0.411872416 ubox
52 58 0.013286973 ubox
52 59 0.023350654 ubox
53 57 0.012941396 ubox
53 58 0.031169821 ubox
2 16 0.9500000 lbox
3 15 0.9500000 lbox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
