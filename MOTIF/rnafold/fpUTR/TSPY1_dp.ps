%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TSPY1)
} def

/sequence { (\
GGCCCUUCGCGCGCAGUCCCUUAGGGGGCGCCUGGAAGCCCGGCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.020182001 ubox
1 40 0.174754823 ubox
1 41 0.141196170 ubox
2 7 0.014322871 ubox
2 10 0.066812618 ubox
2 12 0.047119916 ubox
2 14 0.028025206 ubox
2 29 0.019091422 ubox
2 39 0.176050938 ubox
2 40 0.140119937 ubox
2 44 0.963458963 ubox
2 46 0.025795842 ubox
3 9 0.066793620 ubox
3 11 0.047111740 ubox
3 13 0.028017530 ubox
3 16 0.003180443 ubox
3 26 0.036270684 ubox
3 27 0.029854412 ubox
3 28 0.019349021 ubox
3 38 0.170867121 ubox
3 43 0.964294123 ubox
3 45 0.026026622 ubox
4 25 0.036413333 ubox
4 26 0.029905211 ubox
4 27 0.019412545 ubox
4 35 0.020076551 ubox
4 42 0.963422060 ubox
4 43 0.025708901 ubox
5 16 0.005246670 ubox
5 24 0.036451716 ubox
5 25 0.029871179 ubox
5 26 0.019299015 ubox
5 27 0.003517420 ubox
5 34 0.020128516 ubox
5 35 0.012949930 ubox
5 38 0.970716542 ubox
5 42 0.024623828 ubox
5 43 0.004278679 ubox
6 15 0.005246263 ubox
6 23 0.036002147 ubox
6 24 0.029493244 ubox
6 25 0.017231752 ubox
6 26 0.003578729 ubox
6 34 0.012447268 ubox
6 35 0.005180367 ubox
6 36 0.150137980 ubox
6 37 0.974513170 ubox
6 38 0.033494319 ubox
6 42 0.004026967 ubox
7 23 0.026010171 ubox
7 24 0.013412459 ubox
7 25 0.008173991 ubox
7 35 0.163971245 ubox
7 36 0.974916521 ubox
7 37 0.034090850 ubox
7 43 0.003187426 ubox
8 24 0.011137046 ubox
8 34 0.184018921 ubox
8 35 0.971045298 ubox
8 42 0.004071554 ubox
8 45 0.008589635 ubox
9 17 0.040043512 ubox
9 31 0.056477115 ubox
9 33 0.196948684 ubox
9 39 0.023503445 ubox
9 41 0.005311343 ubox
9 44 0.009034982 ubox
9 46 0.069002114 ubox
10 16 0.040925076 ubox
10 30 0.056539429 ubox
10 34 0.870610672 ubox
10 38 0.023506484 ubox
10 43 0.008839305 ubox
10 45 0.069507219 ubox
11 17 0.016023873 ubox
11 29 0.055555156 ubox
11 31 0.381200256 ubox
11 33 0.852605968 ubox
11 39 0.005884166 ubox
11 44 0.069038006 ubox
11 46 0.029834378 ubox
12 16 0.016287639 ubox
12 28 0.055125444 ubox
12 30 0.382272417 ubox
12 34 0.014791954 ubox
12 38 0.005885435 ubox
12 42 0.003211436 ubox
12 43 0.067442995 ubox
12 45 0.030046588 ubox
13 29 0.376567426 ubox
13 31 0.910937387 ubox
13 33 0.010147403 ubox
13 44 0.027164830 ubox
13 46 0.014068054 ubox
14 28 0.373708787 ubox
14 30 0.908452154 ubox
14 34 0.017611840 ubox
14 43 0.026315786 ubox
14 45 0.014154806 ubox
15 33 0.017511894 ubox
16 29 0.919089295 ubox
16 31 0.003277588 ubox
16 32 0.012104388 ubox
17 25 0.008247528 ubox
17 26 0.077860647 ubox
17 27 0.196151685 ubox
17 28 0.920066450 ubox
17 30 0.004275648 ubox
18 24 0.008630558 ubox
18 25 0.081024354 ubox
18 26 0.234432086 ubox
18 27 0.966591399 ubox
18 28 0.030738686 ubox
19 24 0.080775366 ubox
19 25 0.234809584 ubox
19 26 0.966654172 ubox
19 27 0.033480407 ubox
20 24 0.233303178 ubox
20 25 0.966089996 ubox
20 26 0.033533806 ubox
21 25 0.030304650 ubox
26 41 0.011665296 ubox
27 40 0.012184089 ubox
28 39 0.012237459 ubox
28 46 0.084718462 ubox
29 38 0.012240576 ubox
29 45 0.086538952 ubox
30 39 0.010171419 ubox
30 44 0.101181213 ubox
30 46 0.035243243 ubox
31 38 0.010137846 ubox
31 43 0.100376313 ubox
31 45 0.035529552 ubox
32 42 0.100697890 ubox
32 43 0.049175917 ubox
33 42 0.075332597 ubox
34 40 0.059951279 ubox
34 41 0.118866178 ubox
35 39 0.059061784 ubox
35 40 0.118518852 ubox
38 44 0.004808233 ubox
38 46 0.003393299 ubox
39 43 0.004852490 ubox
39 45 0.003765210 ubox
2 44 0.9500000 lbox
3 43 0.9500000 lbox
4 42 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
showpage
end
%%EOF
