%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCAACCUCCCCCGGAACUCAACCCCCGUCGCUCGAGUUUCUUUCGCUUCCGUCGGGACUCUGCGGAGUGGACCCGAGUGAACACAACUUCCGGCCCCACUGAGCGGUGUCCUGAGCCGAUUACAGCUAGGUAGUGGAGCGCCGCUGCUUACCUGGGUGCAGGAGACAGCCGGAGUCGCUGGGGGAGCUCCGCGCCGCCGGACGCCCGUGACC\
) } def
/len { sequence length } bind def

/coor [
[-81.27256775 445.21304321]
[-71.31378174 456.43011475]
[-65.41771698 470.22271729]
[-64.19071960 485.17245483]
[-67.75897980 499.74185181]
[-75.75553131 512.43261719]
[-87.35801697 521.93957520]
[-101.37321472 527.28509521]
[-116.35979462 527.91931152]
[-130.77653503 523.77716064]
[-143.14080811 515.28454590]
[-152.18106079 503.31481934]
[-156.96759033 489.09902954]
[-157.00813293 474.09906006]
[-152.29884338 459.85818481]
[-163.39700317 469.94931030]
[-174.49514771 480.04043579]
[-185.59330750 490.13156128]
[-196.69145203 500.22271729]
[-207.78961182 510.31384277]
[-218.88777161 520.40496826]
[-213.71093750 534.69726562]
[-214.40258789 549.88244629]
[-220.85723877 563.64489746]
[-232.09059143 573.88604736]
[-246.38966370 579.04400635]
[-261.57391357 578.33239746]
[-275.32791138 571.85968018]
[-285.55422974 560.61285400]
[-290.69342041 546.30700684]
[-289.96182251 531.12371826]
[-283.47100830 517.37823486]
[-272.21072388 507.16671753]
[-257.89816284 502.04635620]
[-242.71580505 502.79791260]
[-228.97889709 509.30682373]
[-217.88075256 499.21569824]
[-206.78259277 489.12454224]
[-195.68443298 479.03341675]
[-184.58628845 468.94229126]
[-173.48812866 458.85113525]
[-162.38998413 448.76000977]
[-161.58285522 442.49743652]
[-157.10714722 436.98587036]
[-149.66978455 434.35302734]
[-141.03126526 422.09024048]
[-132.39274597 409.82745361]
[-123.75421906 397.56466675]
[-128.73031616 383.55123901]
[-124.44992828 369.12408447]
[-112.35365295 359.87567139]
[-96.95303345 359.51913452]
[-88.31451416 347.25634766]
[-79.67598724 334.99356079]
[-71.03746796 322.73077393]
[-70.03320312 307.87005615]
[-55.76027298 301.04409790]
[-47.12174988 288.78131104]
[-52.58594131 276.60180664]
[-51.30894852 263.20523071]
[-43.51781082 252.10020447]
[-31.15960503 246.24813843]
[-17.41582680 247.27389526]
[-8.59904861 235.13864136]
[0.21773000 223.00338745]
[9.03450871 210.86813354]
[17.85128784 198.73287964]
[26.66806602 186.59762573]
[35.48484421 174.46237183]
[44.30162430 162.32711792]
[40.52525330 150.00950623]
[44.59273529 137.58006287]
[55.23232269 129.64520264]
[68.69460297 129.28067017]
[77.68775177 117.27553558]
[86.68090820 105.27040100]
[88.53594208 91.41217041]
[101.31396484 85.73645020]
[110.30711365 73.73131561]
[119.30027008 61.72618484]
[128.29342651 49.72105026]
[137.28657532 37.71591949]
[122.45461273 39.95488358]
[109.58963013 32.24176025]
[104.57595062 18.10446930]
[109.70679474 4.00927544]
[122.63535309 -3.59680176]
[137.44821167 -1.23481095]
[147.37011719 10.01489449]
[147.86267090 25.00741577]
[158.03462219 13.98328304]
[168.20655823 2.95915174]
[178.37850952 -8.06498051]
[188.55046082 -19.08911133]
[198.72241211 -30.11324310]
[208.89434814 -41.13737488]
[194.10395813 -38.63852310]
[179.76260376 -43.03459549]
[168.91329956 -53.39281082]
[163.85810852 -67.51531219]
[165.66966248 -82.40551758]
[173.96357727 -94.90395355]
[186.98002625 -102.35863495]
[201.95709229 -103.18780518]
[215.71687317 -97.21550751]
[225.33976746 -85.70898438]
[228.78392029 -71.10974884]
[225.31863403 -56.51570129]
[236.98730469 -65.94130707]
[242.86071777 -80.63190460]
[257.62332153 -82.61045074]
[269.29199219 -92.03605652]
[280.96066284 -101.46166229]
[292.62933350 -110.88726807]
[304.29803467 -120.31286621]
[310.17141724 -135.00346375]
[324.93402100 -136.98200989]
[336.60269165 -146.40762329]
[348.27139282 -155.83322144]
[333.85418701 -159.97383118]
[327.96392822 -173.76893616]
[334.94418335 -187.04583740]
[349.64758301 -190.01396179]
[361.23165894 -180.48457336]
[361.15341187 -165.48327637]
[373.47900391 -174.03196716]
[385.80456543 -182.58067322]
[392.73464966 -196.80335999]
[407.60229492 -197.69902039]
[419.92785645 -206.24772644]
[432.25341797 -214.79641724]
[444.57901001 -223.34512329]
[456.90457153 -231.89382935]
[469.23013306 -240.44252014]
[481.55572510 -248.99122620]
[493.88128662 -257.53991699]
[506.20684814 -266.08862305]
[518.53240967 -274.63732910]
[525.03613281 -289.69168091]
[541.35449219 -291.31747437]
[550.70056152 -277.84222412]
[543.45996094 -263.12811279]
[527.08111572 -262.31176758]
[514.75555420 -253.76306152]
[502.42999268 -245.21435547]
[490.10443115 -236.66564941]
[477.77883911 -228.11695862]
[465.45327759 -219.56825256]
[453.12771606 -211.01954651]
[440.80212402 -202.47085571]
[428.47656250 -193.92214966]
[416.15100098 -185.37344360]
[410.10250854 -171.76222229]
[394.35327148 -170.25509644]
[382.02767944 -161.70640564]
[369.70211792 -153.15769958]
[357.69699097 -144.16455078]
[346.02832031 -134.73893738]
[334.35964966 -125.31333923]
[329.32086182 -111.29692078]
[313.72363281 -108.64419556]
[302.05496216 -99.21858978]
[290.38626099 -89.79298401]
[278.71759033 -80.36737823]
[267.04891968 -70.94178009]
[262.01013184 -56.92535782]
[246.41291809 -54.27263260]
[234.74424744 -44.84702682]
[231.12339783 -34.91812515]
[219.91848755 -30.96542740]
[209.74653625 -19.94129562]
[199.57458496 -8.91716480]
[189.40264893 2.10696745]
[179.23069763 13.13109970]
[169.05874634 24.15523148]
[158.88679504 35.17936325]
[149.29170227 46.70906830]
[140.29855347 58.71420288]
[131.30540466 70.71933746]
[122.31224823 82.72446442]
[113.31909180 94.72959900]
[111.46405792 108.58782959]
[98.68603516 114.26354980]
[89.69288635 126.26868439]
[80.69972992 138.27381897]
[83.49961853 155.54316711]
[73.14612579 169.22410583]
[56.43687820 171.14389038]
[47.62010193 183.27914429]
[38.80332184 195.41439819]
[29.98654175 207.54965210]
[21.16976357 219.68490601]
[12.35298538 231.82015991]
[3.53620625 243.95541382]
[-5.28057289 256.09066772]
[0.16450140 272.10617065]
[-4.95954418 288.05273438]
[-18.44429016 297.70520020]
[-34.85896301 297.41983032]
[-43.49748611 309.68261719]
[-45.11963654 325.42044067]
[-58.77468109 331.36929321]
[-67.41320038 343.63208008]
[-76.05172729 355.89486694]
[-84.69024658 368.15765381]
[-79.84095764 382.77923584]
[-84.47695923 397.28305054]
[-96.62075806 406.17080688]
[-111.49143219 406.20318604]
[-120.12995148 418.46597290]
[-128.76847839 430.72875977]
[-137.40699768 442.99154663]
[-123.85857391 436.55413818]
[-108.96913147 434.73632812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[20 37]
[21 36]
[45 212]
[46 211]
[47 210]
[48 209]
[52 205]
[53 204]
[54 203]
[55 202]
[57 200]
[58 199]
[63 195]
[64 194]
[65 193]
[66 192]
[67 191]
[68 190]
[69 189]
[70 188]
[74 185]
[75 184]
[76 183]
[78 181]
[79 180]
[80 179]
[81 178]
[82 177]
[90 176]
[91 175]
[92 174]
[93 173]
[94 172]
[95 171]
[96 170]
[108 168]
[109 167]
[111 165]
[112 164]
[113 163]
[114 162]
[115 161]
[117 159]
[118 158]
[119 157]
[125 156]
[126 155]
[127 154]
[129 152]
[130 151]
[131 150]
[132 149]
[133 148]
[134 147]
[135 146]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
