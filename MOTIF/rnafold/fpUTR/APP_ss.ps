%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUCAGCUGACUCGCCUGGCUCUGAGCCCCGCCGCCGCGCUCGGGCUCCGUCAGUUUCCUCGGCAGCGGUAGGCGAGAGCACGCGGAGGAGCGUGCGCGGGGGCCCCGGGAGACGGCGGCGGUGGCGGCGCGGGCAGAGCAAGGACGCGGCGGAUCCCACUCGCACAGCAGCGCACUCGGUGCCCCGCGCAGGGUCGCG\
) } def
/len { sequence length } bind def

/coor [
[381.65274048 528.77575684]
[372.49810791 516.89331055]
[363.34344482 505.01089478]
[354.18878174 493.12844849]
[345.03414917 481.24603271]
[331.13735962 475.88610840]
[328.84417725 460.23196411]
[319.68951416 448.34954834]
[310.53485107 436.46710205]
[301.38021851 424.58465576]
[297.94116211 423.77273560]
[294.72628784 421.25000000]
[292.53753662 417.14077759]
[292.09057617 411.92385864]
[283.50296021 399.62539673]
[274.81945801 387.39440918]
[266.04064941 375.23165894]
[257.26187134 363.06887817]
[243.53938293 357.27725220]
[241.73658752 341.55911255]
[232.95777893 329.39633179]
[224.17898560 317.23358154]
[215.40017700 305.07083130]
[206.62138367 292.90808105]
[202.12564087 291.27478027]
[198.61164856 286.79541016]
[197.76530457 280.22515869]
[189.37094116 267.79397583]
[180.97656250 255.36277771]
[172.58219910 242.93159485]
[164.09092712 230.56637573]
[155.50329590 218.26789856]
[146.91566467 205.96942139]
[138.32801819 193.67094421]
[129.74038696 181.37246704]
[121.15275574 169.07400513]
[112.56511688 156.77552795]
[103.97748566 144.47705078]
[95.38984680 132.17857361]
[81.43286896 126.68286896]
[66.76554871 129.82447815]
[54.96508408 141.21223450]
[39.27957916 136.42715454]
[35.84493637 120.39171600]
[48.19442368 109.60179901]
[63.62394333 115.15715027]
[78.29126740 112.01554871]
[78.09942627 98.21838379]
[84.97721100 88.15035248]
[77.78379822 74.98772430]
[70.59039307 61.82508850]
[63.39698029 48.66246033]
[56.20356750 35.49982834]
[49.33640671 29.46399689]
[49.00242233 22.07478523]
[42.01560974 8.80133629]
[35.02880096 -4.47211361]
[28.04198837 -17.74556351]
[21.05517769 -31.01901245]
[14.06836605 -44.29246140]
[7.29637766 -50.43488693]
[7.07792139 -57.82841492]
[0.29941651 -71.20944214]
[-6.47908831 -84.59046936]
[-10.21378803 -86.84113312]
[-12.77579117 -89.86167145]
[-14.06701660 -93.18726349]
[-14.15097713 -96.36914062]
[-13.23343182 -99.02608490]
[-19.16266632 -112.80448151]
[-25.09190178 -126.58287811]
[-40.08930588 -130.10197449]
[-50.02274704 -141.64234924]
[-51.24164963 -156.64161682]
[-43.48746490 -169.33061218]
[-49.41669846 -183.10900879]
[-59.74682617 -186.54687500]
[-66.34027100 -194.93269348]
[-67.20706940 -205.34449768]
[-62.30146790 -214.31947327]
[-67.79717255 -228.27644348]
[-73.29286957 -242.23342896]
[-78.78857422 -256.19039917]
[-84.28427124 -270.14739990]
[-89.77996826 -284.10437012]
[-104.37078094 -290.17758179]
[-110.31630707 -304.82089233]
[-104.08917236 -319.34664917]
[-89.38383484 -325.13702393]
[-74.92469788 -318.75668335]
[-69.29012299 -303.99093628]
[-75.82299042 -289.60006714]
[-70.32729340 -275.64309692]
[-64.83158875 -261.68609619]
[-59.33589172 -247.72912598]
[-53.84019089 -233.77215576]
[-48.34449005 -219.81517029]
[-32.37231064 -208.92500305]
[-35.63830566 -189.03823853]
[-29.70907021 -175.25984192]
[-15.16353321 -172.16705322]
[-5.10935068 -160.96984863]
[-3.55823040 -145.82232666]
[-11.31350613 -132.51211548]
[-5.38427162 -118.73371887]
[0.54496312 -104.95532227]
[6.90193844 -91.36897278]
[13.68044281 -77.98794556]
[20.45894814 -64.60691833]
[27.34181595 -51.27927399]
[34.32862854 -38.00582504]
[41.31543732 -24.73237419]
[48.30224991 -11.45892525]
[55.28906250 1.81452501]
[62.27587128 15.08797455]
[69.36620331 28.30641937]
[76.55960846 41.46904755]
[83.75302124 54.63167953]
[90.94643402 67.79431152]
[98.13984680 80.95693970]
[116.16927338 86.55868530]
[122.01969910 106.35832214]
[107.68832397 123.59093475]
[116.27596283 135.88940430]
[124.86359406 148.18788147]
[133.45123291 160.48635864]
[142.03886414 172.78483582]
[150.62649536 185.08331299]
[159.21414185 197.38179016]
[167.80177307 209.68026733]
[176.38940430 221.97874451]
[183.87457275 227.22865295]
[185.01338196 234.53721619]
[193.40776062 246.96841431]
[201.80212402 259.39959717]
[210.19650269 271.83081055]
[218.78413391 284.12927246]
[227.56294250 296.29202271]
[236.34173584 308.45477295]
[245.12054443 320.61755371]
[253.89933777 332.78030396]
[268.24972534 339.44189453]
[269.42462158 354.29010010]
[278.20343018 366.45285034]
[286.98220825 378.61560059]
[294.54852295 383.74789429]
[295.80142212 391.03775024]
[304.38906860 403.33624268]
[313.26263428 415.43002319]
[322.41729736 427.31243896]
[331.57196045 439.19488525]
[340.72659302 451.07733154]
[355.27819824 457.28713989]
[356.91656494 472.09136963]
[366.07122803 483.97381592]
[375.22589111 495.85623169]
[384.38052368 507.73867798]
[393.53518677 519.62109375]
[392.61300659 504.64950562]
[397.66470337 490.52575684]
[407.87289429 479.53518677]
[421.58584595 473.45611572]
[436.58471680 473.27221680]
[450.44259644 479.01321411]
[460.91720581 489.75018311]
[466.31369019 503.74584961]
[465.75885010 518.73559570]
[459.34249878 532.29394531]
[448.10278320 542.22723389]
[433.85842896 546.92803955]
[418.91418457 545.63580322]
[405.68615723 538.55798340]
[412.67297363 551.83142090]
[419.65979004 565.10485840]
[426.43176270 571.24731445]
[426.65023804 578.64080811]
[433.42874146 592.02185059]
[440.20724487 605.40289307]
[446.98574829 618.78387451]
[460.12423706 627.59808350]
[458.97351074 642.44818115]
[465.75201416 655.82922363]
[472.53051758 669.21026611]
[479.30902100 682.59124756]
[491.86047363 693.98852539]
[484.38320923 709.20452881]
[467.69195557 706.23168945]
[465.92797852 689.36975098]
[459.14947510 675.98876953]
[452.37097168 662.60772705]
[445.59246826 649.22668457]
[432.93881226 641.36956787]
[433.60470581 625.56237793]
[426.82620239 612.18139648]
[420.04769897 598.80035400]
[413.26919556 585.41931152]
[406.38632202 572.09167480]
[399.39953613 558.81823730]
[392.41271973 545.54479980]
[386.29406738 543.11303711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 155]
[5 154]
[7 152]
[8 151]
[9 150]
[10 149]
[14 148]
[15 147]
[16 145]
[17 144]
[18 143]
[20 141]
[21 140]
[22 139]
[23 138]
[24 137]
[27 136]
[28 135]
[29 134]
[30 133]
[31 131]
[32 130]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[38 124]
[39 123]
[40 47]
[41 46]
[49 120]
[50 119]
[51 118]
[52 117]
[53 116]
[55 115]
[56 114]
[57 113]
[58 112]
[59 111]
[60 110]
[62 109]
[63 108]
[64 107]
[69 106]
[70 105]
[71 104]
[75 100]
[76 99]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[172 199]
[173 198]
[174 197]
[176 196]
[177 195]
[178 194]
[179 193]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
