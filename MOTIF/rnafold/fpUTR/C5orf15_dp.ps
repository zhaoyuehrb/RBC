%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C5orf15)
} def

/sequence { (\
CUUAUUCCGGUUUCCAGAGCACGUCUCCAGGCUUCGACGUCACCACGCUGGGACGUAUGUGCCGAGGGCCGCGGCGUCUGACCUCAUGGCGUAGAGCCUAGCAACAGCGCAGGCUCCCAGCCGAGUCCGUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.026579973 ubox
1 125 0.047587616 ubox
2 9 0.025446823 ubox
2 10 0.005496293 ubox
2 124 0.047765504 ubox
2 125 0.006507573 ubox
3 9 0.006433383 ubox
3 93 0.004582139 ubox
3 123 0.044134821 ubox
3 124 0.007311742 ubox
4 11 0.008581976 ubox
4 87 0.020729801 ubox
4 92 0.004781944 ubox
4 126 0.121644387 ubox
4 130 0.022508444 ubox
5 10 0.008582206 ubox
5 19 0.006689925 ubox
5 86 0.021153008 ubox
5 91 0.004691418 ubox
5 124 0.006241362 ubox
5 125 0.128671432 ubox
5 129 0.011906574 ubox
6 18 0.014853692 ubox
6 123 0.005774878 ubox
6 124 0.133381285 ubox
7 17 0.015724906 ubox
7 73 0.003757448 ubox
7 89 0.005128618 ubox
7 123 0.129987330 ubox
8 23 0.003276000 ubox
8 71 0.005515784 ubox
8 80 0.003676135 ubox
8 88 0.005344082 ubox
8 123 0.065042274 ubox
8 129 0.873970107 ubox
9 15 0.028512208 ubox
9 22 0.003526660 ubox
9 70 0.005841742 ubox
9 79 0.003756455 ubox
9 83 0.384719033 ubox
9 84 0.014189562 ubox
9 85 0.024923633 ubox
9 87 0.004820063 ubox
9 122 0.069740045 ubox
9 127 0.014209067 ubox
9 128 0.893640299 ubox
10 14 0.028859271 ubox
10 20 0.006272596 ubox
10 69 0.005835890 ubox
10 78 0.003754154 ubox
10 82 0.387088753 ubox
10 83 0.015912961 ubox
10 84 0.022660843 ubox
10 121 0.069718601 ubox
10 126 0.011310739 ubox
10 127 0.891750027 ubox
11 19 0.006272496 ubox
11 68 0.005346499 ubox
11 81 0.380412402 ubox
11 86 0.003515439 ubox
11 120 0.068568526 ubox
11 124 0.017029344 ubox
11 125 0.149372762 ubox
12 18 0.006204849 ubox
12 80 0.131251509 ubox
12 81 0.027719323 ubox
12 119 0.054872150 ubox
12 123 0.016837756 ubox
12 124 0.146839329 ubox
12 125 0.579413293 ubox
13 17 0.005611454 ubox
13 80 0.012988671 ubox
13 81 0.080835186 ubox
13 119 0.003536961 ubox
13 123 0.129060415 ubox
13 124 0.786798951 ubox
14 67 0.003705731 ubox
14 80 0.066548791 ubox
14 123 0.786622079 ubox
15 66 0.003721839 ubox
15 80 0.984834170 ubox
16 26 0.006261259 ubox
16 79 0.997614429 ubox
16 84 0.003389905 ubox
17 25 0.006723606 ubox
17 27 0.006856419 ubox
17 78 0.998251967 ubox
17 83 0.003612358 ubox
17 85 0.010181307 ubox
18 24 0.006648023 ubox
18 26 0.006878178 ubox
18 77 0.972754631 ubox
18 79 0.018873144 ubox
18 84 0.010170166 ubox
19 25 0.006814445 ubox
19 62 0.003767765 ubox
19 72 0.016064573 ubox
19 75 0.980118100 ubox
19 77 0.022061072 ubox
19 78 0.019545988 ubox
19 83 0.009956658 ubox
20 61 0.003773095 ubox
20 71 0.016007990 ubox
20 74 0.980864943 ubox
20 76 0.041903542 ubox
20 80 0.005952882 ubox
21 60 0.003716539 ubox
21 77 0.032436401 ubox
21 79 0.004032526 ubox
22 59 0.003667646 ubox
22 71 0.462877796 ubox
22 73 0.876772210 ubox
22 76 0.042634635 ubox
22 129 0.003290831 ubox
23 69 0.093147303 ubox
23 70 0.458969993 ubox
23 72 0.879436079 ubox
23 75 0.042769014 ubox
23 128 0.003283776 ubox
24 67 0.056048102 ubox
24 68 0.102838397 ubox
24 71 0.854621921 ubox
24 74 0.042553528 ubox
25 66 0.098793541 ubox
25 67 0.105189218 ubox
25 68 0.755210697 ubox
25 73 0.041903742 ubox
25 74 0.003531086 ubox
25 125 0.003282878 ubox
26 65 0.100278705 ubox
26 66 0.086212550 ubox
26 67 0.735954858 ubox
26 68 0.534906928 ubox
26 73 0.003269568 ubox
26 124 0.003285356 ubox
27 64 0.099942310 ubox
27 66 0.735608546 ubox
27 67 0.607033339 ubox
27 68 0.254848186 ubox
27 123 0.003271653 ubox
28 66 0.607462547 ubox
28 67 0.252478975 ubox
30 63 0.998970366 ubox
30 70 0.036370688 ubox
31 60 0.004135385 ubox
31 62 0.999294032 ubox
31 69 0.036373372 ubox
32 59 0.005019246 ubox
32 61 0.998745071 ubox
32 67 0.019990470 ubox
32 68 0.030456040 ubox
33 66 0.028198025 ubox
33 67 0.022655993 ubox
34 65 0.034751580 ubox
34 66 0.010194518 ubox
35 59 0.446538042 ubox
35 64 0.036029589 ubox
36 58 0.397695711 ubox
36 60 0.005905534 ubox
36 63 0.035957747 ubox
37 56 0.991875817 ubox
38 55 0.999833957 ubox
39 54 0.999949275 ubox
40 53 0.999789067 ubox
41 52 0.998815550 ubox
43 51 0.998588460 ubox
43 52 0.010870165 ubox
44 50 0.999250041 ubox
44 51 0.013107959 ubox
45 49 0.809827591 ubox
64 85 0.008805020 ubox
65 84 0.008813443 ubox
66 83 0.008803838 ubox
67 82 0.008766049 ubox
68 75 0.006261677 ubox
69 74 0.006267131 ubox
71 130 0.004559706 ubox
72 129 0.005422880 ubox
73 128 0.005470322 ubox
73 131 0.005205684 ubox
74 92 0.010688601 ubox
74 127 0.005417261 ubox
74 130 0.008817055 ubox
75 91 0.010953507 ubox
75 129 0.009149377 ubox
76 82 0.004650499 ubox
76 90 0.011380571 ubox
76 128 0.009278468 ubox
77 81 0.004202339 ubox
77 89 0.011362725 ubox
77 124 0.004856899 ubox
78 88 0.011351354 ubox
78 123 0.004797187 ubox
79 86 0.015766460 ubox
79 129 0.006886398 ubox
80 85 0.022301814 ubox
80 90 0.005517419 ubox
80 127 0.041514038 ubox
80 128 0.013872226 ubox
80 131 0.008293315 ubox
81 92 0.013601504 ubox
81 126 0.091600538 ubox
81 130 0.047337449 ubox
82 89 0.068111341 ubox
82 91 0.013699282 ubox
82 125 0.071368855 ubox
82 129 0.050008406 ubox
83 88 0.070081693 ubox
83 89 0.010845725 ubox
83 125 0.396385368 ubox
84 88 0.009833898 ubox
84 124 0.413381845 ubox
85 123 0.404268255 ubox
86 126 0.026963990 ubox
86 130 0.009694029 ubox
87 119 0.028115112 ubox
87 123 0.265823304 ubox
87 125 0.022338974 ubox
87 129 0.009460316 ubox
88 98 0.004821830 ubox
88 118 0.033382621 ubox
88 122 0.994919118 ubox
88 128 0.007987792 ubox
89 97 0.004831839 ubox
89 117 0.033373049 ubox
89 121 0.996731632 ubox
89 127 0.007742061 ubox
90 96 0.004832783 ubox
90 120 0.996570428 ubox
90 123 0.005117727 ubox
90 125 0.006015382 ubox
91 121 0.018534651 ubox
91 122 0.004819697 ubox
92 120 0.018688318 ubox
94 116 0.997831138 ubox
95 115 0.999687235 ubox
96 114 0.999977112 ubox
97 113 0.999980986 ubox
98 112 0.999924836 ubox
99 111 0.985243369 ubox
101 108 0.595105506 ubox
101 110 0.802796930 ubox
102 107 0.594385560 ubox
102 109 0.802274140 ubox
112 122 0.004443020 ubox
113 121 0.004448548 ubox
114 120 0.004447400 ubox
115 119 0.004006785 ubox
122 129 0.008669259 ubox
123 128 0.035244226 ubox
123 131 0.016635140 ubox
124 130 0.019313755 ubox
124 131 0.008860202 ubox
125 130 0.008077997 ubox
8 129 0.9500000 lbox
9 128 0.9500000 lbox
10 127 0.9500000 lbox
12 125 0.9500000 lbox
13 124 0.9500000 lbox
14 123 0.9500000 lbox
15 80 0.9500000 lbox
16 79 0.9500000 lbox
17 78 0.9500000 lbox
18 77 0.9500000 lbox
19 75 0.9500000 lbox
20 74 0.9500000 lbox
22 73 0.9500000 lbox
23 72 0.9500000 lbox
24 71 0.9500000 lbox
25 68 0.9500000 lbox
26 67 0.9500000 lbox
27 66 0.9500000 lbox
30 63 0.9500000 lbox
31 62 0.9500000 lbox
32 61 0.9500000 lbox
37 56 0.9500000 lbox
38 55 0.9500000 lbox
39 54 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
45 49 0.9500000 lbox
88 122 0.9500000 lbox
89 121 0.9500000 lbox
90 120 0.9500000 lbox
94 116 0.9500000 lbox
95 115 0.9500000 lbox
96 114 0.9500000 lbox
97 113 0.9500000 lbox
98 112 0.9500000 lbox
99 111 0.9500000 lbox
101 110 0.9500000 lbox
102 109 0.9500000 lbox
showpage
end
%%EOF
