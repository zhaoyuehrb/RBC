%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DNAAF2)
} def

/sequence { (\
CCCAGAAACUCUGAGGCGGAUCCCCCAACCCAGUGUCAGACUGAUCGCCUUUGGCCCGAGGGCGAGGAGCCACAGGACAGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.262434749 ubox
1 19 0.007582558 ubox
1 67 0.069516320 ubox
1 76 0.115766139 ubox
2 15 0.266199500 ubox
2 16 0.008670610 ubox
2 18 0.007596495 ubox
2 54 0.008495276 ubox
2 66 0.069649665 ubox
2 67 0.041712283 ubox
2 75 0.115765379 ubox
2 76 0.135699437 ubox
3 13 0.354367889 ubox
3 15 0.007973444 ubox
3 43 0.397827148 ubox
3 53 0.008571625 ubox
3 66 0.041309416 ubox
3 75 0.135337700 ubox
4 10 0.034258342 ubox
4 12 0.355208627 ubox
4 42 0.398782618 ubox
4 52 0.008464426 ubox
5 9 0.040872063 ubox
5 11 0.355283207 ubox
5 37 0.029259538 ubox
5 41 0.398544054 ubox
5 46 0.079178120 ubox
5 51 0.005446130 ubox
6 10 0.309133866 ubox
6 36 0.026718792 ubox
6 45 0.077786373 ubox
6 50 0.004024905 ubox
8 34 0.007640445 ubox
8 36 0.078776220 ubox
8 81 0.191581121 ubox
9 33 0.007343969 ubox
9 35 0.083024133 ubox
9 39 0.008772517 ubox
9 54 0.006342972 ubox
9 66 0.003343823 ubox
9 69 0.050989697 ubox
9 75 0.014057346 ubox
9 76 0.187055707 ubox
9 80 0.212522109 ubox
10 20 0.004987790 ubox
10 32 0.006207606 ubox
10 38 0.007887459 ubox
10 40 0.497454287 ubox
10 53 0.005356228 ubox
10 54 0.008105456 ubox
10 68 0.051018610 ubox
10 74 0.011205527 ubox
10 75 0.022853530 ubox
10 76 0.587920153 ubox
10 77 0.094179204 ubox
10 79 0.177695343 ubox
11 19 0.005317190 ubox
11 33 0.095837610 ubox
11 39 0.534579335 ubox
11 53 0.011280445 ubox
11 67 0.050807666 ubox
11 75 0.750382604 ubox
11 76 0.091212375 ubox
11 80 0.016158902 ubox
12 18 0.005302767 ubox
12 27 0.007827580 ubox
12 32 0.096293313 ubox
12 38 0.534726632 ubox
12 66 0.046497246 ubox
12 72 0.003928348 ubox
12 74 0.753119498 ubox
12 75 0.075553453 ubox
12 79 0.016324778 ubox
13 17 0.005264611 ubox
13 22 0.003165046 ubox
13 26 0.010378289 ubox
13 31 0.096414902 ubox
13 37 0.534928628 ubox
13 51 0.022064372 ubox
13 73 0.751971633 ubox
13 78 0.016272146 ubox
14 21 0.003182531 ubox
14 36 0.534158040 ubox
14 50 0.047642194 ubox
15 23 0.007647279 ubox
15 24 0.014404708 ubox
15 25 0.008279196 ubox
15 26 0.091444567 ubox
15 30 0.109635125 ubox
15 31 0.026595109 ubox
15 37 0.005483830 ubox
15 49 0.050095620 ubox
15 71 0.782141025 ubox
16 22 0.007626928 ubox
16 23 0.014336703 ubox
16 24 0.008211169 ubox
16 25 0.091508697 ubox
16 29 0.109625368 ubox
16 30 0.026668148 ubox
16 34 0.532612568 ubox
16 36 0.005679754 ubox
16 48 0.050186252 ubox
16 70 0.783106810 ubox
16 81 0.008361422 ubox
17 33 0.533400782 ubox
17 35 0.005857382 ubox
17 43 0.004016382 ubox
17 47 0.050540707 ubox
17 69 0.782345347 ubox
17 80 0.013007999 ubox
18 24 0.163484156 ubox
18 25 0.372479792 ubox
18 26 0.467166898 ubox
18 30 0.180174158 ubox
18 31 0.485386362 ubox
18 34 0.004106500 ubox
18 42 0.004531315 ubox
18 46 0.039293595 ubox
18 71 0.251809294 ubox
19 23 0.161207494 ubox
19 24 0.372790863 ubox
19 25 0.466437980 ubox
19 29 0.181058484 ubox
19 30 0.486211142 ubox
19 41 0.004615903 ubox
19 45 0.027982021 ubox
19 46 0.027971938 ubox
19 70 0.250776605 ubox
20 45 0.036698828 ubox
21 40 0.005094921 ubox
21 44 0.039378664 ubox
21 65 0.054189082 ubox
21 67 0.028145516 ubox
21 68 0.529114695 ubox
21 77 0.018858780 ubox
22 39 0.005176971 ubox
22 43 0.032499449 ubox
22 64 0.053409252 ubox
22 66 0.031960425 ubox
22 67 0.541801845 ubox
22 76 0.020362570 ubox
23 62 0.029876252 ubox
23 66 0.540015111 ubox
23 67 0.047154966 ubox
23 75 0.020303048 ubox
23 76 0.007302396 ubox
24 61 0.029825466 ubox
24 62 0.040048944 ubox
24 66 0.053334829 ubox
24 67 0.027127763 ubox
24 75 0.007350836 ubox
24 76 0.006358016 ubox
25 60 0.029697661 ubox
25 61 0.040114651 ubox
25 66 0.027585954 ubox
25 67 0.057044211 ubox
25 75 0.006351947 ubox
25 76 0.010181207 ubox
26 35 0.012596145 ubox
26 43 0.006012387 ubox
26 60 0.040110399 ubox
26 66 0.058085200 ubox
26 75 0.010233781 ubox
27 34 0.011469457 ubox
27 42 0.004956424 ubox
28 34 0.011227088 ubox
28 36 0.011674611 ubox
28 81 0.010687998 ubox
29 33 0.011731546 ubox
29 35 0.012249620 ubox
29 54 0.004379678 ubox
29 67 0.106602898 ubox
29 76 0.018375523 ubox
29 80 0.011838907 ubox
30 53 0.004344315 ubox
30 54 0.018427919 ubox
30 66 0.106838781 ubox
30 67 0.020686478 ubox
30 75 0.018334872 ubox
30 76 0.055613346 ubox
31 43 0.830504113 ubox
31 53 0.018470147 ubox
31 66 0.018122638 ubox
31 75 0.055679466 ubox
32 42 0.833046558 ubox
32 52 0.018101390 ubox
33 41 0.833468490 ubox
33 48 0.018896027 ubox
33 51 0.005797221 ubox
33 73 0.056444035 ubox
33 78 0.005197709 ubox
33 81 0.004991400 ubox
34 40 0.829740640 ubox
34 47 0.019289281 ubox
34 72 0.056626587 ubox
34 74 0.015050725 ubox
34 77 0.005109730 ubox
34 79 0.062161185 ubox
35 41 0.007718641 ubox
35 45 0.022188227 ubox
35 46 0.019322129 ubox
35 70 0.005663499 ubox
35 71 0.056177283 ubox
35 73 0.016176231 ubox
35 78 0.069070762 ubox
36 40 0.007400403 ubox
36 44 0.036426045 ubox
36 68 0.004610740 ubox
36 69 0.006257518 ubox
36 72 0.015741148 ubox
36 77 0.069065969 ubox
37 43 0.038064582 ubox
37 67 0.004788595 ubox
37 75 0.004123405 ubox
37 76 0.068975367 ubox
38 42 0.030856110 ubox
39 46 0.006881649 ubox
40 45 0.006157845 ubox
40 81 0.154882695 ubox
41 66 0.016521585 ubox
41 67 0.035999975 ubox
41 69 0.232972926 ubox
41 75 0.064408312 ubox
41 76 0.013044522 ubox
41 80 0.230700667 ubox
42 65 0.010184314 ubox
42 66 0.034322062 ubox
42 68 0.232548367 ubox
42 72 0.008540691 ubox
42 74 0.064673776 ubox
42 75 0.012891083 ubox
42 79 0.231265356 ubox
43 71 0.009131704 ubox
43 73 0.064270947 ubox
43 78 0.228624131 ubox
44 81 0.030898691 ubox
45 59 0.018002320 ubox
45 65 0.825307299 ubox
45 67 0.004901704 ubox
45 68 0.008031005 ubox
45 76 0.018763186 ubox
45 77 0.110932769 ubox
45 80 0.028762685 ubox
46 58 0.019137112 ubox
46 64 0.878270237 ubox
46 66 0.004381115 ubox
46 67 0.007087324 ubox
46 75 0.021021429 ubox
46 76 0.075838015 ubox
47 55 0.060538518 ubox
47 57 0.008564113 ubox
47 63 0.879606655 ubox
47 70 0.075542882 ubox
47 81 0.006594468 ubox
48 54 0.061144005 ubox
48 61 0.008937121 ubox
48 62 0.879575686 ubox
48 67 0.031340511 ubox
48 69 0.075534918 ubox
48 76 0.452997305 ubox
48 80 0.005401835 ubox
49 53 0.060705817 ubox
49 60 0.012611059 ubox
49 61 0.879521811 ubox
49 66 0.031458783 ubox
49 67 0.069752667 ubox
49 69 0.006083558 ubox
49 75 0.458169351 ubox
49 76 0.025674483 ubox
50 59 0.015273187 ubox
50 60 0.878511196 ubox
50 65 0.030120181 ubox
50 66 0.068986698 ubox
50 67 0.032729329 ubox
50 68 0.007128772 ubox
50 74 0.447992409 ubox
50 75 0.025969319 ubox
51 58 0.014981165 ubox
51 59 0.877708229 ubox
51 60 0.014893296 ubox
51 64 0.027063253 ubox
51 65 0.068406276 ubox
51 66 0.035946167 ubox
51 67 0.006161967 ubox
51 74 0.026678038 ubox
51 80 0.018045603 ubox
52 58 0.875352176 ubox
52 59 0.020772291 ubox
52 64 0.067130782 ubox
52 65 0.038283275 ubox
52 66 0.004791530 ubox
52 72 0.458493461 ubox
52 79 0.024299101 ubox
53 57 0.834210653 ubox
53 63 0.061261980 ubox
53 71 0.462364219 ubox
53 78 0.025176778 ubox
54 63 0.058621577 ubox
54 70 0.462377094 ubox
55 61 0.054375459 ubox
55 62 0.065104684 ubox
55 67 0.008951186 ubox
55 69 0.462241801 ubox
55 76 0.010863228 ubox
56 60 0.053993720 ubox
56 61 0.065078852 ubox
56 62 0.003483154 ubox
56 66 0.013171082 ubox
56 67 0.462044196 ubox
56 75 0.010885950 ubox
56 76 0.050593301 ubox
57 61 0.003526043 ubox
57 64 0.017464561 ubox
57 66 0.461973432 ubox
57 75 0.050795869 ubox
58 63 0.026056489 ubox
61 71 0.052389854 ubox
62 70 0.052422928 ubox
63 69 0.052423703 ubox
69 81 0.012889650 ubox
70 76 0.119235060 ubox
70 80 0.014478475 ubox
71 75 0.118788339 ubox
72 81 0.080646137 ubox
73 80 0.089452030 ubox
3 43 0.9500000 lbox
4 42 0.9500000 lbox
5 41 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
48 76 0.9500000 lbox
49 75 0.9500000 lbox
50 74 0.9500000 lbox
52 72 0.9500000 lbox
53 71 0.9500000 lbox
54 70 0.9500000 lbox
55 69 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
showpage
end
%%EOF
