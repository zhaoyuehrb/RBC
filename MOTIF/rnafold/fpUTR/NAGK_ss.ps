%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:49:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCACGCGCAACCUAACGCGGGACUGCCAGCAACUUCCGGGCGUUUACAGGCAGGCAGGUCAGUGAUGUGUCCUAAGGGUCCGACCGACCUAGAUACCCCUCUUUGAUUCCUCCUCUUGGGAUUAGUGUCCAUCUCUGGAAGCAGGAUCCAGGAGGACGGGAGGGGCCGCUGCGGACCGCAGUCGCUCCACCUGGAGGAGACACCAGAAGGAAGACAGCCUGAGGGACGCAGCCAUCCCCGGCUCCUACCGGCG\
CCCCGCCCCGCGC\
) } def
/len { sequence length } bind def

/coor [
[74.34270477 271.31082153]
[72.42100525 286.18722534]
[70.49930573 301.06359863]
[77.30778503 315.98260498]
[67.57272339 329.17959595]
[51.30870819 327.07864380]
[45.24677277 311.84103394]
[55.62290955 299.14190674]
[57.54461288 284.26550293]
[59.46631622 269.38912964]
[52.29255676 264.79193115]
[46.95786667 258.09283447]
[44.05424118 249.99038696]
[43.91829300 241.34115601]
[46.59248352 233.06904602]
[51.81757736 226.06674194]
[59.05754089 221.09931946]
[67.55441284 218.72065735]
[70.34104156 203.98178101]
[73.12766266 189.24288940]
[75.91429138 174.50401306]
[78.70091248 159.76512146]
[81.48754120 145.02624512]
[66.32022095 129.71479797]
[60.29268265 110.78243256]
[47.82672501 119.12508392]
[35.36076736 127.46774292]
[22.89480972 135.81039429]
[10.42885208 144.15304565]
[3.26333618 158.25857544]
[-11.61714840 158.90701294]
[-24.08310509 167.24966431]
[-36.30020523 175.95268250]
[-48.25803375 185.00863647]
[-60.21585846 194.06459045]
[-59.77317810 209.57534790]
[-68.55980682 222.36499023]
[-83.19710541 227.51562500]
[-98.05673981 223.04673767]
[-107.42487335 210.67669678]
[-107.69926453 195.16204834]
[-98.77440643 182.46849060]
[-84.08209991 177.47694397]
[-69.27182007 182.10676575]
[-57.31399155 173.05081177]
[-45.35616302 163.99484253]
[-59.69221497 159.58149719]
[-65.29160309 145.66580200]
[-58.00770569 132.55302429]
[-43.23461151 129.95385742]
[-31.91254807 139.79310608]
[-32.42576218 154.78370667]
[-19.95980263 146.44105530]
[-13.68593597 132.93223572]
[2.08619738 131.68708801]
[14.55215549 123.34443665]
[27.01811409 115.00178528]
[39.48406982 106.65912628]
[51.95003128 98.31647491]
[50.55061340 83.38189697]
[36.75180054 77.50032806]
[22.95299149 71.61876678]
[9.15417957 65.73719788]
[-4.64463091 59.85563660]
[-20.37352562 61.56222916]
[-29.04777718 49.45410919]
[-42.84658813 43.57254410]
[-62.75668716 46.86901474]
[-73.62779999 30.85393906]
[-87.56021118 25.29625511]
[-101.49263000 19.73857117]
[-115.42504120 14.18088722]
[-129.35745239 8.62320423]
[-137.39413452 13.43432426]
[-146.60498047 14.02070141]
[-154.93540955 10.37738895]
[-160.58464050 3.42903113]
[-162.39476013 -5.20106554]
[-176.12393188 -11.24337959]
[-189.85311890 -17.28569221]
[-203.58230591 -23.32800674]
[-217.31149292 -29.37032127]
[-232.72506714 -24.92046547]
[-245.73046875 -34.31402969]
[-246.35105896 -50.34507751]
[-234.11077881 -60.71595764]
[-218.39932251 -57.47101974]
[-211.26916504 -43.09950256]
[-197.53999329 -37.05718994]
[-183.81080627 -31.01487541]
[-170.08161926 -24.97256088]
[-156.35244751 -18.93024826]
[-136.08001709 -22.89779472]
[-123.79977417 -5.30920982]
[-109.86735535 0.24847391]
[-95.93494415 5.80615759]
[-82.00253296 11.36384106]
[-68.07011414 16.92152405]
[-59.12326431 12.07456684]
[-48.76583862 12.95215893]
[-40.41712952 19.50570488]
[-36.96502304 29.77373123]
[-23.16621208 35.65529633]
[-8.42430115 33.52801132]
[1.23693419 46.05682373]
[15.03574562 51.93838882]
[28.83455658 57.81995392]
[42.63336945 63.70151901]
[56.43217850 69.58308411]
[69.08958435 61.53385544]
[69.61502075 46.54306030]
[70.14045715 31.55226517]
[70.57835388 16.55865860]
[70.92868042 1.56274962]
[71.27901459 -13.43315887]
[71.62934875 -28.42906761]
[71.97967529 -43.42497635]
[72.33000946 -58.42088318]
[72.68034363 -73.41679382]
[73.03067017 -88.41269684]
[73.38100433 -103.40860748]
[70.46089172 -112.02584839]
[73.82401276 -118.57732391]
[74.34944916 -133.56811523]
[74.87488556 -148.55891418]
[65.86227417 -164.63526917]
[75.77849579 -179.13208008]
[76.12882996 -194.12799072]
[68.71594238 -208.10510254]
[76.74839020 -220.64820862]
[77.09871674 -235.64410400]
[77.44905090 -250.64001465]
[77.79938507 -265.63592529]
[69.46324158 -279.75827026]
[77.76000977 -293.90380859]
[94.15467834 -293.52078247]
[101.78182983 -279.00326538]
[92.79528809 -265.28558350]
[92.44496155 -250.28968811]
[92.09462738 -235.29377747]
[91.74429321 -220.29786682]
[99.18223572 -207.39335632]
[91.12473297 -193.77766418]
[90.77440643 -178.78175354]
[98.88599396 -169.83764648]
[98.73807526 -157.36363220]
[89.86567688 -148.03347778]
[89.34024048 -133.04267883]
[88.81480408 -118.05188751]
[88.37691498 -103.05828094]
[88.02658081 -88.06237030]
[87.67624664 -73.06645966]
[87.32592010 -58.07055283]
[86.97558594 -43.07464218]
[86.62525177 -28.07873535]
[86.27492523 -13.08282757]
[85.92459106 1.91308117]
[85.57425690 16.90898895]
[88.54929352 23.64557266]
[85.13125610 32.07770157]
[84.60581207 47.06849670]
[84.08037567 62.05929184]
[128.43002319 65.22888184]
[147.73904419 109.54238892]
[162.73674011 109.80514526]
[177.73443604 110.06790161]
[192.73214722 110.33066559]
[205.11080933 97.94627380]
[222.27777100 98.35586548]
[233.59657288 110.81594849]
[248.59632874 110.90354156]
[263.59606934 110.99113464]
[278.59582520 111.07872009]
[293.59555054 111.16631317]
[308.59530640 111.25390625]
[319.79183960 100.42454529]
[335.00247192 100.72705078]
[345.25762939 111.46799469]
[360.25735474 111.55558014]
[375.25506592 111.29282379]
[390.24252319 110.67985535]
[403.71499634 102.38508606]
[416.74780273 109.59583282]
[431.73529053 108.98286438]
[446.72274780 108.36989594]
[456.00094604 99.44316864]
[468.47387695 99.22241974]
[477.46520996 107.28163910]
[492.45880127 106.84375000]
[507.45242310 106.40585327]
[518.26275635 95.19094086]
[533.47467041 94.96044159]
[544.09973145 105.33556366]
[559.09332275 104.89766693]
[574.08697510 104.45977783]
[589.08056641 104.02188873]
[597.71936035 91.13194275]
[612.29638672 85.81313324]
[627.20648193 90.11065674]
[636.71643066 102.37202454]
[637.16937256 117.88248444]
[628.39129639 130.67794800]
[613.75738525 135.83831787]
[598.89477539 131.37930298]
[589.51843262 119.01549530]
[574.52484131 119.45338440]
[559.53125000 119.89128113]
[544.53759766 120.32917023]
[534.53613281 131.30668640]
[519.33673096 131.96437073]
[507.89031982 121.39946747]
[492.89669800 121.83735657]
[477.90310669 122.27524567]
[463.46444702 132.27595520]
[447.33572388 123.35736847]
[432.34823608 123.97033691]
[417.36077881 124.58329773]
[404.96032715 132.83422852]
[390.85549927 125.66732788]
[375.86801147 126.28029633]
[373.88168335 128.21102905]
[371.02407837 129.48539734]
[367.53649902 129.77250671]
[363.77371216 128.83300781]
[360.16976929 126.55532837]
[345.17001343 126.46773529]
[334.79016113 137.08818054]
[319.57702637 137.21302795]
[308.50772095 126.25364685]
[293.50796509 126.16605377]
[278.50820923 126.07846832]
[263.50848389 125.99087524]
[248.50872803 125.90328979]
[233.50898743 125.81569672]
[225.71833801 136.05340576]
[213.27099609 140.00404358]
[200.63157654 136.01608276]
[192.46937561 125.32836151]
[177.47167969 125.06560516]
[162.47398376 124.80284119]
[147.47628784 124.54008484]
[139.42706299 137.19749451]
[146.02536011 150.66828918]
[152.62365723 164.13908386]
[165.64268494 173.12884521]
[164.29272461 187.96214294]
[170.89103699 201.43293762]
[184.79638672 210.12620544]
[183.95014954 226.50350952]
[169.22283936 233.71726990]
[155.76466370 224.34660339]
[157.42022705 208.03125000]
[150.82192993 194.56044006]
[138.27485657 186.53421021]
[139.15286255 170.73738098]
[132.55456543 157.26658630]
[125.95626068 143.79579163]
[118.52379608 144.80006409]
[120.53210449 159.66500854]
[105.66712952 161.67308044]
[103.65888214 146.80859375]
[96.22642517 147.81286621]
[93.43979645 162.55175781]
[90.65317535 177.29063416]
[87.86654663 192.02952576]
[85.07992554 206.76840210]
[82.29329681 221.50729370]
[95.85716248 238.62718201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[18 267]
[19 266]
[20 265]
[21 264]
[22 263]
[23 262]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[31 53]
[32 52]
[33 46]
[34 45]
[35 44]
[60 109]
[61 108]
[62 107]
[63 106]
[64 105]
[66 103]
[67 102]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[110 162]
[111 161]
[112 160]
[113 158]
[114 157]
[115 156]
[116 155]
[117 154]
[118 153]
[119 152]
[120 151]
[121 150]
[123 149]
[124 148]
[125 147]
[127 144]
[128 143]
[130 141]
[131 140]
[132 139]
[133 138]
[164 241]
[165 240]
[166 239]
[167 238]
[170 234]
[171 233]
[172 232]
[173 231]
[174 230]
[175 229]
[178 226]
[179 225]
[180 220]
[181 219]
[183 217]
[184 216]
[185 215]
[188 213]
[189 212]
[190 211]
[193 208]
[194 207]
[195 206]
[196 205]
[242 257]
[243 256]
[244 255]
[246 253]
[247 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
