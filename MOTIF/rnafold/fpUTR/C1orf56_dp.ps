%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C1orf56)
} def

/sequence { (\
GGCCUCGGUUCAAACGACCCGGUGGGUCUACAGCGGAAGGGAGGGAGCGAAGGUAGGAGGCAGGGCUUGCCUCACUGGCCACCCUCCCAACCCCAAGAGCCCAGCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.006139948 ubox
1 11 0.004968354 ubox
1 19 0.032333963 ubox
1 20 0.082990182 ubox
1 28 0.009966488 ubox
1 101 0.063137458 ubox
1 102 0.030453306 ubox
1 106 0.885772200 ubox
1 107 0.430530138 ubox
1 108 0.055162489 ubox
2 9 0.009892828 ubox
2 10 0.003532642 ubox
2 18 0.032470454 ubox
2 19 0.082830818 ubox
2 23 0.022212522 ubox
2 27 0.010057384 ubox
2 100 0.063627196 ubox
2 101 0.029792728 ubox
2 105 0.889564887 ubox
2 106 0.429600620 ubox
2 107 0.054654456 ubox
3 8 0.010717336 ubox
3 22 0.025682837 ubox
3 26 0.010062618 ubox
3 99 0.062031765 ubox
3 104 0.760832951 ubox
4 21 0.025962874 ubox
4 22 0.055340277 ubox
4 24 0.003329453 ubox
4 25 0.010018432 ubox
4 97 0.058961835 ubox
4 99 0.037419688 ubox
4 104 0.630328590 ubox
5 17 0.090792888 ubox
5 21 0.030538916 ubox
5 22 0.131782577 ubox
5 24 0.008113972 ubox
5 37 0.005756718 ubox
5 96 0.057924906 ubox
5 98 0.040473839 ubox
5 103 0.772416722 ubox
6 16 0.093558658 ubox
6 21 0.174450201 ubox
6 36 0.006459808 ubox
6 97 0.040394597 ubox
7 15 0.093595860 ubox
7 19 0.064813409 ubox
7 20 0.176639043 ubox
7 92 0.042505190 ubox
7 93 0.009053810 ubox
7 94 0.049169297 ubox
7 101 0.971973869 ubox
7 102 0.059698705 ubox
8 15 0.013475393 ubox
8 18 0.067851798 ubox
8 19 0.175557370 ubox
8 34 0.011014478 ubox
8 91 0.042594457 ubox
8 92 0.008586109 ubox
8 93 0.048721882 ubox
8 100 0.974025727 ubox
8 101 0.042963820 ubox
9 14 0.013721905 ubox
9 17 0.066192071 ubox
9 33 0.011024921 ubox
9 38 0.004572073 ubox
9 90 0.042006234 ubox
9 98 0.003600089 ubox
9 99 0.974404017 ubox
10 16 0.059720029 ubox
10 17 0.173430572 ubox
10 32 0.009816869 ubox
10 36 0.003229912 ubox
10 37 0.005761916 ubox
10 89 0.036214417 ubox
10 97 0.003867447 ubox
10 98 0.973842801 ubox
11 16 0.177778301 ubox
11 35 0.003605258 ubox
11 36 0.006013547 ubox
11 97 0.973173777 ubox
14 23 0.005627291 ubox
15 21 0.004208425 ubox
15 22 0.006089631 ubox
15 35 0.011547657 ubox
16 20 0.004192372 ubox
16 28 0.860691623 ubox
16 34 0.007001304 ubox
17 27 0.861902024 ubox
18 25 0.005757857 ubox
18 26 0.862030677 ubox
18 36 0.021630136 ubox
19 24 0.007220896 ubox
19 25 0.861858283 ubox
19 26 0.017484831 ubox
19 35 0.015447913 ubox
19 36 0.458987897 ubox
20 24 0.855588722 ubox
20 25 0.023757191 ubox
20 35 0.460436403 ubox
21 34 0.460735358 ubox
21 106 0.101453672 ubox
21 107 0.022736019 ubox
21 108 0.007845381 ubox
22 31 0.007617954 ubox
22 34 0.003593516 ubox
22 105 0.102375040 ubox
22 106 0.022382905 ubox
22 107 0.008053190 ubox
23 30 0.007626023 ubox
23 32 0.460153770 ubox
23 95 0.004442604 ubox
23 103 0.181886097 ubox
23 104 0.060925777 ubox
24 29 0.007016329 ubox
24 31 0.460648446 ubox
24 93 0.003903776 ubox
24 94 0.005747246 ubox
24 101 0.020429161 ubox
24 102 0.207911205 ubox
24 107 0.009656288 ubox
24 108 0.003250966 ubox
25 92 0.003949804 ubox
25 93 0.005728583 ubox
25 100 0.020810220 ubox
25 101 0.208012809 ubox
25 102 0.009019215 ubox
25 106 0.009694626 ubox
25 107 0.003283599 ubox
26 91 0.003973237 ubox
26 92 0.005436110 ubox
26 100 0.207932741 ubox
26 101 0.009049375 ubox
26 105 0.009699629 ubox
26 106 0.003274692 ubox
27 37 0.009316020 ubox
27 90 0.003371367 ubox
27 98 0.100143669 ubox
27 99 0.097683340 ubox
27 104 0.007232049 ubox
28 35 0.005574381 ubox
28 36 0.012916733 ubox
28 97 0.117062673 ubox
28 99 0.154607466 ubox
28 104 0.007062354 ubox
29 35 0.016818650 ubox
29 38 0.015302998 ubox
29 96 0.114071580 ubox
29 98 0.154654770 ubox
29 103 0.006838843 ubox
33 100 0.012669047 ubox
34 99 0.012705716 ubox
35 92 0.753537498 ubox
35 93 0.260038620 ubox
35 94 0.260131850 ubox
36 91 0.755278529 ubox
36 92 0.258290137 ubox
36 93 0.258920974 ubox
39 88 0.910613211 ubox
39 92 0.186341052 ubox
39 93 0.180726664 ubox
39 94 0.317540596 ubox
40 87 0.911476259 ubox
40 88 0.005138113 ubox
40 91 0.187235238 ubox
40 92 0.181800679 ubox
40 93 0.317626930 ubox
40 94 0.006069778 ubox
41 86 0.911487212 ubox
41 87 0.003659975 ubox
41 91 0.181864068 ubox
41 92 0.317215873 ubox
41 93 0.006000948 ubox
42 85 0.911362499 ubox
43 83 0.020035802 ubox
43 84 0.911263672 ubox
43 88 0.410900658 ubox
44 82 0.028277881 ubox
44 83 0.911038540 ubox
44 84 0.004049286 ubox
44 87 0.411219789 ubox
44 88 0.006907100 ubox
45 82 0.909703678 ubox
45 83 0.005420129 ubox
45 86 0.411245299 ubox
45 87 0.005231307 ubox
46 76 0.025542894 ubox
46 85 0.411149901 ubox
47 54 0.038941011 ubox
47 75 0.025693021 ubox
47 79 0.553764273 ubox
47 84 0.409865776 ubox
48 53 0.042673130 ubox
48 77 0.025391467 ubox
48 78 0.553598652 ubox
49 73 0.030686874 ubox
49 76 0.017556989 ubox
50 72 0.021677806 ubox
51 72 0.044366204 ubox
51 76 0.133824003 ubox
52 71 0.050336536 ubox
52 75 0.127499973 ubox
52 76 0.393134638 ubox
52 80 0.800726986 ubox
52 83 0.027460326 ubox
53 70 0.050346644 ubox
53 75 0.414961271 ubox
53 79 0.801572790 ubox
53 82 0.027464196 ubox
54 69 0.050319311 ubox
54 74 0.391494813 ubox
54 77 0.649248076 ubox
54 78 0.601712146 ubox
54 81 0.023935372 ubox
55 68 0.049834063 ubox
55 72 0.078454788 ubox
55 76 0.840054259 ubox
56 67 0.049359937 ubox
56 71 0.078962811 ubox
56 73 0.073747718 ubox
56 75 0.862798979 ubox
56 76 0.029052617 ubox
56 80 0.003740866 ubox
57 66 0.049270479 ubox
57 68 0.004322924 ubox
57 70 0.078867141 ubox
57 72 0.032009021 ubox
57 73 0.990826853 ubox
57 75 0.018907582 ubox
58 67 0.006798583 ubox
58 68 0.077721235 ubox
58 72 0.994794889 ubox
59 66 0.007206083 ubox
59 67 0.078973242 ubox
59 68 0.003502538 ubox
59 71 0.995583377 ubox
60 66 0.079218804 ubox
60 70 0.995592777 ubox
61 65 0.078663588 ubox
61 69 0.995559489 ubox
62 68 0.968549431 ubox
63 67 0.657150015 ubox
99 105 0.003327506 ubox
100 104 0.003312188 ubox
1 106 0.9500000 lbox
2 105 0.9500000 lbox
3 104 0.9500000 lbox
7 101 0.9500000 lbox
8 100 0.9500000 lbox
9 99 0.9500000 lbox
10 98 0.9500000 lbox
11 97 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
20 24 0.9500000 lbox
35 92 0.9500000 lbox
36 91 0.9500000 lbox
39 88 0.9500000 lbox
40 87 0.9500000 lbox
41 86 0.9500000 lbox
42 85 0.9500000 lbox
43 84 0.9500000 lbox
44 83 0.9500000 lbox
45 82 0.9500000 lbox
52 80 0.9500000 lbox
53 79 0.9500000 lbox
54 78 0.9500000 lbox
55 76 0.9500000 lbox
56 75 0.9500000 lbox
57 73 0.9500000 lbox
58 72 0.9500000 lbox
59 71 0.9500000 lbox
60 70 0.9500000 lbox
61 69 0.9500000 lbox
62 68 0.9500000 lbox
showpage
end
%%EOF
