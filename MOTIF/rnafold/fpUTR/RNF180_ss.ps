%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACCGGCAUCGCCGCCGCCGGAGCCGCAGCGAGUCCUCAGAGCCUGGCUGCUGGCGGCCGGGAGCGCCGGGACGGGGCGCGAAGCCGGAGGCUCCGGGACGUGGAUACAG\
) } def
/len { sequence length } bind def

/coor [
[193.22218323 200.16352844]
[190.28582764 187.78575134]
[190.46252441 175.05447388]
[193.74705505 162.74133301]
[180.82736206 155.12019348]
[167.90766907 147.49906921]
[154.98797607 139.87794495]
[142.06829834 132.25680542]
[124.60144043 133.10324097]
[115.55284882 117.14250183]
[102.42449951 109.88671875]
[94.28341675 109.02837372]
[89.03385162 102.23886871]
[76.11415863 94.61774445]
[63.19446945 86.99661255]
[50.16916656 79.55742645]
[37.04081726 72.30164337]
[23.91246605 65.04586029]
[10.78411388 57.79007339]
[-2.34423709 50.53429031]
[-15.47258854 43.27850723]
[-28.60094070 36.02272415]
[-41.82975769 28.95177269]
[-55.15644455 22.06704521]
[-68.48313141 15.18231678]
[-81.80981445 8.29758835]
[-95.13649750 1.41286051]
[-107.73577118 4.58306646]
[-118.73613739 -1.53906715]
[-122.43646240 -13.15017128]
[-135.56481934 -20.40595436]
[-148.31045532 -11.93203640]
[-163.53536987 -10.36348343]
[-177.74099731 -16.06073761]
[-187.66299438 -27.71461105]
[-191.02133179 -42.64712906]
[-187.04431152 -57.42691040]
[-176.64581299 -68.65766907]
[-162.21534729 -73.75865173]
[-147.06892395 -71.55770111]
[-134.68705750 -62.56057358]
[-127.91504669 -48.83474350]
[-128.30903625 -33.53430557]
[-115.18067932 -26.27852249]
[-97.74444580 -27.61450577]
[-88.25177002 -11.91382408]
[-74.92508698 -5.02909613]
[-61.59840012 1.85563195]
[-48.27171707 8.74036026]
[-34.94503021 15.62508774]
[-27.45063782 15.90315247]
[-21.34515572 22.89437294]
[-8.21680546 30.15015602]
[4.91154623 37.40593719]
[18.03989792 44.66172028]
[31.16824913 51.91750717]
[44.29660034 59.17329025]
[57.42494965 66.42906952]
[64.90859985 66.91721344]
[70.81559753 74.07691956]
[83.73529053 81.69805145]
[96.65497589 89.31918335]
[109.68028259 96.75836945]
[122.80863190 104.01415253]
[135.49186707 101.19855499]
[146.31619263 107.62680054]
[149.68942261 119.33712006]
[162.60911560 126.95825195]
[175.52879333 134.57937622]
[188.44848633 142.20051575]
[201.36817932 149.82164001]
[214.64395142 138.23341370]
[231.01661682 131.77966309]
[248.58233643 131.19406128]
[265.30419922 136.52890015]
[279.24835205 147.15087891]
[288.80770874 161.81616211]
[292.88711548 178.81610107]
[291.02877808 196.17622375]
[304.72052002 202.30288696]
[318.41226196 208.42955017]
[332.10403442 214.55621338]
[344.13479614 208.31149292]
[357.36633301 210.15559387]
[366.94650269 219.18389893]
[369.49456787 231.89961243]
[383.00909424 238.40786743]
[396.52362061 244.91612244]
[410.03814697 251.42437744]
[423.55267334 257.93264771]
[440.44665527 259.35742188]
[443.75427246 275.98559570]
[428.69158936 283.76708984]
[417.04443359 271.44717407]
[403.52990723 264.93890381]
[390.01535034 258.43066406]
[376.50082397 251.92240906]
[362.98629761 245.41415405]
[347.44049072 251.65742493]
[331.85430908 244.65126038]
[325.97735596 228.24797058]
[312.28561401 222.12130737]
[298.59387207 215.99464417]
[284.90209961 209.86798096]
[276.89346313 219.62188721]
[266.73556519 227.13035583]
[255.04077148 231.93394470]
[242.51571655 233.73651123]
[229.91868591 232.42337036]
[218.01362610 228.06867981]
[207.52392578 220.93118286]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 71]
[5 70]
[6 69]
[7 68]
[8 67]
[10 64]
[11 63]
[13 62]
[14 61]
[15 60]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[23 50]
[24 49]
[25 48]
[26 47]
[27 46]
[30 44]
[31 43]
[79 104]
[80 103]
[81 102]
[82 101]
[86 98]
[87 97]
[88 96]
[89 95]
[90 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
