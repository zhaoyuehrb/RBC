%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NDUFB10)
} def

/sequence { (\
GCAGCCGCCCUCGGCGUCCUCUGUAGCGGGCGACCUAGGCCGCGGGACCCGGACGGAGGUAGAGGCCAGGGCAGCGCGUCCGGGAGCGGAGUCCGCGCCCGCCGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.003907784 ubox
1 75 0.067711378 ubox
1 77 0.276563527 ubox
1 79 0.023483788 ubox
1 102 0.004091522 ubox
1 105 0.019324834 ubox
1 108 0.320700724 ubox
2 7 0.004391405 ubox
2 74 0.067505404 ubox
2 76 0.276133705 ubox
2 78 0.025665019 ubox
2 101 0.004044729 ubox
2 104 0.019343519 ubox
2 107 0.321408502 ubox
4 72 0.016603826 ubox
4 75 0.863775259 ubox
4 77 0.012303577 ubox
4 102 0.011747684 ubox
4 105 0.016788575 ubox
4 108 0.032316557 ubox
5 71 0.016084520 ubox
5 74 0.864593027 ubox
5 76 0.012315142 ubox
5 101 0.011681597 ubox
5 104 0.016672316 ubox
5 107 0.032236318 ubox
6 70 0.015405046 ubox
7 66 0.007427322 ubox
7 72 0.998884533 ubox
8 65 0.006104131 ubox
8 71 0.999816431 ubox
9 64 0.004386372 ubox
9 65 0.013677764 ubox
9 70 0.999826118 ubox
9 71 0.005265536 ubox
10 64 0.014341009 ubox
10 69 0.999801884 ubox
10 70 0.006890350 ubox
11 63 0.014959320 ubox
11 68 0.993599495 ubox
11 69 0.008052928 ubox
12 51 0.003679346 ubox
12 62 0.014961511 ubox
13 50 0.003911153 ubox
13 67 0.999561482 ubox
14 49 0.003912336 ubox
14 60 0.006982661 ubox
14 66 0.999857982 ubox
15 59 0.007147288 ubox
15 65 0.999659391 ubox
16 48 0.004123611 ubox
16 60 0.050838102 ubox
17 47 0.004125487 ubox
17 57 0.007026875 ubox
17 63 0.775859624 ubox
18 46 0.004125657 ubox
18 56 0.007050877 ubox
18 59 0.888958325 ubox
18 62 0.456829450 ubox
19 45 0.004120207 ubox
19 55 0.007051583 ubox
19 58 0.998939339 ubox
19 59 0.032407804 ubox
20 44 0.003931033 ubox
20 53 0.006993375 ubox
20 57 0.999644127 ubox
20 58 0.014218328 ubox
20 59 0.003384199 ubox
21 52 0.007023065 ubox
21 56 0.999905194 ubox
21 58 0.003595614 ubox
21 59 0.007651543 ubox
22 51 0.006913526 ubox
22 55 0.999123189 ubox
22 57 0.003530731 ubox
22 58 0.007372612 ubox
23 48 0.004266217 ubox
23 50 0.006287188 ubox
23 54 0.999194327 ubox
24 47 0.004689249 ubox
24 53 0.985433524 ubox
26 43 0.030749923 ubox
27 42 0.031979972 ubox
27 44 0.025154736 ubox
27 51 0.996377194 ubox
28 35 0.003763605 ubox
28 41 0.027237370 ubox
28 43 0.025201074 ubox
28 49 0.015063178 ubox
28 50 0.998697625 ubox
29 34 0.003790344 ubox
29 40 0.021401089 ubox
29 41 0.038036593 ubox
29 48 0.015733481 ubox
29 49 0.998687031 ubox
29 50 0.010629850 ubox
30 40 0.042089538 ubox
30 43 0.056243207 ubox
30 48 0.996033551 ubox
30 49 0.011255431 ubox
31 39 0.045839909 ubox
31 42 0.075684274 ubox
31 44 0.036961313 ubox
32 41 0.075604792 ubox
32 43 0.036704266 ubox
34 45 0.798348766 ubox
34 46 0.592029614 ubox
35 44 0.798568273 ubox
35 45 0.592024832 ubox
35 46 0.022641184 ubox
36 44 0.576707184 ubox
36 45 0.022861370 ubox
40 46 0.011218224 ubox
41 45 0.011168044 ubox
43 51 0.023314581 ubox
44 50 0.036045203 ubox
45 49 0.035493385 ubox
64 106 0.003581332 ubox
65 105 0.003585828 ubox
66 104 0.003580847 ubox
69 100 0.004603040 ubox
70 99 0.004613212 ubox
71 98 0.004610078 ubox
71 108 0.003992365 ubox
72 97 0.004592141 ubox
72 107 0.004232250 ubox
74 96 0.004630032 ubox
74 98 0.017111595 ubox
74 105 0.046505202 ubox
74 108 0.485188754 ubox
75 95 0.004631751 ubox
75 97 0.017153085 ubox
75 104 0.046638436 ubox
75 107 0.486501058 ubox
76 94 0.004533250 ubox
76 96 0.017188536 ubox
76 102 0.007953551 ubox
76 103 0.046868453 ubox
76 105 0.799471309 ubox
76 106 0.373574089 ubox
76 108 0.368306605 ubox
77 95 0.017187753 ubox
77 101 0.008038084 ubox
77 104 0.862295771 ubox
77 107 0.369045185 ubox
78 94 0.017133054 ubox
78 100 0.003979123 ubox
78 102 0.062392511 ubox
78 103 0.858104877 ubox
78 105 0.282205086 ubox
78 106 0.343819189 ubox
78 108 0.034126069 ubox
79 90 0.017777559 ubox
79 101 0.040823903 ubox
79 104 0.306865379 ubox
79 107 0.031627979 ubox
80 89 0.017959254 ubox
81 88 0.017959557 ubox
81 101 0.986698225 ubox
81 104 0.013815988 ubox
81 107 0.081184215 ubox
82 87 0.017879273 ubox
82 99 0.004670334 ubox
82 100 0.996076696 ubox
82 103 0.011690297 ubox
82 106 0.084572623 ubox
83 98 0.004757053 ubox
83 99 0.996137192 ubox
83 100 0.007051152 ubox
83 102 0.010840215 ubox
83 105 0.084582987 ubox
84 98 0.994456902 ubox
84 99 0.007413395 ubox
86 96 0.994238798 ubox
86 98 0.004035197 ubox
86 102 0.084628463 ubox
87 95 0.996209830 ubox
87 97 0.004306168 ubox
87 101 0.084652084 ubox
88 94 0.996012366 ubox
88 96 0.004303196 ubox
88 100 0.084628480 ubox
89 93 0.979933391 ubox
89 99 0.084584936 ubox
91 98 0.080966010 ubox
92 97 0.076472119 ubox
101 106 0.003347685 ubox
101 108 0.049659084 ubox
102 107 0.050927339 ubox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
11 68 0.9500000 lbox
13 67 0.9500000 lbox
14 66 0.9500000 lbox
15 65 0.9500000 lbox
18 59 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
21 56 0.9500000 lbox
22 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
76 105 0.9500000 lbox
77 104 0.9500000 lbox
78 103 0.9500000 lbox
81 101 0.9500000 lbox
82 100 0.9500000 lbox
83 99 0.9500000 lbox
84 98 0.9500000 lbox
86 96 0.9500000 lbox
87 95 0.9500000 lbox
88 94 0.9500000 lbox
89 93 0.9500000 lbox
showpage
end
%%EOF
