%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GDF3)
} def

/sequence { (\
GCCUCUGAAUUGUUGGGCAGUCUGGCAGUGGAGCUCUCCCCGGUCUGACAGCCACUCCAGAGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 64 0.996709357 ubox
2 63 0.999958932 ubox
3 62 0.999981016 ubox
4 61 0.999841528 ubox
5 60 0.999970913 ubox
6 59 0.999068124 ubox
7 57 0.248786148 ubox
7 58 0.964932519 ubox
8 13 0.009221150 ubox
8 14 0.022113605 ubox
8 56 0.344572600 ubox
9 13 0.017755482 ubox
9 21 0.006450521 ubox
9 29 0.015139215 ubox
10 20 0.006804999 ubox
10 28 0.015474397 ubox
10 51 0.016860719 ubox
11 15 0.007018406 ubox
11 19 0.007664249 ubox
11 27 0.016053282 ubox
11 50 0.019088105 ubox
11 54 0.258127194 ubox
11 59 0.011519864 ubox
12 18 0.007811834 ubox
12 26 0.016525676 ubox
12 49 0.019266943 ubox
12 52 0.646554396 ubox
12 53 0.188949308 ubox
12 55 0.640100241 ubox
12 58 0.016186815 ubox
13 17 0.007308938 ubox
13 25 0.016512600 ubox
13 48 0.019245420 ubox
13 51 0.672348787 ubox
13 54 0.579211709 ubox
14 24 0.016209710 ubox
14 47 0.017892708 ubox
14 50 0.672674280 ubox
14 54 0.200534505 ubox
15 23 0.016364704 ubox
15 40 0.003296162 ubox
15 41 0.006678934 ubox
15 46 0.017689510 ubox
15 49 0.673019410 ubox
15 53 0.225810810 ubox
15 56 0.006838486 ubox
15 57 0.020540351 ubox
15 58 0.003389645 ubox
16 22 0.016414610 ubox
16 39 0.003321937 ubox
16 40 0.006683933 ubox
16 45 0.017775035 ubox
16 52 0.174012081 ubox
16 53 0.699117856 ubox
16 55 0.003809693 ubox
16 56 0.005681135 ubox
17 21 0.010633648 ubox
17 38 0.003330426 ubox
17 39 0.006671776 ubox
17 44 0.017693874 ubox
17 52 0.716056545 ubox
17 55 0.004803367 ubox
18 43 0.016683936 ubox
18 47 0.674384487 ubox
18 51 0.729231945 ubox
19 35 0.003464475 ubox
19 37 0.006756553 ubox
19 46 0.676801320 ubox
20 34 0.003511892 ubox
20 36 0.006868796 ubox
20 44 0.003212225 ubox
20 45 0.676274687 ubox
20 49 0.732336868 ubox
21 32 0.003694378 ubox
21 43 0.017003014 ubox
21 48 0.735041134 ubox
21 61 0.003656042 ubox
22 31 0.004070602 ubox
22 42 0.017664912 ubox
22 43 0.676536182 ubox
22 47 0.730678997 ubox
22 51 0.004768708 ubox
22 60 0.003912613 ubox
23 30 0.003996756 ubox
23 42 0.676541623 ubox
23 47 0.003850051 ubox
23 50 0.005179553 ubox
23 54 0.005912018 ubox
23 59 0.004107585 ubox
24 29 0.003166473 ubox
24 35 0.012951034 ubox
24 36 0.005695226 ubox
24 37 0.005490047 ubox
24 38 0.003676796 ubox
24 39 0.011941178 ubox
24 40 0.027555754 ubox
24 41 0.676652072 ubox
24 45 0.725806181 ubox
24 46 0.025688938 ubox
24 49 0.005130652 ubox
24 53 0.006689147 ubox
24 58 0.004439087 ubox
25 34 0.017055528 ubox
25 36 0.006533728 ubox
25 37 0.003869758 ubox
25 38 0.012385975 ubox
25 39 0.035386204 ubox
25 40 0.675702327 ubox
25 44 0.734007195 ubox
25 45 0.027218452 ubox
25 52 0.006691049 ubox
25 57 0.004505029 ubox
26 33 0.019013700 ubox
26 43 0.734291518 ubox
26 47 0.005267694 ubox
26 51 0.006677302 ubox
27 35 0.070992411 ubox
27 37 0.100676658 ubox
27 46 0.005746458 ubox
27 56 0.005851343 ubox
28 34 0.073887824 ubox
28 36 0.103490822 ubox
28 45 0.005724707 ubox
28 49 0.006445604 ubox
28 55 0.006856047 ubox
29 33 0.069163121 ubox
29 42 0.133411208 ubox
29 48 0.006118634 ubox
29 54 0.006867146 ubox
30 36 0.055871145 ubox
30 37 0.060450394 ubox
30 38 0.024331348 ubox
30 39 0.968663181 ubox
30 40 0.078168487 ubox
30 41 0.163741394 ubox
30 46 0.005058421 ubox
30 53 0.006905118 ubox
31 35 0.036372716 ubox
31 36 0.062850750 ubox
31 37 0.020016083 ubox
31 38 0.969597169 ubox
31 39 0.077210344 ubox
31 40 0.163661586 ubox
31 45 0.005330235 ubox
31 52 0.006362706 ubox
32 37 0.907187010 ubox
32 44 0.004692343 ubox
33 44 0.004345818 ubox
33 52 0.003836325 ubox
34 43 0.006283549 ubox
34 51 0.004620545 ubox
35 42 0.005757927 ubox
35 48 0.005300461 ubox
35 50 0.004520048 ubox
36 47 0.005407277 ubox
37 48 0.004687499 ubox
38 47 0.004742778 ubox
42 53 0.016960785 ubox
43 52 0.016984054 ubox
44 51 0.015693850 ubox
45 51 0.005182399 ubox
46 50 0.004717578 ubox
1 64 0.9500000 lbox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
4 61 0.9500000 lbox
5 60 0.9500000 lbox
6 59 0.9500000 lbox
7 58 0.9500000 lbox
12 55 0.9500000 lbox
13 54 0.9500000 lbox
16 53 0.9500000 lbox
17 52 0.9500000 lbox
18 51 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
