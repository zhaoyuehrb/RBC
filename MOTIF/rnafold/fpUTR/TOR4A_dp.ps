%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TOR4A)
} def

/sequence { (\
AUUUCCUGCUUGGAGUCUCAGGCCCCAGCGUCUGGCACAGGCAGGGGCCUGCGGAGCUGAGGGCAGUGGACCAGCUGCAGGGAGGGCGACCUGUAUGCGGAGCGCCGUUCCUGCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.004035315 ubox
1 67 0.006488914 ubox
2 15 0.004254845 ubox
2 66 0.004902379 ubox
2 69 0.023676482 ubox
2 70 0.203594143 ubox
2 74 0.033039945 ubox
2 116 0.008534582 ubox
3 14 0.008015746 ubox
3 15 0.031746533 ubox
3 65 0.004476612 ubox
3 68 0.034690504 ubox
3 69 0.222084122 ubox
3 70 0.795281968 ubox
3 73 0.026231200 ubox
3 74 0.010988658 ubox
3 115 0.006577996 ubox
3 116 0.005723694 ubox
4 13 0.005756019 ubox
4 14 0.119549515 ubox
4 68 0.213566338 ubox
4 69 0.870267433 ubox
4 70 0.195065638 ubox
4 73 0.007113762 ubox
4 115 0.004387561 ubox
4 116 0.016454032 ubox
5 12 0.005772574 ubox
5 13 0.125317141 ubox
5 62 0.003759726 ubox
5 63 0.005893278 ubox
5 68 0.902687338 ubox
5 69 0.208627298 ubox
5 115 0.017590254 ubox
6 12 0.125314942 ubox
6 13 0.003856328 ubox
6 61 0.003712224 ubox
6 62 0.005914417 ubox
6 66 0.966883584 ubox
6 68 0.184409985 ubox
6 69 0.005029362 ubox
6 74 0.009191675 ubox
7 12 0.003660871 ubox
7 60 0.003328249 ubox
7 65 0.982501654 ubox
7 68 0.003854098 ubox
7 73 0.009272825 ubox
8 57 0.003366727 ubox
8 64 0.985349264 ubox
8 67 0.003280663 ubox
8 72 0.009255364 ubox
8 75 0.111167796 ubox
9 56 0.003376128 ubox
9 61 0.031925343 ubox
9 62 0.030372115 ubox
9 63 0.984467790 ubox
9 66 0.003286382 ubox
9 74 0.110848040 ubox
10 55 0.003304996 ubox
10 60 0.063851343 ubox
10 61 0.040562474 ubox
10 62 0.979337579 ubox
10 73 0.081804550 ubox
10 74 0.017115632 ubox
11 59 0.096994859 ubox
11 60 0.047398350 ubox
11 61 0.944069921 ubox
11 62 0.010210745 ubox
11 73 0.076281911 ubox
12 58 0.190731621 ubox
12 72 0.106088385 ubox
12 76 0.003884522 ubox
13 57 0.196935160 ubox
13 71 0.092170968 ubox
13 75 0.004439423 ubox
14 58 0.938432166 ubox
15 57 0.943203931 ubox
15 71 0.135122917 ubox
15 117 0.009584619 ubox
16 54 0.202970070 ubox
16 55 0.779107207 ubox
16 56 0.539482313 ubox
16 69 0.012764075 ubox
16 70 0.160254570 ubox
16 116 0.009807958 ubox
17 53 0.322892925 ubox
17 54 0.905151227 ubox
17 56 0.146878602 ubox
17 66 0.006254632 ubox
17 68 0.013880751 ubox
17 69 0.162435290 ubox
17 115 0.009747613 ubox
18 53 0.890846292 ubox
18 54 0.061515951 ubox
18 55 0.147400395 ubox
18 65 0.006184205 ubox
18 68 0.132048506 ubox
18 69 0.017265820 ubox
18 70 0.009394059 ubox
19 51 0.976934591 ubox
19 53 0.037579052 ubox
19 54 0.116427096 ubox
19 68 0.090685734 ubox
19 69 0.009360861 ubox
20 50 0.985666185 ubox
20 67 0.090684281 ubox
21 49 0.986286759 ubox
22 48 0.986297637 ubox
22 64 0.164858951 ubox
23 47 0.986291080 ubox
23 63 0.164930206 ubox
24 46 0.986283254 ubox
24 47 0.003621864 ubox
24 62 0.164929636 ubox
25 45 0.986274461 ubox
25 46 0.005116908 ubox
25 61 0.164909250 ubox
26 44 0.985659775 ubox
26 45 0.006256160 ubox
26 59 0.164883377 ubox
27 58 0.164890685 ubox
28 36 0.009209013 ubox
28 42 0.252084166 ubox
28 57 0.164931465 ubox
29 35 0.009240489 ubox
29 41 0.250310720 ubox
29 56 0.164706324 ubox
30 36 0.017396729 ubox
30 38 0.032648054 ubox
30 42 0.952629899 ubox
31 35 0.016289179 ubox
31 37 0.031616425 ubox
31 41 0.953245812 ubox
31 54 0.013539831 ubox
31 55 0.159939520 ubox
32 40 0.972199237 ubox
32 41 0.011406341 ubox
32 53 0.013606185 ubox
32 54 0.164178262 ubox
33 39 0.971486319 ubox
33 40 0.012799819 ubox
33 43 0.004388701 ubox
33 53 0.163269226 ubox
34 38 0.956069089 ubox
34 42 0.004007689 ubox
34 52 0.159826579 ubox
35 42 0.004916602 ubox
35 52 0.035345003 ubox
36 41 0.005262112 ubox
36 51 0.043550732 ubox
37 50 0.029657308 ubox
38 51 0.158598565 ubox
39 50 0.161612525 ubox
40 49 0.164904715 ubox
41 48 0.164924915 ubox
42 47 0.164644577 ubox
53 72 0.004997321 ubox
54 71 0.005006334 ubox
55 76 0.032639570 ubox
56 64 0.003881836 ubox
56 67 0.009512038 ubox
56 75 0.038116192 ubox
57 63 0.003885320 ubox
57 66 0.009875951 ubox
57 74 0.038138975 ubox
58 62 0.003500573 ubox
58 65 0.009876505 ubox
58 73 0.036757783 ubox
59 64 0.009838693 ubox
59 72 0.026830674 ubox
61 72 0.027027166 ubox
62 71 0.030522708 ubox
62 72 0.004753748 ubox
62 76 0.004087602 ubox
63 71 0.005225486 ubox
63 75 0.004778463 ubox
64 74 0.004781345 ubox
64 77 0.003639332 ubox
65 76 0.012482391 ubox
66 75 0.019082062 ubox
67 73 0.021426400 ubox
67 74 0.019980397 ubox
68 72 0.023426463 ubox
68 76 0.028215178 ubox
69 75 0.035515144 ubox
74 114 0.005546519 ubox
75 113 0.004937182 ubox
76 115 0.809150467 ubox
77 114 0.999591506 ubox
78 113 0.999968498 ubox
79 112 0.999748884 ubox
80 111 0.999969601 ubox
81 110 0.999935297 ubox
81 111 0.005987704 ubox
82 109 0.999088349 ubox
82 110 0.007902174 ubox
83 108 0.998144694 ubox
83 109 0.008993644 ubox
84 106 0.006014196 ubox
84 108 0.008240026 ubox
85 105 0.004589206 ubox
85 106 0.999805342 ubox
86 105 0.999984741 ubox
87 104 0.999977439 ubox
88 103 0.999595411 ubox
90 100 0.106997136 ubox
91 99 0.106916300 ubox
91 100 0.992480528 ubox
91 102 0.042095715 ubox
92 99 0.990695041 ubox
92 101 0.042493363 ubox
93 98 0.973420329 ubox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
18 53 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
26 44 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
34 38 0.9500000 lbox
76 115 0.9500000 lbox
77 114 0.9500000 lbox
78 113 0.9500000 lbox
79 112 0.9500000 lbox
80 111 0.9500000 lbox
81 110 0.9500000 lbox
82 109 0.9500000 lbox
83 108 0.9500000 lbox
85 106 0.9500000 lbox
86 105 0.9500000 lbox
87 104 0.9500000 lbox
88 103 0.9500000 lbox
91 100 0.9500000 lbox
92 99 0.9500000 lbox
93 98 0.9500000 lbox
showpage
end
%%EOF
