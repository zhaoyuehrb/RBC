%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ELOA)
} def

/sequence { (\
CCCCCACACACCCCAGCCGAGGCCCGGAAGGGGCCAGGCGCGCUUCCGUCUCCGCCGGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 59 0.023545967 ubox
1 60 0.118863965 ubox
2 58 0.023597008 ubox
2 59 0.121781006 ubox
2 60 0.207263034 ubox
3 57 0.023524097 ubox
3 58 0.121544304 ubox
3 59 0.210793552 ubox
3 60 0.014167645 ubox
4 57 0.121045245 ubox
4 58 0.210932193 ubox
4 59 0.014334787 ubox
4 60 0.003681053 ubox
5 57 0.210829610 ubox
5 58 0.014094702 ubox
5 59 0.003441902 ubox
6 49 0.020504292 ubox
7 48 0.020675960 ubox
8 49 0.005822987 ubox
9 48 0.005988073 ubox
10 49 0.013106269 ubox
11 33 0.143689579 ubox
11 48 0.013482113 ubox
11 59 0.044900306 ubox
11 60 0.955999885 ubox
12 31 0.003694332 ubox
12 32 0.144538274 ubox
12 57 0.003190507 ubox
12 58 0.044395037 ubox
12 59 0.967375426 ubox
12 60 0.035668770 ubox
13 30 0.003544964 ubox
13 31 0.145072279 ubox
13 57 0.043719785 ubox
13 58 0.967458572 ubox
13 59 0.036211285 ubox
14 30 0.144985651 ubox
14 57 0.966623957 ubox
14 58 0.036138081 ubox
15 44 0.019382444 ubox
16 23 0.003474346 ubox
16 39 0.251059463 ubox
16 43 0.020101368 ubox
16 55 0.947852136 ubox
17 22 0.003486185 ubox
17 27 0.145138400 ubox
17 38 0.251389887 ubox
17 42 0.020093216 ubox
17 54 0.945206723 ubox
18 26 0.145160279 ubox
18 37 0.251392421 ubox
18 40 0.020223773 ubox
18 54 0.070657150 ubox
19 25 0.144263800 ubox
19 39 0.020226524 ubox
19 50 0.004776321 ubox
19 52 0.932709215 ubox
19 53 0.093021468 ubox
20 49 0.004196298 ubox
20 51 0.925830212 ubox
21 35 0.374290869 ubox
21 50 0.915075768 ubox
21 51 0.013842356 ubox
21 52 0.016109611 ubox
21 53 0.010114479 ubox
22 34 0.375135040 ubox
22 39 0.006056007 ubox
22 49 0.864239847 ubox
22 50 0.019937641 ubox
22 51 0.014762993 ubox
22 52 0.010090708 ubox
23 32 0.017630826 ubox
23 33 0.374745402 ubox
23 38 0.006065150 ubox
23 48 0.734376623 ubox
24 31 0.024953549 ubox
24 32 0.374354662 ubox
24 37 0.006062719 ubox
25 30 0.030269971 ubox
25 31 0.373908202 ubox
25 48 0.540094300 ubox
26 35 0.006262815 ubox
26 46 0.013360009 ubox
26 47 0.912135220 ubox
27 34 0.006252176 ubox
27 45 0.010892053 ubox
27 46 0.915218210 ubox
28 44 0.007251224 ubox
28 45 0.856645272 ubox
29 44 0.792363918 ubox
29 45 0.316934498 ubox
30 43 0.681012846 ubox
30 44 0.450830372 ubox
30 45 0.007428615 ubox
30 46 0.004028968 ubox
30 47 0.004023007 ubox
31 43 0.609118114 ubox
31 44 0.024021594 ubox
31 45 0.007207948 ubox
31 46 0.004012064 ubox
32 43 0.028190844 ubox
32 44 0.020270162 ubox
32 56 0.013333940 ubox
33 39 0.294494914 ubox
33 41 0.860111476 ubox
33 43 0.023231536 ubox
33 55 0.015441053 ubox
34 38 0.292626219 ubox
34 40 0.859327835 ubox
34 42 0.023902186 ubox
34 54 0.016375015 ubox
34 58 0.009638014 ubox
34 59 0.018432910 ubox
34 60 0.004265414 ubox
35 57 0.010296945 ubox
35 58 0.018421640 ubox
35 59 0.004330316 ubox
36 44 0.007087187 ubox
36 45 0.005047054 ubox
36 51 0.192852435 ubox
37 43 0.007574934 ubox
37 44 0.006058349 ubox
37 47 0.010087880 ubox
37 50 0.247117637 ubox
37 51 0.010373604 ubox
37 52 0.011637958 ubox
37 53 0.023449662 ubox
37 56 0.186056822 ubox
38 43 0.006130671 ubox
38 46 0.010036603 ubox
38 49 0.248474773 ubox
38 50 0.013005223 ubox
38 51 0.011099778 ubox
38 52 0.023427283 ubox
38 55 0.186306473 ubox
39 48 0.248789082 ubox
39 54 0.186308722 ubox
40 47 0.241354486 ubox
40 49 0.108473992 ubox
40 53 0.181330282 ubox
40 55 0.213379002 ubox
40 56 0.049148207 ubox
41 48 0.125016413 ubox
41 54 0.214218730 ubox
42 47 0.119302417 ubox
42 49 0.167001088 ubox
42 53 0.206929884 ubox
42 55 0.069619890 ubox
42 56 0.005012892 ubox
43 48 0.172642463 ubox
43 54 0.069682214 ubox
44 60 0.005448199 ubox
45 59 0.009555945 ubox
46 58 0.011405247 ubox
47 54 0.026380822 ubox
47 57 0.011735684 ubox
48 53 0.027231157 ubox
48 55 0.020086261 ubox
48 56 0.012446690 ubox
49 54 0.019222753 ubox
50 60 0.004983937 ubox
51 59 0.005026811 ubox
51 60 0.003522251 ubox
52 58 0.005212291 ubox
52 59 0.006303496 ubox
53 57 0.005229379 ubox
53 58 0.006322215 ubox
11 60 0.9500000 lbox
12 59 0.9500000 lbox
13 58 0.9500000 lbox
14 57 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
26 47 0.9500000 lbox
27 46 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
showpage
end
%%EOF
