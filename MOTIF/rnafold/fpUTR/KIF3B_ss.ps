%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGUCUCUCCCCAUCCGGGGCAGCGGGGAAUGGCUGAGCCAGGGGUUCGCCGCCCCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCCGCUUUCGGCUCGGGCCUCAGGACCGUAGCAUCCUGAGACAUUUUGAAUUGACACUUCUCAAGAUUUGACUGGAUCAGAGUUCAUC\
) } def
/len { sequence length } bind def

/coor [
[47.86784744 356.61065674]
[44.50896454 340.92318726]
[54.79073334 328.60794067]
[54.79073334 313.60794067]
[45.20566559 298.92153931]
[54.50958633 283.04513550]
[54.24924850 268.04739380]
[53.98890686 253.04966736]
[53.72856522 238.05192566]
[46.38608932 232.97694397]
[42.15173340 224.96337891]
[42.09453964 215.76220703]
[46.35459518 207.45124817]
[54.08275223 201.96585083]
[54.60335541 186.97488403]
[55.12395477 171.98391724]
[55.64455795 156.99295044]
[56.16515732 142.00199890]
[56.68576050 127.01103210]
[45.67313385 116.82662964]
[30.76849365 118.51533508]
[15.86385345 120.20404053]
[3.02248335 129.44578552]
[-10.49494553 123.19051361]
[-25.39958382 124.87921906]
[-40.30422211 126.56793213]
[-55.20886230 128.25663757]
[-70.11350250 129.94534302]
[-85.01814270 131.63404846]
[-93.66400146 141.22920227]
[-106.13135529 142.31570435]
[-115.67393494 134.85415649]
[-130.60563660 136.28393555]
[-145.53733826 137.71369934]
[-160.46903992 139.14346313]
[-168.73945618 143.08592224]
[-175.67196655 140.46615601]
[-190.62623596 141.63655090]
[-205.58050537 142.80696106]
[-220.53477478 143.97735596]
[-235.48904419 145.14775085]
[-250.80810547 152.41152954]
[-262.02874756 139.70195007]
[-252.92205811 125.40145111]
[-236.65943909 130.19348145]
[-221.70516968 129.02308655]
[-206.75090027 127.85268402]
[-191.79663086 126.68228912]
[-176.84236145 125.51189423]
[-161.89881897 124.21176147]
[-146.96710205 122.78199005]
[-132.03540039 121.35222626]
[-117.10369873 119.92245483]
[-103.39778137 108.98115540]
[-86.70684814 116.72940826]
[-71.80220795 115.04070282]
[-56.89756775 113.35199738]
[-41.99293137 111.66329193]
[-27.08829117 109.97457886]
[-12.18365192 108.28587341]
[-0.40836084 99.16492462]
[14.17514706 105.29940796]
[29.07978630 103.61069489]
[43.98442459 101.92198944]
[51.21985626 88.78240967]
[44.67810822 75.28405762]
[31.69690704 66.23977661]
[33.10905457 51.41226959]
[26.56730843 37.91391373]
[13.58610630 28.86963654]
[14.99825573 14.04212570]
[8.45650959 0.54377174]
[-4.52469301 -8.50050545]
[-3.11254382 -23.32801628]
[-9.65429020 -36.82637024]
[-23.52307129 -45.57788467]
[-22.60814667 -61.95148849]
[-7.85071325 -69.10342407]
[5.56804657 -59.67639542]
[3.84406400 -43.36811829]
[10.38580990 -29.86976242]
[22.89910316 -21.79097939]
[21.95486450 -5.99797440]
[28.49660873 7.50037956]
[41.00990295 15.57916451]
[40.06566238 31.37216759]
[46.60741043 44.87052155]
[59.12070084 52.94930649]
[58.17646408 68.74230957]
[64.71820831 82.24066162]
[81.68587494 65.43688965]
[105.01880646 61.59505463]
[110.36595154 47.58049393]
[115.71310425 33.56592941]
[121.06025696 19.55136681]
[126.16336823 5.44610977]
[131.02088928 -8.74559212]
[135.87841797 -22.93729401]
[135.28717041 -39.88092804]
[151.40496826 -45.13954163]
[160.91992188 -31.10736275]
[150.07012939 -18.07976532]
[145.21260071 -3.88806272]
[140.35507202 10.30363941]
[141.62782288 14.93224621]
[139.98727417 20.40881348]
[135.07481384 24.89851761]
[129.72766113 38.91308212]
[124.38051605 52.92764282]
[119.03336334 66.94220734]
[130.30738831 76.83647156]
[143.50926208 69.71534729]
[156.71113586 62.59421539]
[169.91300964 55.47308731]
[183.11489868 48.35196304]
[196.31677246 41.23083496]
[209.51864624 34.10970688]
[211.45275879 18.71364212]
[222.09159851 7.41786242]
[237.34432983 4.56582737]
[251.34594727 11.25420189]
[258.71255493 24.91116905]
[256.61154175 40.28534698]
[245.85076904 51.46504974]
[230.56800842 54.15145493]
[216.63977051 47.31158447]
[203.43789673 54.43271255]
[190.23602295 61.55383682]
[177.03414917 68.67496490]
[163.83226013 75.79609680]
[150.63038635 82.91722107]
[137.42851257 90.03834534]
[136.27610779 95.56483459]
[134.35610962 100.57745361]
[131.78862000 104.97587585]
[145.65922546 110.68605042]
[159.52984619 116.39621735]
[173.40046692 122.10639191]
[187.27107239 127.81655884]
[201.14169312 133.52673340]
[215.01229858 139.23690796]
[226.70762634 129.36381531]
[241.65408325 126.06803131]
[256.41708374 130.10691833]
[267.60418701 140.55235291]
[272.64468384 155.00405884]
[270.38031006 170.14114380]
[261.33142090 182.48521423]
[247.57734680 189.19967651]
[232.27870178 188.74162292]
[218.95097351 181.21629333]
[210.65681458 168.35295105]
[209.30213928 153.10751343]
[195.43151855 147.39733887]
[181.56089783 141.68717957]
[167.69029236 135.97700500]
[153.81967163 130.26683044]
[139.94906616 124.55666351]
[126.07844543 118.84648895]
[118.88616180 127.83866882]
[108.58908081 134.03820801]
[96.28582001 136.38078308]
[83.43383026 134.23731995]
[71.67672729 127.53163147]
[71.15612030 142.52259827]
[70.63552094 157.51356506]
[70.11492157 172.50451660]
[69.59431458 187.49548340]
[69.07371521 202.48645020]
[80.29910278 220.71984863]
[68.72631073 237.79158020]
[68.98664856 252.78932190]
[69.24698639 267.78704834]
[69.50732422 282.78479004]
[78.23468018 292.30587769]
[78.12788391 304.82003784]
[69.79073334 313.60794067]
[69.79073334 328.60794067]
[80.07250214 340.92318726]
[76.71362305 356.61065674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[6 174]
[7 173]
[8 172]
[9 171]
[14 169]
[15 168]
[16 167]
[17 166]
[18 165]
[19 164]
[20 64]
[21 63]
[22 62]
[24 60]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[32 53]
[33 52]
[34 51]
[35 50]
[37 49]
[38 48]
[39 47]
[40 46]
[41 45]
[65 90]
[66 89]
[68 87]
[69 86]
[71 84]
[72 83]
[74 81]
[75 80]
[92 110]
[93 109]
[94 108]
[95 107]
[96 104]
[97 103]
[98 102]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[117 126]
[135 159]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
