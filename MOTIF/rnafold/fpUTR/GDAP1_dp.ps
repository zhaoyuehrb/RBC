%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GDAP1)
} def

/sequence { (\
GAAACGCCUUGCGGGGCAGUGUGGGAGGGAGAAGUCCAGGGCGGACAGGCUGGGCGCACCCGUGCUCGCGCACCCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.034071369 ubox
2 9 0.034372554 ubox
2 10 0.029483810 ubox
3 9 0.029005090 ubox
3 10 0.026663602 ubox
4 9 0.022938945 ubox
4 20 0.036803374 ubox
4 22 0.007335760 ubox
5 11 0.052484177 ubox
5 13 0.463646670 ubox
5 19 0.037943873 ubox
5 21 0.008381848 ubox
5 23 0.006288661 ubox
6 10 0.032835870 ubox
6 12 0.576623720 ubox
6 17 0.095240712 ubox
6 20 0.007132905 ubox
6 22 0.006687231 ubox
7 11 0.572645536 ubox
7 14 0.008748047 ubox
7 15 0.004743809 ubox
7 16 0.095327233 ubox
7 19 0.006866800 ubox
7 21 0.006807569 ubox
8 13 0.013403736 ubox
8 14 0.005695999 ubox
8 15 0.095253086 ubox
8 79 0.605091642 ubox
9 13 0.005904967 ubox
9 14 0.088073884 ubox
9 19 0.006320332 ubox
9 78 0.618196243 ubox
9 79 0.038600249 ubox
10 18 0.009650018 ubox
10 72 0.003802543 ubox
10 77 0.614153078 ubox
10 78 0.062100165 ubox
11 17 0.010292469 ubox
11 71 0.004296300 ubox
11 76 0.594982700 ubox
12 16 0.010218225 ubox
12 70 0.004298859 ubox
13 69 0.004283814 ubox
13 74 0.016953419 ubox
13 75 0.589188370 ubox
13 76 0.638332008 ubox
14 67 0.004056742 ubox
14 73 0.016814210 ubox
14 74 0.588764239 ubox
14 75 0.655534809 ubox
14 76 0.460605081 ubox
15 66 0.004079560 ubox
15 73 0.587655714 ubox
15 74 0.656169546 ubox
15 75 0.461338903 ubox
15 76 0.017202113 ubox
16 65 0.004291386 ubox
16 69 0.003463733 ubox
16 71 0.172534075 ubox
16 73 0.655253426 ubox
16 74 0.460881537 ubox
16 75 0.017152253 ubox
17 64 0.004300287 ubox
17 68 0.003475872 ubox
17 70 0.171621472 ubox
18 63 0.004170987 ubox
18 66 0.006780766 ubox
19 46 0.015824858 ubox
19 59 0.003443157 ubox
19 65 0.006866385 ubox
19 69 0.127274927 ubox
19 71 0.967684775 ubox
19 73 0.146719864 ubox
20 45 0.015828685 ubox
20 58 0.003452997 ubox
20 64 0.006837406 ubox
20 68 0.127129359 ubox
20 70 0.969368583 ubox
20 72 0.156128568 ubox
20 77 0.004797832 ubox
21 57 0.003455667 ubox
21 63 0.005333245 ubox
21 65 0.005454593 ubox
21 67 0.125897168 ubox
21 69 0.977548910 ubox
21 71 0.156403996 ubox
21 76 0.005685871 ubox
22 43 0.015751858 ubox
22 56 0.003453675 ubox
22 62 0.006972985 ubox
22 64 0.005608191 ubox
22 68 0.977218103 ubox
22 70 0.156331780 ubox
22 77 0.049049227 ubox
23 42 0.015805051 ubox
23 55 0.003411389 ubox
23 61 0.007247701 ubox
23 63 0.003616261 ubox
23 66 0.084678375 ubox
23 67 0.977365759 ubox
23 69 0.156233000 ubox
23 75 0.006288350 ubox
23 76 0.054928351 ubox
24 37 0.010665117 ubox
24 60 0.007230192 ubox
24 65 0.147749082 ubox
24 66 0.968879045 ubox
24 67 0.007661456 ubox
24 74 0.006311145 ubox
24 75 0.054939460 ubox
24 76 0.005156069 ubox
25 36 0.010696008 ubox
25 59 0.007197166 ubox
25 65 0.963518723 ubox
25 66 0.004442956 ubox
25 67 0.155699200 ubox
25 73 0.005926962 ubox
25 74 0.054774913 ubox
25 75 0.005155569 ubox
26 35 0.010671070 ubox
26 66 0.155039767 ubox
27 37 0.006629828 ubox
27 60 0.024128878 ubox
27 61 0.980369168 ubox
27 65 0.124281067 ubox
27 74 0.004892606 ubox
27 75 0.003595395 ubox
27 76 0.007365483 ubox
28 36 0.006561860 ubox
28 37 0.046532807 ubox
28 50 0.003218966 ubox
28 51 0.005998848 ubox
28 59 0.024724681 ubox
28 60 0.983596373 ubox
28 61 0.163395559 ubox
28 73 0.005061958 ubox
28 74 0.003702561 ubox
28 75 0.007369299 ubox
29 35 0.005514508 ubox
29 36 0.046598633 ubox
29 50 0.006567364 ubox
29 59 0.982197154 ubox
29 60 0.163366710 ubox
29 73 0.003754054 ubox
29 74 0.007347955 ubox
30 35 0.045405998 ubox
30 51 0.004884314 ubox
31 50 0.005112329 ubox
34 46 0.035774414 ubox
34 55 0.997635998 ubox
34 57 0.012637623 ubox
35 45 0.035837567 ubox
35 54 0.996927638 ubox
35 56 0.012400009 ubox
36 44 0.035854174 ubox
36 53 0.997278564 ubox
36 54 0.040743397 ubox
37 43 0.035831567 ubox
37 52 0.996583377 ubox
37 53 0.040914137 ubox
38 51 0.884763705 ubox
38 66 0.005089909 ubox
39 50 0.773407598 ubox
39 51 0.060820580 ubox
39 60 0.022925617 ubox
39 61 0.007067586 ubox
39 65 0.006646651 ubox
40 50 0.092105822 ubox
40 51 0.425112540 ubox
40 59 0.023007250 ubox
40 60 0.006903269 ubox
41 50 0.623624910 ubox
41 57 0.023937984 ubox
41 59 0.004788780 ubox
41 63 0.010056259 ubox
41 71 0.003489952 ubox
42 49 0.666955123 ubox
42 56 0.024394265 ubox
42 62 0.010242791 ubox
42 70 0.003504396 ubox
43 51 0.003887764 ubox
43 55 0.024399605 ubox
43 61 0.010245778 ubox
43 69 0.003479078 ubox
44 50 0.005084650 ubox
44 60 0.010210553 ubox
46 52 0.023735436 ubox
47 51 0.019242998 ubox
48 61 0.003980754 ubox
48 66 0.011347032 ubox
49 55 0.008750673 ubox
49 57 0.012444126 ubox
49 60 0.003974413 ubox
49 63 0.011590436 ubox
49 65 0.015129386 ubox
49 69 0.017466367 ubox
49 71 0.015474273 ubox
50 54 0.008691946 ubox
50 56 0.012446777 ubox
50 62 0.011946234 ubox
50 64 0.016701018 ubox
50 68 0.017097858 ubox
50 70 0.015490860 ubox
51 58 0.005389196 ubox
51 62 0.023696619 ubox
51 68 0.016528960 ubox
52 57 0.005658763 ubox
52 60 0.005924103 ubox
52 61 0.043200633 ubox
52 67 0.027122822 ubox
53 59 0.005954777 ubox
53 60 0.043228836 ubox
53 66 0.028053338 ubox
54 59 0.042961703 ubox
54 65 0.028686752 ubox
55 64 0.028993814 ubox
56 63 0.029319026 ubox
56 65 0.004760523 ubox
57 62 0.029317296 ubox
57 64 0.005361421 ubox
58 63 0.004466852 ubox
62 73 0.053264792 ubox
63 72 0.053432576 ubox
64 71 0.053499863 ubox
65 70 0.053409328 ubox
8 79 0.9500000 lbox
9 78 0.9500000 lbox
10 77 0.9500000 lbox
11 76 0.9500000 lbox
13 75 0.9500000 lbox
14 74 0.9500000 lbox
15 73 0.9500000 lbox
19 71 0.9500000 lbox
20 70 0.9500000 lbox
21 69 0.9500000 lbox
22 68 0.9500000 lbox
23 67 0.9500000 lbox
24 66 0.9500000 lbox
25 65 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
29 59 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
showpage
end
%%EOF
