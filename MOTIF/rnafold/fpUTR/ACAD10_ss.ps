%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCUCUUCCGGACGCAAUUUUGAGGAGGUCGGAGCGGAAGGACGUCGUGGAGAUUGCUUGCGCUGGGGUGCCACACUUAGGCUGAGCUGCAGGUUUUCGCACAGUCGCGAGUUAACCUCUGCUUGCUCCAGAGGCCUCGUCCUAAUCCACCUCGGCUGACGGCGCGGGAUCCCUGGCUCCGCGAGCCUCAGCCUCACC\
) } def
/len { sequence length } bind def

/coor [
[230.82052612 524.55163574]
[228.25656128 509.77236938]
[220.96174622 511.51464844]
[216.12628174 525.71386719]
[211.29081726 539.91314697]
[206.56646729 554.14971924]
[201.95350647 568.42279053]
[197.34056091 582.69586182]
[198.22286987 599.62683105]
[182.19781494 605.16162109]
[172.44314575 591.29504395]
[183.06748962 578.08288574]
[187.68043518 563.80981445]
[192.29338074 549.53674316]
[191.35829163 542.19934082]
[197.09158325 535.07763672]
[201.92704773 520.87841797]
[206.76251221 506.67919922]
[196.31452942 517.44207764]
[181.62428284 520.47467041]
[167.76832581 514.72906494]
[159.53488159 502.19067383]
[159.76922607 487.19250488]
[168.39035034 474.91748047]
[182.41903687 469.60751343]
[197.00737000 473.09759521]
[207.11416626 484.18194580]
[202.72485352 469.83850098]
[198.33554077 455.49508667]
[193.94622803 441.15164185]
[189.55691528 426.80822754]
[184.58949280 421.32763672]
[185.21298218 412.20620728]
[181.04838562 397.79592896]
[176.88378906 383.38565063]
[161.82620239 375.90332031]
[156.73513794 359.52447510]
[165.22538757 344.23394775]
[160.83607483 329.89053345]
[156.44676208 315.54708862]
[145.91166687 309.59216309]
[142.14051819 297.67193604]
[147.67666626 286.01644897]
[143.51205444 271.60617065]
[132.54534912 261.52746582]
[136.14698792 246.12164307]
[131.98237610 231.71136475]
[127.81777954 217.30108643]
[114.53173065 205.84129333]
[119.08707428 188.00332642]
[114.69776154 173.65989685]
[110.30844879 159.31646729]
[105.91913605 144.97305298]
[101.52982330 130.62962341]
[85.96893311 127.26982117]
[74.18883514 116.56192780]
[69.36377716 101.39128876]
[72.79391479 85.84574890]
[61.58421326 75.87867737]
[50.37450790 65.91160583]
[39.16480255 55.94453049]
[27.87755013 46.06536484]
[16.51343918 36.27470779]
[7.96187639 33.04051971]
[5.04976940 26.24113464]
[-6.15993500 16.27406311]
[-17.36964035 6.30699110]
[-28.57934380 -3.66008115]
[-39.78904724 -13.62715340]
[-54.91717911 -10.17472363]
[-69.17211914 -16.30468559]
[-77.07254028 -29.65994263]
[-75.58058167 -45.10512543]
[-65.26992798 -56.70124817]
[-50.10523605 -59.98936081]
[-35.91764069 -53.70512390]
[-28.16255569 -40.26494598]
[-29.82197571 -24.83685684]
[-18.61227226 -14.86978531]
[-7.40256739 -4.90271378]
[3.80713701 5.06435871]
[15.01684189 15.03143024]
[26.30409431 24.91059685]
[37.66820526 34.70125198]
[44.79341888 36.68703079]
[49.13187408 44.73482513]
[60.34157944 54.70190048]
[71.55128479 64.66896820]
[82.76098633 74.63603973]
[90.56872559 70.81841278]
[99.13391876 69.34443665]
[102.39004517 54.70211029]
[105.64617920 40.05978775]
[108.67306519 25.36836433]
[111.46996307 10.63142586]
[114.26686096 -4.10551214]
[117.06376648 -18.84245110]
[119.62999725 -33.62130356]
[121.96493530 -48.43845749]
[124.29987335 -63.25561142]
[126.63481140 -78.07276154]
[128.96975708 -92.88992310]
[119.46875000 -105.51950836]
[121.76369476 -121.15628815]
[134.49302673 -130.52322388]
[150.10467529 -128.06309509]
[159.33650208 -115.23543549]
[156.71145630 -99.65068054]
[143.78691101 -90.55497742]
[141.45196533 -75.73782349]
[139.11703491 -60.92067337]
[136.78208923 -46.10351944]
[134.44715881 -31.28636360]
[136.48812866 -26.96042824]
[135.82759094 -21.30565071]
[131.80070496 -16.04554939]
[129.00379944 -1.30861151]
[126.20690155 13.42832661]
[123.41000366 28.16526413]
[125.31478119 32.55287552]
[124.47782135 38.18424606]
[120.28849792 43.31591797]
[117.03237152 57.95824051]
[113.77623749 72.60056305]
[125.78617096 83.39917755]
[130.64439392 98.80197144]
[127.00348663 114.53704071]
[115.87325287 126.24030304]
[120.26256561 140.58374023]
[124.65187836 154.92715454]
[129.04118347 169.27058411]
[133.43049622 183.61401367]
[144.43734741 190.34814453]
[147.79505920 202.39137268]
[142.22805786 213.13648987]
[146.39265442 227.54676819]
[150.55726624 241.95704651]
[161.82185364 253.06648254]
[157.92233276 267.44155884]
[162.08694458 281.85183716]
[175.65184021 294.29922485]
[170.79019165 311.15777588]
[175.17950439 325.50122070]
[179.56881714 339.84463501]
[192.11555481 344.75631714]
[199.43360901 355.83709717]
[199.03675842 368.91564941]
[191.29406738 379.22106934]
[195.45866394 393.63134766]
[199.62326050 408.04162598]
[203.90034485 422.41891479]
[208.28965759 436.76232910]
[212.67897034 451.10577393]
[217.06828308 465.44918823]
[221.45759583 479.79263306]
[260.62258911 493.81527710]
[271.35278320 504.29681396]
[282.08297729 514.77838135]
[292.81320190 525.25988770]
[303.54339600 535.74145508]
[314.27359009 546.22296143]
[322.60638428 549.98516846]
[325.08798218 556.95318604]
[335.65307617 567.60113525]
[346.21813965 578.24914551]
[361.43057251 582.59570312]
[364.90243530 597.08001709]
[375.46749878 607.72796631]
[386.11547852 618.29302979]
[396.84567261 628.77459717]
[407.57589722 639.25616455]
[422.84921265 636.51660156]
[436.80114746 643.30798340]
[444.06689453 657.01885986]
[441.85263062 672.37713623]
[431.00979614 683.47723389]
[415.70764160 686.05090332]
[401.83020020 679.10858154]
[394.71359253 665.31970215]
[397.09436035 649.98632812]
[386.36413574 639.50482178]
[375.63394165 629.02325439]
[368.64669800 626.59619141]
[364.81954956 618.29302979]
[354.25445557 607.64508057]
[339.79772949 604.06011963]
[335.57015991 588.81420898]
[325.00509644 578.16625977]
[314.44003296 567.51824951]
[303.79205322 556.95318604]
[293.06185913 546.47167969]
[282.33163452 535.99011230]
[271.60144043 525.50854492]
[260.87124634 515.02703857]
[250.14103699 504.54550171]
[242.84620667 506.28778076]
[247.23773193 520.63055420]
[257.01681519 532.00457764]
[252.39642334 546.27526855]
[237.80668640 549.75946045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 16]
[6 14]
[7 13]
[8 12]
[27 155]
[28 154]
[29 153]
[30 152]
[31 151]
[33 150]
[34 149]
[35 148]
[38 144]
[39 143]
[40 142]
[43 140]
[44 139]
[46 137]
[47 136]
[48 135]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[58 89]
[59 88]
[60 87]
[61 86]
[62 84]
[63 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[91 124]
[92 123]
[93 122]
[94 119]
[95 118]
[96 117]
[97 116]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[156 195]
[157 194]
[158 193]
[159 192]
[160 191]
[161 190]
[163 189]
[164 188]
[165 187]
[167 185]
[168 184]
[169 182]
[170 181]
[171 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
