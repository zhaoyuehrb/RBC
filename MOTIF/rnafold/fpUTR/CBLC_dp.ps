%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CBLC)
} def

/sequence { (\
ACUCUGGGCGAGGCCGCCCCUAUCCCAGCCGCACCGGUCCUUCCCGGCACACGCGAGGCUCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.006137107 ubox
2 12 0.003920668 ubox
2 28 0.015491326 ubox
2 37 0.007035677 ubox
2 57 0.141234916 ubox
2 58 0.022360801 ubox
3 11 0.003967184 ubox
3 27 0.012737561 ubox
3 36 0.006942471 ubox
3 56 0.141351716 ubox
3 57 0.019032491 ubox
3 58 0.021601515 ubox
4 10 0.003971199 ubox
4 28 0.405538817 ubox
4 37 0.010130103 ubox
4 47 0.018275984 ubox
4 55 0.138606177 ubox
4 57 0.029612180 ubox
4 58 0.005363065 ubox
5 22 0.042912170 ubox
5 27 0.434667341 ubox
5 33 0.010498304 ubox
5 36 0.010389576 ubox
5 46 0.023058591 ubox
5 53 0.010947873 ubox
5 56 0.028751903 ubox
5 57 0.004924441 ubox
6 15 0.003265804 ubox
6 18 0.004016155 ubox
6 19 0.880291233 ubox
6 20 0.097286803 ubox
6 21 0.009177108 ubox
6 25 0.009227084 ubox
6 26 0.456664647 ubox
6 32 0.011773334 ubox
6 35 0.018683199 ubox
6 39 0.003405134 ubox
6 40 0.006132248 ubox
6 45 0.025452295 ubox
6 52 0.006851929 ubox
6 61 0.004783557 ubox
6 62 0.004147751 ubox
6 63 0.009757558 ubox
7 14 0.003241998 ubox
7 15 0.007024161 ubox
7 18 0.885091456 ubox
7 19 0.079611603 ubox
7 20 0.005946381 ubox
7 24 0.009382036 ubox
7 25 0.456637221 ubox
7 26 0.004980883 ubox
7 30 0.015155217 ubox
7 34 0.018671640 ubox
7 35 0.004316449 ubox
7 38 0.003435351 ubox
7 39 0.006173175 ubox
7 44 0.025457952 ubox
7 60 0.004287605 ubox
7 61 0.003483997 ubox
7 62 0.009789869 ubox
7 63 0.004385955 ubox
8 14 0.007064223 ubox
8 17 0.886944746 ubox
8 18 0.056356125 ubox
8 19 0.004316332 ubox
8 23 0.009181840 ubox
8 24 0.455900587 ubox
8 25 0.005024082 ubox
8 29 0.015189497 ubox
8 32 0.017717816 ubox
8 34 0.004316074 ubox
8 38 0.006036386 ubox
8 43 0.025436187 ubox
8 54 0.004086677 ubox
8 59 0.004833685 ubox
8 61 0.009674582 ubox
8 62 0.004439448 ubox
9 13 0.007035706 ubox
9 16 0.888734987 ubox
9 28 0.015196944 ubox
9 31 0.017696833 ubox
9 36 0.005571274 ubox
9 37 0.004797194 ubox
9 53 0.004091367 ubox
9 58 0.004816950 ubox
10 15 0.876494528 ubox
10 24 0.004707382 ubox
10 30 0.013201654 ubox
10 35 0.006816784 ubox
10 42 0.024595223 ubox
10 52 0.004027770 ubox
10 61 0.004467937 ubox
11 21 0.450987427 ubox
11 23 0.004758234 ubox
11 41 0.025074959 ubox
11 60 0.004334645 ubox
12 18 0.013701052 ubox
12 19 0.043125092 ubox
12 20 0.454282778 ubox
12 21 0.010140122 ubox
12 25 0.013057814 ubox
12 26 0.009895548 ubox
12 30 0.014067493 ubox
12 39 0.005505093 ubox
12 40 0.024968601 ubox
12 59 0.003237319 ubox
12 60 0.009367502 ubox
13 17 0.013765291 ubox
13 18 0.048187195 ubox
13 19 0.451344230 ubox
13 20 0.010636789 ubox
13 24 0.012960188 ubox
13 25 0.009833735 ubox
13 29 0.015202997 ubox
13 32 0.007863595 ubox
13 38 0.006186964 ubox
13 39 0.024815650 ubox
13 48 0.003275468 ubox
13 54 0.003700995 ubox
13 59 0.010058905 ubox
14 28 0.015180338 ubox
14 31 0.007856444 ubox
14 37 0.025136149 ubox
14 47 0.003277144 ubox
14 53 0.003672490 ubox
14 58 0.010462360 ubox
15 36 0.025129853 ubox
15 46 0.003275608 ubox
15 57 0.010407152 ubox
16 29 0.010551934 ubox
16 32 0.015263122 ubox
16 35 0.020134756 ubox
16 45 0.003222728 ubox
16 48 0.003409012 ubox
16 59 0.003949791 ubox
17 28 0.010598433 ubox
17 31 0.016503512 ubox
17 47 0.003402984 ubox
17 58 0.003943383 ubox
18 46 0.003384654 ubox
18 57 0.003921210 ubox
19 58 0.009309483 ubox
20 28 0.032917740 ubox
20 46 0.004063850 ubox
20 57 0.017680122 ubox
20 58 0.007823124 ubox
21 27 0.033046081 ubox
21 56 0.017346717 ubox
21 57 0.007151581 ubox
23 56 0.011891180 ubox
23 58 0.014532708 ubox
24 37 0.003874627 ubox
24 55 0.012602435 ubox
24 57 0.019419841 ubox
24 58 0.236738880 ubox
25 36 0.003918424 ubox
25 37 0.006650878 ubox
25 57 0.239314536 ubox
25 58 0.173319947 ubox
26 36 0.006726411 ubox
26 57 0.174778345 ubox
27 41 0.004749241 ubox
27 60 0.753712565 ubox
28 38 0.142710291 ubox
28 40 0.004374105 ubox
28 48 0.088080598 ubox
28 54 0.291669406 ubox
28 59 0.813850015 ubox
29 37 0.167467478 ubox
29 47 0.088224376 ubox
29 53 0.281731234 ubox
29 58 0.814816584 ubox
30 36 0.167904686 ubox
30 46 0.088179585 ubox
30 53 0.087037342 ubox
30 55 0.392883979 ubox
30 57 0.758753517 ubox
31 35 0.157820268 ubox
31 38 0.009502352 ubox
31 45 0.087505120 ubox
31 48 0.053062765 ubox
31 52 0.125107696 ubox
31 54 0.721527827 ubox
31 59 0.052990325 ubox
32 37 0.010160219 ubox
32 47 0.040281969 ubox
32 53 0.722789278 ubox
32 58 0.053037308 ubox
34 47 0.818814791 ubox
35 46 0.826234026 ubox
35 53 0.315583702 ubox
35 55 0.050383216 ubox
36 43 0.013870371 ubox
36 44 0.098992043 ubox
36 45 0.825028587 ubox
36 52 0.317426743 ubox
36 54 0.050037799 ubox
36 60 0.042356730 ubox
36 61 0.032893970 ubox
36 62 0.351011088 ubox
36 63 0.037701755 ubox
37 42 0.012896471 ubox
37 43 0.109939121 ubox
37 44 0.819952386 ubox
37 48 0.159635482 ubox
37 50 0.346626020 ubox
37 52 0.040309559 ubox
37 54 0.003925999 ubox
37 59 0.047039164 ubox
37 60 0.029391440 ubox
37 61 0.351831344 ubox
37 62 0.036995869 ubox
38 47 0.147958566 ubox
38 49 0.345748381 ubox
38 51 0.039867794 ubox
38 53 0.004233197 ubox
38 58 0.017886251 ubox
39 46 0.146837965 ubox
39 47 0.351577430 ubox
39 57 0.016393099 ubox
39 58 0.140066954 ubox
40 46 0.351490140 ubox
40 47 0.065310141 ubox
40 57 0.140586152 ubox
40 58 0.362075137 ubox
41 46 0.059765009 ubox
41 56 0.120393169 ubox
41 57 0.362642527 ubox
42 46 0.003370130 ubox
42 55 0.092689547 ubox
42 56 0.370525688 ubox
42 58 0.004921958 ubox
43 55 0.376875143 ubox
43 57 0.006328825 ubox
43 58 0.061245736 ubox
44 57 0.061935199 ubox
44 58 0.019738524 ubox
45 53 0.384607544 ubox
45 55 0.027533070 ubox
45 57 0.019923153 ubox
46 52 0.384761384 ubox
46 54 0.025984115 ubox
46 60 0.006401575 ubox
47 54 0.132809253 ubox
47 59 0.007887133 ubox
48 53 0.139696206 ubox
48 58 0.008217274 ubox
53 59 0.041048919 ubox
54 58 0.040805748 ubox
55 61 0.014660230 ubox
56 60 0.012982378 ubox
57 63 0.053870372 ubox
58 62 0.053628407 ubox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
9 16 0.9500000 lbox
10 15 0.9500000 lbox
27 60 0.9500000 lbox
28 59 0.9500000 lbox
29 58 0.9500000 lbox
30 57 0.9500000 lbox
31 54 0.9500000 lbox
32 53 0.9500000 lbox
34 47 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
showpage
end
%%EOF
