%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RNF17)
} def

/sequence { (\
GGACUCGCACUCGGCGGUUGUUCCAGAAGAAAGAGACAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.006243448 ubox
1 12 0.020583057 ubox
1 19 0.008260952 ubox
1 22 0.004337219 ubox
1 23 0.246038817 ubox
1 24 0.408699409 ubox
2 10 0.008264444 ubox
2 11 0.019386301 ubox
2 12 0.020140748 ubox
2 18 0.006815852 ubox
2 19 0.146388849 ubox
2 21 0.003768135 ubox
2 22 0.250836523 ubox
2 23 0.408088102 ubox
3 11 0.019355925 ubox
3 18 0.172566750 ubox
3 21 0.351492027 ubox
3 22 0.315681534 ubox
4 14 0.017108258 ubox
4 17 0.190511588 ubox
4 20 0.427000278 ubox
4 35 0.052519149 ubox
4 39 0.004277202 ubox
5 13 0.008744605 ubox
5 14 0.035869885 ubox
5 16 0.032812652 ubox
5 17 0.398456517 ubox
5 30 0.003957968 ubox
5 34 0.052828601 ubox
5 36 0.004219949 ubox
5 38 0.003783292 ubox
6 13 0.051409453 ubox
6 16 0.979552764 ubox
6 20 0.030052781 ubox
6 29 0.004170198 ubox
6 33 0.052825128 ubox
6 35 0.004572666 ubox
6 41 0.077210495 ubox
7 12 0.048369011 ubox
7 15 0.987874637 ubox
7 18 0.027363766 ubox
7 19 0.028510148 ubox
7 21 0.039509007 ubox
7 40 0.084453699 ubox
8 14 0.987160964 ubox
8 17 0.028358532 ubox
8 20 0.039740013 ubox
8 39 0.084428668 ubox
9 18 0.039170052 ubox
9 19 0.030084736 ubox
9 21 0.003204192 ubox
10 17 0.047027707 ubox
10 20 0.003234712 ubox
10 26 0.008351898 ubox
10 29 0.038681780 ubox
10 35 0.082080364 ubox
11 16 0.042702739 ubox
11 17 0.012679758 ubox
11 25 0.008313586 ubox
11 27 0.031096137 ubox
11 28 0.031533592 ubox
11 30 0.020857923 ubox
11 34 0.082153020 ubox
11 36 0.020752957 ubox
12 16 0.014593987 ubox
12 26 0.038378372 ubox
12 29 0.021318429 ubox
12 33 0.082117994 ubox
12 35 0.020895598 ubox
12 41 0.005871491 ubox
13 22 0.012328108 ubox
13 23 0.004744347 ubox
13 24 0.032218175 ubox
13 40 0.005031205 ubox
14 21 0.013927993 ubox
14 22 0.003584331 ubox
14 23 0.032121119 ubox
14 40 0.041921231 ubox
15 20 0.015841369 ubox
15 39 0.041997216 ubox
15 41 0.014028544 ubox
16 22 0.005565083 ubox
16 23 0.011134886 ubox
16 24 0.047805009 ubox
16 40 0.012422611 ubox
17 21 0.003942663 ubox
17 22 0.010449739 ubox
17 23 0.047886089 ubox
17 37 0.051355184 ubox
17 40 0.849940549 ubox
18 26 0.039074982 ubox
18 27 0.045542325 ubox
18 28 0.026208513 ubox
18 29 0.020169913 ubox
18 30 0.008984019 ubox
18 31 0.011548853 ubox
18 32 0.004367584 ubox
18 33 0.004215905 ubox
18 34 0.018260449 ubox
18 35 0.009990450 ubox
18 36 0.051157582 ubox
18 39 0.851420294 ubox
19 25 0.041021199 ubox
19 26 0.045252838 ubox
19 27 0.026440361 ubox
19 28 0.021065814 ubox
19 29 0.008851841 ubox
19 30 0.012930343 ubox
19 31 0.004371567 ubox
19 32 0.005752154 ubox
19 33 0.019549096 ubox
19 34 0.013500948 ubox
19 35 0.048661451 ubox
19 38 0.853271484 ubox
19 41 0.009853877 ubox
20 24 0.041026738 ubox
20 37 0.855768613 ubox
20 40 0.031904732 ubox
21 27 0.007578054 ubox
21 28 0.014104974 ubox
21 29 0.004571723 ubox
21 30 0.010233714 ubox
21 31 0.089844154 ubox
21 32 0.018556990 ubox
21 33 0.009184865 ubox
21 34 0.010546490 ubox
21 35 0.339707917 ubox
21 36 0.767176632 ubox
21 39 0.031411782 ubox
22 26 0.007874605 ubox
22 27 0.013600840 ubox
22 28 0.006980346 ubox
22 29 0.012655410 ubox
22 30 0.147137091 ubox
22 31 0.022847800 ubox
22 32 0.012771404 ubox
22 33 0.015452965 ubox
22 34 0.482332940 ubox
22 35 0.640178176 ubox
22 36 0.139685012 ubox
22 38 0.023845334 ubox
23 29 0.162406431 ubox
23 33 0.533460003 ubox
23 35 0.196786279 ubox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 37 0.9500000 lbox
21 36 0.9500000 lbox
22 35 0.9500000 lbox
showpage
end
%%EOF
