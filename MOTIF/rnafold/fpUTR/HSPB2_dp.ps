%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HSPB2)
} def

/sequence { (\
CCUAUCGAGCCCUGGCUCUCCGGGCAGCUGGAGGGGUCGCGCUGCGCCUGUUGGGGCUGCACCUCGGACCAGGGCUUCUGCUGCAUCUGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 80 0.009497806 ubox
4 79 0.053680045 ubox
6 80 0.010094028 ubox
7 77 0.854856926 ubox
7 78 0.389768998 ubox
7 79 0.017804808 ubox
8 76 0.953717751 ubox
8 77 0.276909609 ubox
8 79 0.004931012 ubox
9 75 0.999171420 ubox
9 76 0.039157554 ubox
10 74 0.999995112 ubox
11 73 0.999994904 ubox
12 72 0.999988496 ubox
13 71 0.999754548 ubox
14 70 0.999976903 ubox
15 69 0.999363846 ubox
16 34 0.004999496 ubox
16 35 0.050614753 ubox
16 67 0.099581925 ubox
17 34 0.052562684 ubox
17 66 0.091051515 ubox
17 67 0.076399503 ubox
17 68 0.880077683 ubox
18 33 0.072806196 ubox
18 66 0.085603365 ubox
18 67 0.882486199 ubox
19 32 0.087969541 ubox
19 66 0.860679503 ubox
19 67 0.022698489 ubox
19 68 0.441797977 ubox
20 31 0.092123167 ubox
20 66 0.092853186 ubox
20 67 0.446246089 ubox
21 30 0.092141428 ubox
21 66 0.445945257 ubox
22 29 0.092012821 ubox
22 63 0.918327164 ubox
22 64 0.036079019 ubox
22 65 0.376059010 ubox
23 28 0.091945660 ubox
23 62 0.925677716 ubox
23 63 0.159996791 ubox
23 64 0.313647132 ubox
23 65 0.004395003 ubox
24 45 0.012471518 ubox
24 60 0.978111138 ubox
24 62 0.109301214 ubox
24 63 0.145470685 ubox
25 44 0.012849292 ubox
25 59 0.995448064 ubox
26 43 0.012974398 ubox
26 58 0.995391299 ubox
27 42 0.013033048 ubox
27 57 0.995314289 ubox
28 41 0.013019613 ubox
28 55 0.468362266 ubox
28 56 0.878491791 ubox
29 53 0.005713283 ubox
29 54 0.660624051 ubox
29 55 0.732543894 ubox
30 52 0.019374963 ubox
31 38 0.012806090 ubox
31 51 0.015476527 ubox
31 52 0.967425703 ubox
32 37 0.012481961 ubox
32 49 0.048818814 ubox
32 51 0.978178259 ubox
32 52 0.040040260 ubox
33 48 0.049326879 ubox
33 49 0.022155982 ubox
33 51 0.041358657 ubox
33 52 0.010248695 ubox
33 65 0.055967125 ubox
34 47 0.049313800 ubox
34 48 0.021941517 ubox
34 49 0.989505869 ubox
34 51 0.004220606 ubox
34 64 0.071139005 ubox
34 65 0.018017201 ubox
35 47 0.021112397 ubox
35 48 0.993485690 ubox
35 49 0.037397412 ubox
35 63 0.075878029 ubox
35 64 0.007034380 ubox
35 70 0.003773675 ubox
36 42 0.003163175 ubox
36 45 0.049280463 ubox
36 47 0.993388853 ubox
36 48 0.037540039 ubox
36 62 0.076364768 ubox
36 63 0.007108779 ubox
36 69 0.023796327 ubox
37 44 0.045184459 ubox
37 46 0.231020993 ubox
37 61 0.075840164 ubox
37 67 0.022525441 ubox
37 68 0.031067601 ubox
38 44 0.050491497 ubox
38 46 0.966594667 ubox
38 59 0.003576884 ubox
38 66 0.028764245 ubox
38 67 0.032153743 ubox
39 43 0.031327295 ubox
39 45 0.988714161 ubox
39 47 0.010218738 ubox
39 58 0.003389647 ubox
39 60 0.068022217 ubox
39 65 0.028830934 ubox
40 44 0.981567679 ubox
40 46 0.012256550 ubox
40 59 0.068001118 ubox
40 66 0.032720699 ubox
41 45 0.012375693 ubox
41 57 0.012863756 ubox
41 58 0.054595608 ubox
41 60 0.042446068 ubox
41 65 0.032741020 ubox
42 56 0.013140391 ubox
42 59 0.042404507 ubox
43 55 0.013068221 ubox
43 61 0.043218052 ubox
44 57 0.078077179 ubox
44 60 0.044349877 ubox
45 53 0.012466817 ubox
45 56 0.078251242 ubox
45 59 0.044339977 ubox
46 52 0.010108237 ubox
46 57 0.046880272 ubox
46 58 0.009335324 ubox
47 54 0.077988499 ubox
47 55 0.007733034 ubox
47 56 0.047808114 ubox
48 53 0.077958839 ubox
48 54 0.007767631 ubox
48 55 0.047798940 ubox
49 53 0.007034540 ubox
49 54 0.046889976 ubox
51 67 0.004648559 ubox
52 66 0.006274738 ubox
53 65 0.008001110 ubox
54 64 0.007944179 ubox
55 63 0.007976606 ubox
56 62 0.007955178 ubox
78 92 0.053449902 ubox
79 91 0.054470276 ubox
80 90 0.054653758 ubox
80 93 0.995109910 ubox
81 89 0.054640237 ubox
81 92 0.998443555 ubox
82 91 0.998250832 ubox
83 90 0.998480895 ubox
84 89 0.997043411 ubox
7 77 0.9500000 lbox
8 76 0.9500000 lbox
9 75 0.9500000 lbox
10 74 0.9500000 lbox
11 73 0.9500000 lbox
12 72 0.9500000 lbox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
15 69 0.9500000 lbox
17 68 0.9500000 lbox
18 67 0.9500000 lbox
19 66 0.9500000 lbox
22 63 0.9500000 lbox
23 62 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
34 49 0.9500000 lbox
35 48 0.9500000 lbox
36 47 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
40 44 0.9500000 lbox
80 93 0.9500000 lbox
81 92 0.9500000 lbox
82 91 0.9500000 lbox
83 90 0.9500000 lbox
84 89 0.9500000 lbox
showpage
end
%%EOF
