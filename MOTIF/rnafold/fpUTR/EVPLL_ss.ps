%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCCCACCUUGCCAGACUUAGCUGACCAGCCAGCAAGGACGCCCGCUGCCUCCCACCUGCCCUCCUGCCCUCCUUCACCAGCCAAGCCCAGCCUGAGCCAGCACCUGCCUUUAUGACCAUGUUCAAGGGACUGAGCAAAGGCUCCCAGGGGAAGGGGUCCCCCAAGGACUCCCCAGCCAAGGGGUCCCCCAAAGGCUCCCCCAGCAAGCACAGCUGAAUGCCACCCAGGAGCUGACCCUGCUCAUCUCCCAC\
) } def
/len { sequence length } bind def

/coor [
[123.79640198 165.12396240]
[104.79694366 169.16928101]
[85.42096710 167.78533936]
[67.18932343 161.08076477]
[58.70334625 173.44960022]
[63.10319519 184.45724487]
[61.67119217 196.10426331]
[54.87591553 205.52407837]
[44.49151993 210.45434570]
[33.13587570 209.77972412]
[24.34890556 221.93658447]
[15.56193829 234.09344482]
[6.77497101 246.25028992]
[-2.01199698 258.40716553]
[-10.79896450 270.56402588]
[-18.97883987 283.13739014]
[-26.53191566 296.09698486]
[-34.08499146 309.05657959]
[-29.81517029 324.27313232]
[-37.62842941 338.01098633]
[-52.88929749 342.11968994]
[-66.54377747 334.16162109]
[-70.49089813 318.85818481]
[-62.38891602 305.28860474]
[-47.04458237 301.50347900]
[-39.49150848 288.54391479]
[-31.93843269 275.58432007]
[-46.07811737 280.59121704]
[-60.48706055 276.42202759]
[-69.76837921 264.63824463]
[-70.44573975 249.65354919]
[-62.26544189 237.08045959]
[-48.29142380 231.62823486]
[-33.75766373 235.33901978]
[-24.10780525 246.82292175]
[-22.95582199 261.77703857]
[-14.16885471 249.62019348]
[-5.38188696 237.46333313]
[3.40508056 225.30647278]
[12.19204807 213.14961243]
[20.97901726 200.99275208]
[17.00283813 183.10260010]
[27.57165337 167.74005127]
[46.33450699 164.96362305]
[54.82048416 152.59478760]
[39.41777420 133.72230530]
[31.49318695 110.68723297]
[32.02491379 86.33295441]
[17.72532463 81.80286407]
[3.42573428 77.27277374]
[-10.87385654 72.74268341]
[-26.36635399 75.95096588]
[-36.16262817 64.73123932]
[-50.46221924 60.20114899]
[-64.76181030 55.67105865]
[-75.19931030 64.64899445]
[-88.60219574 67.28362274]
[-101.45621490 62.99293900]
[-110.44454956 52.99664307]
[-113.30361938 39.97182465]
[-127.54654694 35.26659775]
[-141.78947449 30.56137276]
[-155.77810669 37.41379929]
[-170.15542603 32.43913651]
[-176.60195923 19.06087685]
[-190.84487915 14.35565090]
[-210.40328979 19.31335068]
[-222.58764648 4.27797079]
[-236.94175720 -0.07629928]
[-251.29585266 -4.43056965]
[-261.99090576 6.51814508]
[-276.55261230 11.23147774]
[-291.63476562 8.62633991]
[-303.77163696 -0.69862753]
[-310.17425537 -14.60061550]
[-309.37130737 -29.88504791]
[-301.54736328 -43.03967667]
[-288.50024414 -51.04166031]
[-273.22814941 -52.05220413]
[-259.24044800 -45.83909225]
[-249.75141907 -33.83005142]
[-246.94158936 -18.78467369]
[-232.58747864 -14.43040466]
[-218.23336792 -10.07613373]
[-209.72331238 -15.66890526]
[-199.32077026 -15.66953564]
[-190.44343567 -9.83734035]
[-186.13966370 0.11272839]
[-171.89674377 4.81795454]
[-158.74940491 -2.08736658]
[-144.23803711 2.48150611]
[-137.08424377 16.31844902]
[-122.84131622 21.02367592]
[-108.59839630 25.72890091]
[-95.57024384 15.72022343]
[-78.97711945 15.45693207]
[-65.36776733 25.24144173]
[-60.23171997 41.37146759]
[-45.93212891 45.90155792]
[-31.63253975 50.43164825]
[-17.16284370 46.89934540]
[-6.34376717 58.44309235]
[7.95582342 62.97318268]
[22.25541496 67.50327301]
[36.55500412 72.03336334]
[39.80902481 65.58420563]
[43.71636963 59.50860596]
[48.23462296 53.87250519]
[53.31474304 48.73707581]
[58.90159607 44.15806580]
[64.93453979 40.18517303]
[71.34808350 36.86151886]
[78.07261658 34.22317886]
[85.03516388 32.29878998]
[92.16013336 31.10923958]
[99.37020111 30.66744041]
[106.58710480 30.97818947]
[113.73250580 32.03810883]
[120.72885895 33.83570099]
[127.50021362 36.35144424]
[133.97308350 39.55804443]
[140.07719421 43.42068863]
[145.74630737 47.89745331]
[150.91888428 52.93974686]
[155.53877258 58.49283981]
[159.55584717 64.49645233]
[162.92648315 70.88543701]
[165.61410522 77.59042358]
[167.58955383 84.53865814]
[168.83135986 91.65470123]
[183.83023071 91.47063446]
[198.82910156 91.28656006]
[213.82797241 91.10248566]
[229.45614624 81.33891296]
[244.40719604 90.55078125]
[259.40267944 90.18266296]
[274.39816284 89.81454468]
[289.39364624 89.44642639]
[304.38912964 89.07830811]
[319.38461304 88.71018982]
[332.48889160 73.44548035]
[352.28970337 72.79614258]
[365.93682861 86.73157501]
[380.90859985 85.81176758]
[395.88037109 84.89196014]
[410.85214233 83.97214508]
[425.82391357 83.05233765]
[440.79568481 82.13252258]
[449.89270020 73.01524353]
[462.36276245 72.54243469]
[471.51641846 80.42302704]
[486.49835205 79.68701172]
[501.48028564 78.95099640]
[505.09576416 66.49421692]
[515.55828857 56.47688675]
[531.09136963 52.61337662]
[547.97741699 57.33320999]
[561.69055176 51.25458908]
[575.40368652 45.17596817]
[589.11682129 39.09735107]
[594.87994385 24.62584114]
[608.87359619 18.65660477]
[622.63446045 24.24001122]
[636.34759521 18.16139221]
[650.06072998 12.08277225]
[663.77386475 6.00415277]
[669.53698730 -8.46735573]
[683.53063965 -14.43659210]
[697.29150391 -8.85318470]
[711.00463867 -14.93180466]
[717.55877686 -21.25224304]
[724.92358398 -20.99972916]
[738.71026611 -26.90960884]
[748.09442139 -40.35840607]
[764.40814209 -38.68651199]
[770.86926270 -23.61382866]
[760.83117676 -10.64584064]
[744.62017822 -13.12290192]
[730.83343506 -7.21302128]
[717.08325195 -1.21865809]
[703.37011719 4.85996151]
[698.26593018 18.80566978]
[684.44543457 25.16560364]
[669.85253906 19.71729851]
[656.13934326 25.79591942]
[642.42620850 31.87453842]
[628.71307373 37.95315933]
[623.60888672 51.89886856]
[609.78839111 58.25880051]
[595.19543457 52.81049728]
[581.48229980 58.88911438]
[567.76916504 64.96773529]
[554.05603027 71.04635620]
[553.87194824 78.54409790]
[566.67437744 86.36061096]
[553.50384521 93.53958130]
[553.31976318 101.03732300]
[566.71813965 107.78148651]
[580.11651611 114.52565765]
[590.34564209 107.39711761]
[602.56207275 105.29496002]
[614.44659424 108.55619049]
[623.76947021 116.50551605]
[628.80834961 127.59407043]
[628.66662598 139.70091248]
[641.89544678 146.77186584]
[655.12426758 153.84281921]
[668.35308838 160.91377258]
[682.79638672 154.91996765]
[697.69775391 159.66168213]
[706.02117920 172.90003967]
[703.83666992 188.38429260]
[692.17565918 198.80323792]
[676.54406738 199.23738098]
[664.32275391 189.48171997]
[661.28216553 174.14259338]
[648.05334473 167.07164001]
[634.82452393 160.00068665]
[621.59570312 152.92973328]
[606.05541992 161.36550903]
[588.40985107 158.73930359]
[575.77838135 145.91908264]
[573.37231445 127.92402649]
[559.97399902 121.17985535]
[546.57562256 114.43568420]
[516.26904297 114.38833618]
[502.21630859 93.93292999]
[487.23437500 94.66894531]
[472.25244141 95.40496063]
[458.01956177 105.69173431]
[441.71548462 97.10429382]
[426.74371338 98.02410889]
[411.77194214 98.94391632]
[396.80017090 99.86373138]
[381.82839966 100.78353882]
[366.85662842 101.70335388]
[362.40447998 110.89813995]
[354.48477173 117.47823334]
[344.47445679 120.21295166]
[334.15011597 118.54782104]
[325.37286377 112.71545410]
[319.75271606 103.70567322]
[304.75726318 104.07379150]
[289.76177979 104.44190979]
[274.76629639 104.81002808]
[259.77081299 105.17814636]
[244.77531433 105.54626465]
[236.22619629 114.07888031]
[223.75512695 114.52471924]
[214.01203918 106.10135651]
[199.01318359 106.28543091]
[184.01431274 106.46950531]
[169.01544189 106.65357208]
[164.46112061 125.53749084]
[154.84712219 142.41691589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 45]
[5 44]
[10 41]
[11 40]
[12 39]
[13 38]
[14 37]
[15 36]
[16 27]
[17 26]
[18 25]
[48 105]
[49 104]
[50 103]
[51 102]
[53 100]
[54 99]
[55 98]
[60 94]
[61 93]
[62 92]
[65 89]
[66 88]
[68 84]
[69 83]
[70 82]
[130 253]
[131 252]
[132 251]
[133 250]
[135 247]
[136 246]
[137 245]
[138 244]
[139 243]
[140 242]
[143 236]
[144 235]
[145 234]
[146 233]
[147 232]
[148 231]
[151 229]
[152 228]
[153 227]
[157 193]
[158 192]
[159 191]
[160 190]
[163 187]
[164 186]
[165 185]
[166 184]
[169 181]
[170 180]
[172 179]
[173 178]
[197 225]
[198 224]
[199 223]
[205 219]
[206 218]
[207 217]
[208 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
