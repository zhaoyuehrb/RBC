%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (F12)
} def

/sequence { (\
CUAUUGAUCUGGACUCCUGGAUAGGCAGCUGGACCAACGGACGGAUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.019564297 ubox
1 20 0.009878642 ubox
1 24 0.054469545 ubox
1 28 0.006948482 ubox
1 32 0.003571730 ubox
1 40 0.259787551 ubox
1 44 0.013055178 ubox
2 11 0.019650850 ubox
2 19 0.009881264 ubox
2 23 0.067073787 ubox
2 27 0.006929049 ubox
2 31 0.003588342 ubox
2 39 0.255762999 ubox
2 43 0.012631468 ubox
2 47 0.048362659 ubox
3 10 0.018214598 ubox
3 18 0.009308686 ubox
3 22 0.059273461 ubox
3 30 0.003535086 ubox
3 46 0.053446086 ubox
4 13 0.004295502 ubox
4 21 0.044696442 ubox
4 24 0.025001681 ubox
4 25 0.006233664 ubox
4 28 0.004667676 ubox
4 37 0.271818587 ubox
4 40 0.003681447 ubox
4 41 0.005856710 ubox
4 44 0.008312610 ubox
4 45 0.053696973 ubox
5 12 0.004594181 ubox
5 20 0.038126659 ubox
5 23 0.151528119 ubox
5 24 0.028166098 ubox
5 27 0.005519726 ubox
5 36 0.288223273 ubox
5 39 0.004769839 ubox
5 40 0.005005384 ubox
5 43 0.013278261 ubox
5 44 0.053333620 ubox
5 47 0.019185295 ubox
6 16 0.010912893 ubox
6 22 0.114321145 ubox
6 26 0.005644702 ubox
6 35 0.289386490 ubox
6 38 0.005332457 ubox
6 42 0.015862473 ubox
6 46 0.013124165 ubox
7 15 0.010548999 ubox
7 22 0.869891513 ubox
7 46 0.251231943 ubox
8 20 0.022596321 ubox
8 21 0.909178311 ubox
8 33 0.287169184 ubox
8 41 0.055425797 ubox
8 45 0.259356312 ubox
9 19 0.031712088 ubox
9 20 0.915617899 ubox
9 24 0.003702457 ubox
9 32 0.292129752 ubox
9 39 0.003269290 ubox
9 40 0.055755901 ubox
9 44 0.260932924 ubox
10 19 0.910365068 ubox
10 23 0.004198602 ubox
10 31 0.290986437 ubox
10 36 0.015360240 ubox
10 39 0.054337857 ubox
10 43 0.260664110 ubox
11 17 0.168177630 ubox
11 18 0.893853476 ubox
11 22 0.004128598 ubox
11 30 0.290922457 ubox
11 35 0.020056549 ubox
11 38 0.052827477 ubox
11 42 0.259946875 ubox
11 49 0.012474374 ubox
12 16 0.166219205 ubox
12 17 0.893259602 ubox
12 29 0.292002598 ubox
12 34 0.020411542 ubox
12 48 0.012616734 ubox
14 20 0.005752915 ubox
14 28 0.279886450 ubox
14 32 0.018868252 ubox
14 40 0.150550943 ubox
15 19 0.005217976 ubox
15 21 0.004630739 ubox
15 27 0.278802554 ubox
15 31 0.018159771 ubox
15 32 0.004929288 ubox
15 33 0.047296487 ubox
15 39 0.148297909 ubox
15 40 0.014497361 ubox
15 41 0.202710508 ubox
15 45 0.012424766 ubox
16 20 0.004904700 ubox
16 25 0.289858701 ubox
16 31 0.005890229 ubox
16 32 0.048182238 ubox
16 39 0.021145181 ubox
16 40 0.204531167 ubox
16 44 0.012569124 ubox
17 24 0.289868597 ubox
17 25 0.032849426 ubox
17 28 0.035808644 ubox
17 31 0.046340804 ubox
17 32 0.017394980 ubox
17 39 0.203886311 ubox
17 43 0.012536923 ubox
18 23 0.271173574 ubox
18 24 0.032503644 ubox
18 27 0.042517698 ubox
18 31 0.017597755 ubox
18 36 0.247008787 ubox
19 26 0.042781325 ubox
19 30 0.033642720 ubox
19 35 0.260519526 ubox
19 38 0.006273073 ubox
20 29 0.035342977 ubox
20 34 0.260159144 ubox
22 31 0.256078073 ubox
23 30 0.258709618 ubox
24 29 0.258670996 ubox
24 30 0.027004821 ubox
24 35 0.006502073 ubox
24 49 0.907780670 ubox
25 29 0.026676722 ubox
25 34 0.006507555 ubox
25 48 0.917951738 ubox
26 47 0.917944888 ubox
27 46 0.859238562 ubox
28 48 0.004216181 ubox
29 40 0.085116028 ubox
29 44 0.908185241 ubox
29 47 0.004212057 ubox
30 39 0.086987505 ubox
30 43 0.912319870 ubox
31 38 0.089863049 ubox
31 42 0.912289195 ubox
34 40 0.501828278 ubox
34 44 0.023770495 ubox
35 39 0.470132934 ubox
35 43 0.023901140 ubox
38 47 0.026559209 ubox
39 46 0.024611839 ubox
39 49 0.046535031 ubox
40 48 0.046816782 ubox
43 49 0.065878878 ubox
44 48 0.065289864 ubox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
24 49 0.9500000 lbox
25 48 0.9500000 lbox
26 47 0.9500000 lbox
27 46 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
showpage
end
%%EOF
