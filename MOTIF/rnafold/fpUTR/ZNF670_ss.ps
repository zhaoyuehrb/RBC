%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACUCUCAAGCGCGCCGCGAAAGGAGGGAGCAGCUUCCGGGACCUGGCGCGGCUUUUGUGUUGGGCAGCGCGAAUGUGGCGAGCUCGGUGCGUCUCCGCUGCUCCUUCCCCUUAUCCCUGGGAGGUCCAAGUGGUCCCGCGGCAGCUUCUGUUGCUCUGGGACCUGCAGGUCCCGGAAGGUCCUUAGGGAGGACCCCAGACACCGGAGACUGGGAA\
) } def
/len { sequence length } bind def

/coor [
[41.58295822 349.42587280]
[34.71538162 362.76138306]
[35.27587128 378.57266235]
[22.57010269 386.34524536]
[15.70252800 399.68075562]
[8.83495235 413.01629639]
[1.96737778 426.35183716]
[-4.90019703 439.68737793]
[2.91851950 454.68896484]
[0.27921179 471.23034668]
[-11.58192444 482.82153320]
[-27.85025597 485.03451538]
[-34.52494431 498.46762085]
[-41.19963455 511.90075684]
[-42.83298111 528.77581787]
[-59.50073624 531.87780762]
[-67.09558105 516.72015381]
[-54.63274765 505.22604370]
[-47.95805740 491.79293823]
[-41.28336716 478.35983276]
[-48.53449631 467.15332031]
[-49.30887604 453.71954346]
[-43.29757690 441.55999756]
[-31.97432709 433.89694214]
[-18.23572922 432.81979370]
[-11.36815453 419.48425293]
[-4.50057936 406.14871216]
[2.36699557 392.81320190]
[9.23457050 379.47766113]
[8.18286896 364.62023926]
[21.37985039 355.89382935]
[28.24742699 342.55828857]
[44.79410553 317.66567993]
[67.14549255 308.11389160]
[86.01341248 312.99728394]
[85.36511993 298.01129150]
[84.71682739 283.02529907]
[84.06853485 268.03933716]
[83.42024231 253.05334473]
[82.77194977 238.06735229]
[82.12365723 223.08137512]
[81.47536469 208.09538269]
[80.82707214 193.10940552]
[80.17877960 178.12341309]
[79.53048706 163.13743591]
[78.88220215 148.15145874]
[78.23390961 133.16546631]
[67.47556305 122.71281433]
[52.47711945 122.49665833]
[37.47867584 122.28050232]
[22.48023224 122.06434631]
[7.48179054 121.84818268]
[-4.98032141 131.95141602]
[-20.61778259 128.36682129]
[-27.43487167 113.84419250]
[-20.20210266 99.52404022]
[-4.46783352 96.39157104]
[7.69794798 106.84974670]
[22.69639015 107.06590271]
[37.69483185 107.28205872]
[52.69327545 107.49821472]
[67.69171906 107.71437073]
[62.93108749 85.86711121]
[73.65426636 62.13722610]
[63.92076492 50.72412109]
[54.18726349 39.31101227]
[44.45376587 27.89790726]
[34.72026443 16.48480225]
[24.98676491 5.07169628]
[15.25326538 -6.34140968]
[5.51976585 -17.75451469]
[-2.42556667 -22.25028038]
[-4.27032375 -29.40293884]
[-13.83834457 -40.95512390]
[-23.48935509 -52.43806839]
[-33.22285461 -63.85117340]
[-42.95635223 -75.26428223]
[-52.68985367 -86.67738342]
[-62.42335510 -98.09049225]
[-77.26539612 -103.56994629]
[-79.63700867 -118.27452850]
[-89.37051392 -129.68763733]
[-104.99765015 -134.66001892]
[-108.24021912 -150.73539734]
[-95.76253510 -161.37680054]
[-80.40057373 -155.63726807]
[-77.95740509 -139.42112732]
[-68.22390747 -128.00802612]
[-54.07807159 -123.34490967]
[-51.01024628 -107.82398987]
[-41.27674866 -96.41088104]
[-31.54324913 -84.99777985]
[-21.80974770 -73.58467102]
[-12.07624912 -62.17156601]
[-5.34770536 -59.12355804]
[-2.28615928 -50.52314377]
[7.28186131 -38.97095871]
[16.93287277 -27.48801422]
[26.66637230 -16.07490921]
[36.39987183 -4.66180325]
[46.13336945 6.75130272]
[55.86687088 18.16440773]
[65.60037231 29.57751465]
[75.33386993 40.99061966]
[85.06736755 52.40372467]
[99.59288788 48.66081619]
[102.59870148 33.96506500]
[105.60451508 19.26931763]
[108.61033630 4.57356691]
[111.61614990 -10.12218380]
[114.62196350 -24.81793404]
[103.50669861 -35.51626587]
[99.96212769 -50.53091431]
[105.11932373 -65.07075500]
[117.33263397 -74.49617767]
[132.70483398 -75.79956055]
[146.33071899 -68.56501007]
[153.86231995 -55.10103226]
[152.89631653 -39.70394516]
[143.74096680 -27.28689384]
[129.31771851 -21.81211853]
[126.31189728 -7.11636734]
[123.30608368 7.57938242]
[120.30027008 22.27513313]
[117.29444885 36.97088242]
[114.28863525 51.66663361]
[120.09905243 56.40890121]
[129.58358765 44.78807449]
[135.01289368 30.80513573]
[149.98921204 31.64778328]
[153.81571960 46.15150070]
[141.20440674 54.27260590]
[131.71987915 65.89343262]
[137.53028870 70.63570404]
[151.32563782 64.74600220]
[165.12097168 58.85630798]
[178.91632080 52.96661377]
[192.71165466 47.07691574]
[206.50700378 41.18722153]
[220.30235291 35.29752350]
[229.95619202 22.76302338]
[244.69935608 24.88162041]
[258.49468994 18.99192429]
[272.29003906 13.10222816]
[286.08538818 7.21253252]
[299.88073730 1.32283664]
[313.67608643 -4.56685925]
[323.07986450 -18.00190735]
[339.39111328 -16.30613708]
[345.83016968 -1.22401345]
[335.77310181 11.72926903]
[319.56576538 9.22848320]
[305.77041626 15.11817932]
[291.97509766 21.00787544]
[278.17974854 26.89757156]
[264.38439941 32.78726578]
[250.58905029 38.67696381]
[241.92193604 50.79019547]
[226.19204712 49.09286880]
[212.39669800 54.98256302]
[198.60134888 60.87226105]
[184.80601501 66.76195526]
[171.01066589 72.65164948]
[157.21533203 78.54134369]
[143.41998291 84.43104553]
[139.10401917 114.83486938]
[118.03143311 132.90312195]
[93.21989441 132.51718140]
[93.86817932 147.50315857]
[94.51647186 162.48915100]
[95.16476440 177.47512817]
[95.81305695 192.46110535]
[96.46134949 207.44709778]
[97.10964203 222.43307495]
[97.75793457 237.41906738]
[98.40622711 252.40504456]
[99.05451965 267.39102173]
[99.70281219 282.37701416]
[100.35110474 297.36300659]
[100.99939728 312.34899902]
[107.57711792 325.82983398]
[118.99022675 335.56335449]
[130.40333557 345.29684448]
[141.81643677 355.03033447]
[153.22953796 364.76385498]
[164.64265442 374.49734497]
[180.61769104 380.17486572]
[179.58439636 397.09729004]
[163.03726196 400.78897095]
[154.90914917 385.91046143]
[143.49604797 376.17694092]
[132.08293152 366.44345093]
[120.66983032 356.70996094]
[109.25672913 346.97644043]
[97.84362030 337.24295044]
[85.57012939 345.86627197]
[90.85809326 359.90325928]
[96.14606476 373.94027710]
[101.43402863 387.97726440]
[106.72199249 402.01425171]
[121.88932800 404.43240356]
[133.80545044 414.12271118]
[139.26495361 428.47851562]
[136.79928589 443.63818359]
[127.07168579 455.52386475]
[112.69882965 460.93835449]
[97.54695129 458.42520142]
[85.69181824 448.66036987]
[80.32241058 434.27062988]
[82.88307190 419.12670898]
[92.68498993 407.30224609]
[87.39702606 393.26522827]
[82.10906219 379.22824097]
[76.82109833 365.19122314]
[71.53312683 351.15423584]
[64.04558563 350.72213745]
[55.80990219 363.25903320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[4 29]
[5 28]
[6 27]
[7 26]
[8 25]
[12 20]
[13 19]
[14 18]
[35 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[64 105]
[65 104]
[66 103]
[67 102]
[68 101]
[69 100]
[70 99]
[71 98]
[73 97]
[74 96]
[75 94]
[76 93]
[77 92]
[78 91]
[79 90]
[81 88]
[82 87]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[134 165]
[135 164]
[136 163]
[137 162]
[138 161]
[139 160]
[140 159]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
[181 195]
[182 194]
[183 193]
[184 192]
[185 191]
[186 190]
[196 215]
[197 214]
[198 213]
[199 212]
[200 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
