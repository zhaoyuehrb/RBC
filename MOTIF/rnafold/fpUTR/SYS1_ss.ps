%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUACGCCUGCGCAACCUCAGCCCCGCCCCUCCGCUGCUUUCCCCGGAAACGUUUCUUUCCUACGCAGCCGCUCCUGCCGCCGUGGUCGCUGGAGCUUUGCCUCUCUAGGCCGGCAGCGCCUCUCCUCCAUGGUCCUGUCUGUCAGCGCUGUUUUGGGAGCCCGCCGGUGAGGCCGGGCCACGCUCAGACACUUCGAUCGUCGAGUCUGUCACUGGGC\
) } def
/len { sequence length } bind def

/coor [
[212.13742065 640.70074463]
[218.36862183 654.34527588]
[207.31747437 664.48785400]
[194.25631714 657.11181641]
[197.23519897 642.41064453]
[195.52531433 627.50842285]
[188.07420349 628.36334229]
[183.64314270 642.69390869]
[187.80703735 658.55566406]
[175.96357727 669.89868164]
[160.29627991 665.05426025]
[156.92233276 649.00598145]
[169.31254578 638.26287842]
[173.74362183 623.93225098]
[165.27966309 615.39239502]
[159.52046204 605.18756104]
[156.73542786 594.12054443]
[156.96734619 583.01654053]
[160.03988647 572.66192627]
[165.58106995 563.74859619]
[173.06015015 556.82757568]
[181.83462524 552.27593994]
[178.02136230 537.76873779]
[174.20808411 523.26153564]
[170.39480591 508.75433350]
[159.67619324 498.41213989]
[163.65104675 483.09838867]
[159.83776855 468.59118652]
[156.02449036 454.08398438]
[142.10099792 448.86151123]
[133.82464600 436.29306030]
[134.54446411 421.08334351]
[144.19374084 409.07510376]
[140.38046265 394.56790161]
[136.56718445 380.06069946]
[125.84857178 369.71850586]
[129.82342529 354.40475464]
[126.01014709 339.89755249]
[113.05723572 332.63412476]
[108.98336792 317.97607422]
[116.68975830 304.43911743]
[112.87648010 289.93191528]
[109.06320953 275.42471313]
[105.24993134 260.91751099]
[101.43665314 246.41030884]
[84.40093994 240.59074402]
[74.22866058 225.73788452]
[59.23019409 225.95208740]
[44.23172379 226.16627502]
[29.23325157 226.38046265]
[14.23478127 226.59466553]
[3.40130019 238.10166931]
[-12.39810848 238.49441528]
[-23.78993607 227.53987122]
[-24.01561165 211.73719788]
[-12.94124889 200.46182251]
[2.86293125 200.40322876]
[14.02058887 211.59619141]
[29.01906013 211.38200378]
[44.01752853 211.16780090]
[59.01599884 210.95361328]
[74.01447296 210.73942566]
[76.58966064 203.69415283]
[80.94037628 197.50614929]
[86.79565430 192.61779785]
[93.77578735 189.38874817]
[93.56159973 174.39028931]
[93.34740448 159.39181519]
[93.13321686 144.39334106]
[92.91902161 129.39486694]
[60.55439758 118.65270233]
[48.67095184 75.14267731]
[38.68716431 63.94785309]
[28.70338058 52.75303268]
[18.71959496 41.55820847]
[8.73581028 30.36338806]
[-6.22389936 25.21385956]
[-8.92047596 10.56538677]
[-18.90426064 -0.62943488]
[-33.86397171 -5.77896309]
[-36.56054688 -20.42743492]
[-46.54433441 -31.62225723]
[-62.27772522 -36.24745560]
[-65.87538147 -52.24710464]
[-53.63634872 -63.16214371]
[-38.15108871 -57.76411057]
[-35.34951019 -41.60604095]
[-25.36572647 -30.41122055]
[-11.12012386 -26.06242180]
[-7.70943975 -10.61322021]
[2.27434540 0.58160168]
[16.51994896 4.93040133]
[19.93063164 20.37960243]
[29.91441727 31.57442474]
[39.89820099 42.76924515]
[49.88198853 53.96406937]
[59.86577225 65.15888977]
[66.73180389 62.14101410]
[68.37041473 47.23078156]
[80.46387482 56.10525894]
[87.32991028 53.08738327]
[85.83300781 38.16225815]
[84.33610535 23.23713684]
[82.83920288 8.31201363]
[72.82924652 -4.67770433]
[79.32303619 -19.73634720]
[95.64032745 -21.37287331]
[104.99527740 -7.90376568]
[97.76432800 6.81511259]
[99.26123047 21.74023628]
[100.75813293 36.66535950]
[102.25502777 51.59048080]
[116.95692444 54.56946182]
[131.65750122 57.54819489]
[138.84623718 44.38301086]
[146.03497314 31.21782494]
[153.22370911 18.05264091]
[160.41244507 4.88745546]
[160.23530579 -10.93275928]
[173.12570190 -18.39512444]
[180.31443787 -31.56031036]
[187.50317383 -44.72549438]
[179.44094849 -57.79822540]
[179.01127625 -73.15110779]
[186.32972717 -86.65428925]
[199.42765808 -94.67548370]
[214.78181458 -95.05703735]
[228.26199341 -87.69630432]
[236.24209595 -74.57328796]
[236.57551575 -59.21801376]
[229.17256165 -45.76097488]
[216.02459717 -37.82204819]
[200.66835022 -37.53675842]
[193.47961426 -24.37157440]
[186.29087830 -11.20639038]
[186.98222351 3.67216229]
[173.57763672 12.07618999]
[166.38890076 25.24137497]
[159.20016479 38.40655899]
[152.01142883 51.57174301]
[144.82269287 64.73693085]
[149.01539612 78.10884857]
[149.57682800 91.31195068]
[146.85751343 103.43010712]
[141.42353821 113.71020508]
[133.99789429 121.60894012]
[125.39299774 126.82087708]
[116.43954468 129.28657532]
[107.91749573 129.18067932]
[108.13168335 144.17915344]
[108.34587860 159.17761230]
[108.56006622 174.17608643]
[108.77426147 189.17456055]
[123.42829132 198.21891785]
[130.44862366 213.78799438]
[127.57311249 230.47912598]
[115.94386292 242.59703064]
[119.75713348 257.10421753]
[123.57041168 271.61141968]
[127.38368225 286.11862183]
[131.19696045 300.62582397]
[144.56384277 308.62359619]
[148.22438049 323.39028931]
[140.51734924 336.08428955]
[144.33062744 350.59149170]
[155.32199097 361.97131348]
[151.07438660 376.24743652]
[154.88766479 390.75463867]
[158.70094299 405.26184082]
[173.00784302 410.97308350]
[181.11373901 423.86291504]
[180.08746338 438.87661743]
[170.53169250 450.27069092]
[174.34497070 464.77789307]
[178.15824890 479.28509521]
[189.14961243 490.66494751]
[184.90200806 504.94104004]
[188.71528625 519.44824219]
[192.52856445 533.95544434]
[196.34184265 548.46264648]
[218.55732727 551.82751465]
[235.89230347 568.19427490]
[241.10835266 592.86181641]
[230.83319092 617.38183594]
[238.39494324 630.33636475]
[245.95669556 643.29095459]
[253.51844788 656.24548340]
[261.08020020 669.20001221]
[268.82614136 682.04522705]
[276.75476074 694.77856445]
[284.68334961 707.51184082]
[292.61193848 720.24517822]
[309.05523682 728.54046631]
[308.94760132 746.09197998]
[317.05722046 758.71075439]
[325.16680908 771.32958984]
[333.27642822 783.94836426]
[341.38604736 796.56719971]
[355.03582764 806.62304688]
[349.15164185 822.52307129]
[332.24401855 821.27044678]
[328.76724243 804.67681885]
[320.65762329 792.05798340]
[312.54803467 779.43920898]
[304.43841553 766.82037354]
[296.32879639 754.20159912]
[284.58309937 751.32690430]
[277.72256470 740.88604736]
[279.87863159 728.17376709]
[271.95001221 715.44049072]
[264.02142334 702.70715332]
[256.09283447 689.97381592]
[251.73272705 688.03967285]
[248.53823853 683.34954834]
[248.12565613 676.76171875]
[240.56390381 663.80718994]
[233.00215149 650.85266113]
[225.44041443 637.89813232]
[217.87866211 624.94360352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 14]
[8 13]
[22 180]
[23 179]
[24 178]
[25 177]
[27 175]
[28 174]
[29 173]
[33 169]
[34 168]
[35 167]
[37 165]
[38 164]
[41 161]
[42 160]
[43 159]
[44 158]
[45 157]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[66 153]
[67 152]
[68 151]
[69 150]
[70 149]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[78 91]
[79 90]
[81 88]
[82 87]
[101 112]
[102 111]
[103 110]
[104 109]
[114 141]
[115 140]
[116 139]
[117 138]
[118 137]
[120 135]
[121 134]
[122 133]
[184 219]
[185 218]
[186 217]
[187 216]
[188 215]
[189 212]
[190 211]
[191 210]
[192 209]
[194 206]
[195 205]
[196 204]
[197 203]
[198 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
