%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CAMKMT)
} def

/sequence { (\
GAGGGUGCCGGGCGUCACAGGUCCUGACAGGGAAGAAGUUGGCAGGUCCUGGCAGGGGACGAGCUGCGGCGGUGGCACCUCCGGGUGUGGAAGGCUCCAGUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 81 0.610289328 ubox
1 97 0.174716208 ubox
2 80 0.590244637 ubox
2 96 0.175236414 ubox
3 79 0.485368018 ubox
3 80 0.694977948 ubox
3 81 0.150070556 ubox
3 82 0.046377645 ubox
3 95 0.174131274 ubox
3 97 0.007368559 ubox
3 98 0.025784360 ubox
4 78 0.349273488 ubox
4 79 0.870918701 ubox
4 80 0.018816867 ubox
4 81 0.034073869 ubox
4 82 0.003538921 ubox
4 96 0.004641695 ubox
4 97 0.023989834 ubox
4 98 0.020496019 ubox
5 60 0.035438323 ubox
5 78 0.935452865 ubox
5 79 0.016336624 ubox
5 80 0.008361182 ubox
5 95 0.005763123 ubox
5 96 0.019091517 ubox
5 97 0.020499530 ubox
6 54 0.003317519 ubox
6 59 0.035384313 ubox
6 77 0.994445514 ubox
7 53 0.003690550 ubox
7 70 0.004606532 ubox
7 76 0.998936982 ubox
7 95 0.027247747 ubox
8 52 0.003691361 ubox
8 57 0.035469064 ubox
8 69 0.004662602 ubox
8 75 0.998956792 ubox
8 94 0.027268455 ubox
9 51 0.003689268 ubox
9 56 0.035456951 ubox
9 68 0.004661252 ubox
9 74 0.998617916 ubox
9 93 0.027223024 ubox
10 50 0.003207278 ubox
10 67 0.003997974 ubox
10 73 0.949687104 ubox
10 80 0.003304260 ubox
11 49 0.003193409 ubox
11 79 0.005199046 ubox
12 48 0.003175507 ubox
12 53 0.035003461 ubox
12 64 0.003449046 ubox
12 70 0.093158065 ubox
12 73 0.048610982 ubox
12 78 0.005218644 ubox
12 88 0.003858110 ubox
13 46 0.003327913 ubox
13 52 0.034996651 ubox
13 61 0.003497201 ubox
13 63 0.003265683 ubox
13 68 0.007128459 ubox
13 69 0.093028226 ubox
13 71 0.990835184 ubox
13 72 0.038685651 ubox
13 87 0.003843779 ubox
13 89 0.007792801 ubox
14 43 0.003896079 ubox
14 53 0.005207696 ubox
14 60 0.004311537 ubox
14 70 0.994726012 ubox
14 76 0.005531906 ubox
15 42 0.003914081 ubox
15 52 0.005103793 ubox
15 59 0.004313510 ubox
15 69 0.994068286 ubox
15 75 0.005535271 ubox
16 41 0.004021729 ubox
16 51 0.004350750 ubox
16 58 0.004252326 ubox
16 66 0.003408608 ubox
16 68 0.989306585 ubox
16 74 0.005572940 ubox
17 39 0.007696861 ubox
17 40 0.003232945 ubox
17 73 0.005263264 ubox
18 38 0.008499970 ubox
18 51 0.984934512 ubox
18 66 0.158692427 ubox
18 72 0.004163840 ubox
19 50 0.986688016 ubox
19 65 0.158209318 ubox
20 49 0.987123829 ubox
20 64 0.157876118 ubox
21 47 0.003388670 ubox
21 48 0.986497770 ubox
21 60 0.055543376 ubox
21 64 0.003253869 ubox
22 32 0.004533918 ubox
22 33 0.023841639 ubox
22 46 0.003523895 ubox
22 57 0.010167623 ubox
22 58 0.004233852 ubox
22 59 0.055201063 ubox
22 62 0.146343437 ubox
22 63 0.003710918 ubox
23 31 0.005909800 ubox
23 32 0.025561791 ubox
23 46 0.986516440 ubox
23 56 0.027900610 ubox
23 57 0.008365586 ubox
23 58 0.054329721 ubox
23 61 0.144354390 ubox
24 30 0.006095148 ubox
24 31 0.025788560 ubox
24 32 0.003684641 ubox
24 35 0.005847326 ubox
24 42 0.019300796 ubox
24 45 0.997250532 ubox
24 55 0.033129143 ubox
24 56 0.009928156 ubox
24 57 0.053735010 ubox
25 29 0.005509409 ubox
25 30 0.025119370 ubox
25 31 0.003665247 ubox
25 34 0.005864407 ubox
25 41 0.019591052 ubox
25 44 0.996875202 ubox
25 54 0.035101671 ubox
25 55 0.010448942 ubox
25 56 0.051864213 ubox
26 40 0.022731594 ubox
26 43 0.967777564 ubox
26 53 0.036059331 ubox
27 39 0.038583671 ubox
28 38 0.038851184 ubox
28 41 0.982452999 ubox
28 51 0.062364362 ubox
29 40 0.990690980 ubox
29 50 0.062537499 ubox
30 39 0.977763239 ubox
30 40 0.031993667 ubox
30 49 0.062317378 ubox
30 50 0.012412848 ubox
31 39 0.045052597 ubox
31 40 0.031099464 ubox
31 48 0.062031242 ubox
31 49 0.013665356 ubox
32 39 0.030624770 ubox
32 40 0.023071452 ubox
32 47 0.050320113 ubox
32 48 0.014713774 ubox
33 39 0.023873701 ubox
33 40 0.020512210 ubox
33 47 0.014830024 ubox
34 39 0.023944374 ubox
34 40 0.004544330 ubox
35 39 0.004503284 ubox
38 67 0.009151443 ubox
39 46 0.005210463 ubox
39 55 0.004024419 ubox
39 66 0.007137261 ubox
40 45 0.004982711 ubox
40 54 0.004270048 ubox
40 66 0.008849531 ubox
41 53 0.004380341 ubox
41 65 0.018260316 ubox
42 64 0.021422443 ubox
42 67 0.009437324 ubox
43 51 0.004404103 ubox
43 63 0.022537323 ubox
43 66 0.009482391 ubox
44 50 0.004399018 ubox
44 65 0.009472297 ubox
45 49 0.004303050 ubox
45 64 0.009455637 ubox
46 60 0.145996209 ubox
47 58 0.006006320 ubox
47 59 0.146183633 ubox
48 57 0.009437475 ubox
48 58 0.146116386 ubox
49 56 0.011337874 ubox
49 57 0.145977006 ubox
50 55 0.012621584 ubox
50 56 0.144602990 ubox
52 64 0.006119559 ubox
52 67 0.985556060 ubox
53 63 0.006128105 ubox
53 66 0.986429885 ubox
54 65 0.985915659 ubox
55 64 0.985396052 ubox
55 65 0.017321499 ubox
56 64 0.034869892 ubox
56 65 0.014146519 ubox
57 64 0.020307563 ubox
57 65 0.004076559 ubox
58 64 0.005535685 ubox
63 76 0.003792259 ubox
63 101 0.033707504 ubox
64 75 0.003838433 ubox
64 100 0.035406106 ubox
65 74 0.003840647 ubox
65 99 0.035417396 ubox
66 73 0.003994485 ubox
66 98 0.035388076 ubox
67 72 0.004020296 ubox
68 82 0.004083004 ubox
68 96 0.033945727 ubox
68 97 0.007308645 ubox
69 76 0.003580177 ubox
69 81 0.004084933 ubox
69 95 0.035472989 ubox
70 75 0.003724339 ubox
70 94 0.035473377 ubox
71 79 0.004246558 ubox
71 101 0.003437846 ubox
72 78 0.004249771 ubox
73 77 0.003828632 ubox
73 99 0.004019804 ubox
74 98 0.004160890 ubox
75 88 0.043677881 ubox
75 97 0.004158412 ubox
76 87 0.044480689 ubox
77 86 0.044997160 ubox
78 85 0.045195596 ubox
78 94 0.019313290 ubox
79 84 0.045364906 ubox
79 93 0.025338455 ubox
79 100 0.003300331 ubox
79 104 0.027812342 ubox
80 91 0.270574926 ubox
80 92 0.021751331 ubox
80 99 0.006374151 ubox
80 103 0.090846863 ubox
81 90 0.346168216 ubox
81 94 0.034210770 ubox
81 102 0.123320276 ubox
82 89 0.346683212 ubox
82 93 0.034948545 ubox
82 102 0.171283854 ubox
83 88 0.307406326 ubox
83 96 0.008644549 ubox
83 97 0.293604948 ubox
83 98 0.432906216 ubox
83 101 0.129950348 ubox
84 95 0.009356986 ubox
84 96 0.297096985 ubox
84 97 0.432432010 ubox
84 98 0.432088076 ubox
85 95 0.366975480 ubox
85 96 0.353267846 ubox
85 97 0.432516358 ubox
85 101 0.070662788 ubox
86 94 0.365350124 ubox
86 99 0.038168512 ubox
86 100 0.047408574 ubox
86 102 0.091100496 ubox
87 95 0.568555398 ubox
87 98 0.038903023 ubox
87 101 0.100647255 ubox
88 94 0.565903434 ubox
88 99 0.577692566 ubox
88 100 0.014402996 ubox
88 102 0.005012180 ubox
89 96 0.040132775 ubox
89 97 0.020677060 ubox
89 98 0.637715735 ubox
90 95 0.042222172 ubox
90 96 0.017276186 ubox
90 97 0.637721226 ubox
91 96 0.596591050 ubox
94 101 0.050605316 ubox
95 100 0.052061470 ubox
95 104 0.202979586 ubox
96 103 0.208316243 ubox
97 102 0.207824044 ubox
3 80 0.9500000 lbox
4 79 0.9500000 lbox
5 78 0.9500000 lbox
6 77 0.9500000 lbox
7 76 0.9500000 lbox
8 75 0.9500000 lbox
9 74 0.9500000 lbox
10 73 0.9500000 lbox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
15 69 0.9500000 lbox
16 68 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
52 67 0.9500000 lbox
53 66 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
88 99 0.9500000 lbox
89 98 0.9500000 lbox
90 97 0.9500000 lbox
91 96 0.9500000 lbox
showpage
end
%%EOF
