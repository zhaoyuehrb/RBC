%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCCCCUCCCUGCCCCACACAAUACCCAGGAGCUUGCCUUGCUCGGCUCUGGGGCCAUGCUGACAUGCUGACAUCGCCCCCUGAGGACUUGGCUGCAACCCCAGAGCCCCCAGGGUGUCCCGGAGCCCUGGACCGUGCUGGCAGCUGGACGGAGCUCCCUGGCUGAGGGCCAGGUGGGUGGCAGAGCAAAAGAGGA\
) } def
/len { sequence length } bind def

/coor [
[97.88755035 421.77102661]
[103.93389130 405.93191528]
[103.93389130 390.93191528]
[103.93389130 375.93191528]
[103.93389130 360.93191528]
[89.86995697 355.88302612]
[78.36042023 346.30911255]
[70.80674744 333.35086060]
[68.13729858 318.56250000]
[70.69324493 303.72546387]
[78.18511963 290.63378906]
[89.72546387 280.87713623]
[103.93389130 275.64779663]
[103.93389130 260.64779663]
[103.93389130 245.64779663]
[103.93389130 230.64779663]
[103.93389130 215.64779663]
[103.81607819 200.64825439]
[103.58046722 185.65010071]
[100.32914734 179.00552368]
[103.46080780 170.41496277]
[103.46080780 155.41496277]
[103.46080780 140.41496277]
[72.33145905 119.26697540]
[75.68651581 88.56330109]
[64.43485260 78.64362335]
[53.18318558 68.72394562]
[41.93151855 58.80426788]
[30.67985344 48.88459015]
[19.42818832 38.96491241]
[2.54936862 45.51406860]
[-16.01641464 40.75880814]
[-29.04199028 25.28572083]
[-43.30783844 29.92097473]
[-57.57368469 34.55622864]
[-71.83953094 39.19148636]
[-77.52932739 53.75720596]
[-91.27534485 61.21246719]
[-106.58715057 58.03712082]
[-116.23496246 45.73046875]
[-115.66338348 30.10333252]
[-105.14230347 18.53437424]
[-89.63944244 16.48609734]
[-76.47479248 24.92563820]
[-62.20894241 20.29038239]
[-47.94309235 15.65512753]
[-33.67724609 11.01987267]
[-29.15417671 -3.28193974]
[-38.16048050 -15.27720928]
[-47.16678238 -27.27248001]
[-56.17308807 -39.26774979]
[-65.17938995 -51.26301956]
[-74.18569183 -63.25828934]
[-83.19199371 -75.25355530]
[-92.19830322 -87.24883270]
[-101.20460510 -99.24410248]
[-110.21090698 -111.23937225]
[-136.09936523 -108.84593201]
[-156.21180725 -133.19213867]
[-169.35639954 -140.41844177]
[-178.39306641 -141.81268311]
[-182.64941406 -147.86289978]
[-195.67889404 -155.29476929]
[-210.85498047 -150.88322449]
[-224.66511536 -158.56800842]
[-228.91596985 -173.78990173]
[-221.08558655 -187.51800537]
[-205.81961060 -191.60768127]
[-192.17506409 -183.63261414]
[-188.24700928 -168.32424927]
[-175.21754456 -160.89236450]
[-162.13009644 -153.56304932]
[-148.98550415 -146.33674622]
[-143.39878845 -151.34060669]
[-156.36949158 -158.87461853]
[-153.21235657 -173.53860474]
[-138.29046631 -175.06739807]
[-132.22538757 -161.34835815]
[-126.63867950 -166.35221863]
[-132.37893677 -180.21041870]
[-138.11918640 -194.06860352]
[-144.29190063 -207.73965454]
[-150.89099121 -221.21006775]
[-164.79685974 -229.90252686]
[-163.95156860 -246.27987671]
[-149.22468567 -253.49450684]
[-135.76596069 -244.12461853]
[-137.42057800 -227.80915833]
[-130.82148743 -214.33874512]
[-128.20639038 -213.30574036]
[-125.84487152 -211.16998291]
[-124.16072845 -208.02352905]
[-123.53635406 -204.11064148]
[-124.26098633 -199.80886841]
[-118.52073669 -185.95066833]
[-112.78048706 -172.09248352]
[-101.69242859 -166.17868042]
[-93.77236176 -157.34584045]
[-89.63358307 -146.97941589]
[-89.34854889 -136.52117920]
[-92.48647308 -127.27507019]
[-98.21563721 -120.24567413]
[-89.20933533 -108.25040436]
[-80.20303345 -96.25513458]
[-71.19672394 -84.25986481]
[-62.19042206 -72.26459503]
[-53.18412018 -60.26932144]
[-44.17781448 -48.27405167]
[-35.17151260 -36.27878189]
[-26.16520882 -24.28351212]
[-17.15890694 -12.28824329]
[-0.26026562 -17.96660614]
[16.61720657 -14.30546474]
[28.82847404 -2.89467835]
[33.31229782 12.62651539]
[29.34786606 27.71324539]
[40.59953308 37.63292313]
[51.85119629 47.55260086]
[63.10286331 57.47227859]
[74.35453033 67.39196014]
[85.60619354 77.31163788]
[97.47806549 69.81269073]
[113.08740234 68.92775726]
[128.63973999 76.35469055]
[139.68711853 91.61674500]
[154.32586670 88.34459686]
[168.96461487 85.07244873]
[183.60337830 81.80030060]
[198.24212646 78.52815247]
[210.02210999 67.96677399]
[224.13070679 72.74137115]
[238.76945496 69.46921539]
[253.40820312 66.19706726]
[260.97006226 55.74087906]
[273.23666382 53.32055283]
[283.52139282 59.69914627]
[298.20971680 56.65733719]
[312.89807129 53.61552811]
[320.67507935 48.80687714]
[327.84094238 50.64320755]
[342.57525635 47.83248901]
[357.30957031 45.02176666]
[371.73516846 36.11456680]
[384.28765869 47.51065826]
[376.81182861 62.72735977]
[360.12026978 59.75607681]
[345.38595581 62.56679535]
[330.65167236 65.37751770]
[315.93988037 68.30387115]
[301.25152588 71.34568024]
[286.56320190 74.38748932]
[274.11422729 86.75100708]
[256.68035889 80.83582306]
[242.04159546 84.10797119]
[227.40284729 87.38011932]
[216.66993713 97.70745087]
[201.51426697 93.16690063]
[186.87551880 96.43904877]
[172.23677063 99.71119690]
[157.59802246 102.98334503]
[142.95925903 106.25549316]
[140.14854431 120.98980713]
[152.55474854 129.42105103]
[164.96096802 137.85231018]
[177.36717224 146.28355408]
[189.77337646 154.71481323]
[202.17959595 163.14605713]
[218.67837524 167.04815674]
[219.49609375 183.98237610]
[203.45002747 189.45599365]
[193.74833679 175.55226135]
[181.34213257 167.12101746]
[168.93592834 158.68975830]
[156.52970886 150.25851440]
[144.12350464 141.82727051]
[131.71730042 133.39601135]
[118.46080780 140.41496277]
[118.46080780 155.41496277]
[118.46080780 170.41496277]
[118.57862091 185.41450500]
[118.81423187 200.41264343]
[122.08043671 208.95297241]
[118.93389130 215.64779663]
[118.93389130 230.64779663]
[118.93389130 245.64779663]
[118.93389130 260.64779663]
[118.93389130 275.64779663]
[133.14231873 280.87713623]
[144.68264771 290.63378906]
[152.17453003 303.72546387]
[154.73048401 318.56250000]
[152.06101990 333.35086060]
[144.50735474 346.30911255]
[132.99781799 355.88302612]
[118.93389130 360.93191528]
[118.93389130 375.93191528]
[118.93389130 390.93191528]
[118.93389130 405.93191528]
[124.98022461 421.77102661]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[4 196]
[5 195]
[13 187]
[14 186]
[15 185]
[16 184]
[17 183]
[18 181]
[19 180]
[21 179]
[22 178]
[23 177]
[25 121]
[26 120]
[27 119]
[28 118]
[29 117]
[30 116]
[33 47]
[34 46]
[35 45]
[36 44]
[48 111]
[49 110]
[50 109]
[51 108]
[52 107]
[53 106]
[54 105]
[55 104]
[56 103]
[57 102]
[59 73]
[60 72]
[62 71]
[63 70]
[79 96]
[80 95]
[81 94]
[82 89]
[83 88]
[125 161]
[126 160]
[127 159]
[128 158]
[129 157]
[131 155]
[132 154]
[133 153]
[136 151]
[137 150]
[138 149]
[140 148]
[141 147]
[142 146]
[162 176]
[163 175]
[164 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
