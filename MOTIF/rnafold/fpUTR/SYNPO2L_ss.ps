%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGUGCUGGACUGUAAUGAUCCCAGGGCCAAGUUGCCUGCCUGUGGUGUGUGGUGUGGGGGGGAGGCCUGGGGCAGCAGGAGCAGGACAGCCGGACAGGAAGCCCAGACGGGGUUCGAGCACCUCAACUUCUCUCCUGGGGACACUGUUCAAACUCCGGGGGCCAUAGGCCAAGCUGAGCG\
) } def
/len { sequence length } bind def

/coor [
[-35.37362671 98.31600952]
[-42.39528656 83.48984528]
[-57.21854019 81.19393158]
[-72.04179382 78.89801788]
[-86.86363220 84.43188477]
[-98.25665283 74.83770752]
[-113.07991028 72.54179382]
[-127.92221832 70.37251282]
[-142.78250122 68.33000946]
[-157.64279175 66.28751373]
[-170.15570068 75.56462860]
[-185.19705200 73.28155518]
[-193.96424866 61.29524231]
[-208.82453918 59.25273895]
[-223.68482971 57.21023941]
[-238.54512024 55.16773987]
[-252.27494812 65.98957825]
[-269.25106812 63.59243011]
[-279.05368042 49.94010162]
[-293.94665527 48.15160751]
[-312.08050537 56.92068481]
[-327.06243896 44.71843338]
[-342.00781250 43.43944931]
[-356.95318604 42.16046143]
[-371.89855957 40.88147736]
[-386.84393311 39.60248947]
[-401.78930664 38.32350540]
[-416.73468018 37.04451752]
[-425.57614136 39.43476868]
[-431.92355347 35.61397934]
[-446.84490967 34.08001709]
[-457.22415161 45.46325302]
[-472.14163208 48.51648712]
[-485.83459473 42.27415085]
[-493.13873291 29.32086945]
[-508.06008911 27.78690720]
[-522.57916260 34.07238007]
[-534.44842529 25.07410049]
[-549.36981201 23.54013824]
[-564.30371094 22.13361359]
[-579.24908447 20.85462761]
[-594.19445801 19.57564163]
[-609.13983154 18.29665756]
[-617.85949707 30.94034004]
[-631.73968506 37.51575089]
[-647.04669189 36.25413895]
[-659.66296387 27.49486923]
[-666.19488525 13.59414101]
[-664.88525391 -1.70881772]
[-656.08648682 -14.29758930]
[-642.16534424 -20.78585625]
[-626.86657715 -19.42830849]
[-614.30548096 -10.59011936]
[-607.86083984 3.35128331]
[-592.91546631 4.63026905]
[-577.97009277 5.90925455]
[-563.02471924 7.18824005]
[-556.07556152 4.61977100]
[-547.83587646 8.61878014]
[-532.91448975 10.15274239]
[-519.46270752 3.75755000]
[-506.52612305 12.86554813]
[-491.60476685 14.39951038]
[-481.81796265 3.20323229]
[-467.14135742 -0.12262414]
[-453.15710449 5.90180016]
[-445.31097412 19.15865898]
[-430.38958740 20.69262123]
[-415.45568848 22.09914589]
[-400.51031494 23.37813187]
[-385.56494141 24.65711594]
[-370.61956787 25.93610191]
[-355.67419434 27.21508789]
[-340.72882080 28.49407387]
[-325.78344727 29.77305984]
[-318.56869507 22.49591255]
[-308.32186890 20.35898209]
[-298.39105225 24.30792809]
[-292.15817261 33.25861359]
[-277.26516724 35.04710770]
[-268.33395386 25.74011230]
[-255.47975159 23.24659729]
[-243.36120605 28.69885826]
[-236.50262451 40.30745316]
[-221.64233398 42.34995270]
[-206.78204346 44.39245224]
[-191.92175293 46.43495178]
[-180.24578857 37.25848389]
[-165.14625549 39.11817932]
[-155.60029602 51.42721939]
[-140.74000549 53.46971893]
[-125.87971497 55.51221848]
[-118.80814362 53.30291367]
[-110.78399658 57.71854401]
[-95.96074677 60.01445389]
[-82.19916534 54.31637192]
[-69.74588013 64.07476807]
[-54.92262650 66.37068176]
[-40.09937668 68.66659546]
[-31.60033989 58.35345840]
[-19.01207733 53.55376816]
[-5.59014559 55.62344742]
[5.13730955 64.12683105]
[10.29695511 76.92297363]
[25.07884789 79.47162628]
[38.93570709 74.00932312]
[51.22056961 83.97891235]
[66.00246429 86.52757263]
[80.78435516 89.07622528]
[100.94319916 77.91651917]
[120.07708740 90.75444031]
[135.02246094 89.47545624]
[149.96783447 88.19647217]
[164.91320801 86.91748810]
[179.85858154 85.63849640]
[194.80395508 84.35951233]
[209.74932861 83.08052826]
[222.83952332 74.19472504]
[236.18017578 80.81864929]
[251.12554932 79.53966522]
[266.07092285 78.26067352]
[281.01629639 76.98168945]
[295.96166992 75.70270538]
[310.85464478 73.91421509]
[325.67791748 71.61830139]
[340.50115967 69.32238770]
[355.32440186 67.02647400]
[370.14767456 64.73056030]
[375.62585449 50.38186646]
[387.55456543 40.70708084]
[402.72503662 38.30867004]
[417.05648804 43.83180237]
[426.69381714 55.79077530]
[429.04467773 70.96868896]
[423.47665405 85.28276062]
[411.48751831 94.88257599]
[396.30230713 97.18583679]
[382.00576782 91.57297516]
[372.44357300 79.55381775]
[357.62033081 81.84973145]
[342.79708862 84.14563751]
[327.97381592 86.44155121]
[313.15057373 88.73746490]
[311.38455200 90.94356537]
[308.62786865 92.57434082]
[305.09841919 93.24504852]
[301.15060425 92.65805054]
[297.24066162 90.64807892]
[282.29528809 91.92706299]
[267.34991455 93.20604706]
[252.40452576 94.48503876]
[237.45915222 95.76402283]
[225.43795776 104.55834198]
[211.02832031 98.02590179]
[196.08294678 99.30488586]
[181.13757324 100.58387756]
[166.19219971 101.86286163]
[151.24682617 103.14184570]
[136.30145264 104.42082977]
[121.35607147 105.69981384]
[120.35913086 108.60672760]
[118.96864319 111.34726715]
[117.21149445 113.86846924]
[125.00524902 126.68476105]
[132.79901123 139.50105286]
[140.59277344 152.31733704]
[153.98863220 162.70901489]
[147.71141052 178.45808411]
[130.84013367 176.78594971]
[127.77648163 160.11109924]
[119.98271942 147.29481506]
[112.18895721 134.47851562]
[104.39520264 121.66222382]
[95.63678741 121.66869354]
[87.56344604 118.27297974]
[81.44274139 112.00824738]
[78.23570251 103.85811615]
[63.45380783 101.30946350]
[48.67191315 98.76080322]
[33.75775528 104.04080963]
[22.53019142 94.25351715]
[7.74829912 91.70486450]
[-4.20109940 103.65989685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 99]
[3 98]
[4 97]
[6 95]
[7 94]
[8 92]
[9 91]
[10 90]
[13 87]
[14 86]
[15 85]
[16 84]
[19 80]
[20 79]
[22 75]
[23 74]
[24 73]
[25 72]
[26 71]
[27 70]
[28 69]
[30 68]
[31 67]
[35 63]
[36 62]
[38 60]
[39 59]
[40 57]
[41 56]
[42 55]
[43 54]
[104 182]
[105 181]
[107 179]
[108 178]
[109 177]
[111 160]
[112 159]
[113 158]
[114 157]
[115 156]
[116 155]
[117 154]
[119 152]
[120 151]
[121 150]
[122 149]
[123 148]
[124 143]
[125 142]
[126 141]
[127 140]
[128 139]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
