%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUCAGCUCGCUCCAGGGAAGGAGGCGUGGCCACACGUACAAGCCCGCCUAUAAAGGUGGCAGUGCCUUCACCCUCACCCUGAAGGUGACAGUUCCUUGGAACCUUCCCUGAUCCUUGUGAUCCCAGGCUCCAAGAGUCCACCCUUCCCAGCUCAGCUCAGUACCUCAGCAGCCACCUCCAAGAUCCCUACACUGAUC\
) } def
/len { sequence length } bind def

/coor [
[250.69831848 426.95727539]
[249.35884094 421.88150024]
[250.07734680 416.22274780]
[242.23986816 403.43316650]
[228.99275208 396.62411499]
[228.37931824 380.81478882]
[220.54183960 368.02517700]
[212.70436096 355.23559570]
[204.86688232 342.44598389]
[189.01733398 334.92098999]
[188.67730713 316.51409912]
[180.63990784 303.84918213]
[172.60250854 291.18426514]
[169.25056458 290.06338501]
[166.27742004 287.25820923]
[164.47105408 282.96560669]
[164.50117493 277.72796631]
[157.06929016 264.69848633]
[149.63740540 251.66902161]
[142.20552063 238.63955688]
[134.77365112 225.61007690]
[127.34176636 212.58061218]
[119.90988922 199.55113220]
[102.54669189 191.05368042]
[102.93793488 170.90489197]
[95.10045624 158.11528015]
[87.26297760 145.32568359]
[72.67742920 141.82400513]
[59.88782883 149.66148376]
[47.09822845 157.49896240]
[39.75300598 172.16114807]
[23.36879158 172.86085510]
[14.80026150 158.87828064]
[22.86198235 144.59750366]
[39.26074982 144.70935059]
[52.05035019 136.87187195]
[64.83995056 129.03439331]
[61.33827209 114.44885254]
[46.38451385 113.27196503]
[31.43075371 112.09507751]
[16.47699356 110.91819000]
[6.17487383 118.68865204]
[-6.26111126 117.39511108]
[-14.21562576 108.27436829]
[-29.14905548 106.86274719]
[-44.08248520 105.45111847]
[-52.92964554 107.76044464]
[-59.23875809 103.89823914]
[-74.14817047 102.25222778]
[-89.05758667 100.60620880]
[-103.96700287 98.96019745]
[-118.75742340 106.04366302]
[-132.13233948 96.55453491]
[-130.33279419 80.25442505]
[-115.20999908 73.91148376]
[-102.32098389 84.05078125]
[-87.41156769 85.69680023]
[-72.50215912 87.34281158]
[-57.59274292 88.98882294]
[-42.67086029 90.51769257]
[-27.73743057 91.92932129]
[-12.80400181 93.34094238]
[2.73000884 85.18447113]
[17.65387917 95.96443176]
[32.60763931 97.14131927]
[47.56139755 98.31820679]
[62.51515961 99.49509430]
[63.41815948 90.87424469]
[66.28837585 82.64282227]
[70.99454498 75.24610138]
[62.17776108 63.11085129]
[53.36098480 50.97559357]
[44.54420471 38.84033966]
[35.72742462 26.70508575]
[21.35628128 20.08838272]
[20.13498497 5.24393177]
[11.31820679 -6.89132309]
[2.50142813 -19.02657700]
[-11.70017147 -28.28675652]
[-6.73327923 -44.49682236]
[10.21826649 -44.21143341]
[14.63668251 -27.84335709]
[23.45346260 -15.70810127]
[32.27024078 -3.57284689]
[46.01074982 2.17586160]
[47.86268234 17.88830566]
[56.67945862 30.02356148]
[65.49623871 42.15881729]
[74.31301880 54.29407120]
[83.12979889 66.42932892]
[90.61846161 66.01719666]
[82.41589355 53.45862198]
[89.19057465 40.07566071]
[104.16789246 39.25112915]
[112.37069702 51.80955505]
[105.59580231 65.19294739]
[113.08447266 64.78082275]
[120.51634979 51.75134659]
[127.94822693 38.72187424]
[135.38011169 25.69240189]
[142.81199646 12.66292953]
[150.24386597 -0.36654288]
[150.36042786 -16.18732071]
[163.38711548 -23.40911674]
[170.81900024 -36.43859100]
[178.25088501 -49.46806335]
[172.95144653 -58.74560928]
[171.99325562 -69.30584717]
[175.48271179 -79.23324585]
[182.72550964 -86.75502014]
[192.36369324 -90.55765533]
[202.62979126 -90.01600647]
[210.66719055 -102.68092346]
[218.70460510 -115.34584045]
[226.74200439 -128.01075745]
[224.65963745 -143.91809082]
[235.90142822 -155.36370850]
[251.84361267 -153.56750488]
[260.25671387 -139.90736389]
[254.68693542 -124.86219788]
[239.40692139 -119.97335815]
[231.36952209 -107.30844116]
[223.33212280 -94.64352417]
[215.29470825 -81.97859955]
[220.93557739 -63.33986664]
[210.90779114 -46.29185486]
[191.28034973 -42.03618240]
[183.84848022 -29.00671005]
[176.41659546 -15.97723675]
[176.83161926 -1.08841491]
[163.27334595 7.06533718]
[155.84146118 20.09481049]
[148.40957642 33.12428284]
[140.97770691 46.15375519]
[133.54582214 59.18322754]
[126.11394501 72.21269989]
[135.16220093 113.90092468]
[100.05258179 137.48820496]
[107.89006042 150.27780151]
[115.72753906 163.06741333]
[126.44399261 164.99395752]
[134.16857910 172.35255432]
[136.51368713 182.53486633]
[132.93936157 192.11924744]
[140.37124634 205.14872742]
[147.80311584 218.17819214]
[155.23500061 231.20767212]
[162.66688538 244.23713684]
[170.09875488 257.26660156]
[177.53063965 270.29608154]
[185.26742554 283.14685059]
[193.30482483 295.81176758]
[201.34223938 308.47668457]
[213.74176025 312.04959106]
[220.17414856 322.77111816]
[217.65647888 334.60852051]
[225.49395752 347.39810181]
[233.33143616 360.18771362]
[241.16891479 372.97732544]
[254.97662354 380.70117188]
[255.02946472 395.59567261]
[262.86694336 408.38528442]
[261.76522827 393.42581177]
[264.65396118 378.70657349]
[271.32794189 365.27313232]
[281.31317139 354.07958984]
[293.90039062 345.92102051]
[308.19552612 341.37692261]
[323.18322754 340.77005005]
[337.79898071 344.14349365]
[351.00460815 351.25769043]
[361.86212158 361.60726929]
[369.60037231 374.45715332]
[373.66970825 388.89462280]
[373.78106689 403.89422607]
[369.92654419 418.39053345]
[362.37994385 431.35388184]
[351.67727661 441.86355591]
[338.57876587 449.17303467]
[324.01470947 452.76312256]
[309.01965332 452.37884521]
[294.65859985 448.04751587]
[281.95166016 440.07675171]
[271.80276489 429.03475952]
[275.76086426 443.50311279]
[279.71896362 457.97149658]
[283.67706299 472.43984985]
[298.23947144 477.79855347]
[306.84292603 490.71212769]
[306.17926025 506.21499634]
[296.50360107 518.34600830]
[281.53649902 522.44055176]
[267.03308105 516.92419434]
[258.57019043 503.91806030]
[259.40203857 488.42327881]
[269.20870972 476.39794922]
[265.25061035 461.92956543]
[261.29251099 447.46121216]
[257.33441162 432.99285889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 162]
[4 161]
[6 159]
[7 158]
[8 157]
[9 156]
[11 153]
[12 152]
[13 151]
[17 150]
[18 149]
[19 148]
[20 147]
[21 146]
[22 145]
[23 144]
[25 140]
[26 139]
[27 138]
[28 37]
[29 36]
[30 35]
[38 67]
[39 66]
[40 65]
[41 64]
[44 62]
[45 61]
[46 60]
[48 59]
[49 58]
[50 57]
[51 56]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[76 84]
[77 83]
[78 82]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
[102 131]
[104 129]
[105 128]
[106 127]
[112 124]
[113 123]
[114 122]
[115 121]
[184 199]
[185 198]
[186 197]
[187 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
