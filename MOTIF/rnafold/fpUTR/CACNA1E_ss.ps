%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAGAUUCAACAGUUCACAGCGGCGGGCUGCUGCUGCUGCCUCUCCGAAGAGCUCGCGGAGCUCCCCAGAGGCGGUGGUCCCCGUGCUUGUCUGGAUGCGGCUCUGAGUCUCCGUGUGUCUUUCUGCUUGUUGCUGUGUGCGGGUGUUCGGCCGCGAUCACCUUUGUGUGUCUUCUGUCUGUUUAAACCUCAGG\
) } def
/len { sequence length } bind def

/coor [
[258.93850708 511.74414062]
[257.88052368 496.68090820]
[263.49035645 482.59487915]
[274.70513916 472.29971313]
[270.43722534 457.91970825]
[266.16931152 443.53967285]
[261.90139771 429.15966797]
[250.86264038 419.15991211]
[254.35360718 403.72866821]
[250.08569336 389.34863281]
[245.16252136 383.82388306]
[245.86660767 374.70385742]
[241.82972717 360.25726318]
[255.24397278 320.55227661]
[246.27232361 308.53106689]
[232.45922852 302.95901489]
[230.40597534 287.27160645]
[221.43431091 275.25039673]
[212.46266174 263.22921753]
[203.49099731 251.20800781]
[194.51934814 239.18679810]
[185.54768372 227.16558838]
[176.57603455 215.14439392]
[167.60437012 203.12318420]
[158.63270569 191.10197449]
[149.66105652 179.08078003]
[140.68939209 167.05957031]
[131.71774292 155.03836060]
[122.74607849 143.01716614]
[102.65629578 148.58811951]
[82.07892609 145.24041748]
[64.79108429 133.58857727]
[53.96604538 115.77135468]
[51.59081650 95.05919647]
[37.08139420 91.25437927]
[22.57196999 87.44956207]
[8.06254768 83.64474487]
[-6.44687510 79.83992767]
[-20.95629883 76.03510284]
[-35.46572113 72.23028564]
[-49.97514343 68.42546844]
[-64.48456573 64.62065125]
[-78.99398804 60.81583023]
[-93.50341034 57.01101303]
[-108.01283264 53.20619202]
[-116.56803131 62.34030914]
[-128.12974548 66.93896484]
[-140.47723389 66.18498230]
[-151.26678467 60.28306961]
[-158.47663879 50.40917587]
[-160.78572083 38.47674179]
[-175.16572571 34.20882797]
[-189.54574585 29.94091225]
[-203.92576599 25.67299843]
[-218.30578613 21.40508461]
[-232.68580627 17.13717079]
[-249.59062195 18.42693329]
[-255.50968933 2.53980374]
[-241.88200378 -7.54594755]
[-228.41789246 2.75715399]
[-214.03787231 7.02506781]
[-199.65785217 11.29298115]
[-185.27783203 15.56089497]
[-170.89781189 19.82880974]
[-156.51780701 24.09672356]
[-143.02757263 12.71517181]
[-125.24982452 11.69152927]
[-110.28055573 21.62313080]
[-104.20801544 38.69676971]
[-89.69859314 42.50158691]
[-75.18917084 46.30640793]
[-60.67974854 50.11122513]
[-46.17032623 53.91604614]
[-31.66090202 57.72086334]
[-17.15147972 61.52568054]
[-2.64205647 65.33049774]
[11.86736679 69.13532257]
[26.37678909 72.94013977]
[40.88621140 76.74495697]
[55.39563370 80.54977417]
[60.39125061 69.11809540]
[68.34742737 59.00929260]
[78.90271759 50.99489212]
[74.86583710 36.54831696]
[70.82894897 22.10174179]
[56.23755264 16.82246399]
[47.56384277 3.95598221]
[48.14303589 -11.55027962]
[57.75242233 -23.73384666]
[72.69699097 -27.90989113]
[87.23026276 -22.47263527]
[95.76388550 -9.51281738]
[95.01651764 5.98624945]
[85.27552795 18.06485748]
[89.31240845 32.51143265]
[93.34929657 46.95800781]
[108.34736633 47.19842529]
[112.84521484 32.88866043]
[117.34306335 18.57889557]
[121.84090424 4.26913118]
[126.33875275 -10.04063416]
[130.83659363 -24.35039902]
[120.39123535 -35.61050415]
[116.99098206 -50.58828354]
[121.55049896 -65.25479126]
[132.84329224 -75.66481018]
[147.83164978 -79.01808929]
[162.48379517 -74.41262817]
[172.85836792 -63.08726501]
[176.16465759 -48.08846283]
[171.51329041 -33.45082855]
[160.15545654 -23.11181068]
[145.14636230 -19.85255241]
[140.64851379 -5.54278755]
[136.15066528 8.76697731]
[131.65283203 23.07674217]
[127.15497589 37.38650894]
[122.65713501 51.69627380]
[131.99382019 57.95688629]
[139.72473145 65.96546936]
[145.53587341 75.33000946]
[149.20549011 85.60531616]
[150.61233521 96.31404877]
[149.73910522 106.96891785]
[146.67126465 117.09482574]
[141.59101868 126.25005341]
[134.76728821 134.04550171]
[143.73893738 146.06671143]
[152.71060181 158.08792114]
[161.68225098 170.10911560]
[170.65391541 182.13032532]
[179.62557983 194.15153503]
[188.59722900 206.17272949]
[197.56889343 218.19393921]
[206.54054260 230.21513367]
[215.51220703 242.23634338]
[224.48387146 254.25755310]
[233.45552063 266.27874756]
[242.42718506 278.29995728]
[256.88198853 284.73184204]
[258.29351807 299.55941772]
[267.26516724 311.58062744]
[279.90167236 319.66262817]
[294.57720947 322.76562500]
[309.25274658 325.86862183]
[323.92828369 328.97161865]
[338.60382080 332.07461548]
[353.70608521 327.35946655]
[364.55746460 337.56225586]
[379.23300171 340.66525269]
[393.90853882 343.76824951]
[409.32339478 338.17230225]
[421.70123291 348.92968750]
[418.30880737 364.97409058]
[402.63592529 369.80044556]
[390.80554199 358.44378662]
[376.13000488 355.34078979]
[361.45446777 352.23779297]
[347.40191650 357.17486572]
[335.50082397 346.75015259]
[320.82528687 343.64715576]
[306.14974976 340.54415894]
[291.47421265 337.44116211]
[276.79867554 334.33816528]
[266.53704834 345.27975464]
[256.27630615 356.22039795]
[260.31317139 370.66696167]
[264.46572876 385.08071899]
[268.73364258 399.46075439]
[280.07766724 410.48904419]
[276.28143311 424.89175415]
[280.54934692 439.27175903]
[284.81723022 453.65179443]
[289.08514404 468.03179932]
[304.10049438 470.54199219]
[316.48648071 479.28698730]
[323.81729126 492.48846436]
[324.68576050 507.50201416]
[318.97311401 521.34667969]
[307.86190796 531.29687500]
[312.12982178 545.67687988]
[316.39773560 560.05694580]
[331.24114990 564.26129150]
[341.43798828 575.83831787]
[343.73452759 591.09381104]
[337.39794922 605.15979004]
[324.45019531 613.54779053]
[309.02285767 613.58135986]
[296.03875732 605.24969482]
[289.64108276 591.21142578]
[291.87127686 575.94610596]
[302.01770020 564.32482910]
[297.74978638 549.94482422]
[293.48187256 535.56481934]
[278.74154663 533.28723145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 174]
[5 173]
[6 172]
[7 171]
[9 169]
[10 168]
[12 167]
[13 166]
[14 142]
[15 141]
[17 139]
[18 138]
[19 137]
[20 136]
[21 135]
[22 134]
[23 133]
[24 132]
[25 131]
[26 130]
[27 129]
[28 128]
[29 127]
[34 80]
[35 79]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[45 69]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[56 60]
[83 96]
[84 95]
[85 94]
[97 118]
[98 117]
[99 116]
[100 115]
[101 114]
[102 113]
[143 164]
[144 163]
[145 162]
[146 161]
[147 160]
[149 158]
[150 157]
[151 156]
[180 194]
[181 193]
[182 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
