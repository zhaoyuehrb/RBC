%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUGCGCGCUCUGCGCUGUCUUCUCCCGGCCUGAGCAGCAGCAGCUGCGGCGGCGGCGGCGUUUGAGUGGAGGAAGAUGGCGGCUCCGGGCGGCUCGGGGUCCCGCCAGCUGUGAGGAGCCCCGAGCACGGCUGUCGCGGCCUGAGGCAGAGCGCCUCUGCUCUGGCCCUGUCCCUGGCUCCCUCAUUACCGUCGCCAGCGGAGCGAACCCGAGAGCGUGGAGCGGGCUGGGCCAGCUGUUGAGUGGAAUGUC\
) } def
/len { sequence length } bind def

/coor [
[215.75769043 845.61999512]
[221.98876953 840.31518555]
[217.97277832 825.86279297]
[213.16748047 820.27539062]
[213.99751282 811.20758057]
[210.15986633 796.70678711]
[199.42388916 786.38262939]
[203.37301636 771.06225586]
[199.53536987 756.56146240]
[195.69772339 742.06066895]
[191.86007690 727.55993652]
[188.02244568 713.05914307]
[184.18479919 698.55834961]
[180.34715271 684.05755615]
[176.50952148 669.55682373]
[172.67187500 655.05603027]
[168.83422852 640.55523682]
[164.99659729 626.05450439]
[154.26062012 615.73034668]
[158.20973206 600.40991211]
[154.37210083 585.90911865]
[150.26715088 571.48175049]
[145.89630127 557.13269043]
[141.52545166 542.78363037]
[126.35211945 535.50122070]
[121.04898071 519.17218018]
[129.36927795 503.76895142]
[124.82198334 489.47482300]
[120.27468872 475.18069458]
[106.18986511 470.02145386]
[93.48549652 477.99633789]
[80.78112030 485.97122192]
[78.36510468 490.53536987]
[74.80447388 493.44277954]
[70.91452026 494.53472900]
[67.45665741 493.99600220]
[54.46627426 501.49600220]
[41.47589493 508.99600220]
[28.48551369 516.49603271]
[15.49513245 523.99603271]
[7.76861715 538.46087646]
[-8.62829781 538.73144531]
[-16.82787132 524.52941895]
[-8.39508533 510.46453857]
[7.99513292 511.00561523]
[20.98551369 503.50561523]
[33.97589493 496.00561523]
[46.96627426 488.50561523]
[59.95665741 481.00561523]
[72.80622864 473.26684570]
[85.51060486 465.29196167]
[98.21497345 457.31707764]
[105.14803314 444.01547241]
[104.40913391 429.03369141]
[103.67023468 414.05187988]
[102.93133545 399.07009888]
[102.19243622 384.08831787]
[101.45353699 369.10650635]
[100.71463776 354.12472534]
[99.97573853 339.14294434]
[88.18385315 332.91561890]
[80.94479370 321.58779907]
[80.23557281 308.05484009]
[86.34768677 295.83892822]
[97.78333282 288.17218018]
[97.22905731 273.18240356]
[96.67478943 258.19265747]
[96.12051392 243.20289612]
[92.74224854 236.65330505]
[95.65290070 228.02531433]
[95.28333282 213.02986145]
[94.91377258 198.03440857]
[94.54421234 183.03897095]
[83.61238098 172.98756409]
[83.02397919 157.78530884]
[93.64093018 146.38716125]
[93.27136993 131.39170837]
[75.17763519 122.60795593]
[65.19811249 104.12020111]
[68.00877380 82.39575195]
[83.58618927 65.74422455]
[77.31678772 52.11724854]
[71.04737854 38.49026871]
[64.77797699 24.86328888]
[58.50856781 11.23631096]
[54.29422760 8.25171089]
[51.87041473 4.34577417]
[51.28939438 0.34746540]
[52.26968765 -3.01201248]
[46.50810242 -16.86134911]
[34.06361008 -26.63095665]
[36.31875992 -41.35384750]
[30.55717278 -55.20318604]
[24.71038437 -69.01676941]
[18.77861595 -82.79407501]
[12.84684753 -96.57138062]
[6.91508007 -110.34868622]
[0.98331177 -124.12598419]
[-4.94845629 -137.90328979]
[-10.88022423 -151.68060303]
[-16.81199265 -165.45790100]
[-22.82851601 -179.19841003]
[-28.92956543 -192.90158081]
[-35.03061295 -206.60476685]
[-41.21596146 -220.27011108]
[-47.48536301 -233.89709473]
[-53.75476837 -247.52406311]
[-68.24267578 -254.41465759]
[-71.74800110 -270.07006836]
[-61.58175278 -282.48083496]
[-45.54261398 -282.12646484]
[-35.93443680 -269.27880859]
[-40.12779236 -253.79347229]
[-33.85838699 -240.16648865]
[-27.58897972 -226.53952026]
[-21.95412254 -221.78994751]
[-21.32743263 -212.70582581]
[-15.22638321 -199.00263977]
[-9.12533379 -185.29945374]
[-3.54941654 -180.48083496]
[-3.03468776 -171.38966370]
[2.89708042 -157.61236572]
[8.82884884 -143.83506775]
[14.76061630 -130.05775452]
[20.69238472 -116.28044891]
[26.62415314 -102.50314331]
[32.55591965 -88.72584534]
[38.48768997 -74.94853973]
[44.00381851 -70.06158447]
[44.40650940 -60.96477127]
[50.16809464 -47.11543655]
[62.20047760 -38.33642578]
[60.35743713 -22.62293434]
[66.11902618 -8.77359867]
[72.13555145 4.96690559]
[78.40495300 18.59388351]
[84.67436218 32.22086334]
[90.94376373 45.84784317]
[97.21316528 59.47482300]
[112.11054993 61.22641373]
[121.36972046 49.42523956]
[130.62889099 37.62406540]
[139.88806152 25.82288933]
[142.31933594 10.18960762]
[156.26287842 4.95255756]
[165.52204895 -6.84861660]
[174.78123474 -18.64978981]
[177.60473633 -27.30669403]
[184.22789001 -30.53838921]
[193.63174438 -42.22459793]
[203.03559875 -53.91080475]
[212.43945312 -65.59701538]
[221.84332275 -77.28322601]
[227.06265259 -93.41378021]
[244.00769043 -92.86379242]
[248.17004395 -76.42873383]
[233.52952576 -67.87936401]
[224.12567139 -56.19315720]
[214.72181702 -44.50695038]
[205.31794739 -32.82073975]
[195.91409302 -21.13453102]
[186.58239746 -9.39061737]
[177.32322693 2.41055679]
[168.06405640 14.21173096]
[166.29507446 29.00091362]
[151.68923950 35.08206177]
[142.43006897 46.88323593]
[133.17089844 58.68441010]
[123.91172028 70.48558807]
[131.16049194 79.78167725]
[135.07321167 90.62315369]
[135.41502380 101.88162231]
[132.31416321 112.43700409]
[126.23351288 121.28893280]
[117.90962982 127.65148163]
[108.26681519 131.02214050]
[108.63637543 146.01759338]
[119.80191803 156.87892151]
[119.96308899 172.09170532]
[109.53965759 182.66940308]
[109.90921783 197.66485596]
[110.27878571 212.66029358]
[110.64834595 227.65574646]
[111.11026764 242.64863586]
[111.66454315 257.63839722]
[112.21881866 272.62814331]
[112.77308655 287.61788940]
[126.95015717 296.86770630]
[132.75291443 312.59255981]
[128.07640076 328.51498413]
[114.95752716 338.40405273]
[115.69642639 353.38583374]
[116.43532562 368.36761475]
[117.17422485 383.34939575]
[117.91312408 398.33120728]
[118.65202332 413.31298828]
[119.39092255 428.29476929]
[120.12982178 443.27658081]
[129.54492188 448.63537598]
[135.07504272 458.63073730]
[134.56881714 470.63339233]
[139.11611938 484.92752075]
[143.66340637 499.22164917]
[156.24478149 503.98303223]
[163.68559265 514.95587158]
[163.46026611 528.01727295]
[155.87452698 538.41278076]
[160.24537659 552.76184082]
[164.61621094 567.11090088]
[168.38868713 570.63751221]
[170.26255798 574.83508301]
[170.29806519 578.87524414]
[168.87287903 582.07147217]
[172.71051025 596.57226562]
[183.72097778 607.93359375]
[179.49737549 622.21685791]
[183.33500671 636.71759033]
[187.17265320 651.21838379]
[191.01029968 665.71917725]
[194.84793091 680.21997070]
[198.68557739 694.72070312]
[202.52322388 709.22149658]
[206.36085510 723.72229004]
[210.19850159 738.22302246]
[214.03614807 752.72381592]
[217.87377930 767.22460938]
[228.88424683 778.58593750]
[224.66064453 792.86914062]
[228.49827576 807.36993408]
[232.42517090 821.84680176]
[236.44116211 836.29919434]
[256.85675049 845.76507568]
[263.40905762 867.00177002]
[252.16169739 885.84613037]
[257.23406982 899.96246338]
[262.30645752 914.07879639]
[268.13732910 921.07275391]
[267.35317993 928.40045166]
[272.25128174 942.57818604]
[284.98672485 952.90972900]
[282.14022827 969.05993652]
[266.64001465 974.41485596]
[254.43138123 963.46588135]
[258.07351685 947.47625732]
[253.17543030 933.29852295]
[248.19010925 919.15118408]
[243.11773682 905.03485107]
[238.04536438 890.91851807]
[230.15170288 890.34991455]
[222.73452759 887.49462891]
[216.44406128 882.58209229]
[211.83786011 876.02282715]
[209.33139038 868.37426758]
[209.16065979 860.29370117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 231]
[3 230]
[5 229]
[6 228]
[8 226]
[9 225]
[10 224]
[11 223]
[12 222]
[13 221]
[14 220]
[15 219]
[16 218]
[17 217]
[18 216]
[20 214]
[21 213]
[22 209]
[23 208]
[24 207]
[27 203]
[28 202]
[29 201]
[30 52]
[31 51]
[32 50]
[36 49]
[37 48]
[38 47]
[39 46]
[40 45]
[53 198]
[54 197]
[55 196]
[56 195]
[57 194]
[58 193]
[59 192]
[60 191]
[65 187]
[66 186]
[67 185]
[68 184]
[70 183]
[71 182]
[72 181]
[73 180]
[76 177]
[77 176]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[89 134]
[90 133]
[92 131]
[93 130]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
[101 121]
[102 119]
[103 118]
[104 117]
[105 115]
[106 114]
[107 113]
[140 169]
[141 168]
[142 167]
[143 166]
[145 164]
[146 163]
[147 162]
[149 161]
[150 160]
[151 159]
[152 158]
[153 157]
[234 248]
[235 247]
[236 246]
[238 245]
[239 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
