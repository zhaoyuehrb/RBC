%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCAAUCAGGCACAUGUCUGGAGAGGAGAGGACGGCUUCCGGGAUCUAGCGGGGCCUUUGUCCCGACAGAGCUCCACUUCCUGUCCCCGCGGCUCUGUGUCCCCUGCUAGCCGUAGGUCGUGUGACCCGCAGGCACCGGGAGAUCCAGAAGUGAAACGCCAGGCUCUCUGGAGGCCAGGAGAUGGUGUGAUUUGUCCAGAGAAUCUUUCCUAAGAGGAAAUCCCAGAGAAGCAGGAGAAAGAGAAAGAA\
) } def
/len { sequence length } bind def

/coor [
[85.76923370 334.79443359]
[79.40633392 348.37799072]
[73.04344177 361.96157837]
[66.68054199 375.54516602]
[76.01563263 396.01934814]
[67.17244720 416.40744019]
[46.37302017 423.40420532]
[41.04719543 437.42687988]
[35.72137070 451.44955444]
[30.39554596 465.47222900]
[25.06972122 479.49493408]
[19.74389648 493.51760864]
[22.89940453 509.61029053]
[10.36430836 520.18402100]
[-4.96636009 514.36138916]
[-7.32172251 498.13229370]
[5.72121572 488.19177246]
[11.04703999 474.16909790]
[16.37286377 460.14642334]
[21.69868851 446.12371826]
[27.02451324 432.10104370]
[32.35033798 418.07836914]
[26.71848679 412.50875854]
[22.93812943 405.51010132]
[21.35467339 397.68054199]
[22.12480164 389.69586182]
[25.20118332 382.25106812]
[30.33490562 375.99984741]
[37.09549713 371.49731445]
[44.90699387 369.15063477]
[53.09696579 369.18225098]
[59.45986176 355.59869385]
[65.82276154 342.01510620]
[72.18565369 328.43151855]
[71.07674408 318.56323242]
[78.47506714 310.16989136]
[81.82595062 295.54895020]
[85.17684174 280.92800903]
[88.52772522 266.30709839]
[91.87861633 251.68617249]
[84.87938690 233.64529419]
[98.89096069 219.12922668]
[101.87483215 204.42900085]
[104.85870361 189.72877502]
[107.84258270 175.02856445]
[97.74531555 163.93598938]
[82.83012390 165.52880859]
[67.91493225 167.12162781]
[58.00162125 179.13679504]
[42.85280609 180.53965759]
[31.45928001 171.01478577]
[16.54408836 172.60760498]
[1.62889802 174.20043945]
[-13.28629303 175.79325867]
[-28.20148468 177.38607788]
[-43.11667633 178.97889709]
[-56.04177094 189.07215881]
[-71.14185333 182.67530823]
[-72.88324738 166.36888123]
[-59.47455597 156.92752075]
[-44.70949554 164.06370544]
[-29.79430389 162.47088623]
[-14.87911320 160.87806702]
[0.03607775 159.28524780]
[14.95126915 157.69242859]
[29.86645889 156.09959412]
[38.99162674 144.38349915]
[54.09505844 142.55567932]
[66.32211304 152.20643616]
[81.23729706 150.61361694]
[96.15248871 149.02079773]
[74.06383514 138.33146667]
[61.10704041 119.23982239]
[59.56447220 97.68646240]
[68.40986633 79.58669281]
[83.94893646 69.21100616]
[80.05154419 54.72617722]
[76.15414429 40.24134827]
[72.25675201 25.75651741]
[68.35935211 11.27168655]
[64.46195984 -3.21314359]
[49.13847351 -11.67734909]
[44.77618790 -28.28148842]
[53.60601044 -42.60856247]
[49.52762985 -57.04347992]
[45.44924545 -71.47839355]
[41.28060913 -85.88750458]
[37.02187729 -100.27024841]
[32.76314926 -114.65298462]
[28.50441742 -129.03572083]
[14.89731789 -136.61758423]
[10.78324795 -151.26438904]
[18.09524727 -164.18995667]
[13.83651733 -178.57270813]
[8.41302204 -185.88978577]
[9.61570358 -193.16215515]
[5.53732109 -207.59707642]
[1.45893884 -222.03199768]
[-2.61944366 -236.46690369]
[-6.87817383 -250.84965515]
[-11.31658459 -265.17794800]
[-15.75499439 -279.50625610]
[-33.98742294 -293.85330200]
[-28.11059380 -315.52157593]
[-33.43641663 -329.54425049]
[-38.76224136 -343.56692505]
[-44.08806610 -357.58963013]
[-49.41389084 -371.61230469]
[-63.39833832 -379.47454834]
[-65.82822418 -395.33251953]
[-54.83955002 -407.02133179]
[-38.86188507 -405.57434082]
[-30.15192604 -392.10153198]
[-35.39120865 -376.93811035]
[-30.06538582 -362.91543579]
[-24.73956108 -348.89276123]
[-19.41373634 -334.87008667]
[-14.08791256 -320.84738159]
[-7.15221071 -319.65798950]
[-0.99259877 -316.11706543]
[3.61273146 -310.61801147]
[6.06353521 -303.80474854]
[6.01545906 -296.49630737]
[3.42761636 -289.58868408]
[-1.42668319 -283.94467163]
[3.01172733 -269.61636353]
[7.45013809 -255.28805542]
[11.16021442 -252.31813049]
[13.05906487 -246.99623108]
[11.81547260 -240.54528809]
[15.89385509 -226.11036682]
[19.97223663 -211.67546082]
[24.05061913 -197.24053955]
[28.21925735 -182.83143616]
[32.47798920 -168.44868469]
[45.64868164 -161.58805847]
[50.17252731 -147.06257629]
[42.88715744 -133.29444885]
[47.14588928 -118.91171265]
[51.40461731 -104.52897644]
[55.66334915 -90.14623260]
[60.56314087 -84.63935089]
[59.88416290 -75.55677795]
[63.96254349 -61.12186050]
[68.04092407 -46.68694687]
[80.04299164 -42.04021835]
[87.29222107 -31.17131805]
[86.96114349 -17.91639709]
[78.94679260 -7.11053944]
[82.84418488 7.37429094]
[86.74158478 21.85912132]
[90.63897705 36.34395218]
[94.53637695 50.82878113]
[98.43376923 65.31361389]
[119.60151672 65.66254425]
[139.17221069 79.19377136]
[149.03118896 103.71277618]
[162.95141602 98.12464142]
[176.87164307 92.53649902]
[190.79187012 86.94836426]
[204.71209717 81.36022186]
[218.63232422 75.77208710]
[224.39617920 64.25238037]
[236.08489990 59.87714005]
[247.25523376 64.47683716]
[261.24429321 59.06336212]
[275.23339844 53.64988708]
[282.08554077 47.64970016]
[289.43157959 48.25740433]
[303.48730469 43.01943970]
[317.54306030 37.78147507]
[331.59878540 32.54351044]
[344.32946777 21.34680557]
[358.61279297 30.48040771]
[353.79016113 46.73397827]
[336.83676147 46.59924698]
[322.78100586 51.83721161]
[308.72528076 57.07517624]
[294.66955566 62.31314087]
[280.64685059 67.63896179]
[266.65777588 73.05244446]
[252.66870117 78.46591949]
[242.39794922 92.70896912]
[224.22045898 89.69231415]
[210.30023193 95.28044891]
[196.38000488 100.86859131]
[182.45977783 106.45672607]
[168.53955078 112.04486847]
[154.61932373 117.63300323]
[155.65110779 132.59747314]
[170.20654297 136.22225952]
[184.76199341 139.84704590]
[199.31744385 143.47181702]
[213.87287903 147.09660339]
[226.41415405 137.75581360]
[242.02239990 138.71333313]
[253.32786560 149.51704407]
[254.99247742 165.06578064]
[246.23022461 178.01789856]
[231.17840576 182.25778198]
[216.94401550 175.78352356]
[210.24810791 161.65203857]
[195.69265747 158.02726746]
[181.13720703 154.40248108]
[166.58177185 150.77770996]
[152.02632141 147.15292358]
[145.57853699 160.69641113]
[157.56874084 169.70947266]
[169.55892944 178.72253418]
[181.54913330 187.73558044]
[193.53932190 196.74864197]
[205.52952576 205.76170349]
[221.82353210 210.44584656]
[221.83308411 227.39979553]
[205.54434204 232.10227966]
[196.51646423 217.75189209]
[184.52626038 208.73884583]
[172.53607178 199.72578430]
[160.54586792 190.71272278]
[148.55567932 181.69966125]
[136.56549072 172.68661499]
[122.54280090 178.01243591]
[119.55892944 192.71264648]
[116.57505035 207.41287231]
[113.59117889 222.11309814]
[120.09520721 230.79048157]
[120.75109863 241.39529419]
[115.58340454 250.42726135]
[106.49954224 255.03704834]
[103.14865875 269.65798950]
[99.79776764 284.27890015]
[96.44688416 298.89984131]
[93.09599304 313.52078247]
[102.93944550 302.20236206]
[115.73827362 294.37994385]
[130.30039978 290.78210449]
[145.26953125 291.74395752]
[159.25144958 297.17590332]
[170.94389343 306.57199097]
[179.25784302 319.05712891]
[183.41894531 333.46841431]
[183.03962708 348.46362305]
[178.15522766 362.64608765]
[169.22067261 374.69488525]
[157.06813049 383.48782349]
[142.82945251 388.20590210]
[127.83083344 388.40966797]
[113.46923828 384.08020020]
[101.08227539 375.62069702]
[91.82366180 363.81909180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[12 17]
[36 233]
[37 232]
[38 231]
[39 230]
[40 229]
[42 225]
[43 224]
[44 223]
[45 222]
[46 71]
[47 70]
[48 69]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[76 154]
[77 153]
[78 152]
[79 151]
[80 150]
[81 149]
[84 145]
[85 144]
[86 143]
[87 141]
[88 140]
[89 139]
[90 138]
[93 135]
[94 134]
[96 133]
[97 132]
[98 131]
[99 130]
[100 127]
[101 126]
[102 125]
[104 118]
[105 117]
[106 116]
[107 115]
[108 114]
[157 189]
[158 188]
[159 187]
[160 186]
[161 185]
[162 184]
[165 182]
[166 181]
[167 180]
[169 179]
[170 178]
[171 177]
[172 176]
[190 206]
[191 205]
[192 204]
[193 203]
[194 202]
[207 221]
[208 220]
[209 219]
[210 218]
[211 217]
[212 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
