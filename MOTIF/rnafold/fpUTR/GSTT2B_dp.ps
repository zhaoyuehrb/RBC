%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GSTT2B)
} def

/sequence { (\
CCGCGCUCAGCGCCUUCACUGCCAUCCCCGCUGUCCUUGCCGCCCCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 12 0.093957418 ubox
2 21 0.005164042 ubox
2 33 0.008369346 ubox
2 39 0.038810741 ubox
2 42 0.146988149 ubox
2 48 0.026353561 ubox
3 11 0.104171560 ubox
3 13 0.406166306 ubox
3 22 0.005363592 ubox
3 31 0.032435463 ubox
3 34 0.004070552 ubox
3 38 0.035701830 ubox
3 40 0.402851802 ubox
3 41 0.141528815 ubox
3 43 0.298783480 ubox
3 47 0.022515766 ubox
3 49 0.722299642 ubox
4 10 0.104177009 ubox
4 12 0.406989598 ubox
4 21 0.005323122 ubox
4 30 0.032511495 ubox
4 33 0.003767206 ubox
4 39 0.409381862 ubox
4 42 0.299378767 ubox
4 48 0.723722177 ubox
5 11 0.407061555 ubox
5 13 0.010687878 ubox
5 20 0.003648528 ubox
5 22 0.006018861 ubox
5 29 0.032241292 ubox
5 31 0.003296894 ubox
5 34 0.010624952 ubox
5 38 0.374091439 ubox
5 40 0.216257602 ubox
5 41 0.244667005 ubox
5 43 0.034296359 ubox
5 47 0.718862981 ubox
5 49 0.101009652 ubox
6 10 0.404107257 ubox
6 12 0.010762944 ubox
6 21 0.005919534 ubox
6 30 0.003326669 ubox
6 33 0.009883486 ubox
6 39 0.275032595 ubox
6 42 0.035275801 ubox
6 48 0.101086326 ubox
8 21 0.019579876 ubox
8 33 0.540899106 ubox
8 39 0.010291816 ubox
9 20 0.020042632 ubox
9 32 0.542703330 ubox
9 37 0.012964943 ubox
9 38 0.008916899 ubox
10 19 0.020090087 ubox
10 22 0.027560832 ubox
10 31 0.543004975 ubox
10 34 0.018741127 ubox
10 36 0.013147114 ubox
10 37 0.005083796 ubox
10 40 0.059468534 ubox
10 43 0.715562803 ubox
10 49 0.005506917 ubox
11 21 0.027609115 ubox
11 30 0.542968448 ubox
11 33 0.019251291 ubox
11 39 0.059504091 ubox
11 42 0.716305598 ubox
11 48 0.005517843 ubox
12 20 0.023028908 ubox
12 22 0.074219462 ubox
12 29 0.522344758 ubox
12 31 0.018654505 ubox
12 32 0.007857920 ubox
12 34 0.010917921 ubox
12 38 0.053410509 ubox
12 40 0.466515269 ubox
12 41 0.551084016 ubox
12 43 0.008213576 ubox
12 47 0.004521582 ubox
12 49 0.003765108 ubox
13 21 0.080250540 ubox
13 30 0.019027548 ubox
13 33 0.010986922 ubox
13 39 0.651398757 ubox
13 42 0.008322311 ubox
13 48 0.003859970 ubox
17 33 0.086492763 ubox
17 39 0.024059410 ubox
18 32 0.081089943 ubox
18 34 0.672222668 ubox
18 38 0.019528062 ubox
19 33 0.690885466 ubox
20 30 0.034921220 ubox
20 33 0.016943505 ubox
20 42 0.013076890 ubox
20 48 0.008485853 ubox
21 29 0.038976670 ubox
21 31 0.750400079 ubox
21 32 0.005830172 ubox
21 34 0.015519645 ubox
21 40 0.031324845 ubox
21 41 0.021139371 ubox
21 43 0.032436295 ubox
21 47 0.011339597 ubox
21 49 0.179449857 ubox
22 30 0.751211896 ubox
22 33 0.015510175 ubox
22 39 0.029536078 ubox
22 42 0.032450252 ubox
22 48 0.179738121 ubox
23 33 0.022286728 ubox
23 39 0.030024041 ubox
24 32 0.021503041 ubox
24 34 0.004493268 ubox
24 38 0.031381548 ubox
25 33 0.004593367 ubox
29 39 0.008027741 ubox
29 42 0.075736400 ubox
29 48 0.013359881 ubox
30 38 0.006895698 ubox
30 40 0.255806095 ubox
30 41 0.058628787 ubox
30 43 0.199409001 ubox
30 47 0.011201894 ubox
30 49 0.036223978 ubox
31 39 0.261333666 ubox
31 42 0.199651855 ubox
31 48 0.036199029 ubox
32 39 0.017699353 ubox
32 42 0.009603711 ubox
32 48 0.004053195 ubox
33 38 0.028011334 ubox
33 40 0.193951586 ubox
33 41 0.022966826 ubox
33 43 0.018227574 ubox
33 47 0.010429924 ubox
33 49 0.007001430 ubox
34 39 0.181605725 ubox
34 42 0.017923511 ubox
34 48 0.006746185 ubox
38 48 0.008619455 ubox
39 47 0.011836456 ubox
39 49 0.106997401 ubox
40 48 0.102126308 ubox
41 48 0.092794582 ubox
42 47 0.096544807 ubox
42 49 0.359303695 ubox
43 48 0.359165670 ubox
3 49 0.9500000 lbox
4 48 0.9500000 lbox
5 47 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
showpage
end
%%EOF
