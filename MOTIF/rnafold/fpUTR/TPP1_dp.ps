%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TPP1)
} def

/sequence { (\
GGUGGUGGAAUAUAGAGCUCAUGUGAUCCGUCACAUGACAGCAGAUCCGCGGAAGGGCAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.018538623 ubox
1 47 0.014504847 ubox
1 48 0.081549033 ubox
2 11 0.048650392 ubox
2 13 0.074657037 ubox
2 18 0.033294856 ubox
2 34 0.105117159 ubox
2 39 0.006327403 ubox
2 42 0.009162842 ubox
2 46 0.014380606 ubox
2 47 0.081456733 ubox
2 50 0.134431002 ubox
2 58 0.061498107 ubox
3 10 0.049593121 ubox
3 12 0.076363841 ubox
3 14 0.017771873 ubox
3 17 0.033203616 ubox
3 33 0.105284362 ubox
3 38 0.006120772 ubox
3 40 0.004608772 ubox
3 41 0.008667506 ubox
3 43 0.091701763 ubox
3 45 0.015192256 ubox
3 49 0.134335987 ubox
3 51 0.067256623 ubox
3 57 0.057092435 ubox
3 59 0.045055540 ubox
4 11 0.074829537 ubox
4 13 0.019219529 ubox
4 19 0.011760196 ubox
4 32 0.105351949 ubox
4 39 0.005203270 ubox
4 42 0.097403012 ubox
4 47 0.009070716 ubox
4 48 0.135813550 ubox
4 50 0.064634660 ubox
4 58 0.049871444 ubox
5 11 0.011673553 ubox
5 13 0.028081739 ubox
5 18 0.017558950 ubox
5 31 0.100510027 ubox
5 36 0.005638003 ubox
5 39 0.005985520 ubox
5 42 0.017752560 ubox
5 46 0.011136006 ubox
5 47 0.135451472 ubox
5 50 0.927141373 ubox
5 58 0.015017796 ubox
6 10 0.011701379 ubox
6 12 0.029221025 ubox
6 14 0.037553878 ubox
6 17 0.017435356 ubox
6 30 0.099715588 ubox
6 35 0.005637280 ubox
6 38 0.003989740 ubox
6 40 0.097962243 ubox
6 41 0.016701871 ubox
6 43 0.037105215 ubox
6 45 0.031263702 ubox
6 49 0.929522428 ubox
6 51 0.004608369 ubox
6 57 0.014197662 ubox
6 59 0.014044368 ubox
7 11 0.024625770 ubox
7 13 0.038374544 ubox
7 19 0.003415708 ubox
7 29 0.105577880 ubox
7 34 0.005594450 ubox
7 39 0.098123596 ubox
7 42 0.035916075 ubox
7 48 0.946027722 ubox
7 50 0.004948811 ubox
7 58 0.015449992 ubox
8 18 0.008569396 ubox
8 28 0.105585361 ubox
8 32 0.003737089 ubox
8 46 0.005378355 ubox
8 47 0.946003464 ubox
9 27 0.104966003 ubox
9 31 0.003660948 ubox
9 46 0.854289701 ubox
10 24 0.012065072 ubox
10 27 0.004760024 ubox
10 31 0.003637004 ubox
10 46 0.353352072 ubox
11 23 0.012724692 ubox
11 25 0.101803073 ubox
11 26 0.005001095 ubox
11 30 0.003572585 ubox
11 45 0.491787051 ubox
12 22 0.012682240 ubox
12 24 0.104145124 ubox
12 46 0.119652936 ubox
13 21 0.012316541 ubox
13 23 0.104171738 ubox
13 45 0.238701707 ubox
14 22 0.103007961 ubox
15 47 0.028132970 ubox
16 46 0.029243560 ubox
17 24 0.008663137 ubox
17 42 0.831475444 ubox
17 50 0.003340700 ubox
17 58 0.023279044 ubox
18 23 0.008793268 ubox
18 41 0.831113210 ubox
18 44 0.014157691 ubox
18 49 0.003342709 ubox
18 57 0.023244166 ubox
19 26 0.003455172 ubox
19 38 0.825418187 ubox
19 40 0.499956606 ubox
19 43 0.008757831 ubox
19 56 0.016854630 ubox
20 25 0.003477894 ubox
20 37 0.991907666 ubox
20 55 0.014419421 ubox
21 36 0.993791800 ubox
22 35 0.993889888 ubox
22 51 0.012702701 ubox
23 34 0.994273658 ubox
23 50 0.013169356 ubox
24 33 0.994081267 ubox
24 49 0.013102578 ubox
25 32 0.993846498 ubox
25 47 0.009494350 ubox
25 48 0.009300857 ubox
26 31 0.880846484 ubox
26 46 0.013243696 ubox
27 45 0.013280513 ubox
28 44 0.013253742 ubox
30 39 0.013348875 ubox
30 42 0.006112838 ubox
31 38 0.013467303 ubox
31 41 0.005804214 ubox
32 37 0.013537637 ubox
35 46 0.006551645 ubox
36 43 0.019120680 ubox
36 45 0.007514863 ubox
36 59 0.005207440 ubox
37 42 0.021127234 ubox
37 47 0.005008406 ubox
37 58 0.005722354 ubox
38 46 0.004856806 ubox
41 50 0.026929043 ubox
41 58 0.063328376 ubox
42 49 0.026939602 ubox
42 57 0.063125406 ubox
46 52 0.003368586 ubox
46 53 0.050584191 ubox
46 57 0.117798575 ubox
46 61 0.148762673 ubox
47 51 0.003727189 ubox
47 52 0.051707635 ubox
47 56 0.166499353 ubox
47 57 0.032359730 ubox
47 60 0.170963123 ubox
48 55 0.166674781 ubox
48 56 0.032739146 ubox
49 58 0.285446933 ubox
50 57 0.285781775 ubox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
19 38 0.9500000 lbox
20 37 0.9500000 lbox
21 36 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
showpage
end
%%EOF
