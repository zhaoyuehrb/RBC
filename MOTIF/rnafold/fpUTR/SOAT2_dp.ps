%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SOAT2)
} def

/sequence { (\
GGGACAAGAGCUCUACAGGGCAGGCCACACUGCGAAGGAAGGAGGCAACACGGGCAAGGGCUGCCUGCUGCCCGCUGGAGACCGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.008089283 ubox
1 13 0.021432466 ubox
1 14 0.007920647 ubox
1 26 0.009066662 ubox
1 73 0.011088451 ubox
1 83 0.181816508 ubox
1 88 0.527822997 ubox
2 11 0.014149578 ubox
2 12 0.021690203 ubox
2 13 0.008376692 ubox
2 14 0.011529582 ubox
2 25 0.009049042 ubox
2 26 0.010627941 ubox
2 72 0.011092871 ubox
2 82 0.180747379 ubox
2 83 0.174901658 ubox
2 87 0.533543265 ubox
2 88 0.419929824 ubox
3 11 0.022351531 ubox
3 12 0.007842279 ubox
3 13 0.012031544 ubox
3 25 0.010655276 ubox
3 71 0.011046970 ubox
3 82 0.174246942 ubox
3 87 0.424365428 ubox
4 12 0.011551973 ubox
5 70 0.009054627 ubox
5 77 0.011202583 ubox
6 69 0.007728370 ubox
6 76 0.009239428 ubox
7 14 0.007358276 ubox
7 69 0.003648573 ubox
7 76 0.010088490 ubox
8 13 0.007597011 ubox
8 68 0.004919155 ubox
8 75 0.010667666 ubox
9 76 0.056576971 ubox
10 21 0.030203468 ubox
10 46 0.021058677 ubox
10 75 0.057168332 ubox
10 85 0.112063140 ubox
11 20 0.030241111 ubox
11 41 0.003591417 ubox
11 44 0.022629573 ubox
11 45 0.016553820 ubox
11 74 0.057020962 ubox
11 78 0.005439254 ubox
11 80 0.987330707 ubox
11 84 0.103559453 ubox
12 19 0.030177201 ubox
12 38 0.004043387 ubox
12 39 0.011947308 ubox
12 42 0.006619192 ubox
12 43 0.026989829 ubox
12 44 0.008748294 ubox
12 77 0.004391319 ubox
12 78 0.005556398 ubox
12 79 0.993937114 ubox
12 81 0.065022683 ubox
13 18 0.029754424 ubox
13 19 0.004031075 ubox
13 37 0.005046373 ubox
13 38 0.012832876 ubox
13 41 0.009630290 ubox
13 42 0.027729930 ubox
13 77 0.008147178 ubox
13 78 0.994381888 ubox
13 80 0.068244753 ubox
14 18 0.003649139 ubox
14 36 0.004922686 ubox
14 37 0.012381484 ubox
14 40 0.009567076 ubox
14 41 0.026671497 ubox
14 77 0.990519225 ubox
14 79 0.056384137 ubox
15 76 0.935787226 ubox
16 77 0.060432110 ubox
17 76 0.057899300 ubox
18 73 0.997852284 ubox
18 75 0.035306616 ubox
18 88 0.003690979 ubox
19 72 0.998474089 ubox
19 73 0.014346494 ubox
19 87 0.003717526 ubox
20 33 0.044206505 ubox
20 71 0.998500952 ubox
20 72 0.007834801 ubox
21 32 0.044244482 ubox
21 70 0.998520979 ubox
22 31 0.044560795 ubox
22 69 0.997562179 ubox
23 30 0.044830447 ubox
23 68 0.993914116 ubox
23 69 0.005575997 ubox
24 30 0.010163244 ubox
24 33 0.027992160 ubox
24 46 0.989015389 ubox
24 55 0.040337830 ubox
24 68 0.010326954 ubox
25 32 0.027780744 ubox
25 38 0.014516327 ubox
25 42 0.074756727 ubox
25 45 0.990213398 ubox
25 53 0.003676329 ubox
25 54 0.040364669 ubox
25 67 0.011634294 ubox
26 32 0.003734611 ubox
26 37 0.014546153 ubox
26 41 0.075165696 ubox
26 44 0.988778905 ubox
26 52 0.004204083 ubox
26 53 0.040311139 ubox
27 31 0.004146857 ubox
30 37 0.217075864 ubox
30 38 0.091830050 ubox
30 41 0.943106070 ubox
30 42 0.137751669 ubox
30 44 0.007695481 ubox
31 36 0.215272476 ubox
31 37 0.090932695 ubox
31 40 0.942549395 ubox
31 41 0.134440666 ubox
31 43 0.010972118 ubox
31 47 0.092328546 ubox
31 86 0.017629978 ubox
32 46 0.099091295 ubox
32 85 0.020427884 ubox
33 45 0.099090562 ubox
33 84 0.020433531 ubox
34 83 0.020272837 ubox
37 72 0.005711793 ubox
37 73 0.003418374 ubox
37 88 0.005336836 ubox
38 71 0.005810565 ubox
38 72 0.003355996 ubox
38 87 0.005375179 ubox
40 69 0.008073114 ubox
40 76 0.024105756 ubox
41 65 0.003169164 ubox
41 68 0.009072057 ubox
41 73 0.003624730 ubox
41 75 0.025034956 ubox
41 76 0.003996011 ubox
41 83 0.005759087 ubox
41 88 0.005716672 ubox
42 75 0.004095188 ubox
42 82 0.005756353 ubox
42 87 0.005765392 ubox
43 66 0.020952964 ubox
44 65 0.021423238 ubox
44 72 0.033461749 ubox
44 83 0.010706701 ubox
45 64 0.021425593 ubox
45 71 0.033870795 ubox
45 82 0.010783462 ubox
45 85 0.006841791 ubox
46 63 0.021410130 ubox
46 70 0.033921546 ubox
46 77 0.005005132 ubox
46 84 0.006838412 ubox
47 62 0.015908521 ubox
47 69 0.033540981 ubox
47 76 0.004986828 ubox
49 67 0.033152231 ubox
49 70 0.005706740 ubox
49 77 0.029606488 ubox
50 66 0.023275659 ubox
50 69 0.007668179 ubox
50 76 0.029518364 ubox
51 63 0.003474178 ubox
51 67 0.982232108 ubox
51 74 0.038955469 ubox
52 62 0.003846456 ubox
52 65 0.008928347 ubox
52 66 0.995498749 ubox
52 73 0.039914924 ubox
53 61 0.003972493 ubox
53 62 0.015038663 ubox
53 64 0.007247535 ubox
53 65 0.997915927 ubox
53 69 0.008774648 ubox
53 72 0.039917621 ubox
54 61 0.021171064 ubox
54 64 0.997943134 ubox
54 68 0.011611724 ubox
54 71 0.039917055 ubox
55 60 0.021302606 ubox
55 63 0.997899024 ubox
55 67 0.012888962 ubox
55 70 0.039908073 ubox
56 62 0.950107896 ubox
56 66 0.009206635 ubox
56 69 0.037662218 ubox
57 66 0.052697840 ubox
58 65 0.055537899 ubox
58 66 0.017727534 ubox
59 64 0.055485307 ubox
59 65 0.017965520 ubox
59 66 0.005033088 ubox
59 69 0.005752256 ubox
60 64 0.017684266 ubox
60 65 0.004976781 ubox
60 68 0.008184872 ubox
61 67 0.008232029 ubox
74 85 0.032474163 ubox
75 84 0.031993718 ubox
76 84 0.010059727 ubox
76 86 0.003582658 ubox
77 83 0.030985674 ubox
77 85 0.004256492 ubox
77 88 0.005519223 ubox
78 82 0.030508739 ubox
78 87 0.005667098 ubox
11 80 0.9500000 lbox
12 79 0.9500000 lbox
13 78 0.9500000 lbox
14 77 0.9500000 lbox
15 76 0.9500000 lbox
18 73 0.9500000 lbox
19 72 0.9500000 lbox
20 71 0.9500000 lbox
21 70 0.9500000 lbox
22 69 0.9500000 lbox
23 68 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
26 44 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
51 67 0.9500000 lbox
52 66 0.9500000 lbox
53 65 0.9500000 lbox
54 64 0.9500000 lbox
55 63 0.9500000 lbox
56 62 0.9500000 lbox
showpage
end
%%EOF
