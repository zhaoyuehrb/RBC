%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:47:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCUCUCCCUGCCCCCGCGACUUCGCGCAAGAUCCGGGAAGGACACCCGAGGCCCCUGGGAGACCCUGGGGAGGUGAAAAUCAGAGAGCGAAGCGGGCCGUGGCCCCUAGGCCUGACCCCUCCCCGCGGGGUAAGGCGGGCACCCCGCGAGCGCAGGGGUCCUCUUACUGCUGAUGGCACCCAGCUCUGGGCCCAGACGCCGCUCACCGUCCACCGCCGGUGCUGGGUAAA\
) } def
/len { sequence length } bind def

/coor [
[80.42913055 180.78450012]
[73.10295105 167.69531250]
[71.80587769 152.75149536]
[76.76773834 138.59506226]
[83.33565521 125.10942841]
[89.90357208 111.62378693]
[77.67432404 120.30972290]
[65.44507599 128.99565125]
[53.21582413 137.68159485]
[40.98657608 146.36752319]
[28.75732422 155.05345154]
[21.00437927 175.04197693]
[0.38129362 176.04051208]
[-11.48829079 185.21182251]
[-23.35787582 194.38313293]
[-18.85078049 207.78924561]
[-24.14402390 223.76449585]
[-40.03692627 235.15290833]
[-48.88625717 247.26443481]
[-57.73558807 259.37597656]
[-66.58492279 271.48751831]
[-67.80396271 287.84127808]
[-82.69174957 294.71774292]
[-95.93301392 285.04299927]
[-93.90626526 268.76956177]
[-78.69645691 262.63818359]
[-69.84712982 250.52664185]
[-60.99779510 238.41511536]
[-52.14846420 226.30357361]
[-56.77385330 220.39968872]
[-68.58160400 229.65048218]
[-80.38935852 238.90126038]
[-95.24056244 241.00883484]
[-89.64014435 227.09350586]
[-77.83238983 217.84272766]
[-66.02463531 208.59194946]
[-70.65003204 202.68806458]
[-84.52741241 208.38177490]
[-98.40479279 214.07548523]
[-112.28217316 219.76918030]
[-116.86182404 234.72113037]
[-130.00903320 243.18783569]
[-145.51608276 241.17156982]
[-156.06101990 229.62434387]
[-156.66485596 213.99842834]
[-147.04248047 201.67189026]
[-131.73725891 198.46493530]
[-117.97587585 205.89179993]
[-104.09849548 200.19808960]
[-90.22111511 194.50439453]
[-76.34373474 188.81068420]
[-52.67922974 174.01104736]
[-32.52918625 182.51354980]
[-20.65960312 173.34223938]
[-8.79001808 164.17092896]
[-9.11094761 155.32572937]
[-5.27543879 147.19673157]
[1.97384357 141.65339661]
[11.09440613 140.03396606]
[20.07139015 142.82420349]
[32.30064011 134.13827515]
[44.52989197 125.45233917]
[56.75914001 116.76640320]
[68.98838806 108.08047485]
[81.21763611 99.39453888]
[84.70952606 84.80664062]
[77.73867798 71.52480316]
[70.76782990 58.24296188]
[63.70798492 45.00821304]
[56.55945206 31.82115364]
[49.41092300 18.63409615]
[42.26239395 5.44703770]
[35.11386108 -7.74002075]
[27.96533012 -20.92707825]
[20.81679916 -34.11413574]
[13.66826916 -47.30119705]
[4.00223875 -47.25332260]
[-4.96662331 -50.69997787]
[-12.02749729 -57.13085556]
[-16.24356461 -65.63589478]
[-17.07618904 -75.03394318]
[-14.45340729 -84.03671265]
[-8.77404976 -91.42539978]
[-15.20443821 -104.97714996]
[-21.63482666 -118.52890778]
[-28.06521416 -132.08065796]
[-32.33499908 -135.02772522]
[-34.81019211 -138.92457581]
[-35.42890930 -142.93281555]
[-34.46934128 -146.31005859]
[-40.34884262 -160.10974121]
[-54.73542023 -166.08169556]
[-60.50148392 -180.16029358]
[-54.71949005 -193.83889771]
[-60.59898758 -207.63858032]
[-66.83174896 -214.29380798]
[-66.46340942 -221.66322327]
[-72.15711975 -235.54060364]
[-77.85082245 -249.41798401]
[-83.54452515 -263.29537964]
[-96.84503174 -272.88851929]
[-94.91839600 -289.17410278]
[-79.74658203 -295.39889526]
[-66.93704987 -285.15939331]
[-69.66714478 -268.98907471]
[-63.97344208 -255.11169434]
[-58.27973557 -241.23431396]
[-52.58602905 -227.35693359]
[-46.79929733 -213.51808167]
[-40.91979599 -199.71839905]
[-27.04942703 -194.41288757]
[-20.89019775 -180.50178528]
[-26.54915047 -165.98924255]
[-20.66965103 -152.18954468]
[-14.51345825 -138.51104736]
[-8.08306980 -124.95929718]
[-1.65268147 -111.40753937]
[4.77770710 -97.85578156]
[24.54611969 -92.60808563]
[34.11749268 -74.19973755]
[26.85532761 -54.44972610]
[34.00385666 -41.26266861]
[41.15238953 -28.07560921]
[48.30091858 -14.88855171]
[55.44945145 -1.70149326]
[62.59798050 11.48556519]
[69.74651337 24.67262268]
[76.89504242 37.85968018]
[82.83638000 42.23512268]
[84.04967499 51.27211380]
[91.02052307 64.55395508]
[97.99137115 77.83579254]
[112.62483215 81.13152313]
[124.61647034 72.12038422]
[136.60810852 63.10925293]
[148.59974670 54.09812164]
[160.59140015 45.08698654]
[172.58303833 36.07585144]
[177.55326843 28.43150902]
[184.79669189 27.02552223]
[196.90823364 18.17619133]
[209.01977539 9.32685947]
[221.13131714 0.47752753]
[226.20373535 -7.09940052]
[233.46537781 -8.40801525]
[245.69462585 -17.09395027]
[257.92388916 -25.77988434]
[264.69454956 -40.07913589]
[279.55126953 -41.14092636]
[291.78051758 -49.82686234]
[298.11553955 -64.95298004]
[314.41470337 -66.76107025]
[323.91082764 -53.39111710]
[316.83511353 -38.59698868]
[300.46643066 -37.59761047]
[288.23718262 -28.91167641]
[282.34124756 -15.23370171]
[266.60980225 -13.55063438]
[254.38055420 -4.86469984]
[242.15130615 3.82123423]
[229.98063660 12.58906460]
[217.86911011 21.43839645]
[205.75756836 30.28772736]
[193.64602661 39.13705826]
[181.59417725 48.06749344]
[169.60252380 57.07862854]
[157.61088562 66.08975983]
[145.61924744 75.10089874]
[133.62760925 84.11203003]
[121.63596344 93.12316132]
[123.96316528 100.25296783]
[130.94476318 121.64238739]
[145.94342041 121.84376526]
[160.94206238 122.04514313]
[176.86094666 116.21199036]
[186.87292480 129.89398193]
[176.49722290 143.30223083]
[160.74069214 137.04379272]
[145.74203491 136.84240723]
[130.74339294 136.64103699]
[124.77139282 150.40095520]
[135.16226196 161.21897888]
[145.55311584 172.03701782]
[155.94398499 182.85505676]
[166.33485413 193.67309570]
[176.72572327 204.49113464]
[187.11657715 215.30917358]
[202.25645447 219.90206909]
[205.49278259 234.44082642]
[215.88365173 245.25886536]
[226.27452087 256.07690430]
[236.66539001 266.89492798]
[251.15830994 262.23483276]
[266.17614746 264.32086182]
[278.74755859 272.68624878]
[286.40878296 285.62713623]
[287.68630981 300.54953003]
[282.38015747 314.48904419]
[292.77099609 325.30706787]
[303.16186523 336.12512207]
[313.55273438 346.94314575]
[328.90557861 344.69152832]
[342.63409424 351.92391968]
[349.45941162 365.85931396]
[346.75701904 381.13925171]
[335.56607056 391.88830566]
[320.18969727 393.97323608]
[306.54043579 386.59234619]
[299.86669922 372.58374023]
[302.73471069 357.33401489]
[292.34384155 346.51599121]
[281.95297241 335.69793701]
[271.56210327 324.87991333]
[257.42022705 329.62048340]
[242.56140137 327.74313354]
[229.93948364 319.56704712]
[222.08709717 306.66897583]
[220.60745239 291.57931519]
[225.84735107 277.28579712]
[215.45648193 266.46777344]
[205.06561279 255.64973450]
[194.67475891 244.83169556]
[180.27810669 241.01257324]
[176.29855347 225.70002747]
[165.90768433 214.88200378]
[155.51681519 204.06396484]
[145.12594604 193.24592590]
[134.73509216 182.42788696]
[124.34422302 171.60984802]
[113.95335388 160.79180908]
[117.88575745 175.26718140]
[121.81815338 189.74255371]
[107.14938354 192.87739563]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 65]
[7 64]
[8 63]
[9 62]
[10 61]
[11 60]
[13 55]
[14 54]
[15 53]
[18 29]
[19 28]
[20 27]
[21 26]
[37 51]
[38 50]
[39 49]
[40 48]
[66 132]
[67 131]
[68 130]
[69 128]
[70 127]
[71 126]
[72 125]
[73 124]
[74 123]
[75 122]
[76 121]
[83 118]
[84 117]
[85 116]
[86 115]
[90 114]
[91 113]
[94 110]
[95 109]
[97 108]
[98 107]
[99 106]
[100 105]
[133 170]
[134 169]
[135 168]
[136 167]
[137 166]
[138 165]
[140 164]
[141 163]
[142 162]
[143 161]
[145 160]
[146 159]
[147 158]
[149 156]
[150 155]
[172 180]
[173 179]
[174 178]
[181 230]
[182 229]
[183 228]
[184 227]
[185 226]
[186 225]
[187 224]
[189 222]
[190 221]
[191 220]
[192 219]
[198 213]
[199 212]
[200 211]
[201 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
