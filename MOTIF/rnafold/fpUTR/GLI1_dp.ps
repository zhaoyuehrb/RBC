%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GLI1)
} def

/sequence { (\
CCCAGACUCCAGCCCUGGACCGCGCAUCCCGAGCCCAGCGCCCAGACAGAGUGUCCCCACACCCUCCUCUGAGACGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.039181060 ubox
2 17 0.028389493 ubox
2 18 0.818717714 ubox
3 17 0.821104194 ubox
3 53 0.007778252 ubox
3 71 0.234677398 ubox
4 16 0.821146223 ubox
4 52 0.005357926 ubox
4 68 0.005380040 ubox
4 70 0.235130848 ubox
5 15 0.819420138 ubox
5 28 0.003621811 ubox
5 55 0.039909956 ubox
5 66 0.003443479 ubox
5 67 0.005832025 ubox
5 69 0.235105782 ubox
6 27 0.003550896 ubox
6 52 0.071978999 ubox
6 54 0.039614746 ubox
6 68 0.216490133 ubox
7 18 0.004970561 ubox
7 33 0.010080638 ubox
7 45 0.022286517 ubox
7 49 0.007196760 ubox
7 51 0.076766523 ubox
7 53 0.039077236 ubox
7 73 0.086387219 ubox
8 17 0.004804063 ubox
8 19 0.359782982 ubox
8 32 0.010074341 ubox
8 44 0.021451144 ubox
8 46 0.023284563 ubox
8 48 0.006805775 ubox
8 50 0.079962347 ubox
8 72 0.084310221 ubox
8 74 0.061341693 ubox
9 18 0.389369932 ubox
9 31 0.009995801 ubox
9 45 0.025048556 ubox
9 49 0.080105687 ubox
9 71 0.065291540 ubox
9 73 0.066210448 ubox
10 17 0.389447440 ubox
10 71 0.081010927 ubox
11 16 0.350849711 ubox
11 65 0.015703627 ubox
11 68 0.018526766 ubox
11 70 0.091586664 ubox
12 23 0.009559558 ubox
12 25 0.004612583 ubox
12 34 0.027634637 ubox
12 39 0.010872821 ubox
12 41 0.264781327 ubox
12 52 0.010161214 ubox
12 64 0.015914890 ubox
12 67 0.020154672 ubox
12 69 0.090140697 ubox
12 77 0.082711065 ubox
13 22 0.009566456 ubox
13 24 0.004607230 ubox
13 33 0.027660270 ubox
13 38 0.010067423 ubox
13 40 0.265171829 ubox
13 51 0.010414633 ubox
13 76 0.082738600 ubox
15 33 0.004042545 ubox
15 38 0.266403516 ubox
15 45 0.311350341 ubox
15 49 0.024990614 ubox
15 73 0.009134141 ubox
16 24 0.004489547 ubox
16 31 0.011495905 ubox
16 32 0.003761948 ubox
16 37 0.268106440 ubox
16 44 0.312476837 ubox
16 48 0.025099889 ubox
16 59 0.005983646 ubox
16 72 0.008872919 ubox
17 23 0.005298161 ubox
17 25 0.003192602 ubox
17 29 0.026840437 ubox
17 30 0.013230876 ubox
17 35 0.030453699 ubox
17 36 0.267118895 ubox
17 42 0.007652064 ubox
17 43 0.312761031 ubox
17 47 0.025107707 ubox
17 56 0.003590445 ubox
17 58 0.006252673 ubox
17 64 0.008491966 ubox
17 67 0.006395867 ubox
17 78 0.005755564 ubox
18 28 0.026987627 ubox
18 29 0.013052562 ubox
18 34 0.040394005 ubox
18 35 0.265525350 ubox
18 41 0.008227032 ubox
18 42 0.312483108 ubox
18 55 0.003611925 ubox
18 57 0.006231613 ubox
18 63 0.008475818 ubox
18 66 0.006401917 ubox
18 77 0.006042759 ubox
19 27 0.025805471 ubox
19 54 0.003623476 ubox
19 65 0.005355027 ubox
20 53 0.003394482 ubox
21 31 0.079818176 ubox
21 40 0.146471633 ubox
21 71 0.003802847 ubox
21 76 0.025706642 ubox
22 30 0.078861532 ubox
22 34 0.266259949 ubox
22 39 0.150484687 ubox
22 41 0.911926120 ubox
22 75 0.008987994 ubox
22 77 0.069772748 ubox
23 31 0.136328132 ubox
23 33 0.266471328 ubox
23 38 0.150411022 ubox
23 40 0.913660727 ubox
23 76 0.069889741 ubox
24 30 0.134391674 ubox
24 34 0.188018935 ubox
24 39 0.913701532 ubox
24 41 0.008513218 ubox
24 75 0.068107581 ubox
24 77 0.020134829 ubox
25 33 0.188213036 ubox
25 38 0.913017719 ubox
25 40 0.008632568 ubox
25 76 0.020153819 ubox
27 46 0.003344206 ubox
27 72 0.042700536 ubox
27 74 0.029027355 ubox
28 45 0.003633136 ubox
28 71 0.040001782 ubox
28 73 0.029925537 ubox
30 40 0.015435406 ubox
30 71 0.009833018 ubox
31 39 0.015772242 ubox
31 66 0.005134410 ubox
31 69 0.038303261 ubox
32 65 0.005094268 ubox
32 68 0.038359593 ubox
33 39 0.035649822 ubox
33 41 0.048068358 ubox
33 64 0.004894690 ubox
33 67 0.037891268 ubox
34 38 0.035474996 ubox
34 40 0.048157536 ubox
37 65 0.009520988 ubox
38 64 0.009575764 ubox
38 77 0.253057322 ubox
39 76 0.253921112 ubox
40 75 0.251834339 ubox
40 77 0.025868391 ubox
41 76 0.026195053 ubox
43 71 0.927626786 ubox
44 65 0.004047937 ubox
44 68 0.021926591 ubox
44 70 0.929962694 ubox
45 55 0.062678589 ubox
45 64 0.004262228 ubox
45 66 0.027801927 ubox
45 67 0.028406208 ubox
45 69 0.930268018 ubox
46 52 0.003830082 ubox
46 54 0.063266509 ubox
46 65 0.023904570 ubox
46 68 0.912088398 ubox
47 51 0.003945498 ubox
47 53 0.063329082 ubox
47 71 0.204151002 ubox
48 52 0.051325506 ubox
48 65 0.833183172 ubox
48 68 0.020869480 ubox
48 70 0.205447074 ubox
49 55 0.003204262 ubox
49 64 0.860262638 ubox
49 66 0.377264655 ubox
49 67 0.025548790 ubox
49 69 0.205506114 ubox
50 65 0.374715260 ubox
50 68 0.205074156 ubox
51 60 0.089819174 ubox
51 62 0.912679163 ubox
51 64 0.333841092 ubox
51 67 0.157788729 ubox
51 75 0.006511710 ubox
51 77 0.082606512 ubox
52 59 0.096417558 ubox
52 61 0.934525444 ubox
52 74 0.006511138 ubox
52 76 0.083028039 ubox
53 58 0.096148254 ubox
53 60 0.936530566 ubox
53 62 0.287516118 ubox
53 75 0.088673112 ubox
54 59 0.855888229 ubox
54 61 0.272264813 ubox
54 72 0.006627567 ubox
54 74 0.088644451 ubox
55 71 0.006666576 ubox
55 73 0.087428345 ubox
58 71 0.049741059 ubox
59 70 0.045590708 ubox
60 71 0.031517460 ubox
61 70 0.030869874 ubox
64 73 0.108619310 ubox
65 72 0.110325287 ubox
65 74 0.010517936 ubox
66 71 0.109878543 ubox
66 73 0.012323019 ubox
67 73 0.012719443 ubox
68 72 0.011559831 ubox
68 74 0.007698030 ubox
69 73 0.008273433 ubox
70 76 0.003268929 ubox
71 75 0.005363722 ubox
2 18 0.9500000 lbox
3 17 0.9500000 lbox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
43 71 0.9500000 lbox
44 70 0.9500000 lbox
45 69 0.9500000 lbox
46 68 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
