%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MVD)
} def

/sequence { (\
CAGAGGCCUCUGGGGUGGGAUCGCGGGCCGUAAGUGGCUGUGGAGCUGGGGUCACUGCGCGGUGGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.580437417 ubox
1 17 0.037235205 ubox
1 36 0.039067121 ubox
1 42 0.012681422 ubox
1 48 0.015094887 ubox
1 57 0.071940418 ubox
1 64 0.012479828 ubox
2 9 0.026652006 ubox
2 11 0.582219317 ubox
2 16 0.029845858 ubox
2 35 0.039100280 ubox
2 41 0.012507406 ubox
2 47 0.014793670 ubox
2 56 0.072925611 ubox
2 63 0.009254230 ubox
3 8 0.028614401 ubox
3 10 0.582349293 ubox
3 22 0.053684581 ubox
3 46 0.014516551 ubox
3 55 0.072768668 ubox
4 9 0.544789917 ubox
4 11 0.020045050 ubox
4 21 0.053537731 ubox
4 39 0.008553961 ubox
5 10 0.020652700 ubox
5 11 0.006489472 ubox
5 22 0.023776834 ubox
5 29 0.170147751 ubox
5 38 0.006074382 ubox
5 39 0.011247664 ubox
5 47 0.007194319 ubox
5 53 0.074926211 ubox
5 69 0.659843574 ubox
6 10 0.006603193 ubox
6 16 0.323765162 ubox
6 21 0.022882042 ubox
6 24 0.030061071 ubox
6 28 0.171793219 ubox
6 38 0.013199317 ubox
6 46 0.007840107 ubox
6 52 0.075746316 ubox
6 63 0.020802256 ubox
6 68 0.665406046 ubox
7 13 0.039598072 ubox
7 14 0.051994357 ubox
7 15 0.334184007 ubox
7 18 0.062286960 ubox
7 19 0.037008225 ubox
7 23 0.030046891 ubox
7 26 0.012135974 ubox
7 27 0.171849672 ubox
7 37 0.014537832 ubox
7 45 0.007268183 ubox
7 51 0.075836983 ubox
7 62 0.021524619 ubox
7 65 0.139925315 ubox
7 66 0.675395106 ubox
8 12 0.039409779 ubox
8 13 0.052510074 ubox
8 14 0.334108162 ubox
8 15 0.007872747 ubox
8 17 0.062850543 ubox
8 18 0.037009005 ubox
8 19 0.058283745 ubox
8 25 0.012209954 ubox
8 26 0.169333310 ubox
8 27 0.015354959 ubox
8 36 0.014523856 ubox
8 45 0.004331813 ubox
8 50 0.075810719 ubox
8 61 0.021509754 ubox
8 64 0.142051121 ubox
8 65 0.674977304 ubox
8 66 0.064998655 ubox
9 13 0.300994946 ubox
9 14 0.007537530 ubox
9 15 0.011214961 ubox
9 17 0.024657377 ubox
9 18 0.058532080 ubox
9 19 0.007913915 ubox
9 20 0.033171593 ubox
9 25 0.142464403 ubox
9 26 0.013547661 ubox
9 27 0.073297832 ubox
9 44 0.005269496 ubox
9 49 0.072770331 ubox
9 50 0.003168070 ubox
9 62 0.010511482 ubox
9 64 0.625007534 ubox
9 65 0.063186636 ubox
9 66 0.004111763 ubox
9 67 0.005575928 ubox
10 14 0.013020863 ubox
10 17 0.065055496 ubox
10 18 0.011085771 ubox
10 19 0.037310727 ubox
10 25 0.065760077 ubox
10 26 0.587823630 ubox
10 27 0.005076337 ubox
10 34 0.014082029 ubox
10 43 0.005262045 ubox
10 48 0.072107865 ubox
10 49 0.021027436 ubox
10 61 0.016652038 ubox
10 62 0.368877277 ubox
10 64 0.054773878 ubox
10 65 0.006260749 ubox
10 66 0.005840048 ubox
11 17 0.010916360 ubox
11 18 0.036898393 ubox
11 23 0.092726645 ubox
11 25 0.592118783 ubox
11 26 0.005297724 ubox
11 32 0.009311580 ubox
11 33 0.011380138 ubox
11 42 0.004927107 ubox
11 48 0.020707053 ubox
11 59 0.027640385 ubox
11 61 0.368897232 ubox
11 64 0.006101406 ubox
11 65 0.005463095 ubox
12 16 0.005459106 ubox
12 22 0.094604413 ubox
12 24 0.603500391 ubox
12 29 0.003563938 ubox
12 31 0.012503797 ubox
12 41 0.003968238 ubox
12 47 0.021809900 ubox
12 58 0.031738886 ubox
12 60 0.367439184 ubox
12 63 0.005232918 ubox
12 69 0.005781556 ubox
13 21 0.089869345 ubox
13 22 0.085321508 ubox
13 28 0.003648996 ubox
13 29 0.004209181 ubox
13 46 0.022137069 ubox
13 47 0.013526389 ubox
13 68 0.008726617 ubox
13 69 0.060243545 ubox
14 21 0.079488251 ubox
14 22 0.599345593 ubox
14 28 0.004231337 ubox
14 29 0.015276212 ubox
14 39 0.003683152 ubox
14 46 0.014143162 ubox
14 47 0.050925086 ubox
14 56 0.035878796 ubox
14 68 0.059089863 ubox
14 69 0.317302729 ubox
15 21 0.578078191 ubox
15 24 0.146736570 ubox
15 28 0.015283644 ubox
15 38 0.003528487 ubox
15 46 0.051978923 ubox
15 55 0.036421780 ubox
15 58 0.372219586 ubox
15 60 0.005242293 ubox
15 68 0.321325944 ubox
16 20 0.535295287 ubox
16 23 0.146826212 ubox
16 25 0.012726645 ubox
16 27 0.014926150 ubox
16 37 0.003435084 ubox
16 45 0.051552347 ubox
16 48 0.023074160 ubox
16 54 0.035783760 ubox
16 57 0.371707529 ubox
16 59 0.005204004 ubox
16 67 0.317930916 ubox
17 22 0.145601351 ubox
17 24 0.020251809 ubox
17 47 0.064008469 ubox
17 53 0.030740297 ubox
17 56 0.371418139 ubox
17 58 0.004294213 ubox
17 69 0.318173524 ubox
18 46 0.065795750 ubox
18 47 0.020678108 ubox
18 52 0.023323059 ubox
18 53 0.003314209 ubox
18 55 0.372287737 ubox
18 68 0.321023907 ubox
18 69 0.453357785 ubox
19 46 0.022058232 ubox
19 53 0.373732132 ubox
19 68 0.459230560 ubox
20 52 0.374333584 ubox
20 63 0.316886138 ubox
21 43 0.079561931 ubox
21 44 0.025379288 ubox
21 49 0.005161384 ubox
21 50 0.004746239 ubox
21 51 0.374220117 ubox
21 62 0.318695090 ubox
21 65 0.299445879 ubox
21 66 0.032008028 ubox
21 67 0.489357533 ubox
22 42 0.093921926 ubox
22 43 0.024582044 ubox
22 48 0.005737880 ubox
22 49 0.005212855 ubox
22 50 0.374086619 ubox
22 59 0.011990118 ubox
22 61 0.319169342 ubox
22 64 0.301634137 ubox
22 65 0.035246123 ubox
22 66 0.496475028 ubox
23 31 0.004279784 ubox
23 41 0.095703578 ubox
23 46 0.012655261 ubox
23 58 0.013248075 ubox
23 60 0.319110814 ubox
23 63 0.289282779 ubox
24 30 0.004406729 ubox
24 40 0.095640722 ubox
24 42 0.009012859 ubox
24 45 0.012605463 ubox
24 48 0.373390259 ubox
24 57 0.013437238 ubox
24 59 0.318176744 ubox
24 61 0.087134999 ubox
24 62 0.275908639 ubox
24 64 0.452207096 ubox
25 29 0.005355115 ubox
25 39 0.077673687 ubox
25 41 0.008541891 ubox
25 47 0.372112202 ubox
25 53 0.003609318 ubox
25 56 0.014418861 ubox
25 58 0.304170635 ubox
25 60 0.118611996 ubox
25 63 0.177083122 ubox
25 69 0.066273574 ubox
26 38 0.055037016 ubox
26 39 0.131761000 ubox
26 46 0.358727369 ubox
26 47 0.012858389 ubox
26 52 0.005653921 ubox
26 53 0.280398617 ubox
26 55 0.017041288 ubox
26 56 0.019085779 ubox
26 68 0.066731536 ubox
26 69 0.008173677 ubox
27 35 0.004673910 ubox
27 38 0.262344353 ubox
27 41 0.016272797 ubox
27 46 0.017995160 ubox
27 52 0.281974165 ubox
27 55 0.018587159 ubox
27 58 0.137350849 ubox
27 60 0.249307680 ubox
27 63 0.747574141 ubox
27 68 0.007907838 ubox
28 34 0.004824232 ubox
28 37 0.268349531 ubox
28 40 0.016310276 ubox
28 43 0.282803181 ubox
28 45 0.021031959 ubox
28 49 0.003777601 ubox
28 50 0.007568000 ubox
28 51 0.282646276 ubox
28 57 0.140570173 ubox
28 59 0.179738711 ubox
28 62 0.792751151 ubox
29 36 0.268231367 ubox
29 40 0.005649486 ubox
29 42 0.282997728 ubox
29 48 0.003821058 ubox
29 49 0.008253387 ubox
29 50 0.282569255 ubox
29 57 0.041366894 ubox
29 59 0.207319221 ubox
29 61 0.793588593 ubox
30 35 0.173763831 ubox
30 38 0.042672859 ubox
30 39 0.006009841 ubox
30 41 0.257723620 ubox
30 55 0.012784752 ubox
30 56 0.020878171 ubox
30 58 0.287449408 ubox
30 60 0.796163466 ubox
30 68 0.053677204 ubox
31 37 0.042792329 ubox
31 40 0.224748543 ubox
31 42 0.018859098 ubox
31 48 0.264636993 ubox
31 54 0.012046760 ubox
31 57 0.284191354 ubox
31 59 0.783219830 ubox
31 67 0.053359680 ubox
32 39 0.217001724 ubox
32 41 0.018810955 ubox
32 47 0.139781702 ubox
32 56 0.200587414 ubox
33 39 0.130436270 ubox
33 47 0.039233977 ubox
33 56 0.835453000 ubox
34 38 0.133264753 ubox
34 46 0.046834071 ubox
34 55 0.865092005 ubox
34 68 0.032374174 ubox
35 40 0.004592889 ubox
35 45 0.045805937 ubox
35 48 0.068238690 ubox
35 54 0.865009218 ubox
35 64 0.004703522 ubox
35 67 0.031003033 ubox
36 41 0.004427530 ubox
36 47 0.256532265 ubox
36 53 0.865119703 ubox
36 63 0.004767900 ubox
36 69 0.003845193 ubox
37 46 0.294740444 ubox
37 52 0.864747300 ubox
37 58 0.004840320 ubox
37 63 0.091811980 ubox
37 68 0.003714695 ubox
38 45 0.295065851 ubox
38 49 0.005557786 ubox
38 50 0.016231254 ubox
38 51 0.864873083 ubox
38 57 0.005206167 ubox
38 62 0.094048180 ubox
39 44 0.292620541 ubox
39 48 0.008264393 ubox
39 49 0.021864487 ubox
39 50 0.862725333 ubox
39 61 0.094177543 ubox
40 46 0.079794728 ubox
40 47 0.018146614 ubox
40 55 0.056868391 ubox
40 58 0.004711162 ubox
40 60 0.094866487 ubox
41 45 0.074761729 ubox
41 48 0.805847924 ubox
41 54 0.056966428 ubox
41 57 0.004866224 ubox
41 59 0.094834173 ubox
42 47 0.508488630 ubox
42 53 0.056578158 ubox
42 56 0.005086419 ubox
42 58 0.094965883 ubox
43 52 0.051554503 ubox
43 53 0.009004180 ubox
43 55 0.005107728 ubox
44 52 0.010959331 ubox
44 56 0.094861249 ubox
45 52 0.014327606 ubox
45 55 0.095080300 ubox
45 58 0.007417520 ubox
45 60 0.003381385 ubox
46 51 0.016620742 ubox
46 57 0.007732479 ubox
46 59 0.003383998 ubox
47 54 0.091903822 ubox
47 57 0.005112564 ubox
48 53 0.092116029 ubox
48 56 0.010412025 ubox
48 69 0.041508329 ubox
49 55 0.010912986 ubox
49 56 0.008822590 ubox
49 68 0.042196990 ubox
49 69 0.017427049 ubox
50 55 0.009293694 ubox
50 68 0.017101931 ubox
50 69 0.092430500 ubox
51 68 0.093611675 ubox
52 65 0.044893064 ubox
52 67 0.093514913 ubox
53 64 0.047854027 ubox
53 65 0.003294110 ubox
53 66 0.093031259 ubox
54 63 0.049429101 ubox
55 62 0.049623487 ubox
55 65 0.092992669 ubox
55 66 0.003399952 ubox
56 61 0.046425036 ubox
56 64 0.092753273 ubox
56 65 0.003442484 ubox
57 63 0.092264057 ubox
58 62 0.091904227 ubox
58 64 0.007627665 ubox
59 63 0.004815427 ubox
61 69 0.096989285 ubox
62 68 0.097676738 ubox
63 67 0.088001576 ubox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 66 0.9500000 lbox
8 65 0.9500000 lbox
9 64 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
