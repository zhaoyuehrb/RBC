%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUUUAGAUUUUGCAAACCUGUGCAUUGAUGAGAGUGCUAUUGAAACACAUUAAGAAAGAUUUUCAACGCAGGAAUGUGUCAUUUCCUUUCUUCAUGUACCAGAUGCUGAAAUACUAUGAGAUAAAGAUUUUAGGUUUCAAUUGUAAAGAGAGAGAAGUGGAUAAAUCAGUGCUGCUUUCUUUAGGACGAAAGAAGU\
) } def
/len { sequence length } bind def

/coor [
[69.82031250 337.75122070]
[55.55342102 342.38327026]
[40.57256317 341.62573242]
[26.84572029 335.57809448]
[16.17613411 325.03485107]
[9.96543217 311.38101196]
[9.02949047 296.41024780]
[13.49125957 282.08920288]
[22.76461220 270.29916382]
[35.63134766 262.58895874]
[50.40120316 259.97146606]
[65.13391876 262.79049683]
[77.89411926 270.67575073]
[87.00437927 282.58911133]
[85.11498260 267.70855713]
[83.22558594 252.82803345]
[74.05077362 264.69491577]
[59.42351913 268.01809692]
[46.02191162 261.28036499]
[39.96446609 247.55784607]
[44.01670837 233.11557007]
[56.32858658 224.54716492]
[71.27910614 225.76454163]
[82.04326630 236.21327209]
[81.80647278 221.21513367]
[81.56967926 206.21701050]
[81.33288574 191.21887207]
[81.09609222 176.22074890]
[80.85929871 161.22261047]
[80.62250519 146.22448730]
[80.38571167 131.22634888]
[69.57188416 120.83110809]
[54.57608795 121.18627930]
[39.58029556 121.54145813]
[24.58449936 121.89662933]
[9.58870506 122.25180054]
[-5.40708876 122.60697174]
[-13.17943668 137.19563293]
[-27.16668129 145.82702637]
[-43.50397110 146.22740173]
[-57.73282242 138.38214111]
[-66.01785278 124.51400757]
[-81.00617218 125.10586548]
[-95.99449158 125.69771576]
[-110.98281097 126.28957367]
[-121.52305603 138.06576538]
[-137.30755615 138.85629272]
[-148.97166443 128.19212341]
[-149.59524536 112.40014648]
[-138.80836487 100.84944153]
[-123.01067352 100.39285278]
[-111.57466888 111.30125427]
[-96.58634949 110.70939636]
[-81.59803009 110.11754608]
[-66.60971069 109.52568817]
[-61.06077957 97.04091644]
[-50.62254715 88.12373352]
[-37.29638672 84.55889130]
[-23.66995621 87.09765625]
[-12.41472721 95.30033875]
[-5.76226091 107.61117554]
[9.23353386 107.25600433]
[24.22932816 106.90083313]
[39.22512436 106.54566193]
[54.22091675 106.19049072]
[69.21671295 105.83531952]
[70.49811554 89.10116577]
[80.25472260 75.36705017]
[69.60634613 64.80239868]
[58.95796204 54.23773575]
[48.30958176 43.67308044]
[37.66120148 33.10842133]
[21.67486954 29.45203400]
[17.10747910 13.70176411]
[28.65756989 2.06014061]
[44.44340134 6.50306654]
[48.22586060 22.46004105]
[58.87424088 33.02470016]
[69.52262115 43.58935547]
[80.17100525 54.15401459]
[90.81938171 64.71867371]
[105.80255890 64.00852966]
[115.40400696 52.48410797]
[125.00544739 40.95968628]
[134.60688782 29.43526459]
[144.20834351 17.91084290]
[153.80978394 6.38642120]
[163.31996155 -5.21342850]
[172.73828125 -16.88798523]
[182.15660095 -28.56254005]
[191.57492065 -40.23709488]
[200.99324036 -51.91165161]
[210.41156006 -63.58620834]
[219.82987976 -75.26076508]
[222.47286987 -90.85964966]
[236.48614502 -95.90717316]
[245.90446472 -107.58172607]
[255.32278442 -119.25628662]
[249.91104126 -133.56224060]
[252.37037659 -148.55718994]
[261.94146729 -160.23025513]
[275.97644043 -165.50997925]
[290.67074585 -163.07214355]
[300.08905029 -174.74670410]
[309.50738525 -186.42124939]
[318.92568970 -198.09580994]
[321.88259888 -206.74902344]
[328.58599854 -209.87878418]
[338.18746948 -221.40321350]
[347.78890991 -232.92762756]
[357.39035034 -244.45205688]
[366.99179077 -255.97647095]
[376.59323120 -267.50088501]
[386.19467163 -279.02529907]
[389.28781128 -287.63076782]
[396.03979492 -290.65432739]
[405.82196045 -302.02572632]
[401.32403564 -316.78283691]
[405.54040527 -331.62283325]
[417.12567139 -341.81036377]
[432.38299561 -344.09457397]
[446.44381714 -337.74661255]
[454.82141113 -324.79208374]
[454.84246826 -309.36474609]
[446.50030518 -296.38739014]
[432.45687866 -290.00103760]
[417.19338989 -292.24356079]
[407.41119385 -280.87213135]
[397.71908569 -269.42385864]
[388.11764526 -257.89944458]
[378.51620483 -246.37503052]
[368.91476440 -234.85060120]
[359.31332397 -223.32618713]
[349.71188354 -211.80175781]
[340.11044312 -200.27734375]
[330.60025024 -188.67749023]
[321.18194580 -177.00292969]
[311.76361084 -165.32838440]
[302.34530640 -153.65382385]
[307.83602905 -139.80761719]
[305.64434814 -124.97344971]
[296.25979614 -113.14989471]
[282.12426758 -107.57456970]
[266.99734497 -109.83796692]
[257.57901001 -98.16340637]
[248.16069031 -86.48885345]
[246.19136047 -71.72501373]
[231.50442505 -65.84244537]
[222.08610535 -54.16788864]
[212.66778564 -42.49333191]
[203.24946594 -30.81877708]
[193.83114624 -19.14422035]
[184.41282654 -7.46966505]
[174.99450684 4.20489120]
[173.23974609 11.39181805]
[165.33419800 15.98786449]
[155.73275757 27.51228523]
[146.13131714 39.03670883]
[136.52987671 50.56112671]
[126.92842865 62.08554840]
[117.32698059 73.60997009]
[127.06958008 83.83248901]
[131.37135315 97.26419830]
[129.38526917 111.20945740]
[121.52456665 122.87664795]
[109.37693787 129.93704224]
[95.38384247 130.98956299]
[95.62063599 145.98768616]
[95.85742950 160.98582458]
[96.09422302 175.98394775]
[96.33101654 190.98208618]
[96.56781006 205.98020935]
[96.80460358 220.97834778]
[97.04139709 235.97647095]
[98.10611725 250.93864441]
[99.99551392 265.81918335]
[101.88491058 280.69970703]
[105.51884460 295.25286865]
[110.84643555 309.27487183]
[116.17401886 323.29687500]
[121.50160980 337.31890869]
[126.82920074 351.34091187]
[132.15678406 365.36291504]
[137.48437500 379.38491821]
[152.00114441 385.63302612]
[157.77027893 400.34671021]
[151.36904907 414.79663086]
[136.59518433 420.40988159]
[122.21376801 413.85623169]
[116.75703430 399.02383423]
[123.46236420 384.71252441]
[118.13477325 370.69052124]
[112.80718231 356.66848755]
[107.47959900 342.64648438]
[102.15200806 328.62448120]
[96.82442474 314.60247803]
[91.49683380 300.58044434]
[89.05544281 315.38043213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 177]
[15 176]
[16 175]
[24 174]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[32 66]
[33 65]
[34 64]
[35 63]
[36 62]
[37 61]
[42 55]
[43 54]
[44 53]
[45 52]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
[82 161]
[83 160]
[84 159]
[85 158]
[86 157]
[87 156]
[88 154]
[89 153]
[90 152]
[91 151]
[92 150]
[93 149]
[94 148]
[96 146]
[97 145]
[98 144]
[103 139]
[104 138]
[105 137]
[106 136]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[113 130]
[114 129]
[116 128]
[117 127]
[178 197]
[179 196]
[180 195]
[181 194]
[182 193]
[183 192]
[184 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
