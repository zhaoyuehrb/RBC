%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FEZ2)
} def

/sequence { (\
GCGGGCUGGGCCGGCCUGGGCGGGGCGCGCGACUGCUCCGGGCGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.015170785 ubox
1 15 0.040956514 ubox
1 21 0.007479483 ubox
1 30 0.263015099 ubox
1 43 0.012386528 ubox
1 46 0.099847243 ubox
2 8 0.120639680 ubox
2 10 0.016055995 ubox
2 13 0.200029882 ubox
2 14 0.041762988 ubox
2 18 0.082749599 ubox
2 20 0.007335959 ubox
2 29 0.263792929 ubox
2 40 0.005721347 ubox
2 42 0.011851926 ubox
2 44 0.006655859 ubox
2 45 0.099259257 ubox
2 47 0.013146702 ubox
3 7 0.075073627 ubox
3 12 0.203543717 ubox
3 17 0.085644135 ubox
3 28 0.263764076 ubox
3 39 0.006041292 ubox
3 43 0.003208315 ubox
3 46 0.011799615 ubox
4 11 0.201952014 ubox
4 12 0.136314421 ubox
4 16 0.086129283 ubox
4 38 0.006020149 ubox
5 11 0.138630350 ubox
5 15 0.086142485 ubox
5 26 0.263794666 ubox
5 36 0.006622080 ubox
5 43 0.013695698 ubox
5 46 0.017009063 ubox
6 10 0.139760892 ubox
6 14 0.086143531 ubox
6 24 0.010910890 ubox
6 25 0.263569734 ubox
6 35 0.006650622 ubox
6 41 0.008374171 ubox
6 42 0.013497190 ubox
6 45 0.016872081 ubox
7 13 0.085835147 ubox
7 23 0.015016462 ubox
7 24 0.248674530 ubox
7 40 0.008692864 ubox
7 41 0.013135710 ubox
7 44 0.016579766 ubox
7 47 0.013102825 ubox
8 12 0.081790027 ubox
8 39 0.008975153 ubox
8 43 0.010147328 ubox
8 46 0.006960916 ubox
9 38 0.008954560 ubox
9 39 0.011976863 ubox
10 21 0.262602623 ubox
10 30 0.006781263 ubox
10 36 0.006568465 ubox
10 37 0.005479908 ubox
10 38 0.011788597 ubox
10 46 0.927553854 ubox
11 19 0.012144963 ubox
11 20 0.263102730 ubox
11 23 0.014182281 ubox
11 24 0.009086755 ubox
11 29 0.006751568 ubox
11 35 0.006270827 ubox
11 41 0.008116359 ubox
11 45 0.928425325 ubox
12 18 0.013450845 ubox
12 19 0.262987393 ubox
12 22 0.014186337 ubox
12 23 0.009383126 ubox
12 27 0.005311379 ubox
12 29 0.005677024 ubox
12 35 0.007042650 ubox
12 40 0.008129369 ubox
12 44 0.927007772 ubox
12 47 0.004122617 ubox
13 17 0.009035339 ubox
13 21 0.013354602 ubox
13 26 0.005404961 ubox
13 28 0.005777235 ubox
13 34 0.007365173 ubox
13 37 0.010256234 ubox
13 39 0.008079775 ubox
13 43 0.714531001 ubox
13 46 0.009591824 ubox
14 21 0.010795207 ubox
14 26 0.008476895 ubox
14 33 0.007354522 ubox
14 36 0.011156285 ubox
14 38 0.007547787 ubox
14 43 0.637250129 ubox
14 46 0.060216895 ubox
15 20 0.011755839 ubox
15 24 0.005356316 ubox
15 25 0.008555908 ubox
15 35 0.011194449 ubox
15 41 0.401911883 ubox
15 42 0.868954757 ubox
15 45 0.060045935 ubox
16 23 0.005366616 ubox
16 24 0.008562562 ubox
16 40 0.401121375 ubox
16 41 0.869289257 ubox
16 44 0.059751183 ubox
16 45 0.038951757 ubox
17 22 0.005025825 ubox
17 23 0.008487240 ubox
17 31 0.010676097 ubox
17 40 0.867597878 ubox
17 44 0.039927209 ubox
18 30 0.011783370 ubox
18 38 0.394334744 ubox
18 39 0.870251201 ubox
18 43 0.052499859 ubox
18 46 0.003620880 ubox
19 37 0.402577342 ubox
19 38 0.866873710 ubox
20 26 0.004819082 ubox
20 28 0.022297134 ubox
20 30 0.024707863 ubox
20 36 0.949323421 ubox
20 37 0.106359176 ubox
20 43 0.024660778 ubox
20 46 0.011652970 ubox
21 25 0.004796366 ubox
21 27 0.022332566 ubox
21 29 0.024893726 ubox
21 31 0.003949677 ubox
21 35 0.954197483 ubox
21 40 0.115879295 ubox
21 42 0.022699249 ubox
21 45 0.011090501 ubox
21 47 0.003386085 ubox
22 26 0.020899234 ubox
22 28 0.024958490 ubox
22 30 0.005103274 ubox
22 34 0.948895497 ubox
22 39 0.124405254 ubox
22 46 0.003682996 ubox
23 33 0.944899697 ubox
23 34 0.100557754 ubox
23 38 0.124657949 ubox
23 39 0.005268358 ubox
24 33 0.136031857 ubox
24 34 0.009883807 ubox
24 37 0.126355665 ubox
24 38 0.005279083 ubox
24 39 0.006262126 ubox
25 33 0.011849725 ubox
25 36 0.127167499 ubox
25 37 0.004124857 ubox
25 38 0.006276857 ubox
25 43 0.006488254 ubox
25 46 0.007556607 ubox
26 35 0.127165543 ubox
26 42 0.006501198 ubox
26 44 0.009657833 ubox
26 45 0.005685633 ubox
27 34 0.096875993 ubox
27 36 0.010992584 ubox
27 43 0.011039372 ubox
28 35 0.011025441 ubox
28 40 0.006499727 ubox
28 42 0.011046991 ubox
29 34 0.007700144 ubox
29 36 0.017802582 ubox
29 39 0.006467363 ubox
30 35 0.017804583 ubox
30 40 0.011039312 ubox
30 47 0.019176676 ubox
31 38 0.006901406 ubox
31 39 0.010845584 ubox
31 43 0.004400683 ubox
31 46 0.185408953 ubox
32 37 0.006469526 ubox
33 41 0.005975472 ubox
33 42 0.003894892 ubox
33 45 0.261446655 ubox
34 40 0.005987353 ubox
34 41 0.003852796 ubox
34 44 0.262093717 ubox
34 47 0.015760084 ubox
35 39 0.005718419 ubox
35 43 0.262712443 ubox
35 46 0.028411420 ubox
36 42 0.262647603 ubox
36 45 0.028397696 ubox
37 41 0.236614905 ubox
37 44 0.026258056 ubox
38 44 0.005702565 ubox
38 45 0.004724697 ubox
39 44 0.004961667 ubox
39 47 0.003231388 ubox
40 46 0.004324294 ubox
10 46 0.9500000 lbox
11 45 0.9500000 lbox
12 44 0.9500000 lbox
13 43 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 36 0.9500000 lbox
21 35 0.9500000 lbox
22 34 0.9500000 lbox
23 33 0.9500000 lbox
showpage
end
%%EOF
