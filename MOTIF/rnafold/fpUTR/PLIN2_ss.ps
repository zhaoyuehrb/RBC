%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGGGUGACACUCGGGCUUGGGACAGGGCGUGCUGCCGCGGGUCACGUGCUGCGGAGGCUUGGGGAGGGGCGGCGAGGCGGGGUUUAUAGCCCGGGCGCCCGCGGGCCCCACGCUUUGACCGGGUCGUGGCAGCCGGAGUCGUCUUCGGGACGCGCCUGCUCUUCGCCUUUCGCUGCAGUCCGUCGAUUUCUUUCUCCAGGAAGAAAA\
) } def
/len { sequence length } bind def

/coor [
[90.04239655 140.26528931]
[86.07030487 154.72982788]
[82.09820557 169.19435120]
[78.12611389 183.65887451]
[74.15401459 198.12339783]
[83.19197845 210.88462830]
[81.86118317 226.46548462]
[70.78998566 237.50915527]
[55.20586395 238.80114746]
[42.46717072 229.73143005]
[38.58872223 214.58245850]
[45.40180588 200.50709534]
[59.68949127 194.15129089]
[63.66158676 179.68676758]
[67.63368225 165.22224426]
[71.60578156 150.75772095]
[75.57787323 136.29319763]
[63.22336578 127.78637695]
[51.12761307 136.65727234]
[39.03186417 145.52816772]
[26.93611145 154.39906311]
[14.84035873 163.26995850]
[2.81098127 172.23065186]
[-9.15135574 181.28065491]
[-14.10704708 188.95391846]
[-21.35983849 190.37475586]
[-33.45558929 199.24565125]
[-45.55134201 208.11654663]
[-47.70590591 223.77328491]
[-60.35069275 233.25405884]
[-75.98377228 230.93408203]
[-85.33032227 218.18975830]
[-82.84519196 202.58207703]
[-70.00276947 193.37080383]
[-54.42223740 196.02079773]
[-42.32648468 187.14990234]
[-30.23073387 178.27900696]
[-18.20135498 169.31831360]
[-6.23901892 160.26831055]
[-2.80134296 153.72583008]
[5.96946335 151.17420959]
[18.06521606 142.30331421]
[30.16096687 133.43241882]
[42.25671768 124.56151581]
[54.35247040 115.69062042]
[70.27635956 78.11293793]
[100.75900269 74.45508575]
[105.58499908 60.25262833]
[110.41099548 46.05017090]
[107.52506256 30.49440384]
[118.94575500 20.93318367]
[123.77175140 6.73072720]
[128.59774780 -7.47172832]
[133.42375183 -21.67418480]
[138.24974060 -35.87664032]
[143.07574463 -50.07909393]
[147.90174866 -64.28154755]
[145.01580811 -79.83731842]
[156.43650818 -89.39854431]
[161.26249695 -103.60099792]
[153.95783997 -114.91720581]
[154.49652100 -128.18069458]
[162.45799255 -138.55841064]
[174.75788879 -142.39796448]
[179.79479980 -156.52699280]
[177.14079285 -172.12399292]
[188.70257568 -181.51412964]
[193.73948669 -195.64315796]
[198.77641296 -209.77218628]
[203.81332397 -223.90121460]
[208.85023499 -238.03024292]
[213.88716125 -252.15927124]
[218.92407227 -266.28829956]
[207.65371704 -289.13333130]
[204.54960632 -303.80862427]
[201.33633423 -318.46041870]
[198.01406860 -333.08786011]
[194.69181824 -347.71533203]
[191.36955261 -362.34280396]
[188.04730225 -376.97024536]
[184.72503662 -391.59771729]
[181.40277100 -406.22515869]
[177.97171021 -420.82748413]
[174.43203735 -435.40386963]
[170.89237976 -449.98025513]
[162.18363953 -437.76721191]
[147.41313171 -435.15341187]
[135.04205322 -443.63613892]
[132.15713501 -458.35610962]
[140.41098022 -470.88104248]
[155.07540894 -474.03610229]
[167.74943542 -466.01467896]
[165.52430725 -480.84872437]
[163.29919434 -495.68276978]
[161.07408142 -510.51681519]
[158.84896851 -525.35089111]
[156.51347351 -540.16790771]
[154.06774902 -554.96722412]
[145.51977539 -569.60852051]
[157.22259521 -581.87554932]
[172.24989319 -574.02593994]
[168.86701965 -557.41290283]
[171.31274414 -542.61364746]
[175.50477600 -536.52691650]
[173.68301392 -527.57598877]
[175.90812683 -512.74194336]
[178.13323975 -497.90789795]
[180.35835266 -483.07385254]
[182.58348083 -468.23980713]
[185.46875000 -453.51992798]
[189.00842285 -438.94354248]
[192.54809570 -424.36715698]
[197.18122864 -418.60906982]
[196.03024292 -409.54742432]
[199.35249329 -394.91998291]
[202.67475891 -380.29251099]
[205.99702454 -365.66503906]
[209.31927490 -351.03759766]
[212.64154053 -336.41012573]
[215.96379089 -321.78268433]
[220.51068115 -315.95620728]
[219.22491455 -306.91271973]
[222.32902527 -292.23742676]
[235.90522766 -285.85882568]
[249.18307495 -292.83728027]
[262.46090698 -299.81573486]
[268.60140991 -306.57827759]
[275.98880005 -306.79757690]
[289.36907959 -313.57757568]
[302.74935913 -320.35754395]
[316.12963867 -327.13754272]
[317.55871582 -338.93984985]
[324.43716431 -348.48907471]
[334.96231079 -353.48059082]
[346.46981812 -352.77886963]
[356.10794067 -346.67367554]
[369.68414307 -353.05227661]
[383.26034546 -359.43090820]
[396.83654785 -365.80950928]
[410.41275024 -372.18811035]
[423.98895264 -378.56671143]
[432.90698242 -392.32901001]
[449.26837158 -391.21685791]
[456.24194336 -376.37429810]
[446.65386963 -363.07012939]
[430.36755371 -364.99050903]
[416.79135132 -358.61190796]
[403.21514893 -352.23330688]
[389.63894653 -345.85467529]
[376.06274414 -339.47607422]
[362.48654175 -333.09747314]
[357.32305908 -315.53460693]
[340.67630005 -307.18008423]
[322.90963745 -313.75726318]
[309.52935791 -306.97726440]
[296.14907837 -300.19729614]
[282.76879883 -293.41729736]
[269.43936157 -286.53787231]
[256.16152954 -279.55941772]
[242.88368225 -272.58099365]
[233.05310059 -261.25137329]
[228.01618958 -247.12236023]
[222.97926331 -232.99333191]
[217.94235229 -218.86430359]
[212.90544128 -204.73526001]
[207.86851501 -190.60623169]
[202.83160400 -176.47720337]
[205.84588623 -161.89079285]
[193.92382812 -151.49006653]
[188.88691711 -137.36103821]
[196.73780823 -122.48817444]
[191.29566956 -106.21862793]
[175.46495056 -98.77500153]
[170.63896179 -84.57254028]
[173.87008667 -70.03263092]
[162.10420227 -59.45555496]
[157.27819824 -45.25309753]
[152.45220947 -31.05064201]
[147.62620544 -16.84818649]
[142.80020142 -2.64573097]
[137.97421265 11.55672455]
[133.14820862 25.75918007]
[136.37933350 40.29909515]
[124.61345673 50.87617111]
[119.78745270 65.07862854]
[114.96145630 79.28108215]
[127.21640778 84.67505646]
[136.79370117 97.04002380]
[139.97523499 114.69538879]
[134.15065002 134.11195374]
[139.18756104 148.24098206]
[144.22448730 162.37001038]
[149.26139832 176.49905396]
[154.29830933 190.62808228]
[159.33523560 204.75711060]
[164.37214661 218.88613892]
[169.40905762 233.01516724]
[182.24523926 243.22126770]
[179.55731201 259.39862061]
[164.11036682 264.90536499]
[151.79492188 254.07662964]
[155.28002930 238.05207825]
[150.24311829 223.92304993]
[145.20620728 209.79402161]
[140.16928101 195.66499329]
[135.13237000 181.53596497]
[130.09545898 167.40693665]
[125.05853271 153.27790833]
[120.02162170 139.14888000]
[112.52681732 139.42797852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[23 39]
[24 38]
[26 37]
[27 36]
[28 35]
[47 186]
[48 185]
[49 184]
[51 182]
[52 181]
[53 180]
[54 179]
[55 178]
[56 177]
[57 176]
[59 174]
[60 173]
[64 170]
[65 169]
[67 167]
[68 166]
[69 165]
[70 164]
[71 163]
[72 162]
[73 161]
[74 123]
[75 122]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[83 112]
[84 111]
[85 110]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[97 103]
[98 102]
[124 160]
[125 159]
[126 158]
[128 157]
[129 156]
[130 155]
[131 154]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
[190 209]
[191 208]
[192 207]
[193 206]
[194 205]
[195 204]
[196 203]
[197 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
