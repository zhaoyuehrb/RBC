%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:48:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCCAGGGAGGAGGAGGGAGAACAGUUCGGGCUGCCAGGAUGUUGUUUGGAGGGGGAACUCCUCAGCGGGCCAAAGUCUAUGACCUCAGAGAGGCAACCUCAUGAACAGAGCUUUCAGAACAUCUGGAAAGUUCCAUUGUUGGUGUCAUCCCCAUUAUGCUAUAAGGAAGUGUGAAUUUCAGACCAACUGGAUAGGAGAGGCACAUCCCUGGAGAAGCUGAAAGCUCUUUAUUCAUUUUAAAAAAAUAGCUA\
CAAUUAGAGUGGACACC\
) } def
/len { sequence length } bind def

/coor [
[158.71553040 250.54663086]
[158.81634521 241.12086487]
[161.14941406 232.23635864]
[165.46195984 224.39932251]
[171.39215088 218.02697754]
[162.94235229 205.63340759]
[154.49255371 193.23982239]
[146.04275513 180.84623718]
[137.59295654 168.45265198]
[129.14315796 156.05908203]
[120.69335175 143.66549683]
[112.24355316 131.27191162]
[90.10115051 132.09127808]
[72.26780701 118.94103241]
[58.30470276 124.42114258]
[44.34159470 129.90126038]
[30.37848854 135.38137817]
[27.99735832 150.49023438]
[18.43647766 162.30065918]
[4.34137440 167.70385742]
[-10.46668243 165.34219360]
[-22.02654457 155.94883728]
[-35.98965073 161.42895508]
[-49.95275879 166.90907288]
[-52.48134995 178.48045349]
[-60.18954086 187.31530762]
[-71.08660126 191.30708313]
[-82.44122314 189.57785034]
[-91.46598816 182.66860962]
[-105.55151367 187.82594299]
[-112.50264740 193.69372559]
[-119.82891083 192.96054077]
[-133.97285461 197.95544434]
[-144.40896606 209.84654236]
[-158.98634338 206.78890991]
[-173.13029480 211.78379822]
[-187.27423096 216.77870178]
[-201.41816711 221.77359009]
[-213.08439636 236.04270935]
[-230.20420837 232.11477661]
[-244.28973389 237.27209473]
[-258.37527466 242.42942810]
[-272.46078491 247.58674622]
[-279.41192627 253.45452881]
[-286.73818970 252.72135925]
[-300.88211060 257.71624756]
[-315.02606201 262.71115112]
[-325.46218872 274.60223389]
[-340.03955078 271.54461670]
[-354.18350220 276.53952026]
[-368.32742310 281.53442383]
[-378.57165527 294.34020996]
[-394.74093628 291.60418701]
[-400.20175171 276.14096069]
[-389.33645630 263.85775757]
[-373.32232666 267.39047241]
[-359.17840576 262.39556885]
[-345.03445435 257.40066528]
[-335.61001587 245.86685181]
[-320.02096558 248.56721497]
[-305.87701416 243.57232666]
[-291.73306274 238.57742310]
[-277.61810303 233.50123596]
[-263.53259277 228.34390259]
[-249.44706726 223.18656921]
[-235.36154175 218.02925110]
[-230.00370789 207.20980835]
[-218.34098816 202.78561401]
[-206.41307068 207.62965393]
[-192.26911926 202.63476562]
[-178.12518311 197.63986206]
[-163.98124695 192.64495850]
[-154.55679321 181.11114502]
[-138.96774292 183.81150818]
[-124.82380676 178.81660461]
[-110.70883942 173.74041748]
[-96.62332153 168.58308411]
[-89.89904785 151.52816772]
[-72.53177643 144.72253418]
[-55.43287277 152.94595337]
[-41.46976471 147.46585083]
[-27.50666046 141.98573303]
[-25.42178726 127.23720551]
[-16.17304802 115.43395233]
[-2.16550636 109.80766296]
[12.87625027 111.96228027]
[24.89837456 121.41826630]
[38.86148071 115.93815613]
[52.82458496 110.45803833]
[66.78768921 104.97792053]
[63.69733047 101.31632233]
[61.04386902 97.02237701]
[58.93014526 92.15179443]
[57.45158768 86.77534485]
[46.05390930 77.02378082]
[34.65623474 67.27222443]
[23.25855637 57.52066040]
[7.29251766 51.81785583]
[8.35261345 34.89708710]
[24.90557861 31.23161697]
[33.01011658 46.12298203]
[44.40779495 55.87454605]
[55.80547333 65.62610626]
[67.20314789 75.37767029]
[73.58778381 71.44238281]
[73.15599060 56.44860077]
[86.35704803 63.57181549]
[92.74168396 59.63653183]
[89.15194702 45.07240677]
[85.56221008 30.50827789]
[81.97248077 15.94415092]
[78.13188934 1.44415462]
[74.04159546 -12.98739052]
[69.95130157 -27.41893578]
[65.86100769 -41.85048294]
[61.77071762 -56.28202820]
[57.68042374 -70.71356964]
[53.59012985 -85.14511871]
[49.49983597 -99.57666016]
[45.32657623 -113.98443604]
[41.07048416 -128.36795044]
[36.81439209 -142.75148010]
[26.52235985 -156.22406006]
[36.61930847 -169.84346008]
[52.50156784 -163.91131592]
[51.19791031 -147.00756836]
[55.45400620 -132.62405396]
[59.71009827 -118.24052429]
[64.60318756 -112.73876953]
[63.93138123 -103.66695404]
[68.02167511 -89.23541260]
[72.11196899 -74.80386353]
[76.20226288 -60.37231827]
[80.29255676 -45.94077301]
[84.38285065 -31.50922966]
[88.47314453 -17.07768440]
[92.56343842 -2.64613891]
[95.40993500 -0.62465805]
[97.43404388 2.85900807]
[97.96659851 7.41044569]
[96.53660583 12.35441589]
[100.12634277 26.91854286]
[103.71607208 41.48266983]
[107.30580902 56.04679871]
[116.28883362 64.48773956]
[121.51626587 74.21459198]
[133.45585632 65.13460541]
[145.39546204 56.05462646]
[157.33505249 46.97464371]
[169.27464294 37.89466095]
[174.18739319 30.23868752]
[181.40428162 28.77983093]
[193.44757080 19.83784485]
[199.91508484 5.39894247]
[214.74609375 4.02397299]
[226.78938293 -4.91801453]
[223.98513794 -26.25511742]
[244.36598206 -44.95529556]
[254.31282043 -56.18295670]
[264.25964355 -67.41061401]
[274.20648193 -78.63827515]
[284.15332031 -89.86593628]
[294.10018921 -101.09359741]
[304.04702759 -112.32126617]
[301.56719971 -127.76097107]
[309.63635254 -141.15585327]
[324.44442749 -146.18127441]
[338.99951172 -140.46437073]
[346.42916870 -126.70448303]
[343.22531128 -111.39862823]
[330.90072632 -101.77375031]
[315.27468872 -102.37442017]
[305.32785034 -91.14675903]
[295.38098145 -79.91909790]
[285.43414307 -68.69143677]
[275.48730469 -57.46377945]
[265.54046631 -46.23611450]
[255.59364319 -35.00845337]
[259.92486572 -28.88551140]
[268.58734131 -16.63962555]
[272.91854858 -10.51668262]
[286.81768799 -16.15711403]
[300.71679688 -21.79754639]
[314.61593628 -27.43797684]
[328.51504517 -33.07841110]
[336.06018066 -47.23645782]
[351.85937500 -50.02304077]
[363.79284668 -39.30052948]
[362.70620728 -23.29431534]
[349.43310547 -14.28299999]
[334.15548706 -19.17928886]
[320.25634766 -13.53885841]
[306.35723877 -7.89842606]
[292.45809937 -2.25799465]
[278.55899048 3.38243723]
[263.23941040 14.73418617]
[246.88937378 15.04166412]
[235.73136902 7.12527657]
[223.68807983 16.06726456]
[218.08198547 29.86657524]
[202.38955688 31.88113594]
[190.34626770 40.82312393]
[178.35462952 49.83425522]
[166.41503906 58.91423798]
[154.47543335 67.99422455]
[142.53584290 77.07420349]
[130.59625244 86.15418243]
[133.14839172 105.38713837]
[124.63713074 122.82211304]
[133.08692932 135.21569824]
[141.53672791 147.60926819]
[149.98654175 160.00285339]
[158.43634033 172.39643860]
[166.88613892 184.79002380]
[175.33593750 197.18360901]
[183.78573608 209.57717896]
[207.76860046 205.26795959]
[231.02713013 218.03533936]
[241.95362854 244.57434082]
[255.50538635 251.00473022]
[269.05715942 257.43511963]
[282.60888672 263.86550903]
[299.51080322 265.19305420]
[302.91403198 281.80191040]
[287.89636230 289.66995239]
[276.17849731 277.41726685]
[262.62677002 270.98687744]
[249.07499695 264.55648804]
[235.52323914 258.12609863]
[230.35902405 263.56491089]
[243.89585876 270.02664185]
[241.93331909 284.89770508]
[227.18360901 287.62643433]
[220.03056335 274.44256592]
[214.86634827 279.88137817]
[221.98957825 293.08212280]
[229.11279297 306.28286743]
[236.23602295 319.48361206]
[243.35925293 332.68435669]
[250.48246765 345.88510132]
[257.60571289 359.08584595]
[264.72891235 372.28659058]
[271.85214233 385.48733521]
[278.97537231 398.68807983]
[294.09350586 397.10348511]
[308.66580200 401.42977905]
[320.47009277 411.00717163]
[327.70632935 424.37524414]
[329.27102661 439.49545288]
[324.92559814 454.06204224]
[315.33264160 465.85372925]
[301.95507812 473.07238770]
[286.83282471 474.61718750]
[272.27197266 470.25259399]
[260.49291992 460.64413452]
[253.29187012 447.25708008]
[251.76695251 432.13284302]
[256.15069580 417.57772827]
[265.77462769 405.81130981]
[258.65139771 392.61056519]
[251.52818298 379.40982056]
[244.40495300 366.20907593]
[237.28172302 353.00833130]
[230.15850830 339.80758667]
[223.03527832 326.60684204]
[215.91204834 313.40609741]
[208.78883362 300.20535278]
[201.66560364 287.00460815]
[190.85725403 285.83911133]
[180.88200378 282.16580200]
[172.29769897 276.31384277]
[165.55397034 268.73016357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 216]
[6 215]
[7 214]
[8 213]
[9 212]
[10 211]
[11 210]
[12 209]
[14 90]
[15 89]
[16 88]
[17 87]
[22 82]
[23 81]
[24 80]
[29 77]
[30 76]
[32 75]
[33 74]
[35 72]
[36 71]
[37 70]
[38 69]
[40 66]
[41 65]
[42 64]
[43 63]
[45 62]
[46 61]
[47 60]
[49 58]
[50 57]
[51 56]
[94 104]
[95 103]
[96 102]
[97 101]
[108 144]
[109 143]
[110 142]
[111 141]
[112 137]
[113 136]
[114 135]
[115 134]
[116 133]
[117 132]
[118 131]
[119 130]
[120 128]
[121 127]
[122 126]
[146 207]
[147 206]
[148 205]
[149 204]
[150 203]
[152 202]
[153 201]
[155 199]
[156 198]
[158 178]
[159 177]
[160 176]
[161 175]
[162 174]
[163 173]
[164 172]
[181 195]
[182 194]
[183 193]
[184 192]
[185 191]
[219 229]
[220 228]
[221 227]
[222 226]
[235 268]
[236 267]
[237 266]
[238 265]
[239 264]
[240 263]
[241 262]
[242 261]
[243 260]
[244 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
