%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RASSF5)
} def

/sequence { (\
UCUCUCGGGGCUGGCUCGGGAGUAGCGCAGUCGCCAAAGCCGCCGCUGCCAAAGCUGCCGCCACUAGCCGGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.087015567 ubox
1 9 0.075750955 ubox
1 10 0.080840955 ubox
1 21 0.003213742 ubox
1 71 0.016890466 ubox
1 72 0.068651407 ubox
2 7 0.109709047 ubox
2 8 0.128489224 ubox
2 9 0.118756025 ubox
2 10 0.115952750 ubox
2 13 0.005268365 ubox
2 20 0.003332516 ubox
2 22 0.070577635 ubox
2 67 0.004525556 ubox
2 70 0.021319294 ubox
2 71 0.096771024 ubox
2 72 0.210114959 ubox
3 7 0.116053856 ubox
3 8 0.109769434 ubox
3 9 0.117536185 ubox
3 10 0.030905478 ubox
3 21 0.117076798 ubox
3 66 0.004464707 ubox
3 70 0.093135624 ubox
3 71 0.208915262 ubox
3 72 0.159807244 ubox
4 8 0.117107813 ubox
4 9 0.041977804 ubox
4 10 0.024504637 ubox
4 13 0.010256365 ubox
4 20 0.121013203 ubox
4 67 0.006742611 ubox
4 70 0.210640725 ubox
4 71 0.212997357 ubox
4 72 0.581012628 ubox
5 9 0.022498158 ubox
5 19 0.120963773 ubox
5 66 0.006754899 ubox
5 70 0.197849684 ubox
5 71 0.585845024 ubox
5 72 0.247014978 ubox
6 13 0.010553753 ubox
6 18 0.121091354 ubox
6 70 0.586170913 ubox
6 71 0.329051979 ubox
7 12 0.008114995 ubox
7 17 0.121074479 ubox
7 62 0.019313029 ubox
7 65 0.004572078 ubox
7 69 0.417306411 ubox
8 15 0.005646995 ubox
8 16 0.120842192 ubox
8 61 0.019378377 ubox
8 64 0.005652820 ubox
8 68 0.364187894 ubox
8 69 0.173509740 ubox
9 15 0.120822187 ubox
9 16 0.004120786 ubox
9 32 0.005498997 ubox
9 35 0.012429284 ubox
9 44 0.005209022 ubox
9 59 0.042153351 ubox
9 62 0.049690527 ubox
9 64 0.009700717 ubox
9 65 0.174475397 ubox
9 68 0.136322817 ubox
9 69 0.784167792 ubox
10 15 0.004837519 ubox
10 31 0.005524587 ubox
10 34 0.012444818 ubox
10 43 0.005214715 ubox
10 58 0.042201109 ubox
10 61 0.049716003 ubox
10 64 0.188376771 ubox
10 68 0.818400016 ubox
10 73 0.140476241 ubox
11 30 0.005531243 ubox
11 33 0.012164660 ubox
11 42 0.005097724 ubox
11 57 0.041912659 ubox
11 60 0.049193288 ubox
11 67 0.848640117 ubox
11 71 0.379679196 ubox
11 72 0.116693560 ubox
12 29 0.005539395 ubox
12 57 0.020185711 ubox
12 60 0.006935781 ubox
12 63 0.307063498 ubox
12 66 0.847696611 ubox
12 70 0.389432211 ubox
12 71 0.081954318 ubox
13 28 0.005530038 ubox
13 32 0.012504389 ubox
13 41 0.005856141 ubox
13 50 0.003530052 ubox
13 56 0.054281814 ubox
13 59 0.032292084 ubox
13 62 0.316270469 ubox
13 65 0.846638891 ubox
13 69 0.399215126 ubox
14 26 0.005524112 ubox
14 31 0.012539360 ubox
14 40 0.005860361 ubox
14 49 0.003534465 ubox
14 55 0.056532148 ubox
14 58 0.032263529 ubox
14 61 0.316093455 ubox
14 64 0.845553484 ubox
14 68 0.399324981 ubox
14 73 0.057121949 ubox
15 25 0.005527569 ubox
15 30 0.012547261 ubox
15 39 0.005860273 ubox
15 48 0.003532803 ubox
15 54 0.056552214 ubox
15 57 0.032094388 ubox
15 60 0.288774089 ubox
15 67 0.399316473 ubox
15 72 0.057852740 ubox
16 24 0.005299784 ubox
16 29 0.012504867 ubox
16 38 0.005779215 ubox
16 53 0.055545731 ubox
16 66 0.394285938 ubox
16 71 0.057825204 ubox
17 27 0.012556039 ubox
17 45 0.003517717 ubox
17 57 0.023283247 ubox
17 60 0.357375679 ubox
17 70 0.057864386 ubox
18 26 0.012554408 ubox
18 35 0.003280296 ubox
18 41 0.003771462 ubox
18 44 0.003663545 ubox
18 50 0.043753008 ubox
18 56 0.024997494 ubox
18 59 0.458665810 ubox
18 62 0.870762681 ubox
18 65 0.014599217 ubox
18 69 0.057862213 ubox
19 34 0.003277783 ubox
19 35 0.004762403 ubox
19 40 0.003771144 ubox
19 43 0.003658352 ubox
19 49 0.043780491 ubox
19 50 0.039236253 ubox
19 55 0.025253294 ubox
19 56 0.006335465 ubox
19 58 0.458987281 ubox
19 59 0.038941246 ubox
19 61 0.871193166 ubox
19 62 0.060574435 ubox
19 64 0.014226110 ubox
19 68 0.057822118 ubox
20 34 0.004483690 ubox
20 49 0.036292933 ubox
20 55 0.006473382 ubox
20 58 0.035384875 ubox
20 61 0.060750413 ubox
21 47 0.052291770 ubox
21 56 0.457281012 ubox
21 65 0.058889210 ubox
22 40 0.003579427 ubox
22 46 0.052466041 ubox
22 49 0.041027265 ubox
22 55 0.458512067 ubox
22 58 0.879507309 ubox
22 61 0.006710910 ubox
22 64 0.060000405 ubox
23 39 0.003509399 ubox
23 45 0.051850001 ubox
23 48 0.046238912 ubox
23 54 0.451014537 ubox
23 57 0.881781389 ubox
23 60 0.006502178 ubox
23 63 0.058930674 ubox
24 47 0.051566524 ubox
24 56 0.882441688 ubox
25 34 0.008826566 ubox
25 43 0.052332666 ubox
25 46 0.051783913 ubox
25 49 0.027712335 ubox
25 55 0.882972500 ubox
25 58 0.004423389 ubox
25 61 0.061683924 ubox
25 73 0.003448440 ubox
26 33 0.008953920 ubox
26 42 0.052358858 ubox
26 45 0.051780646 ubox
26 48 0.027720518 ubox
26 54 0.882504975 ubox
26 57 0.004427381 ubox
26 60 0.061734930 ubox
26 72 0.003474619 ubox
27 32 0.008388582 ubox
27 34 0.007164522 ubox
27 40 0.025864770 ubox
27 41 0.045080333 ubox
27 43 0.019707939 ubox
27 44 0.047194347 ubox
27 46 0.029197289 ubox
27 47 0.006203887 ubox
27 49 0.993680866 ubox
27 58 0.048264324 ubox
27 59 0.043669897 ubox
28 33 0.007394958 ubox
28 39 0.036518015 ubox
28 42 0.027595798 ubox
28 45 0.029746982 ubox
28 48 0.994364565 ubox
28 57 0.065104767 ubox
29 47 0.994143293 ubox
29 56 0.065095014 ubox
30 40 0.029576742 ubox
30 43 0.051924709 ubox
30 46 0.994242905 ubox
30 49 0.009000538 ubox
30 55 0.065086894 ubox
31 39 0.029061603 ubox
31 42 0.050961795 ubox
31 45 0.961077858 ubox
31 48 0.008878499 ubox
31 54 0.063837733 ubox
32 42 0.177467124 ubox
32 45 0.180018617 ubox
33 40 0.179655425 ubox
33 41 0.140768382 ubox
33 43 0.956332423 ubox
33 44 0.139679659 ubox
33 46 0.009020199 ubox
33 49 0.019872380 ubox
33 68 0.003442717 ubox
34 39 0.211111906 ubox
34 42 0.963652366 ubox
34 45 0.009147677 ubox
34 48 0.019806647 ubox
34 67 0.003741223 ubox
35 48 0.003363665 ubox
38 47 0.065873530 ubox
39 46 0.066487420 ubox
39 61 0.014292456 ubox
39 64 0.003191497 ubox
40 45 0.066311913 ubox
40 60 0.014320156 ubox
42 58 0.015868503 ubox
42 61 0.004900692 ubox
43 57 0.015901510 ubox
43 60 0.004904755 ubox
45 55 0.016624169 ubox
45 58 0.006224508 ubox
46 54 0.016640834 ubox
46 57 0.006228044 ubox
47 53 0.016604483 ubox
48 55 0.006559366 ubox
48 73 0.007713944 ubox
49 54 0.006570893 ubox
49 72 0.008072454 ubox
50 71 0.008129248 ubox
54 68 0.009420991 ubox
54 73 0.007414536 ubox
55 67 0.009446835 ubox
55 72 0.007435857 ubox
56 66 0.009398112 ubox
56 71 0.004952963 ubox
57 65 0.008871316 ubox
57 68 0.003469736 ubox
57 73 0.025932795 ubox
58 67 0.003654419 ubox
58 71 0.040962727 ubox
58 72 0.026551022 ubox
59 70 0.041968895 ubox
59 71 0.025998699 ubox
60 68 0.031108083 ubox
60 69 0.035859094 ubox
60 73 0.108038666 ubox
61 67 0.038416127 ubox
61 71 0.012773033 ubox
61 72 0.108780608 ubox
62 70 0.013424303 ubox
62 71 0.108699779 ubox
64 71 0.006953171 ubox
64 72 0.005031411 ubox
65 70 0.007116854 ubox
65 71 0.004967399 ubox
67 73 0.005691301 ubox
68 72 0.005701699 ubox
9 69 0.9500000 lbox
10 68 0.9500000 lbox
11 67 0.9500000 lbox
12 66 0.9500000 lbox
13 65 0.9500000 lbox
14 64 0.9500000 lbox
18 62 0.9500000 lbox
19 61 0.9500000 lbox
22 58 0.9500000 lbox
23 57 0.9500000 lbox
24 56 0.9500000 lbox
25 55 0.9500000 lbox
26 54 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 46 0.9500000 lbox
31 45 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
showpage
end
%%EOF
