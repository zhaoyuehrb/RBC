%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGGCCGGAACUUCCGGCGUCCUCCUCGUGGCGGUCAUUUUGGCCUCUGUCCUGUUUGUCCAGCCCGCCAGUUUCUGCAGUGGAGGUCGCGACUGAGGGACGGGACAGAGAAGUCGCGAAAGUGGGCCAGAGGUUCUGCGACACCACCUCGGGUGAGCUGCGCCAGGCCCGGGAUAGGGACUGUUGUGUUCGA\
) } def
/len { sequence length } bind def

/coor [
[187.97256470 507.57321167]
[193.65884399 492.39688110]
[205.43432617 481.17718506]
[200.70770264 466.94137573]
[195.98107910 452.70553589]
[191.25445557 438.46969604]
[186.52783203 424.23385620]
[181.80120850 409.99801636]
[166.81854248 409.27700806]
[160.74679565 422.99319458]
[154.67504883 436.70938110]
[153.79248047 453.64035034]
[137.27886963 457.47921753]
[129.01858521 442.67367554]
[140.95886230 430.63763428]
[147.03060913 416.92144775]
[153.10235596 403.20526123]
[154.78182983 388.29959106]
[151.91444397 373.57620239]
[149.04705811 358.85281372]
[146.17968750 344.12942505]
[143.31230164 329.40603638]
[131.09716797 316.81350708]
[137.21401978 299.45108032]
[134.11103821 284.77554321]
[131.00804138 270.10000610]
[127.78752899 255.44981384]
[124.44971466 240.82589722]
[121.11190033 226.20198059]
[117.77408600 211.57804871]
[107.39868927 200.89160156]
[111.87117767 185.71571350]
[108.53336334 171.09179688]
[98.15796661 160.40533447]
[102.63044739 145.22944641]
[99.29263306 130.60552979]
[95.95481873 115.98160553]
[91.81555939 130.39918518]
[80.79975128 140.58015442]
[66.10128784 143.57266235]
[51.98179245 138.50909424]
[42.53502274 126.85754395]
[40.49994659 111.99623108]
[46.46660614 98.23400116]
[58.70505142 89.56102753]
[73.66690063 88.49192047]
[87.01237488 95.33499146]
[78.62891388 82.89644623]
[70.24544525 70.45789337]
[61.86198425 58.01934433]
[53.47851944 45.58079147]
[45.09505844 33.14224243]
[36.71159363 20.70369148]
[28.32812881 8.26514149]
[19.94466591 -4.17340899]
[11.56120205 -16.61195946]
[3.17773867 -29.05051041]
[-5.20572519 -41.48905945]
[-13.58918858 -53.92761230]
[-27.71812439 -61.04686356]
[-28.41531372 -75.92514038]
[-36.79877472 -88.36369324]
[-44.19959641 -93.73943329]
[-45.21505737 -101.06947327]
[-53.39807892 -113.64079285]
[-65.84008789 -117.07142639]
[-72.39532471 -127.72092438]
[-70.01080322 -139.58808899]
[-77.99128723 -152.28894043]
[-85.97176361 -164.98980713]
[-101.33221436 -166.15719604]
[-112.92445374 -176.03005981]
[-116.43882751 -190.66265869]
[-110.73136139 -204.39448547]
[-118.71184540 -217.09533691]
[-126.69232178 -229.79620361]
[-134.67280579 -242.49707031]
[-150.13467407 -245.76905823]
[-158.68408203 -259.06127930]
[-155.24879456 -274.48770142]
[-141.86692810 -282.89608765]
[-126.47769165 -279.29791260]
[-118.21125031 -265.82788086]
[-121.97193909 -250.47755432]
[-113.99146271 -237.77668762]
[-106.01097870 -225.07582092]
[-98.03050232 -212.37495422]
[-83.18218231 -211.55920410]
[-71.52349091 -202.04400635]
[-67.65803528 -187.31608582]
[-73.27090454 -172.97029114]
[-65.29042053 -160.26942444]
[-57.30994034 -147.56855774]
[-41.37763596 -140.22398376]
[-40.82675934 -121.82381439]
[-32.64373398 -109.25249481]
[-24.36022568 -96.74715424]
[-15.97676277 -84.30860138]
[-2.44746757 -78.07904053]
[-1.15063810 -62.31107330]
[7.23282528 -49.87252426]
[15.61628914 -37.43397522]
[23.99975204 -24.99542236]
[32.38321686 -12.55687237]
[40.76668167 -0.11832232]
[49.15014267 12.32022858]
[57.53360748 24.75877953]
[65.91706848 37.19733047]
[74.30053711 49.63587952]
[82.68399811 62.07442856]
[91.06745911 74.51297760]
[99.45092773 86.95153046]
[102.13591766 86.04841614]
[105.14250183 85.73007965]
[108.33850861 86.08473969]
[121.03937531 78.10425568]
[133.74023438 70.12377930]
[146.44110107 62.14329529]
[159.14196777 54.16281509]
[171.84281921 46.18233109]
[158.05101013 40.28436661]
[153.90483093 25.86878204]
[162.45562744 13.54466629]
[177.41049194 12.38190079]
[187.76344299 23.23621941]
[185.89559937 38.11893463]
[199.19459534 31.18086052]
[212.49357605 24.24278641]
[225.79257202 17.30471230]
[239.09156799 10.36663818]
[250.33786011 -2.32024789]
[265.64221191 4.97446299]
[262.86926270 21.70010185]
[246.02963257 23.66562653]
[232.73065186 30.60370255]
[219.43165588 37.54177475]
[206.13265991 44.47985077]
[192.83367920 51.41792297]
[179.82330322 58.88319397]
[167.12243652 66.86367798]
[154.42158508 74.84415436]
[141.72071838 82.82463837]
[129.01985168 90.80512238]
[116.31899261 98.78559875]
[110.57874298 112.64379120]
[113.91655731 127.26771545]
[117.25437164 141.89163208]
[127.86850739 153.62409973]
[123.15727997 167.75398254]
[126.49509430 182.37789917]
[137.10923767 194.11035156]
[132.39801025 208.24023438]
[135.73582458 222.86416626]
[139.07363892 237.48808289]
[142.41145325 252.11199951]
[147.37780762 259.79354858]
[145.68357849 266.99700928]
[148.78657532 281.67254639]
[151.88957214 296.34808350]
[162.25935364 304.03186035]
[164.53648376 316.32809448]
[158.03569031 326.53863525]
[160.90307617 341.26202393]
[163.77044678 355.98541260]
[166.63783264 370.70880127]
[169.50521851 385.43218994]
[184.92074585 388.07888794]
[196.03704834 405.27139282]
[200.76367188 419.50723267]
[205.49029541 433.74307251]
[210.21691895 447.97891235]
[214.94354248 462.21475220]
[219.67016602 476.45056152]
[233.75254822 477.72290039]
[246.24742126 484.24877930]
[255.28202820 495.01284790]
[259.51651001 508.36734009]
[258.34249878 522.28436279]
[251.97032166 534.66369629]
[241.39224243 543.64990234]
[245.89009094 557.95965576]
[250.38793945 572.26940918]
[254.88578796 586.57922363]
[269.01202393 593.66613770]
[273.91018677 608.69226074]
[266.67425537 622.74279785]
[251.59722900 627.48181152]
[237.62399292 620.09771729]
[233.04464722 604.97143555]
[240.57601929 591.07702637]
[236.07817078 576.76727295]
[231.58032227 562.45751953]
[227.08248901 548.14776611]
[211.23313904 546.15625000]
[197.78843689 537.42303467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 173]
[4 172]
[5 171]
[6 170]
[7 169]
[8 168]
[9 17]
[10 16]
[11 15]
[18 166]
[19 165]
[20 164]
[21 163]
[22 162]
[24 159]
[25 158]
[26 157]
[27 155]
[28 154]
[29 153]
[30 152]
[32 150]
[33 149]
[35 147]
[36 146]
[37 145]
[47 112]
[48 111]
[49 110]
[50 109]
[51 108]
[52 107]
[53 106]
[54 105]
[55 104]
[56 103]
[57 102]
[58 101]
[59 100]
[61 98]
[62 97]
[64 96]
[65 95]
[68 93]
[69 92]
[70 91]
[74 87]
[75 86]
[76 85]
[77 84]
[115 144]
[116 143]
[117 142]
[118 141]
[119 140]
[120 139]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
