%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MICU2)
} def

/sequence { (\
GCGAGAGUUCCCAAGCGGUAGGCGGCGGCGCCGGGAGAGAAGCGCCGCCUAGCUGCGCUUCCGCAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.025643466 ubox
1 16 0.003239544 ubox
1 58 0.003354399 ubox
1 64 0.996150146 ubox
2 7 0.028072999 ubox
2 15 0.003248198 ubox
2 57 0.003358956 ubox
2 63 0.996883902 ubox
3 10 0.020692131 ubox
3 61 0.039329065 ubox
3 62 0.994782696 ubox
4 9 0.019580678 ubox
4 59 0.006924023 ubox
4 60 0.049416613 ubox
5 58 0.007442533 ubox
5 59 0.030667033 ubox
5 60 0.892748526 ubox
5 61 0.344244872 ubox
6 59 0.947847105 ubox
6 60 0.286210450 ubox
7 16 0.007885066 ubox
7 56 0.005512634 ubox
7 58 0.965063309 ubox
7 59 0.145353844 ubox
7 64 0.013363210 ubox
8 14 0.008694046 ubox
8 15 0.007841965 ubox
8 37 0.040680681 ubox
8 55 0.005402340 ubox
8 57 0.960552138 ubox
8 63 0.013137820 ubox
9 13 0.013251419 ubox
9 14 0.017610342 ubox
9 20 0.003326620 ubox
9 36 0.050262634 ubox
10 17 0.007102507 ubox
10 18 0.006684674 ubox
10 35 0.051205752 ubox
11 17 0.008634209 ubox
11 18 0.012664800 ubox
11 34 0.051207580 ubox
11 35 0.003362058 ubox
12 17 0.015116889 ubox
12 33 0.050984396 ubox
12 34 0.003376334 ubox
12 55 0.098044264 ubox
13 54 0.069458340 ubox
13 60 0.085357505 ubox
14 54 0.119178961 ubox
14 59 0.182169166 ubox
15 23 0.014232180 ubox
15 29 0.030354056 ubox
15 31 0.009713345 ubox
15 53 0.138254363 ubox
15 56 0.964842267 ubox
15 58 0.196644883 ubox
15 64 0.070928485 ubox
16 22 0.014250623 ubox
16 28 0.030300075 ubox
16 30 0.009722234 ubox
16 33 0.004988382 ubox
16 52 0.137890346 ubox
16 55 0.965149588 ubox
16 57 0.196484615 ubox
16 63 0.071002046 ubox
17 23 0.005287459 ubox
17 29 0.009282401 ubox
17 32 0.009865960 ubox
17 54 0.964228847 ubox
17 56 0.156850103 ubox
17 59 0.006673671 ubox
17 62 0.071006050 ubox
18 26 0.030380185 ubox
18 31 0.009860503 ubox
18 53 0.963589335 ubox
18 56 0.127034880 ubox
18 58 0.007527063 ubox
18 61 0.070842037 ubox
19 25 0.030033603 ubox
19 30 0.009451651 ubox
19 51 0.663369839 ubox
19 52 0.706564966 ubox
19 55 0.172276375 ubox
19 57 0.007760153 ubox
20 50 0.932372951 ubox
20 54 0.173925099 ubox
20 59 0.039778801 ubox
20 60 0.050126790 ubox
21 32 0.038327307 ubox
21 49 0.937310581 ubox
21 50 0.098818524 ubox
21 53 0.165125627 ubox
21 54 0.096150835 ubox
21 58 0.042271247 ubox
21 59 0.052527293 ubox
22 29 0.009987293 ubox
22 31 0.038354509 ubox
22 48 0.937036718 ubox
22 49 0.050140353 ubox
22 53 0.115773994 ubox
22 56 0.043075833 ubox
22 58 0.052646146 ubox
23 28 0.010049467 ubox
23 30 0.038355530 ubox
23 47 0.936770982 ubox
23 52 0.127500265 ubox
23 55 0.043095860 ubox
23 57 0.052647417 ubox
24 29 0.038185386 ubox
24 32 0.009042479 ubox
24 46 0.935441204 ubox
24 49 0.338512741 ubox
24 50 0.012819514 ubox
24 54 0.017779346 ubox
24 56 0.023077082 ubox
25 31 0.009052907 ubox
25 45 0.935147640 ubox
25 48 0.344730604 ubox
25 49 0.009360703 ubox
25 53 0.016941304 ubox
25 56 0.003488085 ubox
26 30 0.008987253 ubox
26 44 0.933916491 ubox
26 47 0.345611183 ubox
26 52 0.016621771 ubox
26 55 0.004923807 ubox
27 43 0.771206770 ubox
27 46 0.349247079 ubox
27 49 0.015162796 ubox
27 54 0.004909573 ubox
28 43 0.524382890 ubox
28 45 0.350082397 ubox
28 48 0.015246541 ubox
28 53 0.004913099 ubox
29 42 0.740405383 ubox
29 44 0.350776897 ubox
29 47 0.015250458 ubox
29 52 0.004911388 ubox
30 43 0.354280771 ubox
30 46 0.015155372 ubox
31 42 0.354380146 ubox
32 44 0.015204548 ubox
32 47 0.004590243 ubox
33 43 0.015650458 ubox
33 46 0.004958363 ubox
34 45 0.004959790 ubox
39 61 0.051203499 ubox
40 60 0.051396050 ubox
41 59 0.051579115 ubox
42 58 0.051666519 ubox
43 57 0.051666798 ubox
44 56 0.051666445 ubox
45 55 0.051609362 ubox
47 53 0.051451892 ubox
48 52 0.051111527 ubox
51 59 0.003989595 ubox
52 58 0.004760415 ubox
53 57 0.004736848 ubox
54 65 0.004078491 ubox
55 64 0.005087097 ubox
56 63 0.005090578 ubox
57 62 0.004906920 ubox
57 64 0.014710964 ubox
58 63 0.014701386 ubox
1 64 0.9500000 lbox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
5 60 0.9500000 lbox
6 59 0.9500000 lbox
7 58 0.9500000 lbox
8 57 0.9500000 lbox
15 56 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
18 53 0.9500000 lbox
19 52 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
26 44 0.9500000 lbox
27 43 0.9500000 lbox
showpage
end
%%EOF
