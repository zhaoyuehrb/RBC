%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FRMPD1)
} def

/sequence { (\
CGCUAGGUCCUUGUCCGCGCGGGCGGCACCUCCUCUGCAGGUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.004034544 ubox
1 21 0.024786554 ubox
1 25 0.006178631 ubox
1 37 0.028040100 ubox
2 8 0.008058835 ubox
2 14 0.010318485 ubox
2 18 0.012015771 ubox
2 20 0.025274117 ubox
2 24 0.006258565 ubox
2 27 0.047611784 ubox
2 36 0.026674372 ubox
2 38 0.942608141 ubox
2 42 0.117406573 ubox
3 7 0.008353173 ubox
3 13 0.010759804 ubox
3 17 0.011978627 ubox
3 19 0.025233131 ubox
3 23 0.006199861 ubox
3 26 0.047634210 ubox
3 37 0.942855574 ubox
3 40 0.051300346 ubox
3 41 0.120820614 ubox
4 22 0.005788608 ubox
4 25 0.043988396 ubox
4 37 0.040735766 ubox
4 39 0.051202319 ubox
4 40 0.119147910 ubox
4 43 0.005427707 ubox
5 11 0.008367021 ubox
5 12 0.004299349 ubox
5 31 0.270166354 ubox
5 34 0.916213935 ubox
5 36 0.142903668 ubox
5 42 0.004693120 ubox
6 10 0.008796141 ubox
6 11 0.003773932 ubox
6 16 0.028579921 ubox
6 30 0.291039459 ubox
6 31 0.007819269 ubox
6 32 0.008376696 ubox
6 33 0.929846998 ubox
6 34 0.120427800 ubox
6 35 0.144218273 ubox
6 36 0.037383627 ubox
7 15 0.028586892 ubox
7 18 0.005288623 ubox
7 24 0.047291564 ubox
7 27 0.022625315 ubox
7 29 0.291195078 ubox
7 30 0.008837012 ubox
7 31 0.007950920 ubox
7 32 0.929482157 ubox
7 33 0.134102274 ubox
7 34 0.120309536 ubox
7 35 0.039353597 ubox
7 38 0.009274167 ubox
7 42 0.006797822 ubox
8 13 0.003820554 ubox
8 17 0.005249285 ubox
8 23 0.047311435 ubox
8 26 0.021898604 ubox
8 28 0.276603221 ubox
8 37 0.009099782 ubox
9 22 0.047355081 ubox
9 23 0.004482807 ubox
9 25 0.021715815 ubox
9 26 0.183765220 ubox
9 41 0.021875743 ubox
10 21 0.047297240 ubox
10 22 0.004501073 ubox
10 23 0.018715858 ubox
10 25 0.180985706 ubox
10 26 0.160948330 ubox
10 40 0.022014386 ubox
10 41 0.029923096 ubox
11 21 0.003412408 ubox
11 22 0.019115388 ubox
11 25 0.112995235 ubox
11 26 0.106555309 ubox
11 39 0.019275474 ubox
11 40 0.030137071 ubox
11 44 0.010116591 ubox
12 19 0.041660715 ubox
12 21 0.019664110 ubox
12 25 0.167345771 ubox
12 28 0.868855256 ubox
12 39 0.031880427 ubox
12 43 0.014286858 ubox
13 18 0.041553888 ubox
13 20 0.022757402 ubox
13 24 0.273773096 ubox
13 27 0.900871231 ubox
13 29 0.287527066 ubox
13 38 0.033465593 ubox
13 42 0.014447205 ubox
14 19 0.021523101 ubox
14 23 0.274083301 ubox
14 26 0.141205484 ubox
14 28 0.287431912 ubox
14 37 0.033241345 ubox
15 22 0.274221876 ubox
15 23 0.017724643 ubox
15 25 0.099701115 ubox
15 26 0.948766373 ubox
15 40 0.003339166 ubox
15 41 0.021329170 ubox
16 21 0.273834200 ubox
16 22 0.017905015 ubox
16 25 0.954123990 ubox
16 40 0.021427299 ubox
17 24 0.959346353 ubox
17 38 0.008000704 ubox
18 23 0.959045160 ubox
18 37 0.008021240 ubox
19 36 0.007825896 ubox
19 38 0.024874999 ubox
19 42 0.003186720 ubox
20 37 0.024943539 ubox
20 41 0.003787342 ubox
21 30 0.003418775 ubox
21 34 0.006358128 ubox
21 35 0.004817187 ubox
21 36 0.024794538 ubox
22 29 0.003485197 ubox
22 33 0.006610540 ubox
22 34 0.004752583 ubox
22 35 0.024783625 ubox
23 32 0.006602580 ubox
23 33 0.006170330 ubox
23 34 0.023913591 ubox
23 38 0.022432410 ubox
23 42 0.006419879 ubox
24 37 0.022459134 ubox
24 41 0.006540916 ubox
25 31 0.005107210 ubox
25 32 0.010785278 ubox
25 33 0.022638928 ubox
25 36 0.022353919 ubox
26 30 0.005331416 ubox
26 31 0.007578687 ubox
26 32 0.022482970 ubox
26 35 0.022294801 ubox
26 38 0.011276060 ubox
27 37 0.011344754 ubox
28 36 0.010617264 ubox
28 42 0.066597082 ubox
29 41 0.073458863 ubox
30 40 0.073527515 ubox
30 41 0.003704072 ubox
31 39 0.070929762 ubox
31 40 0.003773937 ubox
31 41 0.004053993 ubox
32 40 0.008620836 ubox
32 41 0.228018334 ubox
33 40 0.229929609 ubox
33 41 0.019516046 ubox
34 39 0.210149787 ubox
34 40 0.018438761 ubox
34 41 0.014117234 ubox
35 40 0.020052449 ubox
35 41 0.015122388 ubox
36 40 0.013789205 ubox
36 43 0.007707762 ubox
37 42 0.007023862 ubox
2 38 0.9500000 lbox
3 37 0.9500000 lbox
5 34 0.9500000 lbox
6 33 0.9500000 lbox
7 32 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
showpage
end
%%EOF
