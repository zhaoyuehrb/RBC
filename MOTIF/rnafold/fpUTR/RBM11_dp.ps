%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RBM11)
} def

/sequence { (\
AGCCGGAGAAGGGGCGGGGUCUCAGCUCCUACUUCAUUCUACGGCCGAGACCGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.015336431 ubox
1 38 0.009749990 ubox
1 40 0.032238929 ubox
2 15 0.154121299 ubox
2 32 0.017622259 ubox
2 37 0.013821454 ubox
2 39 0.034017895 ubox
2 45 0.807478131 ubox
3 12 0.009948285 ubox
3 13 0.008088662 ubox
3 14 0.154238152 ubox
3 17 0.027725515 ubox
3 44 0.919285743 ubox
3 54 0.028742644 ubox
3 57 0.036146732 ubox
4 11 0.010051273 ubox
4 12 0.009355534 ubox
4 13 0.154157352 ubox
4 16 0.027802211 ubox
4 43 0.920208216 ubox
4 47 0.004435998 ubox
4 53 0.028670819 ubox
4 56 0.036652842 ubox
5 15 0.027739942 ubox
5 29 0.039594613 ubox
5 35 0.355242605 ubox
5 39 0.011723938 ubox
5 40 0.014119665 ubox
5 42 0.914889035 ubox
5 46 0.004484154 ubox
5 52 0.026977971 ubox
6 28 0.039667521 ubox
6 32 0.003218834 ubox
6 34 0.363080308 ubox
6 35 0.029825113 ubox
6 37 0.007639524 ubox
6 38 0.016729280 ubox
6 39 0.029358532 ubox
6 45 0.004477371 ubox
6 51 0.026670178 ubox
7 27 0.039662966 ubox
7 33 0.364324589 ubox
7 34 0.024180829 ubox
7 37 0.016921165 ubox
7 38 0.028257038 ubox
7 40 0.699485898 ubox
8 26 0.039653029 ubox
8 32 0.364405134 ubox
8 33 0.015130611 ubox
8 34 0.003807302 ubox
8 35 0.031776215 ubox
8 37 0.018251753 ubox
8 38 0.017573580 ubox
8 39 0.915182813 ubox
9 33 0.004855598 ubox
9 34 0.032130642 ubox
9 37 0.033918594 ubox
9 38 0.913772928 ubox
10 30 0.388034394 ubox
10 33 0.028210773 ubox
10 34 0.029907413 ubox
10 37 0.879449431 ubox
10 38 0.008876147 ubox
11 23 0.039528774 ubox
11 29 0.401344317 ubox
11 30 0.013409344 ubox
11 32 0.026515088 ubox
11 33 0.047668132 ubox
11 34 0.263116548 ubox
11 35 0.816071328 ubox
11 37 0.007991112 ubox
12 22 0.039651906 ubox
12 28 0.401402975 ubox
12 29 0.014273257 ubox
12 30 0.004874322 ubox
12 32 0.047918259 ubox
12 33 0.341742658 ubox
12 34 0.810374598 ubox
12 35 0.146770186 ubox
12 46 0.006311663 ubox
13 21 0.039686262 ubox
13 27 0.401157241 ubox
13 28 0.014246102 ubox
13 29 0.005311271 ubox
13 30 0.009234771 ubox
13 32 0.374201839 ubox
13 33 0.802893964 ubox
13 34 0.138860594 ubox
13 35 0.015222744 ubox
13 45 0.006322211 ubox
13 46 0.004633253 ubox
14 20 0.039549080 ubox
14 26 0.401659652 ubox
14 28 0.005222013 ubox
14 29 0.010117619 ubox
14 32 0.803058086 ubox
14 33 0.125546401 ubox
14 34 0.013683663 ubox
14 45 0.004650979 ubox
15 19 0.039318868 ubox
15 25 0.401097042 ubox
15 43 0.006328807 ubox
15 44 0.004645628 ubox
16 22 0.037616940 ubox
16 23 0.171983148 ubox
16 27 0.005366587 ubox
16 28 0.024466366 ubox
16 29 0.800048195 ubox
16 30 0.385699847 ubox
16 42 0.005333399 ubox
17 21 0.044844166 ubox
17 22 0.136922201 ubox
17 23 0.225655888 ubox
17 26 0.005659658 ubox
17 27 0.024444462 ubox
17 28 0.801536093 ubox
17 29 0.393205549 ubox
17 30 0.121471876 ubox
17 52 0.010011085 ubox
18 22 0.149002912 ubox
18 26 0.027766363 ubox
18 27 0.801485859 ubox
18 28 0.391878900 ubox
18 29 0.122574786 ubox
18 51 0.007172278 ubox
18 52 0.155147970 ubox
19 26 0.870797248 ubox
19 27 0.169268211 ubox
19 28 0.122911958 ubox
19 51 0.155447413 ubox
20 25 0.829129312 ubox
20 50 0.155600144 ubox
21 49 0.155626071 ubox
22 48 0.155600731 ubox
23 47 0.155312503 ubox
24 33 0.003764962 ubox
25 32 0.003888295 ubox
25 45 0.155221121 ubox
26 44 0.154863043 ubox
27 43 0.134516991 ubox
27 44 0.007486040 ubox
28 43 0.064213756 ubox
28 44 0.012232085 ubox
29 43 0.015206717 ubox
30 41 0.081943474 ubox
31 40 0.082903311 ubox
32 56 0.015606345 ubox
32 57 0.009143693 ubox
33 49 0.003200669 ubox
33 55 0.015634317 ubox
33 56 0.009279575 ubox
34 48 0.004688200 ubox
34 50 0.003203379 ubox
34 54 0.015586344 ubox
34 55 0.009354078 ubox
35 43 0.004836822 ubox
35 47 0.004867314 ubox
35 49 0.003455912 ubox
35 53 0.015273733 ubox
35 54 0.009356667 ubox
37 49 0.007202584 ubox
37 55 0.006729127 ubox
37 56 0.040119058 ubox
37 57 0.012226667 ubox
38 44 0.005780351 ubox
38 48 0.009756210 ubox
38 50 0.019607721 ubox
38 54 0.007000481 ubox
38 55 0.053255856 ubox
38 56 0.009881580 ubox
38 57 0.196552858 ubox
39 43 0.007366460 ubox
39 47 0.009985450 ubox
39 49 0.020492615 ubox
39 53 0.004421658 ubox
39 54 0.054163143 ubox
39 56 0.318730682 ubox
39 57 0.036361624 ubox
40 48 0.020111212 ubox
40 53 0.025031675 ubox
40 55 0.244732140 ubox
40 56 0.035991407 ubox
42 53 0.339448414 ubox
43 52 0.342174539 ubox
44 51 0.340884085 ubox
45 54 0.449040834 ubox
45 57 0.025892854 ubox
46 53 0.681804626 ubox
46 56 0.076885488 ubox
47 52 0.676296809 ubox
51 57 0.163712907 ubox
52 56 0.164456003 ubox
2 45 0.9500000 lbox
3 44 0.9500000 lbox
4 43 0.9500000 lbox
5 42 0.9500000 lbox
7 40 0.9500000 lbox
8 39 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
11 35 0.9500000 lbox
12 34 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
showpage
end
%%EOF
