%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PADI2)
} def

/sequence { (\
GCAGGCUGCUGGAGAAGGCGCACCUGCUGCAGGUGCUCCCGGCCGCCCCGGACCAGCGAGCGCGGGCACUGCGGCGGGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.094140674 ubox
1 19 0.325056889 ubox
1 21 0.121015116 ubox
1 27 0.631831197 ubox
1 30 0.048949294 ubox
1 34 0.016982204 ubox
1 36 0.031220559 ubox
1 46 0.008459404 ubox
1 72 0.003979039 ubox
2 8 0.094670879 ubox
2 11 0.230856230 ubox
2 18 0.325113842 ubox
2 20 0.120551371 ubox
2 26 0.632949979 ubox
2 29 0.048780960 ubox
2 33 0.017596734 ubox
2 35 0.036969774 ubox
2 45 0.011539268 ubox
2 71 0.003982027 ubox
3 7 0.076802610 ubox
3 10 0.231831201 ubox
3 25 0.632875369 ubox
3 28 0.047514593 ubox
3 34 0.035454126 ubox
3 70 0.003970966 ubox
4 9 0.231620521 ubox
4 10 0.003308933 ubox
4 24 0.632995603 ubox
4 25 0.003775840 ubox
4 27 0.045093106 ubox
4 28 0.006654319 ubox
4 36 0.003601438 ubox
4 37 0.030053059 ubox
4 44 0.033333161 ubox
4 47 0.038112168 ubox
4 69 0.003909887 ubox
5 9 0.004080160 ubox
5 19 0.177663003 ubox
5 21 0.504859378 ubox
5 23 0.628915538 ubox
5 24 0.008710104 ubox
5 27 0.013436428 ubox
5 30 0.016801498 ubox
5 34 0.021382175 ubox
5 36 0.045309553 ubox
5 43 0.033414517 ubox
5 46 0.039267371 ubox
6 12 0.027004497 ubox
6 14 0.320862716 ubox
6 17 0.064407148 ubox
6 18 0.176103218 ubox
6 20 0.500311814 ubox
6 26 0.017745025 ubox
6 29 0.016765261 ubox
6 32 0.040363113 ubox
6 33 0.022053134 ubox
6 35 0.051864285 ubox
6 42 0.033407053 ubox
6 45 0.039945796 ubox
6 77 0.008647125 ubox
6 79 0.004577854 ubox
6 81 0.032679532 ubox
6 82 0.018302689 ubox
7 11 0.024381358 ubox
7 13 0.319724916 ubox
7 16 0.069227238 ubox
7 17 0.164867526 ubox
7 20 0.498404535 ubox
7 22 0.381239286 ubox
7 31 0.040544815 ubox
7 32 0.009411528 ubox
7 35 0.010104322 ubox
7 41 0.033278088 ubox
7 76 0.008683133 ubox
7 80 0.027436197 ubox
7 81 0.016605634 ubox
8 19 0.775313174 ubox
8 21 0.382253472 ubox
8 27 0.016601001 ubox
8 30 0.040591051 ubox
8 34 0.016876493 ubox
8 40 0.032381435 ubox
8 43 0.042526173 ubox
8 75 0.008718488 ubox
9 17 0.201608480 ubox
9 18 0.774543857 ubox
9 20 0.377438248 ubox
9 26 0.016612777 ubox
9 29 0.040501849 ubox
9 32 0.080500989 ubox
9 33 0.013193861 ubox
9 42 0.042919113 ubox
9 74 0.008718773 ubox
10 16 0.208858657 ubox
10 17 0.761422398 ubox
10 20 0.055486494 ubox
10 22 0.008960654 ubox
10 31 0.082824696 ubox
10 32 0.006878106 ubox
10 41 0.042959955 ubox
10 73 0.008711347 ubox
11 19 0.260843379 ubox
11 21 0.009742288 ubox
11 24 0.015746716 ubox
11 28 0.018233581 ubox
11 30 0.083310252 ubox
11 39 0.019216607 ubox
11 40 0.043119031 ubox
11 44 0.004160087 ubox
11 72 0.008706911 ubox
12 23 0.015739549 ubox
12 27 0.019328200 ubox
12 38 0.019378715 ubox
12 39 0.042133276 ubox
12 43 0.004189165 ubox
13 25 0.006152644 ubox
13 28 0.087857733 ubox
13 37 0.019338510 ubox
13 70 0.008632503 ubox
14 24 0.006073188 ubox
14 27 0.087656209 ubox
14 36 0.009036792 ubox
14 38 0.039533788 ubox
14 69 0.008607507 ubox
15 37 0.039137979 ubox
16 25 0.082555264 ubox
16 37 0.003361385 ubox
17 24 0.092185517 ubox
17 28 0.009542757 ubox
17 37 0.003265125 ubox
17 38 0.011387544 ubox
17 39 0.030746450 ubox
17 40 0.003797631 ubox
17 44 0.003739687 ubox
18 23 0.091623432 ubox
18 27 0.009698547 ubox
18 36 0.004024789 ubox
18 37 0.013038634 ubox
18 38 0.032316469 ubox
18 39 0.003738843 ubox
18 43 0.003744758 ubox
18 67 0.003509068 ubox
19 26 0.009716702 ubox
19 35 0.004163077 ubox
19 42 0.003734680 ubox
19 66 0.003418089 ubox
20 25 0.006590174 ubox
20 27 0.003732882 ubox
20 36 0.448564933 ubox
21 26 0.003952087 ubox
21 35 0.530300245 ubox
22 34 0.535200075 ubox
23 33 0.535832333 ubox
23 77 0.010409488 ubox
23 78 0.546549291 ubox
23 79 0.029136847 ubox
24 32 0.535836310 ubox
24 76 0.010292069 ubox
24 77 0.547897663 ubox
24 78 0.023983124 ubox
25 31 0.535172511 ubox
25 76 0.547759349 ubox
25 77 0.016835345 ubox
26 30 0.526650262 ubox
26 75 0.548550193 ubox
27 33 0.005044640 ubox
27 35 0.003846282 ubox
27 74 0.548567605 ubox
28 32 0.009039163 ubox
28 35 0.013473637 ubox
28 73 0.548168533 ubox
29 34 0.011340555 ubox
29 36 0.086337028 ubox
29 72 0.548568664 ubox
30 35 0.102131027 ubox
30 71 0.548255051 ubox
31 70 0.509791757 ubox
32 69 0.371571785 ubox
32 70 0.198650335 ubox
33 63 0.048847481 ubox
33 67 0.027874979 ubox
33 69 0.403388620 ubox
34 62 0.049010618 ubox
34 66 0.013333117 ubox
34 68 0.533413577 ubox
35 57 0.003601354 ubox
35 61 0.050003587 ubox
35 67 0.541349893 ubox
36 56 0.003603477 ubox
36 60 0.050006074 ubox
36 66 0.515423909 ubox
36 81 0.694917953 ubox
36 82 0.013405598 ubox
37 52 0.005266925 ubox
37 55 0.003549183 ubox
37 59 0.049992951 ubox
37 65 0.362405604 ubox
37 66 0.036675795 ubox
37 79 0.031209141 ubox
37 80 0.820321619 ubox
37 81 0.011264437 ubox
38 51 0.005460806 ubox
38 58 0.049876804 ubox
38 64 0.356714957 ubox
38 65 0.323196235 ubox
38 66 0.176173023 ubox
38 78 0.038183162 ubox
38 79 0.833197980 ubox
39 50 0.005092181 ubox
39 51 0.063439744 ubox
39 64 0.320134183 ubox
39 65 0.248527324 ubox
39 66 0.003665261 ubox
39 77 0.038614890 ubox
39 78 0.833253098 ubox
39 82 0.003254254 ubox
40 50 0.063654229 ubox
40 62 0.379067377 ubox
40 64 0.258268733 ubox
40 65 0.005241063 ubox
40 76 0.038945196 ubox
40 77 0.832832631 ubox
40 81 0.004177333 ubox
41 48 0.005664981 ubox
41 49 0.063604073 ubox
41 54 0.059119455 ubox
41 61 0.362747641 ubox
41 63 0.264138000 ubox
41 75 0.027840120 ubox
42 47 0.006422714 ubox
42 48 0.063192016 ubox
42 53 0.059344513 ubox
42 61 0.399662286 ubox
42 63 0.030195036 ubox
42 75 0.833316652 ubox
43 51 0.059597129 ubox
43 60 0.414881382 ubox
43 62 0.023302819 ubox
43 65 0.005096162 ubox
43 74 0.834106258 ubox
43 77 0.009907164 ubox
43 82 0.010558843 ubox
44 50 0.059610228 ubox
44 58 0.539537166 ubox
44 62 0.034953548 ubox
44 64 0.005329815 ubox
44 73 0.834089608 ubox
44 76 0.012055294 ubox
44 81 0.015614542 ubox
45 49 0.055765772 ubox
45 57 0.539874309 ubox
45 61 0.042096715 ubox
45 63 0.005485636 ubox
45 67 0.066042130 ubox
45 72 0.831483078 ubox
45 75 0.012137423 ubox
46 56 0.538964885 ubox
46 60 0.042059092 ubox
46 62 0.005476907 ubox
46 66 0.072107480 ubox
46 71 0.829938558 ubox
46 74 0.012127067 ubox
46 79 0.037812615 ubox
47 65 0.078600246 ubox
47 66 0.797327474 ubox
47 73 0.012102621 ubox
47 78 0.039705619 ubox
48 64 0.078489045 ubox
48 65 0.797843681 ubox
48 66 0.008574195 ubox
48 77 0.040665444 ubox
48 78 0.003576882 ubox
48 79 0.005218957 ubox
48 82 0.034419168 ubox
49 58 0.050603132 ubox
49 62 0.077372323 ubox
49 64 0.797796091 ubox
49 65 0.007917972 ubox
49 71 0.032390477 ubox
49 76 0.040673667 ubox
49 77 0.003500656 ubox
49 78 0.005214343 ubox
49 81 0.034977878 ubox
50 57 0.051702211 ubox
50 61 0.078442284 ubox
50 63 0.792739572 ubox
50 70 0.106016828 ubox
50 75 0.040166092 ubox
51 69 0.106964307 ubox
53 65 0.178413811 ubox
53 66 0.142421283 ubox
53 74 0.029152462 ubox
53 77 0.017580475 ubox
53 78 0.030192018 ubox
53 79 0.011409356 ubox
54 64 0.177881421 ubox
54 65 0.142089477 ubox
54 71 0.025554160 ubox
54 73 0.029173618 ubox
54 76 0.017522838 ubox
54 77 0.030083393 ubox
54 78 0.011435763 ubox
55 70 0.026256853 ubox
56 63 0.247783942 ubox
56 67 0.008651221 ubox
56 69 0.026151500 ubox
56 72 0.031677766 ubox
56 75 0.032931550 ubox
57 62 0.249739452 ubox
57 64 0.011071126 ubox
57 66 0.008745828 ubox
57 71 0.031681513 ubox
57 74 0.032999843 ubox
57 76 0.014921316 ubox
58 63 0.012393458 ubox
58 70 0.028720026 ubox
58 75 0.015117832 ubox
59 70 0.004688248 ubox
60 67 0.047969879 ubox
60 69 0.004685832 ubox
60 72 0.004050200 ubox
60 75 0.003300251 ubox
61 66 0.048017722 ubox
61 71 0.004048311 ubox
61 73 0.036702948 ubox
62 70 0.003335481 ubox
62 72 0.037095459 ubox
63 71 0.037099751 ubox
64 70 0.036830613 ubox
65 69 0.036045672 ubox
1 27 0.9500000 lbox
2 26 0.9500000 lbox
3 25 0.9500000 lbox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
36 81 0.9500000 lbox
37 80 0.9500000 lbox
38 79 0.9500000 lbox
39 78 0.9500000 lbox
40 77 0.9500000 lbox
42 75 0.9500000 lbox
43 74 0.9500000 lbox
44 73 0.9500000 lbox
45 72 0.9500000 lbox
46 71 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
50 63 0.9500000 lbox
showpage
end
%%EOF
