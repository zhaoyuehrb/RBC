%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUUCUCCCCGCCCUGCCGCGGCCCCGGGGCGCAGCGCGCACGCAAUCGCGUUUCCGGAGAGACCUGGCUGCUGUGUCCCGCGGCUUGCGCUCCGUAGUGGACUCCGCGGGCCUUCGGCAGAUGCAGGCCUGGGGUAGUCUCCUUUCUGGACUGAGAAGAGAAGA\
) } def
/len { sequence length } bind def

/coor [
[199.28454590 424.92919922]
[192.27500916 411.66775513]
[192.71138000 396.67410278]
[200.48033142 383.84274292]
[213.56393433 376.50659180]
[228.56379700 376.57110596]
[241.58543396 384.02114868]
[235.84518433 370.16296387]
[229.97561646 356.35903931]
[223.97723389 342.61059570]
[217.97885132 328.86218262]
[211.98046875 315.11373901]
[205.72605896 301.47985840]
[199.21780396 287.96533203]
[192.70954895 274.45080566]
[185.57682800 261.25518799]
[177.83523560 248.40731812]
[170.09364319 235.55944824]
[162.35205078 222.71157837]
[154.61045837 209.86370850]
[146.86886597 197.01583862]
[131.08189392 189.39242554]
[130.83868408 170.99913025]
[122.85820770 158.29826355]
[114.87772369 145.59739685]
[106.89723969 132.89653015]
[98.91676331 120.19567108]
[69.78505707 97.71636200]
[58.98197937 87.30994415]
[48.17890167 76.90352631]
[37.37582016 66.49710846]
[26.57274246 56.09069443]
[15.76966381 45.68428040]
[4.96658516 35.27786255]
[-5.83649349 24.87144852]
[-16.63957214 14.46503258]
[-27.53947639 4.16007805]
[-38.53525543 -6.04251289]
[-49.62594604 -16.14184952]
[-60.81057739 -26.13704872]
[-71.99520874 -36.13224792]
[-83.45577240 -45.80982590]
[-95.18324280 -55.16217422]
[-106.91071320 -64.51451874]
[-118.72512054 -73.75680542]
[-130.62541199 -82.88822937]
[-142.52571106 -92.01965332]
[-158.18429565 -94.28224945]
[-163.57135010 -108.16853333]
[-175.47164917 -117.29995728]
[-187.37194824 -126.43138123]
[-203.03053284 -128.69398499]
[-208.41758728 -142.58026123]
[-220.31788635 -151.71168518]
[-232.21818542 -160.84310913]
[-244.11848450 -169.97453308]
[-256.01879883 -179.10595703]
[-272.33941650 -180.70884705]
[-278.86422729 -195.75407410]
[-268.88104248 -208.76438904]
[-252.65974426 -206.35589600]
[-246.88737488 -191.00625610]
[-234.98707581 -181.87483215]
[-223.08677673 -172.74340820]
[-211.18647766 -163.61198425]
[-199.28616333 -154.48056030]
[-184.47877502 -152.87110901]
[-178.24053955 -138.33168030]
[-166.34024048 -129.20025635]
[-154.43992615 -120.06884003]
[-139.63253784 -118.45937347]
[-133.39430237 -103.91995239]
[-121.49399567 -94.78852844]
[-109.59369659 -85.65711212]
[-102.34257507 -84.07333374]
[-97.55836487 -76.24198914]
[-85.83089447 -66.88964844]
[-74.10342407 -57.53730011]
[-70.53845978 -57.58500290]
[-66.77619171 -55.88206482]
[-63.65180206 -52.35634995]
[-62.00001144 -47.31687927]
[-50.81538010 -37.32168198]
[-39.63074493 -27.32648087]
[-32.51825333 -25.20525742]
[-28.33266449 -17.03829002]
[-17.33688545 -6.83570004]
[-10.26530266 -4.58185196]
[-6.23315668 3.66195345]
[4.56992197 14.06836891]
[15.37300110 24.47478485]
[26.17607880 34.88120270]
[36.97915649 45.28761673]
[47.78223801 55.69403076]
[58.58531570 66.10044861]
[69.38839722 76.50686646]
[80.19147491 86.91327667]
[83.80549622 72.35516357]
[98.80484009 72.21488953]
[102.69049072 86.70291138]
[113.29708862 76.09630585]
[123.90369415 65.48970795]
[134.51029968 54.88310242]
[141.43484497 39.40773773]
[158.22233582 41.77766800]
[160.59225464 58.56515503]
[145.11689758 65.48970795]
[134.51029968 76.09630585]
[123.90369415 86.70291138]
[113.29708862 97.30950928]
[111.61762238 112.21519470]
[119.59810638 124.91605377]
[127.57858276 137.61691284]
[135.55906677 150.31777954]
[143.53955078 163.01864624]
[155.94216919 166.65739441]
[162.32165527 177.43479919]
[159.71673584 189.27424622]
[167.45832825 202.12211609]
[175.19992065 214.96998596]
[182.94151306 227.81785583]
[190.68310547 240.66572571]
[198.42469788 253.51359558]
[204.73278809 239.90447998]
[219.25927734 236.16529846]
[231.35412598 245.03741455]
[232.15007019 260.01629639]
[221.06356812 270.12020874]
[206.22409058 267.94253540]
[212.73234558 281.45709229]
[219.24060059 294.97161865]
[224.53256226 299.04617310]
[226.62619019 304.38592529]
[225.72891235 309.11535645]
[231.72729492 322.86380005]
[237.72567749 336.61221313]
[243.72404480 350.36065674]
[250.05030823 357.00875854]
[249.70338440 364.42269897]
[255.44363403 378.28088379]
[262.45266724 391.54263306]
[270.66925049 404.09204102]
[278.88580322 416.64144897]
[287.10238647 429.19088745]
[301.13497925 436.49819946]
[301.63339233 451.38446045]
[309.84994507 463.93389893]
[318.06652832 476.48330688]
[326.28311157 489.03271484]
[341.80346680 492.01501465]
[350.59991455 505.14505005]
[347.45370483 520.63299561]
[334.23138428 529.29016113]
[318.77755737 525.98034668]
[310.26071167 512.66729736]
[313.73370361 497.24929810]
[305.51712036 484.69989014]
[297.30053711 472.15045166]
[289.08395386 459.60104370]
[275.63909912 453.19134521]
[274.55297852 437.40744019]
[266.33639526 424.85803223]
[258.11981201 412.30862427]
[249.90324402 399.75921631]
[248.72418213 414.71279907]
[240.32872009 427.14324951]
[226.89756775 433.82186890]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 140]
[8 139]
[9 137]
[10 136]
[11 135]
[12 134]
[13 131]
[14 130]
[15 129]
[16 123]
[17 122]
[18 121]
[19 120]
[20 119]
[21 118]
[23 115]
[24 114]
[25 113]
[26 112]
[27 111]
[28 97]
[29 96]
[30 95]
[31 94]
[32 93]
[33 92]
[34 91]
[35 90]
[36 89]
[37 87]
[38 86]
[39 84]
[40 83]
[41 82]
[42 78]
[43 77]
[44 76]
[45 74]
[46 73]
[47 72]
[49 70]
[50 69]
[51 68]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[100 110]
[101 109]
[102 108]
[103 107]
[141 164]
[142 163]
[143 162]
[144 161]
[146 159]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
