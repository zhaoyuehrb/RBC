%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NELFB)
} def

/sequence { (\
CCUGGGCGGUGCGGGGCGGAAGUGGGCGGCUGCGGGACGCGCGCGGAGUCGCGCGGCGGGCGGGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.003285386 ubox
1 35 0.003891090 ubox
1 36 0.018927941 ubox
1 46 0.025496915 ubox
1 60 0.005528755 ubox
1 63 0.039361643 ubox
1 64 0.992952758 ubox
2 14 0.003296818 ubox
2 34 0.003903833 ubox
2 35 0.019011869 ubox
2 45 0.025562875 ubox
2 46 0.042930690 ubox
2 59 0.005603923 ubox
2 62 0.039300078 ubox
2 63 0.997418379 ubox
2 64 0.019835085 ubox
3 13 0.003292091 ubox
3 34 0.018853694 ubox
3 43 0.023772591 ubox
3 45 0.043053661 ubox
3 58 0.004315896 ubox
3 62 0.995991541 ubox
3 63 0.019290295 ubox
4 12 0.003276559 ubox
4 33 0.017609346 ubox
4 42 0.024404010 ubox
4 44 0.043940973 ubox
4 61 0.985337771 ubox
5 31 0.016840938 ubox
6 30 0.018499445 ubox
6 33 0.014863304 ubox
6 40 0.024767820 ubox
6 42 0.043956183 ubox
6 57 0.034670386 ubox
6 61 0.016322066 ubox
7 29 0.018493807 ubox
7 32 0.014970311 ubox
7 39 0.024792731 ubox
7 41 0.043957340 ubox
7 56 0.034724051 ubox
7 58 0.989748473 ubox
7 60 0.016015878 ubox
8 31 0.014964520 ubox
8 38 0.024693174 ubox
8 40 0.043612108 ubox
8 57 0.996781863 ubox
9 27 0.018362873 ubox
9 30 0.014962305 ubox
9 38 0.041306816 ubox
9 40 0.003775245 ubox
9 54 0.029534358 ubox
9 57 0.026159311 ubox
10 26 0.018330176 ubox
10 28 0.009636435 ubox
10 29 0.011412353 ubox
10 34 0.014389719 ubox
10 37 0.040052343 ubox
10 39 0.005250584 ubox
10 53 0.029498032 ubox
10 55 0.993225246 ubox
10 56 0.019157420 ubox
11 27 0.013614800 ubox
11 33 0.022774642 ubox
11 38 0.005296129 ubox
11 52 0.029489883 ubox
11 54 0.997942268 ubox
12 24 0.017858699 ubox
12 26 0.013634395 ubox
12 28 0.005039898 ubox
12 32 0.022780525 ubox
12 34 0.045013017 ubox
12 39 0.003196562 ubox
12 51 0.029464665 ubox
12 53 0.997960305 ubox
13 23 0.014612276 ubox
13 27 0.005073827 ubox
13 31 0.022056953 ubox
13 33 0.045088330 ubox
13 38 0.003191843 ubox
13 50 0.026260674 ubox
13 52 0.997696996 ubox
14 30 0.021357553 ubox
14 31 0.011597902 ubox
14 49 0.018362235 ubox
14 50 0.008714275 ubox
15 30 0.013655602 ubox
15 31 0.043721281 ubox
15 49 0.007107451 ubox
15 50 0.997422652 ubox
16 23 0.017426563 ubox
16 27 0.020380903 ubox
16 30 0.043845677 ubox
16 49 0.997737441 ubox
16 52 0.008849675 ubox
17 22 0.017955947 ubox
17 26 0.020397175 ubox
17 28 0.026447722 ubox
17 29 0.038329746 ubox
17 45 0.003822437 ubox
17 48 0.997800793 ubox
17 51 0.009657008 ubox
18 27 0.033992445 ubox
18 50 0.009659240 ubox
19 49 0.009470590 ubox
22 40 0.003274315 ubox
22 42 0.003843287 ubox
22 44 0.997565256 ubox
23 39 0.003275288 ubox
23 41 0.003745526 ubox
23 43 0.997502427 ubox
23 45 0.025620677 ubox
24 38 0.003267772 ubox
24 42 0.997324882 ubox
24 44 0.026049462 ubox
26 40 0.997871339 ubox
26 42 0.026313255 ubox
26 44 0.009299771 ubox
27 34 0.004900698 ubox
27 39 0.997951107 ubox
27 41 0.026297233 ubox
27 43 0.009311472 ubox
27 45 0.005037219 ubox
28 33 0.008072564 ubox
28 38 0.991690203 ubox
28 40 0.021339425 ubox
28 42 0.008140521 ubox
28 44 0.004843963 ubox
29 40 0.014952385 ubox
29 42 0.006275840 ubox
29 44 0.004091222 ubox
30 36 0.625487876 ubox
30 39 0.020514888 ubox
30 41 0.007514400 ubox
30 43 0.004244977 ubox
30 46 0.003882577 ubox
31 35 0.574069179 ubox
31 41 0.005673212 ubox
31 45 0.003954239 ubox
32 38 0.006490992 ubox
32 40 0.011589007 ubox
32 42 0.004552081 ubox
32 44 0.004173919 ubox
33 39 0.011908560 ubox
33 41 0.004571091 ubox
33 43 0.004174560 ubox
34 38 0.011202790 ubox
34 40 0.004573860 ubox
34 42 0.004167114 ubox
38 58 0.023476722 ubox
38 62 0.003420980 ubox
39 57 0.023648833 ubox
39 61 0.003446966 ubox
40 55 0.016971849 ubox
40 56 0.017037519 ubox
40 60 0.003362078 ubox
41 54 0.023958684 ubox
42 53 0.023996042 ubox
42 55 0.004500760 ubox
43 52 0.024004138 ubox
43 54 0.004574287 ubox
44 51 0.024004276 ubox
44 53 0.004577042 ubox
45 50 0.023674166 ubox
45 52 0.004576994 ubox
48 66 0.049711292 ubox
49 65 0.050297656 ubox
50 64 0.050405167 ubox
52 62 0.050414843 ubox
53 61 0.050426812 ubox
54 60 0.050420218 ubox
1 64 0.9500000 lbox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
4 61 0.9500000 lbox
7 58 0.9500000 lbox
8 57 0.9500000 lbox
10 55 0.9500000 lbox
11 54 0.9500000 lbox
12 53 0.9500000 lbox
13 52 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
17 48 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
showpage
end
%%EOF
