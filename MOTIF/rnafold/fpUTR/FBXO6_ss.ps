%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAACUAGUGCGGAGGUCCGGGGAGCGGCCGCGCGUUCGGGAGCUUCGGCCCUGCGUAGGAGGCGGGUGCAGGUGUGGGUGCUGAGCCGCCCGCCGCCUGGAGGGGGAGACAGCUUCAGGACACGCAGGCCGCAGCGAGGGCCCGGGCCCUGGGGAUCCCAGGCC\
) } def
/len { sequence length } bind def

/coor [
[99.98665619 627.09106445]
[85.00505829 626.34826660]
[70.88233948 621.29370117]
[58.83176804 612.36151123]
[49.88856506 600.31915283]
[44.82102966 586.20104980]
[44.06449890 571.22015381]
[47.68397141 556.66339111]
[55.36849976 543.78131104]
[66.45792389 533.68054199]
[79.99958038 527.22894287]
[94.83012390 524.98065186]
[109.67550659 527.12878418]
[123.26038361 533.48895264]
[134.41772461 543.51458740]
[142.18943787 556.34558105]
[141.90727234 541.34826660]
[141.62512207 526.35089111]
[141.34295654 511.35354614]
[141.06079102 496.35620117]
[140.77862549 481.35885620]
[140.49645996 466.36151123]
[140.21430969 451.36416626]
[122.91186523 437.92559814]
[121.04953003 415.82321167]
[136.22763062 399.27725220]
[134.25807190 384.40710449]
[132.28852844 369.53698730]
[130.31898499 354.66683960]
[128.34942627 339.79672241]
[126.37988281 324.92657471]
[124.27055359 310.07562256]
[122.02162933 295.24517822]
[119.77271271 280.41473389]
[110.21469116 268.99133301]
[115.79550171 254.18711853]
[113.54658508 239.35665894]
[111.29766846 224.52621460]
[109.04874420 209.69575500]
[99.49072266 198.27238464]
[105.07154083 183.46815491]
[102.82261658 168.63769531]
[100.57369995 153.80725098]
[98.32477570 138.97679138]
[96.07585907 124.14633942]
[93.82693481 109.31588745]
[91.43862152 94.50724030]
[88.91112518 79.72171783]
[76.29642487 70.58350372]
[73.94380951 55.55287170]
[82.73343658 43.58299255]
[80.20594025 28.79746819]
[77.67844391 14.01194191]
[75.15094757 -0.77358371]
[63.31531143 -7.25616360]
[57.47203064 -19.20359421]
[59.55944443 -32.14123917]
[68.59117126 -41.36613464]
[66.34225464 -56.19658661]
[64.09333038 -71.02703857]
[61.84441376 -85.85749817]
[52.12553787 -98.34164429]
[57.86720657 -112.08509827]
[55.61828613 -126.91555023]
[53.36936569 -141.74600220]
[51.12044525 -156.57646179]
[48.87152481 -171.40690613]
[46.62260437 -186.23736572]
[44.37368774 -201.06782532]
[41.98537445 -215.87646484]
[39.45787811 -230.66198730]
[27.36891365 -244.52592468]
[34.04268646 -260.73663330]
[31.23751259 -275.47201538]
[28.43233681 -290.20736694]
[15.22494793 -298.88726807]
[12.10538101 -314.38061523]
[20.92441940 -327.49548340]
[36.44988251 -330.45108032]
[49.47079086 -321.49386597]
[52.26206970 -305.93801880]
[43.16770172 -293.01254272]
[45.97287750 -278.27719116]
[48.77805328 -263.54180908]
[58.61800385 -256.45999146]
[61.05586243 -244.17477417]
[54.24340439 -233.18948364]
[56.77089691 -218.40396118]
[61.01579666 -212.31448364]
[59.20413971 -203.31674194]
[61.45306015 -188.48628235]
[63.70198059 -173.65583801]
[65.95089722 -158.82537842]
[68.19982147 -143.99491882]
[70.44873810 -129.16447449]
[72.69766235 -114.33401489]
[82.25567627 -102.91064453]
[76.67486572 -88.10641479]
[78.92378998 -73.27596283]
[81.17270660 -58.44550705]
[83.42163086 -43.61505508]
[97.36706543 -34.24949265]
[100.30229950 -17.36706734]
[89.93647766 -3.30107903]
[92.46397400 11.48444653]
[94.99146271 26.26997185]
[97.51895905 41.05549622]
[109.78564453 49.42593002]
[112.55950928 64.38455200]
[103.69665527 77.19422150]
[106.22415161 91.97974396]
[110.59564972 98.79632568]
[108.65739441 107.06696320]
[110.90631104 121.89742279]
[113.15523529 136.72787476]
[115.40415192 151.55833435]
[117.65306854 166.38877869]
[119.90199280 181.21923828]
[129.62086487 193.70338440]
[123.87919617 207.44683838]
[126.12812042 222.27728271]
[128.37704468 237.10774231]
[130.62596130 251.93820190]
[140.34483337 264.42233276]
[134.60316467 278.16580200]
[136.85208130 292.99624634]
[139.10101318 307.82672119]
[143.49874878 315.88284302]
[141.25001526 322.95703125]
[143.21955872 337.82714844]
[145.18911743 352.69729614]
[147.15866089 367.56744385]
[149.12820435 382.43756104]
[151.09776306 397.30770874]
[159.12329102 399.80548096]
[166.02175903 404.54794312]
[171.18612671 411.09344482]
[174.16917419 418.84277344]
[174.72219849 427.09402466]
[172.81562805 435.10623169]
[168.63986206 442.16574097]
[162.58648682 447.64993286]
[155.21165466 451.08200073]
[155.49382019 466.07934570]
[155.77597046 481.07669067]
[156.05813599 496.07403564]
[156.34030151 511.07138062]
[156.62246704 526.06872559]
[156.90463257 541.06610107]
[157.18678284 556.06341553]
[160.13043213 570.77172852]
[165.64181519 584.72253418]
[171.15318298 598.67333984]
[176.66455078 612.62414551]
[182.17593384 626.57495117]
[193.61903381 639.08459473]
[184.76602173 653.54351807]
[168.42140198 649.03912354]
[168.22512817 632.08630371]
[162.71376038 618.13549805]
[157.20237732 604.18469238]
[151.69100952 590.23394775]
[146.17964172 576.28314209]
[143.94493103 591.11572266]
[137.50569153 604.66326904]
[127.41513062 615.76196289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 150]
[17 149]
[18 148]
[19 147]
[20 146]
[21 145]
[22 144]
[23 143]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[31 129]
[32 127]
[33 126]
[34 125]
[36 123]
[37 122]
[38 121]
[39 120]
[41 118]
[42 117]
[43 116]
[44 115]
[45 114]
[46 113]
[47 111]
[48 110]
[51 107]
[52 106]
[53 105]
[54 104]
[58 101]
[59 100]
[60 99]
[61 98]
[63 96]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 88]
[71 87]
[73 84]
[74 83]
[75 82]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
