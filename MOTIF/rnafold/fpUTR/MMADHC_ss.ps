%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGUGCGCAUCAUCGUUUCGACGCGCUCGGAAGCAACUUCCUUUGCCUGCUCACCGCCAGCGUAGGUGCUACCACCGCUGCCGUCGCCGCCGCCAUUUUGAUGGCAGGAAGAGUCCGGUUCUGGGACAGCUGGAGACAGUGGUGGUGACUGAAAUAACUUUACCAAAGGAAAGCUAUUUUGCGAACUAUCUUCUCCAGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[-18.69011116 178.27638245]
[-25.10989952 191.83316040]
[-31.52968788 205.38993835]
[-37.94947433 218.94671631]
[-44.36926270 232.50350952]
[-50.78905106 246.06028748]
[-56.79242325 259.80654907]
[-62.37379456 273.72949219]
[-67.95516968 287.65243530]
[-61.51086044 302.08316040]
[-67.23607635 316.81399536]
[-81.73414612 323.10537720]
[-96.40362549 317.22473145]
[-102.54137421 302.66094971]
[-96.50596619 288.05447388]
[-81.87810516 282.07104492]
[-76.29673767 268.14810181]
[-70.71536255 254.22517395]
[-71.69577789 251.59497070]
[-71.69130707 248.41720581]
[-70.48789978 245.06582642]
[-68.01096344 241.98538208]
[-64.34583282 239.64050293]
[-57.92604446 226.08370972]
[-51.50625610 212.52693176]
[-45.08646774 198.97015381]
[-38.66667938 185.41337585]
[-32.24689102 171.85659790]
[-34.95605850 168.74728394]
[-37.08127213 165.21305847]
[-38.55735779 161.36227417]
[-53.54166412 160.67623901]
[-67.68125916 167.77429199]
[-80.04135132 159.46299744]
[-95.02565002 158.77696228]
[-110.00995636 158.09092712]
[-124.99426270 157.40490723]
[-128.78388977 159.54273987]
[-132.66612244 160.28619385]
[-136.19052124 159.77774048]
[-138.99942017 158.29173279]
[-140.86289978 156.19253540]
[-155.77751160 154.59426880]
[-170.69212341 152.99601746]
[-185.23814392 159.21885681]
[-197.06854248 150.16950989]
[-211.98315430 148.57124329]
[-226.89776611 146.97299194]
[-239.12834167 156.61927795]
[-254.23110962 154.78596497]
[-263.35198975 143.06654358]
[-278.26660156 141.46827698]
[-291.60723877 150.37931824]
[-306.84756470 145.36805725]
[-312.29644775 130.27868652]
[-303.77401733 116.68649292]
[-287.81793213 115.01824188]
[-276.66833496 126.55367279]
[-261.75375366 128.15193176]
[-250.35673523 118.63121033]
[-235.20843506 120.03961182]
[-225.29951477 132.05838013]
[-210.38490295 133.65664673]
[-195.47029114 135.25489807]
[-181.99105835 128.91773987]
[-169.09385681 138.08140564]
[-154.17924500 139.67967224]
[-139.26464844 141.27792358]
[-124.30822754 142.42059326]
[-109.32392120 143.10662842]
[-94.33962250 143.79266357]
[-79.35531616 144.47869873]
[-66.28749847 137.33157349]
[-52.85563278 145.69194031]
[-37.87132645 146.37796021]
[-20.48046303 131.19480896]
[2.15927410 138.03385925]
[15.71605587 131.61407471]
[29.27283669 125.19428253]
[42.82961655 118.77449799]
[56.38639832 112.35470581]
[69.94318390 105.93492126]
[72.59799957 86.29722595]
[86.71669769 72.39221954]
[106.39259338 70.03718567]
[113.01837158 56.57987976]
[119.64414978 43.12257385]
[126.26993561 29.66526985]
[132.89570618 16.20796585]
[139.52149963 2.75066257]
[146.14727783 -10.70664120]
[152.77305603 -24.16394615]
[159.39883423 -37.62125015]
[97.68904114 -90.94705963]
[96.54637146 -105.90347290]
[95.40369415 -120.85988617]
[94.26101685 -135.81629944]
[93.11833954 -150.77272034]
[83.41912079 -163.99606323]
[90.26805878 -178.89654541]
[106.61955261 -180.14579773]
[115.65258789 -166.45872498]
[108.07475281 -151.91539001]
[109.21743011 -136.95896912]
[110.36010742 -122.00256348]
[111.50278473 -107.04615021]
[112.64545441 -92.08973694]
[119.90926361 -90.22235107]
[123.64404297 -104.74995422]
[122.70677185 -119.72064209]
[136.65512085 -125.23821259]
[146.21290588 -113.67755127]
[138.17164612 -101.01517487]
[134.43687439 -86.48757172]
[141.70066833 -84.62017822]
[149.91497803 -97.17108917]
[158.12927246 -109.72199249]
[166.34356689 -122.27290344]
[161.65191650 -137.19009399]
[167.69419861 -151.61315918]
[181.61743164 -158.73197937]
[196.84748840 -155.18525696]
[206.19322205 -142.64764404]
[205.24183655 -127.03903198]
[194.44255066 -115.72931671]
[178.89448547 -114.05860138]
[170.68017578 -101.50769806]
[162.46588135 -88.95678711]
[154.25158691 -76.40587616]
[164.69567871 -65.63829041]
[175.13882446 -54.87164307]
[187.93440247 -62.69936752]
[200.72996521 -70.52709198]
[213.52554321 -78.35481262]
[220.88194275 -93.01139832]
[237.26669312 -93.69861603]
[245.82455444 -79.70951080]
[237.75195312 -65.43488312]
[221.35327148 -65.55924225]
[208.55769348 -57.73151779]
[195.76211548 -49.90379333]
[182.96653748 -42.07606888]
[172.85614014 -30.99547005]
[166.23036194 -17.53816605]
[159.60458374 -4.08086109]
[152.97879028 9.37644291]
[146.35301208 22.83374786]
[139.72723389 36.29104996]
[133.10145569 49.74835587]
[126.47567749 63.20565796]
[119.84989929 76.66296387]
[132.93229675 84.36653137]
[142.26329041 99.13502502]
[156.09950256 104.92807007]
[169.93571472 110.72111511]
[183.77191162 116.51416016]
[197.60812378 122.30720520]
[211.44433594 128.10025024]
[227.16197205 126.29293060]
[235.91360474 138.34523010]
[249.74981689 144.13827515]
[263.58602905 149.93132019]
[277.42224121 155.72436523]
[286.55065918 156.15261841]
[291.42419434 161.71270752]
[305.17044067 167.71607971]
[322.10559082 168.51431274]
[326.02664185 185.00860596]
[311.26242065 193.34251404]
[299.16708374 181.46232605]
[285.42080688 175.45895386]
[271.62918091 169.56057739]
[257.79296875 163.76753235]
[243.95677185 157.97448730]
[230.12055969 152.18144226]
[215.39257812 154.40312195]
[205.65129089 141.93646240]
[191.81507874 136.14341736]
[177.97886658 130.35037231]
[164.14266968 124.55731964]
[150.30645752 118.76427460]
[136.47024536 112.97122955]
[131.41505432 118.51152802]
[121.30464172 129.59213257]
[116.24943542 135.13243103]
[123.28253174 148.38140869]
[130.31562805 161.63040161]
[145.17143250 167.68716431]
[149.56008911 183.11828613]
[140.11499023 196.08630371]
[124.08161163 196.64328003]
[113.75938416 184.36195374]
[117.06664276 168.66349792]
[110.03354645 155.41450500]
[103.00045776 142.16552734]
[90.63593292 137.23439026]
[81.55486298 129.17355347]
[76.36296844 119.49169922]
[62.80618668 125.91149139]
[49.24940491 132.33128357]
[35.69262314 138.75106812]
[22.13584328 145.17085266]
[8.57906246 151.59063721]
[7.25551033 162.61512756]
[1.28383386 171.81974792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[7 18]
[8 17]
[9 16]
[31 75]
[32 74]
[34 72]
[35 71]
[36 70]
[37 69]
[42 68]
[43 67]
[44 66]
[46 64]
[47 63]
[48 62]
[51 59]
[52 58]
[77 203]
[78 202]
[79 201]
[80 200]
[81 199]
[82 198]
[85 151]
[86 150]
[87 149]
[88 148]
[89 147]
[90 146]
[91 145]
[92 144]
[93 143]
[94 107]
[95 106]
[96 105]
[97 104]
[98 103]
[115 129]
[116 128]
[117 127]
[118 126]
[131 142]
[132 141]
[133 140]
[134 139]
[153 182]
[154 181]
[155 180]
[156 179]
[157 178]
[158 177]
[160 175]
[161 174]
[162 173]
[163 172]
[165 171]
[166 170]
[185 195]
[186 194]
[187 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
