%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ALPI)
} def

/sequence { (\
AGUCCUCCCCUGAUUUAAACCCAGGCAGCCUGCGCUGCAGCCGGUUCCUGGUGUCCCCACUUCGCCUCCCUCCUGCUGCCCCCAAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.021044201 ubox
1 15 0.069846950 ubox
1 16 0.008757124 ubox
1 31 0.053089399 ubox
1 36 0.069838442 ubox
1 61 0.003603847 ubox
1 74 0.007665462 ubox
1 77 0.008123428 ubox
2 10 0.022253339 ubox
2 14 0.098864387 ubox
2 15 0.007988721 ubox
2 20 0.011578478 ubox
2 26 0.047316796 ubox
2 29 0.074584961 ubox
2 30 0.056467225 ubox
2 33 0.125160844 ubox
2 35 0.073856700 ubox
2 60 0.004140017 ubox
2 65 0.004582280 ubox
2 73 0.008083020 ubox
2 76 0.008580418 ubox
2 79 0.026698522 ubox
2 88 0.653267783 ubox
3 13 0.101218264 ubox
3 19 0.011145805 ubox
3 25 0.024723438 ubox
3 28 0.070929217 ubox
3 32 0.123769203 ubox
3 34 0.072208466 ubox
3 59 0.003913029 ubox
3 64 0.004448479 ubox
3 75 0.008277139 ubox
3 78 0.017651517 ubox
3 87 0.660673492 ubox
4 12 0.101468442 ubox
4 24 0.022297177 ubox
4 25 0.036704796 ubox
4 86 0.654213971 ubox
5 24 0.037661906 ubox
5 25 0.004570745 ubox
5 28 0.193994615 ubox
5 86 0.160925379 ubox
6 13 0.046413803 ubox
6 23 0.035389282 ubox
6 25 0.003305806 ubox
6 27 0.190920203 ubox
6 85 0.174479528 ubox
6 87 0.107709033 ubox
7 12 0.049460689 ubox
7 24 0.004354137 ubox
7 25 0.022385123 ubox
7 86 0.116133712 ubox
8 24 0.021375814 ubox
8 25 0.081756489 ubox
9 24 0.060315357 ubox
9 25 0.941090669 ubox
10 24 0.966984340 ubox
10 25 0.006722982 ubox
10 28 0.027394190 ubox
10 86 0.026861193 ubox
11 17 0.011588750 ubox
11 23 0.968794329 ubox
11 24 0.006157095 ubox
11 27 0.027759171 ubox
11 34 0.004855959 ubox
11 59 0.008402061 ubox
11 64 0.028470918 ubox
11 84 0.025235631 ubox
11 85 0.024226585 ubox
12 16 0.010366346 ubox
12 22 0.967495537 ubox
12 26 0.027963128 ubox
12 33 0.006680450 ubox
12 55 0.009628442 ubox
12 58 0.009447132 ubox
12 62 0.004049773 ubox
12 63 0.040925119 ubox
12 83 0.028444228 ubox
13 54 0.009425059 ubox
13 61 0.004652515 ubox
13 62 0.040541527 ubox
14 24 0.006399559 ubox
14 25 0.021174003 ubox
14 53 0.008895623 ubox
14 86 0.003222185 ubox
14 87 0.007162823 ubox
15 23 0.009331135 ubox
15 24 0.021920347 ubox
15 85 0.004997709 ubox
15 86 0.007942719 ubox
15 87 0.005554346 ubox
16 23 0.020135947 ubox
16 24 0.003433955 ubox
16 84 0.004925738 ubox
16 85 0.007462282 ubox
16 86 0.005894852 ubox
17 36 0.006066158 ubox
18 46 0.008273740 ubox
19 45 0.009219867 ubox
19 52 0.015866297 ubox
19 54 0.082370946 ubox
20 44 0.009329537 ubox
20 51 0.013284610 ubox
20 53 0.086721569 ubox
21 43 0.009311455 ubox
21 50 0.009432465 ubox
21 51 0.096095294 ubox
22 32 0.134292116 ubox
22 37 0.034057744 ubox
22 50 0.097026660 ubox
22 78 0.003453064 ubox
23 31 0.135463133 ubox
23 36 0.065048130 ubox
23 49 0.097569117 ubox
24 30 0.135640037 ubox
24 35 0.067376268 ubox
24 36 0.030323514 ubox
24 48 0.097608660 ubox
24 80 0.116725412 ubox
24 81 0.015410753 ubox
24 82 0.013208381 ubox
24 83 0.019577996 ubox
25 29 0.133457392 ubox
25 33 0.127386549 ubox
25 35 0.042413147 ubox
25 38 0.160212094 ubox
25 47 0.097587585 ubox
25 79 0.118010891 ubox
25 80 0.014288822 ubox
25 81 0.012968719 ubox
25 82 0.019092709 ubox
26 32 0.131314412 ubox
26 34 0.044793027 ubox
26 37 0.571168936 ubox
26 78 0.117866172 ubox
27 31 0.106455763 ubox
27 36 0.860761703 ubox
27 46 0.096258464 ubox
27 77 0.117754119 ubox
28 35 0.885501480 ubox
28 45 0.097596856 ubox
28 76 0.117704526 ubox
29 34 0.883204618 ubox
29 44 0.097748489 ubox
29 75 0.117170837 ubox
30 40 0.110880214 ubox
30 43 0.097711443 ubox
30 44 0.015635912 ubox
30 86 0.284514515 ubox
31 39 0.112430088 ubox
31 43 0.015821294 ubox
31 84 0.104728805 ubox
31 85 0.279801813 ubox
32 38 0.112708308 ubox
32 41 0.100172359 ubox
32 42 0.020284389 ubox
32 65 0.007961470 ubox
32 79 0.007145684 ubox
32 83 0.121166400 ubox
33 37 0.111892320 ubox
33 40 0.100333601 ubox
33 64 0.007972894 ubox
33 78 0.007156988 ubox
34 41 0.022996666 ubox
34 45 0.004196148 ubox
34 63 0.007931764 ubox
34 77 0.005755929 ubox
34 79 0.039234670 ubox
35 40 0.022950746 ubox
35 44 0.004387214 ubox
35 78 0.039162297 ubox
35 86 0.055045800 ubox
36 43 0.004373853 ubox
36 59 0.006741574 ubox
36 84 0.012116992 ubox
36 85 0.055038875 ubox
37 42 0.004275024 ubox
37 54 0.003435759 ubox
37 58 0.006730400 ubox
37 76 0.040868109 ubox
37 79 0.802201551 ubox
37 83 0.007410852 ubox
38 53 0.003870795 ubox
38 75 0.041269727 ubox
38 78 0.972647303 ubox
39 74 0.041339739 ubox
39 77 0.985550799 ubox
40 52 0.008849779 ubox
40 73 0.041060082 ubox
40 76 0.987213040 ubox
40 79 0.006423730 ubox
41 51 0.012167059 ubox
41 75 0.985959640 ubox
41 78 0.006002247 ubox
42 50 0.012524219 ubox
42 64 0.005151719 ubox
42 75 0.035956656 ubox
42 78 0.003389240 ubox
43 49 0.012831609 ubox
43 63 0.005379893 ubox
43 66 0.056975276 ubox
43 68 0.003197702 ubox
43 69 0.022685274 ubox
43 70 0.045370282 ubox
43 71 0.014684190 ubox
43 72 0.014860906 ubox
43 73 0.989121965 ubox
43 74 0.040275272 ubox
43 77 0.004107202 ubox
44 48 0.012602627 ubox
44 62 0.005255726 ubox
44 65 0.057063038 ubox
44 68 0.022820932 ubox
44 69 0.045308206 ubox
44 70 0.015318670 ubox
44 71 0.013622400 ubox
44 72 0.989249919 ubox
44 73 0.040207026 ubox
44 76 0.004137936 ubox
45 64 0.056150235 ubox
45 75 0.004108058 ubox
49 59 0.020985976 ubox
49 64 0.007338657 ubox
50 57 0.004012535 ubox
50 58 0.021684485 ubox
50 61 0.063000896 ubox
50 63 0.007662489 ubox
50 66 0.992098046 ubox
50 67 0.008227916 ubox
50 68 0.003498908 ubox
50 69 0.007911370 ubox
51 56 0.004139329 ubox
51 57 0.021591225 ubox
51 60 0.064658315 ubox
51 62 0.005630282 ubox
51 65 0.992740297 ubox
51 66 0.007503947 ubox
51 68 0.007837170 ubox
52 59 0.065328652 ubox
52 64 0.992119524 ubox
53 58 0.065703889 ubox
53 60 0.059663992 ubox
53 63 0.986315827 ubox
53 65 0.009516928 ubox
53 88 0.013163085 ubox
54 59 0.061254017 ubox
54 64 0.009276434 ubox
54 87 0.013464765 ubox
55 86 0.013637967 ubox
58 75 0.003628995 ubox
58 78 0.005324833 ubox
59 74 0.003299528 ubox
59 77 0.005183471 ubox
60 86 0.009076939 ubox
61 85 0.009090551 ubox
62 84 0.008326225 ubox
62 87 0.008998744 ubox
63 75 0.003487946 ubox
63 78 0.009242530 ubox
63 86 0.009731279 ubox
64 76 0.042083469 ubox
64 77 0.003170772 ubox
64 79 0.025238863 ubox
65 75 0.042089245 ubox
65 78 0.025233660 ubox
66 86 0.005179903 ubox
67 85 0.004976326 ubox
67 87 0.004113186 ubox
68 86 0.004419062 ubox
70 86 0.008275480 ubox
71 85 0.007933112 ubox
71 87 0.017381619 ubox
72 86 0.018521761 ubox
73 86 0.024025529 ubox
74 84 0.020488842 ubox
74 85 0.023678738 ubox
75 83 0.021390963 ubox
76 86 0.029378153 ubox
77 84 0.021989679 ubox
77 85 0.029232101 ubox
78 83 0.029081003 ubox
2 88 0.9500000 lbox
3 87 0.9500000 lbox
4 86 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
37 79 0.9500000 lbox
38 78 0.9500000 lbox
39 77 0.9500000 lbox
40 76 0.9500000 lbox
41 75 0.9500000 lbox
43 73 0.9500000 lbox
44 72 0.9500000 lbox
50 66 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
showpage
end
%%EOF
