%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGACACGGACAGAUGAACUUAAAAGAGAAGCUUUAGCUGCCAAAGAUUGGGAAAGGGAAAGGACAAAAAAGACCCCUGGGCUACACGGCGUAGGUGCAGGGUUUCCUACUGCUGUUCUUUUAUGCUGGGAGCUGUGGCUGUAACCAACUAGGAAAUAACGUAUGCAGCAGCU\
) } def
/len { sequence length } bind def

/coor [
[128.72447205 309.83520508]
[123.86376953 324.02581787]
[116.51808167 337.10406494]
[106.92940521 348.63912964]
[95.41364288 358.25094604]
[82.35015869 365.62289429]
[68.16933441 370.51208496]
[53.33834457 372.75744629]
[38.34578705 372.28503418]
[23.68557930 369.11038208]
[9.84070015 363.33810425]
[-2.73274326 355.15832520]
[-13.62052441 344.84057617]
[-22.46395302 332.72473145]
[-28.97168732 319.20993042]
[-32.92933273 304.74145508]
[-34.20650864 289.79592896]
[-32.76113510 274.86572266]
[-28.64083481 260.44271851]
[-21.98134613 247.00205994]
[-13.00206184 234.98655701]
[-1.99879885 224.79203796]
[10.66594601 216.75436401]
[24.57494164 211.13832092]
[39.26996231 208.12893677]
[54.26688766 207.82536316]
[69.07165527 210.23757935]
[83.19653320 215.28613281]
[96.17618561 222.80468750]
[107.58300018 232.54556274]
[117.03762817 244.18254089]
[114.62464142 229.37788391]
[112.21165466 214.57324219]
[109.79867554 199.76860046]
[107.38568878 184.96395874]
[104.97270203 170.15931702]
[102.42693329 155.37692261]
[99.74858093 140.61798096]
[97.07022858 125.85903168]
[84.71430206 121.06230164]
[76.32332611 110.80223846]
[74.07382965 97.74018860]
[78.54930115 85.26430511]
[88.58885193 76.61071014]
[86.17586517 61.80606461]
[83.76288605 47.00141907]
[81.34989929 32.19677353]
[78.93691254 17.39212990]
[69.08041382 5.01635265]
[74.66956329 -8.78982925]
[72.25657654 -23.59447289]
[69.84359741 -38.39912033]
[55.57640076 -43.91223526]
[46.04724121 -55.74827957]
[43.73728561 -70.66573334]
[49.16794968 -84.64299774]
[60.78740692 -93.96253967]
[58.37442017 -108.76718140]
[55.96143723 -123.57182312]
[53.54845428 -138.37646484]
[51.13546753 -153.18112183]
[48.72248459 -167.98576355]
[42.65496826 -154.26770020]
[31.59837532 -144.13104248]
[17.40615654 -139.27502441]
[2.45738578 -140.51367188]
[-10.74203587 -147.63935852]
[-19.97945595 -159.45756531]
[-23.70638275 -173.98718262]
[-21.29806137 -188.79258728]
[-13.15820599 -201.39190674]
[-0.65131956 -209.67308044]
[14.12603569 -212.24790955]
[28.69669533 -208.68478394]
[40.61814117 -199.58097839]
[47.89281464 -186.45983887]
[48.96900558 -201.42117310]
[50.04519653 -216.38252258]
[51.12139130 -231.34387207]
[52.19758224 -246.30520630]
[45.47032928 -260.62493896]
[54.10082245 -272.76428223]
[55.17701721 -287.72564697]
[56.11887360 -302.69604492]
[56.92632294 -317.67428589]
[57.73376846 -332.65252686]
[48.12983322 -345.50338745]
[52.32830048 -360.98730469]
[67.10846710 -367.22640991]
[81.13225555 -359.43453979]
[83.64180756 -343.58898926]
[72.71202087 -331.84509277]
[71.90457153 -316.86685181]
[71.09712219 -301.88858032]
[73.88619995 -295.01715088]
[70.13835907 -286.64944458]
[69.06216431 -271.68811035]
[75.86639404 -258.43850708]
[67.15892792 -245.22901917]
[66.08273315 -230.26766968]
[65.00653839 -215.30633545]
[63.93035126 -200.34498596]
[62.85415649 -185.38363647]
[63.52713013 -170.39874268]
[65.94011688 -155.59410095]
[68.35309601 -140.78945923]
[70.76608276 -125.98480988]
[73.17906952 -111.18016815]
[75.59204865 -96.37551880]
[89.56947327 -91.22797394]
[99.15742493 -79.69857025]
[101.70392609 -64.81967163]
[96.42638397 -50.57030487]
[84.64823914 -40.81210327]
[87.06122589 -26.00745773]
[89.47420502 -11.20281315]
[99.15811920 0.11403743]
[93.74156189 14.97914600]
[96.15454102 29.78379059]
[98.56752777 44.58843613]
[100.98051453 59.39308167]
[103.39349365 74.19772339]
[118.03249359 81.23561096]
[125.64692688 95.58317566]
[123.27058411 111.65131378]
[111.82917023 123.18067932]
[114.50752258 137.93962097]
[117.18587494 152.69856262]
[121.81155396 160.61488342]
[119.77735138 167.74632263]
[122.19033051 182.55096436]
[124.60331726 197.35562134]
[127.01630402 212.16026306]
[129.42929077 226.96490479]
[131.84226990 241.76954651]
[138.35052490 255.28408813]
[148.42079163 266.40118408]
[163.41996765 271.43457031]
[166.23002625 286.06170654]
[176.30029297 297.17880249]
[186.37055969 308.29589844]
[196.44082642 319.41299438]
[206.51109314 330.53009033]
[216.58135986 341.64718628]
[226.75099182 352.67343140]
[237.01921082 363.60797119]
[251.07841492 357.88931274]
[266.25411987 357.63949585]
[280.49392700 362.89233398]
[291.87203979 372.93740845]
[298.84960938 386.41619873]
[300.48303223 401.50579834]
[296.55136108 416.16549683]
[287.58636475 428.41265869]
[274.80044556 436.59097290]
[259.92282104 439.59439087]
[244.96554565 437.01669312]
[231.95147705 429.20654297]
[222.64067078 417.22015381]
[218.29232788 402.67861938]
[219.49452209 387.54855347]
[226.08467102 373.87615967]
[215.81646729 362.94161987]
[208.92240906 360.20898438]
[205.46426392 351.71743774]
[195.39399719 340.60034180]
[185.32373047 329.48324585]
[175.25346375 318.36614990]
[165.18319702 307.24908447]
[155.11293030 296.13198853]
[140.83404541 291.89373779]
[137.30369568 276.47143555]
[127.23343658 265.35433960]
[130.43751526 280.00814819]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 135]
[32 134]
[33 133]
[34 132]
[35 131]
[36 130]
[37 128]
[38 127]
[39 126]
[44 122]
[45 121]
[46 120]
[47 119]
[48 118]
[50 116]
[51 115]
[52 114]
[57 109]
[58 108]
[59 107]
[60 106]
[61 105]
[62 104]
[76 103]
[77 102]
[78 101]
[79 100]
[80 99]
[82 97]
[83 96]
[84 94]
[85 93]
[86 92]
[136 173]
[137 172]
[139 170]
[140 169]
[141 168]
[142 167]
[143 166]
[144 165]
[145 163]
[146 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
