%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C11orf52)
} def

/sequence { (\
UCCGGGAGCUGCCGCGGAAAGCUCAACCAGGAACCCGGAAAUGCACAAGCCUCUUGAUGCAUAAAAACAGCUGGGCUCCCUUGGAGACAGAGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.076997867 ubox
1 18 0.885968500 ubox
1 32 0.040917671 ubox
1 39 0.269537235 ubox
1 85 0.040701855 ubox
2 16 0.098256398 ubox
2 17 0.947029194 ubox
2 30 0.003354895 ubox
2 31 0.043740049 ubox
2 38 0.288125802 ubox
2 74 0.005426837 ubox
2 84 0.043509024 ubox
3 14 0.120143581 ubox
3 16 0.946912184 ubox
3 30 0.043727787 ubox
3 37 0.288206715 ubox
3 73 0.005441043 ubox
3 83 0.043364715 ubox
3 94 0.004527298 ubox
4 10 0.003207961 ubox
4 13 0.134543623 ubox
4 15 0.941663810 ubox
4 28 0.043070886 ubox
4 35 0.004288792 ubox
4 36 0.288169732 ubox
4 72 0.005101255 ubox
4 80 0.037794370 ubox
4 81 0.005331715 ubox
4 82 0.020618570 ubox
4 93 0.004567104 ubox
4 96 0.007864323 ubox
5 9 0.003564907 ubox
5 12 0.137104125 ubox
5 13 0.938335746 ubox
5 27 0.043004701 ubox
5 28 0.007527097 ubox
5 34 0.006047090 ubox
5 35 0.288131620 ubox
5 71 0.004979933 ubox
5 79 0.038311857 ubox
5 80 0.007461576 ubox
5 81 0.016961821 ubox
5 95 0.007889963 ubox
5 96 0.006543564 ubox
6 12 0.937289405 ubox
6 24 0.079000886 ubox
6 27 0.006260976 ubox
6 34 0.281905695 ubox
6 78 0.038328851 ubox
6 80 0.010386263 ubox
6 95 0.006604714 ubox
7 23 0.112805333 ubox
7 72 0.004211874 ubox
7 77 0.038330828 ubox
8 15 0.021030440 ubox
8 22 0.114310163 ubox
8 71 0.004601141 ubox
8 76 0.038299570 ubox
8 93 0.007071410 ubox
9 14 0.021882954 ubox
9 17 0.004584572 ubox
9 21 0.114312909 ubox
9 30 0.216734069 ubox
9 31 0.140350133 ubox
9 70 0.004678804 ubox
9 75 0.037904388 ubox
9 92 0.007076022 ubox
10 16 0.004894817 ubox
10 20 0.113699261 ubox
10 25 0.018211062 ubox
10 29 0.221026656 ubox
10 30 0.131675729 ubox
10 69 0.004830049 ubox
10 74 0.029980189 ubox
10 91 0.006852171 ubox
11 15 0.005502564 ubox
11 22 0.025760318 ubox
11 24 0.024658685 ubox
11 28 0.221508573 ubox
11 68 0.004960622 ubox
11 71 0.016402057 ubox
11 95 0.003674969 ubox
12 21 0.025986625 ubox
12 31 0.076355124 ubox
12 38 0.024976867 ubox
12 70 0.016079084 ubox
12 74 0.008612099 ubox
13 30 0.076496429 ubox
13 37 0.025352584 ubox
13 73 0.008915406 ubox
13 94 0.004481503 ubox
14 22 0.218113680 ubox
14 36 0.025325512 ubox
14 71 0.009139572 ubox
14 72 0.003644249 ubox
14 93 0.006303392 ubox
14 95 0.020336609 ubox
15 21 0.218352271 ubox
15 37 0.009506574 ubox
15 70 0.009157021 ubox
15 92 0.006327001 ubox
15 94 0.020806685 ubox
16 23 0.076326736 ubox
16 24 0.047861142 ubox
16 28 0.068683232 ubox
16 35 0.025378025 ubox
16 36 0.010207012 ubox
16 93 0.019551529 ubox
16 96 0.045947439 ubox
17 22 0.080311270 ubox
17 23 0.040101284 ubox
17 24 0.102805677 ubox
17 27 0.068528888 ubox
17 34 0.025337748 ubox
17 35 0.010193809 ubox
17 95 0.046718954 ubox
18 23 0.096406203 ubox
20 72 0.004170140 ubox
21 71 0.004544754 ubox
21 93 0.952017532 ubox
21 95 0.014463298 ubox
22 30 0.019141283 ubox
22 31 0.016077817 ubox
22 70 0.004548812 ubox
22 84 0.003677927 ubox
22 86 0.043145405 ubox
22 90 0.013247114 ubox
22 92 0.953197914 ubox
22 94 0.013729002 ubox
23 29 0.018424261 ubox
23 30 0.014860979 ubox
23 31 0.008086380 ubox
23 32 0.018791209 ubox
23 69 0.004247747 ubox
23 84 0.012234823 ubox
23 85 0.043049637 ubox
23 87 0.024973832 ubox
23 89 0.012975857 ubox
23 91 0.952753683 ubox
24 30 0.014360502 ubox
24 31 0.022654472 ubox
24 83 0.019439009 ubox
24 84 0.040494562 ubox
24 86 0.029792308 ubox
24 90 0.950815373 ubox
25 82 0.024505789 ubox
26 81 0.024570404 ubox
27 38 0.020735624 ubox
27 74 0.043193909 ubox
27 75 0.003344398 ubox
27 84 0.944350707 ubox
28 37 0.020775755 ubox
28 73 0.043423852 ubox
28 83 0.945666791 ubox
29 72 0.043396342 ubox
29 81 0.262933942 ubox
29 82 0.849653256 ubox
30 36 0.018313907 ubox
30 71 0.043269064 ubox
30 77 0.004188466 ubox
30 78 0.005246821 ubox
30 79 0.864728483 ubox
30 80 0.321368721 ubox
30 81 0.225638668 ubox
31 35 0.018044554 ubox
31 71 0.004217916 ubox
31 76 0.004775156 ubox
31 77 0.004731916 ubox
31 78 0.891879286 ubox
31 79 0.261665125 ubox
31 80 0.206215150 ubox
32 77 0.899377944 ubox
34 74 0.003190076 ubox
34 75 0.954634987 ubox
35 74 0.955765865 ubox
36 73 0.955741200 ubox
37 72 0.954814414 ubox
37 96 0.003847651 ubox
38 71 0.954536581 ubox
38 95 0.003868627 ubox
41 62 0.940953981 ubox
42 61 0.994730177 ubox
42 63 0.007699416 ubox
42 69 0.008212526 ubox
43 60 0.999868027 ubox
43 68 0.004535582 ubox
44 59 0.999878459 ubox
45 58 0.994516208 ubox
46 56 0.998243876 ubox
47 55 0.997955856 ubox
48 54 0.994940236 ubox
48 55 0.038708447 ubox
49 53 0.973456731 ubox
49 54 0.029247280 ubox
49 60 0.013005351 ubox
50 59 0.013019079 ubox
63 72 0.003346987 ubox
70 93 0.248234025 ubox
70 95 0.024491142 ubox
71 90 0.118670085 ubox
71 92 0.248177854 ubox
71 94 0.023973284 ubox
72 89 0.122327244 ubox
72 91 0.245178071 ubox
73 88 0.125413628 ubox
73 93 0.004108154 ubox
73 96 0.076367957 ubox
74 95 0.077183166 ubox
74 96 0.010404119 ubox
75 93 0.085813658 ubox
75 95 0.010527557 ubox
76 86 0.289113852 ubox
76 92 0.086018059 ubox
76 94 0.010454747 ubox
77 85 0.289570259 ubox
77 91 0.085949206 ubox
78 84 0.289635065 ubox
78 90 0.085019434 ubox
79 83 0.287531251 ubox
80 86 0.032485591 ubox
80 90 0.008751524 ubox
80 92 0.009553335 ubox
81 85 0.029326674 ubox
81 87 0.021486792 ubox
81 89 0.008952761 ubox
81 90 0.018925598 ubox
81 91 0.008708636 ubox
82 86 0.019644566 ubox
82 89 0.111070603 ubox
82 90 0.006926842 ubox
83 88 0.117216401 ubox
1 18 0.9500000 lbox
2 17 0.9500000 lbox
3 16 0.9500000 lbox
4 15 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
21 93 0.9500000 lbox
22 92 0.9500000 lbox
23 91 0.9500000 lbox
24 90 0.9500000 lbox
27 84 0.9500000 lbox
28 83 0.9500000 lbox
29 82 0.9500000 lbox
30 79 0.9500000 lbox
31 78 0.9500000 lbox
32 77 0.9500000 lbox
34 75 0.9500000 lbox
35 74 0.9500000 lbox
36 73 0.9500000 lbox
37 72 0.9500000 lbox
38 71 0.9500000 lbox
41 62 0.9500000 lbox
42 61 0.9500000 lbox
43 60 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
showpage
end
%%EOF
