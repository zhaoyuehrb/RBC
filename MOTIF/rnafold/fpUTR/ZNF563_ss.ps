%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUCAAUCAGGCGCACGGCUGGCAGUAGGGUGCCAGGUUCAAAGAGCCCGCGGCGUCUUCACGCCCCUGCGCUCAGCUCUAGACUCAGUCGCUCGCUGAGAGACGCCCUGGAACGUCUGUGUAGCCUCAGUCGCUGAGAGACGCCCUGGAACGUCUGUGGCAGCCUCUGUCACAGUGGGACCCGCACUGGCAGCGGGAGGCAGAGGGAGGACCCUGGAACAUCCCGGAAGCCGGGAA\
) } def
/len { sequence length } bind def

/coor [
[218.46499634 469.36346436]
[216.10873413 484.17724609]
[213.75248718 498.99099731]
[221.97209167 512.76843262]
[216.19065857 527.73358154]
[200.84321594 532.40637207]
[187.70300293 523.20233154]
[186.85006714 507.18200684]
[198.93870544 496.63476562]
[201.29496765 481.82098389]
[203.65121460 467.00720215]
[202.37115479 452.06192017]
[197.53012085 437.86459351]
[182.71031189 436.17980957]
[170.03950500 428.19482422]
[162.05946350 415.44805908]
[160.39837646 400.43936157]
[165.43893433 386.13970947]
[176.23191833 375.40319824]
[171.39088440 361.20587158]
[166.54985046 347.00851440]
[161.70881653 332.81118774]
[150.27799988 323.26205444]
[153.14746094 307.70324707]
[148.30642700 293.50592041]
[143.46537781 279.30856323]
[138.62434387 265.11123657]
[124.81033325 254.27500916]
[128.55343628 236.23632812]
[123.52620697 222.10385132]
[118.49897766 207.97137451]
[113.47174072 193.83889771]
[101.91639709 184.44084167]
[104.58110046 168.84565735]
[99.55387115 154.71318054]
[94.52663422 140.58070374]
[80.67789459 134.81768799]
[67.10884857 141.21151733]
[53.53979874 147.60533142]
[39.97075653 153.99916077]
[26.40170860 160.39299011]
[14.65086365 172.61402893]
[-0.34553719 164.70553589]
[3.10247421 148.10591125]
[20.00788498 146.82394409]
[33.57693100 140.43011475]
[47.14597702 134.03628540]
[60.71502304 127.64246368]
[74.28406525 121.24864197]
[71.24901581 106.55889893]
[56.25711441 106.06606293]
[41.26521301 105.57321930]
[26.26650810 105.37606049]
[11.26683331 105.47463989]
[-3.73284316 105.57322693]
[-18.73251915 105.67181396]
[-33.73219681 105.77039337]
[-47.59875870 114.52542114]
[-61.98622513 106.65568542]
[-62.09400558 90.25688934]
[-47.81122208 82.19871521]
[-33.83078003 90.77072144]
[-18.83110428 90.67213440]
[-3.83142781 90.57354736]
[11.16824818 90.47496796]
[26.16792488 90.37638092]
[28.88282585 88.15475464]
[32.80229568 87.12773895]
[37.35776520 87.84442902]
[41.75805283 90.58132172]
[56.74995422 91.07415771]
[71.74185181 91.56700134]
[77.23071289 77.60732269]
[65.91797638 67.75734711]
[54.60523987 57.90737534]
[43.29250336 48.05739975]
[31.97976875 38.20742035]
[20.66703415 28.35744667]
[6.16799164 33.22827911]
[-8.72405624 30.20772934]
[-20.02957153 20.20514488]
[-24.77866173 5.98184967]
[-21.79087257 -8.61056995]
[-33.10360718 -18.46054649]
[-44.41634369 -28.31052208]
[-60.33235550 -34.15148544]
[-59.12565231 -51.06243134]
[-42.54153824 -54.58430481]
[-34.56636429 -39.62325668]
[-23.25363159 -29.77328110]
[-11.94089603 -19.92330360]
[2.10168886 -24.89033508]
[16.84311485 -22.14327621]
[28.30601311 -12.32144737]
[33.34671402 2.01340961]
[30.51700974 17.04471016]
[41.82974625 26.89468765]
[53.14247894 36.74466324]
[64.45521545 46.59463882]
[75.76795197 56.44461441]
[87.08068848 66.29459381]
[101.42941284 61.92263412]
[105.32756805 47.43801117]
[109.22572327 32.95338440]
[113.12387848 18.46875763]
[117.02203369 3.98413110]
[109.39504242 -9.59772205]
[113.55465698 -24.23166275]
[126.54988098 -31.41913414]
[130.44804382 -45.90375900]
[134.34619141 -60.38838577]
[138.24435425 -74.87300873]
[130.61735535 -88.45486450]
[134.77697754 -103.08880615]
[147.77220154 -110.27627563]
[151.67034912 -124.76090240]
[155.56851196 -139.24552917]
[159.46665955 -153.73014832]
[163.36482239 -168.21478271]
[155.34921265 -179.02482605]
[155.02169800 -192.28392029]
[162.27796936 -203.15296936]
[174.28657532 -207.79383850]
[178.37478638 -222.22596741]
[182.46299744 -236.65811157]
[186.55120850 -251.09024048]
[177.61608887 -263.92370605]
[179.07205200 -279.49334717]
[190.23164368 -290.44769287]
[205.82563782 -291.61441040]
[218.49104309 -282.44262695]
[222.24761963 -267.26296997]
[215.32164001 -253.24279785]
[200.98333740 -247.00204468]
[196.89512634 -232.56990051]
[192.80693054 -218.13777161]
[188.71871948 -203.70562744]
[197.53890991 -189.37625122]
[193.17144775 -172.77674866]
[177.84944153 -164.31661987]
[173.95129395 -149.83200073]
[170.05313110 -135.34738159]
[166.15498352 -120.86274719]
[162.25682068 -106.37812042]
[169.88938904 -93.63922882]
[166.14245605 -78.89422607]
[152.72897339 -70.97485352]
[148.83082581 -56.49023056]
[144.93266296 -42.00560379]
[141.03451538 -27.52097893]
[148.66708374 -14.78208256]
[144.92013550 -0.03708115]
[131.50665283 7.88228559]
[127.60850525 22.36691093]
[123.71035004 36.85153580]
[119.81219482 51.33616257]
[115.91403961 65.82079315]
[126.96394348 75.96473694]
[141.06307983 70.84472656]
[155.16221619 65.72471619]
[169.26133728 60.60470963]
[183.36047363 55.48470306]
[197.45960999 50.36469650]
[211.55873108 45.24468994]
[224.38278198 34.15504837]
[238.58908081 43.40800858]
[233.63043213 59.62059784]
[216.67874146 59.34382248]
[202.57960510 64.46382904]
[188.48048401 69.58383942]
[174.38134766 74.70384216]
[160.28221130 79.82385254]
[146.18309021 84.94385529]
[132.08395386 90.06386566]
[133.56666565 108.34782410]
[125.10550690 125.22752380]
[108.65911102 135.55346680]
[113.68634796 149.68594360]
[118.71357727 163.81842041]
[130.62850952 174.22732544]
[127.60421753 188.81166077]
[132.63145447 202.94413757]
[137.65869141 217.07661438]
[142.68591309 231.20909119]
[153.96951294 237.43179321]
[157.87182617 249.29142761]
[152.82168579 260.27020264]
[157.66271973 274.46752930]
[162.50375366 288.66488647]
[167.34478760 302.86221313]
[179.12187195 313.42681885]
[175.90614319 327.97015381]
[180.74717712 342.16748047]
[185.58822632 356.36483765]
[190.42926025 370.56216431]
[205.53315735 372.46832275]
[218.25979614 380.70965576]
[226.11402893 393.60659790]
[227.58377075 408.57327271]
[222.43078613 422.63583374]
[211.72746277 433.02352905]
[216.56849670 447.22088623]
[234.69868469 428.41577148]
[265.78500366 424.04681396]
[300.43530273 440.25210571]
[310.65164185 451.23510742]
[320.86798096 462.21810913]
[331.08435059 473.20111084]
[346.91125488 477.49536133]
[350.84365845 493.41604614]
[338.83621216 504.58532715]
[323.24114990 499.51321411]
[320.10134888 483.41744995]
[309.88500977 472.43444824]
[299.66864014 461.45144653]
[289.45230103 450.46847534]
[282.84515381 454.01751709]
[289.94326782 467.23178101]
[297.04116821 480.44616699]
[283.82666016 487.54382324]
[276.72900391 474.32989502]
[269.63088989 461.11563110]
[263.02377319 464.66467285]
[266.53982544 479.24676514]
[270.05587769 493.82885742]
[273.57192993 508.41094971]
[277.08798218 522.99304199]
[280.60406494 537.57513428]
[290.19470215 551.55566406]
[279.41543579 564.64172363]
[263.85684204 557.90631104]
[266.02197266 541.09118652]
[262.50588989 526.50909424]
[258.98983765 511.92700195]
[255.47378540 497.34490967]
[251.95773315 482.76281738]
[248.44166565 468.18072510]
[240.94750977 468.47640991]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[12 202]
[13 201]
[19 195]
[20 194]
[21 193]
[22 192]
[24 190]
[25 189]
[26 188]
[27 187]
[29 184]
[30 183]
[31 182]
[32 181]
[34 179]
[35 178]
[36 177]
[37 49]
[38 48]
[39 47]
[40 46]
[41 45]
[50 72]
[51 71]
[52 70]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[83 91]
[84 90]
[85 89]
[102 157]
[103 156]
[104 155]
[105 154]
[106 153]
[109 150]
[110 149]
[111 148]
[112 147]
[115 144]
[116 143]
[117 142]
[118 141]
[119 140]
[123 137]
[124 136]
[125 135]
[126 134]
[158 174]
[159 173]
[160 172]
[161 171]
[162 170]
[163 169]
[164 168]
[205 216]
[206 215]
[207 214]
[208 213]
[223 237]
[224 236]
[225 235]
[226 234]
[227 233]
[228 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
