%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGCCGGGCCGCGGCGGCCUCCGACUGGAUACGGCGGAUCGCCGGGGGCCUGAGGGUGGAGUCCCGGCCGGAGGCAGGCCGGGACUCUGGUGGGUCUAGGCGCGGAUCGGACCCAAGCAGGUCGGCGGCGGCGGCAGGAGAGCGGCCGGGCGUCAGCUCCUCGACCCCCGUGUCGGGCUAGUCCAGCGAGGCGGACGGGCGGCGUGGGCCC\
) } def
/len { sequence length } bind def

/coor [
[84.52518463 525.74707031]
[84.52518463 510.74710083]
[84.52518463 495.74710083]
[84.52518463 480.74710083]
[81.84366608 476.79837036]
[81.61219788 471.12387085]
[84.75076294 465.31039429]
[85.18905640 450.31680298]
[85.62735748 435.32321167]
[78.26525116 422.37527466]
[86.40248871 408.80706787]
[86.84078979 393.81347656]
[87.27909088 378.81988525]
[87.71739197 363.82629395]
[88.15568542 348.83270264]
[73.18274689 340.32772827]
[64.53689575 325.33273315]
[64.67910004 307.93527222]
[73.66040802 292.93075562]
[89.08304596 284.50070190]
[89.08304596 269.50070190]
[89.08304596 254.50070190]
[89.08304596 239.50070190]
[85.94057465 232.81393433]
[89.19423676 224.28193665]
[89.41340637 209.28353882]
[86.36898041 202.55155945]
[89.74695587 194.06800842]
[90.18525696 179.07441711]
[90.62355804 164.08082581]
[91.06185913 149.08723450]
[91.50015259 134.09362793]
[91.93845367 119.10003662]
[88.06063080 116.94849396]
[84.72912598 114.02142334]
[70.75840759 119.48210144]
[56.78768539 124.94277954]
[42.81696701 130.40345764]
[28.84624863 135.86413574]
[16.29511833 147.26174927]
[1.86843467 138.35629272]
[6.43215752 122.02812958]
[23.38557053 121.89341736]
[37.35628891 116.43273926]
[51.32700729 110.97206116]
[65.29772949 105.51138306]
[79.26844788 100.05070496]
[81.62442017 90.40115356]
[88.19866943 82.95510864]
[97.48201752 79.42186737]
[101.16989136 64.88227844]
[104.85776520 50.34268951]
[108.54563904 35.80310440]
[112.23351288 21.26351547]
[115.92138672 6.72392941]
[119.60926056 -7.81565762]
[111.31067657 -13.96415234]
[105.73649597 -23.05600929]
[103.90770721 -33.90403748]
[106.33565521 -44.97870255]
[112.91314697 -54.62372208]
[100.97403717 -63.70434189]
[89.03492737 -72.78496552]
[77.09582520 -81.86558533]
[65.15671539 -90.94620514]
[53.21760559 -100.02683258]
[41.27849579 -109.10745239]
[29.33938789 -118.18807220]
[17.40027809 -127.26869202]
[5.46117020 -136.34931946]
[-6.47793865 -145.42993164]
[-18.41704750 -154.51055908]
[-33.62845993 -150.88468933]
[-47.58852386 -157.93099976]
[-53.70572662 -172.32246399]
[-49.09170914 -187.26383972]
[-35.92506790 -195.70028687]
[-20.42269325 -193.64836121]
[-9.90432930 -182.07693481]
[-9.33642578 -166.44966125]
[2.60268283 -157.36904907]
[14.54179192 -148.28842163]
[26.48089981 -139.20779419]
[38.42000961 -130.12718201]
[50.35911560 -121.04656219]
[62.29822540 -111.96593475]
[74.23733521 -102.88531494]
[86.17644501 -93.80469513]
[98.11555481 -84.72407532]
[110.05465698 -75.64345551]
[121.99376678 -66.56282806]
[136.91537476 -68.09442139]
[146.76084900 -79.41107178]
[150.03117371 -87.93669128]
[156.83381653 -90.81978607]
[166.84359741 -101.99137115]
[176.85337830 -113.16295624]
[186.86315918 -124.33454132]
[196.87294006 -135.50611877]
[200.31953430 -150.94735718]
[214.57521057 -155.26301575]
[224.58499146 -166.43460083]
[234.59477234 -177.60618591]
[238.04135132 -193.04742432]
[252.29702759 -197.36309814]
[262.30682373 -208.53466797]
[258.62149048 -214.87179565]
[256.87582397 -222.30072021]
[257.38882446 -230.21606445]
[260.28793335 -237.92155457]
[265.48410034 -244.69113159]
[272.66635132 -249.83650208]
[281.31741333 -252.77491760]
[286.47058105 -266.86196899]
[291.62374878 -280.94900513]
[296.77694702 -295.03604126]
[289.89453125 -309.26306152]
[295.16680908 -324.16201782]
[309.46578979 -330.89361572]
[324.30816650 -325.46411133]
[330.88821411 -311.09475708]
[325.30209351 -296.31060791]
[310.86398315 -289.88287354]
[305.71081543 -275.79580688]
[300.55761719 -261.70877075]
[295.40444946 -247.62173462]
[307.07312012 -238.19613647]
[319.76147461 -246.19648743]
[332.44982910 -254.19683838]
[345.13818359 -262.19720459]
[353.33837891 -278.68627930]
[370.88867188 -278.68182373]
[383.45877075 -286.86672974]
[396.02886963 -295.05163574]
[408.59896851 -303.23651123]
[415.94168091 -317.25064087]
[430.82913208 -317.71148682]
[443.39923096 -325.89639282]
[446.42068481 -341.40914917]
[459.57287598 -350.17248535]
[475.05282593 -346.98718262]
[483.67660522 -333.74310303]
[480.32785034 -318.29766846]
[466.99328613 -309.81439209]
[451.58413696 -313.32629395]
[439.01403809 -305.14138794]
[432.57043457 -291.71270752]
[416.78387451 -290.66641235]
[404.21374512 -282.48153687]
[391.64364624 -274.29663086]
[379.07354736 -266.11172485]
[376.26794434 -254.34698486]
[365.86520386 -247.42469788]
[353.13851929 -249.50885010]
[340.45016479 -241.50848389]
[327.76181030 -233.50813293]
[315.07348633 -225.50778198]
[300.51632690 -198.42210388]
[273.47839355 -198.52488708]
[263.46862793 -187.35330200]
[260.73800659 -172.71115112]
[245.76635742 -167.59640503]
[235.75657654 -156.42481995]
[225.74678040 -145.25323486]
[223.01615906 -130.61108398]
[208.04452515 -125.49633789]
[198.03474426 -114.32475281]
[188.02496338 -103.15317535]
[178.01518250 -91.98159027]
[168.00540161 -80.81000519]
[158.07749939 -69.56558990]
[148.23202515 -58.24894333]
[160.72270203 -43.08901978]
[161.40809631 -24.17119980]
[150.86911011 -9.31134701]
[134.14884949 -4.12778425]
[130.46096802 10.41180325]
[126.77309418 24.95138931]
[123.08522034 39.49097824]
[119.39735413 54.03056335]
[115.70948029 68.57015228]
[112.02160645 83.10974121]
[120.53219604 102.86861420]
[106.93205261 119.53833771]
[106.49375153 134.53193665]
[106.05545044 149.52552795]
[105.61714935 164.51911926]
[105.17885590 179.51271057]
[104.74055481 194.50631714]
[104.41181183 209.50271606]
[104.19263458 224.50111389]
[104.08304596 239.50070190]
[104.08304596 254.50070190]
[104.08304596 269.50070190]
[104.08304596 284.50070190]
[115.82714844 289.86441040]
[124.63911438 299.23663330]
[129.23616028 311.20144653]
[128.96859741 323.96948242]
[123.91149139 335.64547729]
[114.84819794 344.50967407]
[103.14928436 349.27099609]
[102.71098328 364.26458740]
[102.27268219 379.25817871]
[101.83438110 394.25180054]
[101.39608765 409.24539185]
[108.72684479 423.26574707]
[100.62095642 435.76150513]
[100.18265533 450.75509644]
[99.74435425 465.74868774]
[99.52518463 480.74710083]
[99.52518463 495.74710083]
[99.52518463 510.74710083]
[99.52518463 525.74707031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[3 212]
[4 211]
[7 210]
[8 209]
[9 208]
[11 206]
[12 205]
[13 204]
[14 203]
[15 202]
[20 195]
[21 194]
[22 193]
[23 192]
[25 191]
[26 190]
[28 189]
[29 188]
[30 187]
[31 186]
[32 185]
[33 184]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[50 182]
[51 181]
[52 180]
[53 179]
[54 178]
[55 177]
[56 176]
[61 91]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[69 83]
[70 82]
[71 81]
[72 80]
[92 172]
[93 171]
[95 170]
[96 169]
[97 168]
[98 167]
[99 166]
[101 164]
[102 163]
[103 162]
[105 160]
[106 159]
[113 126]
[114 125]
[115 124]
[116 123]
[127 157]
[128 156]
[129 155]
[130 154]
[132 151]
[133 150]
[134 149]
[135 148]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
