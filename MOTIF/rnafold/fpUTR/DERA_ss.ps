%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:48:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUACCUCGUGGAGAAGACGGGGGAGGGGAGCAGCGAGAUUUCCUUGCGGAGCAAUAUUCCUAGGGUACAGACCUCGUAGCCCGGGCCCGCGACUCCGCCCCGGGAGCGGGCAGGGGCGGGGCGAGCGCUCCAGCUGGCGGGAAGGAGGAAGGGCCGGGCGCGGCGCAGAGGCGGGCGCCUACCAGCCGGCAGCUCCGGAGCUGCCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[112.97711945 165.41090393]
[102.90704346 176.52816772]
[89.22215271 170.38621521]
[90.83428955 155.47375488]
[83.49361420 157.01144409]
[77.47351074 170.75038147]
[71.45341492 184.48931885]
[65.43331146 198.22825623]
[59.41321564 211.96719360]
[53.39311600 225.70613098]
[60.49266815 239.63919067]
[56.92488098 254.86433411]
[44.37436295 264.19271851]
[28.76707649 263.21972656]
[17.47231102 252.40481567]
[15.82310581 236.85444641]
[24.59816742 223.91102600]
[39.65417862 219.68603516]
[45.67427826 205.94709778]
[51.69437790 192.20816040]
[57.71447754 178.46922302]
[63.73457336 164.73028564]
[69.75467682 150.99134827]
[65.86190796 144.58070374]
[53.04048920 152.36602783]
[45.25537491 139.54447937]
[58.07636642 131.75941467]
[54.18359756 125.34877014]
[39.21662140 124.35392761]
[30.44786835 126.90699768]
[24.03675842 123.23242950]
[9.08608532 122.01695251]
[-5.29567385 128.61054993]
[-17.35412407 119.86737823]
[-32.30479431 118.65190125]
[-47.25546646 117.43641663]
[-62.20614243 116.22093964]
[-77.15681458 115.00546265]
[-91.53857422 121.59906006]
[-103.59702301 112.85588837]
[-118.54769135 111.64041138]
[-133.49836731 110.42492676]
[-148.47227478 109.54048920]
[-163.46206665 108.98751068]
[-178.45187378 108.43453979]
[-193.44168091 107.88156891]
[-208.43148804 107.32859802]
[-217.12112427 110.13919067]
[-223.63781738 106.65531158]
[-238.61784363 105.88131714]
[-253.59785461 105.10733032]
[-268.57788086 104.33333588]
[-281.40722656 113.96595001]
[-296.90051270 109.80207062]
[-303.17260742 95.03588104]
[-295.41207886 80.99472809]
[-279.57217407 78.44978333]
[-267.80389404 89.35331726]
[-252.82386780 90.12731171]
[-237.84385681 90.90129852]
[-222.86383057 91.67529297]
[-207.87850952 92.33879089]
[-192.88870239 92.89176941]
[-177.89891052 93.44474030]
[-162.90910339 93.99771118]
[-147.91929626 94.55068207]
[-145.10173035 92.43325806]
[-141.11904907 91.57451630]
[-136.57365417 92.50700378]
[-132.28288269 95.47425842]
[-117.33221436 96.68973541]
[-102.38153839 97.90521240]
[-89.06915283 91.22467804]
[-75.94132996 100.05478668]
[-60.99066162 101.27026367]
[-46.03998947 102.48574829]
[-31.08931541 103.70122528]
[-16.13864326 104.91670990]
[-2.82625604 98.23616791]
[10.30156517 107.06627655]
[25.25223732 108.28176117]
[40.21146774 109.38694763]
[55.17844009 110.38179779]
[72.88866425 75.27973175]
[103.69504547 72.87983704]
[109.71514893 59.14090347]
[115.73524475 45.40196609]
[121.75534821 31.66302872]
[127.77544403 17.92409134]
[119.94779968 6.57971048]
[118.75681305 -7.04293728]
[124.40700531 -19.37670135]
[135.32548523 -27.24487877]
[148.59808350 -28.67925644]
[154.82015991 -42.32791138]
[161.04223633 -55.97656631]
[167.26431274 -69.62522125]
[161.96932983 -84.27448273]
[168.47383118 -98.02751923]
[182.47229004 -102.98520660]
[188.69436646 -116.63385773]
[194.91644287 -130.28251648]
[194.34790039 -134.58377075]
[195.10102844 -138.45341492]
[196.87808228 -141.52917480]
[199.29429626 -143.58255005]
[201.92898560 -144.53565979]
[208.94500732 -157.79368591]
[208.56105042 -173.61022949]
[221.35279846 -181.24047852]
[228.36880493 -194.49851990]
[235.38482666 -207.75654602]
[235.00086975 -223.57310486]
[247.79261780 -231.20333862]
[254.80863953 -244.46138000]
[261.82464600 -257.71942139]
[268.84066772 -270.97744751]
[275.85668945 -284.23550415]
[282.87268066 -297.49353027]
[276.81903076 -311.91180420]
[281.49887085 -326.83270264]
[294.70260620 -335.21099854]
[310.19577026 -333.09072876]
[320.66299438 -321.47302246]
[321.16198730 -305.84341431]
[311.45712280 -293.58169556]
[296.13073730 -290.47750854]
[289.11471558 -277.21948242]
[282.09869385 -263.96142578]
[275.08267212 -250.70339966]
[268.06668091 -237.44535828]
[261.05065918 -224.18733215]
[261.93643188 -209.31909180]
[248.64286804 -200.74053955]
[241.62684631 -187.48249817]
[234.61083984 -174.22447205]
[235.49661255 -159.35621643]
[222.20303345 -150.77767944]
[215.18702698 -137.51963806]
[208.56509399 -124.06044006]
[202.34301758 -110.41178131]
[196.12094116 -96.76313019]
[201.55975342 -82.94448090]
[195.44410706 -69.01417542]
[180.91296387 -63.40314102]
[174.69088745 -49.75448990]
[168.46882629 -36.10583496]
[162.24674988 -22.45718002]
[170.78208923 -8.43404865]
[169.26126099 8.07874298]
[158.08639526 20.55462837]
[141.51438904 23.94418907]
[135.49427795 37.68312836]
[129.47418213 51.42206573]
[123.45408630 65.16100311]
[117.43399048 78.89994049]
[136.56246948 103.04985046]
[123.02410126 139.83270264]
[134.05206299 150.00050354]
[145.08003235 160.16828918]
[156.10800171 170.33607483]
[167.13597107 180.50386047]
[178.16394043 190.67164612]
[189.19190979 200.83943176]
[197.62101746 204.35504150]
[200.30613708 211.23942566]
[211.18295288 221.56875610]
[222.05975342 231.89808655]
[232.93656921 242.22741699]
[248.10774231 239.55508423]
[261.78359985 246.25016785]
[268.81170654 259.55694580]
[266.68206787 274.27435303]
[277.55886841 284.60369873]
[288.43566895 294.93301392]
[299.38836670 305.18185425]
[310.41635132 315.34963989]
[321.51898193 325.43582153]
[332.69570923 335.43988037]
[343.87246704 345.44390869]
[359.01190186 342.04144287]
[373.24652100 348.21844482]
[381.10281372 361.59970093]
[379.55984497 377.03988647]
[369.21096802 388.60189819]
[354.03549194 391.83993530]
[339.86871338 385.50888062]
[332.15805054 372.04315186]
[333.86840820 356.62063599]
[322.69168091 346.61660767]
[311.51495361 336.61257935]
[304.43560791 334.49414062]
[300.24856567 326.37762451]
[289.22058105 316.20983887]
[282.17324829 313.98721313]
[278.10635376 305.80984497]
[267.22955322 295.48049927]
[256.35275269 285.15118408]
[241.76480103 288.03738403]
[228.11311340 281.70526123]
[220.72128296 268.39309692]
[222.60723877 253.10423279]
[211.73042297 242.77490234]
[200.85362244 232.44557190]
[189.97680664 222.11624146]
[179.02412415 211.86740112]
[167.99615479 201.69961548]
[156.96818542 191.53182983]
[145.94021606 181.36404419]
[134.91224670 171.19625854]
[123.88427734 161.02847290]
[112.85630798 150.86067200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[28 83]
[29 82]
[31 81]
[32 80]
[34 78]
[35 77]
[36 76]
[37 75]
[38 74]
[40 72]
[41 71]
[42 70]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[49 61]
[50 60]
[51 59]
[52 58]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[94 148]
[95 147]
[96 146]
[97 145]
[100 142]
[101 141]
[102 140]
[107 139]
[108 138]
[110 136]
[111 135]
[112 134]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[158 212]
[159 211]
[160 210]
[161 209]
[162 208]
[163 207]
[164 206]
[166 205]
[167 204]
[168 203]
[169 202]
[173 198]
[174 197]
[175 196]
[176 194]
[177 193]
[178 191]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
