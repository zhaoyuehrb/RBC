%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EHD4)
} def

/sequence { (\
AGUGCGAGCCGGGGAGAGUCGAACCCGGAGCAGGGUCCCAUCCGAGCGUGGACUGGCGGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 54 0.075162109 ubox
2 9 0.004998934 ubox
2 31 0.021818151 ubox
2 53 0.080711523 ubox
2 60 0.047830514 ubox
3 8 0.006132774 ubox
3 30 0.020481350 ubox
3 32 0.851901486 ubox
3 52 0.081816776 ubox
3 58 0.048348171 ubox
3 59 0.034290680 ubox
3 61 0.233083329 ubox
4 31 0.945637545 ubox
4 36 0.003682329 ubox
4 47 0.003455958 ubox
4 49 0.004875861 ubox
4 57 0.065941294 ubox
4 60 0.258696601 ubox
5 30 0.944231598 ubox
5 35 0.003956807 ubox
5 46 0.003455756 ubox
5 48 0.004970544 ubox
5 50 0.083013262 ubox
5 56 0.066016805 ubox
5 58 0.008668040 ubox
5 59 0.258404832 ubox
6 49 0.081784593 ubox
6 57 0.007678443 ubox
7 54 0.064824731 ubox
8 31 0.026358948 ubox
8 47 0.082847834 ubox
8 53 0.064565791 ubox
8 57 0.245381187 ubox
8 60 0.047078963 ubox
9 28 0.961440877 ubox
9 30 0.019596761 ubox
9 46 0.082828682 ubox
9 51 0.022277649 ubox
9 56 0.245481661 ubox
9 59 0.047104450 ubox
10 21 0.007428843 ubox
10 27 0.964318445 ubox
10 44 0.080168894 ubox
10 50 0.021987482 ubox
10 55 0.245414963 ubox
10 58 0.047051151 ubox
11 20 0.010683618 ubox
11 25 0.003252780 ubox
11 26 0.964455808 ubox
11 39 0.032910431 ubox
11 43 0.079967684 ubox
11 47 0.003739291 ubox
11 49 0.016367693 ubox
11 54 0.238221919 ubox
11 57 0.045924027 ubox
12 19 0.010265092 ubox
12 20 0.020473870 ubox
12 24 0.004383437 ubox
12 25 0.964345889 ubox
12 26 0.020321414 ubox
12 38 0.032985325 ubox
12 39 0.078083844 ubox
12 42 0.074854898 ubox
12 43 0.014993220 ubox
12 53 0.230592339 ubox
12 54 0.009116869 ubox
13 19 0.021806373 ubox
13 20 0.079061595 ubox
13 24 0.963879277 ubox
13 25 0.025868165 ubox
13 26 0.008857037 ubox
13 37 0.033073261 ubox
13 38 0.091080641 ubox
13 39 0.072082148 ubox
13 41 0.052674894 ubox
13 42 0.014419685 ubox
13 43 0.038849604 ubox
13 53 0.012791386 ubox
13 54 0.004366941 ubox
14 19 0.059555386 ubox
14 20 0.150150138 ubox
14 24 0.029989631 ubox
14 25 0.008849541 ubox
14 36 0.015693299 ubox
14 37 0.091311373 ubox
14 38 0.072469694 ubox
14 41 0.012126614 ubox
14 42 0.039185678 ubox
14 53 0.004701541 ubox
15 19 0.130834855 ubox
15 36 0.069694191 ubox
15 41 0.039318786 ubox
15 54 0.003825035 ubox
16 37 0.062928626 ubox
16 42 0.012256176 ubox
16 53 0.003929422 ubox
17 36 0.050203471 ubox
17 41 0.013891476 ubox
17 54 0.017000506 ubox
18 24 0.006848506 ubox
18 31 0.005744172 ubox
18 41 0.009916132 ubox
18 47 0.070127339 ubox
18 49 0.004064501 ubox
18 53 0.017378547 ubox
19 23 0.008256481 ubox
19 28 0.007879174 ubox
19 29 0.007113113 ubox
19 30 0.004432530 ubox
19 34 0.023255641 ubox
19 40 0.012088623 ubox
19 45 0.074947603 ubox
19 46 0.045636281 ubox
19 52 0.017454494 ubox
20 27 0.009757371 ubox
20 28 0.007264508 ubox
20 33 0.023483201 ubox
20 44 0.081983689 ubox
20 48 0.007507273 ubox
20 51 0.016368114 ubox
21 26 0.009915877 ubox
21 37 0.150644688 ubox
21 42 0.052914906 ubox
21 43 0.068795336 ubox
21 47 0.007510752 ubox
22 36 0.106793708 ubox
22 41 0.067935474 ubox
23 36 0.215065140 ubox
23 49 0.010114157 ubox
24 35 0.260051957 ubox
24 48 0.010243154 ubox
24 51 0.003783414 ubox
25 34 0.260133984 ubox
25 35 0.004494961 ubox
25 50 0.003813432 ubox
25 51 0.016469271 ubox
26 33 0.260074375 ubox
26 34 0.004532278 ubox
26 44 0.015240756 ubox
26 50 0.016651865 ubox
27 38 0.024520114 ubox
27 39 0.005338817 ubox
27 43 0.015459595 ubox
27 49 0.015293347 ubox
28 37 0.024814458 ubox
28 38 0.005199392 ubox
28 42 0.015462024 ubox
29 36 0.024460594 ubox
29 41 0.015325277 ubox
30 36 0.007597039 ubox
30 47 0.065439903 ubox
30 57 0.087305810 ubox
30 60 0.035551217 ubox
31 35 0.008214670 ubox
31 46 0.065559667 ubox
31 55 0.005972613 ubox
31 56 0.087330762 ubox
31 59 0.035568874 ubox
32 54 0.005661594 ubox
33 39 0.020439738 ubox
33 43 0.042051330 ubox
33 53 0.004719020 ubox
33 54 0.012085370 ubox
34 38 0.020143607 ubox
34 42 0.042057744 ubox
34 43 0.055084419 ubox
34 53 0.010609372 ubox
34 54 0.098107848 ubox
35 41 0.040547588 ubox
35 42 0.055003579 ubox
35 53 0.100203974 ubox
35 57 0.027557337 ubox
35 60 0.952911947 ubox
36 40 0.037650165 ubox
36 52 0.100964104 ubox
36 56 0.017530681 ubox
36 59 0.953543180 ubox
37 44 0.003542744 ubox
37 51 0.086691362 ubox
37 55 0.017049932 ubox
37 56 0.027365493 ubox
37 58 0.954041712 ubox
37 59 0.007563695 ubox
38 50 0.068499405 ubox
38 51 0.180591858 ubox
38 55 0.027653092 ubox
38 56 0.956031433 ubox
38 58 0.005704371 ubox
38 63 0.008507032 ubox
39 50 0.188817166 ubox
39 55 0.956174786 ubox
39 62 0.008645195 ubox
40 49 0.195594232 ubox
40 54 0.946376926 ubox
41 48 0.187672238 ubox
41 51 0.003565459 ubox
41 52 0.960379493 ubox
42 50 0.004167873 ubox
42 51 0.968439914 ubox
42 56 0.003980634 ubox
42 59 0.009067161 ubox
42 63 0.011585868 ubox
43 50 0.968032602 ubox
43 55 0.004012317 ubox
43 58 0.009061612 ubox
43 62 0.011866599 ubox
44 49 0.684531740 ubox
44 57 0.007423670 ubox
45 54 0.005521311 ubox
46 53 0.006090671 ubox
46 57 0.010561069 ubox
46 60 0.012811736 ubox
47 55 0.005251860 ubox
47 56 0.010839416 ubox
47 58 0.016703140 ubox
47 59 0.010444934 ubox
48 54 0.004398541 ubox
48 57 0.020408273 ubox
49 56 0.020272860 ubox
49 58 0.006770681 ubox
50 57 0.007992320 ubox
53 62 0.045033229 ubox
54 61 0.047355042 ubox
55 60 0.050619261 ubox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
35 60 0.9500000 lbox
36 59 0.9500000 lbox
37 58 0.9500000 lbox
38 56 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
44 49 0.9500000 lbox
showpage
end
%%EOF
