%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGUAGAGUGAGAAGCACCAGCAGGCAGUAACAGCCAACCCUUAGCCAUUGCUAAGGGCAGAGAACUGGUGGAGCCUUUCUCUUACUCCCAGGACUUCAGCACCUAAGACAGCUCCAAAACAAACCAGAACAGUCAGCUCCGGGGGAGCACGACUGGGCGAGAGGCACAGAA\
) } def
/len { sequence length } bind def

/coor [
[59.30724716 112.25225067]
[57.73763275 104.46207428]
[42.77673340 103.37970734]
[27.81583595 102.29734039]
[12.85493755 101.21497345]
[-2.10596085 100.13260651]
[-17.07602119 99.18534851]
[-32.05402374 98.37326050]
[-47.03202438 97.56118011]
[-61.23084641 104.54000092]
[-73.52056122 96.12500763]
[-88.49856567 95.31292725]
[-103.47656250 94.50084686]
[-113.94947815 107.76190948]
[-130.09933472 112.13664246]
[-145.52450562 106.09568787]
[-154.23202515 92.19831848]
[-169.22224426 91.65678406]
[-184.21246338 91.11524200]
[-199.20268250 90.57370758]
[-214.19290161 90.03217316]
[-229.18313599 89.49063873]
[-239.53025818 110.31378937]
[-262.80725098 120.78187561]
[-289.65249634 113.57355499]
[-303.15020752 120.11664581]
[-316.64791870 126.65973663]
[-320.29177856 141.86685181]
[-332.88879395 151.13232422]
[-348.49102783 150.08131409]
[-359.73156738 139.21005249]
[-361.30297852 123.65162659]
[-352.46328735 110.75224304]
[-337.38635254 106.60260010]
[-323.19100952 113.16203308]
[-309.69329834 106.61894226]
[-296.19558716 100.07585144]
[-297.07376099 92.62744141]
[-298.83010864 77.73062134]
[-299.70828247 70.28221130]
[-314.35757446 67.05765533]
[-329.00689697 63.83309555]
[-343.65618896 60.60853958]
[-358.30551147 57.38398361]
[-372.95480347 54.15942764]
[-387.60412598 50.93486786]
[-402.25341797 47.71031189]
[-417.71414185 53.17825699]
[-430.00238037 42.31863022]
[-426.47705078 26.30288506]
[-410.76470947 21.60664940]
[-399.02886963 33.06100464]
[-384.37957764 36.28556061]
[-369.73025513 39.51011658]
[-355.08096313 42.73467636]
[-340.43164062 45.95923233]
[-325.78231812 49.18378830]
[-311.13302612 52.40834427]
[-296.48370361 55.63290024]
[-286.95956421 47.55569839]
[-275.84497070 42.73934937]
[-264.18289185 41.40123749]
[-253.00369263 43.44305420]
[-243.23455811 48.47686768]
[-235.62242126 55.87598419]
[-230.67756653 64.84481812]
[-228.64158630 74.50041199]
[-213.65136719 75.04195404]
[-198.66114807 75.58348846]
[-183.67092896 76.12502289]
[-168.68070984 76.66655731]
[-153.69049072 77.20809937]
[-146.45544434 65.96501923]
[-134.50987244 59.72281647]
[-120.93208313 60.21100235]
[-109.28126526 67.40885925]
[-102.66448212 79.52284241]
[-87.68647766 80.33492279]
[-72.70848083 81.14701080]
[-59.58098221 74.11009979]
[-46.21994019 82.58317566]
[-31.24193764 83.39526367]
[-16.26393700 84.20734406]
[-9.39086151 81.42005157]
[-1.02359462 85.17170715]
[13.93730354 86.25407410]
[28.89820290 87.33644104]
[43.85910034 88.41880798]
[58.81999969 89.50117493]
[68.51649475 68.73090363]
[88.26839447 55.26383972]
[113.10906982 53.69523621]
[136.15373230 65.46092224]
[145.23133850 53.51953125]
[154.30895996 41.57813263]
[163.27839661 29.55527687]
[172.13894653 17.45193863]
[180.88986206 5.26910543]
[189.53044128 -6.99222946]
[183.63107300 -21.24708748]
[186.39744568 -36.42439651]
[196.94682312 -47.68113327]
[211.91294861 -51.42531204]
[226.52017212 -46.46218109]
[236.10737610 -34.37545776]
[237.61534119 -19.02197075]
[230.56286621 -5.30096006]
[217.20036316 2.40924716]
[201.79177856 1.64835262]
[193.15119934 13.90968800]
[191.86398315 21.21388054]
[184.24227905 26.31248093]
[175.38174438 38.41581726]
[173.96286011 45.69558334]
[166.25035095 50.65574646]
[157.17274475 62.59714127]
[148.09512329 74.53853607]
[149.64122009 81.87744904]
[163.33258057 75.74993134]
[177.02394104 69.62240601]
[190.71531677 63.49488449]
[202.92343140 54.77926636]
[217.91079712 55.39473343]
[229.36317444 65.08199310]
[232.45562744 79.75975800]
[225.88528442 93.24421692]
[212.42027283 99.85430908]
[197.73271179 96.80473328]
[182.73294067 96.72158051]
[167.73316956 96.63842773]
[152.73339844 96.55526733]
[154.27947998 103.89418030]
[167.40315247 111.15842438]
[180.52682495 118.42267609]
[193.65049744 125.68692017]
[206.77416992 132.95117188]
[225.15606689 132.17739868]
[233.63723755 147.52406311]
[246.88992310 154.55018616]
[260.14260864 161.57630920]
[273.39529419 168.60243225]
[286.64794922 175.62857056]
[303.47418213 177.70573425]
[306.13613892 194.44940186]
[290.78375244 201.64244080]
[279.62182617 188.88124084]
[266.36917114 181.85511780]
[253.11647034 174.82899475]
[239.86380005 167.80287170]
[226.61111450 160.77673340]
[214.93673706 164.02636719]
[203.82807922 158.25268555]
[199.50991821 146.07484436]
[186.38624573 138.81059265]
[173.26257324 131.54634094]
[160.13891602 124.28209686]
[147.01524353 117.01785278]
[136.20101929 128.78265381]
[123.09808350 135.67207336]
[128.90083313 149.50421143]
[143.14622498 156.88310242]
[146.11755371 172.64860535]
[135.53547668 184.70674133]
[119.51763916 183.80757141]
[110.35157013 170.64085388]
[115.06868744 155.30696106]
[109.26593781 141.47480774]
[101.38237000 142.47477722]
[93.45046997 141.98953247]
[85.74758148 140.03605652]
[78.54305267 136.68264771]
[72.08880615 132.04656982]
[66.61051941 126.28992462]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 89]
[3 88]
[4 87]
[5 86]
[6 85]
[7 83]
[8 82]
[9 81]
[11 79]
[12 78]
[13 77]
[17 72]
[18 71]
[19 70]
[20 69]
[21 68]
[22 67]
[25 37]
[26 36]
[27 35]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[93 117]
[94 116]
[95 115]
[96 113]
[97 112]
[98 110]
[99 109]
[132 157]
[133 156]
[134 155]
[135 154]
[136 153]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
[159 167]
[160 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
