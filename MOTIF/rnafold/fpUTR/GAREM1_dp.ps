%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GAREM1)
} def

/sequence { (\
GCGGGUGGUGCCGGUGGCGGCGGCGGGGGAGCGCGGGACAGGAGGCUUCGGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.056026024 ubox
1 11 0.006617470 ubox
1 15 0.022706080 ubox
1 24 0.083471922 ubox
1 32 0.196570522 ubox
1 34 0.341559693 ubox
1 46 0.060377835 ubox
2 8 0.060344676 ubox
2 10 0.009391786 ubox
2 13 0.021079316 ubox
2 14 0.023420697 ubox
2 23 0.083474268 ubox
2 25 0.083572570 ubox
2 31 0.196711120 ubox
2 33 0.341985846 ubox
2 35 0.140521528 ubox
2 45 0.060586074 ubox
2 50 0.089838764 ubox
3 9 0.009550133 ubox
3 12 0.021560505 ubox
3 24 0.078698728 ubox
3 32 0.341293029 ubox
3 34 0.142226137 ubox
3 47 0.003204134 ubox
3 48 0.015189983 ubox
3 49 0.078751392 ubox
4 11 0.021535275 ubox
4 12 0.023587264 ubox
4 46 0.003588230 ubox
4 47 0.034745214 ubox
4 48 0.061288970 ubox
4 49 0.010819255 ubox
5 11 0.023611205 ubox
5 21 0.023584893 ubox
5 24 0.109021864 ubox
5 32 0.142277171 ubox
5 34 0.007820151 ubox
5 39 0.014814305 ubox
5 46 0.045992137 ubox
5 47 0.036497717 ubox
5 48 0.007878476 ubox
6 10 0.022106223 ubox
6 20 0.023248644 ubox
6 22 0.088934181 ubox
6 23 0.106020693 ubox
6 25 0.759693878 ubox
6 31 0.139054355 ubox
6 33 0.007788732 ubox
6 38 0.014420099 ubox
6 40 0.040360085 ubox
6 45 0.044737544 ubox
6 50 0.033645227 ubox
7 21 0.097101711 ubox
7 24 0.951353835 ubox
7 32 0.007384504 ubox
7 39 0.040380074 ubox
7 47 0.026588613 ubox
7 48 0.003296822 ubox
7 49 0.043746376 ubox
8 18 0.015883645 ubox
8 21 0.066675660 ubox
8 24 0.106147954 ubox
8 39 0.038885796 ubox
8 46 0.029263687 ubox
8 47 0.004906091 ubox
8 48 0.037265635 ubox
9 17 0.015660658 ubox
9 19 0.109101353 ubox
9 20 0.046573046 ubox
9 22 0.961008984 ubox
9 23 0.075077395 ubox
9 25 0.116160686 ubox
9 38 0.038254632 ubox
9 40 0.011083655 ubox
9 45 0.027977686 ubox
10 18 0.119484098 ubox
10 21 0.974850489 ubox
10 24 0.128809358 ubox
10 39 0.010696513 ubox
10 46 0.051782099 ubox
11 17 0.119586010 ubox
11 20 0.974980286 ubox
11 23 0.128839895 ubox
11 26 0.112076141 ubox
11 27 0.012166597 ubox
11 28 0.005885438 ubox
11 36 0.029160111 ubox
11 37 0.011694404 ubox
11 42 0.024797907 ubox
11 45 0.051826746 ubox
11 51 0.009582919 ubox
12 16 0.118718604 ubox
12 19 0.974964146 ubox
12 22 0.128818207 ubox
12 25 0.112375030 ubox
12 26 0.011547708 ubox
12 27 0.005908488 ubox
12 35 0.029149796 ubox
12 36 0.011685507 ubox
12 41 0.024733315 ubox
12 44 0.051797757 ubox
12 50 0.009723662 ubox
13 18 0.970609142 ubox
13 21 0.126193311 ubox
13 24 0.112433600 ubox
13 34 0.027696436 ubox
13 49 0.009704579 ubox
14 21 0.026285686 ubox
14 24 0.011180156 ubox
14 32 0.025217430 ubox
14 34 0.012390490 ubox
14 39 0.023966092 ubox
14 48 0.008067690 ubox
15 20 0.035680304 ubox
15 22 0.111861511 ubox
15 23 0.010284457 ubox
15 31 0.025079168 ubox
15 33 0.013047731 ubox
15 38 0.023909804 ubox
15 40 0.048657714 ubox
16 21 0.112138862 ubox
16 32 0.011552831 ubox
16 39 0.049305716 ubox
16 47 0.009716828 ubox
17 24 0.029999516 ubox
17 32 0.008595275 ubox
17 34 0.006118915 ubox
17 46 0.010356932 ubox
18 23 0.030078521 ubox
18 25 0.026223554 ubox
18 31 0.010275365 ubox
18 33 0.006328350 ubox
18 35 0.013772006 ubox
18 45 0.010351918 ubox
19 24 0.026186828 ubox
19 32 0.005059091 ubox
19 34 0.011168179 ubox
20 32 0.008036862 ubox
20 34 0.045207487 ubox
21 31 0.008807057 ubox
21 33 0.045896117 ubox
21 35 0.031788476 ubox
22 32 0.034620493 ubox
22 34 0.030424965 ubox
23 32 0.050326866 ubox
23 34 0.106888195 ubox
24 31 0.058742557 ubox
24 33 0.107734503 ubox
24 35 0.005181366 ubox
24 50 0.018173480 ubox
25 32 0.107818919 ubox
25 34 0.006729818 ubox
25 49 0.023078848 ubox
26 48 0.019711468 ubox
26 49 0.027802191 ubox
27 47 0.017361832 ubox
27 48 0.019499240 ubox
27 49 0.062233321 ubox
28 46 0.016781257 ubox
28 47 0.012339888 ubox
28 48 0.046676566 ubox
28 49 0.886751116 ubox
29 46 0.010225363 ubox
29 47 0.022103508 ubox
29 48 0.891732782 ubox
29 49 0.071148345 ubox
30 47 0.894463283 ubox
30 48 0.064841028 ubox
31 46 0.895558762 ubox
31 47 0.056565558 ubox
32 45 0.895402209 ubox
32 50 0.017867249 ubox
33 46 0.128728477 ubox
33 49 0.024667909 ubox
34 45 0.129213718 ubox
34 50 0.105387652 ubox
35 47 0.041471421 ubox
35 48 0.054761326 ubox
35 49 0.114518972 ubox
36 46 0.044675671 ubox
36 47 0.080234747 ubox
36 48 0.103095651 ubox
36 49 0.108676425 ubox
37 46 0.091700265 ubox
37 47 0.065901952 ubox
37 48 0.106542884 ubox
37 49 0.168916920 ubox
38 47 0.097514097 ubox
38 48 0.167346061 ubox
40 47 0.192777626 ubox
40 48 0.025696920 ubox
41 46 0.200974266 ubox
41 47 0.035602064 ubox
41 48 0.007081291 ubox
41 49 0.058044355 ubox
42 46 0.036208499 ubox
42 47 0.007466237 ubox
42 48 0.056225952 ubox
42 49 0.082789577 ubox
43 47 0.048026485 ubox
43 48 0.077571665 ubox
46 52 0.029950065 ubox
46 53 0.040367388 ubox
46 56 0.224819135 ubox
47 51 0.027155560 ubox
47 52 0.037569092 ubox
47 53 0.005825078 ubox
47 54 0.013527219 ubox
47 55 0.233290532 ubox
47 56 0.004789952 ubox
48 52 0.005443374 ubox
48 53 0.013450132 ubox
48 54 0.235342588 ubox
48 55 0.007036557 ubox
49 53 0.233699054 ubox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
showpage
end
%%EOF
