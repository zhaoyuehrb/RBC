%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OCA2)
} def

/sequence { (\
CUUACUUCGAAGGCUGUGCUCCGCUCACCAUCCAGAGCGGAGGUGCGGACCUUAAACUCACUCCUGGAGAAAGAUCUGCAAGUGCGCAGAGAGAAGACUGGCAGUGGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.010099198 ubox
1 73 0.033534655 ubox
1 96 0.006406099 ubox
1 101 0.003695497 ubox
1 107 0.011157606 ubox
1 109 0.068918246 ubox
2 10 0.018373737 ubox
2 11 0.012147192 ubox
2 55 0.037238907 ubox
2 56 0.010045858 ubox
2 71 0.003310492 ubox
2 72 0.033669229 ubox
2 95 0.006430946 ubox
2 100 0.003685526 ubox
2 106 0.004523318 ubox
2 107 0.014603428 ubox
2 108 0.069342284 ubox
2 109 0.011287288 ubox
3 9 0.025281401 ubox
3 10 0.014781755 ubox
3 54 0.041097697 ubox
3 55 0.009271618 ubox
3 70 0.003810774 ubox
3 71 0.032096175 ubox
3 94 0.006323017 ubox
3 106 0.018510486 ubox
3 107 0.062678648 ubox
3 108 0.013186177 ubox
4 53 0.033451887 ubox
4 105 0.020266625 ubox
5 12 0.004267710 ubox
5 13 0.003291672 ubox
5 69 0.034638636 ubox
5 93 0.006089038 ubox
5 96 0.019573299 ubox
5 104 0.020432398 ubox
5 107 0.010372187 ubox
5 109 0.122708036 ubox
6 11 0.004466347 ubox
6 12 0.003263353 ubox
6 55 0.099815217 ubox
6 56 0.172228196 ubox
6 68 0.034686723 ubox
6 92 0.005851507 ubox
6 95 0.019694642 ubox
6 103 0.019365493 ubox
6 107 0.003278461 ubox
6 108 0.119194300 ubox
6 109 0.082492912 ubox
7 54 0.100419351 ubox
7 55 0.196504674 ubox
7 67 0.034654889 ubox
7 91 0.005310519 ubox
7 92 0.003287045 ubox
7 94 0.019747957 ubox
7 101 0.014722965 ubox
7 107 0.105092543 ubox
7 108 0.107925496 ubox
8 66 0.034573773 ubox
8 91 0.003671482 ubox
8 93 0.019726954 ubox
8 100 0.014991429 ubox
8 106 0.072461729 ubox
8 107 0.112727068 ubox
9 53 0.073932189 ubox
9 59 0.012293441 ubox
9 63 0.005040185 ubox
9 65 0.033234601 ubox
9 99 0.011571330 ubox
9 105 0.037931580 ubox
10 52 0.054778940 ubox
10 53 0.935895851 ubox
10 58 0.011452145 ubox
10 62 0.004702888 ubox
11 52 0.991325154 ubox
11 53 0.019980042 ubox
12 51 0.999729537 ubox
12 52 0.007773956 ubox
13 50 0.999679872 ubox
13 51 0.007478205 ubox
14 48 0.999679454 ubox
14 89 0.005253401 ubox
15 47 0.999160712 ubox
15 88 0.005259761 ubox
16 46 0.999829039 ubox
16 87 0.005263658 ubox
17 45 0.996424482 ubox
17 86 0.005260288 ubox
18 44 0.883592615 ubox
18 85 0.005240512 ubox
19 42 0.752103954 ubox
19 43 0.658641567 ubox
19 84 0.004424749 ubox
20 41 0.956957631 ubox
20 42 0.285192082 ubox
21 40 0.999924657 ubox
22 39 0.999976635 ubox
23 38 0.999980897 ubox
24 37 0.999989182 ubox
25 36 0.999827430 ubox
26 35 0.999733830 ubox
44 80 0.005485883 ubox
45 79 0.006115780 ubox
46 78 0.006118207 ubox
47 77 0.006114228 ubox
48 76 0.006118719 ubox
49 75 0.006019993 ubox
51 73 0.006119200 ubox
52 72 0.006125446 ubox
53 71 0.005979543 ubox
53 108 0.005266501 ubox
56 83 0.004766765 ubox
56 105 0.005210639 ubox
57 69 0.025977542 ubox
57 73 0.018118087 ubox
57 82 0.005421738 ubox
57 93 0.007683030 ubox
57 104 0.005518860 ubox
57 107 0.177597716 ubox
57 109 0.704076399 ubox
58 67 0.005302157 ubox
58 68 0.026060935 ubox
58 70 0.003725524 ubox
58 72 0.018039851 ubox
58 74 0.008230584 ubox
58 81 0.005385537 ubox
58 92 0.007758680 ubox
58 103 0.005145808 ubox
58 106 0.027659126 ubox
58 107 0.589855977 ubox
58 108 0.670774046 ubox
59 66 0.007706795 ubox
59 67 0.025759162 ubox
59 69 0.003872072 ubox
59 73 0.008794756 ubox
59 84 0.016535091 ubox
59 91 0.007749605 ubox
59 106 0.866979454 ubox
59 107 0.483446416 ubox
60 65 0.007415989 ubox
60 83 0.023054281 ubox
60 105 0.986070142 ubox
61 67 0.003502524 ubox
61 69 0.024574151 ubox
61 82 0.025579461 ubox
61 93 0.005098346 ubox
61 104 0.994695333 ubox
61 107 0.006641297 ubox
61 109 0.070632033 ubox
62 66 0.003224125 ubox
62 68 0.024642531 ubox
62 70 0.004889404 ubox
62 81 0.024376059 ubox
62 92 0.005147709 ubox
62 103 0.977213955 ubox
62 106 0.006998244 ubox
62 107 0.004387776 ubox
62 108 0.071044597 ubox
63 67 0.024446239 ubox
63 69 0.005021870 ubox
63 91 0.005144140 ubox
63 100 0.004158870 ubox
63 101 0.500859267 ubox
63 106 0.008326588 ubox
63 107 0.071007653 ubox
64 73 0.012166067 ubox
64 82 0.015556392 ubox
64 100 0.499476815 ubox
64 101 0.857500633 ubox
64 104 0.023743013 ubox
64 106 0.069783929 ubox
65 72 0.013058667 ubox
65 78 0.008145353 ubox
65 80 0.069788547 ubox
65 81 0.011521760 ubox
65 100 0.855073951 ubox
65 103 0.031107589 ubox
66 77 0.012457879 ubox
66 79 0.075926244 ubox
66 99 0.915741576 ubox
66 102 0.032217980 ubox
67 76 0.013019682 ubox
67 98 0.923655972 ubox
68 75 0.013011645 ubox
68 77 0.075963742 ubox
68 99 0.064866342 ubox
69 76 0.076197608 ubox
69 98 0.066054062 ubox
70 75 0.069642350 ubox
72 99 0.005237472 ubox
73 98 0.005198185 ubox
75 90 0.990725815 ubox
75 92 0.010802120 ubox
75 108 0.022419442 ubox
76 89 0.996093421 ubox
76 91 0.009724988 ubox
76 104 0.013130175 ubox
76 107 0.023971078 ubox
76 109 0.026371451 ubox
77 86 0.006840174 ubox
77 88 0.995906737 ubox
77 90 0.006971778 ubox
77 103 0.013317751 ubox
77 106 0.023860003 ubox
77 108 0.026719275 ubox
78 85 0.014272023 ubox
78 87 0.996111642 ubox
78 102 0.013421673 ubox
78 105 0.024000955 ubox
79 84 0.015314433 ubox
79 86 0.995218079 ubox
79 101 0.013367391 ubox
79 104 0.024051615 ubox
79 106 0.027031458 ubox
80 105 0.026754553 ubox
81 99 0.012903545 ubox
82 98 0.013891660 ubox
82 105 0.006676651 ubox
83 97 0.013807648 ubox
83 103 0.073889447 ubox
84 102 0.083433744 ubox
84 105 0.003749190 ubox
85 101 0.083516158 ubox
85 104 0.004796587 ubox
86 102 0.013783907 ubox
87 100 0.084333498 ubox
87 101 0.011336316 ubox
88 99 0.084810480 ubox
89 98 0.084755490 ubox
90 99 0.011165893 ubox
91 98 0.012492756 ubox
92 99 0.019124454 ubox
93 98 0.019533268 ubox
97 105 0.014978583 ubox
98 104 0.015648009 ubox
98 107 0.005385938 ubox
98 109 0.007953524 ubox
99 103 0.014105105 ubox
99 106 0.005324176 ubox
99 108 0.007990918 ubox
100 105 0.004348306 ubox
101 110 0.010452787 ubox
102 109 0.010577053 ubox
10 53 0.9500000 lbox
11 52 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
14 48 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 44 0.9500000 lbox
19 43 0.9500000 lbox
20 41 0.9500000 lbox
21 40 0.9500000 lbox
22 39 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
58 107 0.9500000 lbox
59 106 0.9500000 lbox
60 105 0.9500000 lbox
61 104 0.9500000 lbox
62 103 0.9500000 lbox
64 101 0.9500000 lbox
65 100 0.9500000 lbox
66 99 0.9500000 lbox
67 98 0.9500000 lbox
75 90 0.9500000 lbox
76 89 0.9500000 lbox
77 88 0.9500000 lbox
78 87 0.9500000 lbox
79 86 0.9500000 lbox
showpage
end
%%EOF
