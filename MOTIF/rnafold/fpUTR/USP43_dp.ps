%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (USP43)
} def

/sequence { (\
CGGCACCAGGAGCCUUAGAGAAGCUGUAGGGCCUGCUGGCCGCUCGUCCGCCUCGCGCCCGGGGGCUCCGCGCCUGGAGCUGCGCCGGCGGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.035692260 ubox
1 42 0.247426880 ubox
1 46 0.119041488 ubox
2 14 0.007000730 ubox
2 37 0.036280565 ubox
2 41 0.923700433 ubox
2 44 0.192772930 ubox
2 45 0.138215280 ubox
2 96 0.090206838 ubox
3 13 0.007013585 ubox
3 36 0.036368945 ubox
3 40 0.922635298 ubox
3 43 0.247543605 ubox
3 44 0.017048840 ubox
3 95 0.090680543 ubox
4 12 0.007009956 ubox
4 35 0.036159145 ubox
4 38 0.080441175 ubox
4 39 0.708069687 ubox
4 42 0.248005045 ubox
4 94 0.090501719 ubox
5 34 0.026130569 ubox
5 37 0.112209653 ubox
6 39 0.697113491 ubox
7 35 0.184748448 ubox
7 38 0.943537851 ubox
8 34 0.184531808 ubox
8 37 0.948323648 ubox
9 33 0.179803956 ubox
9 34 0.252272145 ubox
9 36 0.948276633 ubox
9 37 0.006532305 ubox
10 32 0.126203067 ubox
10 33 0.264406777 ubox
10 36 0.010283339 ubox
11 25 0.003293741 ubox
11 34 0.928137890 ubox
12 24 0.003326547 ubox
12 32 0.741559054 ubox
12 33 0.658420674 ubox
13 30 0.045415829 ubox
13 31 0.998798214 ubox
14 29 0.045650393 ubox
14 30 0.998899778 ubox
14 31 0.003457540 ubox
15 28 0.042788481 ubox
15 29 0.997931636 ubox
16 26 0.048451694 ubox
16 28 0.997242463 ubox
17 25 0.055098078 ubox
17 27 0.995343004 ubox
18 24 0.057561241 ubox
19 25 0.988647755 ubox
20 24 0.970442370 ubox
23 95 0.003363295 ubox
24 94 0.003371176 ubox
25 93 0.003363416 ubox
26 92 0.003304120 ubox
30 41 0.007792019 ubox
31 40 0.007853951 ubox
32 39 0.007858547 ubox
33 38 0.007943867 ubox
35 95 0.003591483 ubox
36 94 0.003622432 ubox
37 93 0.003555182 ubox
38 96 0.005191746 ubox
39 92 0.016581684 ubox
39 95 0.007789371 ubox
40 46 0.005757220 ubox
40 91 0.018666357 ubox
40 94 0.008178194 ubox
41 90 0.018680314 ubox
42 89 0.018668252 ubox
42 92 0.030146848 ubox
42 95 0.927554625 ubox
43 88 0.018393030 ubox
43 91 0.029672079 ubox
43 94 0.943284752 ubox
44 87 0.007813101 ubox
44 90 0.006714021 ubox
44 91 0.008018862 ubox
44 93 0.936715179 ubox
45 87 0.016395353 ubox
45 90 0.031102972 ubox
46 85 0.004825333 ubox
46 86 0.016509347 ubox
46 89 0.031499783 ubox
46 92 0.884004042 ubox
46 95 0.123188395 ubox
47 88 0.010653935 ubox
47 91 0.138461706 ubox
47 94 0.118495787 ubox
48 87 0.010096347 ubox
48 88 0.030157284 ubox
48 90 0.097807629 ubox
48 91 0.988972539 ubox
49 84 0.016305345 ubox
49 87 0.030486649 ubox
49 90 0.994437033 ubox
50 83 0.016566228 ubox
50 85 0.010286105 ubox
50 86 0.030582983 ubox
50 89 0.999279806 ubox
51 82 0.016542453 ubox
51 84 0.009696851 ubox
51 88 0.999241929 ubox
52 87 0.997937161 ubox
52 88 0.010192831 ubox
53 87 0.013516599 ubox
54 82 0.006735519 ubox
54 84 0.967221223 ubox
54 87 0.005816848 ubox
55 80 0.016254516 ubox
55 81 0.006822584 ubox
55 83 0.972376772 ubox
55 85 0.231910287 ubox
55 86 0.008295477 ubox
56 79 0.016271859 ubox
56 82 0.971978806 ubox
56 84 0.232332846 ubox
57 80 0.947794847 ubox
57 81 0.216702458 ubox
57 83 0.230534851 ubox
58 77 0.004196015 ubox
58 79 0.969641521 ubox
58 82 0.230058475 ubox
59 77 0.997398957 ubox
60 76 0.997522474 ubox
61 75 0.996741051 ubox
62 74 0.997457461 ubox
62 75 0.006097104 ubox
63 73 0.997298615 ubox
63 74 0.008508850 ubox
63 75 0.009528417 ubox
63 81 0.006193463 ubox
64 73 0.010233168 ubox
64 74 0.011441916 ubox
64 80 0.004437412 ubox
64 81 0.068792673 ubox
65 71 0.996989816 ubox
65 73 0.011871301 ubox
65 80 0.069449610 ubox
66 70 0.989839494 ubox
66 72 0.012249867 ubox
66 79 0.069605277 ubox
67 78 0.069599621 ubox
68 77 0.069609950 ubox
69 76 0.069575771 ubox
70 75 0.047165885 ubox
79 92 0.003244888 ubox
80 91 0.003252031 ubox
81 90 0.003250628 ubox
82 89 0.003260371 ubox
83 88 0.003259432 ubox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
7 38 0.9500000 lbox
8 37 0.9500000 lbox
9 36 0.9500000 lbox
11 34 0.9500000 lbox
12 33 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
19 25 0.9500000 lbox
20 24 0.9500000 lbox
42 95 0.9500000 lbox
43 94 0.9500000 lbox
44 93 0.9500000 lbox
48 91 0.9500000 lbox
49 90 0.9500000 lbox
50 89 0.9500000 lbox
51 88 0.9500000 lbox
52 87 0.9500000 lbox
54 84 0.9500000 lbox
55 83 0.9500000 lbox
56 82 0.9500000 lbox
57 80 0.9500000 lbox
58 79 0.9500000 lbox
59 77 0.9500000 lbox
60 76 0.9500000 lbox
61 75 0.9500000 lbox
62 74 0.9500000 lbox
63 73 0.9500000 lbox
65 71 0.9500000 lbox
66 70 0.9500000 lbox
showpage
end
%%EOF
