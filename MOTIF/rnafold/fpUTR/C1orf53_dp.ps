%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C1orf53)
} def

/sequence { (\
ACGAGCUGCCCAAGACCGGCUCGCCGCGCCCAGGCCCGCGUUGGUCGCCCCUCCGGGCCCCAGCGCCGGGUGCUCCGCCUCCCAAGGCCGGCGGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 18 0.011897411 ubox
2 23 0.545160877 ubox
2 26 0.004433587 ubox
3 17 0.011987379 ubox
3 22 0.998160100 ubox
3 25 0.004995354 ubox
4 21 0.999032775 ubox
5 20 0.999295344 ubox
5 24 0.005550761 ubox
5 98 0.029460175 ubox
6 14 0.012157918 ubox
6 19 0.999268771 ubox
6 23 0.005568266 ubox
6 97 0.029713526 ubox
7 13 0.012352208 ubox
7 18 0.998105340 ubox
7 96 0.029672632 ubox
8 17 0.993591217 ubox
8 20 0.018398695 ubox
8 95 0.029687261 ubox
9 19 0.018700690 ubox
9 94 0.029605960 ubox
10 18 0.019008142 ubox
10 19 0.006975058 ubox
10 93 0.029352060 ubox
11 18 0.009770285 ubox
16 91 0.028480377 ubox
17 90 0.028522891 ubox
18 25 0.003462419 ubox
18 30 0.006308223 ubox
18 89 0.028527752 ubox
19 24 0.003443699 ubox
19 29 0.006344620 ubox
19 88 0.028515351 ubox
19 95 0.003361697 ubox
19 98 0.008860423 ubox
20 28 0.006357474 ubox
20 87 0.028425529 ubox
20 94 0.003762413 ubox
20 97 0.008915667 ubox
21 86 0.026538158 ubox
21 97 0.010220370 ubox
22 77 0.014998794 ubox
22 86 0.007305301 ubox
22 93 0.005188662 ubox
22 96 0.023522318 ubox
23 35 0.006143881 ubox
23 76 0.015006075 ubox
23 78 0.008095995 ubox
23 92 0.007337960 ubox
23 95 0.054871671 ubox
23 98 0.828971466 ubox
24 34 0.012284865 ubox
24 77 0.008093226 ubox
24 91 0.007411392 ubox
24 94 0.056102345 ubox
24 97 0.977805240 ubox
25 33 0.012877026 ubox
25 90 0.007410297 ubox
25 93 0.056063204 ubox
25 96 0.978992582 ubox
26 73 0.180930205 ubox
26 78 0.020589177 ubox
26 89 0.006833914 ubox
26 92 0.055176811 ubox
26 95 0.977267751 ubox
26 98 0.023183936 ubox
27 34 0.003316038 ubox
27 72 0.181255825 ubox
27 77 0.020620899 ubox
27 90 0.004847938 ubox
27 91 0.054382984 ubox
27 93 0.628976356 ubox
27 94 0.749142793 ubox
27 96 0.055879556 ubox
27 97 0.017197078 ubox
28 35 0.021201484 ubox
28 71 0.181291922 ubox
28 73 0.077696214 ubox
28 76 0.021749057 ubox
28 78 0.009379477 ubox
28 88 0.012739902 ubox
28 89 0.006128980 ubox
28 92 0.888216577 ubox
28 95 0.061015925 ubox
28 98 0.025585785 ubox
29 34 0.025324276 ubox
29 70 0.181358251 ubox
29 72 0.077755753 ubox
29 77 0.009397018 ubox
29 87 0.012946343 ubox
29 91 0.884957838 ubox
29 94 0.061382135 ubox
29 97 0.025720915 ubox
30 69 0.181188328 ubox
30 70 0.003663490 ubox
30 86 0.012916803 ubox
30 90 0.876219241 ubox
30 91 0.390362613 ubox
30 93 0.061626770 ubox
30 94 0.010097536 ubox
30 96 0.025605195 ubox
30 97 0.003499040 ubox
31 68 0.180384590 ubox
31 69 0.003677145 ubox
31 72 0.061084697 ubox
31 90 0.399418241 ubox
31 93 0.013365309 ubox
31 96 0.003878494 ubox
32 71 0.036359388 ubox
32 74 0.398650879 ubox
32 80 0.005099300 ubox
33 59 0.003305462 ubox
33 67 0.169985283 ubox
33 73 0.422275583 ubox
33 74 0.082015320 ubox
33 75 0.052833964 ubox
33 76 0.136934376 ubox
33 79 0.005263232 ubox
33 83 0.009718920 ubox
33 89 0.662018086 ubox
34 58 0.003313305 ubox
34 66 0.156182227 ubox
34 71 0.682843303 ubox
34 73 0.085758272 ubox
34 74 0.020431127 ubox
34 75 0.129398152 ubox
34 78 0.005128633 ubox
34 82 0.009133590 ubox
34 88 0.658924941 ubox
35 57 0.003315190 ubox
35 65 0.142661913 ubox
35 69 0.025684106 ubox
35 70 0.725027493 ubox
35 72 0.076624592 ubox
35 77 0.004112425 ubox
35 87 0.657437726 ubox
36 56 0.003315940 ubox
36 68 0.028924879 ubox
36 69 0.726768793 ubox
36 70 0.064497452 ubox
36 86 0.654462492 ubox
36 87 0.041268047 ubox
37 55 0.003314326 ubox
37 65 0.013282166 ubox
37 68 0.731043217 ubox
37 69 0.062976740 ubox
37 86 0.058269615 ubox
38 54 0.003183390 ubox
38 64 0.031499967 ubox
38 66 0.839346379 ubox
38 67 0.518648358 ubox
39 63 0.031428870 ubox
39 65 0.989479635 ubox
40 64 0.999443853 ubox
41 63 0.999012161 ubox
42 62 0.998908968 ubox
43 59 0.003196576 ubox
43 60 0.034269414 ubox
43 61 0.999368289 ubox
44 59 0.045802645 ubox
44 60 0.997463855 ubox
47 58 0.998551810 ubox
48 56 0.011875509 ubox
48 57 0.999537003 ubox
49 55 0.012199268 ubox
49 56 0.999278046 ubox
49 57 0.026613969 ubox
50 55 0.996275044 ubox
50 56 0.034635018 ubox
50 57 0.005457366 ubox
51 55 0.040820911 ubox
51 56 0.005901276 ubox
67 77 0.092395409 ubox
67 86 0.004314549 ubox
68 76 0.095932297 ubox
68 79 0.038500427 ubox
68 80 0.318349604 ubox
68 81 0.113497819 ubox
68 82 0.119997818 ubox
68 83 0.521528178 ubox
69 75 0.095781649 ubox
69 76 0.030813097 ubox
69 78 0.037731767 ubox
69 79 0.359773829 ubox
69 80 0.074039336 ubox
69 81 0.119740271 ubox
69 82 0.522052213 ubox
69 83 0.020655650 ubox
70 74 0.062046723 ubox
70 75 0.031356993 ubox
70 78 0.360629876 ubox
70 79 0.083455865 ubox
70 80 0.107396955 ubox
70 81 0.521524406 ubox
70 82 0.020592128 ubox
71 77 0.360459392 ubox
71 93 0.035986181 ubox
71 96 0.004692583 ubox
72 76 0.346570548 ubox
72 78 0.516017475 ubox
72 88 0.012942276 ubox
72 89 0.039389597 ubox
72 92 0.127857821 ubox
72 95 0.027509277 ubox
72 98 0.017749337 ubox
73 77 0.512541801 ubox
73 87 0.012901259 ubox
73 91 0.127358742 ubox
73 94 0.027575279 ubox
73 97 0.017975663 ubox
74 86 0.011889579 ubox
74 90 0.091928342 ubox
74 91 0.017594352 ubox
74 93 0.028187507 ubox
74 96 0.017920160 ubox
75 86 0.003243787 ubox
75 87 0.014305828 ubox
75 90 0.101030114 ubox
75 91 0.068186094 ubox
75 93 0.003215414 ubox
75 94 0.040275556 ubox
75 97 0.177572208 ubox
76 86 0.014566928 ubox
76 90 0.077512597 ubox
76 93 0.075024249 ubox
76 96 0.179707277 ubox
77 88 0.720517804 ubox
77 89 0.070708119 ubox
77 92 0.075741340 ubox
77 95 0.179818437 ubox
78 87 0.725508428 ubox
78 91 0.075738711 ubox
78 94 0.179803365 ubox
79 86 0.725333867 ubox
79 87 0.005283020 ubox
79 90 0.075637425 ubox
79 93 0.179699244 ubox
80 85 0.671238065 ubox
80 86 0.005507444 ubox
80 87 0.012397046 ubox
80 91 0.014175104 ubox
80 93 0.003427120 ubox
81 86 0.015514062 ubox
81 87 0.066329298 ubox
81 90 0.014311154 ubox
81 91 0.161358444 ubox
82 86 0.065988330 ubox
82 90 0.160404211 ubox
82 91 0.077494966 ubox
83 90 0.079234059 ubox
87 98 0.004691152 ubox
88 97 0.004813255 ubox
89 96 0.004928956 ubox
90 95 0.004921920 ubox
3 22 0.9500000 lbox
4 21 0.9500000 lbox
5 20 0.9500000 lbox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
23 98 0.9500000 lbox
24 97 0.9500000 lbox
25 96 0.9500000 lbox
26 95 0.9500000 lbox
27 94 0.9500000 lbox
28 92 0.9500000 lbox
29 91 0.9500000 lbox
30 90 0.9500000 lbox
33 89 0.9500000 lbox
34 88 0.9500000 lbox
35 87 0.9500000 lbox
36 86 0.9500000 lbox
38 66 0.9500000 lbox
39 65 0.9500000 lbox
40 64 0.9500000 lbox
41 63 0.9500000 lbox
42 62 0.9500000 lbox
43 61 0.9500000 lbox
44 60 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
68 83 0.9500000 lbox
69 82 0.9500000 lbox
70 81 0.9500000 lbox
72 78 0.9500000 lbox
73 77 0.9500000 lbox
showpage
end
%%EOF
