%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUCCCCACCUCUCCGCGCUGAGCAGCCACGUCGGCGGCGGUCCCUGGUCCAGGGAGGGGCGUGGCAAAGGCCCGUGCGCGGUACGUGUCCCGCCCCUCGCUGCCCGGAGCCCGGAUGAAGAGUAACGCCAUUACCGCCGGAGCCGCCGAGAGCCUUAGCCGACGGAAACUGGACACUGGACCGGCAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[180.93806458 641.13183594]
[179.49035645 626.20190430]
[178.04264832 611.27191162]
[167.08625793 597.57061768]
[174.83262634 580.87188721]
[173.14457703 565.96716309]
[171.45652771 551.06243896]
[169.16970825 536.23779297]
[166.28781128 521.51721191]
[163.40591431 506.79666138]
[150.82221985 502.31448364]
[142.02854919 492.11569214]
[139.40507507 478.79693604]
[143.74275208 465.81970215]
[154.00898743 456.61080933]
[151.36460876 441.84576416]
[148.72023010 427.08068848]
[146.07585144 412.31561279]
[143.31262207 397.57232666]
[140.43070984 382.85177612]
[137.43032837 368.15490723]
[134.31166077 353.48269653]
[131.19297791 338.81048584]
[128.07431030 324.13827515]
[124.95562744 309.46606445]
[121.49815369 306.15380859]
[120.09298706 300.62988281]
[121.98087311 294.27120972]
[119.33649445 279.50613403]
[108.76928711 275.16381836]
[101.54040527 266.16268921]
[99.53980255 254.67103577]
[103.37966919 243.52970886]
[112.21365356 235.54998779]
[110.04631805 220.70739746]
[107.87898254 205.86480713]
[105.71164703 191.02220154]
[103.54431152 176.17961121]
[101.37697601 161.33702087]
[99.20964050 146.49441528]
[97.04230499 131.65182495]
[85.90085602 128.49211121]
[76.63052368 121.55117798]
[70.46156311 111.75017548]
[68.21267700 100.38980103]
[70.18231201 88.97769165]
[76.10906982 79.02836609]
[67.48893738 66.75264740]
[58.86880112 54.47692871]
[50.24866486 42.20121002]
[37.69314575 39.21007156]
[30.76747704 28.79697990]
[32.73403549 16.85287666]
[24.31278038 4.43987989]
[15.89152622 -7.97311640]
[1.74100375 -15.04936409]
[0.99856955 -29.92545319]
[-7.42268467 -42.33845139]
[-15.84393883 -54.75144577]
[-24.26519394 -67.16444397]
[-32.68644714 -79.57743835]
[-41.10770035 -91.99043274]
[-49.52895737 -104.40343475]
[-57.95021057 -116.81642914]
[-72.10073090 -123.89267731]
[-72.84317017 -138.76876831]
[-81.26441956 -151.18176270]
[-89.68567657 -163.59475708]
[-98.10693359 -176.00775146]
[-113.49888611 -176.63540649]
[-125.43043518 -186.09539795]
[-129.45611572 -200.59567261]
[-124.23403168 -214.51931763]
[-132.65528870 -226.93231201]
[-141.07653809 -239.34530640]
[-156.65017700 -240.75801086]
[-167.63548279 -251.88713074]
[-168.84550476 -267.47784424]
[-159.70893860 -280.16867065]
[-144.53976440 -283.96737671]
[-130.50042725 -277.08038330]
[-124.21984863 -262.75949097]
[-128.66354370 -247.76655579]
[-120.24229431 -235.35356140]
[-111.82103729 -222.94056702]
[-96.95323944 -222.64634705]
[-84.96782684 -213.54614258]
[-80.58792877 -198.96293640]
[-85.69393158 -184.42901611]
[-77.27268219 -172.01600647]
[-68.85142517 -159.60301208]
[-60.43017197 -147.19001770]
[-46.88199234 -141.00163269]
[-45.53721237 -125.23767853]
[-37.11595917 -112.82468414]
[-28.69470596 -100.41168976]
[-20.27345085 -87.99869537]
[-11.85219669 -75.58569336]
[-3.43094277 -63.17269897]
[4.99031162 -50.75970459]
[13.41156578 -38.34671021]
[26.95974350 -32.15832138]
[28.30452347 -16.39437103]
[36.72577667 -3.98137426]
[45.14702988 8.43162155]
[61.32706451 15.21205425]
[62.52438354 33.58107758]
[71.14452362 45.85679626]
[79.76465607 58.13251495]
[88.38478851 70.40823364]
[97.13157654 68.33996582]
[106.10765076 68.80252838]
[114.59549713 71.75894165]
[121.91661835 76.97289276]
[134.52947998 68.85404205]
[147.14233398 60.73518753]
[159.75520325 52.61633682]
[165.28669739 45.33004761]
[172.63729858 44.47019196]
[185.37931824 36.55558777]
[187.30163574 32.62845993]
[190.09695435 29.80816650]
[193.30741882 28.23355675]
[196.47732544 27.87958527]
[199.20669556 28.57234955]
[212.43194580 21.49473953]
[225.65721130 14.41712952]
[238.88246155 7.33951902]
[244.88923645 -7.53657484]
[260.30551147 -11.97710037]
[273.30523682 -2.57566667]
[273.91610718 13.45575142]
[261.66955566 23.81922150]
[245.96006775 20.56477737]
[232.73481750 27.64238739]
[219.50955200 34.71999741]
[206.28430176 41.79760742]
[193.29391479 49.29760742]
[180.55189514 57.21221161]
[167.87405396 65.22920227]
[155.26118469 73.34805298]
[142.64833069 81.46690369]
[130.03546143 89.58575439]
[128.93624878 113.16355896]
[111.88490295 129.48448181]
[114.05223846 144.32708740]
[116.21957397 159.16967773]
[118.38690948 174.01226807]
[120.55424500 188.85487366]
[122.72158051 203.69746399]
[124.88891602 218.54006958]
[127.05625153 233.38265991]
[142.66467285 244.10171509]
[145.44772339 262.50808716]
[134.10156250 276.86175537]
[136.74594116 291.62683105]
[139.62783813 306.34738159]
[142.74652100 321.01959229]
[145.86518860 335.69180298]
[148.98387146 350.36401367]
[152.10253906 365.03622437]
[156.95384216 372.79202271]
[155.15127563 379.96987915]
[158.03317261 394.69042969]
[162.75889587 402.52337646]
[160.84091187 409.67123413]
[163.48529053 424.43630981]
[166.12966919 439.20138550]
[168.77404785 453.96643066]
[184.09074402 461.12741089]
[192.04650879 475.85821533]
[189.68289185 492.26461792]
[178.12646484 503.91476440]
[181.00836182 518.63531494]
[183.89025879 533.35589600]
[194.35505676 522.60931396]
[209.29716492 523.92596436]
[217.72142029 536.33691406]
[213.42883301 550.70959473]
[199.57812500 556.46783447]
[186.36125183 549.37438965]
[188.04928589 564.27911377]
[189.73733521 579.18383789]
[199.32672119 587.82281494]
[200.41932678 600.28088379]
[192.97261047 609.82421875]
[194.42031860 624.75415039]
[195.86802673 639.68414307]
[208.86283875 648.38293457]
[213.17628479 663.41387939]
[206.77169800 677.67974854]
[192.67312622 684.44470215]
[177.53749084 680.51446533]
[168.51136780 667.74487305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[5 183]
[6 182]
[7 181]
[8 175]
[9 174]
[10 173]
[15 169]
[16 168]
[17 167]
[18 166]
[19 164]
[20 163]
[21 161]
[22 160]
[23 159]
[24 158]
[25 157]
[28 156]
[29 155]
[34 152]
[35 151]
[36 150]
[37 149]
[38 148]
[39 147]
[40 146]
[41 145]
[47 110]
[48 109]
[49 108]
[50 107]
[53 105]
[54 104]
[55 103]
[57 101]
[58 100]
[59 99]
[60 98]
[61 97]
[62 96]
[63 95]
[64 94]
[66 92]
[67 91]
[68 90]
[69 89]
[73 85]
[74 84]
[75 83]
[114 143]
[115 142]
[116 141]
[117 140]
[119 139]
[120 138]
[125 137]
[126 136]
[127 135]
[128 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
