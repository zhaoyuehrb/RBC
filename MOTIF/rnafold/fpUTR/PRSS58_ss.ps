%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGCUGGCAAAAAGGAGACCAGACAGGAGGCGUCUGUAGAGAUAUCAUGAACUUCAACUUAGCUUUGUUUUCCAGAGACUGGAGCUAAACUGGGCUUUCAACAUCAUC\
) } def
/len { sequence length } bind def

/coor [
[50.50952530 255.37066650]
[42.60192108 256.20703125]
[34.69911575 255.41981506]
[27.13058472 253.04580688]
[20.21104813 249.18792725]
[9.45407104 259.64199829]
[-1.30290627 270.09603882]
[-12.05988312 280.55010986]
[-7.65445042 295.20788574]
[-10.57683086 310.23181152]
[-20.15548325 322.16949463]
[-34.18930435 328.27770996]
[-49.45342255 327.15289307]
[-62.44025803 319.05346680]
[-70.16552734 305.84063721]
[-70.85402679 290.55062866]
[-64.34753418 276.69696045]
[-52.14120483 267.46310425]
[-37.03995514 264.97091675]
[-22.51394653 269.79312134]
[-11.75696945 259.33908081]
[-0.99999267 248.88500977]
[9.75698471 238.43093872]
[3.33919072 215.98703003]
[10.98050976 193.81535339]
[30.03817368 179.96412659]
[53.70185471 179.53622437]
[60.70186234 166.26972961]
[67.70187378 153.00323486]
[74.70188141 139.73674011]
[81.70189667 126.47023773]
[88.70190430 113.20375061]
[85.30445099 98.59356689]
[73.16919708 89.77678680]
[61.03394318 80.96001434]
[48.89868546 72.14323425]
[32.54169464 70.96810913]
[25.62528419 56.09883499]
[35.26446152 42.83164597]
[51.54327011 44.81468964]
[57.71546555 60.00797653]
[69.85072327 68.82475281]
[81.98597717 77.64153290]
[94.12123108 86.45831299]
[82.82645416 76.58774567]
[77.67213440 62.50112534]
[79.92922974 47.67191315]
[89.04117584 35.75669479]
[102.76116180 29.69352150]
[117.70611572 30.97744942]
[130.19090271 39.29188538]
[137.13705444 52.58665848]
[136.83177185 67.58354950]
[129.35034180 80.58463287]
[116.53869629 88.38375092]
[129.99966431 81.76543427]
[143.46064758 75.14711761]
[148.64459229 60.45819473]
[162.39021301 53.93803787]
[176.36190796 58.97065735]
[189.82289124 52.35234070]
[203.28385925 45.73402405]
[216.74484253 39.11570740]
[230.20581055 32.49739075]
[243.66679382 25.87907410]
[257.12777710 19.26075745]
[270.58874512 12.64243984]
[283.95385742 5.83258295]
[297.22033691 -1.16742706]
[310.48684692 -8.16743660]
[323.75332642 -15.16744709]
[337.01980591 -22.16745758]
[348.20684814 -34.90664291]
[363.54504395 -27.68337440]
[360.85009766 -10.94498634]
[344.01983643 -8.90096283]
[330.75332642 -1.90095282]
[317.48684692 5.09905720]
[304.22033691 12.09906673]
[290.95385742 19.09907722]
[286.43960571 25.09310722]
[277.20706177 26.10341644]
[263.74609375 32.72173309]
[250.28511047 39.34004974]
[236.82412720 45.95836639]
[223.36315918 52.57668304]
[209.90217590 59.19499969]
[196.44120789 65.81331635]
[182.98022461 72.43163300]
[178.43377686 86.56900787]
[164.87672424 93.47267914]
[150.07896423 88.60809326]
[136.61798096 95.22640991]
[123.15701294 101.84472656]
[101.96839905 120.20375824]
[94.96838379 133.47024536]
[87.96837616 146.73674011]
[80.96836853 160.00323486]
[73.96836090 173.26972961]
[66.96834564 186.53622437]
[72.66989899 192.23243713]
[77.08939362 198.96035767]
[80.04570007 206.43695068]
[81.41911316 214.34869385]
[81.15623474 222.36463928]
[79.27200317 230.15036011]
[75.84895325 237.38179016]
[71.03354645 243.75878906]
[65.02996826 249.01757812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 23]
[6 22]
[7 21]
[8 20]
[27 100]
[28 99]
[29 98]
[30 97]
[31 96]
[32 95]
[33 44]
[34 43]
[35 42]
[36 41]
[55 94]
[56 93]
[57 92]
[60 89]
[61 88]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[68 80]
[69 79]
[70 78]
[71 77]
[72 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
