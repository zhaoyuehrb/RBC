%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZPBP)
} def

/sequence { (\
GGCUGCAGGUGGGCGCGCGUUGCCUAACGACCUUCCGCGCGGACGGUGGGCAGGCGACGGCGGCGUGUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.153872946 ubox
2 14 0.248751720 ubox
2 16 0.020596687 ubox
2 64 0.039747271 ubox
2 66 0.004128117 ubox
2 68 0.011482076 ubox
3 9 0.158698255 ubox
3 12 0.100786407 ubox
3 13 0.260437462 ubox
3 15 0.020739289 ubox
3 63 0.039781312 ubox
3 65 0.004251989 ubox
3 67 0.011747159 ubox
3 70 0.836187165 ubox
4 8 0.143025597 ubox
4 11 0.098563789 ubox
4 12 0.258422952 ubox
4 15 0.023740359 ubox
4 62 0.039496891 ubox
4 65 0.010844595 ubox
4 69 0.855073010 ubox
5 10 0.049391451 ubox
5 14 0.091807436 ubox
5 16 0.004072740 ubox
5 61 0.038974969 ubox
5 64 0.012806491 ubox
5 66 0.003660627 ubox
5 68 0.881649027 ubox
6 13 0.096258977 ubox
6 15 0.004192282 ubox
6 60 0.038932717 ubox
6 63 0.012801435 ubox
6 65 0.003743687 ubox
6 67 0.884935308 ubox
6 69 0.061254491 ubox
7 66 0.883085394 ubox
7 68 0.061056322 ubox
9 16 0.012438598 ubox
9 18 0.026615599 ubox
9 58 0.009690933 ubox
9 64 0.879921932 ubox
9 66 0.050283677 ubox
9 68 0.007099774 ubox
10 15 0.011937776 ubox
10 17 0.027447301 ubox
10 57 0.009605120 ubox
10 62 0.015722165 ubox
10 63 0.873427374 ubox
10 65 0.067997304 ubox
10 67 0.017409819 ubox
10 69 0.032789380 ubox
11 16 0.028230829 ubox
11 25 0.003252912 ubox
11 61 0.021311312 ubox
11 64 0.074443468 ubox
11 66 0.037073276 ubox
11 68 0.055804183 ubox
12 24 0.003315738 ubox
13 23 0.003316137 ubox
13 61 0.108066510 ubox
13 64 0.050639519 ubox
13 66 0.063934315 ubox
13 68 0.012529051 ubox
14 22 0.003315543 ubox
14 56 0.004199917 ubox
14 59 0.144825353 ubox
14 60 0.101192019 ubox
14 62 0.865158939 ubox
14 63 0.045180630 ubox
14 65 0.065189444 ubox
14 67 0.012934018 ubox
14 69 0.364893811 ubox
15 55 0.004207546 ubox
15 58 0.149766680 ubox
15 61 0.868075080 ubox
15 64 0.065511343 ubox
15 66 0.013199497 ubox
15 68 0.447416239 ubox
16 54 0.004202628 ubox
16 56 0.152546656 ubox
16 59 0.066708934 ubox
16 60 0.867455999 ubox
16 62 0.072093291 ubox
16 63 0.048612251 ubox
16 65 0.013207140 ubox
16 67 0.452843694 ubox
17 55 0.152684058 ubox
17 58 0.066856554 ubox
17 61 0.084409039 ubox
17 64 0.013151094 ubox
17 66 0.453285090 ubox
18 54 0.152507993 ubox
18 56 0.068748907 ubox
18 59 0.869400294 ubox
18 60 0.059922908 ubox
18 63 0.012175883 ubox
18 65 0.453494086 ubox
19 55 0.068675472 ubox
19 58 0.875220782 ubox
19 64 0.453505866 ubox
20 53 0.142321670 ubox
20 54 0.051511407 ubox
20 57 0.875087666 ubox
20 63 0.453254517 ubox
21 52 0.165046601 ubox
21 53 0.023544477 ubox
21 56 0.874520750 ubox
21 62 0.452049459 ubox
22 51 0.167610968 ubox
22 55 0.875286907 ubox
22 61 0.453537753 ubox
23 50 0.167628131 ubox
23 54 0.875308834 ubox
23 60 0.453392723 ubox
24 49 0.167614625 ubox
24 53 0.875202564 ubox
24 59 0.452331951 ubox
24 60 0.011910501 ubox
25 48 0.165687692 ubox
25 52 0.845275559 ubox
25 59 0.016515029 ubox
26 47 0.095003279 ubox
27 47 0.008730451 ubox
28 45 0.102924476 ubox
28 46 0.009653173 ubox
28 48 0.387855228 ubox
28 56 0.448179253 ubox
29 44 0.102932986 ubox
29 47 0.227205761 ubox
29 55 0.451822662 ubox
29 58 0.006802911 ubox
30 47 0.836344753 ubox
31 42 0.092952916 ubox
31 46 0.873821657 ubox
31 49 0.041626258 ubox
31 50 0.132628306 ubox
31 54 0.453342172 ubox
32 41 0.093043677 ubox
32 45 0.872954840 ubox
32 46 0.007270271 ubox
32 48 0.041587641 ubox
32 49 0.132812311 ubox
32 53 0.453379691 ubox
32 54 0.004252492 ubox
33 43 0.045472308 ubox
33 45 0.007785614 ubox
33 48 0.128795236 ubox
33 52 0.447939236 ubox
33 53 0.004443711 ubox
34 42 0.037187737 ubox
34 43 0.863691586 ubox
34 50 0.362967427 ubox
34 52 0.011187986 ubox
35 41 0.036991723 ubox
35 42 0.874340524 ubox
35 46 0.139006372 ubox
35 49 0.370369475 ubox
35 50 0.261287961 ubox
36 41 0.873094084 ubox
36 45 0.139059539 ubox
36 48 0.370651443 ubox
36 49 0.260895659 ubox
37 44 0.136813029 ubox
37 47 0.369986277 ubox
37 51 0.016876930 ubox
38 45 0.061794731 ubox
38 46 0.365626507 ubox
38 48 0.259315474 ubox
38 50 0.016883079 ubox
39 44 0.082214392 ubox
39 47 0.260771432 ubox
40 46 0.260915063 ubox
40 48 0.016840611 ubox
41 47 0.015918472 ubox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
9 64 0.9500000 lbox
10 63 0.9500000 lbox
14 62 0.9500000 lbox
15 61 0.9500000 lbox
16 60 0.9500000 lbox
18 59 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
21 56 0.9500000 lbox
22 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
showpage
end
%%EOF
