%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYP4A22)
} def

/sequence { (\
AGGUGGACAGGGGUGGUCAGAGAGAGGAAGGGGCACUCAGAGAUCCAGCAGGUGCUGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 45 0.070274720 ubox
2 46 0.141724619 ubox
2 56 0.004036434 ubox
2 61 0.628975124 ubox
3 44 0.071021915 ubox
3 45 0.141991237 ubox
3 49 0.179489203 ubox
3 55 0.004350669 ubox
3 58 0.026729676 ubox
3 60 0.634253122 ubox
4 19 0.006881616 ubox
4 43 0.074425213 ubox
4 47 0.681612949 ubox
4 48 0.105398610 ubox
4 50 0.003292661 ubox
4 54 0.003712315 ubox
4 57 0.026452412 ubox
4 59 0.618949042 ubox
5 18 0.008114366 ubox
5 45 0.019715791 ubox
5 46 0.785854011 ubox
5 56 0.025581822 ubox
5 58 0.587287340 ubox
5 61 0.013967256 ubox
6 17 0.004915653 ubox
6 18 0.089825701 ubox
6 38 0.006951712 ubox
6 44 0.026353414 ubox
6 45 0.804042595 ubox
6 55 0.029306218 ubox
6 60 0.014060236 ubox
7 14 0.029443720 ubox
7 17 0.089800824 ubox
7 37 0.005476022 ubox
7 44 0.786335529 ubox
7 53 0.016054833 ubox
8 13 0.030189601 ubox
8 15 0.031655951 ubox
8 16 0.086551491 ubox
8 52 0.016448394 ubox
8 54 0.040862596 ubox
8 57 0.073864338 ubox
9 14 0.038073778 ubox
9 53 0.040459583 ubox
9 56 0.071130305 ubox
10 18 0.007815068 ubox
10 38 0.059533325 ubox
10 45 0.011703405 ubox
10 46 0.013161345 ubox
10 55 0.069764188 ubox
10 61 0.004768239 ubox
11 17 0.007474121 ubox
11 18 0.008303674 ubox
11 37 0.050665611 ubox
11 38 0.984627616 ubox
11 44 0.005129906 ubox
11 45 0.013290394 ubox
11 46 0.030984917 ubox
11 60 0.004561325 ubox
12 17 0.007537967 ubox
12 18 0.003718992 ubox
12 36 0.039815492 ubox
12 37 0.988420982 ubox
12 38 0.048127268 ubox
12 44 0.010777496 ubox
12 45 0.032048083 ubox
12 46 0.010690710 ubox
12 61 0.014157450 ubox
13 34 0.021237673 ubox
13 36 0.991112465 ubox
13 37 0.006788259 ubox
13 44 0.031756757 ubox
13 45 0.010941462 ubox
13 49 0.042743143 ubox
13 60 0.014335748 ubox
14 33 0.021177284 ubox
14 35 0.991079297 ubox
14 43 0.031278262 ubox
14 47 0.044981867 ubox
14 48 0.030771543 ubox
14 50 0.007065634 ubox
14 59 0.014278521 ubox
15 34 0.986220129 ubox
15 45 0.052149737 ubox
15 46 0.050051768 ubox
15 49 0.006667651 ubox
15 58 0.013829010 ubox
16 34 0.103274239 ubox
16 44 0.054374279 ubox
16 45 0.049907296 ubox
16 49 0.010411730 ubox
17 23 0.006656850 ubox
17 25 0.013038685 ubox
17 27 0.006864574 ubox
17 28 0.033757725 ubox
17 31 0.077800039 ubox
17 32 0.959199559 ubox
17 33 0.142922919 ubox
17 41 0.035676251 ubox
17 43 0.068028490 ubox
17 48 0.010439615 ubox
18 22 0.007974922 ubox
18 24 0.018082337 ubox
18 26 0.016625363 ubox
18 27 0.045002784 ubox
18 30 0.095790575 ubox
18 31 0.962653295 ubox
18 32 0.145995462 ubox
18 40 0.035970601 ubox
18 42 0.068220614 ubox
20 38 0.047468082 ubox
20 45 0.027491672 ubox
21 37 0.047522947 ubox
21 44 0.027451523 ubox
22 36 0.047235161 ubox
22 38 0.049648250 ubox
22 45 0.015640118 ubox
23 37 0.049655452 ubox
23 44 0.015616521 ubox
24 36 0.049366937 ubox
24 38 0.096718487 ubox
24 45 0.008940096 ubox
25 37 0.096865899 ubox
25 44 0.008917401 ubox
26 36 0.096834747 ubox
26 37 0.003785210 ubox
26 38 0.003363791 ubox
26 46 0.007680227 ubox
26 61 0.006644730 ubox
27 36 0.005205765 ubox
27 38 0.021397594 ubox
27 45 0.007950992 ubox
27 60 0.006692191 ubox
28 37 0.017136371 ubox
28 44 0.007774507 ubox
29 37 0.016551084 ubox
30 36 0.021004606 ubox
30 37 0.012462601 ubox
30 38 0.014883348 ubox
30 46 0.004700294 ubox
31 36 0.014090012 ubox
31 37 0.014530046 ubox
31 38 0.006499503 ubox
31 45 0.004875045 ubox
31 46 0.003216814 ubox
32 36 0.014257503 ubox
32 37 0.005097698 ubox
32 38 0.003592942 ubox
32 44 0.004591523 ubox
32 45 0.003355378 ubox
32 56 0.023857075 ubox
33 55 0.025024966 ubox
34 54 0.025063586 ubox
35 53 0.025054865 ubox
36 42 0.003812327 ubox
36 52 0.024987554 ubox
37 41 0.003494631 ubox
37 43 0.005685142 ubox
37 51 0.022337556 ubox
38 42 0.008026901 ubox
38 51 0.008505211 ubox
38 57 0.012741499 ubox
39 56 0.020843186 ubox
40 55 0.021430539 ubox
41 56 0.182755484 ubox
42 55 0.187961933 ubox
43 53 0.032830924 ubox
44 52 0.028443471 ubox
45 51 0.028526552 ubox
45 52 0.196452239 ubox
46 51 0.196324597 ubox
46 54 0.013640610 ubox
46 57 0.552858561 ubox
47 53 0.013522285 ubox
47 56 0.562942252 ubox
48 55 0.565488295 ubox
48 58 0.736056088 ubox
49 54 0.564707900 ubox
49 57 0.737044777 ubox
50 56 0.735233292 ubox
51 55 0.719120013 ubox
51 61 0.299042332 ubox
52 58 0.009167387 ubox
52 60 0.301616339 ubox
53 57 0.008602161 ubox
53 59 0.301269643 ubox
54 58 0.296467011 ubox
4 47 0.9500000 lbox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
11 38 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
15 34 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
48 58 0.9500000 lbox
49 57 0.9500000 lbox
50 56 0.9500000 lbox
51 55 0.9500000 lbox
showpage
end
%%EOF
