%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCGGGCGCGCAGCGCAGGGCCGGGCGGCCGAGGCUCCAAUGAGCGCGCGCCGCGUCCGGGGCCGGCUGGUGCGCGAGACGCCGCCGAGAGGUUGGUGGCUAAUGUAACAGUUUGCAAACCGAGAGGAGUUGUGAAGGGCGCGGGUGGGGGGCGCUGCCGGCCUCGUGGGUACGUUCGUGCCGCGUCUGUCCCAGAGCUGGGGCCGCAGGAGCGGAGGCAAGAGGGGCACU\
) } def
/len { sequence length } bind def

/coor [
[445.21871948 668.80224609]
[445.81289673 653.65191650]
[452.95498657 640.20751953]
[444.13821411 628.07226562]
[435.32141113 615.93701172]
[426.42373657 603.86096191]
[417.44552612 591.84460449]
[408.46728516 579.82830811]
[399.48907471 567.81201172]
[390.51086426 555.79571533]
[381.53265381 543.77941895]
[367.71652222 538.21490479]
[365.65469360 522.52862549]
[356.67648315 510.51229858]
[344.76333618 508.47473145]
[337.18365479 498.55172729]
[338.42803955 485.72463989]
[329.61126709 473.58938599]
[320.79446411 461.45413208]
[307.05395508 455.70541382]
[305.20202637 439.99298096]
[296.38525391 427.85772705]
[287.56848145 415.72247314]
[278.75170898 403.58718872]
[269.93490601 391.45193481]
[261.11813354 379.31668091]
[252.30136108 367.18142700]
[245.83776855 363.62347412]
[243.44911194 354.82452393]
[234.79534912 342.57247925]
[226.14158630 330.32043457]
[217.48782349 318.06842041]
[214.76864624 317.45495605]
[212.12641907 315.73645020]
[209.97998047 312.93603516]
[208.73236084 309.22683716]
[208.71966553 304.92218018]
[200.73312378 292.22512817]
[192.74658203 279.52807617]
[184.76004028 266.83102417]
[176.77349854 254.13397217]
[166.54927063 254.63568115]
[156.96107483 250.82637024]
[149.75698853 243.32859802]
[146.28004456 233.44375610]
[147.21823120 222.92633057]
[152.46948242 213.67263794]
[144.99844360 200.66558838]
[131.95007324 193.48300171]
[131.78593445 177.66264343]
[124.31489563 164.65559387]
[116.84385681 151.64852905]
[109.37281799 138.64146423]
[101.90178680 125.63440704]
[94.43074799 112.62734985]
[82.35469818 103.72965240]
[67.71813202 100.44772339]
[53.08157349 97.16578674]
[38.44501114 93.88385773]
[23.78684044 90.69982910]
[9.10771465 87.61385345]
[-5.57141161 84.52787781]
[-20.25053787 81.44190216]
[-33.34728241 90.28784943]
[-48.84700394 87.20010376]
[-57.55399323 74.01056671]
[-54.30254745 58.54435730]
[-41.02169418 49.97730255]
[-25.59072495 53.39208221]
[-17.16456032 66.76277161]
[-2.48543501 69.84874725]
[12.19369125 72.93472290]
[26.87281799 76.02070618]
[34.05317688 74.32379150]
[41.72694397 79.24729156]
[56.36350632 82.52922821]
[71.00006866 85.81115723]
[85.63662720 89.09309387]
[89.71440887 82.79851532]
[75.22121429 78.93235016]
[74.41953278 63.95378876]
[88.41727448 58.56274033]
[97.86997986 70.20936584]
[101.94776154 63.91478729]
[92.96954346 51.89847946]
[83.99132538 39.88217545]
[75.01310730 27.86586761]
[66.03489685 15.84955978]
[57.05667877 3.83325243]
[48.07846451 -8.18305492]
[39.10024643 -20.19936180]
[23.82580566 -26.16790199]
[21.62532425 -42.41874695]
[34.76247025 -52.23441696]
[49.72287369 -45.51739883]
[51.11655426 -29.17757797]
[60.09476852 -17.16127014]
[69.07298279 -5.14496374]
[78.05120087 6.87134361]
[87.02941895 18.88765144]
[96.00763702 30.90395737]
[104.98584747 42.92026520]
[113.96406555 54.93657303]
[121.32360077 53.49183655]
[118.43412781 38.77276993]
[115.54466248 24.05370140]
[112.65518951 9.33463287]
[105.35872650 -3.77114940]
[115.56834412 -14.76039696]
[129.17468262 -8.44630909]
[127.37425995 6.44516373]
[130.26373291 21.16423225]
[133.15319824 35.88330078]
[136.04266357 50.60236740]
[143.40220642 49.15763474]
[147.17138672 34.63891220]
[150.94056702 20.12018967]
[154.70974731 5.60146856]
[158.47892761 -8.91725349]
[162.24810791 -23.43597412]
[166.01728821 -37.95469666]
[160.70681763 -55.59449768]
[173.51522827 -67.60112762]
[177.08998108 -82.16894531]
[171.99418640 -97.75627136]
[183.14523315 -109.78067780]
[199.07186890 -105.87248230]
[203.39015198 -90.05210114]
[191.65779114 -78.59418488]
[188.08303833 -64.02637482]
[194.07876587 -53.53228378]
[191.23190308 -41.37443542]
[180.53601074 -34.18551636]
[176.76683044 -19.66679382]
[172.99765015 -5.14807272]
[169.22846985 9.37064934]
[165.45928955 23.88936996]
[161.69010925 38.40809250]
[157.92092896 52.92681503]
[141.81336975 98.40489197]
[107.43780518 105.15631104]
[114.90884399 118.16336823]
[122.37988281 131.17042542]
[129.85092163 144.17749023]
[137.32196045 157.18455505]
[144.79299927 170.19160461]
[158.37573242 178.30453491]
[158.00549316 193.19454956]
[165.47653198 206.20159912]
[185.13381958 210.43063354]
[195.16502380 227.50268555]
[189.47055054 246.14743042]
[197.45709229 258.84448242]
[205.44363403 271.54153442]
[213.43017578 284.23858643]
[221.41671753 296.93563843]
[229.73985291 309.41464233]
[238.39361572 321.66668701]
[247.04737854 333.91870117]
[255.70115662 346.17074585]
[264.43661499 358.36465454]
[273.25338745 370.49990845]
[282.07019043 382.63516235]
[290.88696289 394.77041626]
[299.70373535 406.90567017]
[308.52050781 419.04092407]
[317.33728027 431.17617798]
[331.70843506 437.79287720]
[332.92971802 452.63732910]
[341.74652100 464.77258301]
[350.56329346 476.90786743]
[367.55908203 484.01467896]
[368.69281006 501.53408813]
[377.67102051 513.55041504]
[392.12933350 519.97436523]
[393.54895020 534.80120850]
[402.52716064 546.81750488]
[411.50540161 558.83380127]
[420.48361206 570.85009766]
[429.46182251 582.86639404]
[438.44003296 594.88269043]
[446.07022095 599.87347412]
[447.45666504 607.12017822]
[456.27346802 619.25543213]
[465.09024048 631.39068604]
[480.08364868 628.75274658]
[494.67611694 632.86938477]
[505.98785400 642.87261963]
[511.81072998 656.73822021]
[511.03921509 671.69531250]
[503.87979126 684.77996826]
[512.69653320 696.91522217]
[521.51330566 709.05047607]
[530.33013916 721.18572998]
[539.14691162 733.32098389]
[547.96368408 745.45623779]
[564.88446045 745.22943115]
[578.46771240 755.04046631]
[583.47052002 770.85784912]
[578.10815430 786.38110352]
[587.08636475 798.39739990]
[596.06457520 810.41369629]
[605.46362305 810.50933838]
[613.64801025 814.84558105]
[618.84918213 822.34277344]
[620.00939941 831.25488281]
[616.99444580 839.57543945]
[625.48364258 851.94207764]
[633.97283936 864.30871582]
[642.46203613 876.67529297]
[657.48492432 883.25146484]
[659.03204346 899.57745361]
[645.51190186 908.85852051]
[630.83282471 901.54705811]
[630.09539795 885.16455078]
[621.60620117 872.79791260]
[613.11700439 860.43127441]
[604.62780762 848.06463623]
[585.30230713 840.79504395]
[584.04827881 819.39190674]
[575.07006836 807.37561035]
[566.09185791 795.35931396]
[552.82580566 796.77661133]
[540.49108887 791.41467285]
[532.34838867 780.57427979]
[530.60748291 767.01947021]
[535.82843018 754.27301025]
[527.01165771 742.13775635]
[518.19488525 730.00250244]
[509.37808228 717.86724854]
[500.56130981 705.73199463]
[491.74453735 693.59674072]
[477.08789062 696.36236572]
[462.62445068 692.47412109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[6 181]
[7 180]
[8 179]
[9 178]
[10 177]
[11 176]
[13 174]
[14 173]
[17 171]
[18 170]
[19 169]
[21 167]
[22 166]
[23 165]
[24 164]
[25 163]
[26 162]
[27 161]
[29 160]
[30 159]
[31 158]
[32 157]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[47 149]
[48 148]
[50 146]
[51 145]
[52 144]
[53 143]
[54 142]
[55 141]
[56 78]
[57 77]
[58 76]
[59 75]
[60 73]
[61 72]
[62 71]
[63 70]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[115 139]
[116 138]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[123 130]
[124 129]
[191 232]
[192 231]
[193 230]
[194 229]
[195 228]
[196 227]
[200 222]
[201 221]
[202 220]
[207 218]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
