%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCACCCUCACUGGGCUCCUAAGCACUCCUCCACACCCUGGCUCUGUCACCAGCCCCAUGGUGAUGUCAUAAACUCCCAGAUGCCCAGUGUGCACCCGGCCACAGAGAAGUGGGUGACUUAGGAGUAUCCUCUCCACUUCUGACCCUUAGUUUCGUCUGUGCACAACUCGCUCAAA\
) } def
/len { sequence length } bind def

/coor [
[84.00881958 154.46296692]
[94.76206970 142.88093567]
[93.96821594 127.90196228]
[93.17436218 112.92298126]
[89.74522400 127.52575684]
[77.40918732 136.05934143]
[62.53536224 134.11782837]
[52.80315018 122.70362854]
[53.23730850 107.70990753]
[63.61368179 96.87797546]
[78.57688904 95.80096436]
[63.91205215 92.64776611]
[49.24721909 89.49457550]
[34.58238220 86.34137726]
[19.91754913 83.18818665]
[5.25271463 80.03498840]
[-9.41211987 76.88179779]
[-24.10420799 73.85813904]
[-38.82240677 70.96424866]
[-44.75418472 84.79872894]
[-53.42948914 97.09270477]
[-64.46713257 107.31019592]
[-77.38300323 115.00638580]
[-91.61128235 119.84695435]
[-106.52927399 121.62261200]
[-121.48460388 120.25815582]
[-135.82379150 115.81566620]
[-148.92077637 108.49163818]
[-160.20426941 98.60832977]
[-169.18266296 86.59958649]
[-175.46546936 72.99176788]
[-178.78024292 58.38070679]
[-178.98448181 43.40559387]
[-193.70268250 40.51170349]
[-208.44584656 37.74780655]
[-223.21281433 35.11412048]
[-237.97979736 32.48043442]
[-252.74678040 29.84674644]
[-267.69107056 35.04082870]
[-278.86212158 25.18908119]
[-293.62911987 22.55539513]
[-308.39608765 19.92170906]
[-321.26913452 28.69227409]
[-336.20742798 25.81098175]
[-344.48947144 13.48446274]
[-359.25646973 10.85077667]
[-374.02343750 8.21709061]
[-389.25210571 14.30147648]
[-401.96652222 3.94406486]
[-399.08715820 -12.20032692]
[-383.57608032 -17.52373314]
[-371.38973999 -6.54988956]
[-356.62277222 -3.91620326]
[-341.85580444 -1.28251684]
[-329.82305908 -9.98589611]
[-314.80972290 -7.52532482]
[-305.76239014 5.15472889]
[-290.99542236 7.78841543]
[-276.22845459 10.42210197]
[-262.34036255 5.03964043]
[-250.11309814 15.07976627]
[-235.34611511 17.71345329]
[-220.57913208 20.34713936]
[-205.81214905 22.98082542]
[-198.65353394 21.05400848]
[-190.80879211 25.79350281]
[-176.09059143 28.68739319]
[-170.23191833 14.90436649]
[-161.63211060 2.63594866]
[-150.66503906 -7.58020353]
[-137.80845642 -15.29575539]
[-123.62306976 -20.17136955]
[-108.72813416 -21.99163055]
[-93.77442169 -20.67455673]
[-79.41579437 -16.27529907]
[-66.28058624 -8.98382473]
[-54.94412613 0.88327694]
[-45.90353012 12.89654255]
[-39.55591583 26.53232765]
[-36.18094635 41.19562912]
[-35.92851639 56.24604416]
[-21.21031761 59.13993835]
[-14.01880455 57.33975983]
[-6.25892591 62.21696091]
[8.40590858 65.37015533]
[23.07074356 68.52335358]
[37.73557663 71.67654419]
[52.40041351 74.82974243]
[67.06524658 77.98293304]
[81.73007965 81.13612366]
[119.08747864 79.66168976]
[133.80567932 76.76779938]
[148.52388000 73.87390900]
[163.24208069 70.98001862]
[177.96028137 68.08612823]
[192.67848206 65.19223785]
[200.51791382 54.92506409]
[212.85812378 52.83075333]
[222.97532654 59.49604416]
[237.74230957 56.86235809]
[252.50927734 54.22867203]
[255.77548218 51.26449203]
[259.44891357 49.67294693]
[263.04208374 49.41190720]
[266.13247681 50.28337860]
[268.40823364 51.96878052]
[283.32418823 50.38330078]
[298.24017334 48.79782486]
[313.15612793 47.21234512]
[321.38348389 32.45021439]
[336.63259888 25.55890465]
[352.82455444 29.06866455]
[363.63275146 41.40588379]
[378.51843262 39.55740738]
[393.40408325 37.70893097]
[408.28976440 35.86045456]
[412.45849609 20.34669876]
[422.23303223 7.64715576]
[436.09613037 -0.31535047]
[451.91448975 -2.34953642]
[467.26681519 1.82619798]
[479.81469727 11.54520607]
[487.65847778 25.29883003]
[502.50921631 23.18793106]
[517.35992432 21.07703400]
[532.21063232 18.96613693]
[541.50048828 6.18043327]
[557.12310791 3.79104567]
[569.80987549 13.21555519]
[572.03399658 28.86256790]
[562.47589111 41.44898987]
[546.80621338 43.50751495]
[534.32153320 33.81686401]
[519.47082520 35.92776108]
[504.62008667 38.03865814]
[489.76937866 40.14955521]
[486.79150391 53.87919998]
[479.28591919 65.79043579]
[468.13867188 74.43875122]
[454.67895508 78.76708984]
[440.52047729 78.23504639]
[427.36816406 72.88625336]
[416.81271362 63.34555817]
[410.13824463 50.74612427]
[395.25256348 52.59460068]
[380.36688232 54.44307709]
[365.48123169 56.29155350]
[360.12704468 68.53981781]
[349.32873535 76.60157013]
[335.84881592 78.28063202]
[323.20266724 73.03116608]
[314.74160767 62.12831879]
[299.82565308 63.71379852]
[284.90966797 65.29927826]
[269.99368286 66.88475800]
[255.14297485 68.99565125]
[240.37599182 71.62934113]
[225.60900879 74.26302338]
[212.83570862 86.27798462]
[195.57237244 79.91043854]
[180.85417175 82.80432892]
[166.13597107 85.69821930]
[151.41777039 88.59210968]
[136.69956970 91.48600006]
[121.98137665 94.37989044]
[136.79853821 96.71479034]
[145.06845093 109.22912598]
[141.40695190 123.77537537]
[128.19787598 130.88314819]
[114.04105377 125.92488098]
[108.15334320 112.12913513]
[108.94719696 127.10810852]
[109.74104309 142.08708191]
[121.65825653 152.46762085]
[122.66149139 168.24003601]
[112.15553284 180.04684448]
[96.37339783 180.88325500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 173]
[3 172]
[4 171]
[11 90]
[12 89]
[13 88]
[14 87]
[15 86]
[16 85]
[17 84]
[18 82]
[19 81]
[33 67]
[34 66]
[35 64]
[36 63]
[37 62]
[38 61]
[40 59]
[41 58]
[42 57]
[45 54]
[46 53]
[47 52]
[91 165]
[92 164]
[93 163]
[94 162]
[95 161]
[96 160]
[99 158]
[100 157]
[101 156]
[106 155]
[107 154]
[108 153]
[109 152]
[113 147]
[114 146]
[115 145]
[116 144]
[123 136]
[124 135]
[125 134]
[126 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
