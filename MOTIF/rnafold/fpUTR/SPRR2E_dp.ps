%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPRR2E)
} def

/sequence { (\
CCUAAACUCCUGGUACUUGAGCACUGAUCUGCUUUGGAGAACCUGAUUCUGAGACUCCAGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.254194316 ubox
1 37 0.009004282 ubox
1 64 0.073714861 ubox
2 12 0.257158316 ubox
2 13 0.192475795 ubox
2 21 0.039248612 ubox
2 36 0.009000570 ubox
2 37 0.011929482 ubox
2 39 0.011048824 ubox
2 53 0.057525993 ubox
2 60 0.004634103 ubox
2 63 0.075468946 ubox
2 64 0.010267780 ubox
3 12 0.194004754 ubox
3 15 0.011339665 ubox
3 19 0.042738024 ubox
3 20 0.037021286 ubox
3 26 0.034994606 ubox
3 36 0.011934632 ubox
3 38 0.010532064 ubox
3 51 0.009970253 ubox
3 52 0.056866844 ubox
3 59 0.004279921 ubox
3 62 0.071371315 ubox
3 63 0.007923322 ubox
4 11 0.187793462 ubox
4 14 0.009985742 ubox
4 18 0.047975327 ubox
4 25 0.034589449 ubox
4 35 0.011990967 ubox
4 48 0.009944568 ubox
4 50 0.011643231 ubox
5 17 0.044087329 ubox
5 18 0.016491335 ubox
5 34 0.008164272 ubox
5 47 0.010350713 ubox
5 48 0.025194577 ubox
6 14 0.169139370 ubox
6 17 0.014241097 ubox
6 33 0.004446165 ubox
6 47 0.027710142 ubox
7 13 0.175426438 ubox
7 21 0.325736915 ubox
7 39 0.427357582 ubox
7 53 0.031054416 ubox
7 60 0.009669391 ubox
7 63 0.118871502 ubox
7 64 0.015001606 ubox
8 12 0.158118749 ubox
8 20 0.327637549 ubox
8 27 0.198513334 ubox
8 38 0.429965467 ubox
8 40 0.016583223 ubox
8 46 0.127351612 ubox
8 52 0.031198572 ubox
8 59 0.007700532 ubox
8 62 0.116514423 ubox
8 63 0.012537855 ubox
8 64 0.006996829 ubox
9 19 0.326963606 ubox
9 26 0.211492708 ubox
9 37 0.430143964 ubox
9 39 0.016901282 ubox
9 45 0.135241925 ubox
9 51 0.031126307 ubox
9 63 0.010429789 ubox
9 64 0.469239901 ubox
10 21 0.126486088 ubox
10 36 0.428890790 ubox
10 37 0.018352154 ubox
10 39 0.027614560 ubox
10 53 0.004870021 ubox
10 60 0.122708256 ubox
10 63 0.479886206 ubox
10 64 0.010874415 ubox
11 19 0.011631512 ubox
11 20 0.127750030 ubox
11 23 0.087458534 ubox
11 26 0.184184939 ubox
11 31 0.004110342 ubox
11 36 0.019887090 ubox
11 38 0.027730743 ubox
11 45 0.010611682 ubox
11 52 0.004867586 ubox
11 59 0.122853775 ubox
11 62 0.479068235 ubox
11 63 0.009578703 ubox
12 18 0.045173214 ubox
12 22 0.094032726 ubox
12 25 0.289164267 ubox
12 29 0.005181292 ubox
12 30 0.004766035 ubox
12 33 0.256141362 ubox
12 34 0.072238785 ubox
12 35 0.082867026 ubox
12 43 0.196753214 ubox
12 56 0.005836649 ubox
12 58 0.122547708 ubox
12 61 0.470838488 ubox
13 17 0.038656240 ubox
13 22 0.223805781 ubox
13 24 0.299564377 ubox
13 28 0.007984677 ubox
13 29 0.005006111 ubox
13 32 0.261404789 ubox
13 33 0.031004524 ubox
13 34 0.049046638 ubox
13 42 0.200979789 ubox
13 43 0.003445731 ubox
13 55 0.011738636 ubox
13 57 0.121429777 ubox
13 61 0.076615241 ubox
14 21 0.220606124 ubox
14 23 0.296625271 ubox
14 26 0.008949787 ubox
14 27 0.008460642 ubox
14 31 0.260465668 ubox
14 36 0.010657938 ubox
14 41 0.198882174 ubox
14 54 0.017123247 ubox
14 60 0.102358486 ubox
15 25 0.009328554 ubox
15 30 0.248586698 ubox
15 35 0.049419670 ubox
16 37 0.165153255 ubox
16 39 0.209758581 ubox
16 53 0.079512485 ubox
16 60 0.032951614 ubox
16 63 0.011503545 ubox
16 64 0.052731845 ubox
17 27 0.071394610 ubox
17 36 0.163774533 ubox
17 37 0.013419982 ubox
17 38 0.209296110 ubox
17 39 0.004103250 ubox
17 40 0.004999360 ubox
17 52 0.079608365 ubox
17 53 0.017208006 ubox
17 54 0.006353513 ubox
17 59 0.023893885 ubox
17 60 0.007261868 ubox
17 62 0.010296320 ubox
17 63 0.053466653 ubox
18 26 0.073510844 ubox
18 36 0.016684360 ubox
18 37 0.197212014 ubox
18 38 0.005069063 ubox
18 39 0.005246345 ubox
18 51 0.075601502 ubox
18 52 0.018405544 ubox
18 53 0.006366146 ubox
18 59 0.005044705 ubox
18 62 0.053725468 ubox
19 25 0.059126583 ubox
19 29 0.212921210 ubox
19 34 0.569037646 ubox
19 35 0.044242929 ubox
19 48 0.003816397 ubox
19 49 0.038467639 ubox
19 50 0.017287568 ubox
19 57 0.007363395 ubox
19 61 0.053394613 ubox
20 28 0.211481787 ubox
20 30 0.015060259 ubox
20 33 0.650882569 ubox
20 34 0.033584258 ubox
20 35 0.031011300 ubox
20 47 0.004034817 ubox
20 48 0.038115649 ubox
20 50 0.016406386 ubox
20 56 0.007387161 ubox
21 29 0.017333806 ubox
21 32 0.661289912 ubox
21 33 0.005045352 ubox
21 34 0.004157409 ubox
21 47 0.036483106 ubox
21 49 0.016469423 ubox
21 55 0.007242483 ubox
22 31 0.661348834 ubox
22 45 0.035445256 ubox
22 51 0.003618136 ubox
23 30 0.595795471 ubox
23 44 0.034314140 ubox
23 50 0.003505038 ubox
24 37 0.006725885 ubox
24 53 0.003670410 ubox
24 60 0.003827849 ubox
24 63 0.009719170 ubox
24 64 0.012074166 ubox
25 36 0.006720834 ubox
25 52 0.003577334 ubox
25 59 0.003845704 ubox
25 62 0.009451744 ubox
25 63 0.005028152 ubox
26 30 0.003250484 ubox
26 35 0.007411162 ubox
26 48 0.014461974 ubox
26 58 0.003741914 ubox
26 61 0.009140371 ubox
27 34 0.007463705 ubox
27 47 0.014835227 ubox
28 37 0.003169760 ubox
28 38 0.024988279 ubox
28 40 0.029002663 ubox
28 46 0.014988984 ubox
28 54 0.003385705 ubox
28 64 0.452084728 ubox
29 36 0.003769836 ubox
29 37 0.025111325 ubox
29 39 0.029624812 ubox
29 45 0.014982881 ubox
29 53 0.003408211 ubox
29 63 0.698128751 ubox
29 64 0.009684982 ubox
30 36 0.024491841 ubox
30 38 0.029516743 ubox
30 52 0.003328728 ubox
30 62 0.699502216 ubox
30 63 0.005793428 ubox
31 35 0.011401663 ubox
31 61 0.699951662 ubox
32 39 0.005745211 ubox
32 53 0.005877821 ubox
32 60 0.697036385 ubox
32 63 0.012961354 ubox
33 38 0.005325079 ubox
33 41 0.005552759 ubox
33 46 0.005332787 ubox
33 52 0.006000077 ubox
33 53 0.007184216 ubox
33 59 0.471554062 ubox
33 60 0.016746564 ubox
33 62 0.013111458 ubox
34 40 0.005933935 ubox
34 41 0.004917906 ubox
34 45 0.006478737 ubox
34 46 0.010999603 ubox
34 51 0.005630978 ubox
34 52 0.015735107 ubox
34 53 0.003898536 ubox
34 54 0.015079207 ubox
34 59 0.080041842 ubox
34 60 0.212918017 ubox
35 39 0.005431860 ubox
35 40 0.006066375 ubox
35 45 0.013814277 ubox
35 51 0.019598861 ubox
35 52 0.004844640 ubox
35 53 0.017185854 ubox
35 59 0.659857440 ubox
36 43 0.038879939 ubox
36 44 0.015662637 ubox
36 49 0.027235207 ubox
36 50 0.029322311 ubox
36 56 0.010958353 ubox
36 57 0.003852848 ubox
36 58 0.853355864 ubox
37 42 0.038726013 ubox
37 43 0.015924604 ubox
37 48 0.027456376 ubox
37 49 0.030312736 ubox
37 55 0.011276887 ubox
37 57 0.854422151 ubox
38 44 0.008890363 ubox
38 47 0.027647308 ubox
38 48 0.029650997 ubox
38 50 0.093974337 ubox
38 56 0.854080677 ubox
39 43 0.009038899 ubox
39 47 0.023184792 ubox
39 48 0.005752599 ubox
39 49 0.098776208 ubox
39 55 0.852485541 ubox
39 57 0.007677600 ubox
40 47 0.011533588 ubox
40 48 0.099562040 ubox
40 56 0.008293658 ubox
41 47 0.088332699 ubox
42 64 0.454469151 ubox
43 53 0.787086468 ubox
43 60 0.021329205 ubox
43 63 0.460324073 ubox
43 64 0.006614947 ubox
44 51 0.053575160 ubox
44 52 0.784530732 ubox
44 59 0.022719087 ubox
44 62 0.461069767 ubox
44 63 0.009259146 ubox
45 50 0.066435587 ubox
45 57 0.017835344 ubox
45 58 0.021417235 ubox
45 61 0.460470869 ubox
46 56 0.019709044 ubox
47 53 0.005212965 ubox
47 54 0.023235232 ubox
47 60 0.032021677 ubox
47 63 0.038049082 ubox
47 64 0.008459386 ubox
48 52 0.004944095 ubox
48 53 0.021724977 ubox
48 54 0.052068746 ubox
48 59 0.023476122 ubox
48 62 0.049861912 ubox
48 63 0.009090573 ubox
48 64 0.066201438 ubox
49 53 0.052281020 ubox
49 60 0.475068800 ubox
49 63 0.108179632 ubox
49 64 0.003327998 ubox
50 59 0.476719190 ubox
50 62 0.108345208 ubox
51 57 0.054083062 ubox
51 58 0.475158045 ubox
51 61 0.108100882 ubox
52 56 0.055963083 ubox
55 63 0.017169419 ubox
55 64 0.009956627 ubox
56 62 0.016512675 ubox
56 63 0.009480706 ubox
56 64 0.004186090 ubox
57 63 0.007277610 ubox
57 64 0.043650180 ubox
58 63 0.044603615 ubox
9 64 0.9500000 lbox
10 63 0.9500000 lbox
11 62 0.9500000 lbox
12 61 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
37 57 0.9500000 lbox
38 56 0.9500000 lbox
39 55 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
showpage
end
%%EOF
