%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLEC4F)
} def

/sequence { (\
CACUGCCAUUGGUCCACGGGACGGCCCUUCCAGGAGCCAGUGGCUGGGAGCAGUGCUGGAGGAUCAAGGAAGCAGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 72 0.178867168 ubox
3 75 0.972411680 ubox
3 77 0.011487456 ubox
4 71 0.159947597 ubox
4 74 0.978246229 ubox
4 76 0.008203988 ubox
5 44 0.004122009 ubox
5 73 0.979451568 ubox
6 43 0.004210021 ubox
6 69 0.262894566 ubox
6 72 0.963160572 ubox
7 42 0.004289134 ubox
7 55 0.007440143 ubox
7 68 0.321972199 ubox
8 41 0.004288413 ubox
8 54 0.007547531 ubox
9 40 0.004285490 ubox
9 53 0.007561850 ubox
9 67 0.980854855 ubox
9 68 0.084562425 ubox
9 69 0.029842397 ubox
9 70 0.017527811 ubox
9 71 0.008995692 ubox
10 39 0.004283820 ubox
10 52 0.007566909 ubox
10 66 0.996246326 ubox
10 67 0.061081800 ubox
10 68 0.012903302 ubox
10 69 0.011161389 ubox
10 70 0.005173389 ubox
11 38 0.004282141 ubox
11 51 0.007571982 ubox
11 65 0.999812228 ubox
12 37 0.004275203 ubox
12 64 0.999283027 ubox
13 35 0.003619946 ubox
13 49 0.007582782 ubox
13 63 0.999783999 ubox
14 34 0.004259403 ubox
14 48 0.007600702 ubox
14 61 0.010714978 ubox
14 62 0.999888384 ubox
15 33 0.004256577 ubox
15 47 0.007593881 ubox
15 61 0.999000497 ubox
17 23 0.004879052 ubox
17 46 0.007649780 ubox
17 58 0.997330948 ubox
18 22 0.004632458 ubox
18 26 0.006484739 ubox
18 27 0.046335870 ubox
18 28 0.006285858 ubox
18 31 0.015501096 ubox
18 45 0.007678363 ubox
18 57 0.997423459 ubox
19 25 0.006639587 ubox
19 26 0.046442869 ubox
19 27 0.006776761 ubox
19 30 0.015510485 ubox
19 31 0.006124005 ubox
19 44 0.007671736 ubox
19 56 0.998078348 ubox
19 57 0.023886747 ubox
20 25 0.046242759 ubox
20 26 0.006778992 ubox
20 29 0.015391782 ubox
20 30 0.006137708 ubox
20 56 0.024962218 ubox
21 28 0.014260296 ubox
21 29 0.005875990 ubox
21 41 0.016761870 ubox
21 54 0.994241106 ubox
22 40 0.017183208 ubox
22 53 0.991215598 ubox
22 55 0.021560284 ubox
22 58 0.012614007 ubox
23 38 0.045465999 ubox
23 54 0.020829343 ubox
23 57 0.012680054 ubox
24 37 0.045675497 ubox
24 51 0.808594856 ubox
24 54 0.007362242 ubox
24 56 0.012708707 ubox
25 34 0.003462319 ubox
25 36 0.045775218 ubox
25 48 0.310301774 ubox
25 50 0.781917935 ubox
25 53 0.009764281 ubox
25 55 0.012690773 ubox
26 33 0.003582799 ubox
26 34 0.051825041 ubox
26 47 0.318571734 ubox
26 48 0.614251918 ubox
27 33 0.051886677 ubox
27 34 0.006677379 ubox
27 36 0.004471132 ubox
27 46 0.319302338 ubox
27 47 0.613224148 ubox
27 48 0.079080976 ubox
27 50 0.531346481 ubox
27 53 0.006034090 ubox
28 32 0.046774585 ubox
28 33 0.006664175 ubox
28 34 0.003392627 ubox
28 35 0.006776281 ubox
28 36 0.014359781 ubox
28 46 0.607005452 ubox
28 47 0.061940783 ubox
28 48 0.010642733 ubox
28 49 0.660184803 ubox
28 50 0.038588168 ubox
28 52 0.005273865 ubox
29 33 0.003862445 ubox
29 34 0.007635745 ubox
29 35 0.019458702 ubox
29 43 0.003439504 ubox
29 46 0.058366103 ubox
29 47 0.013265847 ubox
29 48 0.681824646 ubox
29 49 0.201775968 ubox
29 60 0.010958981 ubox
30 34 0.021731176 ubox
30 42 0.003260161 ubox
30 43 0.627734853 ubox
30 46 0.022892869 ubox
30 47 0.686048732 ubox
30 48 0.204342093 ubox
30 59 0.011512956 ubox
31 42 0.628105436 ubox
31 46 0.686740846 ubox
31 47 0.203615010 ubox
31 58 0.011512280 ubox
32 41 0.624226879 ubox
32 45 0.582590283 ubox
32 57 0.011328284 ubox
33 44 0.458685563 ubox
33 45 0.022008280 ubox
33 56 0.011134265 ubox
34 44 0.020228846 ubox
35 45 0.502248358 ubox
36 44 0.623881531 ubox
37 43 0.651708008 ubox
37 47 0.015727295 ubox
37 59 0.048951463 ubox
38 42 0.647016669 ubox
38 46 0.016129278 ubox
38 55 0.006217804 ubox
38 58 0.049235854 ubox
39 45 0.016198881 ubox
39 54 0.006332868 ubox
39 57 0.049461741 ubox
40 44 0.015865711 ubox
40 51 0.008800598 ubox
40 56 0.049490567 ubox
41 50 0.008785960 ubox
41 52 0.010630827 ubox
41 55 0.043546361 ubox
42 51 0.010321871 ubox
42 54 0.030057629 ubox
43 51 0.036054061 ubox
43 54 0.043408703 ubox
44 50 0.036415098 ubox
44 53 0.054019693 ubox
45 49 0.032807520 ubox
45 52 0.054582742 ubox
46 51 0.054692196 ubox
49 57 0.004016720 ubox
50 56 0.004607892 ubox
51 55 0.004595986 ubox
54 74 0.003340762 ubox
55 73 0.003761070 ubox
56 68 0.004385715 ubox
56 72 0.003766617 ubox
57 66 0.003277884 ubox
57 67 0.003950352 ubox
57 71 0.003724537 ubox
58 65 0.003829667 ubox
59 65 0.003792970 ubox
60 64 0.003324621 ubox
3 75 0.9500000 lbox
4 74 0.9500000 lbox
5 73 0.9500000 lbox
6 72 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 62 0.9500000 lbox
15 61 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
21 54 0.9500000 lbox
22 53 0.9500000 lbox
24 51 0.9500000 lbox
25 50 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
showpage
end
%%EOF
