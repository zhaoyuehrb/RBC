%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GOSR2)
} def

/sequence { (\
GGAAACCGGAAGGGGGGCUGUGAGGACGUGUUCCGAGGAAGCCAGAGCCGGAGCCGUGGCCUGCGGGGCCGGCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.079989757 ubox
1 19 0.007628288 ubox
1 34 0.010324232 ubox
1 43 0.676093057 ubox
1 49 0.008596784 ubox
1 55 0.084598505 ubox
2 6 0.078773392 ubox
2 18 0.008104539 ubox
2 33 0.010321076 ubox
2 42 0.676308046 ubox
2 48 0.008575420 ubox
2 54 0.085656571 ubox
3 32 0.009629973 ubox
4 31 0.007771893 ubox
5 31 0.004334225 ubox
6 13 0.358811164 ubox
6 14 0.330637982 ubox
6 15 0.420299378 ubox
6 16 0.014239509 ubox
6 17 0.004718654 ubox
6 25 0.007503394 ubox
6 30 0.005291838 ubox
6 38 0.673284095 ubox
6 51 0.324461708 ubox
6 72 0.024990504 ubox
7 12 0.359723316 ubox
7 13 0.331371403 ubox
7 14 0.420785097 ubox
7 15 0.021669545 ubox
7 16 0.004909290 ubox
7 24 0.007568425 ubox
7 28 0.006411471 ubox
7 35 0.026452522 ubox
7 37 0.674031125 ubox
7 50 0.325982787 ubox
7 56 0.010157980 ubox
7 71 0.025099705 ubox
7 74 0.010792129 ubox
8 27 0.006439292 ubox
8 34 0.031777460 ubox
8 43 0.057293715 ubox
8 49 0.325995677 ubox
8 55 0.011163193 ubox
8 70 0.024725927 ubox
8 73 0.009036876 ubox
9 33 0.031794707 ubox
9 42 0.057327043 ubox
9 48 0.325836912 ubox
9 54 0.011192937 ubox
9 69 0.024609988 ubox
10 32 0.031397266 ubox
11 19 0.005193558 ubox
11 31 0.027817009 ubox
12 18 0.005345648 ubox
12 19 0.007859566 ubox
12 33 0.003358334 ubox
12 34 0.618345936 ubox
12 43 0.028725357 ubox
12 49 0.013944250 ubox
13 18 0.007987297 ubox
13 33 0.618443696 ubox
13 34 0.073486468 ubox
13 42 0.028719409 ubox
13 43 0.043075007 ubox
13 48 0.014103745 ubox
14 32 0.616039343 ubox
14 33 0.069938356 ubox
14 34 0.307843128 ubox
14 42 0.042722789 ubox
14 43 0.030577166 ubox
14 49 0.006330422 ubox
14 70 0.004126046 ubox
15 31 0.614816796 ubox
15 32 0.064179472 ubox
15 33 0.309003220 ubox
15 34 0.012896139 ubox
15 42 0.029563014 ubox
15 43 0.050491109 ubox
15 48 0.006338832 ubox
15 62 0.023120847 ubox
15 69 0.004071699 ubox
15 70 0.012058402 ubox
16 31 0.056670459 ubox
16 32 0.309554319 ubox
16 33 0.012899409 ubox
16 42 0.037919465 ubox
16 43 0.699175274 ubox
16 49 0.014433476 ubox
16 55 0.004625580 ubox
16 61 0.023310496 ubox
16 69 0.011098226 ubox
16 70 0.137233399 ubox
17 29 0.616277749 ubox
17 31 0.312972415 ubox
17 32 0.009649523 ubox
17 42 0.700890679 ubox
17 48 0.014460499 ubox
17 54 0.004710074 ubox
17 60 0.023322800 ubox
17 69 0.137474729 ubox
17 73 0.009679399 ubox
18 24 0.015532287 ubox
18 25 0.024082897 ubox
18 28 0.616141217 ubox
18 30 0.314278951 ubox
18 37 0.032807292 ubox
18 38 0.039462778 ubox
18 41 0.701716666 ubox
18 47 0.014471595 ubox
18 53 0.004712959 ubox
18 59 0.023331396 ubox
18 66 0.009227790 ubox
18 67 0.009245215 ubox
18 68 0.137558592 ubox
18 72 0.009686659 ubox
19 23 0.014249480 ubox
19 24 0.025328393 ubox
19 28 0.295925857 ubox
19 35 0.009635171 ubox
19 36 0.032630777 ubox
19 37 0.039609893 ubox
19 40 0.696473749 ubox
19 46 0.014415095 ubox
19 52 0.004686130 ubox
19 58 0.023168086 ubox
19 65 0.010048824 ubox
19 66 0.008724220 ubox
19 67 0.137337667 ubox
19 71 0.009248514 ubox
20 27 0.676281077 ubox
20 29 0.008204469 ubox
20 34 0.019262523 ubox
20 57 0.004958866 ubox
20 64 0.011620230 ubox
20 70 0.006804823 ubox
21 26 0.670083163 ubox
21 28 0.025118269 ubox
21 35 0.016147573 ubox
21 44 0.014236079 ubox
21 50 0.003645967 ubox
21 63 0.011271236 ubox
21 65 0.136358058 ubox
22 27 0.030704010 ubox
22 33 0.044206569 ubox
22 34 0.020042379 ubox
22 43 0.014049148 ubox
22 49 0.003237954 ubox
22 62 0.003817499 ubox
22 64 0.135741309 ubox
23 32 0.044322333 ubox
23 62 0.137107874 ubox
24 31 0.041887977 ubox
24 33 0.027363960 ubox
24 34 0.701219222 ubox
24 49 0.003291506 ubox
24 61 0.137689076 ubox
24 62 0.009031565 ubox
25 32 0.026519502 ubox
25 33 0.701365091 ubox
25 48 0.003333059 ubox
25 60 0.137192043 ubox
25 61 0.009801554 ubox
26 31 0.038327926 ubox
26 32 0.667140402 ubox
26 57 0.129911276 ubox
27 35 0.012851060 ubox
27 56 0.138571858 ubox
27 58 0.017555256 ubox
27 71 0.010371785 ubox
27 74 0.005395112 ubox
28 34 0.012804559 ubox
28 42 0.010530426 ubox
28 55 0.138683345 ubox
28 57 0.016576204 ubox
28 70 0.010579721 ubox
28 73 0.005533580 ubox
29 41 0.010138106 ubox
29 56 0.011213796 ubox
29 72 0.005267048 ubox
30 42 0.004289625 ubox
30 54 0.140135536 ubox
30 55 0.008427922 ubox
30 69 0.013748492 ubox
31 39 0.004729333 ubox
31 40 0.012417525 ubox
31 41 0.003631945 ubox
31 53 0.140341652 ubox
31 68 0.013789689 ubox
32 38 0.004940788 ubox
32 39 0.017776459 ubox
32 52 0.140344121 ubox
32 67 0.013799469 ubox
33 37 0.004838786 ubox
33 38 0.018226893 ubox
33 51 0.140424904 ubox
33 66 0.013881029 ubox
34 50 0.140401782 ubox
34 65 0.013883772 ubox
35 49 0.137807063 ubox
35 64 0.013812192 ubox
36 62 0.007141765 ubox
37 43 0.077708936 ubox
37 49 0.023171094 ubox
37 61 0.007156213 ubox
37 62 0.010139629 ubox
38 42 0.076544194 ubox
38 48 0.025550716 ubox
38 60 0.004874023 ubox
38 61 0.010953140 ubox
41 48 0.098116914 ubox
41 60 0.013291141 ubox
42 47 0.097885540 ubox
42 51 0.003958462 ubox
42 59 0.014267700 ubox
43 50 0.003972947 ubox
43 58 0.014270357 ubox
44 57 0.014264115 ubox
44 62 0.003603973 ubox
45 61 0.003627832 ubox
47 54 0.015264944 ubox
47 60 0.003718182 ubox
47 73 0.933142134 ubox
48 53 0.015222613 ubox
48 59 0.003746159 ubox
48 72 0.934291946 ubox
49 58 0.003745801 ubox
49 71 0.934286300 ubox
50 57 0.003473620 ubox
50 70 0.934172064 ubox
51 69 0.931518835 ubox
53 69 0.067812833 ubox
53 73 0.287509963 ubox
54 66 0.928969386 ubox
54 67 0.034005077 ubox
54 68 0.091361892 ubox
54 72 0.287848268 ubox
55 65 0.929293445 ubox
55 66 0.030581199 ubox
55 67 0.091564702 ubox
55 71 0.284381284 ubox
55 74 0.126634969 ubox
56 64 0.929102545 ubox
56 69 0.004064091 ubox
56 70 0.126976789 ubox
56 73 0.137710584 ubox
56 76 0.044796769 ubox
57 63 0.914843267 ubox
57 65 0.093061917 ubox
57 68 0.005525974 ubox
57 71 0.111818484 ubox
57 72 0.097160492 ubox
57 75 0.045113394 ubox
58 62 0.424552790 ubox
58 64 0.094168326 ubox
58 70 0.296855499 ubox
59 69 0.322141924 ubox
59 73 0.045693022 ubox
60 66 0.008648511 ubox
60 67 0.044536158 ubox
60 68 0.320969652 ubox
60 72 0.045699655 ubox
61 65 0.008613788 ubox
61 66 0.053550931 ubox
61 67 0.319492372 ubox
61 71 0.045659679 ubox
62 66 0.287825865 ubox
62 67 0.004172967 ubox
63 69 0.045200659 ubox
64 68 0.044912456 ubox
1 43 0.9500000 lbox
2 42 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
12 34 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
15 31 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
20 27 0.9500000 lbox
21 26 0.9500000 lbox
47 73 0.9500000 lbox
48 72 0.9500000 lbox
49 71 0.9500000 lbox
50 70 0.9500000 lbox
51 69 0.9500000 lbox
54 66 0.9500000 lbox
55 65 0.9500000 lbox
56 64 0.9500000 lbox
57 63 0.9500000 lbox
showpage
end
%%EOF
