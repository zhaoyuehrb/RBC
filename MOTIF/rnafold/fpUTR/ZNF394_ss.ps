%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGAUGACGCGCUUCCGGCACGGGAUGUUUUCGGUUGUUUGACCGAGAGAGUUGUAGGCGCAAAGCUGAGGAAAGGAGAGUGUGGAGAGGGGCCUGGUGUGGUGGGGCCCGGUGUUUGGGACCGGAGGGUGUUGACGGCUGAUGAGUUCCUUGGGUUUGCUCUUUCUUCACCUGAAAAGAAGACUCCAGGAAGGGCAGCACAUGCCGGAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[-182.28346252 189.02676392]
[-196.82728577 192.69790649]
[-211.37109375 196.36906433]
[-214.38015747 206.59790039]
[-221.30920410 214.59521484]
[-230.85844421 218.96310425]
[-241.27847290 218.97503662]
[-250.69068909 214.69583130]
[-257.42593384 206.95794678]
[-272.11602783 209.99121094]
[-286.80615234 213.02447510]
[-301.49624634 216.05773926]
[-316.18637085 219.09100342]
[-330.87646484 222.12425232]
[-345.54412842 225.26426697]
[-360.18856812 228.51086426]
[-374.83300781 231.75746155]
[-378.42758179 248.57493591]
[-397.74484253 259.31817627]
[-411.43023682 265.45907593]
[-413.08688354 280.66442871]
[-422.07266235 292.91809082]
[-435.89355469 298.98843384]
[-450.79751587 297.33688354]
[-462.79290771 288.50646973]
[-476.47830200 294.64733887]
[-490.16366577 300.78823853]
[-499.58679199 313.49710083]
[-514.36621094 311.64837646]
[-528.05157471 317.78924561]
[-541.73693848 323.93014526]
[-555.42236328 330.07101440]
[-569.10772705 336.21191406]
[-582.79309082 342.35278320]
[-596.47845459 348.49368286]
[-610.16381836 354.63455200]
[-623.84924316 360.77545166]
[-633.00585938 374.38015747]
[-649.34539795 372.98281860]
[-656.05908203 358.02090454]
[-646.24047852 344.88595581]
[-629.99011230 347.09005737]
[-616.30474854 340.94918823]
[-602.61938477 334.80828857]
[-588.93395996 328.66741943]
[-575.24859619 322.52651978]
[-561.56323242 316.38565063]
[-547.87786865 310.24475098]
[-534.19244385 304.10388184]
[-520.50708008 297.96298218]
[-512.06286621 285.69335938]
[-496.30456543 287.10284424]
[-482.61917114 280.96197510]
[-468.93380737 274.82107544]
[-467.55584717 259.98980713]
[-458.88153076 247.75820923]
[-445.15875244 241.46919250]
[-430.03125000 242.90280151]
[-417.57110596 251.77368164]
[-403.88574219 245.63279724]
[-404.86679077 230.66491699]
[-419.23663330 226.36286926]
[-436.14447021 227.61248779]
[-442.02578735 211.71134949]
[-428.37420654 201.65798950]
[-414.93457031 211.99302673]
[-400.56472778 216.29507446]
[-411.10873413 205.62622070]
[-413.83615112 190.87626648]
[-407.80453491 177.14239502]
[-395.09817505 169.17065430]
[-380.10809326 169.71583557]
[-368.01440430 178.58956909]
[-362.99639893 192.72532654]
[-366.78814697 207.23817444]
[-378.07962036 217.11302185]
[-363.43518066 213.86642456]
[-348.79074097 210.61982727]
[-342.94305420 206.10491943]
[-333.90972900 207.43414307]
[-319.21963501 204.40089417]
[-304.52951050 201.36763000]
[-289.83941650 198.33436584]
[-275.14929199 195.30110168]
[-260.45919800 192.26783752]
[-250.97227478 175.24916077]
[-231.72940063 170.62890625]
[-215.04225159 181.82524109]
[-200.49842834 178.15408325]
[-185.95460510 174.48294067]
[-181.81359863 156.83723450]
[-169.22685242 143.67716980]
[-151.61903381 138.70852661]
[-133.84490967 143.39111328]
[-120.85081482 156.51123047]
[-106.48097229 152.20918274]
[-92.11112976 147.90713501]
[-77.74128723 143.60508728]
[-63.37144852 139.30303955]
[-49.00160599 135.00099182]
[-34.63176346 130.69894409]
[-20.26191902 126.39689636]
[-14.75773048 121.46903992]
[-5.65172243 122.13841248]
[8.77916908 118.04581451]
[15.79122257 104.95510101]
[30.36789703 100.59905243]
[44.05109406 108.04270172]
[58.48198700 103.95009613]
[72.91287994 99.85749817]
[87.34377289 95.76490021]
[99.24407196 86.63347626]
[106.93220520 73.75354767]
[114.62034607 60.87362289]
[110.97180939 45.73011017]
[118.95214844 32.77755356]
[133.41165161 29.39255333]
[141.09979248 16.51262474]
[148.78793335 3.63269758]
[156.47607422 -9.24723053]
[156.90551758 -25.06260681]
[170.07250977 -32.02533340]
[177.76065063 -44.90526199]
[185.44879150 -57.78519058]
[185.14613342 -74.18154144]
[199.33215332 -82.40888214]
[213.41346741 -74.00362396]
[212.90444946 -57.61237717]
[198.32872009 -50.09705353]
[190.64057922 -37.21712494]
[182.95243835 -24.33719635]
[183.07290649 -9.44307899]
[169.35600281 -1.55909264]
[161.66786194 11.32083511]
[153.97972107 24.20076370]
[146.29158020 37.08069229]
[150.17459106 51.41448975]
[142.56120300 64.58609009]
[127.50027466 68.56175995]
[119.81213379 81.44168854]
[112.12400055 94.32161713]
[114.99412537 101.25070953]
[124.12563324 89.35047913]
[138.99726868 91.30858612]
[144.73722839 105.16690063]
[135.60545349 117.06694031]
[120.73437500 115.10890198]
[123.60449982 122.03800201]
[138.14831543 125.70915222]
[152.69213867 129.38029480]
[167.23596191 133.05145264]
[181.77976990 136.72259521]
[197.05390930 132.59811401]
[207.50045776 143.21501160]
[222.04428101 146.88616943]
[236.58810425 150.55731201]
[251.13191223 154.22846985]
[265.67575073 157.89961243]
[280.21954346 161.57077026]
[295.49368286 157.44627380]
[305.94024658 168.06318665]
[320.48406982 171.73432922]
[329.56674194 170.80039978]
[335.21194458 175.56608582]
[349.70083618 179.44836426]
[364.18969727 183.33065796]
[378.67858887 187.21293640]
[391.38351440 178.09597778]
[406.97232056 179.33009338]
[418.08447266 190.33256531]
[419.47311401 205.90837097]
[410.48260498 218.70307922]
[395.35797119 222.67543030]
[381.24063110 215.94979858]
[374.79632568 201.70182800]
[360.30743408 197.81953430]
[345.81854248 193.93725586]
[331.32965088 190.05496216]
[316.81292725 186.27815247]
[302.26910400 182.60699463]
[288.03524780 186.99407959]
[276.54840088 176.11457825]
[262.00457764 172.44343567]
[247.46076965 168.77227783]
[232.91694641 165.10113525]
[218.37313843 161.42997742]
[203.82931519 157.75883484]
[189.59545898 162.14591980]
[178.10862732 151.26641846]
[163.56480408 147.59527588]
[149.02098083 143.92411804]
[134.47717285 140.25297546]
[119.93334961 136.58181763]
[91.43637085 110.19579315]
[77.00547791 114.28839111]
[62.57458496 118.38098907]
[48.14369583 122.47358704]
[40.40543747 135.99235535]
[25.71216011 139.93725586]
[12.87176895 132.47669983]
[-1.55912268 136.56930542]
[-15.95987034 140.76673889]
[-30.32971382 145.06878662]
[-44.69955444 149.37083435]
[-59.06939697 153.67288208]
[-73.43923950 157.97492981]
[-87.80908203 162.27697754]
[-102.17892456 166.57902527]
[-116.54876709 170.88107300]
[-117.79855347 182.82830811]
[-122.98724365 193.62393188]
[-131.48652649 202.01455688]
[-142.28527832 207.03474426]
[-154.10977173 208.11808777]
[-165.57395935 205.16101074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 90]
[2 89]
[3 88]
[9 85]
[10 84]
[11 83]
[12 82]
[13 81]
[14 80]
[15 78]
[16 77]
[17 76]
[19 60]
[20 59]
[25 54]
[26 53]
[27 52]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[61 67]
[62 66]
[95 209]
[96 208]
[97 207]
[98 206]
[99 205]
[100 204]
[101 203]
[102 202]
[104 201]
[105 200]
[108 197]
[109 196]
[110 195]
[111 194]
[112 141]
[113 140]
[114 139]
[117 136]
[118 135]
[119 134]
[120 133]
[122 131]
[123 130]
[124 129]
[148 193]
[149 192]
[150 191]
[151 190]
[152 189]
[154 187]
[155 186]
[156 185]
[157 184]
[158 183]
[159 182]
[161 180]
[162 179]
[164 178]
[165 177]
[166 176]
[167 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
