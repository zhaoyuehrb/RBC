%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PCCA)
} def

/sequence { (\
GGCAUCGGGUUUCUGGCUCGUGAUUUGCCGGAGCUCCUGCGCUCCCCUUCUCCACCCCCUCCGGCUGUGUGAGAGGUCAGCAGAGGGGCGGUCUGCGGGGACAACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.003978924 ubox
1 29 0.030530731 ubox
1 35 0.003547920 ubox
1 37 0.007788658 ubox
1 38 0.007702558 ubox
1 43 0.315592520 ubox
1 44 0.017374421 ubox
2 10 0.005987113 ubox
2 28 0.030555355 ubox
2 34 0.004568645 ubox
2 36 0.007390068 ubox
2 37 0.008198989 ubox
2 40 0.809487848 ubox
2 42 0.562182072 ubox
2 43 0.006079419 ubox
3 9 0.006112169 ubox
3 22 0.005452405 ubox
3 27 0.030524763 ubox
3 33 0.004571583 ubox
3 39 0.809866709 ubox
3 41 0.562386607 ubox
4 21 0.005762982 ubox
4 24 0.007004434 ubox
4 26 0.027576932 ubox
4 38 0.767251564 ubox
5 23 0.012690118 ubox
5 31 0.003465461 ubox
6 20 0.028480626 ubox
6 22 0.011285065 ubox
6 30 0.003580593 ubox
6 39 0.527751228 ubox
6 41 0.007225414 ubox
7 19 0.030449196 ubox
7 21 0.005272378 ubox
7 29 0.003574407 ubox
7 35 0.037302046 ubox
7 36 0.607200999 ubox
7 37 0.570926414 ubox
7 38 0.535649789 ubox
7 40 0.006460343 ubox
8 18 0.030775954 ubox
8 19 0.003485399 ubox
8 28 0.003562146 ubox
8 34 0.036127472 ubox
8 35 0.612732490 ubox
8 36 0.572160757 ubox
8 37 0.541312209 ubox
8 38 0.004607247 ubox
9 17 0.030969797 ubox
9 34 0.673113413 ubox
9 35 0.484956362 ubox
9 36 0.540867727 ubox
9 37 0.005099668 ubox
9 105 0.007266036 ubox
10 16 0.030640676 ubox
10 32 0.008452860 ubox
10 33 0.562372962 ubox
10 104 0.007179324 ubox
11 15 0.022538600 ubox
11 31 0.003754919 ubox
11 32 0.423048524 ubox
11 33 0.793587504 ubox
11 103 0.006354810 ubox
12 23 0.004258860 ubox
12 31 0.212184680 ubox
12 32 0.901182311 ubox
13 22 0.004308799 ubox
13 30 0.207702673 ubox
13 31 0.976509154 ubox
14 30 0.976721056 ubox
15 29 0.999389939 ubox
15 35 0.010385135 ubox
16 28 0.999440871 ubox
16 34 0.010515792 ubox
17 27 0.999027524 ubox
17 33 0.010516579 ubox
18 32 0.010480870 ubox
19 27 0.015786603 ubox
19 31 0.010324825 ubox
20 26 0.051899130 ubox
21 30 0.006628454 ubox
22 26 0.009873875 ubox
22 29 0.007430622 ubox
25 101 0.003175506 ubox
26 100 0.003456937 ubox
28 98 0.003642525 ubox
29 97 0.003639746 ubox
30 37 0.005067058 ubox
30 43 0.004864383 ubox
30 45 0.020439038 ubox
30 96 0.003577646 ubox
31 36 0.005056782 ubox
31 42 0.006811684 ubox
31 44 0.021668808 ubox
32 43 0.021944060 ubox
33 40 0.011330769 ubox
33 42 0.022310355 ubox
33 89 0.025200936 ubox
34 39 0.011350408 ubox
34 41 0.022288837 ubox
34 88 0.025285333 ubox
35 87 0.025269447 ubox
35 100 0.005998244 ubox
36 86 0.025289335 ubox
36 99 0.010082027 ubox
37 85 0.025288558 ubox
37 98 0.010573722 ubox
37 100 0.003501979 ubox
38 84 0.025222824 ubox
38 97 0.010592043 ubox
38 99 0.003523546 ubox
38 103 0.028582617 ubox
38 106 0.031246881 ubox
39 96 0.010663362 ubox
39 102 0.031144016 ubox
39 105 0.042037688 ubox
40 90 0.006409517 ubox
40 95 0.010636935 ubox
40 97 0.003667705 ubox
41 81 0.025273942 ubox
41 89 0.008340295 ubox
41 92 0.008624897 ubox
41 94 0.005503708 ubox
41 96 0.003699633 ubox
42 80 0.025284371 ubox
42 88 0.008318290 ubox
42 91 0.009654332 ubox
42 95 0.003695497 ubox
42 100 0.026915695 ubox
43 79 0.024765367 ubox
43 87 0.007151087 ubox
43 90 0.009297945 ubox
43 91 0.003194964 ubox
43 99 0.020095647 ubox
43 100 0.054484243 ubox
43 101 0.873213204 ubox
44 86 0.007144699 ubox
44 87 0.004279672 ubox
44 88 0.003758326 ubox
44 90 0.004534976 ubox
44 98 0.020148093 ubox
44 99 0.074876969 ubox
44 100 0.992972206 ubox
45 85 0.007124642 ubox
45 86 0.004294656 ubox
45 87 0.003783761 ubox
45 88 0.010212020 ubox
45 97 0.020051582 ubox
45 98 0.075077516 ubox
45 99 0.993503539 ubox
45 100 0.073114420 ubox
46 76 0.022461679 ubox
46 85 0.004302315 ubox
46 86 0.003783086 ubox
46 87 0.010267751 ubox
46 97 0.075072219 ubox
46 98 0.993475011 ubox
46 99 0.073917253 ubox
46 100 0.011197688 ubox
47 75 0.022422832 ubox
47 76 0.018136724 ubox
47 85 0.003758294 ubox
47 86 0.010272748 ubox
47 97 0.991709106 ubox
47 98 0.074207258 ubox
47 99 0.011219717 ubox
48 74 0.015909481 ubox
48 75 0.027188376 ubox
48 84 0.003281933 ubox
48 85 0.010266249 ubox
48 97 0.071811139 ubox
48 98 0.011059030 ubox
48 101 0.004512753 ubox
49 74 0.033942747 ubox
49 84 0.010412780 ubox
49 91 0.003816061 ubox
49 97 0.010151331 ubox
49 100 0.004860863 ubox
49 101 0.016922315 ubox
50 73 0.037691706 ubox
50 83 0.010548187 ubox
50 90 0.004053958 ubox
50 91 0.030083747 ubox
50 99 0.005043279 ubox
50 100 0.018305453 ubox
51 72 0.037739085 ubox
51 82 0.010180186 ubox
51 90 0.023970515 ubox
51 91 0.040725555 ubox
51 98 0.004955729 ubox
51 99 0.018284768 ubox
52 71 0.037731393 ubox
52 90 0.047365916 ubox
52 91 0.972943398 ubox
52 97 0.004973286 ubox
52 98 0.018321443 ubox
53 69 0.037711899 ubox
53 90 0.972649233 ubox
53 95 0.011475154 ubox
53 97 0.018288731 ubox
54 68 0.037707909 ubox
54 92 0.069741757 ubox
54 94 0.009949125 ubox
55 67 0.037576727 ubox
55 87 0.003457242 ubox
55 88 0.621533508 ubox
55 91 0.071723470 ubox
56 64 0.014026384 ubox
56 76 0.004923907 ubox
56 86 0.003321894 ubox
56 87 0.540862272 ubox
56 88 0.778785940 ubox
56 90 0.056760007 ubox
56 91 0.004359523 ubox
57 63 0.014063976 ubox
57 64 0.022539024 ubox
57 75 0.004975021 ubox
57 76 0.005864709 ubox
57 85 0.003180769 ubox
57 86 0.445712378 ubox
57 87 0.839311298 ubox
57 88 0.033385964 ubox
57 90 0.004495404 ubox
57 91 0.005800558 ubox
58 63 0.022516219 ubox
58 64 0.026565522 ubox
58 75 0.005849777 ubox
58 76 0.008373879 ubox
58 85 0.323619070 ubox
58 86 0.893597711 ubox
58 87 0.030691351 ubox
58 88 0.014262205 ubox
58 90 0.005808092 ubox
59 63 0.026427997 ubox
59 73 0.008531941 ubox
59 75 0.009173250 ubox
59 80 0.003508540 ubox
59 83 0.087541985 ubox
59 85 0.944747851 ubox
59 86 0.027679637 ubox
59 87 0.014247738 ubox
59 88 0.008245644 ubox
60 72 0.008542337 ubox
60 74 0.009203626 ubox
60 79 0.003281177 ubox
60 82 0.085859697 ubox
60 84 0.993051828 ubox
60 85 0.022965010 ubox
60 86 0.009069826 ubox
60 87 0.008267298 ubox
61 71 0.008517391 ubox
61 73 0.009204587 ubox
61 76 0.005116921 ubox
61 83 0.992562651 ubox
61 85 0.010054959 ubox
61 86 0.013926177 ubox
62 69 0.008392145 ubox
62 71 0.007011480 ubox
62 75 0.005140210 ubox
62 85 0.014133637 ubox
63 68 0.007447991 ubox
63 70 0.006474493 ubox
63 78 0.055300799 ubox
64 70 0.006029494 ubox
64 77 0.055923541 ubox
64 81 0.996127020 ubox
65 69 0.006075851 ubox
65 73 0.004957653 ubox
65 75 0.003686617 ubox
65 76 0.055895698 ubox
65 80 0.996291975 ubox
65 83 0.035728653 ubox
66 72 0.005070983 ubox
66 74 0.004724674 ubox
66 75 0.055627711 ubox
66 79 0.993752005 ubox
66 82 0.049623069 ubox
66 84 0.003353322 ubox
67 77 0.008273552 ubox
67 78 0.990535653 ubox
67 81 0.049906514 ubox
68 76 0.317911289 ubox
68 79 0.026864145 ubox
68 80 0.047138141 ubox
68 82 0.009908195 ubox
69 77 0.088862974 ubox
69 78 0.039147643 ubox
69 81 0.010007086 ubox
70 76 0.205471406 ubox
70 79 0.074573347 ubox
70 80 0.006193006 ubox
71 78 0.098287909 ubox
72 77 0.105980194 ubox
77 84 0.004145033 ubox
78 83 0.004427884 ubox
80 96 0.026846112 ubox
81 95 0.026879088 ubox
82 94 0.026871501 ubox
83 93 0.026874889 ubox
84 92 0.026602446 ubox
88 96 0.019917988 ubox
89 95 0.020924091 ubox
89 97 0.004679085 ubox
90 94 0.012927219 ubox
90 96 0.013220175 ubox
91 102 0.027147087 ubox
92 101 0.027212615 ubox
93 100 0.027226185 ubox
94 99 0.026708541 ubox
2 40 0.9500000 lbox
3 39 0.9500000 lbox
4 38 0.9500000 lbox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
43 101 0.9500000 lbox
44 100 0.9500000 lbox
45 99 0.9500000 lbox
46 98 0.9500000 lbox
47 97 0.9500000 lbox
52 91 0.9500000 lbox
53 90 0.9500000 lbox
56 88 0.9500000 lbox
57 87 0.9500000 lbox
58 86 0.9500000 lbox
59 85 0.9500000 lbox
60 84 0.9500000 lbox
61 83 0.9500000 lbox
64 81 0.9500000 lbox
65 80 0.9500000 lbox
66 79 0.9500000 lbox
67 78 0.9500000 lbox
showpage
end
%%EOF
