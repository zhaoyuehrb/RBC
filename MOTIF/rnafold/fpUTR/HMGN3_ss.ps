%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCAGCAGGGAGGCGAGCAGAGGGCCCCCAGAGGGAGCCGCGGAGGUGCAGGUCGAAGAGGCCGGGCUACGUCGUGCCCUGCGCGUGAGCAGCUGCAGAGGCAGAGGCAGCAUCCAGCGGCGGCGCCAGCAGUUCCAGUCCGUUGCUUUACUUUUUGCUUCACCGACAUAGUCAUU\
) } def
/len { sequence length } bind def

/coor [
[183.04287720 511.59146118]
[179.90702820 496.92291260]
[166.24093628 491.05984497]
[158.55683899 478.12078857]
[159.98181152 462.96087646]
[170.17802429 451.41342163]
[167.04219055 436.74487305]
[163.90634155 422.07632446]
[160.77050781 407.40777588]
[157.63465881 392.73922729]
[154.49882507 378.07064819]
[151.36297607 363.40209961]
[148.22714233 348.73355103]
[145.09129333 334.06500244]
[132.48945618 326.20819092]
[129.10031128 311.37686157]
[137.42669678 298.21218872]
[134.29084778 283.54360962]
[131.15501404 268.87506104]
[128.01916504 254.20651245]
[124.88333130 239.53794861]
[121.74748993 224.86940002]
[111.52043915 214.04087830]
[116.20176697 198.92811584]
[113.06592560 184.25956726]
[109.93008423 169.59100342]
[106.79424286 154.92245483]
[93.38756561 148.19482422]
[79.75304413 154.44779968]
[66.11853027 160.70079041]
[57.07383728 174.38017273]
[40.72341156 173.11698914]
[33.88716888 158.21069336]
[43.59764481 144.99560547]
[59.86553955 147.06626892]
[73.50006104 140.81329346]
[87.13458252 134.56030273]
[68.91061401 103.71130371]
[85.59232330 78.66647339]
[81.18297577 64.32919312]
[76.77362823 49.99191284]
[72.36428070 35.65462875]
[67.95494080 21.31734657]
[63.41994858 7.01931000]
[58.75966263 -7.23838091]
[54.09937668 -21.49607086]
[34.08466721 -30.72655869]
[31.76870918 -56.17666245]
[21.11567116 -66.73662567]
[10.46263313 -77.29658508]
[-0.19040501 -87.85654449]
[-10.84344292 -98.41651154]
[-22.86946678 -107.38170624]
[-36.03178406 -114.57569122]
[-49.19409943 -121.76967621]
[-62.35641479 -128.96366882]
[-78.09400177 -125.84790802]
[-90.24866486 -136.31898499]
[-89.49639893 -152.34439087]
[-76.41426086 -161.63079834]
[-61.03776169 -157.05447388]
[-55.16242981 -142.12597656]
[-42.00011444 -134.93199158]
[-28.83779716 -127.73800659]
[-15.67547989 -120.54402161]
[-5.39960003 -131.47134399]
[-13.38804054 -144.16720581]
[-21.37648201 -156.86305237]
[-29.36492157 -169.55891418]
[-44.85589218 -170.45861816]
[-56.83815002 -180.31788635]
[-60.70427704 -195.34561157]
[-54.96766281 -209.76335144]
[-41.83415985 -218.02716064]
[-26.35386086 -216.95945740]
[-14.47925949 -206.97079468]
[-10.77638435 -191.90200806]
[-16.66906357 -177.54734802]
[-8.68062305 -164.85150146]
[-0.69218224 -152.15563965]
[7.29625845 -139.45977783]
[-0.28348187 -109.06954956]
[10.36955643 -98.50958252]
[21.02259445 -87.94962311]
[31.67563248 -77.38966370]
[42.32867050 -66.82970428]
[56.99722672 -69.96553802]
[62.40140533 -83.95821381]
[57.89960098 -96.06553650]
[62.71065140 -107.61988831]
[73.74453735 -112.62198639]
[79.39345551 -126.51765442]
[73.49365997 -140.93397522]
[79.42041779 -154.94567871]
[93.20052338 -160.48139954]
[98.84944153 -174.37707520]
[104.49836731 -188.27275085]
[110.14728546 -202.16841125]
[107.36505127 -218.32983398]
[120.14149475 -228.61061096]
[135.33329773 -222.43478394]
[137.31245422 -206.15550232]
[124.04295349 -196.51950073]
[118.39403534 -182.62382507]
[112.74511719 -168.72814941]
[107.09619904 -154.83248901]
[113.10514069 -141.25204468]
[107.57427979 -127.07939148]
[93.28913116 -120.86873627]
[87.64021301 -106.97306061]
[90.98959351 -89.75927734]
[76.39408112 -78.55403137]
[70.98989868 -64.56136322]
[79.30194092 -42.91339874]
[68.35706329 -26.15635681]
[73.01734924 -11.89866638]
[77.67763519 2.35902429]
[82.75920105 7.75570345]
[82.29222107 16.90799904]
[86.70156860 31.24528313]
[91.11091614 45.58256531]
[95.52026367 59.91984558]
[99.92960358 74.25712585]
[125.45932770 81.77511597]
[134.87583923 111.98368835]
[149.57135010 108.97669220]
[161.47572327 97.69759369]
[177.11669922 102.62628174]
[180.40417480 118.69253540]
[167.95628357 129.36877441]
[152.57835388 123.67219543]
[137.88284302 126.67919922]
[133.77783203 132.95605469]
[148.71156311 131.54763794]
[159.12384033 142.34507751]
[157.17417908 157.21781921]
[144.33065796 164.96665955]
[130.26454163 159.75665283]
[125.56781006 145.50975037]
[121.46279907 151.78660583]
[124.59864044 166.45516968]
[127.73448181 181.12371826]
[130.87031555 195.79226685]
[141.32167053 207.66998291]
[136.41604614 221.73356628]
[139.55187988 236.40211487]
[142.68772888 251.07066345]
[145.82356262 265.73922729]
[148.95941162 280.40777588]
[152.09524536 295.07632446]
[165.07652283 303.68588257]
[168.04774475 318.60656738]
[159.75985718 330.92916870]
[162.89569092 345.59771729]
[166.03153992 360.26626587]
[169.16737366 374.93481445]
[172.30322266 389.60336304]
[175.43905640 404.27194214]
[178.57490540 418.94049072]
[181.71073914 433.60903931]
[184.84657288 448.27758789]
[198.87300110 454.64672852]
[206.37188721 467.89889526]
[204.64988708 482.84878540]
[194.57557678 493.78707886]
[197.71142578 508.45562744]
[201.36012268 523.00506592]
[205.51716614 537.41754150]
[209.67420959 551.83001709]
[219.87332153 565.37304688]
[209.68293762 578.92266846]
[193.84185791 572.88146973]
[195.26176453 555.98706055]
[191.10470581 541.57458496]
[186.94766235 527.16217041]
[184.52963257 525.69006348]
[182.55793762 523.15759277]
[181.44465637 519.73309326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[6 161]
[7 160]
[8 159]
[9 158]
[10 157]
[11 156]
[12 155]
[13 154]
[14 153]
[17 150]
[18 149]
[19 148]
[20 147]
[21 146]
[22 145]
[24 143]
[25 142]
[26 141]
[27 140]
[28 37]
[29 36]
[30 35]
[39 123]
[40 122]
[41 121]
[42 120]
[43 119]
[44 117]
[45 116]
[46 115]
[48 86]
[49 85]
[50 84]
[51 83]
[52 82]
[53 65]
[54 64]
[55 63]
[56 62]
[66 81]
[67 80]
[68 79]
[69 78]
[87 113]
[88 112]
[91 110]
[92 109]
[95 106]
[96 105]
[97 104]
[98 103]
[125 132]
[126 131]
[167 175]
[168 174]
[169 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
