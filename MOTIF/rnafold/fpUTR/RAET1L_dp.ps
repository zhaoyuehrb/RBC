%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:05:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAET1L)
} def

/sequence { (\
GAUUUCAUCUUCCAGGAUCCACCUUGAUUAAAUCUCUUGUCCCCAGCCCUCCUGGUCCCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.308280327 ubox
1 11 0.015098455 ubox
1 12 0.060529274 ubox
1 19 0.021125584 ubox
1 29 0.005607568 ubox
1 34 0.614827145 ubox
1 36 0.039283568 ubox
1 38 0.006518844 ubox
1 41 0.033201389 ubox
1 57 0.074766379 ubox
2 8 0.304901244 ubox
2 10 0.016677222 ubox
2 11 0.065502283 ubox
2 18 0.021107912 ubox
2 28 0.005881223 ubox
2 33 0.615909509 ubox
2 35 0.038007766 ubox
2 37 0.006533067 ubox
2 40 0.033269150 ubox
2 56 0.074460214 ubox
3 7 0.270374513 ubox
3 17 0.019340761 ubox
3 27 0.005153522 ubox
3 31 0.009027677 ubox
3 32 0.615355150 ubox
3 39 0.032232685 ubox
3 55 0.016486099 ubox
4 16 0.017201854 ubox
4 17 0.010850300 ubox
4 26 0.003909622 ubox
4 30 0.011616656 ubox
4 31 0.612831704 ubox
4 32 0.013243131 ubox
4 54 0.004384225 ubox
5 15 0.013050857 ubox
5 16 0.013925829 ubox
5 27 0.039721449 ubox
5 30 0.578990134 ubox
5 31 0.015297716 ubox
6 15 0.016870437 ubox
6 26 0.043332497 ubox
6 39 0.013007217 ubox
7 18 0.023192105 ubox
7 25 0.042541676 ubox
7 28 0.522718990 ubox
7 33 0.011420944 ubox
7 38 0.012994351 ubox
7 56 0.015897359 ubox
8 16 0.004398280 ubox
8 17 0.026629737 ubox
8 27 0.538973262 ubox
8 32 0.011639498 ubox
8 55 0.004217908 ubox
9 15 0.008259569 ubox
9 16 0.027019341 ubox
9 26 0.527109306 ubox
9 55 0.004077537 ubox
10 14 0.007685197 ubox
10 15 0.025034794 ubox
10 17 0.005122166 ubox
10 27 0.025723907 ubox
10 31 0.011420356 ubox
10 32 0.006128848 ubox
11 16 0.004782170 ubox
11 17 0.006363516 ubox
11 26 0.019707436 ubox
11 27 0.298364816 ubox
11 30 0.011584880 ubox
11 31 0.004737842 ubox
11 55 0.007073150 ubox
12 16 0.006664314 ubox
12 26 0.302688423 ubox
12 54 0.006861102 ubox
12 55 0.760337438 ubox
13 26 0.156011322 ubox
13 39 0.052033305 ubox
13 54 0.767939475 ubox
14 24 0.533033547 ubox
14 25 0.199526549 ubox
14 35 0.004495091 ubox
14 37 0.006180886 ubox
14 38 0.052186011 ubox
14 53 0.767849319 ubox
15 23 0.577563038 ubox
15 24 0.197268278 ubox
15 25 0.005111538 ubox
15 34 0.004803592 ubox
15 35 0.008646022 ubox
15 36 0.007058385 ubox
15 37 0.052052726 ubox
15 42 0.055926289 ubox
15 44 0.003380033 ubox
15 52 0.768029117 ubox
15 58 0.023320770 ubox
15 59 0.008881610 ubox
15 60 0.010155800 ubox
16 22 0.576108923 ubox
16 23 0.197335911 ubox
16 24 0.004160535 ubox
16 25 0.008303356 ubox
16 29 0.038274248 ubox
16 34 0.011156548 ubox
16 36 0.051975929 ubox
16 41 0.056080870 ubox
16 43 0.003387365 ubox
16 51 0.767921235 ubox
16 57 0.023381810 ubox
16 58 0.008801075 ubox
16 59 0.010033156 ubox
17 24 0.008179432 ubox
17 28 0.050922479 ubox
17 33 0.011144718 ubox
17 35 0.049196714 ubox
17 40 0.055490856 ubox
17 50 0.746832078 ubox
17 56 0.022380354 ubox
18 27 0.069836839 ubox
18 32 0.010604691 ubox
18 39 0.049775304 ubox
18 55 0.011490392 ubox
19 26 0.070375348 ubox
19 54 0.010410019 ubox
19 55 0.014701441 ubox
20 26 0.030462555 ubox
20 39 0.036786551 ubox
20 54 0.014768198 ubox
21 25 0.025675926 ubox
21 38 0.036400024 ubox
21 40 0.033502161 ubox
21 53 0.013678278 ubox
21 56 0.004548549 ubox
22 39 0.034678009 ubox
22 55 0.005088072 ubox
23 46 0.237107018 ubox
23 54 0.005098249 ubox
24 31 0.008964605 ubox
24 32 0.021361676 ubox
24 45 0.232687398 ubox
24 46 0.065790657 ubox
25 30 0.008808282 ubox
25 31 0.023562642 ubox
25 39 0.010742841 ubox
25 45 0.080429443 ubox
26 34 0.100742792 ubox
26 36 0.036859477 ubox
26 38 0.011880020 ubox
26 41 0.733233112 ubox
26 44 0.085323959 ubox
26 51 0.005212027 ubox
26 57 0.004047628 ubox
27 33 0.099666084 ubox
27 35 0.035665829 ubox
27 37 0.011583420 ubox
27 40 0.733382264 ubox
27 50 0.004960931 ubox
27 56 0.004143967 ubox
28 32 0.088415634 ubox
28 39 0.695772126 ubox
28 55 0.003634990 ubox
29 39 0.233616364 ubox
29 54 0.003537585 ubox
30 38 0.313349939 ubox
30 53 0.003324727 ubox
31 37 0.303953816 ubox
31 38 0.112735180 ubox
32 37 0.103815409 ubox
32 40 0.010970243 ubox
33 39 0.011491494 ubox
34 46 0.009722039 ubox
35 45 0.009363184 ubox
36 46 0.024096661 ubox
36 54 0.003404016 ubox
37 45 0.020693821 ubox
37 46 0.058745216 ubox
38 45 0.076587968 ubox
38 61 0.128112924 ubox
39 44 0.079511045 ubox
39 47 0.040224363 ubox
39 56 0.013385059 ubox
39 60 0.162272343 ubox
40 46 0.039456187 ubox
41 55 0.011144981 ubox
42 54 0.010609602 ubox
42 55 0.041134894 ubox
43 54 0.030407709 ubox
43 55 0.622423584 ubox
44 54 0.626214159 ubox
45 53 0.626355394 ubox
46 52 0.621964043 ubox
46 56 0.089201430 ubox
47 55 0.091775121 ubox
48 54 0.090708033 ubox
48 55 0.072645340 ubox
49 54 0.074122080 ubox
49 55 0.004280763 ubox
50 54 0.003893876 ubox
53 61 0.027510530 ubox
54 60 0.036493901 ubox
55 59 0.036088797 ubox
12 55 0.9500000 lbox
13 54 0.9500000 lbox
14 53 0.9500000 lbox
15 52 0.9500000 lbox
16 51 0.9500000 lbox
17 50 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
showpage
end
%%EOF
