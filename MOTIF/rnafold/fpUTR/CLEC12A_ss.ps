%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCAUUUGCAGACAUAUGGGUGAUUGGUACAGUAGGUUUAUAAACAGAAGUUUAAACUUGUAAGCUUAAGCUUCCGUUUAUAAACAGAAGUUUAAAAUUAUAGGUCCUGUUUAACAUUCAGCUCUGUUAACUCACUCAUCUUUUUGUGUUUUUACACUUUGUCAAGAUUUCUUUACAUAUUCAUCA\
) } def
/len { sequence length } bind def

/coor [
[123.36370850 202.49275208]
[119.37173462 188.03485107]
[116.15557098 202.68600464]
[124.88491821 215.86076355]
[121.65970612 231.33245850]
[108.39340210 239.92202759]
[92.95666504 236.53341675]
[84.50783539 223.17703247]
[88.05946350 207.77699280]
[101.50441742 199.46984863]
[104.72058105 184.81869507]
[101.82513428 177.02873230]
[104.99575806 168.26536560]
[102.26835632 153.51541138]
[99.54094696 138.76544189]
[96.81354523 124.01548767]
[77.16696167 108.09628296]
[82.39638519 83.35638428]
[75.22257233 70.18305969]
[68.04876709 57.00973511]
[60.87495422 43.83641434]
[53.70114517 30.66308975]
[46.52733612 17.48976517]
[39.35352707 4.31644249]
[32.17971420 -8.85688114]
[18.18652344 -8.48086262]
[5.45888233 -14.14733696]
[-3.53935456 -24.69689751]
[-7.09329367 -38.03104401]
[-4.56362009 -51.52948380]
[3.49924898 -62.56503296]
[-3.45461035 -75.85577393]
[-10.40846920 -89.14651489]
[-17.36232948 -102.43726349]
[-24.12649155 -108.60478973]
[-24.31923485 -116.00720978]
[-31.05122375 -129.41169739]
[-48.97089767 -128.60818481]
[-65.39340210 -135.69111633]
[-77.03860474 -149.19544983]
[-81.60255432 -166.37875366]
[-78.21323395 -183.77790833]
[-67.59670258 -197.90715027]
[-74.98847961 -210.95942688]
[-82.38025665 -224.01168823]
[-89.77204132 -237.06394958]
[-97.16381836 -250.11621094]
[-104.55559540 -263.16848755]
[-111.94737244 -276.22073364]
[-118.31539154 -276.14526367]
[-124.40986633 -277.84866333]
[-129.74729919 -281.17227173]
[-133.91082764 -285.82983398]
[-136.58287048 -291.43206787]
[-137.56918335 -297.51907349]
[-136.81292725 -303.59823608]
[-134.39732361 -309.18386841]
[-130.53729248 -313.83624268]
[-136.36381531 -327.65838623]
[-142.19032288 -341.48052979]
[-148.01684570 -355.30267334]
[-153.84336853 -369.12481689]
[-159.66989136 -382.94696045]
[-165.49641418 -396.76910400]
[-171.32293701 -410.59124756]
[-185.68650818 -416.61831665]
[-191.39852905 -430.71893311]
[-185.56410217 -444.37527466]
[-191.39062500 -458.19741821]
[-197.21714783 -472.01956177]
[-203.04367065 -485.84170532]
[-208.87019348 -499.66384888]
[-214.69671631 -513.48596191]
[-220.52323914 -527.30810547]
[-226.34976196 -541.13024902]
[-232.17626953 -554.95239258]
[-244.66648865 -564.66351318]
[-242.48045349 -579.39685059]
[-248.30697632 -593.21899414]
[-254.13349915 -607.04107666]
[-267.52539062 -616.50628662]
[-265.75500488 -632.80957031]
[-250.64358521 -639.17956543]
[-237.73645020 -629.06335449]
[-240.31135559 -612.86761475]
[-234.48483276 -599.04547119]
[-228.65830994 -585.22332764]
[-216.58486938 -576.50091553]
[-218.35412598 -560.77893066]
[-212.52761841 -546.95678711]
[-206.70109558 -533.13464355]
[-200.87457275 -519.31250000]
[-195.04804993 -505.49035645]
[-189.22152710 -491.66821289]
[-183.39500427 -477.84606934]
[-177.56848145 -464.02392578]
[-171.74195862 -450.20178223]
[-157.89204407 -444.84310913]
[-151.78622437 -430.90850830]
[-157.50079346 -416.41775513]
[-151.67427063 -402.59561157]
[-145.84774780 -388.77346802]
[-140.02122498 -374.95132446]
[-134.19470215 -361.12918091]
[-128.36817932 -347.30703735]
[-122.54166412 -333.48489380]
[-116.71514130 -319.66275024]
[-96.14170074 -307.87362671]
[-98.89510345 -283.61251831]
[-91.50332642 -270.56024170]
[-84.11154938 -257.50799561]
[-76.71977234 -244.45573425]
[-69.32799530 -231.40345764]
[-61.93621826 -218.35119629]
[-54.54443741 -205.29893494]
[-42.46521378 -207.41950989]
[-30.29467583 -205.72145081]
[-19.21315002 -200.35420227]
[-10.30000496 -191.82388306]
[-4.42853308 -180.94541931]
[-2.18039417 -168.76483154]
[-3.78802466 -156.45861816]
[-9.11070442 -145.22007751]
[-17.64673424 -136.14369202]
[-10.91474628 -122.73919678]
[-4.07158613 -109.39112091]
[2.88227296 -96.10037994]
[9.83613205 -82.80963135]
[16.78999138 -69.51889038]
[32.93795395 -69.24578094]
[46.82755661 -60.82260513]
[54.62350082 -46.46463013]
[54.11752701 -30.04065704]
[45.35303879 -16.03069115]
[52.52684784 -2.85736752]
[59.70066071 10.31595612]
[66.87446594 23.48928070]
[74.04827881 36.66260529]
[81.22209167 49.83592606]
[88.39589691 63.00925064]
[95.56970978 76.18257141]
[101.87807465 75.84694672]
[108.05873871 77.15368652]
[113.69142151 80.01394653]
[118.39310455 84.23323822]
[121.84408569 89.52463531]
[123.80969238 95.52835083]
[124.15628052 101.83612823]
[138.02636719 107.54757690]
[151.89645386 113.25901794]
[165.76655579 118.97046661]
[181.94032288 116.26103973]
[192.16346741 129.08366394]
[185.91928101 144.24749756]
[169.63125610 146.15330505]
[160.05509949 132.84056091]
[146.18501282 127.12910461]
[132.31492615 121.41766357]
[118.44483948 115.70621490]
[116.38552094 117.84410095]
[114.08020782 119.71408081]
[111.56350708 121.28808594]
[114.29090881 136.03804016]
[117.01831055 150.78800964]
[119.74571228 165.53796387]
[124.21649170 151.21971130]
[131.81369019 138.28593445]
[142.14253235 127.40866852]
[154.66633606 119.15311432]
[168.73435974 113.94822693]
[183.61560059 112.06446838]
[198.53683472 113.59971619]
[212.72271729 118.47419739]
[225.43615723 126.43463135]
[236.01654053 137.06738281]
[243.91410828 149.81997681]
[248.71849060 164.02975464]
[250.18005371 178.95837402]
[248.22285461 193.83013916]
[242.94857788 207.87228394]
[234.63128662 220.35519409]
[223.70315552 230.63020325]
[210.73202515 238.16345215]
[196.39187622 242.56347656]
[181.42785645 243.60166931]
[166.61747742 241.22407532]
[152.73033142 235.55422974]
[140.48799133 226.88676453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[13 165]
[14 164]
[15 163]
[16 162]
[18 141]
[19 140]
[20 139]
[21 138]
[22 137]
[23 136]
[24 135]
[25 134]
[31 129]
[32 128]
[33 127]
[34 126]
[36 125]
[37 124]
[43 115]
[44 114]
[45 113]
[46 112]
[47 111]
[48 110]
[49 109]
[58 107]
[59 106]
[60 105]
[61 104]
[62 103]
[63 102]
[64 101]
[65 100]
[68 97]
[69 96]
[70 95]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[78 87]
[79 86]
[80 85]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
