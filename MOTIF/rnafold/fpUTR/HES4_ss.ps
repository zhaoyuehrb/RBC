%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAAGAAUGCGGAGCCGGGUUCACACACCCCGCGGCGGCGAGGCCUUAAAUAGGGAAACGGCCUGAGGCGCGCGCGGGCCUGGAGCCGGGAUCCGCCCUAGGGGCUCGGAUCGCCGCGCGCUCGCCGCUCGCCCGCCAGCCCGCCCGUGGUCCGUGGCGGCGCGCUCCACCCGGCACGGGGAGGCGCGGGGCGCACC\
) } def
/len { sequence length } bind def

/coor [
[113.34650421 233.33540344]
[102.59027100 244.16435242]
[88.19787598 249.24584961]
[73.02693176 247.57096863]
[60.08964157 239.47224426]
[51.95471954 226.55767822]
[50.23735809 211.39149475]
[55.27853394 196.98492432]
[66.07732391 186.19841003]
[80.48962402 181.17362976]
[82.13563538 166.26420593]
[83.78165436 151.35479736]
[85.42766571 136.44537354]
[78.69245911 133.14584351]
[65.22204590 126.54674530]
[58.48683929 123.24720764]
[47.71494675 133.68589783]
[43.18916321 148.84597778]
[28.66489029 152.14668274]
[17.89299583 162.58537292]
[7.12110138 173.02406311]
[-3.65079331 183.46276855]
[-3.64840317 199.26704407]
[-14.88096237 210.38484192]
[-30.68439293 210.22013855]
[-41.68280029 198.87065125]
[-41.35102463 183.06985474]
[-29.88590050 172.19204712]
[-14.08948517 172.69087219]
[-3.31759071 162.25218201]
[7.45430374 151.81347656]
[18.22619820 141.37478638]
[21.98150063 126.96135712]
[37.27625275 122.91400146]
[48.04814911 112.47531128]
[50.16166687 97.62495422]
[42.72978592 84.59548187]
[35.29790497 71.56600952]
[27.86602592 58.53653717]
[20.43414688 45.50706482]
[13.00226593 32.47759247]
[5.57038641 19.44812012]
[-1.86149383 6.41864681]
[-11.01139450 11.02287483]
[-23.40898323 10.00734329]
[-37.93772888 6.27699518]
[-52.46647644 2.54664683]
[-66.99522400 -1.18370140]
[-81.52397156 -4.91404963]
[-85.68073273 -3.59051943]
[-89.64255524 -3.65733194]
[-92.99491882 -4.88133812]
[-95.44211578 -6.91836596]
[-96.83328247 -9.36181641]
[-111.09912872 -13.99707127]
[-125.36498260 -18.63232613]
[-138.52963257 -10.19278526]
[-154.03248596 -12.24106216]
[-164.55357361 -23.81002045]
[-165.12515259 -39.43715668]
[-155.47734070 -51.74380875]
[-140.16554260 -54.91915512]
[-126.41951752 -47.46389771]
[-120.72972107 -32.89817429]
[-106.46387482 -28.26291847]
[-92.19802856 -23.62766457]
[-77.79362488 -19.44279671]
[-63.26487732 -15.71244907]
[-48.73612976 -11.98210049]
[-34.20738220 -8.25175190]
[-19.67863464 -4.52140379]
[-8.19638634 -14.17324162]
[-9.37327194 -29.12700272]
[-10.55015850 -44.08076096]
[-11.72704506 -59.03452301]
[-12.90393162 -73.98828125]
[-14.08081818 -88.94203949]
[-15.25770473 -103.89580536]
[-16.43459129 -118.84956360]
[-31.64593887 -124.61254883]
[-42.78300095 -136.38853455]
[-47.65427017 -151.78646851]
[-45.33343124 -167.71014404]
[-36.33504105 -180.98080444]
[-22.50152969 -188.97161865]
[-23.91315460 -203.90504456]
[-25.32477951 -218.83848572]
[-26.73640442 -233.77191162]
[-28.14802933 -248.70533752]
[-30.02802658 -263.58706665]
[-32.37454605 -278.40237427]
[-34.72106171 -293.21771240]
[-46.80276871 -303.77288818]
[-45.93930817 -319.79269409]
[-32.79304504 -328.98809814]
[-17.44867134 -324.30517578]
[-11.67707825 -309.33624268]
[-19.90573692 -295.56423950]
[-17.55921936 -280.74890137]
[-15.21270275 -265.93356323]
[-13.01696205 -264.17730713]
[-11.38783932 -261.44155884]
[-10.70332718 -257.93899536]
[-11.25710392 -254.01550293]
[-13.21459961 -250.11695862]
[-11.80297470 -235.18353271]
[-10.39134979 -220.25010681]
[-8.97972488 -205.31668091]
[-7.56810045 -190.38323975]
[5.66766596 -186.21049500]
[16.34596825 -177.27877808]
[22.83244133 -164.91206360]
[24.11791420 -150.96325684]
[19.97529984 -137.53654480]
[10.99885082 -126.67007446]
[-1.48083103 -120.02645111]
[-0.30394456 -105.07268524]
[0.87294191 -90.11892700]
[2.04982829 -75.16516876]
[3.22671485 -60.21140671]
[4.40360117 -45.25764847]
[5.58048773 -30.30388832]
[6.75737429 -15.35012817]
[11.16797924 -1.01323307]
[18.59985924 12.01623917]
[26.03173828 25.04571152]
[33.46361923 38.07518387]
[40.89550018 51.10465622]
[48.32737732 64.13413239]
[55.75925827 77.16360474]
[63.19113922 90.19307709]
[89.45951080 68.63619995]
[117.26187134 77.84948730]
[123.00797272 101.78431702]
[136.77429199 107.74153900]
[150.54060364 113.69875336]
[164.30693054 119.65597534]
[178.07324219 125.61318970]
[184.68824768 125.23296356]
[189.73963928 127.86135101]
[192.17376709 131.97982788]
[205.74617004 138.36651611]
[219.31857300 144.75320435]
[234.03080750 139.63577271]
[247.70417786 146.30612183]
[252.49220276 160.36352539]
[266.06460571 166.75021362]
[279.63702393 173.13690186]
[293.20941162 179.52359009]
[306.78182983 185.91027832]
[320.35421753 192.29696655]
[326.97790527 192.12471008]
[331.94424438 194.91046143]
[334.24780273 199.10336304]
[347.61291504 205.91322327]
[360.97799683 212.72308350]
[370.05401611 213.83277893]
[374.49829102 219.74630737]
[387.75479126 226.76525879]
[403.57141113 226.38481140]
[411.19882202 239.17823792]
[424.45532227 246.19718933]
[439.48535156 241.31111145]
[453.53002930 248.55833435]
[458.25692749 263.63919067]
[450.86163330 277.60647583]
[435.73162842 282.17364502]
[421.84332275 274.63110352]
[417.43637085 259.45367432]
[404.17987061 252.43472290]
[389.31143188 253.31721497]
[380.73583984 240.02174377]
[367.47933960 233.00279236]
[354.16815186 226.08818054]
[340.80303955 219.27832031]
[327.43795776 212.46846008]
[313.96752930 205.86936951]
[300.39514160 199.48268127]
[286.82272339 193.09599304]
[273.25033569 186.70930481]
[259.67791748 180.32261658]
[246.10551453 173.93592834]
[232.22209167 179.20721436]
[218.36676025 172.92355347]
[212.93188477 158.32560730]
[199.35948181 151.93891907]
[185.78707886 145.55223083]
[172.11602783 139.37951660]
[158.34971619 133.42228699]
[144.58338928 127.46507263]
[130.81707764 121.50785828]
[117.05075073 115.55063629]
[112.47453308 127.92537689]
[100.33708191 138.09140015]
[98.69107056 153.00080872]
[97.04505157 167.91021729]
[95.39904022 182.81964111]
[108.36811829 190.86735535]
[116.55383301 203.74977112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 197]
[11 196]
[12 195]
[13 194]
[16 35]
[17 34]
[19 32]
[20 31]
[21 30]
[22 29]
[36 131]
[37 130]
[38 129]
[39 128]
[40 127]
[41 126]
[42 125]
[43 124]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
[54 66]
[55 65]
[56 64]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[85 109]
[86 108]
[87 107]
[88 106]
[89 105]
[90 100]
[91 99]
[92 98]
[134 192]
[135 191]
[136 190]
[137 189]
[138 188]
[141 187]
[142 186]
[143 185]
[146 182]
[147 181]
[148 180]
[149 179]
[150 178]
[151 177]
[154 176]
[155 175]
[156 174]
[158 173]
[159 172]
[161 170]
[162 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
