%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CABP7)
} def

/sequence { (\
GGGGCCGCCACCGGCCCAUGAGCCCCGGCCUCAAAGUUUGCGGCGGGCGGGCGGGCGCGGAGCCUCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.016437371 ubox
1 64 0.286276134 ubox
1 65 0.149680486 ubox
1 66 0.516730885 ubox
1 67 0.762584019 ubox
2 16 0.013433188 ubox
2 17 0.162787873 ubox
2 63 0.286673221 ubox
2 64 0.179266738 ubox
2 65 0.524857289 ubox
2 66 0.761270362 ubox
2 67 0.040303696 ubox
3 15 0.009502806 ubox
3 16 0.163450661 ubox
3 63 0.180081164 ubox
3 64 0.766987930 ubox
3 65 0.516366454 ubox
3 66 0.040104847 ubox
3 67 0.014875412 ubox
4 15 0.163730632 ubox
4 63 0.766865951 ubox
4 64 0.513454522 ubox
4 65 0.036078328 ubox
4 66 0.014897704 ubox
5 14 0.164007291 ubox
5 60 0.793483473 ubox
5 62 0.577636745 ubox
6 13 0.163994207 ubox
6 57 0.050034058 ubox
6 59 0.965214924 ubox
7 12 0.156142174 ubox
7 56 0.050234128 ubox
7 58 0.972268177 ubox
7 63 0.076661535 ubox
8 54 0.003820991 ubox
8 55 0.049476538 ubox
8 57 0.971090934 ubox
8 60 0.098688506 ubox
8 62 0.076932808 ubox
9 53 0.005399885 ubox
9 54 0.041224109 ubox
9 59 0.098731695 ubox
11 51 0.022089634 ubox
11 54 0.475322627 ubox
11 55 0.851808390 ubox
11 60 0.122185191 ubox
12 50 0.022088485 ubox
12 53 0.475351107 ubox
12 54 0.852658118 ubox
12 57 0.008581027 ubox
12 59 0.122390156 ubox
13 52 0.351064594 ubox
13 56 0.006900542 ubox
13 58 0.122057391 ubox
14 48 0.022113633 ubox
14 52 0.911973408 ubox
14 56 0.130000298 ubox
15 47 0.022137032 ubox
15 50 0.142829171 ubox
15 51 0.966972967 ubox
15 55 0.130243739 ubox
16 46 0.022133731 ubox
16 49 0.142514809 ubox
16 50 0.967033065 ubox
16 51 0.004357241 ubox
16 54 0.130241122 ubox
17 45 0.022115744 ubox
17 49 0.966405308 ubox
17 50 0.005292477 ubox
17 53 0.130038913 ubox
19 27 0.003262407 ubox
19 49 0.009588571 ubox
19 53 0.004282557 ubox
19 68 0.021730971 ubox
20 26 0.004595600 ubox
20 48 0.040901790 ubox
20 52 0.018834555 ubox
20 66 0.060946879 ubox
20 67 0.021324541 ubox
21 65 0.062014694 ubox
22 44 0.022982802 ubox
22 48 0.985307282 ubox
22 52 0.108802583 ubox
22 58 0.005398440 ubox
22 63 0.053798974 ubox
22 64 0.044331638 ubox
23 43 0.022967011 ubox
23 46 0.008135199 ubox
23 47 0.968324537 ubox
23 50 0.047711674 ubox
23 51 0.106786439 ubox
23 57 0.005404704 ubox
23 62 0.069054095 ubox
24 42 0.022913217 ubox
24 45 0.008614184 ubox
24 46 0.950367205 ubox
24 47 0.203917507 ubox
24 49 0.052633797 ubox
24 50 0.104139495 ubox
24 51 0.008573542 ubox
24 55 0.005246759 ubox
24 60 0.015226637 ubox
25 43 0.008982894 ubox
25 45 0.927451386 ubox
25 46 0.275423481 ubox
25 47 0.093505167 ubox
25 49 0.077823836 ubox
25 50 0.011169682 ubox
25 54 0.005278032 ubox
25 59 0.014985204 ubox
25 60 0.068097550 ubox
26 40 0.021723850 ubox
26 42 0.011210968 ubox
26 45 0.331220186 ubox
26 46 0.116705755 ubox
26 49 0.013251419 ubox
26 53 0.005305136 ubox
26 57 0.005926983 ubox
26 59 0.068201820 ubox
27 38 0.009669610 ubox
27 39 0.019917135 ubox
27 41 0.010907410 ubox
27 44 0.268276126 ubox
27 48 0.014819201 ubox
27 52 0.004853598 ubox
27 56 0.005289252 ubox
27 58 0.067979342 ubox
28 37 0.013774786 ubox
28 38 0.017513101 ubox
28 41 0.012108212 ubox
28 44 0.956295494 ubox
28 48 0.008510636 ubox
28 56 0.069422131 ubox
29 36 0.015772980 ubox
29 40 0.012399422 ubox
29 43 0.996945903 ubox
29 46 0.009948239 ubox
29 47 0.008871732 ubox
29 50 0.004212692 ubox
29 51 0.003823535 ubox
29 54 0.004596755 ubox
29 55 0.069505531 ubox
30 36 0.016699710 ubox
30 42 0.996601738 ubox
30 43 0.003984124 ubox
30 45 0.009932460 ubox
30 46 0.008865456 ubox
30 49 0.004195760 ubox
30 50 0.003822119 ubox
30 53 0.004634039 ubox
30 54 0.069475752 ubox
30 55 0.004903426 ubox
31 35 0.015159926 ubox
31 42 0.004830290 ubox
31 43 0.007543339 ubox
31 45 0.008313520 ubox
31 49 0.003578618 ubox
31 53 0.066729621 ubox
31 54 0.005097601 ubox
32 40 0.989937732 ubox
32 42 0.007788256 ubox
32 53 0.017543582 ubox
33 39 0.969424044 ubox
34 38 0.739000444 ubox
36 44 0.006761216 ubox
36 48 0.005822114 ubox
36 52 0.069632387 ubox
37 43 0.006693582 ubox
37 47 0.005818418 ubox
37 51 0.069632390 ubox
38 42 0.004925094 ubox
38 46 0.005780197 ubox
38 50 0.069356506 ubox
39 45 0.005729673 ubox
39 49 0.069454666 ubox
40 44 0.005480470 ubox
40 48 0.069739200 ubox
41 47 0.069731200 ubox
49 65 0.009082324 ubox
49 66 0.003313770 ubox
49 67 0.061299706 ubox
50 64 0.010039269 ubox
50 66 0.061000085 ubox
50 67 0.102889208 ubox
51 63 0.010065651 ubox
51 65 0.031519877 ubox
51 66 0.103241043 ubox
52 62 0.010052707 ubox
53 64 0.015799053 ubox
53 65 0.135928027 ubox
53 66 0.021705942 ubox
53 67 0.013515616 ubox
54 63 0.013819746 ubox
54 64 0.146311754 ubox
54 65 0.006051304 ubox
54 66 0.012780512 ubox
55 63 0.146638414 ubox
55 64 0.007040861 ubox
55 65 0.010880530 ubox
56 62 0.146833221 ubox
57 63 0.013081989 ubox
58 62 0.012993737 ubox
59 67 0.007070475 ubox
60 66 0.007080320 ubox
61 65 0.006166623 ubox
65 69 0.004414008 ubox
1 67 0.9500000 lbox
2 66 0.9500000 lbox
3 65 0.9500000 lbox
4 64 0.9500000 lbox
5 60 0.9500000 lbox
6 59 0.9500000 lbox
7 58 0.9500000 lbox
8 57 0.9500000 lbox
11 55 0.9500000 lbox
12 54 0.9500000 lbox
14 52 0.9500000 lbox
15 51 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
34 38 0.9500000 lbox
showpage
end
%%EOF
