%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGCGGCGUUGCGGCCCCGGCCCCGGCUCCCUGCGCCGCCGCCGCCGCCGCCGCCAGCGCUAGCGCCAGCAGCCGGGCCCGAUCACCCGCCGCCCGGUGCCCGCCGCCGCCCGCGCCAGCAACCGGGCCCGAUCACCCGCCGCCCGGUGCCCGCCGCCGCCCGCGCCACCGGC\
) } def
/len { sequence length } bind def

/coor [
[90.81732178 137.71920776]
[82.85795593 134.83116150]
[75.71405029 130.28617859]
[69.72545624 124.30044556]
[56.43405533 131.25305176]
[43.14265442 138.20565796]
[29.85125542 145.15826416]
[16.55985641 152.11085510]
[3.26845646 159.06346130]
[-10.02294254 166.01606750]
[-13.91111755 171.42791748]
[-19.16535568 173.69836426]
[-23.91515350 172.97001648]
[-37.44623947 179.44378662]
[-50.97732162 185.91755676]
[-64.50840759 192.39132690]
[-78.03948975 198.86511230]
[-83.38045502 213.49766541]
[-97.19512177 219.87023926]
[-111.11211395 214.68827820]
[-124.64320374 221.16204834]
[-138.17428589 227.63581848]
[-151.70536804 234.10958862]
[-154.68914795 238.47125244]
[-158.65832520 240.98005676]
[-162.73326111 241.57225037]
[-166.13844299 240.54589844]
[-179.99664307 246.28616333]
[-193.85482788 252.02641296]
[-198.38426208 266.99365234]
[-211.50297546 275.50442505]
[-227.01670837 273.54022217]
[-237.60035706 262.02844238]
[-238.25663757 246.40464783]
[-228.67567444 234.04588318]
[-213.38131714 230.78758240]
[-199.59507751 238.16821289]
[-185.73689270 232.42796326]
[-171.87869263 226.68771362]
[-158.17913818 220.57850647]
[-144.64805603 214.10473633]
[-131.11697388 207.63096619]
[-117.58589172 201.15719604]
[-112.88829803 187.06932068]
[-99.25807190 180.31123352]
[-84.51326752 185.33401489]
[-70.98217773 178.86024475]
[-57.45109558 172.38647461]
[-43.92000961 165.91270447]
[-30.38892555 159.43893433]
[-16.97554779 152.72467041]
[-3.68414760 145.77206421]
[9.60725212 138.81945801]
[22.89865112 131.86685181]
[36.19005203 124.91425323]
[49.48144913 117.96165466]
[62.77285004 111.00904846]
[61.67302322 93.82725525]
[68.11173248 77.85958099]
[80.82254028 66.24670410]
[97.30536652 61.27276230]
[99.17474365 46.38970566]
[101.04411316 31.50664520]
[95.08697510 16.84980011]
[104.35009003 5.18601084]
[106.21946716 -9.69704819]
[108.08883667 -24.58010674]
[109.95820618 -39.46316528]
[100.53605652 -51.86722946]
[102.64387512 -66.93413544]
[114.52732086 -75.84027863]
[116.39669037 -90.72333527]
[110.43955994 -105.38018036]
[119.70267487 -117.04397583]
[121.57204437 -131.92703247]
[123.17546844 -146.84107971]
[124.51244354 -161.78138733]
[125.84941101 -176.72167969]
[127.18638611 -191.66198730]
[128.52334595 -206.60227966]
[129.72692871 -221.55390930]
[130.79701233 -236.51570129]
[131.86711121 -251.47747803]
[118.41231537 -258.61108398]
[109.02735901 -270.60452271]
[105.33824921 -285.37985229]
[107.98413849 -300.37716675]
[116.50662231 -312.99807739]
[129.42910767 -321.05593872]
[144.51271057 -323.15466309]
[159.14411926 -318.93066406]
[170.78831482 -309.11575317]
[177.42790222 -295.41046143]
[177.91252136 -280.18923950]
[172.15821838 -266.08932495]
[161.16194153 -255.55357361]
[146.82888794 -250.40739441]
[145.75880432 -235.44560242]
[144.68870544 -220.48382568]
[147.35649109 -213.56529236]
[143.46365356 -205.26530457]
[142.12667847 -190.32501221]
[140.78970337 -175.38471985]
[139.45274353 -160.44441223]
[138.11576843 -145.50411987]
[140.45808411 -141.30831909]
[140.16694641 -135.59193420]
[136.45510864 -130.05766296]
[134.58572388 -115.17459869]
[140.67657471 -101.58229065]
[131.27975464 -88.85396576]
[129.41038513 -73.97090912]
[138.72213745 -62.40256119]
[137.03834534 -47.28239059]
[124.84127045 -37.59379196]
[122.97189331 -22.71073532]
[121.10252380 -7.82767582]
[119.23314667 7.05538321]
[125.32399750 20.64769173]
[115.92716980 33.37601852]
[114.05780029 48.25907516]
[112.18842316 63.14213562]
[131.28410339 77.01380920]
[138.81594849 99.38208008]
[153.57762146 102.04537964]
[168.33929443 104.70867157]
[183.10095215 107.37197113]
[197.86262512 110.03527069]
[212.62429810 112.69857025]
[227.38595581 115.36186218]
[244.54627991 108.72454071]
[257.50695801 120.53574371]
[272.31381226 122.93513489]
[284.98461914 113.48918152]
[300.61126709 115.85214996]
[309.92272949 128.62211609]
[307.39468384 144.22291565]
[294.52697754 153.39883423]
[278.95379639 150.70599365]
[269.91442871 137.74198914]
[255.10757446 135.34259033]
[245.09588623 142.16780090]
[232.72286987 140.26776123]
[224.72265625 130.12353516]
[209.96099854 127.46023560]
[195.19932556 124.79693604]
[180.43765259 122.13363647]
[165.67599487 119.47034454]
[150.91432190 116.80704498]
[136.15264893 114.14374542]
[134.15986633 118.44351959]
[131.65800476 122.46843719]
[128.68435669 126.15850830]
[125.28322601 129.45875549]
[121.50531769 132.31997681]
[127.24556732 146.17817688]
[132.98582458 160.03636169]
[138.72607422 173.89456177]
[154.99667358 180.27781677]
[161.50367737 196.13525391]
[154.68014526 211.49064636]
[160.66683960 225.24417114]
[174.16777039 234.55314636]
[172.58691406 250.87591553]
[157.55050659 257.42102051]
[144.52671814 247.45542908]
[146.91331482 231.23086548]
[140.92662048 217.47734070]
[128.37675476 214.47497559]
[119.72605896 204.63911438]
[118.30917358 191.42123413]
[124.86787415 179.63481140]
[119.12762451 165.77662659]
[113.38737488 151.91842651]
[107.64712524 138.06022644]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 57]
[5 56]
[6 55]
[7 54]
[8 53]
[9 52]
[10 51]
[13 50]
[14 49]
[15 48]
[16 47]
[17 46]
[20 43]
[21 42]
[22 41]
[23 40]
[27 39]
[28 38]
[29 37]
[61 122]
[62 121]
[63 120]
[65 118]
[66 117]
[67 116]
[68 115]
[71 112]
[72 111]
[74 109]
[75 108]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 99]
[82 98]
[83 97]
[124 150]
[125 149]
[126 148]
[127 147]
[128 146]
[129 145]
[130 144]
[132 141]
[133 140]
[155 175]
[156 174]
[157 173]
[158 172]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
