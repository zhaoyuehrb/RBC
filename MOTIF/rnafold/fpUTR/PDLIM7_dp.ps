%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PDLIM7)
} def

/sequence { (\
GGUCAGAACACUGGCGGCCGAUCCCAACGAGGCUCCCUGGAGCCCGACGCAGAGCAGCGCCCUGGCCGGGCCAAGCAGGAGCCGGCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.009852304 ubox
1 19 0.154963814 ubox
1 23 0.005075611 ubox
1 24 0.003754000 ubox
1 25 0.008596910 ubox
1 61 0.003367576 ubox
1 62 0.004495079 ubox
1 67 0.021536557 ubox
1 83 0.004145432 ubox
1 89 0.017247128 ubox
2 9 0.008521229 ubox
2 11 0.010957116 ubox
2 15 0.985636070 ubox
2 18 0.152453291 ubox
2 22 0.004656820 ubox
2 24 0.005136443 ubox
2 66 0.021568155 ubox
2 82 0.003483346 ubox
2 86 0.017002779 ubox
3 8 0.007900143 ubox
3 10 0.010359452 ubox
3 14 0.986761802 ubox
3 17 0.147697007 ubox
3 21 0.005003687 ubox
3 65 0.021568008 ubox
3 85 0.016963539 ubox
4 13 0.991136730 ubox
4 16 0.122711599 ubox
4 20 0.004962827 ubox
4 64 0.023845674 ubox
4 84 0.016689535 ubox
5 12 0.991051963 ubox
5 63 0.023846920 ubox
6 11 0.982863431 ubox
6 62 0.023814898 ubox
6 89 0.005957638 ubox
7 88 0.005871167 ubox
9 64 0.006013542 ubox
10 63 0.005839074 ubox
11 85 0.024417977 ubox
12 20 0.003998847 ubox
12 26 0.019306804 ubox
12 29 0.005287331 ubox
12 84 0.024555368 ubox
12 87 0.013706721 ubox
13 19 0.006099062 ubox
13 25 0.021115168 ubox
13 28 0.006781344 ubox
13 61 0.024084702 ubox
13 83 0.024693477 ubox
13 86 0.015605948 ubox
13 89 0.003497346 ubox
14 18 0.006017462 ubox
14 24 0.021096253 ubox
14 60 0.024158458 ubox
14 82 0.024694934 ubox
14 86 0.007851973 ubox
14 88 0.004421852 ubox
15 29 0.007092748 ubox
15 59 0.024140946 ubox
15 68 0.007744614 ubox
15 81 0.024662353 ubox
15 84 0.016131021 ubox
15 85 0.007637063 ubox
16 23 0.032074940 ubox
16 24 0.088501776 ubox
16 25 0.183296135 ubox
16 28 0.021159615 ubox
16 34 0.024730157 ubox
16 35 0.006773066 ubox
16 58 0.021617634 ubox
16 61 0.027502170 ubox
16 62 0.008360716 ubox
16 67 0.024181204 ubox
16 72 0.005900357 ubox
16 83 0.018924732 ubox
16 89 0.038633163 ubox
17 22 0.021904404 ubox
17 23 0.088228952 ubox
17 24 0.182072557 ubox
17 33 0.027387637 ubox
17 55 0.006659104 ubox
17 58 0.011527484 ubox
17 60 0.027594521 ubox
17 61 0.008166885 ubox
17 66 0.024226362 ubox
17 71 0.005906809 ubox
17 82 0.018918323 ubox
17 86 0.893579235 ubox
17 88 0.007163402 ubox
18 32 0.027425089 ubox
18 54 0.006680576 ubox
18 57 0.015357147 ubox
18 59 0.026474929 ubox
18 65 0.024237598 ubox
18 70 0.005806125 ubox
18 81 0.018859288 ubox
18 85 0.894683192 ubox
19 29 0.082903465 ubox
19 31 0.027418394 ubox
19 59 0.007002549 ubox
19 64 0.024253609 ubox
19 69 0.005700914 ubox
19 84 0.893300338 ubox
20 28 0.144361977 ubox
20 35 0.013058331 ubox
20 58 0.007961745 ubox
20 63 0.019619258 ubox
20 83 0.425068898 ubox
20 89 0.325232014 ubox
21 34 0.013413073 ubox
21 88 0.327833671 ubox
22 30 0.425140494 ubox
22 32 0.003243451 ubox
22 53 0.025220384 ubox
22 80 0.211385816 ubox
22 85 0.005470923 ubox
22 87 0.317795822 ubox
23 29 0.453802425 ubox
23 31 0.038506961 ubox
23 32 0.033184946 ubox
23 52 0.025343706 ubox
23 79 0.211572046 ubox
23 84 0.008217777 ubox
23 85 0.171021711 ubox
24 31 0.070655078 ubox
24 32 0.042252577 ubox
24 65 0.005794533 ubox
24 78 0.210563372 ubox
24 79 0.043877556 ubox
24 84 0.170709724 ubox
24 85 0.287390772 ubox
25 31 0.084751114 ubox
25 64 0.006419242 ubox
25 78 0.046215678 ubox
25 84 0.287819264 ubox
26 63 0.005967750 ubox
28 46 0.217865014 ubox
28 49 0.031124393 ubox
28 84 0.037973968 ubox
29 35 0.003907534 ubox
29 45 0.222004598 ubox
29 48 0.032346914 ubox
29 83 0.018080841 ubox
29 89 0.027907555 ubox
30 34 0.003407002 ubox
30 38 0.006072355 ubox
30 88 0.027988234 ubox
31 37 0.006508016 ubox
31 44 0.228716745 ubox
31 45 0.006461912 ubox
31 72 0.011163523 ubox
31 83 0.900866004 ubox
32 36 0.006404464 ubox
32 43 0.228815160 ubox
32 44 0.004574108 ubox
32 55 0.003825706 ubox
32 71 0.011177014 ubox
32 76 0.004853084 ubox
32 82 0.971298128 ubox
33 42 0.228860757 ubox
33 54 0.003827862 ubox
33 70 0.010843417 ubox
33 75 0.004859356 ubox
33 81 0.972583875 ubox
34 41 0.228723554 ubox
34 53 0.003818161 ubox
34 69 0.009899087 ubox
34 74 0.004795424 ubox
34 80 0.971381582 ubox
35 39 0.006080316 ubox
35 40 0.227818526 ubox
35 52 0.003758214 ubox
35 68 0.009564392 ubox
35 69 0.003360096 ubox
35 79 0.811857667 ubox
36 65 0.008691564 ubox
36 68 0.003325146 ubox
36 70 0.004101719 ubox
36 78 0.611250876 ubox
36 79 0.536808221 ubox
37 52 0.003431055 ubox
37 64 0.008723150 ubox
37 69 0.005043230 ubox
37 75 0.230839891 ubox
37 78 0.756911696 ubox
38 49 0.003236859 ubox
38 51 0.003535142 ubox
38 68 0.005186445 ubox
38 73 0.066171389 ubox
38 74 0.227081026 ubox
38 77 0.925854579 ubox
39 48 0.003501941 ubox
39 50 0.003526066 ubox
39 62 0.008575404 ubox
39 67 0.006392464 ubox
39 72 0.082280728 ubox
39 76 0.927319500 ubox
40 61 0.008594601 ubox
40 66 0.005727086 ubox
40 71 0.055911189 ubox
42 60 0.008555355 ubox
42 66 0.005032291 ubox
42 71 0.970522213 ubox
43 59 0.007933395 ubox
43 65 0.005644569 ubox
43 70 0.973331233 ubox
44 64 0.005605315 ubox
44 65 0.004835014 ubox
44 69 0.973350553 ubox
45 59 0.003922849 ubox
45 64 0.005331696 ubox
45 68 0.973297306 ubox
45 69 0.003437345 ubox
46 58 0.010342378 ubox
46 63 0.005490399 ubox
46 67 0.958267690 ubox
48 59 0.107952274 ubox
48 64 0.033205083 ubox
48 68 0.003793244 ubox
49 55 0.080167459 ubox
49 58 0.177012760 ubox
49 60 0.022291819 ubox
49 63 0.015735445 ubox
49 66 0.443741268 ubox
49 67 0.005830403 ubox
49 76 0.008174681 ubox
49 82 0.010158512 ubox
50 54 0.079675304 ubox
50 57 0.176984410 ubox
50 59 0.022414721 ubox
50 64 0.912681449 ubox
50 65 0.326183879 ubox
50 75 0.008166393 ubox
50 81 0.010168210 ubox
51 63 0.962931232 ubox
52 62 0.966092495 ubox
53 63 0.023090996 ubox
54 60 0.961820987 ubox
54 62 0.022877818 ubox
54 66 0.013373940 ubox
54 71 0.004997174 ubox
54 76 0.119062480 ubox
55 59 0.955547662 ubox
55 64 0.046208224 ubox
55 65 0.010409837 ubox
55 70 0.004992625 ubox
55 75 0.119041538 ubox
56 63 0.046939520 ubox
57 62 0.046279351 ubox
57 66 0.035823005 ubox
57 71 0.004970668 ubox
57 76 0.075759637 ubox
57 82 0.006796908 ubox
58 65 0.035869199 ubox
58 70 0.004922650 ubox
58 75 0.075782825 ubox
58 81 0.006803848 ubox
59 66 0.029884828 ubox
59 71 0.195949042 ubox
59 76 0.041280642 ubox
59 82 0.019876885 ubox
60 65 0.031183137 ubox
60 69 0.007721661 ubox
60 70 0.200625892 ubox
60 75 0.042213981 ubox
60 79 0.007703019 ubox
60 81 0.020785581 ubox
61 68 0.007743981 ubox
61 69 0.200726377 ubox
61 70 0.006411795 ubox
61 78 0.007672871 ubox
61 79 0.024815513 ubox
62 68 0.200570179 ubox
62 69 0.006722131 ubox
62 75 0.027050860 ubox
62 78 0.024852923 ubox
63 68 0.006475822 ubox
63 73 0.078809972 ubox
63 74 0.019388699 ubox
63 77 0.022700852 ubox
63 87 0.005780778 ubox
64 72 0.086529833 ubox
64 76 0.018153873 ubox
64 86 0.004545555 ubox
65 71 0.086733011 ubox
65 76 0.011510562 ubox
65 86 0.053675289 ubox
66 70 0.086102330 ubox
66 75 0.014987762 ubox
66 85 0.053950726 ubox
67 84 0.053966737 ubox
68 83 0.054082347 ubox
68 89 0.010999238 ubox
69 82 0.054008690 ubox
69 83 0.005859191 ubox
69 88 0.010298495 ubox
70 76 0.008599482 ubox
70 82 0.006432785 ubox
70 86 0.031600965 ubox
71 75 0.008952234 ubox
71 79 0.054119645 ubox
71 81 0.006737858 ubox
71 85 0.031640404 ubox
72 78 0.054242894 ubox
72 84 0.031595741 ubox
75 82 0.041919564 ubox
75 86 0.004357836 ubox
76 81 0.041934194 ubox
76 85 0.004361355 ubox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
17 86 0.9500000 lbox
18 85 0.9500000 lbox
19 84 0.9500000 lbox
31 83 0.9500000 lbox
32 82 0.9500000 lbox
33 81 0.9500000 lbox
34 80 0.9500000 lbox
35 79 0.9500000 lbox
36 78 0.9500000 lbox
38 77 0.9500000 lbox
39 76 0.9500000 lbox
42 71 0.9500000 lbox
43 70 0.9500000 lbox
44 69 0.9500000 lbox
45 68 0.9500000 lbox
46 67 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
54 60 0.9500000 lbox
55 59 0.9500000 lbox
showpage
end
%%EOF
