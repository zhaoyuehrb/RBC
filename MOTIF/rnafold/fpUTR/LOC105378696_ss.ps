%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGUUGCUAUCCCUGCCUGGCAGGACCAUCAGCAGCAGUUAGGACUACUGAAGACGAUGAUUAUCAUGUGAUGAGCACCUAAGCUGAACUGGACACUGUGCUGAGCACUUUCCAGCCACUAUCUCACUCAAAUGAGUUCAGGACCAGCGUGAGGAGGCUCCUGGCAGUUGCCCACAGGACCAGCGUGAGGAGGCUCCUGGCAGUUGGGCUGUUCCGGGCCGGCGGCAGGAGGGAGCUUGAUGCGUGCCUGGCG\
UGCGCAGGCCG\
) } def
/len { sequence length } bind def

/coor [
[178.36573792 495.73425293]
[163.43911743 494.25241089]
[150.18711853 487.22500610]
[140.58625793 475.70010376]
[136.06843567 461.39663696]
[137.30747986 446.44787598]
[144.11860657 433.08343506]
[155.48593140 423.29650879]
[169.71409607 418.54681396]
[184.68099976 419.54275513]
[198.15438843 426.13577271]
[208.12536621 437.34356689]
[204.79983521 422.71682739]
[201.47431946 408.09011841]
[198.14878845 393.46340942]
[194.82327271 378.83666992]
[190.29148865 373.03100586]
[191.54574585 364.01831055]
[188.39254761 349.35348511]
[185.23934937 334.68865967]
[182.08615112 320.02383423]
[178.76063538 305.39709473]
[175.26324463 290.81051636]
[164.77171326 280.23806763]
[169.07812500 265.01422119]
[165.58073425 250.42764282]
[160.98095703 244.67568970]
[162.12907410 235.64886475]
[158.80355835 221.02215576]
[145.06268311 215.33653259]
[137.21168518 202.49806213]
[138.44023132 187.32098389]
[148.48606873 175.64247131]
[145.16053772 161.01574707]
[141.83502197 146.38903809]
[138.50949097 131.76231384]
[135.18397522 117.13559723]
[131.85844421 102.50888062]
[142.34539795 135.57818604]
[119.60076141 176.17700195]
[63.26993179 195.16677856]
[49.86104584 201.88999939]
[36.45215988 208.61322021]
[23.04327202 215.33644104]
[16.64281464 230.04745483]
[1.11385846 234.07623291]
[-11.63111305 224.33224487]
[-11.81524754 208.29025269]
[0.70270663 198.25628662]
[16.32004738 201.92755127]
[29.72893524 195.20433044]
[43.13782120 188.48110962]
[56.54671097 181.75788879]
[55.05649567 174.40742493]
[40.35557556 177.38784790]
[25.65465546 180.36828613]
[10.95373535 183.34870911]
[-3.74723053 186.32891846]
[-6.72720575 171.62789917]
[7.97330570 168.64779663]
[22.67422485 165.66735840]
[37.37514496 162.68693542]
[52.07606506 159.70651245]
[50.58584976 152.35604858]
[35.61724854 151.38600159]
[20.64864731 150.41596985]
[5.68004608 149.44592285]
[-8.77488613 157.19105530]
[-22.56527901 148.31652832]
[-21.50475693 131.95170593]
[-6.68429565 124.93131256]
[6.65008593 134.47732544]
[21.61868668 135.44737244]
[36.58728790 136.41740417]
[51.55588913 137.38745117]
[54.62275314 122.70431519]
[40.51733017 117.60166168]
[26.41190910 112.49900818]
[12.20965099 119.43236542]
[-2.70810461 114.21354675]
[-9.49091816 99.93877411]
[-4.11466742 85.07703400]
[10.23101425 78.44551849]
[25.03508759 83.97859955]
[31.51455879 98.39358521]
[45.61998367 103.49623871]
[59.72540665 108.59889221]
[64.03324890 102.45947266]
[57.70728302 88.85865784]
[72.64894104 90.18063354]
[76.95678711 84.04121399]
[67.36011505 72.51281738]
[57.76343918 60.98442459]
[48.16676712 49.45603180]
[38.57009506 37.92763519]
[26.78759384 39.16987991]
[15.97307968 34.63160324]
[8.75441360 25.54048920]
[6.82526588 14.21474934]
[10.54883099 3.47258139]
[1.22608268 -8.27843380]
[-8.09666538 -20.02944946]
[-17.41941452 -31.78046417]
[-32.00040436 -40.43095779]
[-27.72439766 -56.83681107]
[-10.77597332 -57.26950455]
[-5.66839886 -41.10321426]
[3.65434980 -29.35219765]
[12.97709846 -17.60118294]
[22.29984665 -5.85016680]
[40.60198975 -4.82858181]
[52.52332306 9.51514721]
[50.09848785 28.33096313]
[59.69516373 39.85935593]
[69.29183197 51.38775253]
[78.88850403 62.91614532]
[88.48518372 74.44454193]
[95.56742096 71.97637177]
[90.63108826 57.81188965]
[85.69499207 43.64732361]
[99.85964203 38.71146011]
[104.79557037 52.87555695]
[109.73190308 67.04003906]
[116.81414795 64.57187653]
[117.16710663 49.57602692]
[117.52005768 34.58018112]
[107.08378601 17.30771446]
[117.93169403 1.27756369]
[117.93169403 -13.72243595]
[117.93169403 -28.72243690]
[117.93169403 -43.72243500]
[109.26799011 -57.64624023]
[117.23211670 -71.98167419]
[133.63127136 -71.98167419]
[141.59539795 -57.64624023]
[132.93168640 -43.72243500]
[132.93168640 -28.72243690]
[132.93168640 -13.72243595]
[132.93168640 1.27756369]
[140.74938965 7.79266167]
[143.77149963 17.73941231]
[140.77616882 27.92288780]
[132.51589966 34.93313599]
[132.16294861 49.92898178]
[131.80999756 64.92482758]
[144.75602722 72.50112152]
[157.65727234 64.84880066]
[170.55850220 57.19647217]
[183.45973206 49.54414749]
[196.36097717 41.89181900]
[209.21696472 34.16372681]
[222.02728271 26.36013603]
[229.78765869 12.57293034]
[244.68225098 12.55951405]
[257.49255371 4.75592184]
[270.30285645 -3.04766989]
[283.11318970 -10.85126114]
[295.92349243 -18.65485382]
[303.68386841 -32.44205856]
[318.57846069 -32.45547485]
[331.38876343 -40.25906754]
[344.19906616 -48.06266022]
[357.00936890 -55.86625290]
[369.81970215 -63.66984177]
[377.58007812 -77.45704651]
[392.47467041 -77.47046661]
[405.28497314 -85.27405548]
[410.96127319 -92.38611603]
[418.29223633 -93.09307861]
[431.19348145 -100.74540710]
[444.09469604 -108.39772797]
[456.99594116 -116.05005646]
[469.80624390 -123.85364532]
[482.52386475 -131.80741882]
[489.73507690 -146.53598022]
[506.11221313 -147.38507080]
[514.80792236 -133.48121643]
[506.87673950 -119.12751007]
[490.47763062 -119.08982086]
[477.76004028 -111.13604736]
[475.83837891 -106.79762268]
[471.18896484 -103.60459137]
[464.64828491 -103.14881897]
[451.74703979 -95.49649811]
[438.84579468 -87.84416962]
[425.94454956 -80.19184113]
[413.08856201 -72.46375275]
[400.27825928 -64.66015625]
[393.43417358 -51.43111801]
[377.62329102 -50.85953522]
[364.81298828 -43.05594635]
[352.00265503 -35.25235367]
[339.19235229 -27.44876099]
[326.38204956 -19.64517021]
[319.53796387 -6.41612816]
[303.72708130 -5.84454679]
[290.91677856 1.95904517]
[278.10647583 9.76263714]
[265.29614258 17.56622887]
[252.48585510 25.36981964]
[245.64175415 38.59886169]
[229.83087158 39.17044449]
[217.02056885 46.97403336]
[212.95707703 53.11659622]
[204.01330566 54.79305649]
[191.11206055 62.44538498]
[178.21083069 70.09770966]
[165.30958557 77.75003815]
[152.40835571 85.40235901]
[146.48516846 99.18335724]
[149.81068420 113.81007385]
[153.13621521 128.43679810]
[156.46173096 143.06350708]
[159.78726196 157.69023132]
[163.11277771 172.31695557]
[177.22048950 178.50392151]
[184.89036560 191.65786743]
[183.36209106 206.62879944]
[173.43028259 217.69662476]
[176.75579834 232.32334900]
[180.16731262 246.93025208]
[183.66470337 261.51681519]
[194.40638733 273.13262939]
[189.84982300 287.31314087]
[193.34721375 301.89971924]
[197.57666016 306.90969849]
[198.52482605 312.46969604]
[196.75099182 316.87063599]
[199.90419006 331.53546143]
[203.05738831 346.20028687]
[206.21057129 360.86514282]
[209.44999695 375.51116943]
[212.77551270 390.13787842]
[216.10102844 404.76458740]
[219.42655945 419.39132690]
[222.75207520 434.01803589]
[227.26968384 448.32156372]
[232.94873047 462.20495605]
[238.62777710 476.08834839]
[244.30682373 489.97174072]
[249.98587036 503.85513306]
[256.11053467 510.58489990]
[255.64900208 517.93542480]
[261.16430664 531.88464355]
[266.67962646 545.83392334]
[272.19491577 559.78314209]
[277.71020508 573.73242188]
[283.22552490 587.68164062]
[288.74081421 601.63085938]
[300.18746948 614.13732910]
[291.33853149 628.59875488]
[274.99264526 624.09893799]
[274.79159546 607.14617920]
[269.27627563 593.19696045]
[263.76098633 579.24768066]
[258.24566650 565.29846191]
[252.73036194 551.34924316]
[247.21505737 537.39996338]
[241.69975281 523.45074463]
[236.10249329 509.53417969]
[230.42343140 495.65078735]
[224.74438477 481.76739502]
[219.06533813 467.88400269]
[213.38629150 454.00061035]
[211.66204834 468.90118408]
[204.42016602 482.03723145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 236]
[13 235]
[14 234]
[15 233]
[16 232]
[18 231]
[19 230]
[20 229]
[21 228]
[22 225]
[23 224]
[25 222]
[26 221]
[28 220]
[29 219]
[33 215]
[34 214]
[35 213]
[36 212]
[37 211]
[38 210]
[41 53]
[42 52]
[43 51]
[44 50]
[64 75]
[65 74]
[66 73]
[67 72]
[76 87]
[77 86]
[78 85]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
[100 110]
[101 109]
[102 108]
[103 107]
[124 145]
[125 144]
[126 143]
[128 139]
[129 138]
[130 137]
[131 136]
[146 209]
[147 208]
[148 207]
[149 206]
[150 205]
[151 203]
[152 202]
[154 200]
[155 199]
[156 198]
[157 197]
[158 196]
[160 194]
[161 193]
[162 192]
[163 191]
[164 190]
[166 188]
[167 187]
[169 186]
[170 185]
[171 184]
[172 183]
[173 180]
[174 179]
[237 264]
[238 263]
[239 262]
[240 261]
[241 260]
[243 259]
[244 258]
[245 257]
[246 256]
[247 255]
[248 254]
[249 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
