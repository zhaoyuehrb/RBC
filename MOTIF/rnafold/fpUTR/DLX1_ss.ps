%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCUUUGAACCGAGUUUGGGGAGCUCAGCAGCAUCAUGCUUAGACUUUUCAAAGAGACAAACUCCAUUUUCUUAUGAAUGGAAAGUGAAAACCCCUGUUCCGCUUAAAUUGGGUUCCUUCCUGUCCUGAGAAACAUAGAGACCCCCAAAAGGGAAGCAGAGGAGAGAAAGUCCCACACCCAGACCCCGCGAGAAGAG\
) } def
/len { sequence length } bind def

/coor [
[40.31595993 568.95257568]
[29.37860489 557.54425049]
[29.79515266 541.74548340]
[41.31847382 530.92932129]
[41.55526733 515.93121338]
[41.79206085 500.93307495]
[42.02885437 485.93493652]
[30.65124512 478.93945312]
[24.16615677 467.13967896]
[24.36248970 453.56838989]
[31.29593086 441.77444458]
[43.24644470 434.89483643]
[43.71997452 419.90231323]
[34.60642242 404.91021729]
[44.42935944 389.34020996]
[44.66615295 374.34207153]
[44.90294647 359.34396362]
[45.13973999 344.34582520]
[45.37653351 329.34768677]
[45.61332703 314.34954834]
[45.85012054 299.35144043]
[39.46617126 295.41503906]
[39.03198242 310.40875244]
[25.82989883 317.52947998]
[13.06217003 309.65643311]
[13.49668407 294.66271973]
[26.69827080 287.54226685]
[20.31431961 283.60586548]
[7.01980305 290.55249023]
[-6.27471304 297.49914551]
[-19.56922913 304.44580078]
[-24.05878830 319.59899902]
[-37.98797989 327.06579590]
[-53.09286499 322.41625977]
[-60.41198349 308.40890503]
[-55.60302734 293.35403442]
[-41.51906967 286.18341064]
[-26.51587105 291.15127563]
[-13.22135544 284.20462036]
[0.07316092 277.25799561]
[13.36767673 270.31134033]
[16.85977554 244.49284363]
[33.89868546 227.51188660]
[55.77511978 224.66790771]
[59.98044968 210.26947021]
[64.18577576 195.87101746]
[68.39110565 181.47257996]
[72.59643555 167.07412720]
[76.80176544 152.67568970]
[81.00708771 138.27723694]
[71.58448029 133.32255554]
[63.47263336 126.03462219]
[57.25118256 116.76496124]
[53.40440369 106.00914001]
[52.28547668 94.38066101]
[38.06417465 89.61048889]
[23.84287262 84.84031677]
[8.89724827 90.67193604]
[-4.90769482 82.49862671]
[-6.98198605 66.59023285]
[4.26559401 55.15032578]
[20.20686340 56.95461655]
[28.61304474 70.61901093]
[42.83434677 75.38918304]
[57.05565262 80.15935516]
[65.42608643 67.71203613]
[55.64391327 56.34062195]
[45.86173630 44.96920776]
[36.07956314 33.59778976]
[26.29738808 22.22637749]
[16.51521492 10.85496235]
[6.73304033 -0.51645190]
[-3.04913378 -11.88786602]
[-18.68227005 -11.51495743]
[-30.86530685 -21.31840706]
[-33.84578705 -36.66932678]
[-26.21641541 -50.31948471]
[-11.57955360 -55.82368851]
[3.15372372 -50.58302307]
[11.02681255 -37.07197189]
[8.32228088 -21.67004013]
[18.10445404 -10.29862595]
[27.88662910 1.07278836]
[37.66880417 12.44420242]
[47.45097733 23.81561661]
[57.23315048 35.18703079]
[67.01532745 46.55844498]
[76.79750061 57.92985916]
[86.20762634 54.90338135]
[95.85931396 53.91268539]
[105.32519531 54.92619705]
[114.20138550 57.82518768]
[122.12468719 62.41210938]
[128.78747559 68.42217255]
[140.68176270 59.28292847]
[152.50354004 50.05007935]
[164.25207520 40.72420502]
[176.00061035 31.39833069]
[187.74914551 22.07245636]
[199.49768066 12.74658108]
[211.17224121 3.32826138]
[222.77209473 -6.18191671]
[227.43038940 -14.05093956]
[234.63095093 -15.74892044]
[246.37948608 -25.07479477]
[258.12802124 -34.40066910]
[260.05059814 -39.27462006]
[263.32656860 -42.58679199]
[267.13171387 -44.08298492]
[270.66073608 -43.87408829]
[282.83761597 -52.63329315]
[295.01449585 -61.39250183]
[307.19137573 -70.15171051]
[319.36825562 -78.91091156]
[319.57266235 -94.31430054]
[328.70117188 -106.50132751]
[343.08532715 -110.92398834]
[357.14724731 -106.08652496]
[369.32412720 -114.84572601]
[381.50097656 -123.60493469]
[384.17691040 -138.95019531]
[396.65078735 -147.65982056]
[411.26367188 -145.01414490]
[423.44052124 -153.77336121]
[435.61740112 -162.53256226]
[435.55624390 -178.04951477]
[444.65466309 -190.61924744]
[459.41418457 -195.40843201]
[474.15945435 -190.57553101]
[483.22061157 -177.97889709]
[483.11343384 -162.46220398]
[473.87918091 -149.99191284]
[459.06857300 -145.36311340]
[444.37661743 -150.35569763]
[432.19973755 -141.59648132]
[420.02285767 -132.83728027]
[417.88412476 -118.14165497]
[405.65982056 -109.08510590]
[390.26019287 -111.42806244]
[378.08331299 -102.66885376]
[365.90643311 -93.90964508]
[366.02093506 -79.03937531]
[357.25354004 -66.80840302]
[342.79620361 -62.02938461]
[328.12744141 -66.73403931]
[315.95059204 -57.97483063]
[303.77371216 -49.21562576]
[291.59683228 -40.45641708]
[279.41995239 -31.69721222]
[267.45388794 -22.65213585]
[255.70535278 -13.32626057]
[243.95681763 -4.00038624]
[232.28227234 5.41793346]
[220.68241882 14.92811108]
[217.49983215 21.60660744]
[208.82356262 24.49511528]
[197.07502747 33.82099152]
[185.32649231 43.14686584]
[173.57795715 52.47274017]
[161.82942200 61.79861450]
[158.54180908 68.42604065]
[149.82101440 71.17721558]
[137.92672729 80.31646729]
[142.65188599 102.58743286]
[135.26919556 124.12388611]
[117.87442017 138.81214905]
[95.40553284 142.48257446]
[91.20021057 156.88101196]
[86.99488068 171.27944946]
[82.78955078 185.67790222]
[78.58422089 200.07633972]
[74.37889099 214.47479248]
[70.17356110 228.87322998]
[81.57353973 236.77986145]
[89.14324951 249.16981506]
[91.15277863 264.20162964]
[86.74862671 279.38790894]
[76.18221283 292.00698853]
[60.84825134 299.58822632]
[60.61145782 314.58636475]
[60.37466431 329.58447266]
[60.13787079 344.58261108]
[59.90107727 359.58074951]
[59.66428375 374.57888794]
[59.42749023 389.57699585]
[67.82900238 399.37203979]
[67.31739807 411.86520386]
[58.71249771 420.37585449]
[58.23897171 435.36837769]
[71.73962402 445.55023193]
[76.46774292 461.61236572]
[70.75110626 477.17291260]
[57.02698517 486.17172241]
[56.79019165 501.16986084]
[56.55339813 516.16796875]
[56.31660461 531.16613770]
[67.49272919 542.34063721]
[67.41032410 558.14471436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 196]
[5 195]
[6 194]
[7 193]
[12 189]
[13 188]
[15 185]
[16 184]
[17 183]
[18 182]
[19 181]
[20 180]
[21 179]
[28 41]
[29 40]
[30 39]
[31 38]
[44 173]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[50 167]
[55 65]
[56 64]
[57 63]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[94 163]
[95 162]
[96 160]
[97 159]
[98 158]
[99 157]
[100 156]
[101 154]
[102 153]
[104 152]
[105 151]
[106 150]
[110 149]
[111 148]
[112 147]
[113 146]
[114 145]
[118 141]
[119 140]
[120 139]
[123 136]
[124 135]
[125 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
