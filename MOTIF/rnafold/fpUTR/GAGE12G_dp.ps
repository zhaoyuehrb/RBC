%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GAGE12G)
} def

/sequence { (\
GGCGUCUUCUGCCCGGCCCCUUCGCCCACGUGAAGAACGCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.036076299 ubox
1 14 0.007112974 ubox
1 41 0.998531784 ubox
2 12 0.036399391 ubox
2 13 0.006248773 ubox
2 40 0.999295672 ubox
3 11 0.036553456 ubox
3 39 0.999284011 ubox
4 10 0.030417034 ubox
4 12 0.005189418 ubox
4 17 0.003617181 ubox
4 38 0.998736448 ubox
5 11 0.005033638 ubox
5 16 0.003665924 ubox
5 36 0.705506002 ubox
5 37 0.705330843 ubox
6 15 0.004041505 ubox
6 35 0.998861648 ubox
7 33 0.004079005 ubox
7 34 0.998488983 ubox
7 35 0.009001933 ubox
7 37 0.006013967 ubox
8 32 0.005159557 ubox
8 33 0.998547512 ubox
8 34 0.009487282 ubox
8 36 0.013321489 ubox
9 32 0.996768528 ubox
9 35 0.013713493 ubox
10 28 0.076579021 ubox
10 30 0.350201781 ubox
10 32 0.051255333 ubox
10 34 0.013121784 ubox
11 17 0.005613428 ubox
11 27 0.077653040 ubox
11 29 0.369196509 ubox
11 31 0.484238036 ubox
12 16 0.005591588 ubox
12 30 0.500565715 ubox
14 24 0.025299876 ubox
14 30 0.015777483 ubox
14 43 0.004968600 ubox
15 23 0.025351854 ubox
15 26 0.993832284 ubox
15 27 0.080027631 ubox
15 29 0.009041218 ubox
15 41 0.036929925 ubox
16 22 0.021074140 ubox
16 25 0.997118225 ubox
16 26 0.059085371 ubox
16 40 0.036970934 ubox
17 24 0.996891585 ubox
17 39 0.036908443 ubox
20 35 0.037748559 ubox
21 34 0.037909047 ubox
22 33 0.037977501 ubox
23 32 0.037996177 ubox
24 31 0.037924805 ubox
25 30 0.037851855 ubox
41 111 0.004665335 ubox
42 87 0.033865811 ubox
42 88 0.052029846 ubox
42 89 0.760595148 ubox
42 90 0.062281656 ubox
42 91 0.037543515 ubox
42 94 0.043999698 ubox
42 96 0.007347671 ubox
42 99 0.004144219 ubox
42 110 0.010199110 ubox
43 86 0.035962525 ubox
43 87 0.055262068 ubox
43 88 0.919864564 ubox
43 89 0.059576411 ubox
43 90 0.032792178 ubox
43 91 0.011943121 ubox
43 92 0.026983380 ubox
43 93 0.050279044 ubox
43 94 0.009563020 ubox
43 95 0.008060328 ubox
43 98 0.004232176 ubox
43 106 0.005077489 ubox
43 109 0.010512298 ubox
44 85 0.035681924 ubox
44 86 0.048206741 ubox
44 87 0.986613801 ubox
44 88 0.044868860 ubox
44 89 0.016610920 ubox
44 90 0.005687231 ubox
44 91 0.014545634 ubox
44 92 0.049177269 ubox
44 93 0.011714856 ubox
44 94 0.004075522 ubox
44 108 0.003617881 ubox
45 84 0.035615413 ubox
45 85 0.037197625 ubox
45 86 0.997747895 ubox
45 87 0.005323334 ubox
45 88 0.012122802 ubox
45 90 0.003933039 ubox
45 91 0.018324658 ubox
45 92 0.011470291 ubox
45 95 0.003202498 ubox
46 85 0.998160638 ubox
46 87 0.012231940 ubox
46 89 0.003408113 ubox
46 90 0.015231783 ubox
46 91 0.010777285 ubox
46 94 0.003199790 ubox
47 84 0.998219156 ubox
47 86 0.012279849 ubox
47 89 0.012589673 ubox
47 90 0.009282977 ubox
47 93 0.003182891 ubox
48 82 0.999474477 ubox
49 81 0.998827276 ubox
50 80 0.997635878 ubox
51 77 0.003978264 ubox
51 81 0.005096766 ubox
52 79 0.937326002 ubox
52 80 0.005716966 ubox
52 89 0.003394013 ubox
53 78 0.913279500 ubox
53 88 0.003498434 ubox
54 76 0.998518263 ubox
54 87 0.003513977 ubox
55 75 0.999980837 ubox
55 86 0.003520561 ubox
56 74 0.999976575 ubox
57 73 0.999531338 ubox
57 85 0.003735796 ubox
58 72 0.998261042 ubox
58 84 0.003798767 ubox
59 67 0.026537332 ubox
59 68 0.013822223 ubox
59 83 0.003788169 ubox
60 66 0.030249062 ubox
60 69 0.990918286 ubox
61 65 0.030272882 ubox
61 68 0.995194212 ubox
61 82 0.003870797 ubox
62 67 0.931034587 ubox
62 81 0.003876095 ubox
63 69 0.007403260 ubox
63 80 0.003857210 ubox
64 68 0.003360789 ubox
66 77 0.003702392 ubox
67 76 0.004010527 ubox
68 75 0.004010880 ubox
69 74 0.003946101 ubox
88 102 0.004643365 ubox
88 103 0.010120085 ubox
88 117 0.005279952 ubox
88 118 0.012069382 ubox
89 101 0.005933268 ubox
89 102 0.011047275 ubox
89 103 0.047259571 ubox
89 116 0.005645268 ubox
89 117 0.015576012 ubox
89 118 0.145855552 ubox
90 100 0.006206917 ubox
90 101 0.012324127 ubox
90 102 0.054930367 ubox
90 103 0.025574103 ubox
90 115 0.005220375 ubox
90 116 0.015165101 ubox
90 117 0.195505552 ubox
90 118 0.024030407 ubox
91 100 0.012182085 ubox
91 101 0.057789559 ubox
91 102 0.009554286 ubox
91 103 0.154518391 ubox
91 115 0.012268667 ubox
91 116 0.205186034 ubox
91 117 0.023723354 ubox
92 100 0.058031095 ubox
92 102 0.117645066 ubox
92 115 0.205897068 ubox
93 102 0.911425446 ubox
94 101 0.921618733 ubox
94 103 0.097423491 ubox
94 116 0.208465270 ubox
95 100 0.921548010 ubox
95 102 0.104489964 ubox
95 115 0.218503345 ubox
96 101 0.099534123 ubox
96 111 0.007017907 ubox
96 113 0.273694721 ubox
96 115 0.136101405 ubox
97 110 0.006679579 ubox
97 112 0.283934510 ubox
97 114 0.188185987 ubox
98 111 0.282852390 ubox
98 113 0.190017352 ubox
99 107 0.036043065 ubox
99 111 0.013599286 ubox
99 113 0.003866597 ubox
100 106 0.037238213 ubox
100 109 0.275308935 ubox
100 110 0.007770778 ubox
100 112 0.008184927 ubox
101 105 0.032408545 ubox
101 108 0.273160303 ubox
101 110 0.197584678 ubox
102 109 0.200290973 ubox
103 108 0.177553997 ubox
103 112 0.030844387 ubox
103 114 0.028171045 ubox
103 119 0.108877293 ubox
104 111 0.031095676 ubox
104 113 0.028582507 ubox
104 116 0.020276012 ubox
104 117 0.774123225 ubox
104 118 0.099283991 ubox
105 115 0.011159461 ubox
105 116 0.891559512 ubox
105 117 0.074093559 ubox
106 113 0.031540919 ubox
106 115 0.905755862 ubox
107 112 0.026697457 ubox
107 114 0.888382112 ubox
107 119 0.004619694 ubox
108 113 0.822276063 ubox
108 116 0.102573080 ubox
108 118 0.003653541 ubox
109 115 0.109476447 ubox
111 119 0.017062941 ubox
112 118 0.018617680 ubox
113 119 0.004752109 ubox
114 118 0.004878789 ubox
1 41 0.9500000 lbox
2 40 0.9500000 lbox
3 39 0.9500000 lbox
4 38 0.9500000 lbox
5 37 0.9500000 lbox
6 35 0.9500000 lbox
7 34 0.9500000 lbox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
42 89 0.9500000 lbox
43 88 0.9500000 lbox
44 87 0.9500000 lbox
45 86 0.9500000 lbox
46 85 0.9500000 lbox
47 84 0.9500000 lbox
48 82 0.9500000 lbox
49 81 0.9500000 lbox
50 80 0.9500000 lbox
52 79 0.9500000 lbox
53 78 0.9500000 lbox
54 76 0.9500000 lbox
55 75 0.9500000 lbox
56 74 0.9500000 lbox
57 73 0.9500000 lbox
58 72 0.9500000 lbox
60 69 0.9500000 lbox
61 68 0.9500000 lbox
62 67 0.9500000 lbox
93 102 0.9500000 lbox
94 101 0.9500000 lbox
95 100 0.9500000 lbox
104 117 0.9500000 lbox
105 116 0.9500000 lbox
106 115 0.9500000 lbox
107 114 0.9500000 lbox
108 113 0.9500000 lbox
showpage
end
%%EOF
