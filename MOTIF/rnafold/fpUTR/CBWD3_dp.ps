%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CBWD3)
} def

/sequence { (\
GGGAGUGGCGUGCUGGGCGUGCGCGGCUGCGGUACGGCGUGUUGGUCCCAGCGGUUCAGCUGAGGUAGGGACGUGCUGUAGGCCGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.013530641 ubox
1 49 0.046756804 ubox
1 84 0.028900495 ubox
2 27 0.012904983 ubox
2 28 0.014984801 ubox
2 48 0.046803780 ubox
2 83 0.027488794 ubox
2 84 0.024757352 ubox
3 27 0.012740111 ubox
3 47 0.046804149 ubox
3 83 0.023404161 ubox
4 28 0.968837888 ubox
4 46 0.046760168 ubox
5 22 0.009061852 ubox
5 24 0.017089815 ubox
5 27 0.994686794 ubox
5 30 0.050295932 ubox
6 21 0.008146171 ubox
6 23 0.017373197 ubox
6 25 0.004474299 ubox
6 26 0.993140026 ubox
6 29 0.052235074 ubox
6 44 0.044505407 ubox
6 85 0.006195643 ubox
7 20 0.005633840 ubox
7 22 0.016547571 ubox
7 24 0.006019360 ubox
7 28 0.056503205 ubox
7 38 0.004609795 ubox
7 43 0.045906079 ubox
7 84 0.008114026 ubox
8 18 0.004103294 ubox
8 20 0.018148285 ubox
8 22 0.027391691 ubox
8 24 0.996215454 ubox
8 27 0.057079530 ubox
8 30 0.004085036 ubox
8 42 0.046660556 ubox
8 83 0.008107083 ubox
9 17 0.004107920 ubox
9 19 0.019698441 ubox
9 21 0.027925629 ubox
9 23 0.996387423 ubox
9 25 0.044763847 ubox
9 26 0.040513667 ubox
9 29 0.004220587 ubox
9 36 0.004713338 ubox
9 41 0.046694667 ubox
9 82 0.007984405 ubox
10 18 0.019747334 ubox
10 20 0.026525865 ubox
10 22 0.996335318 ubox
10 24 0.060662302 ubox
10 28 0.003946432 ubox
10 35 0.005059820 ubox
10 40 0.044287709 ubox
11 17 0.019653371 ubox
11 19 0.040715956 ubox
11 21 0.993594786 ubox
11 23 0.060764640 ubox
11 34 0.005084257 ubox
11 39 0.044283585 ubox
11 80 0.005423241 ubox
12 18 0.087874761 ubox
12 20 0.990054925 ubox
12 22 0.061221030 ubox
12 24 0.003413005 ubox
12 27 0.004787200 ubox
12 33 0.005220973 ubox
12 38 0.046680484 ubox
12 79 0.005304908 ubox
13 17 0.087518569 ubox
13 19 0.991435780 ubox
13 21 0.061287068 ubox
13 23 0.003363820 ubox
13 26 0.004799923 ubox
13 32 0.005260509 ubox
13 37 0.046681636 ubox
13 78 0.005288298 ubox
14 25 0.004783228 ubox
14 31 0.005245345 ubox
14 36 0.045093432 ubox
15 20 0.007216671 ubox
15 24 0.004705743 ubox
15 30 0.005072222 ubox
15 35 0.044608370 ubox
16 28 0.004814697 ubox
17 27 0.005286202 ubox
17 33 0.032920248 ubox
18 26 0.005222460 ubox
18 31 0.014395380 ubox
18 32 0.039275375 ubox
18 36 0.012555694 ubox
19 30 0.014918961 ubox
19 35 0.014296075 ubox
20 29 0.014530069 ubox
20 31 0.034563539 ubox
20 34 0.014653357 ubox
21 27 0.012882848 ubox
21 28 0.005127489 ubox
21 30 0.038559455 ubox
21 33 0.014555747 ubox
22 26 0.012880782 ubox
22 29 0.038546724 ubox
22 31 0.017622902 ubox
22 32 0.012925151 ubox
23 28 0.026132309 ubox
23 30 0.018909239 ubox
24 29 0.018891970 ubox
24 31 0.010961823 ubox
24 85 0.032550474 ubox
25 30 0.010976688 ubox
25 84 0.063368621 ubox
26 83 0.063422250 ubox
27 81 0.033651610 ubox
27 82 0.054260089 ubox
27 86 0.008573279 ubox
28 80 0.047215654 ubox
28 81 0.042619993 ubox
28 85 0.011174350 ubox
29 79 0.049428633 ubox
29 83 0.137173924 ubox
29 84 0.023052995 ubox
30 78 0.050285968 ubox
30 82 0.138621200 ubox
30 85 0.973078012 ubox
31 77 0.050257538 ubox
31 84 0.985816264 ubox
32 76 0.050288631 ubox
32 83 0.985020532 ubox
33 75 0.050146949 ubox
33 80 0.482396052 ubox
33 82 0.848100924 ubox
34 74 0.042154913 ubox
34 79 0.961769860 ubox
35 73 0.040379701 ubox
35 78 0.996495663 ubox
35 85 0.005063677 ubox
36 72 0.036055916 ubox
36 77 0.996749602 ubox
36 84 0.005119892 ubox
37 46 0.009195747 ubox
37 74 0.029121324 ubox
37 76 0.997532333 ubox
37 79 0.003715423 ubox
37 83 0.005119563 ubox
38 45 0.009623160 ubox
38 73 0.034139540 ubox
38 75 0.997390203 ubox
38 78 0.003774107 ubox
38 82 0.005117649 ubox
39 72 0.046837101 ubox
39 74 0.945677978 ubox
39 77 0.003451485 ubox
40 67 0.006872548 ubox
40 71 0.048876136 ubox
40 73 0.945352128 ubox
40 80 0.004340330 ubox
41 66 0.006793482 ubox
41 72 0.996409557 ubox
41 76 0.004938185 ubox
41 79 0.003408989 ubox
42 68 0.019314773 ubox
42 69 0.049714196 ubox
42 70 0.055476985 ubox
42 71 0.994296438 ubox
42 73 0.003590816 ubox
42 75 0.004809322 ubox
42 86 0.003227412 ubox
43 67 0.021373842 ubox
43 68 0.050852586 ubox
43 69 0.096844816 ubox
43 70 0.983628277 ubox
43 73 0.007428244 ubox
43 85 0.004113049 ubox
44 66 0.021189655 ubox
44 72 0.006152517 ubox
44 84 0.004563726 ubox
45 66 0.083032770 ubox
45 72 0.026684420 ubox
45 83 0.004564743 ubox
46 65 0.068401099 ubox
46 69 0.011322314 ubox
46 70 0.010138684 ubox
46 71 0.028275510 ubox
46 82 0.004342465 ubox
47 64 0.073482440 ubox
47 65 0.994516747 ubox
47 68 0.005128810 ubox
47 69 0.016286555 ubox
47 70 0.028943307 ubox
47 81 0.004289823 ubox
48 64 0.994949731 ubox
48 65 0.020619874 ubox
48 68 0.016262599 ubox
48 69 0.028945888 ubox
49 62 0.998014625 ubox
49 64 0.018572089 ubox
49 68 0.026710304 ubox
49 78 0.004654258 ubox
50 61 0.998385557 ubox
50 77 0.005107594 ubox
51 60 0.998661845 ubox
51 66 0.009942493 ubox
51 76 0.005160609 ubox
52 59 0.998428123 ubox
52 62 0.017303304 ubox
52 65 0.010308232 ubox
52 75 0.005160373 ubox
52 85 0.045999102 ubox
53 61 0.017749047 ubox
53 74 0.004590898 ubox
53 84 0.046552105 ubox
54 60 0.017775535 ubox
54 72 0.005134141 ubox
54 83 0.046549952 ubox
55 59 0.016632332 ubox
55 64 0.007270904 ubox
55 71 0.005142236 ubox
55 81 0.008194662 ubox
55 82 0.045477026 ubox
56 63 0.008575180 ubox
56 70 0.005129216 ubox
56 80 0.011091298 ubox
56 81 0.033918826 ubox
57 62 0.008668423 ubox
57 69 0.005101539 ubox
57 78 0.045810534 ubox
57 85 0.003167581 ubox
58 77 0.046039648 ubox
59 66 0.004561855 ubox
59 76 0.046056564 ubox
59 83 0.003723663 ubox
60 65 0.004579397 ubox
60 75 0.046030919 ubox
60 81 0.006584928 ubox
60 82 0.003721203 ubox
61 73 0.013816843 ubox
61 80 0.006697027 ubox
61 81 0.003680931 ubox
62 72 0.014524606 ubox
62 74 0.004076640 ubox
62 79 0.005612045 ubox
64 77 0.008071338 ubox
65 72 0.035079669 ubox
65 76 0.008192512 ubox
66 71 0.033430833 ubox
66 75 0.008194296 ubox
67 74 0.008048841 ubox
4 28 0.9500000 lbox
5 27 0.9500000 lbox
6 26 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
12 20 0.9500000 lbox
13 19 0.9500000 lbox
30 85 0.9500000 lbox
31 84 0.9500000 lbox
32 83 0.9500000 lbox
33 82 0.9500000 lbox
34 79 0.9500000 lbox
35 78 0.9500000 lbox
36 77 0.9500000 lbox
37 76 0.9500000 lbox
38 75 0.9500000 lbox
39 74 0.9500000 lbox
40 73 0.9500000 lbox
41 72 0.9500000 lbox
42 71 0.9500000 lbox
43 70 0.9500000 lbox
47 65 0.9500000 lbox
48 64 0.9500000 lbox
49 62 0.9500000 lbox
50 61 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
showpage
end
%%EOF
