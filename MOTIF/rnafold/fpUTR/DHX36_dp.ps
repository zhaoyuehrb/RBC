%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DHX36)
} def

/sequence { (\
AAGUGGGCGCACAGUGGCUUCCGGGCCCGGACGCCAUUUCCAGCGGUUGCUGGUUCUGACGGGUUGUAGUCUGCCAGGACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.004880219 ubox
2 38 0.005605487 ubox
2 39 0.003497965 ubox
2 51 0.883424530 ubox
3 10 0.020691072 ubox
3 12 0.399646775 ubox
3 37 0.004954278 ubox
3 44 0.009532389 ubox
3 50 0.911288069 ubox
3 60 0.003402035 ubox
3 74 0.017250401 ubox
3 80 0.019724489 ubox
4 9 0.019857994 ubox
4 11 0.400110994 ubox
4 13 0.021908561 ubox
4 36 0.004924319 ubox
4 42 0.013797708 ubox
4 43 0.006418370 ubox
4 49 0.909375359 ubox
4 59 0.003390225 ubox
4 73 0.017248974 ubox
4 76 0.006168772 ubox
4 79 0.018808288 ubox
4 81 0.004879727 ubox
5 10 0.399966467 ubox
5 12 0.028736148 ubox
5 35 0.004092167 ubox
5 40 0.004326485 ubox
5 41 0.017593216 ubox
5 48 0.894842169 ubox
5 72 0.017296040 ubox
5 75 0.005945112 ubox
5 80 0.006122250 ubox
6 35 0.004421897 ubox
6 39 0.004355599 ubox
6 40 0.018344386 ubox
6 41 0.004933647 ubox
6 47 0.904130990 ubox
6 48 0.009628937 ubox
6 51 0.005040271 ubox
6 57 0.003311459 ubox
6 71 0.017369764 ubox
6 74 0.004776302 ubox
6 75 0.035056944 ubox
7 15 0.003384876 ubox
7 34 0.005204359 ubox
7 39 0.018096687 ubox
7 40 0.005184986 ubox
7 44 0.032302229 ubox
7 47 0.013137277 ubox
7 50 0.005300813 ubox
7 56 0.003287845 ubox
7 70 0.017362954 ubox
7 74 0.035282750 ubox
8 14 0.003805279 ubox
8 33 0.005880643 ubox
8 43 0.032331457 ubox
8 45 0.911951382 ubox
8 46 0.010563901 ubox
8 49 0.005125088 ubox
8 69 0.017355066 ubox
8 73 0.035434251 ubox
9 32 0.005775455 ubox
9 44 0.912099605 ubox
9 48 0.003709292 ubox
9 67 0.012521577 ubox
9 72 0.026592680 ubox
9 74 0.004467713 ubox
10 43 0.910949263 ubox
10 66 0.013378650 ubox
10 69 0.003331068 ubox
10 73 0.004513882 ubox
11 47 0.003444787 ubox
11 64 0.006078389 ubox
11 65 0.011048986 ubox
11 67 0.010217677 ubox
11 70 0.008999959 ubox
11 72 0.004037367 ubox
12 46 0.003575573 ubox
12 63 0.008346321 ubox
12 66 0.010468245 ubox
12 69 0.009063839 ubox
13 38 0.877507160 ubox
13 39 0.090253378 ubox
13 65 0.008717539 ubox
14 37 0.987384102 ubox
14 38 0.073499023 ubox
14 80 0.004098864 ubox
15 36 0.998459703 ubox
16 27 0.005362449 ubox
16 35 0.999962597 ubox
17 26 0.005435242 ubox
17 34 0.999972254 ubox
18 25 0.005493681 ubox
18 33 0.999095359 ubox
19 24 0.005079684 ubox
19 31 0.030779206 ubox
20 30 0.006183616 ubox
20 31 0.987745087 ubox
21 29 0.005458750 ubox
21 30 0.999940960 ubox
22 29 0.999919560 ubox
23 28 0.986152860 ubox
39 79 0.006812479 ubox
40 52 0.016625244 ubox
40 53 0.189761579 ubox
40 78 0.007336413 ubox
41 52 0.406577272 ubox
41 77 0.007293977 ubox
42 51 0.407651574 ubox
43 50 0.407866307 ubox
43 74 0.006958760 ubox
44 49 0.407279892 ubox
44 52 0.005284362 ubox
44 73 0.006967116 ubox
45 51 0.005357999 ubox
45 72 0.006950833 ubox
46 50 0.005264122 ubox
46 71 0.006934667 ubox
46 80 0.036104375 ubox
47 69 0.004567457 ubox
47 79 0.036064844 ubox
48 68 0.004729923 ubox
48 78 0.032578247 ubox
49 64 0.004047247 ubox
49 67 0.004367746 ubox
49 70 0.004241246 ubox
49 80 0.003596611 ubox
50 63 0.004195032 ubox
50 66 0.004267717 ubox
50 69 0.004389463 ubox
50 77 0.043765572 ubox
51 62 0.004346318 ubox
51 68 0.004389131 ubox
51 76 0.046442032 ubox
51 81 0.018949021 ubox
52 67 0.004338199 ubox
52 75 0.052526317 ubox
52 80 0.049071692 ubox
53 60 0.004870664 ubox
53 74 0.052538134 ubox
53 80 0.976888770 ubox
54 59 0.004532462 ubox
54 63 0.005856990 ubox
54 73 0.051687379 ubox
54 78 0.003516812 ubox
54 79 0.992296708 ubox
55 62 0.008166565 ubox
55 63 0.005846868 ubox
55 78 0.995213977 ubox
55 79 0.012306272 ubox
56 61 0.008956404 ubox
56 62 0.008162849 ubox
56 63 0.008713151 ubox
56 69 0.005922266 ubox
56 77 0.997460060 ubox
56 78 0.011679847 ubox
57 61 0.007367564 ubox
57 62 0.008646323 ubox
57 68 0.006073268 ubox
57 76 0.997259498 ubox
57 77 0.009217452 ubox
58 67 0.004946496 ubox
58 71 0.068822278 ubox
58 75 0.995103201 ubox
59 67 0.011004779 ubox
59 70 0.072431953 ubox
60 66 0.011749307 ubox
60 69 0.072501593 ubox
60 73 0.989627208 ubox
61 65 0.007267369 ubox
61 71 0.022746428 ubox
61 72 0.994516118 ubox
61 75 0.006033406 ubox
62 70 0.022232641 ubox
62 71 0.994887096 ubox
62 72 0.033889980 ubox
62 74 0.006566720 ubox
62 75 0.025553771 ubox
63 70 0.771092917 ubox
63 71 0.040242947 ubox
63 74 0.029055581 ubox
64 69 0.247747902 ubox
64 73 0.029040050 ubox
66 74 0.005788173 ubox
67 73 0.005764320 ubox
68 72 0.004813031 ubox
69 80 0.016288118 ubox
70 79 0.016315501 ubox
71 78 0.016320264 ubox
72 77 0.015896843 ubox
2 51 0.9500000 lbox
3 50 0.9500000 lbox
4 49 0.9500000 lbox
5 48 0.9500000 lbox
6 47 0.9500000 lbox
8 45 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
17 34 0.9500000 lbox
18 33 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
53 80 0.9500000 lbox
54 79 0.9500000 lbox
55 78 0.9500000 lbox
56 77 0.9500000 lbox
57 76 0.9500000 lbox
58 75 0.9500000 lbox
60 73 0.9500000 lbox
61 72 0.9500000 lbox
62 71 0.9500000 lbox
63 70 0.9500000 lbox
showpage
end
%%EOF
