%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UBA6)
} def

/sequence { (\
GGUCCCGCCCCUUCCUACCUUCCAGUAGCCGGCGGCGGUGUCUCAGGCGGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.012278397 ubox
1 10 0.005154187 ubox
1 11 0.004331831 ubox
1 42 0.145460038 ubox
1 43 0.057901841 ubox
1 44 0.061116574 ubox
2 8 0.012328027 ubox
2 9 0.005127982 ubox
2 10 0.004313655 ubox
2 36 0.005990555 ubox
2 39 0.025924859 ubox
2 41 0.139072243 ubox
2 42 0.076797078 ubox
2 43 0.043693851 ubox
2 48 0.161275864 ubox
2 51 0.204120334 ubox
3 7 0.011545791 ubox
3 38 0.031827389 ubox
3 40 0.108768484 ubox
3 47 0.161191219 ubox
3 50 0.203184312 ubox
4 37 0.043335802 ubox
4 38 0.049258548 ubox
4 46 0.160714462 ubox
4 47 0.008245253 ubox
4 49 0.199685830 ubox
4 50 0.015133244 ubox
5 35 0.050025209 ubox
5 37 0.035156954 ubox
5 38 0.987427656 ubox
5 46 0.006269630 ubox
5 47 0.015700538 ubox
5 49 0.011370774 ubox
5 50 0.072686084 ubox
6 34 0.051492126 ubox
6 37 0.993472941 ubox
6 40 0.006342854 ubox
6 46 0.014595240 ubox
6 49 0.073612770 ubox
7 33 0.051581982 ubox
7 36 0.994291133 ubox
7 39 0.009167389 ubox
7 48 0.073863046 ubox
7 51 0.053664519 ubox
8 32 0.051406525 ubox
8 35 0.993976812 ubox
8 38 0.009229875 ubox
8 47 0.073612166 ubox
8 50 0.053713547 ubox
9 31 0.051148226 ubox
9 32 0.006801108 ubox
9 34 0.993214624 ubox
9 35 0.025602761 ubox
9 37 0.009222561 ubox
9 46 0.073167633 ubox
9 47 0.004415818 ubox
9 49 0.053693450 ubox
10 31 0.009584016 ubox
10 32 0.820524388 ubox
10 34 0.036186713 ubox
10 35 0.010236383 ubox
10 38 0.003721765 ubox
10 46 0.006158359 ubox
10 47 0.052188257 ubox
11 28 0.004556384 ubox
11 31 0.818600275 ubox
11 32 0.552927179 ubox
11 34 0.010268326 ubox
11 37 0.003718235 ubox
11 46 0.052224429 ubox
11 47 0.006334126 ubox
12 27 0.004675599 ubox
12 28 0.007610556 ubox
12 31 0.546074417 ubox
12 32 0.009699041 ubox
12 45 0.050350411 ubox
12 46 0.006203939 ubox
13 27 0.008343859 ubox
13 31 0.014292577 ubox
13 32 0.023917210 ubox
13 45 0.006399915 ubox
14 31 0.024767420 ubox
14 32 0.006840108 ubox
14 38 0.005566267 ubox
14 47 0.003931677 ubox
14 50 0.008411819 ubox
15 25 0.012845967 ubox
15 28 0.992069297 ubox
15 31 0.006332681 ubox
15 37 0.005558548 ubox
15 38 0.003505066 ubox
15 46 0.003990854 ubox
15 49 0.008496464 ubox
15 50 0.009229995 ubox
16 24 0.012580403 ubox
16 27 0.995445879 ubox
16 37 0.003442351 ubox
16 40 0.047171124 ubox
16 45 0.003960670 ubox
16 49 0.009154801 ubox
17 26 0.995636270 ubox
17 39 0.050215849 ubox
17 41 0.009778075 ubox
18 25 0.989814925 ubox
18 35 0.005364131 ubox
18 38 0.050408434 ubox
18 40 0.010035906 ubox
18 47 0.017802535 ubox
18 50 0.005170816 ubox
19 25 0.082474327 ubox
19 28 0.006946591 ubox
19 34 0.005364232 ubox
19 35 0.003950751 ubox
19 37 0.050271266 ubox
19 38 0.008448814 ubox
19 46 0.018295516 ubox
19 49 0.005186091 ubox
20 24 0.104620463 ubox
20 27 0.007216133 ubox
20 34 0.005490019 ubox
20 35 0.009393618 ubox
20 37 0.008457931 ubox
20 45 0.019348712 ubox
21 32 0.003256903 ubox
21 34 0.008997157 ubox
21 35 0.011462270 ubox
21 45 0.006893644 ubox
22 31 0.003422521 ubox
22 32 0.016830850 ubox
22 34 0.010627906 ubox
22 35 0.039185652 ubox
22 38 0.003692418 ubox
22 46 0.003386550 ubox
22 47 0.005161539 ubox
23 31 0.016925527 ubox
23 34 0.039129185 ubox
23 37 0.003700112 ubox
23 46 0.005215179 ubox
24 43 0.062210989 ubox
25 33 0.037388752 ubox
25 42 0.064584230 ubox
26 32 0.036981272 ubox
28 36 0.025972553 ubox
28 39 0.068020950 ubox
29 35 0.026008456 ubox
29 38 0.074893482 ubox
30 34 0.025819681 ubox
30 37 0.074951796 ubox
31 36 0.074619657 ubox
31 42 0.014139905 ubox
32 41 0.014237603 ubox
33 40 0.014299524 ubox
34 39 0.012674931 ubox
34 42 0.004904190 ubox
35 41 0.004927286 ubox
35 51 0.011255677 ubox
36 40 0.004916978 ubox
36 50 0.012020340 ubox
37 44 0.006353634 ubox
38 43 0.004684440 ubox
38 48 0.017688736 ubox
38 51 0.029030843 ubox
39 45 0.025153771 ubox
39 47 0.018167303 ubox
39 49 0.215927736 ubox
39 50 0.022562145 ubox
39 52 0.697167376 ubox
40 44 0.027549539 ubox
40 48 0.329410634 ubox
40 51 0.886171180 ubox
41 47 0.328975008 ubox
41 50 0.885099167 ubox
42 46 0.317634354 ubox
42 49 0.880819891 ubox
42 50 0.044701658 ubox
43 49 0.040357129 ubox
43 50 0.032541073 ubox
44 49 0.048773723 ubox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
15 28 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
showpage
end
%%EOF
