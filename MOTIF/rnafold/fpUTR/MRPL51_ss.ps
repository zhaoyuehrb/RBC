%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGUGGCUGUUGCGGAUGGGGCGUAGGUGGGCGGUGCGCCCACAGCUGCCUGGGUAAGGCCCAAGAUGGCUGUCUUCGCCUUAGUACUCGUGUGAAGUUGGCGGGGACGGUUCCUGUCAUCUUCUUGGGCUUAUUUGGUGUGCUGUUGAAGGGGGGAGACUAGAGAA\
) } def
/len { sequence length } bind def

/coor [
[84.38846588 117.04888153]
[71.21724701 124.22655487]
[58.04602432 131.40422058]
[44.87480545 138.58189392]
[31.70358658 145.75956726]
[25.63600540 152.64126587]
[18.22199440 152.94563293]
[4.92038965 159.87869263]
[-8.38121510 166.81173706]
[-17.04263496 180.05146790]
[-31.90505409 179.07283020]
[-45.20666122 186.00588989]
[-57.09288406 195.15562439]
[-67.19831848 206.24075317]
[-77.30375671 217.32589722]
[-87.40918732 228.41102600]
[-85.14910126 243.88442993]
[-93.40782928 257.16326904]
[-108.28585052 261.97766113]
[-122.75821686 256.05444336]
[-129.99151611 242.19033813]
[-126.57041931 226.93156433]
[-114.11024475 217.48284912]
[-98.49432373 218.30558777]
[-88.38888550 207.22045898]
[-78.28345490 196.13533020]
[-68.17801666 185.05018616]
[-71.88793945 178.53202820]
[-83.01769257 158.97752380]
[-97.70883942 162.00575256]
[-112.39998627 165.03399658]
[-127.09113312 168.06222534]
[-141.78227234 171.09046936]
[-156.47341919 174.11869812]
[-171.16456604 177.14694214]
[-185.45692444 186.26643372]
[-198.17652893 175.05714417]
[-190.92645264 159.73159790]
[-174.19281006 162.45579529]
[-159.50166321 159.42755127]
[-144.81051636 156.39932251]
[-130.11936951 153.37107849]
[-115.42822266 150.34284973]
[-100.73707581 147.31462097]
[-86.04592896 144.28637695]
[-60.13128281 153.62516785]
[-52.13971710 172.70428467]
[-38.83811188 165.77122498]
[-31.12811279 153.02740479]
[-15.31427383 153.51013184]
[-2.01266837 146.57708740]
[11.28893661 139.64402771]
[24.52591324 132.58834839]
[37.69713211 125.41068268]
[50.86835098 118.23300934]
[64.03957367 111.05533600]
[77.21079254 103.87766266]
[83.06114197 84.26915741]
[102.18402863 76.98664856]
[108.36937714 63.32130814]
[114.55471802 49.65596771]
[120.74006653 35.99062729]
[126.92540741 22.32528877]
[133.11074829 8.65994835]
[139.29609680 -5.00539112]
[145.48144531 -18.67073059]
[151.66679382 -32.33607101]
[157.85212708 -46.00141144]
[157.09875488 -57.64766693]
[164.55999756 -64.85154724]
[168.39764404 -79.35232544]
[172.23529053 -93.85310364]
[176.07293701 -108.35387421]
[179.91056824 -122.85465240]
[183.74821472 -137.35542297]
[187.58586121 -151.85620117]
[191.42349243 -166.35697937]
[195.26113892 -180.85775757]
[199.09878540 -195.35853577]
[202.93641663 -209.85931396]
[206.77406311 -224.36009216]
[210.61170959 -238.86085510]
[198.77346802 -250.37751770]
[194.37254333 -266.19906616]
[198.51597595 -281.99304199]
[209.98446655 -293.48385620]
[225.58909607 -297.61004639]
[229.15811157 -312.17926025]
[232.72714233 -326.74847412]
[227.62521362 -342.33380127]
[238.77153015 -354.36260986]
[254.69970703 -350.46066284]
[259.02420044 -334.64199829]
[247.29635620 -323.17944336]
[243.72732544 -308.61022949]
[240.15830994 -294.04101562]
[250.63612366 -285.24874878]
[256.32318115 -272.73623657]
[256.05459595 -258.92831421]
[249.82579041 -246.52803040]
[238.80453491 -237.98753357]
[225.11248779 -235.02322388]
[221.27484131 -220.52244568]
[217.43719482 -206.02166748]
[213.59956360 -191.52088928]
[209.76191711 -177.02011108]
[205.92427063 -162.51933289]
[202.08662415 -148.01856995]
[198.24899292 -133.51779175]
[194.41134644 -119.01701355]
[190.57369995 -104.51623535]
[186.73606873 -90.01545715]
[182.89842224 -75.51468658]
[179.06077576 -61.01390839]
[191.47132874 -69.43876648]
[206.40431213 -70.85520935]
[220.17753601 -64.91397858]
[229.39482117 -53.08005905]
[231.78337097 -38.27145386]
[226.75421143 -24.13965988]
[215.54743958 -14.16929245]
[200.92640686 -10.81884098]
[186.49636841 -14.91445732]
[175.81547546 -25.44624710]
[171.51747131 -39.81606674]
[165.33212280 -26.15072632]
[159.14678955 -12.48538589]
[152.96144104 1.17995358]
[146.77609253 14.84529305]
[140.59074402 28.51063347]
[134.40541077 42.17597198]
[128.22006226 55.84131241]
[122.03471375 69.50665283]
[115.84937286 83.17198944]
[122.89507294 96.80627441]
[119.84953308 111.84822083]
[129.53845215 123.29919434]
[139.22737122 134.75016785]
[148.91629028 146.20114136]
[158.60522461 157.65211487]
[168.29414368 169.10308838]
[183.66596985 168.09655762]
[196.53257751 176.23925781]
[202.07179260 190.23144531]
[198.35420227 204.62995911]
[208.04312134 216.08093262]
[222.86367798 221.61822510]
[225.17794800 236.33193970]
[234.86686707 247.78291321]
[249.71356201 255.96897888]
[245.95739746 272.50158691]
[229.03106689 273.46890259]
[223.41589355 257.47183228]
[213.72697449 246.02085876]
[199.59942627 241.30262756]
[196.59214783 225.76985168]
[186.90322876 214.31887817]
[172.08793640 215.60145569]
[159.20587158 207.82220459]
[153.30564880 193.78507996]
[156.84317017 178.79202271]
[147.15423584 167.34103394]
[137.46531677 155.89006042]
[127.77640533 144.43908691]
[118.08747864 132.98811340]
[108.39855957 121.53714752]
[103.43558502 122.86003113]
[98.30300140 123.05438232]
[93.25419617 122.11059570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 57]
[2 56]
[3 55]
[4 54]
[5 53]
[7 52]
[8 51]
[9 50]
[11 48]
[12 47]
[13 27]
[14 26]
[15 25]
[16 24]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[59 134]
[60 133]
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[70 114]
[71 113]
[72 112]
[73 111]
[74 110]
[75 109]
[76 108]
[77 107]
[78 106]
[79 105]
[80 104]
[81 103]
[82 102]
[87 96]
[88 95]
[89 94]
[136 166]
[137 165]
[138 164]
[139 163]
[140 162]
[141 161]
[145 157]
[146 156]
[148 154]
[149 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
