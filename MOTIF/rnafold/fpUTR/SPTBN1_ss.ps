%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUCCUCCAGUCCCUCCCUCGGCCGCCUCUCCUCCCGGAGCGAGCGCGCAGCCCUGCGCAGCAGCGCCCACUGGUCCCGUCCUGUGAGCCCCGGCCCCAGCCGCGGACAGACCCGCGGAGUCGCCUCCCGGCCCACCCGCCCGGCCGCCGAGGAGCGGGAGGAGGACGGGACCCCGGCGCCCCCACCCCAUCCCCGGGAGAACUCUAAGAAGGAGCUGAUGUGGAGGAGCAGCUGAGACAGUUCAAG\
) } def
/len { sequence length } bind def

/coor [
[96.58187866 824.68835449]
[93.58622742 839.38616943]
[90.59057617 854.08398438]
[87.59492493 868.78186035]
[84.59928131 883.47967529]
[92.21444702 897.60015869]
[85.79028320 912.30084229]
[70.25485229 916.30456543]
[57.52560425 906.54003906]
[57.36733627 890.49774170]
[69.90145111 880.48400879]
[72.89710236 865.78619385]
[75.89275360 851.08837891]
[78.88840485 836.39050293]
[81.88404846 821.69268799]
[65.37542725 809.04321289]
[57.58766937 789.67779541]
[60.76506424 768.97259521]
[74.09632874 752.71765137]
[93.91997528 745.49786377]
[95.61281586 730.59368896]
[97.30566406 715.68951416]
[98.99851227 700.78533936]
[100.69135284 685.88116455]
[102.38420105 670.97705078]
[96.13268280 657.45788574]
[105.37799072 644.61907959]
[107.07083893 629.71490479]
[100.81932068 616.19573975]
[110.06462860 603.35693359]
[111.75747681 588.45275879]
[113.45032501 573.54858398]
[115.14316559 558.64440918]
[116.83601379 543.74023438]
[116.36485291 528.74761963]
[113.73950958 513.97918701]
[111.11415863 499.21072388]
[108.48881531 484.44223022]
[105.86347198 469.67376709]
[103.23812103 454.90530396]
[94.14690399 454.05004883]
[85.41680908 451.37289429]
[77.40901947 446.98461914]
[70.45484924 441.06674194]
[64.84199524 433.86413574]
[60.80268478 425.67477417]
[46.06837845 428.48550415]
[31.35202026 431.38873291]
[16.65419388 434.38436890]
[1.95636809 437.38003540]
[-12.74145794 440.37567139]
[-27.43928337 443.37133789]
[-39.35236359 454.64123535]
[-54.98952866 449.70046997]
[-58.26460266 433.63168335]
[-45.80847168 422.96505737]
[-30.43493271 428.67349243]
[-15.73710728 425.67785645]
[-1.03928161 422.68222046]
[13.65854454 419.68655396]
[28.35636902 416.69091797]
[34.26767349 412.28677368]
[43.25765610 413.75119019]
[57.99196625 410.94046021]
[67.71861267 381.59872437]
[94.24966431 365.32330322]
[93.87271118 350.32806396]
[93.49575806 335.33279419]
[93.11880493 320.33752441]
[92.74185944 305.34225464]
[82.99004364 299.47766113]
[77.21035004 289.53659058]
[76.93269348 277.92108154]
[82.34106445 267.50268555]
[92.19948578 260.91259766]
[92.19948578 245.91259766]
[92.19948578 230.91259766]
[92.19948578 215.91259766]
[92.19948578 200.91259766]
[92.19948578 185.91259766]
[92.19948578 170.91259766]
[92.19948578 155.91259766]
[92.19948578 140.91259766]
[92.19948578 125.91259003]
[92.19948578 110.91259003]
[71.31733704 89.75040436]
[66.50318146 75.54393005]
[61.68902588 61.33745575]
[49.93196487 50.75057220]
[53.17521286 36.21335983]
[48.36105728 22.00688362]
[43.54690170 7.80040932]
[26.24124146 0.04327134]
[20.22968864 -17.60551834]
[28.89927101 -33.74929428]
[23.72962761 -47.83030319]
[18.55998230 -61.91130829]
[4.68576717 -63.57952118]
[-7.06303024 -71.02257538]
[-14.42808437 -82.74241638]
[-16.02279663 -96.42560577]
[-11.59303188 -109.39991760]
[-2.05562711 -119.15619659]
[-7.04792023 -133.30105591]
[-12.04021358 -147.44590759]
[-17.03250694 -161.59077454]
[-22.02479935 -175.73562622]
[-27.01709366 -189.88047791]
[-41.38102341 -196.47238159]
[-46.79827118 -211.31922913]
[-40.05488205 -225.61265564]
[-25.15158653 -230.87263489]
[-10.93024731 -223.97850037]
[-5.82813215 -209.02043152]
[-12.87223530 -194.87277222]
[-7.87994194 -180.72792053]
[-2.88764858 -166.58306885]
[2.10464454 -152.43820190]
[7.09693766 -138.29335022]
[12.08923054 -124.14849091]
[28.05298805 -121.57025909]
[40.60587692 -111.22800446]
[46.25568390 -95.87602997]
[43.36876297 -79.67871857]
[32.64099121 -67.08095551]
[37.81063461 -52.99994659]
[42.98027802 -38.91893768]
[54.09840775 -36.49437332]
[62.76287079 -28.93414879]
[66.75376129 -18.02222633]
[64.97521973 -6.41921043]
[57.75337601 2.98625517]
[62.56753159 17.19272995]
[67.38168335 31.39920425]
[78.79440308 40.96994400]
[75.89550018 56.52330017]
[80.70965576 70.72977448]
[85.52381134 84.93624878]
[100.30847931 87.46875000]
[109.57637024 75.67442322]
[112.01918793 60.04294586]
[125.96660614 54.81620407]
[135.23449707 43.02187729]
[144.50239563 31.22755051]
[153.77029419 19.43322372]
[155.97244263 1.13943267]
[172.52395630 -4.72506285]
[181.64291382 -16.63491821]
[180.96607971 -32.66368866]
[193.16990662 -43.07744217]
[208.89265442 -39.88763809]
[216.07318115 -25.54122162]
[209.20318604 -11.04353619]
[193.55276489 -7.51596403]
[184.43380737 4.39389181]
[185.71665955 16.40622711]
[178.23884583 26.39923477]
[165.56462097 28.70111847]
[156.29672241 40.49544525]
[147.02882385 52.28977203]
[137.76094055 64.08409882]
[135.98101807 78.87197113]
[121.37069702 84.94232178]
[112.10280609 96.73664856]
[107.19948578 110.91259003]
[107.19948578 125.91259003]
[107.19948578 140.91259766]
[107.19948578 155.91259766]
[107.19948578 170.91259766]
[107.19948578 185.91259766]
[107.19948578 200.91259766]
[107.19948578 215.91259766]
[107.19948578 230.91259766]
[107.19948578 245.91259766]
[107.19948578 260.91259766]
[121.10004425 273.81350708]
[121.12931061 292.45800781]
[107.73712158 304.96530151]
[108.11406708 319.96057129]
[108.49102020 334.95584106]
[108.86797333 349.95111084]
[109.24492645 364.94635010]
[117.61930084 366.99963379]
[125.44818878 370.59259033]
[132.45167542 375.59329224]
[138.38000488 381.81951904]
[143.02252197 389.04537964]
[146.21513367 397.00958252]
[147.84608459 405.42486572]
[147.85992432 413.98831177]
[146.25930786 422.39227295]
[143.10487366 430.33547974]
[138.51289368 437.53369141]
[132.65101624 443.73007202]
[125.73210144 448.70419312]
[118.00658417 452.27996826]
[120.63193512 467.04843140]
[123.25727844 481.81689453]
[125.88262177 496.58535767]
[128.50796509 511.35382080]
[131.13331604 526.12231445]
[137.66549683 520.83526611]
[146.33618164 517.74169922]
[156.48841858 517.44622803]
[167.31785583 520.37158203]
[179.77679443 528.72473145]
[192.23573303 537.07781982]
[204.69467163 545.43096924]
[220.64930725 543.74902344]
[231.80879211 555.27490234]
[229.61253357 571.16687012]
[215.74528503 579.23406982]
[200.84483337 573.28796387]
[196.34153748 557.88989258]
[183.88259888 549.53680420]
[171.42366028 541.18365479]
[158.96472168 532.83050537]
[152.15858459 535.98114014]
[159.08763123 549.28485107]
[168.83331299 560.68756104]
[161.34852600 573.68670654]
[146.59428406 570.98260498]
[144.20614624 556.17364502]
[138.54631042 542.28247070]
[131.74018860 545.43310547]
[130.04733276 560.33728027]
[128.35449219 575.24139404]
[126.66164398 590.14556885]
[124.96880341 605.04974365]
[131.09922791 619.63494873]
[121.97500610 631.40771484]
[120.28216553 646.31188965]
[126.41259766 660.89709473]
[117.28836823 672.66986084]
[115.59552765 687.57403564]
[113.90267944 702.47821045]
[112.20983124 717.38238525]
[110.51699066 732.28656006]
[108.82414246 747.19073486]
[117.44477081 751.10870361]
[124.89104462 756.93572998]
[130.74925232 764.33959961]
[134.69587708 772.90093994]
[136.51547241 782.13665771]
[136.11242676 791.52722168]
[133.51591492 800.54608154]
[128.87794495 808.68914795]
[122.46445465 815.50268555]
[114.64006805 820.60900879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[20 239]
[21 238]
[22 237]
[23 236]
[24 235]
[25 234]
[27 232]
[28 231]
[30 229]
[31 228]
[32 227]
[33 226]
[34 225]
[35 201]
[36 200]
[37 199]
[38 198]
[39 197]
[40 196]
[46 64]
[47 63]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[66 182]
[67 181]
[68 180]
[69 179]
[70 178]
[75 175]
[76 174]
[77 173]
[78 172]
[79 171]
[80 170]
[81 169]
[82 168]
[83 167]
[84 166]
[85 165]
[86 138]
[87 137]
[88 136]
[90 134]
[91 133]
[92 132]
[95 127]
[96 126]
[97 125]
[103 120]
[104 119]
[105 118]
[106 117]
[107 116]
[108 115]
[139 164]
[140 163]
[142 161]
[143 160]
[144 159]
[145 158]
[147 155]
[148 154]
[205 217]
[206 216]
[207 215]
[208 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
