%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGACGUCUUUGCCCCGCGCCGCGCCGUCCCACCCAUCUCCCUGGCCUCCGGUCCCAACUUCGCUUCUCUGCUGACCCUCUCUCGUCGCCGCUGCCGCCGCCGCAGCUGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[168.28753662 211.52880859]
[171.01118469 205.80673218]
[161.93356323 193.86534119]
[152.85595703 181.92395020]
[143.77833557 169.98254395]
[134.70072937 158.04115295]
[125.62311554 146.09976196]
[112.90739441 151.77653503]
[98.99179840 153.97071838]
[84.82374573 152.44758606]
[71.39013672 147.22839355]
[59.64862061 138.59475708]
[50.45943069 127.07456207]
[39.02700043 136.78535461]
[30.86933136 151.64768982]
[14.32956123 147.92312622]
[13.32990170 130.99867249]
[29.31620407 125.35292053]
[40.74863434 115.64212799]
[38.72363663 100.77944183]
[25.11000443 94.48110962]
[11.49637222 88.18276978]
[-2.11725879 81.88443756]
[-21.98479271 84.72592926]
[-32.65857315 68.69728851]
[-46.59322739 63.14521790]
[-60.52787781 57.59314728]
[-74.46252441 52.04107666]
[-84.77295685 63.17927551]
[-98.41244507 69.83726501]
[-113.53636169 71.11460876]
[-128.09931946 66.83855438]
[-140.13180542 57.58740234]
[-148.00651550 44.61229706]
[-150.65846252 29.66801643]
[-147.72900391 14.77564621]
[-139.61430359 1.94926107]
[-127.41181946 -7.07647657]
[-112.77184296 -11.08090973]
[-97.67430115 -9.52247143]
[-84.16101837 -2.61192799]
[-74.05955505 8.71612644]
[-68.73604584 22.92966461]
[-68.91045380 38.10642242]
[-54.97580338 43.65849686]
[-41.04115295 49.21056747]
[-27.10650253 54.76264191]
[-17.96725655 49.83965683]
[-7.41371489 50.85298920]
[0.96453923 57.70495987]
[4.18107796 68.27080536]
[17.79470825 74.56913757]
[31.40834045 80.86747742]
[45.02197266 87.16581726]
[48.47639084 77.84555817]
[53.48467636 69.33562469]
[59.87048340 61.89022827]
[67.41677856 55.72703552]
[75.87316132 51.02079010]
[84.96417236 47.89844513]
[94.39820099 46.43578720]
[103.87687683 46.65576172]
[113.10448456 48.52846146]
[121.79718781 51.97277832]
[129.87571716 39.33404922]
[126.23390961 23.95507431]
[134.60432434 10.54941750]
[150.02095032 7.07041597]
[163.33735657 15.58209991]
[166.65316772 31.03463745]
[158.00117493 44.26031494]
[142.51443481 47.41256714]
[134.43592834 60.05130005]
[139.55024719 65.10716248]
[143.92924500 70.81175995]
[147.49150085 77.05902100]
[150.17080688 83.73280334]
[151.91732788 90.70903015]
[152.69860840 97.85799408]
[152.50010681 105.04677582]
[151.32553101 112.14173126]
[149.19670105 119.01094818]
[146.15319824 125.52671051]
[142.25163269 131.56788635]
[137.56451416 137.02214050]
[146.64212036 148.96353149]
[155.71974182 160.90493774]
[164.79734802 172.84632874]
[173.87496948 184.78771973]
[182.95257568 196.72912598]
[207.13267517 203.12692261]
[211.51715088 227.08740234]
[222.94958496 236.79818726]
[234.38201904 246.50898743]
[245.81445312 256.21978760]
[257.24688721 265.93057251]
[272.63159180 263.12966919]
[286.19165039 270.91802979]
[291.52444458 285.61819458]
[286.11196899 300.28924561]
[272.50985718 308.00390625]
[257.14059448 305.11959839]
[247.26104736 292.99816895]
[247.53608704 277.36300659]
[236.10365295 267.65222168]
[224.67121887 257.94140625]
[213.23880005 248.23062134]
[201.80636597 238.51983643]
[196.26730347 240.93348694]
[190.25303650 241.78952026]
[184.19544983 241.00881958]
[178.53430176 238.63044739]
[173.68518066 234.81007385]
[170.00912476 229.80990601]
[167.78565979 223.98071289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 90]
[3 89]
[4 88]
[5 87]
[6 86]
[7 85]
[13 19]
[14 18]
[20 54]
[21 53]
[22 52]
[23 51]
[25 47]
[26 46]
[27 45]
[28 44]
[64 73]
[65 72]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
