%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLDN18)
} def

/sequence { (\
CACACCUUCGGCAGCAGGAGGGCGGCAGCUUCUCGCAGGCGGCAGGGCGGGCGGCCAGGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
5 11 0.034789412 ubox
5 18 0.058214184 ubox
5 21 0.653150072 ubox
5 22 0.646384609 ubox
5 39 0.006013004 ubox
5 42 0.017539826 ubox
5 46 0.075210697 ubox
5 47 0.038476338 ubox
5 50 0.016439326 ubox
5 51 0.009907072 ubox
5 54 0.006290271 ubox
5 59 0.239179840 ubox
6 10 0.034766323 ubox
6 14 0.003249634 ubox
6 17 0.058615454 ubox
6 18 0.006650333 ubox
6 20 0.685341698 ubox
6 21 0.651013303 ubox
6 38 0.006060027 ubox
6 41 0.017583476 ubox
6 42 0.003885238 ubox
6 45 0.094326393 ubox
6 46 0.038693070 ubox
6 47 0.003418694 ubox
6 49 0.016483165 ubox
6 50 0.009935195 ubox
6 53 0.006310194 ubox
6 58 0.240104252 ubox
6 59 0.113397198 ubox
7 13 0.003511416 ubox
7 16 0.057763568 ubox
7 17 0.006621651 ubox
7 19 0.684550678 ubox
7 20 0.651149342 ubox
7 37 0.006034132 ubox
7 41 0.003774450 ubox
7 44 0.092815876 ubox
7 45 0.038171788 ubox
7 46 0.003357647 ubox
7 47 0.013716731 ubox
7 49 0.009282809 ubox
7 51 0.005052763 ubox
7 57 0.220395000 ubox
7 58 0.113413015 ubox
7 59 0.011813673 ubox
7 60 0.059820494 ubox
8 13 0.004345951 ubox
8 16 0.006293520 ubox
8 17 0.003228816 ubox
8 18 0.683297949 ubox
8 19 0.653025494 ubox
8 39 0.009070104 ubox
8 42 0.075157233 ubox
8 44 0.029597791 ubox
8 45 0.007487265 ubox
8 46 0.016311966 ubox
8 47 0.010780025 ubox
8 50 0.005281183 ubox
8 51 0.003278117 ubox
8 54 0.008202248 ubox
8 57 0.115422661 ubox
8 58 0.014300134 ubox
8 59 0.064563786 ubox
8 60 0.019821709 ubox
9 17 0.683640397 ubox
9 18 0.654216841 ubox
9 20 0.004268574 ubox
9 35 0.003661555 ubox
9 38 0.009312166 ubox
9 41 0.080612935 ubox
9 45 0.048255165 ubox
9 46 0.011419282 ubox
9 49 0.005364449 ubox
9 50 0.003380158 ubox
9 53 0.009337576 ubox
9 58 0.066462570 ubox
9 59 0.021019586 ubox
10 34 0.003654796 ubox
10 40 0.070404245 ubox
10 48 0.005339754 ubox
10 52 0.008877696 ubox
10 56 0.252944460 ubox
11 23 0.005466223 ubox
11 26 0.012485087 ubox
11 36 0.022381410 ubox
11 40 0.089107022 ubox
11 43 0.087449887 ubox
11 48 0.003365221 ubox
11 52 0.007109353 ubox
11 55 0.253605356 ubox
12 22 0.005484926 ubox
12 25 0.012457289 ubox
12 35 0.022401281 ubox
12 39 0.097462166 ubox
12 42 0.087300921 ubox
12 47 0.003372063 ubox
12 51 0.007590114 ubox
12 54 0.252967228 ubox
13 30 0.004563764 ubox
13 33 0.005737676 ubox
14 23 0.018521632 ubox
14 26 0.004305840 ubox
14 29 0.004863159 ubox
14 32 0.005922962 ubox
14 36 0.162032149 ubox
14 40 0.087932198 ubox
14 48 0.010939596 ubox
14 52 0.170011152 ubox
14 55 0.003395011 ubox
15 22 0.018548533 ubox
15 25 0.004307150 ubox
15 28 0.004860837 ubox
15 35 0.161970659 ubox
15 39 0.088234979 ubox
15 47 0.010946405 ubox
15 51 0.170528300 ubox
15 54 0.003503893 ubox
16 33 0.097419442 ubox
17 32 0.101540036 ubox
17 33 0.185336928 ubox
17 34 0.035057304 ubox
18 31 0.099184575 ubox
18 32 0.192881321 ubox
18 33 0.028678192 ubox
18 34 0.154712829 ubox
19 30 0.096089328 ubox
19 31 0.187558165 ubox
19 33 0.157492371 ubox
20 29 0.094272178 ubox
20 30 0.160439793 ubox
20 31 0.065852854 ubox
20 32 0.157085670 ubox
20 56 0.013124541 ubox
21 29 0.129408451 ubox
21 30 0.164602611 ubox
21 31 0.110756822 ubox
21 55 0.012729747 ubox
21 56 0.217982777 ubox
22 29 0.231341286 ubox
22 30 0.015477349 ubox
22 36 0.172017645 ubox
22 40 0.012440369 ubox
22 43 0.368284312 ubox
22 48 0.020447110 ubox
22 52 0.005585601 ubox
22 55 0.270616530 ubox
22 61 0.004902486 ubox
23 28 0.250832557 ubox
23 35 0.172562141 ubox
23 39 0.012464148 ubox
23 41 0.008373172 ubox
23 42 0.369123368 ubox
23 47 0.020426310 ubox
23 51 0.005596603 ubox
23 53 0.015524335 ubox
23 54 0.271075263 ubox
24 30 0.004474597 ubox
24 32 0.005918800 ubox
24 33 0.010072799 ubox
24 34 0.171914670 ubox
24 40 0.008085760 ubox
24 52 0.015603625 ubox
24 56 0.815287248 ubox
24 62 0.006301982 ubox
25 29 0.005537697 ubox
25 31 0.006118650 ubox
25 32 0.056861148 ubox
25 33 0.137174331 ubox
25 36 0.045463472 ubox
25 40 0.369356546 ubox
25 43 0.067231219 ubox
25 48 0.003931731 ubox
25 52 0.271142813 ubox
25 55 0.816111498 ubox
25 61 0.005617019 ubox
26 35 0.045508476 ubox
26 39 0.369458239 ubox
26 42 0.067064591 ubox
26 47 0.003941033 ubox
26 51 0.270987048 ubox
26 54 0.812973031 ubox
27 33 0.030997920 ubox
28 32 0.034393830 ubox
28 36 0.369935970 ubox
28 40 0.067570222 ubox
28 43 0.013062238 ubox
28 48 0.266271911 ubox
28 52 0.807938647 ubox
28 55 0.057632038 ubox
29 35 0.369804754 ubox
29 38 0.015554455 ubox
29 39 0.067789612 ubox
29 42 0.013077737 ubox
29 45 0.003458844 ubox
29 46 0.025467870 ubox
29 47 0.264922742 ubox
29 50 0.071820032 ubox
29 51 0.808569977 ubox
29 54 0.058054361 ubox
29 58 0.019339489 ubox
29 59 0.019919267 ubox
30 37 0.015022798 ubox
30 38 0.067157639 ubox
30 41 0.012798822 ubox
30 44 0.003616370 ubox
30 45 0.030675883 ubox
30 46 0.208950102 ubox
30 47 0.049147735 ubox
30 49 0.088922489 ubox
30 50 0.798040062 ubox
30 51 0.003359863 ubox
30 53 0.057599051 ubox
30 57 0.018988931 ubox
30 58 0.020004392 ubox
30 60 0.039671464 ubox
31 37 0.059573383 ubox
31 39 0.006469765 ubox
31 42 0.006669115 ubox
31 44 0.034500797 ubox
31 45 0.125298605 ubox
31 46 0.182555897 ubox
31 47 0.160673875 ubox
31 49 0.721861490 ubox
31 50 0.018463018 ubox
31 51 0.006923945 ubox
31 53 0.003549512 ubox
31 57 0.017930760 ubox
31 59 0.042899111 ubox
31 60 0.023135567 ubox
32 38 0.012611716 ubox
32 39 0.012317053 ubox
32 41 0.008142198 ubox
32 42 0.029582048 ubox
32 45 0.248387306 ubox
32 46 0.209682866 ubox
32 47 0.763072137 ubox
32 49 0.020208855 ubox
32 50 0.024951550 ubox
32 51 0.080567213 ubox
32 54 0.010099944 ubox
32 58 0.044303573 ubox
32 59 0.024690055 ubox
33 37 0.011489253 ubox
33 38 0.011399734 ubox
33 39 0.004650602 ubox
33 41 0.011089837 ubox
33 42 0.088116055 ubox
33 44 0.247264213 ubox
33 45 0.206789397 ubox
33 46 0.763795535 ubox
33 47 0.072144229 ubox
33 49 0.006493138 ubox
33 50 0.098751426 ubox
33 54 0.041137803 ubox
33 57 0.041296006 ubox
33 58 0.019985164 ubox
33 59 0.009132859 ubox
33 60 0.022094215 ubox
34 38 0.005734351 ubox
34 41 0.104068722 ubox
34 45 0.762614384 ubox
34 46 0.074402231 ubox
34 49 0.138365797 ubox
34 53 0.183693859 ubox
34 58 0.015759770 ubox
34 59 0.023618932 ubox
35 40 0.101942740 ubox
35 43 0.822382432 ubox
35 48 0.140361559 ubox
35 52 0.202967005 ubox
35 55 0.013481645 ubox
36 42 0.824046510 ubox
36 47 0.140216705 ubox
36 51 0.202939940 ubox
36 54 0.013483827 ubox
38 56 0.223580158 ubox
39 48 0.217118489 ubox
39 52 0.027411579 ubox
39 55 0.223823974 ubox
40 47 0.217166328 ubox
40 49 0.026910391 ubox
40 51 0.027399342 ubox
40 53 0.005133798 ubox
40 54 0.223724030 ubox
41 48 0.027163139 ubox
41 52 0.005291122 ubox
41 56 0.011988689 ubox
41 62 0.006457283 ubox
42 48 0.029424157 ubox
42 52 0.223869232 ubox
42 55 0.012004041 ubox
42 61 0.006250734 ubox
43 47 0.029415569 ubox
43 51 0.223826370 ubox
43 54 0.011992545 ubox
45 56 0.034543725 ubox
45 62 0.005903898 ubox
46 55 0.029833997 ubox
46 56 0.358937516 ubox
47 55 0.362568125 ubox
48 54 0.362956897 ubox
49 56 0.072231829 ubox
50 55 0.072229425 ubox
50 56 0.013462413 ubox
51 55 0.013285195 ubox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
24 56 0.9500000 lbox
25 55 0.9500000 lbox
26 54 0.9500000 lbox
28 52 0.9500000 lbox
29 51 0.9500000 lbox
30 50 0.9500000 lbox
31 49 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 43 0.9500000 lbox
36 42 0.9500000 lbox
showpage
end
%%EOF
