%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EDDM3B)
} def

/sequence { (\
GGAGGACUCAGACUCUGCUCUUCAGAUCCACACACUGAUCCCAACUACAACCAGUGACCUGAACUUGGAGUCUGAGUAGGGCGGCCCCGGUGACUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.012932087 ubox
1 86 0.046003040 ubox
1 87 0.015553822 ubox
1 88 0.327243677 ubox
1 95 0.060264123 ubox
2 7 0.004839835 ubox
2 15 0.014915444 ubox
2 23 0.004762581 ubox
2 85 0.046181221 ubox
2 86 0.014650192 ubox
2 87 0.326750294 ubox
2 94 0.063399257 ubox
3 14 0.015288989 ubox
3 22 0.004781368 ubox
3 95 0.134698270 ubox
4 13 0.015334815 ubox
4 21 0.004796382 ubox
4 86 0.307397031 ubox
4 87 0.022131175 ubox
4 88 0.091424542 ubox
4 94 0.137833512 ubox
4 95 0.051047200 ubox
5 20 0.004807422 ubox
5 85 0.307255729 ubox
5 86 0.021719195 ubox
5 87 0.089764628 ubox
5 94 0.054977305 ubox
6 19 0.004716046 ubox
6 77 0.908244110 ubox
6 91 0.009127439 ubox
7 76 0.935225238 ubox
7 81 0.007394741 ubox
7 84 0.019543390 ubox
7 90 0.008875628 ubox
7 98 0.344292841 ubox
8 75 0.935499919 ubox
8 80 0.006963692 ubox
8 83 0.015037769 ubox
8 84 0.004710177 ubox
8 89 0.007167842 ubox
8 93 0.007836065 ubox
8 97 0.349915557 ubox
9 17 0.005405292 ubox
9 74 0.935698686 ubox
9 79 0.006716033 ubox
9 80 0.004650035 ubox
9 83 0.010986327 ubox
9 89 0.003177943 ubox
9 92 0.008367880 ubox
9 96 0.350545567 ubox
10 16 0.005442002 ubox
10 73 0.935486348 ubox
10 91 0.008083803 ubox
10 95 0.350152430 ubox
11 15 0.005330078 ubox
11 72 0.935700470 ubox
11 94 0.347581780 ubox
12 71 0.935592682 ubox
12 77 0.012191476 ubox
12 91 0.325616123 ubox
13 70 0.935687761 ubox
13 76 0.012422709 ubox
13 81 0.020785908 ubox
13 90 0.347686831 ubox
14 26 0.005597920 ubox
14 68 0.004263119 ubox
14 69 0.935531807 ubox
14 75 0.012423398 ubox
14 80 0.020873874 ubox
14 84 0.003579929 ubox
14 89 0.344180964 ubox
14 90 0.008460917 ubox
14 93 0.007230818 ubox
15 25 0.007067332 ubox
15 67 0.009805829 ubox
15 68 0.935490585 ubox
15 74 0.012418196 ubox
15 79 0.021089174 ubox
15 83 0.006014900 ubox
15 84 0.350644949 ubox
15 89 0.007550116 ubox
15 90 0.009630972 ubox
15 92 0.006292677 ubox
16 24 0.007529951 ubox
16 43 0.003225458 ubox
16 67 0.917077074 ubox
16 78 0.021148620 ubox
16 83 0.350997736 ubox
16 89 0.008530780 ubox
17 23 0.008138074 ubox
17 42 0.004437357 ubox
17 48 0.003463478 ubox
17 66 0.605292805 ubox
17 71 0.012176187 ubox
17 77 0.021161108 ubox
17 82 0.351764949 ubox
17 88 0.003316674 ubox
18 25 0.009503845 ubox
18 68 0.006793636 ubox
18 70 0.012451996 ubox
18 76 0.021074192 ubox
18 81 0.351774194 ubox
19 24 0.008765370 ubox
19 26 0.010407382 ubox
19 62 0.012496973 ubox
19 67 0.010642308 ubox
19 69 0.012665419 ubox
19 75 0.017031588 ubox
19 80 0.351394921 ubox
20 25 0.011066270 ubox
20 61 0.012251881 ubox
20 67 0.010253696 ubox
20 68 0.012792849 ubox
20 70 0.004186540 ubox
20 74 0.013857908 ubox
20 76 0.006528981 ubox
20 79 0.350311342 ubox
20 80 0.009069652 ubox
21 44 0.005319477 ubox
21 62 0.028935279 ubox
21 63 0.861667800 ubox
21 67 0.012393364 ubox
21 69 0.005339366 ubox
21 75 0.005448473 ubox
21 76 0.134980231 ubox
21 78 0.307447720 ubox
21 79 0.008334775 ubox
22 38 0.014856872 ubox
22 43 0.006082719 ubox
22 57 0.005844117 ubox
22 61 0.005592426 ubox
22 62 0.930059535 ubox
22 67 0.003616112 ubox
22 68 0.005748253 ubox
22 75 0.342197848 ubox
22 78 0.003453594 ubox
23 37 0.015825079 ubox
23 56 0.005918137 ubox
23 61 0.933551293 ubox
23 67 0.011237340 ubox
23 74 0.352091793 ubox
24 36 0.015821050 ubox
24 55 0.004988450 ubox
24 60 0.933127219 ubox
24 65 0.050452791 ubox
24 66 0.010238571 ubox
24 73 0.352284739 ubox
25 35 0.015756478 ubox
25 40 0.048847905 ubox
25 59 0.929843793 ubox
25 64 0.051338186 ubox
25 65 0.007433156 ubox
25 66 0.003713646 ubox
25 72 0.352315256 ubox
26 39 0.060360121 ubox
26 65 0.003691438 ubox
26 71 0.343227021 ubox
27 38 0.061774372 ubox
27 57 0.729037632 ubox
27 62 0.051040255 ubox
27 69 0.300386293 ubox
27 70 0.180990255 ubox
28 37 0.061408953 ubox
28 56 0.579749197 ubox
28 61 0.051251270 ubox
28 68 0.350749071 ubox
29 37 0.028281427 ubox
29 56 0.232449137 ubox
29 61 0.013439498 ubox
29 67 0.350759660 ubox
30 36 0.027426769 ubox
30 55 0.280016086 ubox
30 60 0.015858796 ubox
30 66 0.344530174 ubox
31 37 0.017206560 ubox
31 54 0.274566622 ubox
31 56 0.071700873 ubox
31 61 0.295910410 ubox
31 67 0.017492838 ubox
32 36 0.014155877 ubox
32 55 0.074831084 ubox
32 60 0.292124855 ubox
32 66 0.018038921 ubox
33 54 0.070102776 ubox
33 56 0.770948084 ubox
33 61 0.009422956 ubox
34 55 0.948321762 ubox
34 60 0.007063525 ubox
35 54 0.952249750 ubox
36 43 0.042434495 ubox
36 47 0.030042108 ubox
36 49 0.149509188 ubox
36 53 0.954152101 ubox
37 42 0.045570659 ubox
37 46 0.031852074 ubox
37 48 0.154598418 ubox
37 52 0.952538576 ubox
39 57 0.015313395 ubox
39 62 0.003714958 ubox
40 56 0.015925242 ubox
40 61 0.003852263 ubox
42 56 0.030841224 ubox
42 61 0.004397966 ubox
43 55 0.022208413 ubox
43 60 0.004290204 ubox
44 55 0.075793384 ubox
45 54 0.080357445 ubox
46 53 0.077218920 ubox
46 56 0.032687998 ubox
47 55 0.038842338 ubox
48 54 0.039209906 ubox
48 56 0.008779973 ubox
48 67 0.007065523 ubox
49 55 0.008306981 ubox
49 66 0.007202452 ubox
50 65 0.006958112 ubox
51 68 0.004458956 ubox
52 61 0.027556557 ubox
52 67 0.005216554 ubox
52 96 0.006508971 ubox
53 60 0.027655104 ubox
53 65 0.013340576 ubox
53 66 0.003807671 ubox
53 95 0.006524056 ubox
54 59 0.027439704 ubox
54 64 0.014389356 ubox
54 94 0.006527422 ubox
55 63 0.014355468 ubox
55 93 0.006509511 ubox
57 65 0.004951459 ubox
57 91 0.006512830 ubox
58 68 0.026705570 ubox
58 90 0.006527292 ubox
59 67 0.026920752 ubox
59 68 0.007198268 ubox
59 89 0.006514722 ubox
60 67 0.007042747 ubox
61 66 0.006353109 ubox
63 77 0.006483688 ubox
64 76 0.006731571 ubox
65 75 0.006731028 ubox
66 74 0.006697044 ubox
67 73 0.006602169 ubox
68 72 0.006482466 ubox
75 95 0.004992364 ubox
76 82 0.003326310 ubox
76 94 0.006215449 ubox
77 81 0.003271407 ubox
77 90 0.024987341 ubox
77 92 0.014480480 ubox
77 93 0.005903687 ubox
77 96 0.032255048 ubox
78 91 0.026557776 ubox
78 95 0.066562287 ubox
79 86 0.203017518 ubox
79 87 0.433574590 ubox
79 88 0.724059644 ubox
79 94 0.068636218 ubox
79 95 0.028100194 ubox
80 85 0.203575945 ubox
80 86 0.435970374 ubox
80 87 0.725058815 ubox
80 88 0.054041394 ubox
80 94 0.030244112 ubox
80 95 0.049406797 ubox
81 85 0.429499273 ubox
81 86 0.716226460 ubox
81 87 0.053803103 ubox
81 91 0.054248909 ubox
81 94 0.051874840 ubox
82 89 0.066384652 ubox
82 90 0.054384756 ubox
82 92 0.032541232 ubox
82 96 0.038280797 ubox
83 88 0.066940946 ubox
83 91 0.029814430 ubox
83 95 0.038579415 ubox
84 91 0.057048531 ubox
84 94 0.038354541 ubox
85 90 0.058743667 ubox
88 96 0.276460329 ubox
89 95 0.285166126 ubox
90 94 0.280116446 ubox
6 77 0.9500000 lbox
7 76 0.9500000 lbox
8 75 0.9500000 lbox
9 74 0.9500000 lbox
10 73 0.9500000 lbox
11 72 0.9500000 lbox
12 71 0.9500000 lbox
13 70 0.9500000 lbox
14 69 0.9500000 lbox
15 68 0.9500000 lbox
16 67 0.9500000 lbox
21 63 0.9500000 lbox
22 62 0.9500000 lbox
23 61 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
79 88 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
