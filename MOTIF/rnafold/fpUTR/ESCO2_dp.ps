%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ESCO2)
} def

/sequence { (\
AUUAUUUGAAGACGCUCACGGAGCGGCUGGCUAGGCUGAGGAGAGCUCGCCGGGCUCUGAGGCGCAGGAAUUCAAUAAAGAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.037723311 ubox
1 76 0.043396838 ubox
2 9 0.014577066 ubox
2 10 0.011156423 ubox
2 11 0.007745991 ubox
2 12 0.010000154 ubox
2 69 0.013009616 ubox
2 70 0.047113873 ubox
2 75 0.044360832 ubox
2 78 0.600018042 ubox
2 79 0.177571127 ubox
2 80 0.037239258 ubox
2 81 0.066501735 ubox
2 82 0.052228169 ubox
2 83 0.013442120 ubox
3 8 0.014752245 ubox
3 9 0.012284378 ubox
3 10 0.010486098 ubox
3 11 0.010867996 ubox
3 68 0.012573750 ubox
3 69 0.049879742 ubox
3 74 0.039452017 ubox
3 77 0.689241955 ubox
3 78 0.192103197 ubox
3 79 0.043691190 ubox
3 80 0.068498269 ubox
3 81 0.056612914 ubox
3 82 0.015868776 ubox
4 71 0.102424294 ubox
4 76 0.688917152 ubox
5 11 0.004146300 ubox
5 12 0.011513994 ubox
5 67 0.005737851 ubox
5 68 0.079555677 ubox
5 69 0.036049571 ubox
5 70 0.115953043 ubox
5 75 0.561779090 ubox
5 78 0.045140674 ubox
5 79 0.037373606 ubox
5 80 0.014901897 ubox
5 81 0.017413345 ubox
5 82 0.011911522 ubox
5 83 0.006413112 ubox
6 10 0.004705447 ubox
6 11 0.011830775 ubox
6 12 0.008583846 ubox
6 66 0.005456228 ubox
6 67 0.115659234 ubox
6 68 0.037724183 ubox
6 69 0.121017736 ubox
6 70 0.035034605 ubox
6 74 0.397697097 ubox
6 75 0.681307955 ubox
6 77 0.034565465 ubox
6 78 0.034532501 ubox
6 79 0.014548644 ubox
6 80 0.016080073 ubox
6 81 0.011461634 ubox
6 82 0.006778014 ubox
7 11 0.008492493 ubox
7 18 0.004835431 ubox
7 66 0.127111270 ubox
7 67 0.036960076 ubox
7 68 0.120460280 ubox
7 69 0.040320104 ubox
7 74 0.842300265 ubox
7 77 0.025543059 ubox
7 78 0.010127136 ubox
7 79 0.009082219 ubox
7 80 0.008868055 ubox
7 81 0.004827197 ubox
8 13 0.005979439 ubox
8 17 0.005454299 ubox
8 65 0.128983648 ubox
8 72 0.048077367 ubox
8 73 0.939224152 ubox
8 76 0.019935808 ubox
9 16 0.005169980 ubox
9 71 0.049265124 ubox
9 72 0.938073047 ubox
10 28 0.023021213 ubox
10 71 0.922658749 ubox
10 72 0.012556304 ubox
11 27 0.024249746 ubox
11 71 0.015653565 ubox
11 72 0.010925816 ubox
11 73 0.040641003 ubox
12 71 0.017728476 ubox
12 72 0.040411336 ubox
13 20 0.004776928 ubox
13 25 0.055373956 ubox
13 64 0.958217369 ubox
14 19 0.004695731 ubox
14 24 0.056057695 ubox
14 63 0.965999174 ubox
14 65 0.248800672 ubox
15 23 0.056060959 ubox
15 61 0.100302162 ubox
15 62 0.959205462 ubox
15 64 0.249039100 ubox
15 67 0.022573367 ubox
15 68 0.009307408 ubox
16 22 0.056027350 ubox
16 60 0.139348020 ubox
16 61 0.777944323 ubox
16 62 0.244328289 ubox
16 66 0.020317214 ubox
16 67 0.008282842 ubox
17 21 0.055559432 ubox
17 59 0.140857828 ubox
17 61 0.572734445 ubox
18 58 0.097453130 ubox
19 59 0.978110346 ubox
19 64 0.004811598 ubox
20 56 0.014728549 ubox
20 57 0.018257664 ubox
20 58 0.991415519 ubox
20 63 0.004698990 ubox
21 55 0.015192064 ubox
21 56 0.007986532 ubox
21 57 0.997988287 ubox
22 56 0.998018417 ubox
23 55 0.998102235 ubox
23 65 0.012030243 ubox
24 52 0.034423350 ubox
24 54 0.993290836 ubox
24 59 0.004202800 ubox
24 64 0.012044663 ubox
25 51 0.076934814 ubox
25 56 0.007095457 ubox
25 58 0.004194140 ubox
25 63 0.012115235 ubox
26 36 0.003282560 ubox
26 50 0.077258376 ubox
26 55 0.022272386 ubox
26 57 0.004209938 ubox
26 63 0.023636397 ubox
27 35 0.003298990 ubox
27 49 0.077166259 ubox
27 53 0.979856657 ubox
27 54 0.018532855 ubox
27 61 0.012289743 ubox
27 62 0.023628282 ubox
27 67 0.007413127 ubox
27 68 0.006184984 ubox
28 34 0.003269582 ubox
28 52 0.990748977 ubox
28 53 0.013603312 ubox
28 60 0.012176221 ubox
28 61 0.023384834 ubox
28 66 0.007354629 ubox
28 67 0.005735057 ubox
29 37 0.005385933 ubox
29 47 0.074526669 ubox
29 48 0.012359314 ubox
29 51 0.995864243 ubox
29 56 0.035437737 ubox
29 57 0.006889571 ubox
29 65 0.006137066 ubox
30 36 0.005660119 ubox
30 46 0.076148243 ubox
30 47 0.005036685 ubox
30 50 0.995903655 ubox
30 55 0.040570515 ubox
30 63 0.003986997 ubox
30 65 0.008558695 ubox
31 35 0.005622055 ubox
31 45 0.076139140 ubox
31 49 0.994603257 ubox
31 53 0.005443857 ubox
31 54 0.040599926 ubox
31 62 0.003979253 ubox
31 64 0.009474517 ubox
31 67 0.013954832 ubox
32 44 0.074753308 ubox
32 52 0.004880294 ubox
32 53 0.037589874 ubox
32 61 0.003707573 ubox
32 66 0.013920881 ubox
33 47 0.272833880 ubox
34 46 0.207216756 ubox
34 47 0.918410337 ubox
34 48 0.132352910 ubox
34 51 0.042746488 ubox
35 46 0.973216772 ubox
35 47 0.015323637 ubox
35 50 0.042776640 ubox
35 63 0.017949502 ubox
36 43 0.109879747 ubox
36 45 0.990695041 ubox
36 49 0.041822873 ubox
36 62 0.017955913 ubox
37 42 0.109443077 ubox
37 44 0.984558361 ubox
37 49 0.009983444 ubox
37 61 0.017848276 ubox
38 48 0.054408601 ubox
39 47 0.054439540 ubox
40 46 0.054401822 ubox
42 58 0.018134877 ubox
43 57 0.018346945 ubox
44 56 0.018397749 ubox
45 55 0.018485645 ubox
46 54 0.018500248 ubox
47 53 0.018062197 ubox
48 52 0.017436080 ubox
48 53 0.003788283 ubox
54 63 0.017661894 ubox
54 65 0.007468026 ubox
55 62 0.017662823 ubox
55 64 0.007474816 ubox
55 68 0.006645489 ubox
56 61 0.016237546 ubox
56 68 0.027447809 ubox
56 69 0.009710644 ubox
57 67 0.041096194 ubox
57 68 0.010541500 ubox
58 66 0.041272370 ubox
58 67 0.010084497 ubox
58 74 0.003202451 ubox
59 65 0.041249521 ubox
59 73 0.003559678 ubox
60 72 0.003544933 ubox
61 71 0.003349900 ubox
66 72 0.004990847 ubox
67 71 0.004968494 ubox
67 73 0.031344723 ubox
68 72 0.020440706 ubox
70 76 0.007732799 ubox
71 75 0.007164195 ubox
71 78 0.007767498 ubox
71 79 0.007488856 ubox
71 80 0.005359448 ubox
71 81 0.008765988 ubox
71 82 0.179388419 ubox
71 83 0.008282817 ubox
72 77 0.007591578 ubox
72 78 0.008218985 ubox
72 79 0.007206156 ubox
72 80 0.008293306 ubox
72 81 0.210477531 ubox
72 82 0.008256114 ubox
73 80 0.213431572 ubox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
8 73 0.9500000 lbox
9 72 0.9500000 lbox
10 71 0.9500000 lbox
13 64 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
19 59 0.9500000 lbox
20 58 0.9500000 lbox
21 57 0.9500000 lbox
22 56 0.9500000 lbox
23 55 0.9500000 lbox
24 54 0.9500000 lbox
27 53 0.9500000 lbox
28 52 0.9500000 lbox
29 51 0.9500000 lbox
30 50 0.9500000 lbox
31 49 0.9500000 lbox
34 47 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
showpage
end
%%EOF
