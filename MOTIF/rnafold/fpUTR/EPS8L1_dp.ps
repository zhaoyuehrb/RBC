%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EPS8L1)
} def

/sequence { (\
AGGAGGAGGGGCCGGCAGCCUGGAAGGGAAAGGACAGCGGAGAGCAGGGCAGAGCCUGAGCAGGCAGGGCACCUCCAGGUGGGCAGGAGCUACCACUCAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 97 0.041595344 ubox
2 76 0.067746680 ubox
2 94 0.008762863 ubox
2 96 0.047644461 ubox
2 97 0.046001635 ubox
2 98 0.070320771 ubox
2 104 0.173360780 ubox
3 75 0.067633873 ubox
3 93 0.008614706 ubox
3 96 0.050960872 ubox
3 97 0.050935737 ubox
3 98 0.127406097 ubox
3 103 0.174056947 ubox
4 74 0.067082510 ubox
4 97 0.120567215 ubox
5 73 0.066220293 ubox
5 76 0.993732391 ubox
5 94 0.021898933 ubox
5 96 0.071509497 ubox
6 72 0.065467336 ubox
6 75 0.996381860 ubox
6 93 0.022113618 ubox
6 98 0.012261770 ubox
7 74 0.996039595 ubox
7 91 0.004782047 ubox
7 97 0.012273669 ubox
8 73 0.995208107 ubox
8 74 0.022742055 ubox
8 90 0.004659650 ubox
8 91 0.022574665 ubox
8 94 0.039831307 ubox
8 96 0.012141372 ubox
9 72 0.989904706 ubox
9 73 0.050772077 ubox
9 90 0.023237975 ubox
9 91 0.011666166 ubox
9 93 0.039738649 ubox
9 94 0.008737788 ubox
10 72 0.067688896 ubox
10 90 0.012896593 ubox
10 91 0.030721973 ubox
10 93 0.008565127 ubox
10 94 0.007966885 ubox
11 65 0.004149166 ubox
11 70 0.982711871 ubox
11 84 0.003465353 ubox
11 90 0.034243454 ubox
11 93 0.008093620 ubox
12 40 0.003262627 ubox
12 64 0.004151736 ubox
12 68 0.019802524 ubox
12 69 0.998491073 ubox
12 83 0.003467146 ubox
12 87 0.038966889 ubox
12 89 0.031708957 ubox
13 39 0.003331282 ubox
13 63 0.004136748 ubox
13 67 0.023595341 ubox
13 68 0.998128988 ubox
13 82 0.003449266 ubox
13 86 0.041261789 ubox
14 38 0.003805950 ubox
15 38 0.006096375 ubox
15 50 0.005911145 ubox
15 61 0.004093484 ubox
15 65 0.036573239 ubox
15 84 0.049970363 ubox
16 37 0.006086956 ubox
16 49 0.005896347 ubox
16 60 0.004105332 ubox
16 64 0.034672300 ubox
16 83 0.050041156 ubox
18 38 0.009041364 ubox
18 50 0.006618843 ubox
18 61 0.018004763 ubox
18 65 0.996621534 ubox
18 80 0.050102008 ubox
19 27 0.009419308 ubox
19 28 0.021228772 ubox
19 33 0.018947208 ubox
19 37 0.006480130 ubox
19 48 0.006690049 ubox
19 49 0.006092994 ubox
19 60 0.017184447 ubox
19 64 0.997918944 ubox
19 79 0.050495414 ubox
20 26 0.009616096 ubox
20 27 0.021731360 ubox
20 28 0.004987856 ubox
20 32 0.019355418 ubox
20 37 0.013761368 ubox
20 40 0.008550933 ubox
20 47 0.007232641 ubox
20 48 0.005503154 ubox
20 63 0.997993453 ubox
20 78 0.050511289 ubox
21 25 0.008674069 ubox
21 26 0.021176282 ubox
21 27 0.004990755 ubox
21 31 0.019260829 ubox
21 36 0.016051854 ubox
21 39 0.008654522 ubox
21 46 0.007683119 ubox
21 47 0.004553028 ubox
21 62 0.997682150 ubox
21 77 0.050500084 ubox
22 35 0.017028624 ubox
22 38 0.009152211 ubox
22 45 0.007789555 ubox
22 61 0.996878251 ubox
22 76 0.050512080 ubox
23 75 0.050492696 ubox
24 74 0.036251002 ubox
25 57 0.680125260 ubox
25 74 0.029856429 ubox
26 56 0.687951135 ubox
26 57 0.689528680 ubox
26 73 0.042260599 ubox
26 74 0.004336191 ubox
27 55 0.687517144 ubox
27 56 0.693827125 ubox
27 57 0.015693246 ubox
27 72 0.042160226 ubox
27 73 0.007282830 ubox
28 55 0.693512376 ubox
28 56 0.012823221 ubox
28 72 0.007380422 ubox
31 57 0.047194993 ubox
32 56 0.047849808 ubox
33 55 0.047922291 ubox
35 58 0.005771022 ubox
36 57 0.004875089 ubox
37 45 0.976997614 ubox
37 50 0.139608071 ubox
37 55 0.007717441 ubox
37 56 0.003167755 ubox
37 61 0.010140098 ubox
37 65 0.020030651 ubox
38 44 0.978981318 ubox
38 49 0.139785159 ubox
38 54 0.009917492 ubox
38 58 0.004508566 ubox
38 60 0.010515680 ubox
38 64 0.020052852 ubox
39 57 0.004158165 ubox
40 56 0.004071293 ubox
41 57 0.010714289 ubox
42 56 0.010844406 ubox
44 50 0.022275554 ubox
44 55 0.012622055 ubox
44 61 0.025330771 ubox
45 49 0.022156927 ubox
45 54 0.013317729 ubox
45 58 0.124063238 ubox
45 60 0.025919527 ubox
46 57 0.138210692 ubox
46 74 0.016566681 ubox
47 56 0.138809082 ubox
47 57 0.132371106 ubox
47 73 0.026310117 ubox
48 55 0.137839012 ubox
48 56 0.144110189 ubox
48 72 0.026348269 ubox
49 55 0.145902827 ubox
49 70 0.044313273 ubox
50 54 0.146254308 ubox
50 58 0.008836663 ubox
50 69 0.044346472 ubox
51 57 0.008857059 ubox
52 56 0.008667873 ubox
54 65 0.046495508 ubox
54 70 0.010548059 ubox
55 64 0.046551635 ubox
55 68 0.009502670 ubox
55 69 0.009443020 ubox
56 63 0.046540913 ubox
56 67 0.010700625 ubox
56 68 0.008175104 ubox
57 62 0.043539219 ubox
57 66 0.011765487 ubox
57 67 0.006574986 ubox
58 65 0.012080392 ubox
60 70 0.006807867 ubox
61 69 0.006810816 ubox
64 70 0.005200296 ubox
65 69 0.005169164 ubox
77 97 0.041037650 ubox
78 91 0.004508886 ubox
78 94 0.620522818 ubox
78 96 0.031962452 ubox
78 97 0.585589445 ubox
78 98 0.205057942 ubox
78 104 0.369042601 ubox
79 90 0.004680795 ubox
79 93 0.621221133 ubox
79 96 0.654009742 ubox
79 97 0.025242135 ubox
79 101 0.016914114 ubox
79 103 0.372195285 ubox
80 89 0.004676445 ubox
80 92 0.614908623 ubox
80 95 0.655113667 ubox
80 99 0.025451813 ubox
80 100 0.011295315 ubox
80 102 0.368314495 ubox
81 91 0.561231083 ubox
81 94 0.655026044 ubox
81 98 0.031463599 ubox
81 101 0.341442153 ubox
81 104 0.192303375 ubox
82 90 0.503288156 ubox
82 91 0.300892623 ubox
82 93 0.639485439 ubox
82 94 0.022595854 ubox
82 96 0.005944005 ubox
82 97 0.038084360 ubox
82 98 0.030346525 ubox
82 103 0.194363559 ubox
82 104 0.009851141 ubox
83 90 0.652142751 ubox
83 93 0.025650685 ubox
83 96 0.038527826 ubox
83 97 0.028513308 ubox
83 101 0.248916289 ubox
83 103 0.009748055 ubox
84 89 0.698642920 ubox
84 100 0.259201039 ubox
85 91 0.135164142 ubox
85 97 0.084233552 ubox
86 90 0.136960599 ubox
86 94 0.074680766 ubox
86 96 0.086380435 ubox
86 97 0.032281560 ubox
86 98 0.024899107 ubox
86 104 0.018192621 ubox
87 93 0.074767285 ubox
87 96 0.033994440 ubox
87 97 0.013550150 ubox
87 98 0.401630306 ubox
87 103 0.018312437 ubox
88 97 0.402155490 ubox
89 96 0.400216079 ubox
89 101 0.020175330 ubox
90 100 0.020273357 ubox
91 99 0.019752904 ubox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
8 73 0.9500000 lbox
9 72 0.9500000 lbox
11 70 0.9500000 lbox
12 69 0.9500000 lbox
13 68 0.9500000 lbox
18 65 0.9500000 lbox
19 64 0.9500000 lbox
20 63 0.9500000 lbox
21 62 0.9500000 lbox
22 61 0.9500000 lbox
25 57 0.9500000 lbox
26 56 0.9500000 lbox
27 55 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
78 97 0.9500000 lbox
79 96 0.9500000 lbox
80 95 0.9500000 lbox
81 94 0.9500000 lbox
82 93 0.9500000 lbox
83 90 0.9500000 lbox
84 89 0.9500000 lbox
showpage
end
%%EOF
