%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NFKBIB)
} def

/sequence { (\
GGGGCGUGGUGGGGAAUUUCCCGCAGGGCGGAAGCUCCAGAACUCCCGGCAAAGCCCAGCUACAGGCGGGCGACUGCGGGGGGCCCCUGAGGCGGCGGGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.012102997 ubox
1 36 0.006757623 ubox
1 37 0.018488045 ubox
1 38 0.947522315 ubox
1 44 0.017739150 ubox
1 45 0.015790991 ubox
1 46 0.006382821 ubox
1 47 0.043727125 ubox
1 87 0.151808544 ubox
1 88 0.005067579 ubox
1 103 0.025423812 ubox
2 21 0.012111684 ubox
2 35 0.008084031 ubox
2 36 0.018638644 ubox
2 37 0.948171438 ubox
2 38 0.039032279 ubox
2 43 0.020571713 ubox
2 44 0.044173766 ubox
2 45 0.009559984 ubox
2 46 0.043983639 ubox
2 47 0.045875148 ubox
2 86 0.152073492 ubox
2 87 0.005221663 ubox
2 102 0.024426085 ubox
2 103 0.025833734 ubox
3 20 0.012110011 ubox
3 35 0.027033630 ubox
3 36 0.947073502 ubox
3 37 0.038534485 ubox
3 38 0.011235908 ubox
3 43 0.046618165 ubox
3 44 0.018214177 ubox
3 45 0.044202458 ubox
3 46 0.046321932 ubox
3 85 0.152081796 ubox
3 86 0.005075081 ubox
3 102 0.024824921 ubox
3 103 0.039789978 ubox
4 19 0.011465489 ubox
4 24 0.017805798 ubox
4 29 0.161316888 ubox
4 35 0.946918794 ubox
4 36 0.019016354 ubox
4 37 0.009188858 ubox
4 43 0.018753406 ubox
4 44 0.044538576 ubox
4 45 0.046707874 ubox
4 84 0.152064189 ubox
4 85 0.004898056 ubox
4 102 0.039482163 ubox
5 23 0.017818393 ubox
5 28 0.163045804 ubox
5 30 0.256658761 ubox
5 34 0.911288756 ubox
5 83 0.150528089 ubox
5 101 0.036752730 ubox
6 17 0.013419282 ubox
6 22 0.017003689 ubox
6 24 0.030828283 ubox
6 29 0.627973042 ubox
6 35 0.003450310 ubox
6 43 0.138192476 ubox
6 84 0.003926300 ubox
7 16 0.013710961 ubox
7 23 0.030726307 ubox
7 25 0.056347229 ubox
7 28 0.614553068 ubox
7 30 0.229862628 ubox
7 34 0.003279235 ubox
7 39 0.044919908 ubox
7 42 0.137441035 ubox
8 18 0.007649708 ubox
8 20 0.004331390 ubox
8 21 0.016686548 ubox
8 22 0.029863265 ubox
8 24 0.049365001 ubox
8 29 0.268159166 ubox
8 38 0.045672344 ubox
8 44 0.018754311 ubox
8 103 0.006120788 ubox
9 17 0.009956054 ubox
9 19 0.004017293 ubox
9 20 0.016967225 ubox
9 21 0.029624547 ubox
9 24 0.944536032 ubox
9 29 0.146553824 ubox
9 37 0.006547917 ubox
9 43 0.020462122 ubox
10 16 0.010186513 ubox
10 23 0.947106574 ubox
10 25 0.225647253 ubox
10 28 0.125042379 ubox
10 30 0.018680208 ubox
10 39 0.139237172 ubox
10 42 0.019607234 ubox
11 18 0.012669477 ubox
11 19 0.005448614 ubox
11 20 0.029966434 ubox
11 21 0.009095867 ubox
11 22 0.949929556 ubox
11 24 0.250784834 ubox
11 29 0.017858897 ubox
11 38 0.141163431 ubox
12 17 0.012509049 ubox
12 18 0.005730740 ubox
12 19 0.028038435 ubox
12 20 0.012142157 ubox
12 21 0.949034277 ubox
12 22 0.257296146 ubox
12 37 0.141111717 ubox
12 38 0.004260634 ubox
13 17 0.003866800 ubox
13 18 0.022182580 ubox
13 19 0.011709670 ubox
13 20 0.947365132 ubox
13 21 0.261136560 ubox
13 22 0.092073956 ubox
13 36 0.140933837 ubox
13 37 0.004314426 ubox
13 38 0.021680158 ubox
14 18 0.019419650 ubox
14 19 0.744881889 ubox
14 20 0.264659966 ubox
14 21 0.091663365 ubox
14 35 0.140495260 ubox
14 36 0.004001725 ubox
14 37 0.021724946 ubox
15 19 0.233287194 ubox
15 36 0.021585257 ubox
17 32 0.043395926 ubox
17 33 0.085379021 ubox
17 34 0.074694109 ubox
18 30 0.004901854 ubox
18 31 0.040552509 ubox
18 32 0.085515373 ubox
18 33 0.094153455 ubox
18 34 0.017502549 ubox
19 28 0.003239637 ubox
19 30 0.037630723 ubox
19 31 0.084173461 ubox
19 32 0.097483754 ubox
19 33 0.017610867 ubox
20 27 0.004074045 ubox
20 28 0.031668732 ubox
20 30 0.084104416 ubox
20 31 0.081280451 ubox
21 26 0.004073506 ubox
21 27 0.031786413 ubox
21 28 0.089201654 ubox
21 30 0.059923417 ubox
21 31 0.075125637 ubox
22 26 0.031574596 ubox
22 27 0.089443788 ubox
22 30 0.093657513 ubox
23 29 0.112667894 ubox
24 28 0.111882960 ubox
25 44 0.004088757 ubox
26 37 0.183726425 ubox
26 38 0.140889224 ubox
26 43 0.004247024 ubox
27 36 0.187814627 ubox
27 37 0.140498595 ubox
27 38 0.004119142 ubox
28 35 0.234659150 ubox
28 36 0.016679142 ubox
28 37 0.003884002 ubox
29 34 0.235212380 ubox
30 36 0.005594804 ubox
30 37 0.007525162 ubox
30 38 0.146734437 ubox
31 35 0.006216791 ubox
31 36 0.006040956 ubox
31 37 0.146852685 ubox
32 36 0.127765215 ubox
33 44 0.006917378 ubox
34 43 0.007381592 ubox
34 93 0.004088481 ubox
34 102 0.005200557 ubox
35 92 0.004084958 ubox
35 101 0.005209272 ubox
36 91 0.003902970 ubox
36 100 0.005190444 ubox
37 99 0.005186500 ubox
38 89 0.004195130 ubox
38 98 0.005171460 ubox
39 88 0.004216580 ubox
40 87 0.004200098 ubox
43 80 0.004383477 ubox
43 81 0.118507395 ubox
43 82 0.457411534 ubox
43 83 0.124246476 ubox
44 79 0.003661850 ubox
44 80 0.060347687 ubox
44 81 0.496294266 ubox
44 82 0.228490315 ubox
45 78 0.003642593 ubox
45 79 0.059805903 ubox
45 80 0.526582578 ubox
45 81 0.843084179 ubox
45 82 0.018886427 ubox
46 78 0.059007369 ubox
46 79 0.526735704 ubox
46 80 0.845173730 ubox
46 81 0.019703685 ubox
47 76 0.045479255 ubox
47 78 0.526164198 ubox
47 79 0.844897408 ubox
47 80 0.018649766 ubox
48 75 0.045659157 ubox
48 77 0.427015057 ubox
49 74 0.046223907 ubox
49 77 0.902530040 ubox
50 76 0.953606968 ubox
51 75 0.920067292 ubox
53 75 0.003961694 ubox
54 71 0.999694867 ubox
55 70 0.999956011 ubox
56 69 0.999924836 ubox
56 70 0.008014806 ubox
57 68 0.996121993 ubox
57 69 0.010313662 ubox
59 67 0.997297002 ubox
60 66 0.997479690 ubox
61 65 0.898615513 ubox
81 103 0.010973652 ubox
82 102 0.010083084 ubox
82 103 0.848181320 ubox
83 96 0.005659536 ubox
83 102 0.979951547 ubox
84 92 0.003179177 ubox
84 95 0.005719624 ubox
84 99 0.007760476 ubox
84 100 0.016350212 ubox
84 101 0.987541947 ubox
85 91 0.003171107 ubox
85 94 0.005718226 ubox
85 98 0.007791279 ubox
85 99 0.016395524 ubox
85 100 0.988143791 ubox
86 92 0.005577157 ubox
86 97 0.007797228 ubox
86 98 0.016395083 ubox
86 99 0.988146777 ubox
87 91 0.005546905 ubox
87 95 0.008095669 ubox
87 97 0.016337368 ubox
87 98 0.988137879 ubox
88 94 0.009022593 ubox
88 97 0.987237553 ubox
89 93 0.011628587 ubox
89 96 0.979571019 ubox
91 103 0.083624368 ubox
92 102 0.084342592 ubox
93 101 0.084333788 ubox
94 103 0.125695669 ubox
95 102 0.126621473 ubox
96 101 0.126584883 ubox
1 38 0.9500000 lbox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
5 34 0.9500000 lbox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
45 81 0.9500000 lbox
46 80 0.9500000 lbox
47 79 0.9500000 lbox
49 77 0.9500000 lbox
50 76 0.9500000 lbox
51 75 0.9500000 lbox
54 71 0.9500000 lbox
55 70 0.9500000 lbox
56 69 0.9500000 lbox
57 68 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
61 65 0.9500000 lbox
82 103 0.9500000 lbox
83 102 0.9500000 lbox
84 101 0.9500000 lbox
85 100 0.9500000 lbox
86 99 0.9500000 lbox
87 98 0.9500000 lbox
88 97 0.9500000 lbox
89 96 0.9500000 lbox
showpage
end
%%EOF
