%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPL4)
} def

/sequence { (\
AAGCACUUCCUUUUCCUGUGGCAGCAGCCGGGCUGAGAGGAGCGUGGCUGUCUCCUCUCUCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.023847669 ubox
1 12 0.158881306 ubox
1 13 0.024641776 ubox
1 14 0.030869744 ubox
2 7 0.026365347 ubox
2 8 0.020405602 ubox
2 11 0.201856199 ubox
2 12 0.029317248 ubox
2 13 0.038521435 ubox
2 14 0.013052033 ubox
2 17 0.055947140 ubox
2 34 0.090602660 ubox
2 49 0.063865730 ubox
2 53 0.004191848 ubox
2 56 0.005327653 ubox
2 58 0.006751176 ubox
2 60 0.008171738 ubox
3 7 0.016253429 ubox
3 10 0.204685071 ubox
3 11 0.025973696 ubox
3 12 0.038877647 ubox
3 13 0.012666660 ubox
3 16 0.057204299 ubox
3 19 0.143498961 ubox
3 22 0.153428708 ubox
3 25 0.085241340 ubox
3 28 0.159213560 ubox
3 33 0.093427257 ubox
3 43 0.007495969 ubox
3 45 0.006693611 ubox
3 48 0.065817774 ubox
3 52 0.004312379 ubox
3 55 0.005411729 ubox
3 57 0.006986421 ubox
3 59 0.008418442 ubox
3 64 0.222999943 ubox
4 18 0.157380727 ubox
4 20 0.201798048 ubox
4 21 0.112292530 ubox
4 24 0.083927609 ubox
4 27 0.159300700 ubox
4 32 0.092072054 ubox
4 42 0.007454240 ubox
4 44 0.007034484 ubox
4 46 0.050733230 ubox
4 47 0.047931048 ubox
4 63 0.223156943 ubox
5 17 0.143974023 ubox
5 19 0.261730777 ubox
5 34 0.004338604 ubox
5 45 0.068059081 ubox
6 18 0.269349991 ubox
6 21 0.018153023 ubox
6 24 0.175340646 ubox
6 27 0.007734201 ubox
6 31 0.069544231 ubox
6 32 0.005257820 ubox
6 42 0.007518013 ubox
6 44 0.069142815 ubox
7 20 0.018024555 ubox
7 23 0.174546840 ubox
7 24 0.040812607 ubox
7 26 0.007433045 ubox
7 30 0.061830163 ubox
7 31 0.005823288 ubox
7 41 0.005891054 ubox
7 42 0.068500234 ubox
8 21 0.007274362 ubox
8 23 0.048450920 ubox
8 26 0.004512720 ubox
8 30 0.005487671 ubox
8 31 0.006676492 ubox
8 32 0.022089354 ubox
8 40 0.003400939 ubox
8 41 0.070954760 ubox
9 20 0.008069939 ubox
9 21 0.203570080 ubox
9 30 0.013473713 ubox
9 31 0.056991988 ubox
9 32 0.042891676 ubox
9 39 0.003370879 ubox
9 40 0.071253751 ubox
10 20 0.203837100 ubox
10 21 0.032295738 ubox
10 24 0.010633650 ubox
10 27 0.025993654 ubox
10 30 0.059162863 ubox
10 31 0.045895853 ubox
10 32 0.009399670 ubox
10 37 0.004073257 ubox
10 39 0.071251824 ubox
11 20 0.032469651 ubox
11 23 0.010577189 ubox
11 26 0.025495650 ubox
11 30 0.043543247 ubox
11 31 0.009884243 ubox
11 32 0.004319030 ubox
11 36 0.004515248 ubox
11 38 0.070928373 ubox
12 20 0.003357764 ubox
12 21 0.004523802 ubox
12 23 0.003202365 ubox
12 24 0.014391093 ubox
12 26 0.004112252 ubox
12 30 0.013122681 ubox
12 31 0.009751154 ubox
12 35 0.004789125 ubox
12 36 0.003827960 ubox
12 37 0.070495305 ubox
12 38 0.006266492 ubox
13 20 0.005408988 ubox
13 23 0.015212050 ubox
13 24 0.018027345 ubox
13 26 0.003480285 ubox
13 27 0.012079252 ubox
13 30 0.031458400 ubox
13 31 0.005108119 ubox
13 32 0.006376505 ubox
13 35 0.004527100 ubox
13 36 0.069617833 ubox
13 37 0.008741624 ubox
14 21 0.006199683 ubox
14 23 0.019432940 ubox
14 26 0.015210194 ubox
14 30 0.014132383 ubox
14 31 0.013216330 ubox
14 32 0.049420728 ubox
14 35 0.064568276 ubox
14 36 0.010801336 ubox
15 20 0.008076514 ubox
15 21 0.032946929 ubox
15 30 0.044429132 ubox
15 31 0.104135381 ubox
15 32 0.128682462 ubox
15 35 0.012407357 ubox
16 20 0.032872912 ubox
16 24 0.036519781 ubox
16 27 0.279998072 ubox
16 30 0.109772806 ubox
16 31 0.134425328 ubox
16 32 0.039144588 ubox
17 23 0.036967683 ubox
17 26 0.286447372 ubox
17 30 0.113621513 ubox
17 31 0.038022147 ubox
17 63 0.007722485 ubox
18 22 0.036458776 ubox
18 25 0.287520225 ubox
18 28 0.022491476 ubox
18 29 0.038750903 ubox
18 33 0.018350647 ubox
18 62 0.009858917 ubox
18 64 0.153892966 ubox
19 24 0.282878756 ubox
19 26 0.028732537 ubox
19 27 0.018878875 ubox
19 30 0.597222389 ubox
19 32 0.016412190 ubox
19 63 0.154057571 ubox
20 25 0.032265353 ubox
20 29 0.847696189 ubox
20 52 0.004667662 ubox
20 53 0.009497873 ubox
20 54 0.008946753 ubox
20 55 0.252246184 ubox
20 56 0.028742810 ubox
20 57 0.012604964 ubox
20 58 0.008133299 ubox
20 59 0.005016181 ubox
20 60 0.004068264 ubox
20 62 0.151349479 ubox
20 65 0.057895532 ubox
21 28 0.854736224 ubox
21 33 0.003443255 ubox
21 51 0.003645993 ubox
21 52 0.014030737 ubox
21 53 0.008747240 ubox
21 54 0.255144971 ubox
21 55 0.043070038 ubox
21 56 0.008324931 ubox
21 57 0.011870950 ubox
21 58 0.003863744 ubox
21 59 0.004898455 ubox
21 61 0.150777499 ubox
21 64 0.062404966 ubox
22 27 0.853539578 ubox
22 32 0.003451259 ubox
22 35 0.023584698 ubox
22 50 0.003406743 ubox
22 63 0.062164721 ubox
23 34 0.044949160 ubox
23 53 0.186446928 ubox
23 56 0.019530038 ubox
23 58 0.031914621 ubox
23 60 0.090549789 ubox
24 33 0.046674286 ubox
24 51 0.253733870 ubox
24 52 0.187303440 ubox
24 55 0.017263239 ubox
24 57 0.027881189 ubox
24 59 0.077319285 ubox
24 64 0.019336896 ubox
25 32 0.046635568 ubox
25 35 0.016116273 ubox
25 50 0.329587075 ubox
25 63 0.018327834 ubox
26 34 0.021973668 ubox
26 49 0.329604955 ubox
27 33 0.022524584 ubox
27 48 0.329696672 ubox
27 64 0.161440400 ubox
28 32 0.022368959 ubox
28 47 0.329700480 ubox
28 63 0.118562209 ubox
29 46 0.329691000 ubox
29 63 0.296417800 ubox
30 45 0.328220966 ubox
30 61 0.015160184 ubox
30 62 0.385480053 ubox
30 65 0.114176497 ubox
31 60 0.014959531 ubox
31 61 0.385145262 ubox
31 62 0.365610612 ubox
31 64 0.111762988 ubox
31 65 0.729109371 ubox
32 43 0.329687406 ubox
32 59 0.011435990 ubox
32 60 0.320907018 ubox
32 61 0.366493828 ubox
32 64 0.743675467 ubox
33 42 0.329696186 ubox
33 63 0.743598119 ubox
34 41 0.327648021 ubox
34 63 0.006792513 ubox
35 59 0.936193510 ubox
35 61 0.078745074 ubox
35 62 0.011635666 ubox
36 58 0.938328441 ubox
36 60 0.071260809 ubox
37 57 0.939507877 ubox
37 59 0.058862094 ubox
38 56 0.939915406 ubox
38 58 0.048118736 ubox
39 55 0.940983056 ubox
39 57 0.026333654 ubox
40 54 0.941264985 ubox
40 55 0.008066261 ubox
40 56 0.009461755 ubox
40 57 0.003631047 ubox
41 49 0.022629184 ubox
41 53 0.940630011 ubox
41 56 0.004852379 ubox
42 48 0.035730728 ubox
42 51 0.132066194 ubox
42 52 0.930673989 ubox
42 55 0.004981410 ubox
42 64 0.004757534 ubox
43 47 0.038230522 ubox
43 50 0.921573654 ubox
43 63 0.004789154 ubox
44 49 0.652139026 ubox
44 51 0.047030687 ubox
44 62 0.004768420 ubox
44 64 0.009271681 ubox
45 50 0.029580501 ubox
45 63 0.009287292 ubox
46 52 0.006618743 ubox
46 53 0.003163933 ubox
46 55 0.004551619 ubox
46 62 0.009350586 ubox
46 65 0.009327078 ubox
47 51 0.007653242 ubox
47 52 0.003608675 ubox
47 54 0.004612738 ubox
47 61 0.009261261 ubox
47 64 0.013037135 ubox
48 63 0.013014597 ubox
50 62 0.004643344 ubox
50 64 0.005312401 ubox
51 63 0.005169432 ubox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
31 65 0.9500000 lbox
32 64 0.9500000 lbox
33 63 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
37 57 0.9500000 lbox
38 56 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
43 50 0.9500000 lbox
44 49 0.9500000 lbox
showpage
end
%%EOF
