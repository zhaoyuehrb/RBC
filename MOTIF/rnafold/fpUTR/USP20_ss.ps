%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:50:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGACGGCCCCACAACCCUGCGCGUCGCCUCAGAGGGGGCGCGCUUGACUGACAGGCGGCGGCGGCGCAGUUGCGAGUGCAGGCUCCUUGCCAGAGGCCUCCACUCACUCCAGACCCCUAUAGCCCGUCGCUGUCAGCUGUCAACAAAGGAUGCGAAUGCUGGCCGCUUCCUGUGGGCUUCGUGUCACCCAGAGGUGAGCCCAGGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[98.46135712 271.36151123]
[83.11764526 270.67892456]
[70.17951965 262.40240479]
[63.12728882 248.75831604]
[63.85795975 233.41680908]
[72.17498779 220.50469971]
[85.84112549 213.49526978]
[86.50775909 198.51008606]
[87.17438507 183.52490234]
[87.84101105 168.53971863]
[81.30001068 164.87022400]
[73.96099091 177.95222473]
[66.62197876 191.03422546]
[59.28296661 204.11624146]
[51.94373703 217.19812012]
[38.86197281 209.85867310]
[46.20096207 196.77722168]
[53.53997421 183.69522095]
[60.87899017 170.61320496]
[68.21800232 157.53120422]
[61.67699814 153.86169434]
[49.23591232 162.24139404]
[36.79483032 170.62109375]
[24.35374260 179.00080872]
[11.91265774 187.38050842]
[-0.52842718 195.76020813]
[-12.96951199 204.13990784]
[-20.09303665 218.26669312]
[-34.97152710 218.95938110]
[-47.41260910 227.33908081]
[-59.85369492 235.71878052]
[-69.61299133 249.58212280]
[-85.63619995 244.04197693]
[-84.74822998 227.11131287]
[-68.23339844 223.27769470]
[-55.79231262 214.89799500]
[-43.35122681 206.51829529]
[-37.11757278 192.99087524]
[-21.34921455 191.69882202]
[-8.90812874 183.31912231]
[3.53295660 174.93942261]
[15.97404194 166.55972290]
[28.41512680 158.18000793]
[40.85621262 149.80030823]
[53.29729843 141.42060852]
[44.77939606 124.02071381]
[42.24877548 105.50775146]
[45.53913879 87.81343079]
[53.89775848 72.65463257]
[66.10188293 61.36684418]
[80.61856079 54.78817749]
[76.87960052 40.26164246]
[73.14064026 25.73511124]
[69.40167999 11.20857716]
[65.66271973 -3.31795692]
[61.92375946 -17.84449005]
[57.86285019 -32.28433228]
[53.48199844 -46.63034821]
[49.10114670 -60.97636032]
[44.72029495 -75.32237244]
[40.33944321 -89.66838837]
[35.95859146 -104.01440430]
[31.57774162 -118.36042023]
[27.19688988 -132.70643616]
[22.81603813 -147.05244446]
[18.43518639 -161.39846802]
[12.93629837 -168.69131470]
[14.09740829 -175.98960876]
[9.92962170 -190.39897156]
[4.39535475 -204.34069824]
[-2.45408392 -217.68554688]
[-9.30352211 -231.03041077]
[-13.68931198 -233.85812378]
[-16.29210281 -237.70092773]
[-17.02378464 -241.70988464]
[-16.14587784 -245.12405396]
[-22.39547729 -258.76013184]
[-28.64507866 -272.39617920]
[-34.89468002 -286.03225708]
[-41.14427948 -299.66833496]
[-53.92774582 -308.99002075]
[-52.19667816 -323.78369141]
[-58.44627762 -337.41976929]
[-64.69587708 -351.05581665]
[-70.94548035 -364.69189453]
[-77.19508362 -378.32797241]
[-89.97854614 -387.64965820]
[-88.24747467 -402.44332886]
[-94.49707794 -416.07940674]
[-108.17421722 -425.12747192]
[-106.90696716 -441.47760010]
[-91.99897003 -448.31011963]
[-78.78629303 -438.59637451]
[-80.86100769 -422.32897949]
[-74.61140442 -408.69293213]
[-62.27495193 -400.34658813]
[-63.55900574 -384.57757568]
[-57.30940628 -370.94149780]
[-51.05980682 -357.30541992]
[-44.81020355 -343.66934204]
[-38.56060410 -330.03329468]
[-26.22415352 -321.68695068]
[-27.50820732 -305.91793823]
[-21.25860596 -292.28186035]
[-15.00900555 -278.64578247]
[-8.75940514 -265.00973511]
[-2.50980401 -251.37364197]
[4.04133415 -237.87985229]
[10.89077282 -224.53498840]
[17.74021149 -211.19013977]
[18.88090515 -226.14669800]
[25.93493080 -239.38455200]
[37.71340179 -248.67259216]
[52.23117828 -252.44540405]
[67.04144287 -250.06713867]
[79.64806366 -241.93859863]
[87.92633820 -229.42979431]
[90.48104095 -214.64895630]
[86.88160706 -200.08721924]
[77.73468018 -188.19883728]
[64.58187866 -180.98745728]
[49.63998413 -179.66850281]
[35.42728806 -184.46426392]
[24.33897781 -194.56675720]
[28.50676537 -180.15739441]
[32.78120041 -165.77931213]
[37.16205215 -151.43330383]
[41.54290390 -137.08728027]
[45.92375565 -122.74127197]
[50.30460739 -108.39525604]
[54.68545914 -94.04924011]
[59.06631088 -79.70322418]
[63.44716263 -65.35721588]
[67.82801056 -51.01119995]
[72.20886230 -36.66518402]
[75.13224792 -34.69513702]
[77.24697113 -31.21160698]
[77.85224915 -26.60994339]
[76.45029449 -21.58345032]
[80.18925476 -7.05691624]
[83.92821503 7.46961737]
[87.66717529 21.99615097]
[91.40612793 36.52268600]
[95.14508820 51.04921722]
[110.55802917 51.95546722]
[124.93084717 57.59478760]
[136.84762573 67.41162872]
[145.13438416 80.43889618]
[148.97476196 95.39320374]
[163.94841003 96.28181458]
[178.92207336 97.17042542]
[193.89572144 98.05903625]
[208.13002014 91.15285492]
[220.37657166 99.63053894]
[235.35023499 100.51914215]
[250.32388306 101.40775299]
[259.33547974 88.88598633]
[273.69467163 83.24530792]
[288.81948853 86.28562927]
[299.88366699 97.03680420]
[303.35662842 112.06816864]
[298.13021851 126.58326721]
[285.87213135 135.95039368]
[270.49389648 137.18051147]
[256.90264893 129.88111877]
[249.43528748 116.38140869]
[234.46162415 115.49279785]
[219.48796082 114.60419464]
[206.32469177 121.57392883]
[193.00711060 113.03269196]
[178.03346252 112.14408112]
[163.05979919 111.25547028]
[148.08615112 110.36685944]
[144.39477539 133.81718445]
[128.89234924 155.33572388]
[138.17002869 167.12234497]
[147.44770813 178.90898132]
[156.72538757 190.69561768]
[166.00305176 202.48223877]
[168.84303284 187.75354004]
[181.18850708 179.23362732]
[195.96672058 181.80360413]
[204.71110535 193.99111938]
[202.41198730 208.81387329]
[190.38652039 217.77981567]
[175.52500916 215.75280762]
[183.71943665 228.31669617]
[191.91386414 240.88058472]
[200.10829163 253.44447327]
[208.30271912 266.00836182]
[223.16587830 272.93789673]
[224.32655334 289.29592896]
[210.59074402 298.25469971]
[196.08866882 290.59820557]
[195.73883057 274.20278931]
[187.54440308 261.63891602]
[179.34997559 249.07501221]
[171.15554810 236.51112366]
[162.96112061 223.94723511]
[154.21643066 211.75991821]
[144.93875122 199.97329712]
[135.66107178 188.18666077]
[126.38339233 176.40002441]
[117.10571289 164.61340332]
[102.82618713 169.20635986]
[102.15956116 184.19152832]
[101.49293518 199.17671204]
[100.82630920 214.16189575]
[113.81605530 222.35713196]
[120.95368958 235.95675659]
[120.31920624 251.30253601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[21 45]
[22 44]
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[29 37]
[30 36]
[31 35]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[57 135]
[58 134]
[59 133]
[60 132]
[61 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[68 125]
[69 124]
[70 110]
[71 109]
[72 108]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[88 95]
[89 94]
[149 173]
[150 172]
[151 171]
[152 170]
[154 168]
[155 167]
[156 166]
[175 204]
[176 203]
[177 202]
[178 201]
[179 200]
[186 199]
[187 198]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
