%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT32)
} def

/sequence { (\
GGCGGCAUGGGGUCUGUAGACAUCCAGGUAGCUGUGGCUGAGGAGAAAGGGCCUCUCCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.003997067 ubox
1 33 0.849751673 ubox
1 39 0.278652996 ubox
1 56 0.003164276 ubox
1 58 0.019067650 ubox
2 13 0.004042327 ubox
2 17 0.004747432 ubox
2 29 0.003166971 ubox
2 32 0.899935924 ubox
2 35 0.266838583 ubox
2 38 0.295250602 ubox
2 55 0.003761121 ubox
2 57 0.018443884 ubox
3 12 0.004058385 ubox
3 16 0.004850896 ubox
3 28 0.003274158 ubox
3 31 0.899852401 ubox
3 34 0.299349287 ubox
3 37 0.295205075 ubox
3 40 0.042301560 ubox
4 15 0.004340468 ubox
4 33 0.301048606 ubox
4 39 0.042732506 ubox
4 53 0.008597047 ubox
4 55 0.006805560 ubox
4 56 0.007344969 ubox
4 57 0.004833568 ubox
4 58 0.084324506 ubox
5 14 0.004317542 ubox
5 29 0.803617451 ubox
5 32 0.301198175 ubox
5 35 0.293505596 ubox
5 38 0.042788682 ubox
5 52 0.008607149 ubox
5 54 0.003412275 ubox
5 55 0.006454327 ubox
5 56 0.005164761 ubox
5 57 0.084287728 ubox
6 12 0.004386978 ubox
6 28 0.841649762 ubox
6 31 0.298986356 ubox
6 34 0.293936390 ubox
6 36 0.025528652 ubox
6 37 0.035294668 ubox
6 51 0.008602573 ubox
7 29 0.156915962 ubox
7 33 0.290554539 ubox
7 35 0.035139308 ubox
8 26 0.952412480 ubox
8 28 0.108930451 ubox
8 30 0.021550215 ubox
8 34 0.035304942 ubox
8 36 0.010631376 ubox
8 59 0.005544820 ubox
9 24 0.014327578 ubox
9 25 0.991210697 ubox
9 29 0.013258351 ubox
9 33 0.036258948 ubox
9 35 0.015199473 ubox
9 54 0.004672871 ubox
9 55 0.089591522 ubox
9 56 0.006307325 ubox
9 58 0.006100447 ubox
10 23 0.012504891 ubox
10 24 0.991169986 ubox
10 25 0.069720625 ubox
10 32 0.037623024 ubox
10 33 0.012612523 ubox
10 53 0.004997677 ubox
10 54 0.090219257 ubox
10 55 0.006441258 ubox
10 57 0.005956289 ubox
11 23 0.893508460 ubox
11 24 0.070137070 ubox
11 25 0.023022971 ubox
11 32 0.013374846 ubox
11 33 0.017756117 ubox
11 52 0.004939075 ubox
11 53 0.090725039 ubox
12 21 0.988572572 ubox
12 23 0.056209527 ubox
12 24 0.022725467 ubox
12 29 0.027708391 ubox
12 32 0.018184406 ubox
12 52 0.090735191 ubox
13 20 0.990837380 ubox
13 22 0.054295990 ubox
13 28 0.047538255 ubox
13 31 0.016294829 ubox
13 44 0.007605698 ubox
13 50 0.005602327 ubox
13 51 0.090587183 ubox
14 19 0.987308461 ubox
14 27 0.055174593 ubox
14 28 0.005040484 ubox
14 31 0.003329267 ubox
14 43 0.007648991 ubox
14 49 0.006325753 ubox
14 50 0.090548683 ubox
14 51 0.003872944 ubox
15 22 0.026616893 ubox
15 26 0.055257829 ubox
15 27 0.004248851 ubox
15 30 0.003333708 ubox
15 42 0.007546856 ubox
15 48 0.006880837 ubox
15 49 0.089830066 ubox
15 50 0.003875237 ubox
16 21 0.028022866 ubox
16 25 0.055230314 ubox
17 22 0.003200142 ubox
17 40 0.006743138 ubox
18 39 0.008059872 ubox
19 38 0.007883787 ubox
21 36 0.007150508 ubox
21 40 0.008287391 ubox
22 35 0.006766946 ubox
22 39 0.008251624 ubox
23 37 0.005699273 ubox
23 41 0.017317195 ubox
23 43 0.016343116 ubox
23 44 0.085245383 ubox
24 36 0.006884590 ubox
24 37 0.007446197 ubox
24 40 0.012737944 ubox
24 42 0.018028792 ubox
24 43 0.085595295 ubox
25 34 0.012473918 ubox
25 36 0.007479972 ubox
25 40 0.027717401 ubox
25 42 0.085064291 ubox
26 33 0.023261956 ubox
26 35 0.007323874 ubox
26 39 0.033257659 ubox
27 32 0.038909667 ubox
27 33 0.007080179 ubox
27 38 0.033775523 ubox
27 39 0.022841667 ubox
28 32 0.009292746 ubox
28 38 0.022975641 ubox
29 36 0.033623416 ubox
29 37 0.022252193 ubox
29 40 0.080528346 ubox
30 35 0.032934383 ubox
30 39 0.085518722 ubox
31 38 0.085993193 ubox
32 37 0.085718016 ubox
33 59 0.014598535 ubox
34 39 0.004020028 ubox
34 58 0.022416014 ubox
34 61 0.237375900 ubox
35 59 0.780344095 ubox
35 60 0.173839638 ubox
36 53 0.067802350 ubox
36 56 0.003238130 ubox
36 57 0.026017375 ubox
36 58 0.906933822 ubox
37 52 0.067923786 ubox
37 56 0.021933923 ubox
37 57 0.906621758 ubox
38 45 0.003832845 ubox
38 51 0.067848061 ubox
39 44 0.003866980 ubox
39 48 0.003625787 ubox
39 49 0.004040127 ubox
39 50 0.067056682 ubox
39 59 0.032365906 ubox
40 55 0.915456443 ubox
40 57 0.014658873 ubox
40 58 0.035868561 ubox
41 54 0.915854369 ubox
41 56 0.014659144 ubox
42 53 0.916025223 ubox
42 55 0.011659498 ubox
42 56 0.049677040 ubox
42 57 0.008377203 ubox
42 58 0.380307742 ubox
43 52 0.915445406 ubox
43 54 0.006560271 ubox
43 55 0.052119116 ubox
43 57 0.380744036 ubox
44 54 0.052871653 ubox
44 56 0.380691393 ubox
45 53 0.052990468 ubox
45 55 0.380681510 ubox
46 54 0.370150683 ubox
48 54 0.022273323 ubox
49 53 0.036199751 ubox
49 58 0.007662425 ubox
50 57 0.007663125 ubox
51 56 0.005367095 ubox
1 33 0.9500000 lbox
2 32 0.9500000 lbox
3 31 0.9500000 lbox
5 29 0.9500000 lbox
6 28 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
37 57 0.9500000 lbox
40 55 0.9500000 lbox
41 54 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
showpage
end
%%EOF
