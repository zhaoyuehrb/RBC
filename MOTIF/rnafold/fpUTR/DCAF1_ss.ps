%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUGUGGAGCCGUGGUCGCGCUGUGUGUGUGUGUGAGUGGAGAGUGAGUGCGGGACCUGAGGCUGUGUGUGUGUGAACUGUGGCCACUGGCGGGGUCGGGGGGGGGCAGCGGCGGAGCCGCCUCGGACGAUAAGGAAAUUGAGAUUUGGAGAAGUUAAAUAACCAAGACUUCACAGGCAAAGCC\
) } def
/len { sequence length } bind def

/coor [
[75.10298920 270.05761719]
[82.52424622 256.67169189]
[95.32257080 248.27754211]
[93.80504608 233.35449219]
[92.28752136 218.43145752]
[90.76999664 203.50842285]
[89.25247192 188.58537292]
[87.73494720 173.66233826]
[86.21742249 158.73930359]
[84.69989777 143.81625366]
[71.52368927 136.64775085]
[58.17011261 143.48016357]
[44.81653214 150.31259155]
[31.46295738 157.14501953]
[18.10938072 163.97743225]
[9.34823608 177.15138245]
[-5.50637054 176.06054688]
[-18.85994720 182.89297485]
[-32.21352386 189.72538757]
[-45.56710052 196.55781555]
[-54.32824326 209.73176575]
[-69.18285370 208.64093018]
[-82.53643036 215.47334290]
[-80.12664795 230.40814209]
[-82.45191193 245.35633850]
[-89.28443146 258.85342407]
[-99.95481110 269.57714844]
[-113.41768646 276.47689819]
[-128.35409546 278.87664795]
[-143.30072021 276.54138184]
[-156.79324341 269.69982910]
[-167.50981140 259.02224731]
[-174.40051270 245.55476379]
[-176.79028320 230.61674500]
[-174.44497681 215.67169189]
[-167.59439087 202.18376160]
[-156.90963745 191.47434998]
[-143.43753052 184.59266663]
[-128.49792480 182.21290588]
[-113.55444336 184.56822205]
[-100.07109833 191.42785645]
[-89.36885071 202.11976624]
[-76.01527405 195.28735352]
[-68.20926666 182.60209656]
[-52.39952087 183.20423889]
[-39.04594421 176.37181091]
[-25.69236946 169.53939819]
[-12.33879185 162.70697021]
[-4.53278542 150.02172852]
[11.27695847 150.62385559]
[24.63053513 143.79144287]
[37.98411179 136.95901489]
[51.33768845 130.12658691]
[64.69126892 123.29417419]
[59.51981354 103.66333771]
[64.12793732 84.72003174]
[76.66351318 70.85578918]
[69.83109283 57.50221252]
[62.99867249 44.14863586]
[56.16625214 30.79506111]
[49.33382797 17.44148445]
[34.56399918 12.49276066]
[27.82517815 -1.14699578]
[32.63405228 -15.19727421]
[25.80163002 -28.55085182]
[18.96920776 -41.90442657]
[12.13678551 -55.25800323]
[-2.63304472 -60.20672989]
[-9.37186527 -73.84648132]
[-4.56299210 -87.89676666]
[-11.39541340 -101.25034332]
[-18.22783470 -114.60391998]
[-24.93748665 -120.83511353]
[-25.06073380 -128.24122620]
[-31.66664505 -141.70829773]
[-46.97652054 -144.23561096]
[-57.85296249 -155.30279541]
[-60.11375809 -170.65429688]
[-52.88958359 -184.38714600]
[-38.95828247 -191.22076416]
[-23.67672539 -188.52751160]
[-12.92098141 -177.34298706]
[-10.82685375 -161.96786499]
[-18.19957733 -148.31420898]
[-11.59366512 -134.84713745]
[-4.87425900 -121.43634033]
[1.95816290 -108.08276367]
[8.79058456 -94.72918701]
[22.99875832 -90.40907288]
[30.11803246 -76.96397400]
[25.49036217 -62.09042740]
[32.32278442 -48.73685074]
[39.15520477 -35.38327408]
[45.98762894 -22.02969551]
[60.19580078 -17.70958138]
[67.31507874 -4.26448584]
[62.68740463 10.60906219]
[69.51982880 23.96263885]
[76.35224915 37.31621552]
[83.18466949 50.66979218]
[90.01708984 64.02336884]
[102.03858948 59.72707748]
[115.73632812 59.64678574]
[129.58226013 64.38097382]
[139.54368591 53.16624069]
[149.50511169 41.95151520]
[159.46652222 30.73678589]
[169.42794800 19.52205658]
[172.80778503 4.06607866]
[187.04467773 -0.31114846]
[197.00608826 -11.52587700]
[195.82228088 -27.28576660]
[206.19230652 -39.21212387]
[221.96383667 -40.22925568]
[233.77987671 -29.73371315]
[234.63020325 -13.95231533]
[224.01033020 -2.24788737]
[208.22082520 -1.56445765]
[198.25939941 9.65027046]
[195.59207153 24.30409622]
[180.64266968 29.48347664]
[170.68125916 40.69820404]
[160.71983337 51.91293335]
[150.75840759 63.12766266]
[140.79699707 74.34239197]
[142.61550903 81.61858368]
[156.73410034 76.55249023]
[170.85269165 71.48640442]
[184.73910522 65.81473541]
[195.66648865 76.09053802]
[190.85820007 90.29899597]
[175.93638611 91.82717896]
[161.09445190 93.99907684]
[146.25253296 96.17097473]
[148.07104492 103.44716644]
[162.13731384 108.65674591]
[176.36117554 102.30695343]
[190.55216980 107.79058075]
[196.51806641 121.38998413]
[210.58435059 126.59955597]
[224.65063477 131.80914307]
[236.68960571 127.14063263]
[248.30676270 131.78556824]
[253.46557617 142.74206543]
[267.44186401 148.18847656]
[281.41815186 153.63488770]
[295.39443970 159.08128357]
[309.37072754 164.52769470]
[325.49002075 161.51091003]
[335.95535278 174.13662720]
[330.00094604 189.41656494]
[313.75213623 191.63206482]
[303.92431641 178.50398254]
[289.94802856 173.05757141]
[275.97174072 167.61117554]
[261.99545288 162.16476440]
[248.01918030 156.71835327]
[230.85217285 160.31481934]
[219.44105530 145.87542725]
[205.37477112 140.66584778]
[191.30848694 135.45626831]
[177.92353821 141.88888550]
[163.58412170 136.80601501]
[156.92774963 122.72303009]
[142.86146545 117.51345062]
[136.86613464 126.66931152]
[129.00761414 134.01091003]
[119.79627228 139.18406677]
[109.80278015 141.97105408]
[99.62293243 142.29873657]
[101.14045715 157.22177124]
[102.65798187 172.14482117]
[104.17550659 187.06785583]
[105.69303131 201.99089050]
[107.21055603 216.91394043]
[108.72808075 231.83697510]
[110.24560547 246.76000977]
[124.47167206 252.40603638]
[134.43559265 264.02407837]
[137.84771729 278.94439697]
[133.92398071 293.73843384]
[123.56602478 305.00656128]
[109.15402985 310.15951538]
[93.99976349 308.01318359]
[81.58557129 299.06072998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[11 54]
[12 53]
[13 52]
[14 51]
[15 50]
[17 48]
[18 47]
[19 46]
[20 45]
[22 43]
[23 42]
[57 101]
[58 100]
[59 99]
[60 98]
[61 97]
[64 94]
[65 93]
[66 92]
[67 91]
[70 88]
[71 87]
[72 86]
[74 85]
[75 84]
[104 125]
[105 124]
[106 123]
[107 122]
[108 121]
[110 119]
[111 118]
[135 165]
[136 164]
[139 161]
[140 160]
[141 159]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
