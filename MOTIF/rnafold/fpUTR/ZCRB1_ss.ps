%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGCCUCUGGGCCCGCCUUCGGGGCCCGGAUCUCAAACAGUCGGGAAGAAGCACCGUGGCUGCUAUUAUCUGCUCUCCGCGCCUGACCCCUCCCAGGACUCGUGAUGCCAAGGCCGCUGCGAGCGGCUACGAAGAGUCGGGGUUGAGCCCCAGCUGAGCCGAGGGCUCGCACUCUUCUGGUCUCCCAGGCCCAACCCACCUGAAGAA\
) } def
/len { sequence length } bind def

/coor [
[181.99253845 109.92869568]
[167.79762268 105.08055115]
[153.60272217 100.23240662]
[139.40780640 95.38426208]
[125.21289825 90.53611755]
[111.01799011 85.68797302]
[125.63873291 105.11498260]
[108.87312317 133.05593872]
[100.42332458 145.44952393]
[91.97351837 157.84309387]
[83.52371979 170.23667908]
[75.07392120 182.63026428]
[66.62411499 195.02384949]
[58.17431641 207.41741943]
[49.72451782 219.81100464]
[41.27471542 232.20458984]
[45.68389130 247.20768738]
[39.37037659 261.51409912]
[25.31521797 268.36877441]
[10.15483379 264.53515625]
[1.04749274 251.82333374]
[2.29340291 236.23545837]
[13.30428410 225.13165283]
[28.88113403 223.75479126]
[37.33093643 211.36120605]
[45.78073502 198.96762085]
[54.23053741 186.57403564]
[62.68033600 174.18046570]
[71.13013458 161.78688049]
[79.57994080 149.39329529]
[88.02973938 136.99971008]
[96.47953796 124.60613251]
[87.21517944 112.80903625]
[73.17165375 118.07965851]
[59.12812805 123.35028076]
[45.08460617 128.62089539]
[41.08646011 143.61404419]
[29.01795197 153.36755371]
[13.51966858 154.13098145]
[0.55101597 145.61077881]
[-4.90129375 131.08316040]
[-0.74073613 116.13426208]
[11.43286896 106.51226044]
[26.93852234 105.91699982]
[39.81398392 114.57737732]
[53.85750580 109.30675507]
[67.90103149 104.03613281]
[81.94455719 98.76551056]
[84.31546783 91.65012360]
[74.36215210 80.42820740]
[89.05730438 77.41934967]
[91.42821503 70.30395508]
[83.35295868 57.66314316]
[75.27770233 45.02232742]
[58.74127579 36.92201996]
[58.63761139 19.37366676]
[50.37415695 6.85506821]
[36.31434250 -0.39973107]
[35.76026917 -15.28402710]
[27.49681473 -27.80262566]
[19.23336029 -40.32122421]
[10.96990490 -52.83982468]
[-10.46524143 -50.65353394]
[-29.14912224 -70.21081543]
[-42.25024414 -77.51564789]
[-56.27265930 -70.87098694]
[-71.51641083 -73.77059174]
[-82.11996460 -85.09951019]
[-84.00603485 -100.50153351]
[-76.44938660 -114.05427551]
[-62.35571671 -120.54642487]
[-47.14432144 -117.48162079]
[-36.66429138 -106.03834534]
[-34.94541168 -90.61676788]
[-21.84428978 -83.31193542]
[-16.15950203 -88.20409393]
[-25.94363785 -99.57382202]
[-14.57375908 -109.35778046]
[-4.78992605 -97.98840332]
[0.89486200 -102.88056183]
[-4.37576056 -116.92407990]
[-9.64638233 -130.96760559]
[-14.91700554 -145.01112366]
[-20.50140953 -158.93284607]
[-26.39678574 -172.72576904]
[-32.29216003 -186.51869202]
[-38.18753815 -200.31159973]
[-53.34496307 -203.63305664]
[-63.63009262 -215.25183105]
[-65.08808136 -230.70025635]
[-57.15830231 -244.03810120]
[-42.88992310 -250.13670349]
[-27.76941872 -246.65101624]
[-17.61093712 -234.92135620]
[-16.32061958 -219.45802307]
[-24.39461899 -206.20697021]
[-18.49924469 -192.41406250]
[-12.60386848 -178.62113953]
[-6.70849323 -164.82823181]
[-3.58895540 -163.18324280]
[-1.11146951 -159.94515991]
[-0.01630172 -155.43232727]
[-0.87348205 -150.28175354]
[4.39714050 -136.23822021]
[9.66776276 -122.19470215]
[14.93838501 -108.15118408]
[30.27038383 -92.93492889]
[32.27163315 -74.32012939]
[23.48850441 -61.10327911]
[31.75195885 -48.58467865]
[40.01541519 -36.06608200]
[48.27886963 -23.54748154]
[61.74762726 -17.18809700]
[62.89275742 -1.40838647]
[71.15621185 11.11021233]
[82.94046783 13.84326935]
[89.92723846 24.20576286]
[87.91851807 36.94707108]
[95.99377441 49.58788300]
[104.06903076 62.22869873]
[115.86613464 71.49306488]
[130.06103516 76.34120941]
[144.25595093 81.18935394]
[158.45086670 86.03749847]
[172.64578247 90.88564301]
[186.84068298 95.73378754]
[226.98551941 78.39693451]
[241.95866394 77.49987030]
[256.93182373 76.60280609]
[271.90496826 75.70574951]
[286.87811279 74.80868530]
[295.25802612 71.17141724]
[302.08166504 74.01190186]
[317.06655884 73.33892822]
[332.05145264 72.66595459]
[347.03634644 71.99298096]
[362.02124023 71.32001495]
[377.00613403 70.64704132]
[391.99102783 69.97406769]
[387.99041748 49.42368317]
[403.65505981 27.01115990]
[417.92089844 22.37590408]
[432.18676758 17.74065018]
[446.45260620 13.10539436]
[460.71844482 8.47013950]
[473.91394043 -2.17483187]
[487.79577637 7.55815029]
[482.28604126 23.59183693]
[465.35369873 22.73598671]
[451.08786011 27.37124252]
[436.82202148 32.00649643]
[422.55615234 36.64175415]
[408.29031372 41.27700806]
[408.79483032 48.76001740]
[410.30838013 71.20905304]
[425.06732178 73.88740540]
[434.07064819 72.34054565]
[440.02630615 76.71779633]
[454.74353027 79.61663818]
[469.46075439 82.51548004]
[484.17797852 85.41431427]
[498.89520264 88.31315613]
[515.60424805 85.44180298]
[522.98889160 100.70297241]
[510.36843872 112.02374268]
[495.99636841 103.03038025]
[481.27914429 100.13153839]
[466.56192017 97.23270416]
[451.84469604 94.33386230]
[437.12747192 91.43502808]
[422.38897705 88.64634705]
[407.63003540 85.96799469]
[392.66400146 84.95896149]
[377.67910767 85.63193512]
[362.69421387 86.30490875]
[347.70932007 86.97788239]
[332.72442627 87.65084839]
[317.73953247 88.32382202]
[302.75463867 88.99679565]
[287.77517700 89.78183746]
[272.80203247 90.67890167]
[257.82888794 91.57595825]
[242.85572815 92.47302246]
[227.88258362 93.37008667]
[223.98779297 99.77949524]
[231.19468689 112.93474579]
[216.19819641 112.59832001]
[212.30340576 119.00773621]
[218.40444946 132.71092224]
[224.50549316 146.41409302]
[230.60655212 160.11727905]
[245.87055969 162.35639954]
[257.48587036 172.50964355]
[261.74606323 187.33711243]
[257.29177856 202.10745239]
[245.54429626 212.10746765]
[230.25224304 214.14622498]
[216.29524231 207.57313538]
[208.12690735 194.48565674]
[208.35374451 179.05996704]
[216.90336609 166.21833801]
[210.80232239 152.51515198]
[204.70126343 138.81196594]
[198.60021973 125.10878754]
[197.00802612 140.02404785]
[185.82518005 150.02124023]
[170.82540894 149.93879700]
[159.75311279 139.81927490]
[158.32496643 124.88742065]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 126]
[2 125]
[3 124]
[4 123]
[5 122]
[6 121]
[8 32]
[9 31]
[10 30]
[11 29]
[12 28]
[13 27]
[14 26]
[15 25]
[16 24]
[33 48]
[34 47]
[35 46]
[36 45]
[52 120]
[53 119]
[54 118]
[56 115]
[57 114]
[59 112]
[60 111]
[61 110]
[62 109]
[64 75]
[65 74]
[80 106]
[81 105]
[82 104]
[83 103]
[84 99]
[85 98]
[86 97]
[87 96]
[127 184]
[128 183]
[129 182]
[130 181]
[131 180]
[133 179]
[134 178]
[135 177]
[136 176]
[137 175]
[138 174]
[139 173]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
[155 172]
[156 171]
[158 170]
[159 169]
[160 168]
[161 167]
[162 166]
[188 204]
[189 203]
[190 202]
[191 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
