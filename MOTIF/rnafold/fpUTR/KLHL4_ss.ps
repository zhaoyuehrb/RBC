%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAGAAGGCUACAAGUAUUCACAGUGUAUCAUAGGCAGUGGGGGAGGGGAGAGAAAGCAAGAAAGACUGCUCUCGGCACUUGUGCUUUUGUUAGUUCUACAGAAGAGGCAGAAAAACAAGAGAUAACAAAGGCUCCGUUUCCUUUCUGUGAGAGAAGGCUUUUGUCUUUCCUCCUGCUACG\
) } def
/len { sequence length } bind def

/coor [
[-27.58341408 304.69918823]
[-36.68927765 316.61904907]
[-45.79514313 328.53890991]
[-40.87751389 341.43063354]
[-42.96194077 354.96044922]
[-51.39714050 365.60446167]
[-63.89193726 370.64398193]
[-77.13677216 368.85964966]
[-86.44591522 380.62142944]
[-89.32843018 389.31597900]
[-96.01720428 392.50341797]
[-105.52688599 404.10369873]
[-115.03656006 415.70394897]
[-124.54624176 427.30419922]
[-127.10144806 445.52862549]
[-143.73234558 451.09713745]
[-153.04148865 462.85894775]
[-154.88934326 479.15365601]
[-170.03088379 485.45172119]
[-182.88978577 475.27426147]
[-180.23791504 459.09094238]
[-164.80328369 453.54980469]
[-155.49414062 441.78799438]
[-156.57785034 429.72442627]
[-148.89698792 419.84585571]
[-136.14649963 417.79452515]
[-126.63681793 406.19427490]
[-117.12714386 394.59402466]
[-107.61746979 382.99374390]
[-98.20771027 371.31228638]
[-88.89856720 359.55050659]
[-93.82969666 343.90481567]
[-88.41783142 328.24304199]
[-74.60534668 318.79190063]
[-57.71500778 319.43304443]
[-48.60914612 307.51318359]
[-39.50328064 295.59332275]
[-38.20359421 278.10314941]
[-21.17040253 271.13690186]
[-12.27050018 259.06246948]
[-3.37059879 246.98805237]
[5.52930260 234.91363525]
[14.32523537 222.76325989]
[23.01655197 210.53782654]
[31.70786858 198.31240845]
[40.39918518 186.08699036]
[49.09049988 173.86155701]
[57.78181839 161.63613892]
[66.47313690 149.41070557]
[75.16445160 137.18528748]
[83.85576630 124.95986176]
[92.54708099 112.73443604]
[76.77156067 112.92550659]
[61.60276794 99.01213074]
[49.60517883 90.00891876]
[33.92322159 87.91445160]
[28.38748932 74.08676910]
[16.38990021 65.08354950]
[4.39231205 56.08033752]
[-7.60527658 47.07712555]
[-22.39502525 51.77211761]
[-37.10917664 46.84531784]
[-46.08983994 34.19117737]
[-45.88376617 18.67546844]
[-36.57019424 6.26430321]
[-21.73038673 1.73002493]
[-7.07054710 6.81615686]
[1.77231443 19.56697655]
[1.39793777 35.07953644]
[13.39552689 44.08274841]
[25.39311600 53.08596420]
[37.39070511 62.08917999]
[52.21451187 63.53967285]
[58.60839462 78.01132965]
[70.60597992 87.01454163]
[77.75074768 84.73368073]
[73.18926239 70.44407654]
[87.47894287 65.88282776]
[92.04028320 80.17195892]
[99.18504333 77.89109802]
[103.74676514 63.60156631]
[108.30848694 49.31203842]
[112.87020874 35.02250671]
[117.43193817 20.73297501]
[110.43914795 6.81397152]
[115.26894379 -7.61266088]
[128.58168030 -14.19343758]
[133.14340210 -28.48296928]
[137.70512390 -42.77249908]
[142.26684570 -57.06203079]
[146.82856750 -71.35156250]
[151.39028931 -85.64109039]
[155.95201111 -99.93061829]
[148.95922852 -113.84962463]
[153.78901672 -128.27626038]
[167.10176086 -134.85704041]
[171.66348267 -149.14656067]
[176.22520447 -163.43609619]
[172.20628357 -179.33515930]
[184.15281677 -190.56959534]
[199.77522278 -185.58236694]
[203.00251770 -169.50392151]
[190.51473999 -158.87437439]
[185.95300293 -144.58483887]
[181.39128113 -130.29531860]
[188.42849731 -117.21810913]
[184.00582886 -102.66151428]
[170.24154663 -95.36889648]
[165.67982483 -81.07936859]
[161.11810303 -66.78984070]
[156.55638123 -52.50030899]
[151.99465942 -38.21077728]
[147.43293762 -23.92124557]
[142.87121582 -9.63171577]
[149.90843201 3.44548488]
[145.48574829 18.00208473]
[131.72146606 25.29469872]
[127.15974426 39.58422852]
[122.59802246 53.87376022]
[118.03630066 68.16329193]
[113.47457886 82.45281982]
[121.85911560 70.01499176]
[136.69709778 67.81632233]
[148.32820129 77.28826141]
[149.17991638 92.26406097]
[138.69775391 102.99365997]
[123.70656586 102.49169159]
[137.95642090 107.17590332]
[152.20626831 111.86010742]
[166.45611572 116.54431915]
[180.70596313 121.22852325]
[194.95581055 125.91273499]
[209.20565796 130.59693909]
[223.45550537 135.28114319]
[237.70535278 139.96536255]
[250.27552795 131.06047058]
[265.50091553 131.26240540]
[277.54547119 140.28417969]
[281.91577148 154.49819946]
[296.16564941 159.18241882]
[310.41549683 163.86662292]
[324.66534424 168.55082703]
[337.17089844 159.36439514]
[352.68789673 159.31668091]
[365.24972534 168.42601013]
[370.02612305 183.18968201]
[365.18045044 197.93074036]
[352.57595825 206.98097229]
[337.05935669 206.86035156]
[324.59707642 197.61529541]
[319.98110962 182.80067444]
[305.73126221 178.11647034]
[291.48141479 173.43226624]
[277.23156738 168.74804688]
[265.28009033 177.59678650]
[250.23181152 177.71260071]
[237.85614014 168.84152222]
[233.02114868 154.21520996]
[218.77130127 149.53100586]
[204.52145386 144.84678650]
[190.27160645 140.16258240]
[176.02175903 135.47837830]
[161.77191162 130.79415894]
[147.52204895 126.10995483]
[133.27220154 121.42575073]
[119.02235413 116.74153900]
[104.77250671 121.42575073]
[96.08119202 133.65116882]
[87.38987732 145.87660217]
[78.69856262 158.10202026]
[70.00724030 170.32745361]
[61.31592560 182.55287170]
[52.62461090 194.77830505]
[43.93329239 207.00372314]
[35.24197769 219.22915649]
[26.55066109 231.45457458]
[24.11954689 240.28598022]
[17.60372734 243.81353760]
[8.70382690 255.88795471]
[-0.19607469 267.96237183]
[-9.09597588 280.03680420]
[-7.94284296 292.89965820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 37]
[2 36]
[3 35]
[8 31]
[9 30]
[11 29]
[12 28]
[13 27]
[14 26]
[16 23]
[17 22]
[39 181]
[40 180]
[41 179]
[42 178]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[52 167]
[54 75]
[55 74]
[57 72]
[58 71]
[59 70]
[60 69]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[87 114]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[93 108]
[96 105]
[97 104]
[98 103]
[127 166]
[128 165]
[129 164]
[130 163]
[131 162]
[132 161]
[133 160]
[134 159]
[135 158]
[139 154]
[140 153]
[141 152]
[142 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
