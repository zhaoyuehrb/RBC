%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABCB7)
} def

/sequence { (\
AGGUAGCCGAAUUCAGUCCGCCAGUGUCCCAUAAUCCUCUUCUCUCGGUUCCUCUUUCCUCGCUCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 53 0.857151136 ubox
1 55 0.059856960 ubox
1 56 0.029346401 ubox
1 57 0.006705882 ubox
1 60 0.035849293 ubox
1 64 0.006136685 ubox
2 8 0.004455049 ubox
2 19 0.003333108 ubox
2 22 0.011417597 ubox
2 29 0.006038858 ubox
2 51 0.013058921 ubox
2 52 0.985324069 ubox
2 53 0.114112366 ubox
2 54 0.067457244 ubox
2 55 0.039564747 ubox
2 56 0.003452915 ubox
2 58 0.005945348 ubox
2 59 0.041090770 ubox
2 63 0.006669594 ubox
2 64 0.020183767 ubox
2 65 0.012091087 ubox
3 7 0.004390823 ubox
3 18 0.003328288 ubox
3 21 0.011398232 ubox
3 28 0.006067164 ubox
3 50 0.009902149 ubox
3 51 0.985742497 ubox
3 52 0.131978198 ubox
3 53 0.037542116 ubox
3 54 0.040718517 ubox
3 57 0.005197428 ubox
3 58 0.040958929 ubox
3 63 0.022499300 ubox
3 64 0.005356100 ubox
4 20 0.011118322 ubox
4 62 0.022331823 ubox
5 50 0.949215799 ubox
5 53 0.006842485 ubox
5 55 0.024186703 ubox
5 56 0.009934927 ubox
5 57 0.006844083 ubox
5 60 0.010158538 ubox
5 64 0.033075300 ubox
6 17 0.009985138 ubox
6 21 0.008634537 ubox
6 25 0.005439751 ubox
6 49 0.997535858 ubox
6 52 0.006209183 ubox
6 54 0.024007532 ubox
6 55 0.005017957 ubox
6 59 0.010062433 ubox
6 63 0.036040880 ubox
7 16 0.010164631 ubox
7 20 0.008649144 ubox
7 24 0.005437457 ubox
7 48 0.998761752 ubox
7 62 0.033887879 ubox
8 20 0.004819371 ubox
8 47 0.998750084 ubox
8 62 0.013271787 ubox
9 18 0.011990386 ubox
9 19 0.005141490 ubox
9 42 0.010256841 ubox
9 44 0.010323597 ubox
9 46 0.998182493 ubox
9 51 0.024707611 ubox
9 57 0.004851599 ubox
9 58 0.033075095 ubox
9 61 0.018116697 ubox
10 17 0.011928205 ubox
10 41 0.012250082 ubox
10 43 0.012040671 ubox
10 45 0.970660172 ubox
10 50 0.024726339 ubox
10 56 0.005279125 ubox
10 57 0.033022263 ubox
10 60 0.017692146 ubox
11 17 0.023120203 ubox
11 25 0.025951677 ubox
11 27 0.020999805 ubox
11 32 0.012823946 ubox
11 35 0.045295943 ubox
11 40 0.017354779 ubox
11 49 0.024543862 ubox
11 55 0.005280135 ubox
11 56 0.031779050 ubox
12 16 0.022036388 ubox
12 24 0.026039505 ubox
12 26 0.020515169 ubox
12 31 0.011922317 ubox
12 34 0.045397205 ubox
12 48 0.023174379 ubox
13 23 0.023094838 ubox
13 33 0.041951695 ubox
13 47 0.021754721 ubox
14 26 0.067975266 ubox
14 47 0.004113763 ubox
15 25 0.066624353 ubox
15 38 0.104831928 ubox
15 40 0.722541883 ubox
15 41 0.085751408 ubox
15 43 0.214856650 ubox
15 45 0.050455350 ubox
15 50 0.005821361 ubox
15 53 0.016181635 ubox
15 55 0.016024799 ubox
16 25 0.008407750 ubox
16 32 0.013149591 ubox
16 35 0.010733522 ubox
16 37 0.108118180 ubox
16 39 0.747947148 ubox
16 40 0.078916297 ubox
16 42 0.223505359 ubox
16 44 0.077046692 ubox
16 49 0.006400381 ubox
16 52 0.017068259 ubox
16 54 0.016524723 ubox
17 24 0.013417573 ubox
17 26 0.007076649 ubox
17 31 0.014578795 ubox
17 34 0.013550401 ubox
18 48 0.034050199 ubox
19 26 0.047632929 ubox
19 47 0.034114240 ubox
20 25 0.031308371 ubox
20 27 0.075794105 ubox
20 46 0.033917403 ubox
20 49 0.021243083 ubox
20 63 0.003177821 ubox
21 26 0.077208339 ubox
21 48 0.021676663 ubox
21 62 0.003179455 ubox
22 47 0.021669474 ubox
23 38 0.123014067 ubox
23 40 0.035148239 ubox
23 41 0.005316700 ubox
23 43 0.042888550 ubox
23 45 0.023998168 ubox
23 64 0.011188749 ubox
24 32 0.691197552 ubox
24 35 0.147966925 ubox
24 37 0.124900607 ubox
24 39 0.036733328 ubox
24 40 0.004501446 ubox
24 42 0.043927936 ubox
24 44 0.029097197 ubox
24 63 0.011961613 ubox
25 31 0.720215009 ubox
25 33 0.196864665 ubox
25 34 0.154145958 ubox
25 62 0.011956638 ubox
26 30 0.710958711 ubox
26 32 0.199193551 ubox
26 35 0.109579823 ubox
26 61 0.011894005 ubox
27 31 0.184775193 ubox
27 34 0.108685449 ubox
33 41 0.016222361 ubox
33 50 0.003655230 ubox
34 40 0.016854261 ubox
34 49 0.004027109 ubox
35 48 0.003599307 ubox
36 47 0.003583424 ubox
36 48 0.007840343 ubox
37 47 0.007852345 ubox
39 48 0.007665177 ubox
40 47 0.007243720 ubox
47 59 0.006018300 ubox
48 58 0.006020670 ubox
53 67 0.004097206 ubox
54 68 0.081504950 ubox
55 67 0.083084127 ubox
55 68 0.031145559 ubox
56 66 0.076206667 ubox
56 67 0.050609268 ubox
56 68 0.009320385 ubox
57 66 0.053207669 ubox
57 67 0.012720958 ubox
59 68 0.106929444 ubox
60 67 0.104117054 ubox
1 53 0.9500000 lbox
2 52 0.9500000 lbox
3 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
10 45 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
showpage
end
%%EOF
