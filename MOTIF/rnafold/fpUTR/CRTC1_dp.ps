%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRTC1)
} def

/sequence { (\
CCAGCCGGCGCUUGCGCGGUGGCACGGGCGAGUGGGGGGGCGAGGAGGUGGAGGAGGAGGAGGAGGAGGAGGAGGUGGCGGCGAGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 37 0.003593739 ubox
1 38 0.015958965 ubox
1 39 0.053409180 ubox
1 40 0.047366410 ubox
1 45 0.918090780 ubox
1 48 0.042471524 ubox
1 51 0.199339008 ubox
1 54 0.028579805 ubox
1 57 0.024321988 ubox
1 60 0.021871636 ubox
1 63 0.019715562 ubox
1 66 0.018299736 ubox
1 69 0.017455617 ubox
1 72 0.016803618 ubox
1 75 0.007546831 ubox
1 78 0.018921710 ubox
1 81 0.059932085 ubox
2 36 0.003568624 ubox
2 37 0.015935124 ubox
2 38 0.053451508 ubox
2 39 0.048695429 ubox
2 44 0.921106147 ubox
2 47 0.042495630 ubox
2 50 0.200188967 ubox
2 53 0.028498582 ubox
2 56 0.024274284 ubox
2 59 0.021843848 ubox
2 62 0.019685098 ubox
2 65 0.018273661 ubox
2 68 0.017447769 ubox
2 71 0.016858601 ubox
2 74 0.007646583 ubox
2 77 0.019168395 ubox
2 80 0.060543026 ubox
3 49 0.196891893 ubox
3 76 0.016519768 ubox
4 41 0.964192901 ubox
4 49 0.021176394 ubox
4 76 0.009217599 ubox
4 79 0.065973777 ubox
4 82 0.231347478 ubox
5 35 0.034622162 ubox
5 36 0.042549263 ubox
5 37 0.057920436 ubox
5 38 0.046565922 ubox
5 39 0.058144090 ubox
5 40 0.963354807 ubox
5 45 0.019025288 ubox
5 48 0.032418076 ubox
5 51 0.005123268 ubox
5 54 0.008724196 ubox
5 57 0.004792801 ubox
5 60 0.004529338 ubox
5 63 0.004331776 ubox
5 66 0.003818571 ubox
5 69 0.003345542 ubox
5 72 0.004010147 ubox
5 75 0.013941164 ubox
5 78 0.065995566 ubox
5 81 0.231630565 ubox
6 34 0.034430050 ubox
6 35 0.042405442 ubox
6 36 0.058313125 ubox
6 37 0.047749018 ubox
6 38 0.073019312 ubox
6 39 0.962003133 ubox
6 44 0.019062263 ubox
6 47 0.032414165 ubox
6 50 0.005119623 ubox
6 53 0.008727404 ubox
6 56 0.004789801 ubox
6 59 0.004526084 ubox
6 62 0.004328630 ubox
6 65 0.003814020 ubox
6 68 0.003342850 ubox
6 71 0.004011945 ubox
6 74 0.013922119 ubox
6 77 0.065936785 ubox
6 80 0.231621068 ubox
7 33 0.031810242 ubox
7 76 0.049947235 ubox
7 79 0.229986632 ubox
8 33 0.011704431 ubox
8 41 0.016507491 ubox
8 76 0.012824229 ubox
8 79 0.014734573 ubox
9 30 0.036008329 ubox
9 32 0.009966391 ubox
9 34 0.976785833 ubox
9 40 0.016370643 ubox
9 42 0.007058278 ubox
9 50 0.007500175 ubox
9 75 0.014515485 ubox
9 77 0.196876898 ubox
9 78 0.019869939 ubox
10 29 0.038745686 ubox
10 33 0.985258433 ubox
10 41 0.006956688 ubox
10 49 0.007684998 ubox
10 76 0.159585862 ubox
11 28 0.038761523 ubox
11 32 0.986626155 ubox
11 38 0.014417460 ubox
11 40 0.006738457 ubox
11 47 0.003346517 ubox
11 48 0.007620695 ubox
11 74 0.009172873 ubox
11 75 0.156622098 ubox
12 27 0.038754340 ubox
12 31 0.988449595 ubox
12 37 0.014508744 ubox
12 39 0.005853575 ubox
12 44 0.003834240 ubox
12 45 0.005186821 ubox
12 46 0.005100168 ubox
12 47 0.007488268 ubox
12 73 0.011600025 ubox
12 74 0.139701333 ubox
13 24 0.005056250 ubox
13 26 0.038783643 ubox
13 30 0.990186912 ubox
13 31 0.006037647 ubox
13 36 0.014934697 ubox
13 38 0.003706283 ubox
13 43 0.007444486 ubox
13 44 0.010471366 ubox
13 45 0.006893609 ubox
13 46 0.006743483 ubox
13 72 0.010904332 ubox
13 73 0.114094442 ubox
14 23 0.008946292 ubox
14 25 0.039426299 ubox
14 29 0.998758439 ubox
15 22 0.009264385 ubox
15 28 0.998699147 ubox
15 30 0.008328642 ubox
15 34 0.016548223 ubox
15 42 0.017102497 ubox
16 23 0.042989841 ubox
16 29 0.008455289 ubox
16 33 0.016572674 ubox
16 41 0.017318597 ubox
17 22 0.043036220 ubox
17 26 0.998398452 ubox
17 28 0.008411476 ubox
17 32 0.016573640 ubox
17 40 0.017324708 ubox
18 25 0.996590375 ubox
19 25 0.027329232 ubox
19 29 0.004640211 ubox
20 24 0.034304617 ubox
20 28 0.004631866 ubox
22 29 0.015740400 ubox
23 28 0.015777701 ubox
23 34 0.018110581 ubox
24 33 0.018568999 ubox
24 49 0.004353142 ubox
25 32 0.018631732 ubox
25 48 0.004535700 ubox
28 41 0.010125902 ubox
29 40 0.010150005 ubox
30 41 0.005549614 ubox
32 41 0.093284265 ubox
33 40 0.092755702 ubox
33 42 0.040085900 ubox
34 41 0.060850627 ubox
40 49 0.207247513 ubox
40 76 0.022936970 ubox
40 79 0.027352323 ubox
40 82 0.022381379 ubox
41 48 0.214056602 ubox
41 50 0.048786467 ubox
41 75 0.023758477 ubox
41 77 0.004131137 ubox
41 78 0.027613025 ubox
41 80 0.006101175 ubox
41 81 0.022195086 ubox
41 83 0.008593215 ubox
42 49 0.039802754 ubox
42 76 0.003399988 ubox
42 79 0.007286890 ubox
42 82 0.009698144 ubox
48 76 0.003457689 ubox
48 79 0.105133774 ubox
48 82 0.106707704 ubox
49 75 0.005486565 ubox
49 77 0.007044281 ubox
49 78 0.104331182 ubox
49 80 0.051164312 ubox
49 81 0.099669714 ubox
49 83 0.032452150 ubox
50 76 0.009796846 ubox
50 79 0.069926694 ubox
50 82 0.042491572 ubox
75 82 0.545084556 ubox
76 81 0.539081601 ubox
76 83 0.188252756 ubox
77 82 0.246299794 ubox
1 45 0.9500000 lbox
2 44 0.9500000 lbox
4 41 0.9500000 lbox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
12 31 0.9500000 lbox
13 30 0.9500000 lbox
14 29 0.9500000 lbox
15 28 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
showpage
end
%%EOF
