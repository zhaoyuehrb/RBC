%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCGCCGAGCGAAGGGCGGCGGCGGUGGCGGCGGCGGCUCGUGCUCGGCCCCGGCUGCGAUUGCGCUCAGCUCCAGGUUCCCUGCCCGCGGCGGCGCGCCCCCAGCGCUCCCUGCACCCCGCGCCACCCGCACCCGCGCUCGGCCCGCUGCGGGCGGAGGAGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[-222.06556702 229.20278931]
[-238.08772278 231.37231445]
[-253.90353394 226.43150330]
[-261.24481201 239.51223755]
[-268.58605957 252.59298706]
[-270.06701660 261.64483643]
[-276.18276978 265.84381104]
[-283.76171875 278.78829956]
[-291.34066772 291.73275757]
[-298.91961670 304.67724609]
[-292.57153320 318.83639526]
[-295.79135132 334.01574707]
[-307.34091187 344.37850952]
[-322.77923584 345.94000244]
[-336.16992188 338.09979248]
[-342.36401367 323.87261963]
[-338.97973633 308.72909546]
[-327.31842041 298.49221802]
[-311.86407471 297.09829712]
[-304.28512573 284.15380859]
[-296.70617676 271.20935059]
[-289.12722778 258.26486206]
[-281.66680908 245.25170898]
[-274.32553101 232.17097473]
[-266.98428345 219.09022522]
[-273.59811401 205.62705994]
[-288.43826294 203.44303894]
[-303.27841187 201.25901794]
[-318.11856079 199.07501221]
[-332.95874023 196.89099121]
[-347.73840332 202.53651428]
[-359.20349121 193.02856445]
[-374.04364014 190.84454346]
[-388.88378906 188.66052246]
[-403.72393799 186.47650146]
[-418.56408691 184.29249573]
[-433.42355347 182.24409485]
[-448.30111694 180.33148193]
[-457.24945068 182.34562683]
[-463.43200684 178.24566650]
[-478.27215576 176.06164551]
[-493.11230469 173.87762451]
[-502.09591675 175.72801208]
[-508.20257568 171.51580811]
[-523.00036621 169.06111145]
[-538.15423584 175.32945251]
[-550.99310303 165.12673950]
[-548.30944824 148.94866943]
[-532.86395264 143.43785095]
[-520.54565430 154.26333618]
[-505.74786377 156.71803284]
[-490.92828369 159.03747559]
[-476.08813477 161.22149658]
[-461.24798584 163.40551758]
[-446.38851929 165.45391846]
[-431.51095581 167.36653137]
[-424.44967651 165.09223938]
[-416.38006592 169.45234680]
[-401.53991699 171.63635254]
[-386.69976807 173.82037354]
[-371.85961914 176.00439453]
[-357.01947021 178.18841553]
[-343.30126953 172.38667297]
[-330.77471924 182.05084229]
[-315.93457031 184.23484802]
[-301.09442139 186.41886902]
[-286.25424194 188.60289001]
[-271.41409302 190.78691101]
[-265.89953613 175.36050415]
[-254.67222595 163.88786316]
[-239.98529053 158.27746582]
[-224.62738037 159.29968262]
[-211.39405823 166.49240112]
[-202.57887268 178.29547119]
[-188.06661987 174.50146484]
[-173.55436707 170.70745850]
[-172.02185059 168.31845093]
[-169.43322754 166.40434265]
[-165.96893311 165.37701416]
[-161.95727539 165.57385254]
[-157.84378052 167.20777893]
[-143.09329224 164.48323059]
[-128.34280396 161.75868225]
[-113.59232330 159.03411865]
[-98.84184265 156.30957031]
[-84.11685181 153.45042419]
[-69.41858673 150.45692444]
[-54.72032547 147.46342468]
[-40.02206039 144.46992493]
[-25.32379723 141.47640991]
[-10.62553406 138.48291016]
[4.07272911 135.48941040]
[18.77099228 132.49591064]
[33.46925735 129.50241089]
[48.16751862 126.50890350]
[62.86578369 123.51540375]
[77.56404877 120.52190399]
[92.26230621 117.52840424]
[66.03916931 98.37477875]
[84.63352966 53.64129639]
[94.64331055 42.46971130]
[104.65309143 31.29813004]
[114.66287231 20.12654686]
[115.22348022 4.09329128]
[128.19364929 -5.34887218]
[143.62376404 -0.95672446]
[149.67716980 13.90045452]
[141.71022034 27.82551003]
[125.83445740 30.13632965]
[115.82467651 41.30791092]
[105.81489563 52.47949600]
[95.80510712 63.65107727]
[99.71216583 70.05302429]
[112.51605988 62.23891830]
[127.51160431 61.87334442]
[120.33016205 75.04281616]
[107.52626801 82.85691833]
[111.43331909 89.25887299]
[125.94557953 85.46486664]
[135.25975037 72.40249634]
[151.28672791 71.68426514]
[161.73196411 83.86115265]
[158.58277893 99.59207916]
[144.25495911 106.80963898]
[129.73957825 99.97712708]
[115.22731781 103.77112579]
[114.81640625 118.76549530]
[129.09909058 123.34860992]
[143.38177490 127.93171692]
[155.88851929 118.93797302]
[171.11497498 119.03201294]
[183.22315979 127.96820831]
[187.69407654 142.15090942]
[201.97677612 146.73402405]
[216.25946045 151.31712341]
[232.16452026 147.32202148]
[243.38105774 159.28535461]
[238.37045288 174.90028381]
[222.28718567 178.10350037]
[211.67634583 165.59980774]
[197.39366150 161.01670837]
[183.11097717 156.43359375]
[171.22248840 165.36679077]
[156.17541504 165.58924866]
[143.73718262 156.80609131]
[138.79867554 142.21440125]
[124.51598358 137.63128662]
[110.23329926 133.04818726]
[95.25581360 132.22666931]
[80.55754852 135.22016907]
[65.85928345 138.21366882]
[51.16102219 141.20716858]
[36.46275711 144.20066833]
[21.76449394 147.19416809]
[7.06623077 150.18768311]
[-7.63203239 153.18118286]
[-22.33029556 156.17468262]
[-37.02856064 159.16818237]
[-51.72682190 162.16168213]
[-66.42508698 165.15518188]
[-81.12335205 168.14868164]
[-88.94206238 172.94419861]
[-96.11728668 171.06005859]
[-110.86777496 173.78460693]
[-125.61825562 176.50915527]
[-140.36874390 179.23371887]
[-155.11923218 181.95826721]
[-169.76036072 185.21972656]
[-184.27261353 189.01371765]
[-198.78488159 192.80772400]
[-200.63026428 207.65840149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[5 23]
[7 22]
[8 21]
[9 20]
[10 19]
[26 68]
[27 67]
[28 66]
[29 65]
[30 64]
[32 62]
[33 61]
[34 60]
[35 59]
[36 58]
[37 56]
[38 55]
[40 54]
[41 53]
[42 52]
[44 51]
[45 50]
[74 170]
[75 169]
[76 168]
[81 167]
[82 166]
[83 165]
[84 164]
[85 163]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
[91 156]
[92 155]
[93 154]
[94 153]
[95 152]
[96 151]
[97 150]
[98 149]
[100 112]
[101 111]
[102 110]
[103 109]
[118 126]
[119 125]
[127 148]
[128 147]
[129 146]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
