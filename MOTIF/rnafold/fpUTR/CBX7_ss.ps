%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGGAAAACGUUGCGCAGGUUCAAAAAUGGAACGUCGGCGGCGUGAGGGAGCGCGAGGGGGUGUGCGCGCGUGCGCGUGCGCGUGCGCGCCCGGACGAGGGUGACGGGGACCCCGCCAGCCCCAGCAUCGCGCGCCGCAGCCGCGGCCCCGCAGCUCCGCCCCCGGCCCGGCCCGGCCCCGGGCCCGCUCGCCCGCCGCCCCGC\
) } def
/len { sequence length } bind def

/coor [
[8.33206654 558.50103760]
[14.37840652 542.66192627]
[14.37840652 527.66192627]
[11.23383427 520.97094727]
[14.49395847 512.43469238]
[14.72160149 497.43640137]
[7.71364784 494.76461792]
[-3.92182541 504.23117065]
[-6.30225992 489.42098999]
[-13.31021309 486.74917603]
[-23.12530136 498.09219360]
[-32.94039154 509.43521118]
[-42.75547791 520.77819824]
[-52.57056808 532.12121582]
[-55.74960709 547.61975098]
[-69.92851257 552.18133545]
[-79.74359894 563.52435303]
[-73.63069916 577.50988770]
[-74.19983673 592.76239014]
[-81.33802032 606.25341797]
[-93.62795258 615.30444336]
[-108.62945557 618.11822510]
[-123.36397552 614.13623047]
[-134.90596008 604.14892578]
[-140.96374512 590.13946533]
[-140.33454895 574.88934326]
[-133.14329529 561.42645264]
[-120.81781769 552.42395020]
[-105.80534363 549.66918945]
[-91.08661652 553.70922852]
[-81.27153015 542.36621094]
[-78.79453278 527.67901611]
[-63.91358566 522.30615234]
[-54.09849548 510.96313477]
[-44.28340912 499.62011719]
[-34.46831894 488.27709961]
[-24.65323067 476.93408203]
[-16.28421974 464.48580933]
[-9.48450661 451.11553955]
[-2.68479300 437.74526978]
[4.11492062 424.37500000]
[10.91463470 411.00476074]
[17.71434784 397.63449097]
[17.94452286 390.24505615]
[24.72005653 384.11407471]
[31.72189713 370.84854126]
[38.72373581 357.58303833]
[45.72557831 344.31750488]
[52.72741699 331.05197144]
[101.15037537 268.34872437]
[101.83309174 253.36425781]
[102.51580811 238.37980652]
[103.19853210 223.39533997]
[103.88124847 208.41088867]
[104.45024109 193.42169189]
[104.90547943 178.42858887]
[105.36071014 163.43550110]
[102.42064667 156.65222168]
[105.93833923 148.21881104]
[106.62105560 133.23435974]
[27.00568581 82.43151093]
[16.35891724 71.86522675]
[5.71214914 61.29894638]
[-4.93461990 50.73266220]
[-15.58138847 40.16638184]
[-26.22815704 29.60009956]
[-36.87492752 19.03381729]
[-47.52169418 8.46753597]
[-58.16846466 -2.09874654]
[-68.81523132 -12.66502857]
[-79.46199799 -23.23130989]
[-90.10877228 -33.79759216]
[-100.75553894 -44.36387253]
[-111.40230560 -54.93015671]
[-127.20354462 -54.61956787]
[-138.53825378 -65.63318634]
[-138.68177795 -81.43682098]
[-127.54893494 -92.65446472]
[-111.74465942 -92.63088226]
[-100.64535522 -81.38006592]
[-100.83602905 -65.57692719]
[-90.18925476 -55.01064301]
[-79.54248810 -44.44436264]
[-68.89572144 -33.87807846]
[-58.24895096 -23.31179810]
[-47.60218048 -12.74551487]
[-36.95541382 -2.17923331]
[-26.30864334 8.38704872]
[-15.66187572 18.95333099]
[-5.01510668 29.51961327]
[5.63166189 40.08589554]
[16.27843094 50.65217590]
[26.92519951 61.21846008]
[37.57196808 71.78474426]
[44.82372665 69.87110138]
[34.25751877 59.22425461]
[38.19496155 44.75025558]
[52.69855881 40.92329025]
[63.26453018 51.57036591]
[59.32723999 66.04381561]
[66.57899475 64.13017273]
[70.62594604 49.68641281]
[74.67289734 35.24265289]
[78.71984863 20.79889488]
[69.86836243 5.71188116]
[74.57275391 -10.78458977]
[89.45297241 -18.61851501]
[93.28025055 -33.12202835]
[97.10753632 -47.62554169]
[100.93482208 -62.12905502]
[99.13000488 -78.98666382]
[114.82918549 -85.38760376]
[125.32593536 -72.07390594]
[115.43833160 -58.30176926]
[111.61105347 -43.79825592]
[107.78376770 -29.29474449]
[103.95648193 -14.79123116]
[111.93624878 -4.67195082]
[112.64019012 8.39077473]
[105.58747101 19.63884544]
[93.16361237 24.84584618]
[89.11666107 39.28960419]
[85.06970215 53.73336411]
[81.02275085 68.17712402]
[87.40114594 72.12252045]
[100.15792847 80.01330566]
[106.53631592 83.95870209]
[117.65296936 73.88795471]
[119.87690735 57.99979019]
[133.75816345 49.95677567]
[148.64823914 55.92881393]
[153.12474060 71.33467865]
[143.75366211 84.35630035]
[127.72371674 85.00460815]
[116.60706329 95.07535553]
[124.59442902 107.77188873]
[138.48506165 102.11060333]
[152.37570190 96.44931793]
[166.26634216 90.78802490]
[180.15698242 85.12673950]
[189.78115845 71.84867096]
[206.06219482 73.81332397]
[212.25155640 88.99963379]
[201.98214722 101.78522491]
[185.81826782 99.01737976]
[171.92762756 104.67866516]
[158.03698730 110.33995056]
[144.14634705 116.00124359]
[130.25572205 121.66252899]
[121.60551453 133.91708374]
[120.92279053 148.90153503]
[120.35379791 163.89073181]
[119.89856720 178.88383484]
[119.44333649 193.87692261]
[122.31155396 202.55274963]
[118.86570740 209.09361267]
[118.18298340 224.07806396]
[117.50026703 239.06251526]
[116.81755066 254.04698181]
[116.13482666 269.03143311]
[124.78503418 281.28598022]
[139.13293457 285.66067505]
[153.48081970 290.03536987]
[170.39476013 288.87127686]
[176.19557190 304.80197144]
[162.49328613 314.78616333]
[149.10614014 304.38323975]
[134.75823975 300.00857544]
[120.41034698 295.63388062]
[116.70973969 302.15731812]
[109.30853271 315.20425415]
[105.60792542 321.72772217]
[116.72457886 331.79846191]
[127.84123993 341.86920166]
[138.95788574 351.93997192]
[150.07455444 362.01071167]
[161.19120789 372.08145142]
[177.32695007 375.00891113]
[182.60409546 390.53576660]
[171.59399414 402.68936157]
[155.62286377 398.96707153]
[151.12045288 383.19812012]
[140.00379944 373.12734985]
[128.88714600 363.05661011]
[117.77049255 352.98587036]
[106.65383148 342.91513062]
[95.53717804 332.84436035]
[88.15112305 334.14672852]
[73.37900543 336.75146484]
[65.99294281 338.05380249]
[58.99110413 351.31933594]
[51.98926544 364.58486938]
[44.98742676 377.85040283]
[37.98558426 391.11593628]
[31.08460999 404.43420410]
[24.28489494 417.80447388]
[17.48518181 431.17471313]
[10.68546867 444.54498291]
[3.88575506 457.91525269]
[-2.91395855 471.28552246]
[16.20936775 476.37792969]
[29.71987343 497.66406250]
[29.49223137 512.66235352]
[29.37840652 527.66192627]
[29.37840652 542.66192627]
[35.42474747 558.50103760]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[5 203]
[6 202]
[10 37]
[11 36]
[12 35]
[13 34]
[14 33]
[16 31]
[17 30]
[38 200]
[39 199]
[40 198]
[41 197]
[42 196]
[43 195]
[45 194]
[46 193]
[47 192]
[48 191]
[49 190]
[50 160]
[51 159]
[52 158]
[53 157]
[54 156]
[55 154]
[56 153]
[57 152]
[59 151]
[60 150]
[61 94]
[62 93]
[63 92]
[64 91]
[65 90]
[66 89]
[67 88]
[68 87]
[69 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[101 124]
[102 123]
[103 122]
[104 121]
[107 117]
[108 116]
[109 115]
[110 114]
[127 135]
[128 134]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
[161 169]
[162 168]
[163 167]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
