%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VSX2)
} def

/sequence { (\
CCUGGGACCAACUUCGCGAAGCGGGAAGCCCGGCGGGGGGGUGGGGGGAGCUAAAGACCUGCGGCCUCAGCCCCUCCAAAGAACAGGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.003837662 ubox
1 33 0.175908334 ubox
1 36 0.010529665 ubox
1 37 0.006581243 ubox
1 87 0.526983322 ubox
1 88 0.118417079 ubox
2 24 0.003854203 ubox
2 32 0.175854673 ubox
2 33 0.805089091 ubox
2 35 0.009719802 ubox
2 36 0.006606474 ubox
2 81 0.015638848 ubox
2 86 0.528495435 ubox
2 87 0.115160741 ubox
2 88 0.012810919 ubox
2 90 0.006942185 ubox
3 10 0.011853997 ubox
3 16 0.005284592 ubox
3 18 0.037691756 ubox
3 23 0.003778746 ubox
3 32 0.817877762 ubox
3 35 0.006195007 ubox
3 80 0.014504940 ubox
3 85 0.523477752 ubox
3 86 0.093777479 ubox
3 87 0.011306090 ubox
3 89 0.006659235 ubox
4 9 0.013810914 ubox
4 13 0.018311181 ubox
4 14 0.006889125 ubox
4 15 0.014248167 ubox
4 17 0.076146323 ubox
4 22 0.003616020 ubox
4 30 0.021871914 ubox
4 31 0.856856244 ubox
4 34 0.006010922 ubox
4 77 0.003287906 ubox
4 84 0.504770499 ubox
5 12 0.093350862 ubox
5 13 0.064803220 ubox
5 14 0.021278520 ubox
5 15 0.175321306 ubox
5 29 0.022573987 ubox
5 30 0.861695503 ubox
5 31 0.102138874 ubox
5 76 0.003286583 ubox
5 77 0.013691019 ubox
6 12 0.068751572 ubox
6 13 0.020492851 ubox
6 14 0.173653510 ubox
6 15 0.177594748 ubox
6 29 0.861386875 ubox
6 30 0.101871150 ubox
6 76 0.013605878 ubox
7 13 0.164323735 ubox
7 14 0.166346921 ubox
7 42 0.092995393 ubox
7 75 0.011489350 ubox
8 24 0.010232936 ubox
8 25 0.305235089 ubox
8 33 0.282399794 ubox
8 40 0.018631389 ubox
8 41 0.105363577 ubox
8 87 0.013213399 ubox
8 88 0.016816987 ubox
9 23 0.010352554 ubox
9 24 0.305714551 ubox
9 32 0.283104426 ubox
9 39 0.018618002 ubox
9 40 0.105321702 ubox
9 86 0.013230805 ubox
9 87 0.016877036 ubox
12 21 0.309203439 ubox
12 24 0.029129547 ubox
12 25 0.087762342 ubox
12 28 0.859090481 ubox
12 33 0.003297280 ubox
12 37 0.038598471 ubox
12 38 0.100049924 ubox
12 39 0.004292748 ubox
12 40 0.012093614 ubox
12 81 0.023332755 ubox
12 90 0.012784091 ubox
13 19 0.020114895 ubox
13 20 0.305546381 ubox
13 21 0.005410433 ubox
13 23 0.014229016 ubox
13 24 0.062603608 ubox
13 25 0.119652388 ubox
13 26 0.018759903 ubox
13 27 0.860191963 ubox
13 28 0.004838221 ubox
13 36 0.027441301 ubox
13 37 0.100246774 ubox
13 38 0.004046304 ubox
13 39 0.012336228 ubox
13 80 0.023122529 ubox
13 83 0.039988573 ubox
13 89 0.012987552 ubox
14 18 0.021970498 ubox
14 19 0.265909589 ubox
14 20 0.010221890 ubox
14 23 0.013313941 ubox
14 24 0.152721493 ubox
14 25 0.018615079 ubox
14 26 0.860508986 ubox
14 27 0.003688874 ubox
14 35 0.005729206 ubox
14 36 0.104388355 ubox
14 37 0.003784527 ubox
14 38 0.012426692 ubox
14 79 0.020812151 ubox
14 82 0.042004967 ubox
14 88 0.012987342 ubox
15 23 0.183759462 ubox
15 24 0.018663529 ubox
15 25 0.860304070 ubox
15 32 0.003521168 ubox
15 35 0.116241291 ubox
15 36 0.003748968 ubox
15 37 0.012813472 ubox
15 81 0.042222307 ubox
15 87 0.012937774 ubox
16 22 0.190803318 ubox
16 29 0.003843543 ubox
16 31 0.003325056 ubox
16 34 0.188588332 ubox
17 21 0.189680749 ubox
17 23 0.857773172 ubox
17 28 0.003865572 ubox
17 32 0.012792867 ubox
17 33 0.188403980 ubox
17 35 0.016591980 ubox
18 22 0.802629858 ubox
18 31 0.015523661 ubox
18 34 0.030270956 ubox
21 29 0.076669957 ubox
21 34 0.259307141 ubox
22 28 0.076754039 ubox
22 32 0.265712738 ubox
22 33 0.235253880 ubox
23 30 0.022782268 ubox
23 31 0.290761619 ubox
24 29 0.023413366 ubox
24 30 0.290961933 ubox
24 31 0.210194640 ubox
25 29 0.286281495 ubox
25 30 0.209610749 ubox
28 34 0.045945704 ubox
29 33 0.046764099 ubox
29 36 0.004849221 ubox
29 37 0.010956858 ubox
29 38 0.013406049 ubox
29 39 0.010978538 ubox
29 40 0.012294161 ubox
29 41 0.006204183 ubox
29 88 0.033998626 ubox
30 35 0.005157682 ubox
30 36 0.011247613 ubox
30 37 0.014263208 ubox
30 38 0.011012751 ubox
30 39 0.012338798 ubox
30 40 0.006212352 ubox
30 87 0.034110507 ubox
31 35 0.011210624 ubox
31 36 0.014316095 ubox
31 37 0.011011749 ubox
31 38 0.012337177 ubox
31 39 0.006194254 ubox
31 86 0.034100557 ubox
32 72 0.005108174 ubox
32 77 0.016196029 ubox
33 71 0.005244515 ubox
33 76 0.015465480 ubox
34 70 0.005266288 ubox
35 74 0.004283736 ubox
35 75 0.005163192 ubox
35 76 0.110033006 ubox
35 77 0.983831286 ubox
36 73 0.004283735 ubox
36 74 0.005487169 ubox
36 75 0.116061242 ubox
36 76 0.985377815 ubox
36 77 0.041686467 ubox
37 68 0.005403283 ubox
37 72 0.004257927 ubox
37 73 0.005065425 ubox
37 74 0.142752606 ubox
37 75 0.981798797 ubox
37 76 0.041653030 ubox
38 67 0.005684973 ubox
38 71 0.004097155 ubox
38 72 0.004570994 ubox
38 73 0.143033860 ubox
38 74 0.983410802 ubox
38 75 0.009706714 ubox
39 66 0.006370600 ubox
39 71 0.004007583 ubox
39 72 0.143193907 ubox
39 73 0.983434318 ubox
39 74 0.009087189 ubox
40 65 0.006386029 ubox
40 66 0.003202046 ubox
40 71 0.143319352 ubox
40 72 0.983420833 ubox
40 73 0.008359301 ubox
41 65 0.003203591 ubox
41 71 0.983343704 ubox
41 72 0.007539441 ubox
42 63 0.006803796 ubox
42 69 0.239855126 ubox
42 70 0.922621699 ubox
42 78 0.053287419 ubox
43 62 0.007500755 ubox
43 67 0.010133169 ubox
43 68 0.276354624 ubox
43 77 0.109876361 ubox
44 66 0.012965764 ubox
44 67 0.276533690 ubox
44 68 0.913588181 ubox
44 76 0.109961902 ubox
44 77 0.007981622 ubox
45 60 0.007644694 ubox
45 65 0.012948789 ubox
45 66 0.275496212 ubox
45 67 0.939169034 ubox
45 68 0.160805039 ubox
45 75 0.109898184 ubox
45 76 0.008035501 ubox
46 59 0.007900468 ubox
46 60 0.003411490 ubox
46 65 0.273649556 ubox
46 66 0.940820599 ubox
46 67 0.161700365 ubox
46 68 0.009533952 ubox
46 74 0.110017939 ubox
46 75 0.007365966 ubox
47 58 0.007983984 ubox
47 59 0.008925983 ubox
47 60 0.003668856 ubox
47 65 0.940942135 ubox
47 66 0.162550281 ubox
47 67 0.009479263 ubox
47 73 0.110018620 ubox
47 74 0.007399609 ubox
48 58 0.008920786 ubox
48 59 0.003834168 ubox
48 65 0.162915706 ubox
48 66 0.009570982 ubox
48 72 0.109999166 ubox
48 73 0.007400043 ubox
49 60 0.026261899 ubox
50 59 0.026522513 ubox
50 62 0.992367465 ubox
50 65 0.011516900 ubox
50 71 0.110233641 ubox
51 61 0.991834232 ubox
51 64 0.013028174 ubox
51 70 0.110235901 ubox
52 61 0.034240595 ubox
52 63 0.012533433 ubox
52 69 0.106815600 ubox
53 60 0.155199507 ubox
55 67 0.101588581 ubox
56 66 0.104584288 ubox
56 68 0.015384059 ubox
57 67 0.014639068 ubox
58 64 0.108143567 ubox
59 63 0.107495538 ubox
74 90 0.007799110 ubox
75 82 0.007182937 ubox
75 88 0.016227142 ubox
75 89 0.017010411 ubox
76 81 0.008158114 ubox
76 87 0.034290607 ubox
76 88 0.021618553 ubox
77 86 0.036918907 ubox
77 87 0.022284495 ubox
2 33 0.9500000 lbox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
17 23 0.9500000 lbox
18 22 0.9500000 lbox
35 77 0.9500000 lbox
36 76 0.9500000 lbox
37 75 0.9500000 lbox
38 74 0.9500000 lbox
39 73 0.9500000 lbox
40 72 0.9500000 lbox
41 71 0.9500000 lbox
42 70 0.9500000 lbox
44 68 0.9500000 lbox
45 67 0.9500000 lbox
46 66 0.9500000 lbox
47 65 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
showpage
end
%%EOF
