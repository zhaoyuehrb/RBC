%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SUCNR1)
} def

/sequence { (\
GUCAGAAGCUAUAUCCAGCUGCUGGCAGAGUUCCUGUCAAGGGAUCAAGUCUUCCAACAGAAUGGUUAUGGUUUAACUCAGCAGAAUUUGUUGAACAACUACGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.029023965 ubox
1 58 0.003255361 ubox
1 77 0.354154042 ubox
1 82 0.011172482 ubox
1 96 0.103330361 ubox
1 99 0.068724976 ubox
1 102 0.172095585 ubox
1 105 0.515033411 ubox
2 25 0.029033914 ubox
2 57 0.003238091 ubox
2 76 0.342868379 ubox
2 81 0.010983907 ubox
2 94 0.007954148 ubox
2 95 0.097571851 ubox
2 98 0.065050940 ubox
2 101 0.168059258 ubox
2 104 0.523352659 ubox
3 24 0.029066431 ubox
3 93 0.009387270 ubox
3 103 0.524281547 ubox
4 23 0.029067667 ubox
4 73 0.006679848 ubox
4 74 0.058371161 ubox
4 78 0.077079057 ubox
4 92 0.008169041 ubox
4 100 0.208910207 ubox
5 22 0.028884114 ubox
5 54 0.003535112 ubox
5 73 0.044981396 ubox
5 74 0.092633589 ubox
5 77 0.120933511 ubox
5 79 0.006207380 ubox
5 91 0.005515024 ubox
5 99 0.216472383 ubox
6 53 0.003538186 ubox
6 72 0.021869241 ubox
6 73 0.078184299 ubox
6 74 0.921851303 ubox
6 78 0.006103702 ubox
7 20 0.025854922 ubox
7 52 0.003534451 ubox
7 72 0.055693547 ubox
7 73 0.973702018 ubox
7 74 0.025152792 ubox
7 100 0.009237175 ubox
8 19 0.029114424 ubox
8 51 0.003500458 ubox
8 72 0.995609630 ubox
8 73 0.019684687 ubox
8 99 0.008867963 ubox
9 18 0.029115609 ubox
9 49 0.003527748 ubox
9 71 0.999476713 ubox
10 17 0.027917411 ubox
10 48 0.003484150 ubox
10 70 0.999035012 ubox
11 69 0.998597413 ubox
12 68 0.997784784 ubox
13 45 0.003466078 ubox
13 66 0.031637111 ubox
13 67 0.962754431 ubox
14 44 0.003536035 ubox
14 65 0.028873104 ubox
15 43 0.003538890 ubox
15 64 0.029187751 ubox
15 65 0.996441978 ubox
16 42 0.003514981 ubox
16 64 0.998943038 ubox
17 63 0.993677357 ubox
19 60 0.995777753 ubox
20 59 0.998745758 ubox
21 58 0.997510493 ubox
22 41 0.016590551 ubox
22 60 0.007818288 ubox
23 39 0.028259392 ubox
23 40 0.011813878 ubox
23 56 0.988880112 ubox
23 59 0.006856587 ubox
24 38 0.032452779 ubox
24 51 0.010104112 ubox
24 54 0.006053580 ubox
24 55 0.998902732 ubox
24 58 0.005699666 ubox
25 37 0.032546097 ubox
25 50 0.011750913 ubox
25 53 0.006994028 ubox
25 54 0.998033109 ubox
26 36 0.032590295 ubox
26 49 0.020472032 ubox
27 35 0.032578387 ubox
27 52 0.978655472 ubox
27 53 0.039671535 ubox
28 34 0.032520915 ubox
28 46 0.020952589 ubox
28 51 0.998190494 ubox
28 52 0.008966938 ubox
28 53 0.018590950 ubox
28 54 0.003235394 ubox
29 45 0.018967721 ubox
29 50 0.993881462 ubox
29 52 0.020505694 ubox
29 53 0.003531724 ubox
29 100 0.003686073 ubox
30 45 0.874266146 ubox
30 50 0.005211726 ubox
30 51 0.019521717 ubox
30 63 0.008162964 ubox
30 99 0.003796558 ubox
31 44 0.880848311 ubox
31 48 0.395655757 ubox
31 49 0.022437944 ubox
31 62 0.008663686 ubox
31 98 0.003712731 ubox
32 43 0.899343415 ubox
32 44 0.372311391 ubox
32 47 0.212839313 ubox
32 48 0.011363099 ubox
32 61 0.008849395 ubox
32 97 0.003188521 ubox
33 42 0.915693117 ubox
33 43 0.394793018 ubox
33 60 0.006308130 ubox
34 41 0.916237713 ubox
34 42 0.393541132 ubox
34 43 0.023959002 ubox
34 49 0.004095537 ubox
34 60 0.011944938 ubox
35 40 0.907602058 ubox
35 41 0.387684301 ubox
35 42 0.023768293 ubox
35 47 0.010808490 ubox
35 48 0.003663855 ubox
35 59 0.013502591 ubox
36 45 0.058030503 ubox
36 46 0.012021524 ubox
36 58 0.013524342 ubox
37 43 0.005243808 ubox
37 44 0.059903159 ubox
37 57 0.013045079 ubox
38 42 0.005297466 ubox
38 43 0.059840403 ubox
41 53 0.008451655 ubox
41 55 0.015242775 ubox
42 52 0.010093204 ubox
42 54 0.015169579 ubox
42 55 0.029681344 ubox
43 51 0.010848258 ubox
43 53 0.014592142 ubox
43 54 0.029760047 ubox
44 50 0.010807960 ubox
44 52 0.013994920 ubox
44 53 0.029694837 ubox
45 49 0.010068320 ubox
46 64 0.005122574 ubox
47 63 0.004976800 ubox
48 100 0.006379362 ubox
49 58 0.003487753 ubox
49 99 0.006609600 ubox
49 105 0.007201852 ubox
50 57 0.003326559 ubox
50 61 0.009136877 ubox
50 98 0.006390907 ubox
50 104 0.007284570 ubox
51 60 0.009696274 ubox
51 64 0.003636473 ubox
51 103 0.007290212 ubox
52 59 0.009155635 ubox
52 62 0.006303913 ubox
52 95 0.003376817 ubox
53 61 0.007270932 ubox
53 94 0.003723152 ubox
54 60 0.007347563 ubox
54 65 0.013335207 ubox
54 71 0.003618031 ubox
55 64 0.014062391 ubox
55 70 0.003667313 ubox
55 93 0.007943210 ubox
56 63 0.012856290 ubox
56 67 0.003424436 ubox
56 92 0.008386633 ubox
57 66 0.004626530 ubox
57 91 0.008402374 ubox
58 65 0.004717673 ubox
58 90 0.008405103 ubox
59 89 0.008284860 ubox
60 88 0.007990368 ubox
61 87 0.007363009 ubox
63 86 0.003184362 ubox
63 101 0.004905185 ubox
64 78 0.005282761 ubox
64 100 0.005624991 ubox
65 77 0.008717671 ubox
65 82 0.004988313 ubox
65 99 0.005707521 ubox
65 102 0.004334121 ubox
65 105 0.019947729 ubox
66 76 0.008777886 ubox
66 81 0.004960273 ubox
66 98 0.005655236 ubox
66 101 0.004198310 ubox
66 104 0.020944171 ubox
67 75 0.008796810 ubox
67 80 0.003769309 ubox
67 97 0.005404264 ubox
67 103 0.020325470 ubox
68 74 0.008730753 ubox
69 80 0.004678650 ubox
69 101 0.023813419 ubox
70 78 0.004059243 ubox
70 79 0.004917241 ubox
70 100 0.025210608 ubox
71 77 0.005031656 ubox
71 78 0.003498163 ubox
71 96 0.010207189 ubox
71 99 0.025469223 ubox
71 102 0.004123183 ubox
72 76 0.004595128 ubox
72 95 0.010654458 ubox
72 98 0.025353003 ubox
72 101 0.004286501 ubox
73 94 0.012581708 ubox
73 95 0.003764192 ubox
73 97 0.024047618 ubox
73 98 0.012846194 ubox
74 93 0.013327316 ubox
74 97 0.017856753 ubox
74 101 0.010385120 ubox
75 92 0.014091466 ubox
75 100 0.014145644 ubox
76 91 0.014247510 ubox
77 84 0.004552313 ubox
77 90 0.014235285 ubox
78 83 0.004191863 ubox
78 85 0.012353012 ubox
78 94 0.948419022 ubox
79 84 0.012877272 ubox
79 90 0.004585029 ubox
79 93 0.999007776 ubox
80 89 0.004779620 ubox
80 92 0.998371616 ubox
81 88 0.003979420 ubox
81 91 0.998879013 ubox
82 90 0.999325346 ubox
82 93 0.006119305 ubox
83 89 0.972218457 ubox
83 92 0.006107888 ubox
83 100 0.003385898 ubox
84 88 0.659639280 ubox
84 91 0.005103724 ubox
84 99 0.003545519 ubox
88 98 0.011581925 ubox
88 104 0.009017399 ubox
89 97 0.013506344 ubox
89 103 0.009872940 ubox
90 96 0.013813598 ubox
90 99 0.007558731 ubox
90 102 0.010495321 ubox
90 105 0.018315122 ubox
91 95 0.012445594 ubox
91 98 0.007502628 ubox
91 101 0.010200865 ubox
91 104 0.018638072 ubox
92 97 0.006683093 ubox
92 103 0.018746064 ubox
93 102 0.019054282 ubox
6 74 0.9500000 lbox
7 73 0.9500000 lbox
8 72 0.9500000 lbox
9 71 0.9500000 lbox
10 70 0.9500000 lbox
11 69 0.9500000 lbox
12 68 0.9500000 lbox
13 67 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
17 63 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
21 58 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
78 94 0.9500000 lbox
79 93 0.9500000 lbox
80 92 0.9500000 lbox
81 91 0.9500000 lbox
82 90 0.9500000 lbox
83 89 0.9500000 lbox
showpage
end
%%EOF
