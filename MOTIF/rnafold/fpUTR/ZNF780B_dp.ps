%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF780B)
} def

/sequence { (\
GGGGUUGACGACCUAGCUGGGGGAGAAGCCCGAGGAAGAUUGACCAAUUUUGUAAUUCUAGAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.023403231 ubox
1 14 0.116338379 ubox
1 31 0.070718356 ubox
1 45 0.052846359 ubox
1 49 0.016890183 ubox
1 50 0.020174855 ubox
1 51 0.481605611 ubox
1 57 0.004717831 ubox
1 58 0.038561123 ubox
1 59 0.149256149 ubox
2 12 0.023553185 ubox
2 13 0.123117423 ubox
2 14 0.290329861 ubox
2 30 0.070391713 ubox
2 31 0.148392024 ubox
2 44 0.051538188 ubox
2 45 0.059059464 ubox
2 48 0.019855365 ubox
2 49 0.025885635 ubox
2 50 0.578040426 ubox
2 51 0.029806306 ubox
2 56 0.005115754 ubox
2 57 0.031435774 ubox
2 58 0.157942003 ubox
2 59 0.027163423 ubox
3 12 0.123062678 ubox
3 13 0.302684681 ubox
3 14 0.003963491 ubox
3 18 0.007509363 ubox
3 29 0.069983680 ubox
3 30 0.148739407 ubox
3 41 0.004936726 ubox
3 44 0.051424759 ubox
3 45 0.637603099 ubox
3 48 0.020117751 ubox
3 49 0.619577633 ubox
3 50 0.027604194 ubox
3 51 0.008590647 ubox
3 56 0.018721540 ubox
3 57 0.154418143 ubox
3 58 0.027660790 ubox
3 59 0.007332562 ubox
4 12 0.303444209 ubox
4 13 0.003973925 ubox
4 17 0.008483562 ubox
4 29 0.148922742 ubox
4 40 0.006618461 ubox
4 44 0.639101100 ubox
4 48 0.645024290 ubox
4 49 0.021218264 ubox
4 50 0.004822110 ubox
4 56 0.152317222 ubox
4 57 0.021330258 ubox
4 58 0.007350862 ubox
4 65 0.004655625 ubox
5 11 0.301457660 ubox
5 16 0.008608036 ubox
5 26 0.004482179 ubox
5 27 0.068129746 ubox
5 28 0.148779876 ubox
5 39 0.006766380 ubox
5 43 0.636836012 ubox
5 47 0.648395468 ubox
5 55 0.151823476 ubox
5 64 0.004636215 ubox
6 10 0.271655187 ubox
6 15 0.008715400 ubox
6 25 0.005815219 ubox
6 26 0.067683128 ubox
6 27 0.144901645 ubox
6 38 0.005752974 ubox
6 42 0.505866739 ubox
6 46 0.649404769 ubox
6 52 0.004649394 ubox
6 54 0.145531716 ubox
6 63 0.004238880 ubox
7 14 0.008320697 ubox
7 41 0.428451147 ubox
7 45 0.647906948 ubox
7 49 0.009054193 ubox
7 50 0.009156875 ubox
7 51 0.012620952 ubox
7 53 0.116353913 ubox
7 58 0.004676027 ubox
8 40 0.405796880 ubox
8 48 0.011336712 ubox
8 49 0.011407567 ubox
8 50 0.015295705 ubox
8 53 0.086449590 ubox
8 57 0.004500500 ubox
9 42 0.753685993 ubox
9 52 0.115550875 ubox
10 41 0.794069888 ubox
10 49 0.003896216 ubox
10 50 0.007083282 ubox
10 51 0.105893639 ubox
11 40 0.787610181 ubox
11 48 0.004460905 ubox
11 49 0.008594749 ubox
11 50 0.098222791 ubox
11 53 0.004478893 ubox
12 20 0.064412914 ubox
12 21 0.119297917 ubox
12 22 0.089201957 ubox
12 23 0.034280176 ubox
12 35 0.096958126 ubox
12 52 0.005025863 ubox
13 19 0.064631915 ubox
13 20 0.119321342 ubox
13 21 0.089159918 ubox
13 22 0.034314052 ubox
13 34 0.095951003 ubox
13 35 0.034112191 ubox
13 38 0.903556108 ubox
13 61 0.020390262 ubox
14 19 0.111678200 ubox
14 20 0.087418840 ubox
14 21 0.033406173 ubox
14 33 0.090530322 ubox
14 34 0.018762325 ubox
14 37 0.899723559 ubox
14 42 0.003509516 ubox
14 60 0.022499291 ubox
15 41 0.004778431 ubox
15 49 0.004573691 ubox
15 59 0.024732686 ubox
16 29 0.024911069 ubox
16 40 0.005018888 ubox
16 48 0.004525276 ubox
16 53 0.005043284 ubox
16 58 0.024509930 ubox
17 28 0.024954040 ubox
17 34 0.977405733 ubox
17 35 0.040703144 ubox
17 38 0.003308776 ubox
17 52 0.004944447 ubox
17 61 0.025168336 ubox
18 27 0.024917703 ubox
18 32 0.092534158 ubox
18 33 0.975448492 ubox
18 34 0.037411923 ubox
18 46 0.007370955 ubox
18 60 0.025202456 ubox
19 30 0.006965870 ubox
19 31 0.108867798 ubox
19 45 0.007760477 ubox
19 59 0.024897026 ubox
20 29 0.006991351 ubox
20 30 0.108640156 ubox
20 31 0.978381180 ubox
20 44 0.007730895 ubox
20 58 0.024186614 ubox
21 29 0.108313261 ubox
21 30 0.978398421 ubox
21 31 0.052412388 ubox
21 57 0.006486922 ubox
22 29 0.977659723 ubox
22 30 0.055173897 ubox
22 31 0.006016749 ubox
22 56 0.005131917 ubox
23 29 0.057609564 ubox
23 30 0.006026215 ubox
23 41 0.006146134 ubox
24 40 0.006124361 ubox
29 35 0.007099476 ubox
30 34 0.007053212 ubox
31 42 0.005253484 ubox
32 41 0.009216905 ubox
32 49 0.004756563 ubox
32 50 0.003539248 ubox
32 51 0.003766436 ubox
32 57 0.012631118 ubox
32 58 0.039994778 ubox
33 40 0.009395137 ubox
33 41 0.004182790 ubox
33 48 0.004757571 ubox
33 49 0.003776523 ubox
33 50 0.003839359 ubox
33 51 0.003978943 ubox
33 56 0.013980224 ubox
33 57 0.039560711 ubox
33 59 0.052476562 ubox
34 40 0.004335503 ubox
34 45 0.083793681 ubox
34 50 0.004055079 ubox
34 51 0.006107837 ubox
34 56 0.032628194 ubox
34 58 0.054030842 ubox
34 59 0.089137656 ubox
35 41 0.007718584 ubox
35 44 0.084624292 ubox
35 49 0.005217536 ubox
35 50 0.015213114 ubox
35 51 0.019941286 ubox
35 56 0.003785234 ubox
35 57 0.053211883 ubox
35 58 0.115388351 ubox
36 40 0.007034559 ubox
36 48 0.005038226 ubox
36 49 0.016074628 ubox
36 50 0.018898346 ubox
36 51 0.183753330 ubox
36 56 0.048995280 ubox
36 57 0.114192153 ubox
37 48 0.015825005 ubox
37 49 0.016527178 ubox
37 50 0.195826541 ubox
37 51 0.022982555 ubox
37 56 0.108451676 ubox
37 57 0.005196781 ubox
37 59 0.181245446 ubox
38 48 0.011956775 ubox
38 49 0.202075761 ubox
38 50 0.024307629 ubox
38 51 0.014106323 ubox
38 56 0.005032762 ubox
38 57 0.069073051 ubox
38 58 0.187800921 ubox
39 48 0.205248753 ubox
39 49 0.024281196 ubox
39 50 0.014372906 ubox
39 53 0.051384216 ubox
39 56 0.093626900 ubox
39 57 0.178542522 ubox
40 47 0.203306484 ubox
40 52 0.051027227 ubox
40 55 0.110534550 ubox
40 61 0.006344266 ubox
40 62 0.010907766 ubox
40 63 0.011112089 ubox
40 64 0.005900153 ubox
41 46 0.180537463 ubox
41 52 0.058174859 ubox
41 54 0.110376866 ubox
41 60 0.009200441 ubox
41 61 0.011661379 ubox
41 62 0.012555641 ubox
41 63 0.006919262 ubox
42 49 0.025956366 ubox
42 50 0.040982638 ubox
42 51 0.068787525 ubox
42 53 0.091848952 ubox
42 57 0.004318446 ubox
42 58 0.018591011 ubox
42 59 0.008582426 ubox
43 48 0.023783461 ubox
43 49 0.040164369 ubox
43 50 0.065245040 ubox
43 53 0.159505674 ubox
43 56 0.005292041 ubox
43 57 0.017369426 ubox
44 52 0.160587063 ubox
45 52 0.114622829 ubox
46 51 0.112504334 ubox
46 57 0.136998565 ubox
47 53 0.022602704 ubox
47 56 0.154977871 ubox
48 52 0.021580379 ubox
48 55 0.156446405 ubox
48 61 0.007873103 ubox
48 62 0.037830643 ubox
48 63 0.245567046 ubox
48 64 0.088613804 ubox
49 54 0.150133905 ubox
49 55 0.014677693 ubox
49 60 0.011291958 ubox
49 61 0.040516971 ubox
49 62 0.284810052 ubox
49 63 0.106223347 ubox
49 64 0.236986402 ubox
50 54 0.014456733 ubox
50 60 0.039670607 ubox
50 61 0.289890521 ubox
50 62 0.109157900 ubox
50 63 0.284206376 ubox
50 64 0.024702125 ubox
51 60 0.291097553 ubox
51 61 0.106594803 ubox
51 62 0.293725499 ubox
51 63 0.029085045 ubox
52 59 0.270466275 ubox
52 65 0.041093127 ubox
53 60 0.298048123 ubox
53 64 0.040608339 ubox
54 59 0.283310613 ubox
56 62 0.029077161 ubox
56 63 0.032536929 ubox
56 64 0.023149918 ubox
57 61 0.028289890 ubox
57 62 0.032523832 ubox
57 63 0.026093203 ubox
1 51 0.9500000 lbox
2 50 0.9500000 lbox
3 49 0.9500000 lbox
4 48 0.9500000 lbox
5 47 0.9500000 lbox
6 46 0.9500000 lbox
7 45 0.9500000 lbox
9 42 0.9500000 lbox
10 41 0.9500000 lbox
11 40 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
17 34 0.9500000 lbox
18 33 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
showpage
end
%%EOF
