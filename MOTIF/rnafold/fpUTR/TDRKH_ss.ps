%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGAAGUGGCGGCUGAAGCGCCGCCGGCGGGGCUCACUGUGGUGGUGUGAGUGGGAGGCGGCGGCGCUGGUGGCUGCAGCUGGGGUGAGGCGCGAGGCGGCGCACUCGACGGCUGACUGGAGCAGCGGUAAAGGCGAGGAUGGAGACCGAAGGAUAUAAGUCAAAGAGUACAGCAGAAA\
) } def
/len { sequence length } bind def

/coor [
[17.87054062 209.00813293]
[3.04927421 211.31681824]
[-11.56928635 207.95561218]
[-23.89379311 199.40538025]
[-32.16108322 186.88931274]
[-35.18843460 172.19798279]
[-32.54274750 157.43315125]
[-24.60251427 144.70709229]
[-12.50207329 135.83963013]
[-27.48826027 136.48321533]
[-42.47444916 137.12678528]
[-57.46063614 137.77035522]
[-72.44682312 138.41392517]
[-85.90232086 146.73619080]
[-98.94984436 139.55207825]
[-113.93602753 140.19564819]
[-128.92221069 140.83921814]
[-134.73149109 144.07919312]
[-140.44325256 143.90612793]
[-144.43206787 141.23869324]
[-159.43150330 141.36744690]
[-174.43095398 141.49620056]
[-189.43040466 141.62495422]
[-204.42985535 141.75370789]
[-219.42930603 141.88246155]
[-234.42874146 142.01121521]
[-249.42819214 142.13996887]
[-264.42764282 142.26870728]
[-279.42709351 142.39746094]
[-286.23419189 157.16284180]
[-298.75030518 167.44940186]
[-314.44155884 171.24021912]
[-330.15972900 167.82685852]
[-342.77386475 157.94110107]
[-349.79394531 143.59873962]
[-364.78897095 143.98495483]
[-379.78399658 144.37117004]
[-394.77905273 144.75740051]
[-409.77407837 145.14361572]
[-424.76910400 145.52983093]
[-432.68475342 158.77166748]
[-446.51303101 165.61140442]
[-461.84140015 163.86651611]
[-473.77862549 154.09378052]
[-478.51556396 139.41166687]
[-474.54071045 124.50514984]
[-463.12240601 114.13086700]
[-447.90417480 111.59921265]
[-433.74212646 117.71801758]
[-425.15530396 130.53480530]
[-410.16027832 130.14859009]
[-395.16525269 129.76235962]
[-380.17022705 129.37614441]
[-365.17520142 128.98992920]
[-350.18017578 128.60371399]
[-345.10702515 115.67736053]
[-335.45651245 105.63242340]
[-322.66427612 100.01091003]
[-308.65161133 99.69324493]
[-295.53692627 104.76054382]
[-285.31546021 114.47730255]
[-279.55584717 127.39801788]
[-264.55639648 127.26926422]
[-249.55694580 127.14051819]
[-234.55749512 127.01176453]
[-219.55804443 126.88301086]
[-204.55860901 126.75425720]
[-189.55915833 126.62550354]
[-174.55970764 126.49675751]
[-159.56025696 126.36800385]
[-144.56082153 126.23925018]
[-129.56578064 125.85302734]
[-114.57959747 125.20945740]
[-99.59341431 124.56588745]
[-87.20982361 116.28964996]
[-73.09039307 123.42773438]
[-58.10420609 122.78416443]
[-43.11801910 122.14059448]
[-28.13183212 121.49701691]
[-13.14564514 120.85344696]
[-4.99694824 115.34837341]
[5.78547096 117.90500641]
[20.25756264 113.96057129]
[34.72965622 110.01614380]
[49.20174789 106.07170868]
[51.76296616 82.95545197]
[64.29329681 63.36177444]
[84.20310211 51.34009552]
[107.37763977 49.37492371]
[111.69339752 35.00918961]
[116.00914764 20.64345551]
[120.32489777 6.27772284]
[124.51718140 -8.12452507]
[128.58569336 -22.56222725]
[132.65420532 -36.99992752]
[136.72270203 -51.43762970]
[128.77975464 -65.10090637]
[132.90534973 -80.35721588]
[146.65184021 -88.15526581]
[161.86367798 -83.86860657]
[169.51596069 -70.04044342]
[165.06871033 -54.87477112]
[151.16041565 -47.36912155]
[147.09190369 -32.93141937]
[143.02339172 -18.49371910]
[138.95487976 -4.05601692]
[140.16993713 3.25310040]
[134.69062805 10.59347439]
[130.37487793 24.95920753]
[126.05912781 39.32493973]
[121.74337769 53.69067383]
[134.42796326 62.15764236]
[144.05310059 73.98746490]
[157.94796753 68.33654785]
[167.81654358 55.97039032]
[182.52098083 58.34291840]
[196.41583252 52.69200134]
[207.36367798 37.90001678]
[224.63496399 40.94928741]
[238.43077087 35.06067657]
[252.22657776 29.17206955]
[266.02236938 23.28345871]
[271.68011475 8.52657032]
[286.14923096 2.16888666]
[300.84545898 7.98230839]
[307.04980469 22.51783562]
[301.08132935 37.15179825]
[286.48101807 43.20212555]
[271.91098022 37.07926559]
[258.11517334 42.96787643]
[244.31938171 48.85648346]
[230.52357483 54.74509430]
[225.71495056 65.86180115]
[214.24905396 70.87335968]
[202.06675720 66.58686066]
[188.17189026 72.23777771]
[179.29716492 84.19974518]
[163.59887695 82.23140717]
[149.70402527 87.88232422]
[154.80377197 94.13045502]
[159.05497742 101.52058411]
[173.38313293 105.95948792]
[186.43064880 97.33995056]
[201.96017456 99.17512512]
[212.63914490 110.59850311]
[213.42527771 126.21631622]
[203.94738770 138.65431213]
[188.68063354 142.03964233]
[174.83352661 134.77384949]
[168.94422913 120.28765106]
[154.61607361 115.84874725]
[150.70007324 122.24523163]
[163.49291992 130.07743835]
[155.66050720 142.87013245]
[142.86808777 135.03819275]
[138.95210266 141.43467712]
[149.42126465 152.17695618]
[159.89042664 162.91925049]
[175.81298828 166.84402466]
[180.11479187 182.66889954]
[168.37051392 194.11457825]
[152.66165161 189.40675354]
[149.14813232 173.38841248]
[138.67897034 162.64611816]
[128.20980835 151.90383911]
[117.96922302 155.35142517]
[107.42837524 156.83230591]
[96.95589447 156.35415649]
[86.90733337 153.99214172]
[77.61309814 149.88439941]
[69.36762238 144.22544861]
[62.42003632 137.25762939]
[56.96676254 129.26129150]
[53.14617920 120.54380035]
[38.67408752 124.48823547]
[24.20199585 128.43266296]
[9.72990417 132.37710571]
[23.95238876 137.14375305]
[35.38715363 146.85179138]
[42.39833069 160.11239624]
[43.98288727 175.02845764]
[39.91413879 189.46609497]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 80]
[10 79]
[11 78]
[12 77]
[13 76]
[15 74]
[16 73]
[17 72]
[20 71]
[21 70]
[22 69]
[23 68]
[24 67]
[25 66]
[26 65]
[27 64]
[28 63]
[29 62]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[82 177]
[83 176]
[84 175]
[85 174]
[89 111]
[90 110]
[91 109]
[92 108]
[93 106]
[94 105]
[95 104]
[96 103]
[113 139]
[114 138]
[116 136]
[117 135]
[119 132]
[120 131]
[121 130]
[122 129]
[141 151]
[142 150]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
