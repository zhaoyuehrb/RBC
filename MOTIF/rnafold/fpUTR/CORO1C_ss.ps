%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGACCAGCUCUGGGCCCUGCAGAUCUCGGUUGGGGGUCAGGCGGGGCGGGGCAGAGCUGGAGCUGGAGUAAUGUGGGUGGGGGCGGCUUGGGAAGAGGCUGAGCCCGGCCAAGGGAGCAGAGGGCUGGGACUGGCUGGGGGUUGGGAGGGGAGGAACGAAGCAGGAAGGCUGUCGGAUCGGGGGCCCAGGGUGUCCGAGUGAACUGGGUGAUUCAGAGACACG\
) } def
/len { sequence length } bind def

/coor [
[44.58068848 259.12481689]
[29.62395287 257.98638916]
[16.15990448 251.37432861]
[6.11472940 240.23455811]
[0.92550081 226.16075134]
[1.33459640 211.16633606]
[7.28449011 197.39494324]
[-5.07838249 205.88961792]
[-17.44125557 214.38427734]
[-29.80412674 222.87895203]
[-42.16699982 231.37362671]
[-54.52987289 239.86828613]
[-66.89274597 248.36296082]
[-79.25561523 256.85763550]
[-91.61849213 265.35229492]
[-99.67331696 285.21798706]
[-120.30650330 285.91333008]
[-132.30613708 294.91381836]
[-144.30577087 303.91430664]
[-156.30540466 312.91479492]
[-168.30502319 321.91528320]
[-180.30465698 330.91577148]
[-192.30429077 339.91625977]
[-199.14865112 357.01687622]
[-216.64610291 358.42282104]
[-228.52003479 367.58853149]
[-240.39395142 376.75421143]
[-252.26786804 385.91992188]
[-264.14178467 395.08560181]
[-276.01571655 404.25131226]
[-279.48175049 419.91546631]
[-293.95233154 426.84237671]
[-308.32684326 419.71829224]
[-311.57843018 404.00820923]
[-301.21270752 391.76354980]
[-285.18142700 392.37738037]
[-273.30749512 383.21170044]
[-261.43356323 374.04598999]
[-249.55964661 364.88031006]
[-237.68572998 355.71459961]
[-225.81179810 346.54891968]
[-223.96008301 334.60220337]
[-214.15274048 326.86810303]
[-201.30477905 327.91662598]
[-189.30514526 318.91613770]
[-177.30552673 309.91564941]
[-165.30589294 300.91516113]
[-153.30625916 291.91467285]
[-141.30662537 282.91418457]
[-129.30699158 273.91369629]
[-129.50096130 265.05694580]
[-125.54319000 256.97796631]
[-118.20542145 251.53894043]
[-109.05333710 250.05747986]
[-100.11315918 252.98942566]
[-87.75028229 244.49475098]
[-75.38741302 236.00007629]
[-63.02453995 227.50541687]
[-50.66166687 219.01074219]
[-38.29879379 210.51608276]
[-25.93592262 202.02140808]
[-13.57305050 193.52674866]
[-1.21017766 185.03207397]
[0.49364460 178.63682556]
[6.06038904 173.65570068]
[14.28651619 172.37025452]
[25.07501030 161.94871521]
[35.86350632 151.52717590]
[46.65200043 141.10565186]
[57.44049454 130.68411255]
[51.72949219 120.56172180]
[48.38707352 109.43038177]
[47.57725143 97.83631134]
[49.33975983 86.34840393]
[53.58811188 75.53037262]
[60.11384964 65.91304016]
[68.59675598 57.96831512]
[61.42873764 44.79183960]
[54.26071548 31.61536789]
[40.86936569 23.19026756]
[41.58409500 8.31282139]
[34.41607666 -4.86365271]
[27.24805450 -18.04012680]
[20.08003235 -31.21660042]
[5.18974781 -35.79013062]
[-1.89194119 -49.25506210]
[2.55998397 -63.42248535]
[-4.60803699 -76.59896088]
[-11.77605820 -89.77543640]
[-18.94408035 -102.95191193]
[-26.11210060 -116.12837982]
[-33.28012085 -129.30485535]
[-48.50629044 -133.54034424]
[-56.20500946 -147.34271240]
[-51.80877304 -162.52325439]
[-37.92578888 -170.07560730]
[-22.79257965 -165.51911926]
[-15.38741589 -151.55706787]
[-20.10364723 -136.47288513]
[-12.93562698 -123.29640198]
[-5.76760530 -110.11992645]
[1.40041566 -96.94345856]
[8.56843662 -83.76698303]
[15.73645782 -70.59050751]
[30.04936409 -66.63117981]
[37.50646210 -53.37047195]
[33.25650787 -38.38462067]
[40.42452621 -25.20814896]
[47.59254837 -12.03167439]
[54.76057053 1.14480019]
[67.63921356 8.62742901]
[67.43718719 24.44734573]
[74.60520935 37.62382126]
[81.77323151 50.80029297]
[93.66923523 47.91595840]
[105.90981293 47.86651611]
[117.82872772 50.65465927]
[128.77723694 56.12863541]
[138.15942383 63.99049377]
[145.46461487 73.81232452]
[150.29521179 85.05953217]
[165.13711548 82.88745117]
[179.97901917 80.71537781]
[187.24977112 67.13441467]
[200.96298218 60.51617050]
[215.76864624 63.20993805]
[226.02630615 73.97647095]
[240.86820984 71.80438995]
[255.71011353 69.63231659]
[268.24444580 59.97823334]
[281.95797729 65.79100800]
[296.79986572 63.61893463]
[311.64178467 61.44685745]
[326.48367310 59.27478027]
[333.75442505 45.69382095]
[347.46762085 39.07557297]
[362.27328491 41.76934052]
[372.53097534 52.53587341]
[387.37286377 50.36379623]
[402.21478271 48.19172287]
[417.05667114 46.01964569]
[431.89855957 43.84756851]
[442.09384155 29.62549973]
[459.08676147 27.23013306]
[472.28570557 37.66087723]
[487.09613037 35.28360748]
[501.90655518 32.90634155]
[516.71697998 30.52907372]
[518.21124268 23.87430954]
[521.17034912 17.74945259]
[525.43212891 12.47121334]
[530.76721191 8.31042671]
[536.89154053 5.47815943]
[543.48132324 4.11501503]
[550.19024658 4.28417015]
[556.66760254 5.96849632]
[562.57684326 9.07188988]
[567.61273193 13.42471409]
[571.51727295 18.79305649]
[574.09295654 24.89129066]
[589.08398438 24.37240791]
[604.07501221 23.85352707]
[619.06207275 23.23092270]
[634.04449463 22.50462723]
[649.02691650 21.77833176]
[659.46105957 9.90804958]
[675.23785400 8.97595692]
[686.99719238 19.53504753]
[687.76239014 35.32079697]
[677.07958984 46.96780396]
[661.28662109 47.56610489]
[649.75323486 36.76073837]
[634.77081299 37.48703384]
[619.78839111 38.21332932]
[613.26715088 41.67273712]
[604.59393311 38.84454727]
[589.60290527 39.36343002]
[574.61187744 39.88231277]
[560.70220947 58.87043762]
[537.03680420 61.36057663]
[519.09423828 45.33949661]
[504.28381348 47.71676254]
[489.47338867 50.09402847]
[474.66296387 52.47129822]
[468.65036011 63.86017609]
[457.00372314 69.79835510]
[443.86968994 67.92032623]
[434.07064819 58.68947220]
[419.22875977 60.86154938]
[404.38684082 63.03362274]
[389.54495239 65.20570374]
[374.70303345 67.37777710]
[367.96078491 80.63220978]
[354.54794312 87.45568085]
[339.51330566 85.04460907]
[328.65576172 74.11668396]
[313.81384277 76.28875732]
[298.97195435 78.46083832]
[284.13003540 80.63291168]
[272.65731812 90.13163757]
[257.88220215 84.47422028]
[243.04028320 86.64629364]
[228.19837952 88.81837463]
[221.45613098 102.07279968]
[208.04328918 108.89627838]
[193.00865173 106.48520660]
[182.15109253 95.55728149]
[167.30918884 97.72935486]
[152.46728516 99.90142822]
[148.91467285 118.97842407]
[138.67114258 135.45939636]
[123.13787079 147.08996582]
[104.43962097 152.27920532]
[85.13408661 150.31730652]
[67.86203003 141.47261047]
[57.07353592 151.89413452]
[46.28504181 162.31567383]
[35.49654388 172.73721313]
[24.70805168 183.15873718]
[39.38729477 180.07333374]
[54.16247559 182.66062927]
[66.91983032 190.55049133]
[75.83428192 202.61416626]
[79.63052368 217.12583923]
[77.76544952 232.00944519]
[70.50588226 245.13569641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 63]
[8 62]
[9 61]
[10 60]
[11 59]
[12 58]
[13 57]
[14 56]
[15 55]
[17 50]
[18 49]
[19 48]
[20 47]
[21 46]
[22 45]
[23 44]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[66 219]
[67 218]
[68 217]
[69 216]
[70 215]
[77 114]
[78 113]
[79 112]
[81 110]
[82 109]
[83 108]
[84 107]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[121 209]
[122 208]
[123 207]
[127 203]
[128 202]
[129 201]
[131 199]
[132 198]
[133 197]
[134 196]
[138 192]
[139 191]
[140 190]
[141 189]
[142 188]
[145 184]
[146 183]
[147 182]
[148 181]
[160 178]
[161 177]
[162 176]
[163 174]
[164 173]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
