%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABHD15)
} def

/sequence { (\
AGCUCGCCGAGUAGACGGCCCCGCCGCCCGCUGCCCGCCGGGGCUCUCCAGCUUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 45 0.056848019 ubox
1 53 0.061458290 ubox
2 12 0.120961582 ubox
2 24 0.031642386 ubox
2 27 0.003611740 ubox
2 31 0.003228645 ubox
2 34 0.003348497 ubox
2 38 0.019053226 ubox
2 44 0.065330551 ubox
2 52 0.070690968 ubox
2 57 0.089630272 ubox
3 11 0.123726486 ubox
3 23 0.031663280 ubox
3 26 0.003611765 ubox
3 30 0.003218539 ubox
3 33 0.003352149 ubox
3 37 0.018817651 ubox
3 41 0.008282927 ubox
3 42 0.072570955 ubox
3 43 0.058971370 ubox
3 51 0.070708418 ubox
3 56 0.088424729 ubox
4 10 0.123753916 ubox
4 15 0.007310724 ubox
4 40 0.003855834 ubox
4 41 0.080290449 ubox
4 42 0.051399194 ubox
4 50 0.067470142 ubox
5 9 0.122753922 ubox
5 14 0.008696467 ubox
5 37 0.004868837 ubox
5 40 0.088939470 ubox
5 41 0.042668434 ubox
5 56 0.072423473 ubox
6 12 0.006373417 ubox
6 19 0.051718706 ubox
6 34 0.018007938 ubox
6 36 0.005677354 ubox
6 38 0.094653047 ubox
6 39 0.095912942 ubox
6 52 0.070357186 ubox
6 55 0.078867799 ubox
6 57 0.941834918 ubox
7 11 0.006540316 ubox
7 18 0.051902591 ubox
7 33 0.017701973 ubox
7 37 0.070688520 ubox
7 41 0.004583854 ubox
7 51 0.070381502 ubox
7 56 0.924363350 ubox
8 17 0.052066785 ubox
8 33 0.003910634 ubox
8 37 0.133794367 ubox
8 40 0.004662165 ubox
8 56 0.260064018 ubox
9 16 0.051257770 ubox
9 29 0.003676572 ubox
9 36 0.151051401 ubox
9 39 0.004572784 ubox
9 46 0.019849727 ubox
9 48 0.089277478 ubox
9 54 0.873158970 ubox
9 55 0.320778496 ubox
10 32 0.021377180 ubox
10 45 0.019686229 ubox
10 47 0.089413530 ubox
10 53 0.942159802 ubox
10 54 0.236483082 ubox
11 27 0.003483325 ubox
11 31 0.022742421 ubox
11 34 0.156418894 ubox
11 44 0.019357656 ubox
11 46 0.089289427 ubox
11 52 0.967879766 ubox
11 53 0.086710845 ubox
12 30 0.022376888 ubox
12 33 0.156486463 ubox
12 43 0.018894515 ubox
12 51 0.952345201 ubox
13 32 0.156879534 ubox
13 45 0.009724730 ubox
13 47 0.143755454 ubox
13 53 0.008557570 ubox
14 31 0.156897562 ubox
14 44 0.006370843 ubox
14 46 0.145089733 ubox
14 48 0.943939473 ubox
14 52 0.009034514 ubox
14 55 0.004444827 ubox
15 45 0.111098052 ubox
15 47 0.935110512 ubox
15 54 0.004217504 ubox
16 26 0.051807225 ubox
16 30 0.091130384 ubox
16 40 0.006218119 ubox
17 25 0.053599611 ubox
17 28 0.134647947 ubox
17 29 0.075522001 ubox
17 35 0.005724762 ubox
17 39 0.006287910 ubox
17 45 0.945074036 ubox
17 46 0.150216547 ubox
17 47 0.003679438 ubox
17 48 0.004247598 ubox
17 49 0.004933248 ubox
17 58 0.003247884 ubox
18 24 0.053630252 ubox
18 27 0.144084517 ubox
18 28 0.055668948 ubox
18 34 0.005845442 ubox
18 38 0.006289574 ubox
18 44 0.984888579 ubox
18 45 0.016789219 ubox
18 48 0.003833905 ubox
18 57 0.003268486 ubox
19 23 0.053263548 ubox
19 26 0.152566380 ubox
19 33 0.005949548 ubox
19 37 0.006276943 ubox
19 43 0.985113775 ubox
19 56 0.003242726 ubox
20 41 0.004353523 ubox
20 42 0.985138098 ubox
21 40 0.005171949 ubox
21 41 0.985129869 ubox
22 30 0.004769882 ubox
22 40 0.985002257 ubox
22 56 0.009436253 ubox
23 29 0.005225090 ubox
23 31 0.022527602 ubox
23 34 0.024773213 ubox
23 36 0.006009630 ubox
23 38 0.425035208 ubox
23 39 0.884421579 ubox
23 44 0.023812340 ubox
23 52 0.004446434 ubox
23 55 0.009875224 ubox
23 57 0.014567852 ubox
24 30 0.023460031 ubox
24 33 0.026874384 ubox
24 37 0.598580637 ubox
24 43 0.023840638 ubox
24 51 0.004444645 ubox
24 56 0.014010974 ubox
25 33 0.044602017 ubox
25 37 0.645164687 ubox
25 40 0.004150485 ubox
25 42 0.023637792 ubox
25 56 0.009187581 ubox
26 32 0.036604908 ubox
26 34 0.689722198 ubox
26 36 0.580891049 ubox
26 38 0.282011313 ubox
26 39 0.006908512 ubox
26 44 0.009805929 ubox
26 52 0.020462491 ubox
26 55 0.010215893 ubox
26 57 0.026028001 ubox
27 33 0.698612014 ubox
27 37 0.282308692 ubox
27 41 0.023604193 ubox
27 42 0.021114479 ubox
27 43 0.009762679 ubox
27 51 0.020468116 ubox
27 56 0.026101130 ubox
28 40 0.023623748 ubox
28 41 0.021542371 ubox
28 42 0.009592901 ubox
29 37 0.046693420 ubox
29 40 0.021652113 ubox
29 41 0.009372115 ubox
30 36 0.060067304 ubox
30 38 0.170538938 ubox
30 39 0.017524556 ubox
30 52 0.040551814 ubox
31 37 0.170992689 ubox
31 51 0.040615962 ubox
32 50 0.040418209 ubox
33 44 0.052740629 ubox
33 49 0.018888026 ubox
34 43 0.056025981 ubox
35 42 0.056041723 ubox
36 41 0.056022693 ubox
37 57 0.032991886 ubox
38 51 0.003171457 ubox
38 56 0.023729386 ubox
39 56 0.113820601 ubox
40 49 0.004244471 ubox
40 55 0.123671084 ubox
41 48 0.004278857 ubox
41 49 0.007272619 ubox
41 54 0.124586453 ubox
41 55 0.008085700 ubox
42 47 0.003343701 ubox
42 48 0.007283436 ubox
42 49 0.003728778 ubox
42 53 0.126879069 ubox
42 54 0.005793304 ubox
42 58 0.009574155 ubox
43 47 0.004727508 ubox
43 48 0.003819302 ubox
43 52 0.141045848 ubox
43 57 0.016033850 ubox
44 51 0.141069333 ubox
44 56 0.016044888 ubox
45 50 0.128924903 ubox
51 57 0.058557084 ubox
52 56 0.058268353 ubox
6 57 0.9500000 lbox
7 56 0.9500000 lbox
9 54 0.9500000 lbox
10 53 0.9500000 lbox
11 52 0.9500000 lbox
12 51 0.9500000 lbox
14 48 0.9500000 lbox
15 47 0.9500000 lbox
17 45 0.9500000 lbox
18 44 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
showpage
end
%%EOF
