%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCAAGAUGCUCACGCGAAAAACCCACUCUUCAGUGUCUGAGACCACUCCGCAGCUUUCGGCCUCGGUGAGCGGGUGAACUAAACCCGGGAAACCGCUGAAAGACCCCAGCUUCGACUAGGCCUAGUCGUAGCGGCGGCCAGCGGGAGGGCGUAGCCGUAGUCUUGGCCCACGUCAUUCUGUGCCCCGGGUCAGGUCACCGCCCGGAGGGU\
) } def
/len { sequence length } bind def

/coor [
[255.02905273 87.57955170]
[250.25598145 101.79988098]
[248.14558411 116.65068054]
[236.14517212 125.65013123]
[221.29769897 123.51651764]
[212.31701660 111.50204468]
[214.47386169 96.65792084]
[226.50302124 87.69588470]
[236.70375061 76.69837952]
[246.90447998 65.70087433]
[240.45564270 61.87169266]
[226.23118591 66.63242340]
[212.00671387 71.39315796]
[197.78224182 76.15388489]
[183.55778503 80.91461182]
[169.33331299 85.67534637]
[163.98922729 90.77799988]
[154.86495972 90.39989471]
[140.57214355 94.95129395]
[126.27931976 99.50270081]
[129.75746155 107.48981476]
[130.58656311 117.19203186]
[128.14056396 127.70306396]
[122.10219574 137.91883850]
[112.51946259 146.64064026]
[99.82859802 152.69293213]
[84.83994293 155.04527283]
[72.60198212 163.71893311]
[60.36402130 172.39259338]
[48.12606049 181.06623840]
[41.77585983 196.18598938]
[25.47488403 197.97772217]
[15.99218178 184.59825134]
[23.08274269 169.81121826]
[39.45240402 168.82827759]
[51.69036865 160.15461731]
[63.92832947 151.48097229]
[76.16629028 142.80731201]
[73.16950226 135.93205261]
[58.26440811 134.24740601]
[67.17593384 122.18151855]
[64.17914581 115.30625916]
[49.49483109 118.36746979]
[34.81052399 121.42868042]
[22.94785500 132.75163269]
[7.28879738 127.88070679]
[3.94204450 111.82669067]
[16.35044861 101.10459137]
[31.74930954 106.74436951]
[46.43362045 103.68315887]
[61.11793137 100.62194824]
[61.06287766 93.12214661]
[46.06328201 93.23201752]
[45.95364380 78.23242188]
[60.95277786 78.12255096]
[60.89772797 70.62275696]
[46.17005920 67.77743530]
[31.44239426 64.93211365]
[14.74391270 67.86418152]
[7.30382824 52.62996292]
[19.88306999 41.26338959]
[34.28771591 50.20444870]
[49.01538086 53.04976654]
[63.74304581 55.89508820]
[105.92259979 58.73345566]
[121.72792053 85.20987701]
[136.02073669 80.65847778]
[150.31355286 76.10707092]
[164.57258606 71.45087433]
[178.79705811 66.69014740]
[193.02151489 61.92941666]
[207.24598694 57.16868973]
[221.47045898 52.40795898]
[235.69491577 47.64722824]
[254.92117310 28.25273705]
[277.75375366 48.52972031]
[289.86309814 39.67734909]
[301.97241211 30.82497787]
[314.08172607 21.97260666]
[326.19104004 13.12023640]
[331.27053833 5.53118229]
[338.54370117 4.22834110]
[350.78167725 -4.44531298]
[353.56509399 -19.77144623]
[366.09967041 -28.39343071]
[380.69366455 -25.64542389]
[392.93161011 -34.31907654]
[405.16958618 -42.99273300]
[417.40753174 -51.66638565]
[429.64550781 -60.34004211]
[441.88345337 -69.01369476]
[454.12142944 -77.68734741]
[451.62844849 -96.52550507]
[460.68954468 -114.05239868]
[478.78799438 -123.59236145]
[499.81436157 -120.98651123]
[506.00915527 -134.64758301]
[512.20391846 -148.30863953]
[518.39874268 -161.96971130]
[524.59350586 -175.63076782]
[530.78826904 -189.29182434]
[526.45568848 -196.42127991]
[525.30511475 -204.58940125]
[527.45031738 -212.45704651]
[532.47070312 -218.76373291]
[539.49157715 -222.52957153]
[547.33544922 -223.20719910]
[554.32128906 -236.48115540]
[561.20953369 -249.80604553]
[567.99975586 -263.18112183]
[569.09356689 -272.24746704]
[574.98907471 -276.70159912]
[581.97491455 -289.97555542]
[588.96075439 -303.24954224]
[588.54083252 -319.06515503]
[601.31518555 -326.72448730]
[608.30102539 -339.99844360]
[615.28692627 -353.27239990]
[622.27276611 -366.54635620]
[629.25860596 -379.82031250]
[636.24444580 -393.09426880]
[635.06225586 -409.45077515]
[648.78631592 -418.42755127]
[663.29840088 -410.79010010]
[663.66979980 -394.39514160]
[649.51837158 -386.10842896]
[642.53253174 -372.83447266]
[635.54669189 -359.56051636]
[628.56085205 -346.28656006]
[621.57501221 -333.01260376]
[614.58917236 -319.73864746]
[615.50878906 -304.87243652]
[602.23474121 -296.26370239]
[595.24890137 -282.98971558]
[588.26306152 -269.71575928]
[581.37481689 -256.39089966]
[574.58459473 -243.01580811]
[574.35968018 -235.63029480]
[567.59527588 -229.49531555]
[560.60943604 -216.22135925]
[563.57196045 -194.78096008]
[544.44934082 -183.09704590]
[538.25457764 -169.43598938]
[532.05975342 -155.77491760]
[525.86499023 -142.11386108]
[519.67022705 -128.45278931]
[513.47540283 -114.79173279]
[520.84796143 -101.72856903]
[535.74462891 -99.97097778]
[550.64129639 -98.21338654]
[565.55047607 -96.56517792]
[580.47131348 -95.02645874]
[595.39221191 -93.48773193]
[610.31304932 -91.94900513]
[625.23394775 -90.41028595]
[641.86370850 -98.32050323]
[655.66827393 -87.48381042]
[670.61010742 -86.16428375]
[685.55200195 -84.84476471]
[700.49383545 -83.52523804]
[712.44641113 -93.86501312]
[728.20324707 -92.64125824]
[738.41607666 -80.58000946]
[737.02581787 -64.83699036]
[724.85723877 -54.75225449]
[709.12982178 -56.30889893]
[699.17431641 -68.58338928]
[684.23248291 -69.90291595]
[669.29058838 -71.22243500]
[654.34875488 -72.54196167]
[644.87902832 -65.01755524]
[632.42126465 -65.99311829]
[623.69519043 -75.48941803]
[608.77435303 -77.02813721]
[593.85345459 -78.56686401]
[578.93261719 -80.10558319]
[564.01171875 -81.64431000]
[557.03735352 -79.20415497]
[548.88366699 -83.31671143]
[533.98699951 -85.07430267]
[519.09033203 -86.83190155]
[515.11395264 -74.31522369]
[507.05328369 -64.32830811]
[496.17639160 -58.09779739]
[484.07519531 -56.28635788]
[472.43402100 -58.92743301]
[462.79507446 -65.44938660]
[450.55712891 -56.77573395]
[438.31915283 -48.10207748]
[426.08120728 -39.42842484]
[413.84323120 -30.75477028]
[401.60528564 -22.08111572]
[389.36730957 -13.40746117]
[387.12564087 1.27281284]
[374.83816528 10.24346638]
[359.45532227 7.79264927]
[347.21737671 16.46630287]
[335.04339600 25.22955132]
[322.93408203 34.08192444]
[310.82476807 42.93429184]
[298.71545410 51.78666306]
[286.60614014 60.63903427]
[281.01882935 74.55958557]
[283.64764404 89.32743835]
[286.27645874 104.09528351]
[288.90527344 118.86312866]
[297.63391113 133.39747620]
[286.08389282 145.80850220]
[270.96054077 138.14558411]
[274.13742065 121.49194336]
[271.50860596 106.72409821]
[268.87979126 91.95625305]
[266.25097656 77.18840027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 74]
[12 73]
[13 72]
[14 71]
[15 70]
[16 69]
[18 68]
[19 67]
[20 66]
[27 38]
[28 37]
[29 36]
[30 35]
[42 51]
[43 50]
[44 49]
[56 64]
[57 63]
[58 62]
[76 202]
[77 201]
[78 200]
[79 199]
[80 198]
[82 197]
[83 196]
[86 193]
[87 192]
[88 191]
[89 190]
[90 189]
[91 188]
[92 187]
[96 147]
[97 146]
[98 145]
[99 144]
[100 143]
[101 142]
[107 140]
[108 139]
[109 137]
[110 136]
[112 135]
[113 134]
[114 133]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
[121 126]
[148 181]
[149 180]
[150 179]
[151 177]
[152 176]
[153 175]
[154 174]
[155 173]
[157 170]
[158 169]
[159 168]
[160 167]
[203 213]
[204 212]
[205 211]
[206 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
