%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EFNA3)
} def

/sequence { (\
GGAGCUGGGAAGCGGAGAAGCCGGGAGCGCGGGGCUCAGUCGGGGGGCGGCGGCGGCGGCGGCUCCGGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.049121346 ubox
1 36 0.003475371 ubox
1 37 0.011771510 ubox
1 41 0.011651210 ubox
1 66 0.369266004 ubox
2 21 0.049049510 ubox
2 35 0.004609745 ubox
2 36 0.005213853 ubox
2 37 0.172521589 ubox
2 40 0.005600150 ubox
2 41 0.035914984 ubox
2 65 0.369535205 ubox
3 36 0.173037741 ubox
3 40 0.031033927 ubox
3 64 0.369415968 ubox
4 13 0.758492941 ubox
4 21 0.019529698 ubox
4 28 0.013412760 ubox
4 35 0.173145120 ubox
4 40 0.119813601 ubox
4 63 0.369372240 ubox
5 12 0.782727332 ubox
5 15 0.145885011 ubox
5 17 0.015258648 ubox
5 20 0.021881510 ubox
5 24 0.105751075 ubox
5 25 0.004309029 ubox
5 27 0.013423221 ubox
5 32 0.010616441 ubox
5 33 0.007464274 ubox
5 34 0.172692840 ubox
5 39 0.133561205 ubox
5 43 0.005901376 ubox
5 62 0.369212593 ubox
5 68 0.023418524 ubox
5 69 0.097424298 ubox
5 70 0.009640344 ubox
6 11 0.775195580 ubox
6 14 0.147021162 ubox
6 16 0.015170519 ubox
6 19 0.021784376 ubox
6 23 0.106225526 ubox
6 24 0.007889151 ubox
6 26 0.013299162 ubox
6 29 0.010766744 ubox
6 31 0.020568393 ubox
6 32 0.009487988 ubox
6 33 0.169572724 ubox
6 38 0.133635210 ubox
6 42 0.006106151 ubox
6 61 0.366551274 ubox
6 67 0.021421945 ubox
6 68 0.097359947 ubox
6 69 0.008643448 ubox
7 13 0.151135292 ubox
7 22 0.107204091 ubox
7 28 0.021987683 ubox
7 30 0.039022546 ubox
7 37 0.133260036 ubox
7 41 0.006433369 ubox
7 57 0.003389421 ubox
7 60 0.345330614 ubox
7 66 0.020241723 ubox
8 21 0.105436625 ubox
8 22 0.016346466 ubox
8 35 0.008051550 ubox
8 36 0.132404472 ubox
8 40 0.005003724 ubox
8 65 0.019663265 ubox
8 66 0.089228707 ubox
9 21 0.015195542 ubox
9 35 0.132202649 ubox
9 41 0.006296551 ubox
9 63 0.005402582 ubox
9 64 0.010148216 ubox
9 65 0.089289146 ubox
10 40 0.005968646 ubox
10 64 0.074095932 ubox
11 36 0.006729382 ubox
11 64 0.049470390 ubox
12 21 0.062971405 ubox
12 28 0.058348702 ubox
12 30 0.179848516 ubox
12 35 0.008011675 ubox
12 40 0.012851987 ubox
12 48 0.014265903 ubox
12 51 0.019346849 ubox
12 54 0.099950422 ubox
12 57 0.228325055 ubox
12 60 0.033857823 ubox
12 63 0.069753865 ubox
13 20 0.072995843 ubox
13 23 0.173402399 ubox
13 27 0.056066431 ubox
13 29 0.179803893 ubox
13 31 0.022615830 ubox
13 34 0.008250428 ubox
13 39 0.013937926 ubox
13 42 0.010331102 ubox
13 47 0.014343593 ubox
13 49 0.016648863 ubox
13 50 0.018814035 ubox
13 52 0.038798507 ubox
13 53 0.093509694 ubox
13 55 0.099008783 ubox
13 56 0.221321548 ubox
13 58 0.042646648 ubox
13 59 0.034023156 ubox
13 61 0.058752633 ubox
13 62 0.067285204 ubox
13 67 0.432653301 ubox
14 22 0.211489441 ubox
14 28 0.178512087 ubox
14 30 0.022378717 ubox
14 36 0.004152955 ubox
14 37 0.006852789 ubox
14 41 0.012587085 ubox
14 48 0.017960108 ubox
14 51 0.050341955 ubox
14 54 0.110386332 ubox
14 57 0.044509412 ubox
14 60 0.061537837 ubox
14 66 0.731602854 ubox
15 21 0.211245409 ubox
15 35 0.004719516 ubox
15 36 0.004012331 ubox
15 37 0.092477945 ubox
15 40 0.012261501 ubox
15 41 0.008755732 ubox
15 65 0.732108046 ubox
16 36 0.092653413 ubox
16 40 0.008726097 ubox
16 64 0.731934449 ubox
17 35 0.091950921 ubox
17 37 0.037237398 ubox
17 41 0.004949796 ubox
17 63 0.731604769 ubox
17 65 0.003517378 ubox
18 36 0.027686878 ubox
18 40 0.004886331 ubox
19 36 0.038877989 ubox
19 64 0.012316748 ubox
20 28 0.015600061 ubox
20 30 0.012524258 ubox
20 35 0.047510420 ubox
20 40 0.015200921 ubox
20 48 0.067801728 ubox
20 51 0.191920194 ubox
20 54 0.109492903 ubox
20 57 0.198242338 ubox
20 60 0.732495236 ubox
20 63 0.018912616 ubox
21 27 0.016288066 ubox
21 29 0.010095927 ubox
21 32 0.112047714 ubox
21 33 0.010563241 ubox
21 34 0.047296694 ubox
21 39 0.016508316 ubox
21 43 0.165778507 ubox
21 44 0.025821493 ubox
21 45 0.009848896 ubox
21 46 0.005880099 ubox
21 47 0.067160637 ubox
21 50 0.191969355 ubox
21 53 0.110083592 ubox
21 56 0.198341946 ubox
21 59 0.732704779 ubox
21 62 0.020012529 ubox
21 68 0.096008568 ubox
21 69 0.461564446 ubox
21 70 0.026728373 ubox
22 29 0.015325810 ubox
22 31 0.113752491 ubox
22 32 0.009853671 ubox
22 33 0.046925413 ubox
22 42 0.170218237 ubox
22 43 0.025348286 ubox
22 44 0.009835302 ubox
22 45 0.006770538 ubox
22 46 0.066367692 ubox
22 49 0.191789360 ubox
22 52 0.110043569 ubox
22 55 0.198367018 ubox
22 58 0.732719503 ubox
22 61 0.020036017 ubox
22 67 0.096322363 ubox
22 68 0.462885088 ubox
22 69 0.026053731 ubox
23 28 0.018830283 ubox
23 30 0.114039702 ubox
23 37 0.004095014 ubox
23 41 0.171320166 ubox
23 48 0.086495110 ubox
23 51 0.085627552 ubox
23 54 0.194247202 ubox
23 57 0.727123044 ubox
23 60 0.019471938 ubox
23 66 0.083343861 ubox
24 37 0.024411744 ubox
24 40 0.142899100 ubox
24 41 0.022550365 ubox
24 65 0.068191294 ubox
24 66 0.466459623 ubox
25 36 0.010669862 ubox
25 37 0.516679120 ubox
25 40 0.004843944 ubox
25 41 0.004653769 ubox
25 63 0.005670129 ubox
25 64 0.038653189 ubox
25 65 0.469116672 ubox
26 36 0.518162035 ubox
26 40 0.003829153 ubox
26 64 0.471476399 ubox
27 35 0.518515749 ubox
27 48 0.010282689 ubox
27 51 0.101358884 ubox
27 54 0.534846808 ubox
27 57 0.026425344 ubox
27 60 0.009171746 ubox
27 63 0.471969200 ubox
28 34 0.518454677 ubox
28 42 0.017521041 ubox
28 47 0.010320517 ubox
28 49 0.072070215 ubox
28 50 0.094935752 ubox
28 52 0.408594537 ubox
28 53 0.504469623 ubox
28 55 0.084880297 ubox
28 56 0.024290466 ubox
28 58 0.026571534 ubox
28 59 0.009074952 ubox
28 61 0.222786347 ubox
28 62 0.417210470 ubox
29 35 0.012011036 ubox
29 40 0.005614769 ubox
29 41 0.017138329 ubox
29 48 0.080738038 ubox
29 51 0.445905809 ubox
29 54 0.089089979 ubox
29 57 0.029014668 ubox
29 60 0.313176972 ubox
30 34 0.011993107 ubox
30 39 0.017785557 ubox
30 42 0.017742985 ubox
30 47 0.080769226 ubox
30 49 0.118666672 ubox
30 50 0.438615008 ubox
30 52 0.463490608 ubox
30 53 0.086271620 ubox
30 55 0.020401049 ubox
30 56 0.028638154 ubox
30 58 0.083647070 ubox
30 59 0.304291309 ubox
30 61 0.345091122 ubox
30 67 0.014829705 ubox
31 37 0.007465702 ubox
31 41 0.017704171 ubox
31 48 0.140909966 ubox
31 51 0.462070253 ubox
31 54 0.020832514 ubox
31 57 0.111734264 ubox
31 60 0.343813262 ubox
31 66 0.015040483 ubox
32 36 0.004878623 ubox
32 40 0.016852201 ubox
32 41 0.003735345 ubox
32 65 0.015040968 ubox
33 40 0.003764659 ubox
33 41 0.024233871 ubox
33 64 0.015031691 ubox
34 40 0.024321722 ubox
34 48 0.600015583 ubox
34 51 0.053356056 ubox
34 54 0.283594768 ubox
34 57 0.378206945 ubox
34 60 0.008566418 ubox
34 63 0.015042512 ubox
35 39 0.024208937 ubox
35 43 0.014422728 ubox
35 44 0.182824695 ubox
35 45 0.157188583 ubox
35 46 0.155972520 ubox
35 47 0.599391289 ubox
35 50 0.053991379 ubox
35 53 0.283302737 ubox
35 56 0.378596287 ubox
35 59 0.009186602 ubox
35 62 0.015016733 ubox
36 42 0.012913411 ubox
36 43 0.182999970 ubox
36 44 0.157191207 ubox
36 45 0.162028137 ubox
36 46 0.596115745 ubox
36 47 0.004866818 ubox
36 49 0.044322315 ubox
36 50 0.013097876 ubox
36 52 0.237718096 ubox
36 53 0.031936509 ubox
36 55 0.350324634 ubox
36 56 0.013799969 ubox
36 58 0.008732872 ubox
36 61 0.012418043 ubox
37 42 0.182608915 ubox
37 43 0.157587910 ubox
37 44 0.167458174 ubox
37 45 0.592588342 ubox
37 46 0.032390982 ubox
37 49 0.032159571 ubox
37 52 0.134939634 ubox
37 55 0.093603651 ubox
37 61 0.006903030 ubox
38 64 0.005082597 ubox
39 48 0.249004767 ubox
39 51 0.514108306 ubox
39 54 0.312658925 ubox
39 57 0.026584707 ubox
39 60 0.048143709 ubox
39 63 0.005803707 ubox
40 46 0.012486189 ubox
40 47 0.254355722 ubox
40 50 0.515076635 ubox
40 53 0.313235740 ubox
40 56 0.026986148 ubox
40 59 0.050439905 ubox
40 62 0.005807893 ubox
40 68 0.084254816 ubox
40 69 0.175408004 ubox
40 70 0.016728095 ubox
41 45 0.015901284 ubox
41 46 0.259804744 ubox
41 49 0.516179856 ubox
41 52 0.313616475 ubox
41 55 0.027338793 ubox
41 58 0.052368506 ubox
41 61 0.005913414 ubox
41 67 0.118041278 ubox
41 68 0.244539682 ubox
41 69 0.029736910 ubox
42 48 0.515278179 ubox
42 51 0.313450334 ubox
42 54 0.026578924 ubox
42 57 0.052364007 ubox
42 60 0.005368226 ubox
42 66 0.116176103 ubox
43 65 0.113322201 ubox
43 66 0.258038797 ubox
44 63 0.005171223 ubox
44 64 0.109985652 ubox
44 65 0.259672607 ubox
44 66 0.116974319 ubox
45 63 0.106881525 ubox
45 64 0.260829754 ubox
45 65 0.117188311 ubox
45 66 0.005456210 ubox
46 63 0.262493978 ubox
46 64 0.116843398 ubox
46 65 0.005440942 ubox
46 66 0.006096695 ubox
47 54 0.085392884 ubox
47 57 0.011014042 ubox
47 60 0.135767173 ubox
47 63 0.117142148 ubox
47 65 0.006104323 ubox
48 53 0.085485500 ubox
48 55 0.022540711 ubox
48 56 0.010448310 ubox
48 58 0.005816594 ubox
48 59 0.138141363 ubox
48 61 0.266901023 ubox
48 62 0.112431413 ubox
49 54 0.028919314 ubox
49 57 0.006830349 ubox
49 60 0.269934146 ubox
49 64 0.027909677 ubox
50 57 0.166901547 ubox
50 60 0.107677671 ubox
50 63 0.032217684 ubox
51 56 0.167662808 ubox
51 58 0.273309841 ubox
51 59 0.101602125 ubox
51 62 0.032278319 ubox
52 57 0.275563544 ubox
52 60 0.003929123 ubox
53 60 0.064918726 ubox
54 59 0.067128770 ubox
54 61 0.006619706 ubox
55 60 0.008168521 ubox
55 64 0.005026246 ubox
56 63 0.005822161 ubox
57 62 0.005840509 ubox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
14 66 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
17 63 0.9500000 lbox
20 60 0.9500000 lbox
21 59 0.9500000 lbox
22 58 0.9500000 lbox
23 57 0.9500000 lbox
27 54 0.9500000 lbox
28 53 0.9500000 lbox
30 52 0.9500000 lbox
31 51 0.9500000 lbox
34 48 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
showpage
end
%%EOF
