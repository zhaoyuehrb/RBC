%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAGGAGCACGGGUACUACUUACUGUGGACGACGGUUGGUCAAGGAAGGCUUUCUGGAGGAGGUGACAGCUAGGCUGGGUCUUAAGGAUGAAUGGGAAGAGAGAGGAGAACAUGUGGAUAAGGCCAGGCAAAAGGGCUGCACAGCCAAGUCACAGCCAAGACGAAAUGCAGGGAGAGUUCUGGAAGCUGCGUGUUUC\
) } def
/len { sequence length } bind def

/coor [
[105.22293854 245.95141602]
[90.38544464 252.05290222]
[76.43466187 244.13108826]
[74.07244110 228.26289368]
[85.11087799 216.62104797]
[86.05746460 201.65095520]
[87.00405121 186.68084717]
[87.95063019 171.71073914]
[88.89721680 156.74064636]
[89.84380341 141.77053833]
[90.79038239 126.80043793]
[91.73696899 111.83032990]
[84.79100037 109.00128174]
[63.95310593 100.51411438]
[54.17092896 111.88552856]
[50.94233322 120.44107819]
[44.14346313 123.35766602]
[34.18299484 134.57324219]
[24.22252655 145.78881836]
[14.26206017 157.00439453]
[13.77209568 173.03996277]
[0.84365857 182.53916931]
[-14.60566139 178.21504211]
[-20.72446823 163.38467407]
[-12.81893635 149.42466736]
[3.04648614 147.04391479]
[13.00695324 135.82835388]
[22.96742058 124.61277771]
[32.92788696 113.39720154]
[42.79951477 102.10335541]
[52.58169174 90.73194122]
[69.25510406 83.20513916]
[84.95459747 84.29256439]
[96.26397705 92.40061188]
[102.03156281 78.55377960]
[107.79914856 64.70693970]
[113.56674194 50.86009979]
[119.33432770 37.01326370]
[118.86317444 30.40272141]
[121.42293549 25.31498337]
[125.50875854 22.82494736]
[131.71060181 9.16708469]
[127.91545868 -3.16682005]
[133.36972046 -14.41812229]
[144.65588379 -18.78823471]
[151.07255554 -32.34649277]
[157.48922729 -45.90474701]
[163.90589905 -59.46300507]
[158.82099915 -74.18650818]
[165.52154541 -87.84510040]
[179.58949280 -92.60204315]
[186.00616455 -106.16030121]
[192.42283630 -119.71855927]
[198.83950806 -133.27680969]
[205.25617981 -146.83506775]
[211.67285156 -160.39332581]
[218.08952332 -173.95158386]
[207.38757324 -194.40144348]
[213.98168945 -216.27580261]
[233.79248047 -227.17781067]
[235.68186951 -242.05833435]
[226.27641296 -254.47506714]
[228.40451050 -269.53912354]
[240.29992676 -278.42926025]
[242.18931580 -293.30981445]
[244.07872009 -308.19033813]
[242.05395508 -317.10781860]
[246.11718750 -323.29016113]
[248.24125671 -338.13900757]
[250.36532593 -352.98785400]
[252.48939514 -367.83670044]
[254.61346436 -382.68554688]
[241.72381592 -398.08593750]
[244.26068115 -417.70034790]
[260.14694214 -428.96179199]
[261.56564331 -443.89453125]
[262.98434448 -458.82730103]
[256.58694458 -473.29739380]
[265.49331665 -485.23583984]
[266.91201782 -500.16857910]
[268.33068848 -515.10131836]
[269.74938965 -530.03411865]
[271.16809082 -544.96685791]
[272.58679199 -559.89959717]
[274.00549316 -574.83239746]
[262.22665405 -580.84399414]
[253.21577454 -590.47937012]
[248.03092957 -602.57531738]
[247.27011108 -615.68157959]
[251.00227356 -628.23498535]
[258.76177979 -638.74548340]
[269.60638428 -645.97332764]
[282.23147583 -649.07513428]
[284.12088013 -663.95562744]
[286.01028442 -678.83618164]
[272.52120972 -685.75146484]
[262.21310425 -696.86535645]
[256.33065796 -710.83575439]
[255.58422852 -725.97570801]
[260.06396484 -740.45703125]
[269.22891235 -752.53094482]
[281.97232056 -760.73950195]
[296.75543213 -764.09155273]
[311.79306030 -762.18218994]
[325.26934814 -755.24206543]
[335.55697632 -744.10919189]
[341.41366577 -730.12799072]
[342.13217163 -714.98663330]
[337.62576294 -700.51361084]
[328.43859863 -688.45660400]
[315.68005371 -680.27154541]
[300.89080811 -676.94677734]
[299.00140381 -662.06628418]
[297.11203003 -647.18572998]
[311.54443359 -638.41717529]
[320.72625732 -624.17828369]
[322.77194214 -607.30389404]
[317.22244263 -591.17883301]
[305.14718628 -579.05895996]
[288.93826294 -573.41369629]
[287.51956177 -558.48095703]
[286.10086060 -543.54815674]
[284.68215942 -528.61541748]
[283.26345825 -513.68267822]
[281.84475708 -498.74987793]
[280.42605591 -483.81713867]
[286.92492676 -470.41513062]
[277.91711426 -457.40859985]
[276.49841309 -442.47583008]
[275.07971191 -427.54309082]
[283.52188110 -421.67398071]
[288.80291748 -412.75793457]
[289.90991211 -402.37326050]
[286.57592773 -392.39102173]
[279.34024048 -384.63775635]
[269.46231079 -380.56149292]
[267.33825684 -365.71264648]
[265.21417236 -350.86380005]
[263.09011841 -336.01492310]
[260.96603394 -321.16607666]
[258.95925903 -306.30093384]
[257.06985474 -291.42041016]
[255.18045044 -276.53988647]
[264.47665405 -264.95901489]
[262.77252197 -249.84112549]
[250.56240845 -240.16894531]
[248.67300415 -225.28840637]
[258.30648804 -219.04577637]
[264.86184692 -209.62232971]
[267.36441040 -198.41914368]
[281.97311401 -195.01541138]
[296.58184814 -191.61166382]
[308.22463989 -201.86956787]
[323.67645264 -203.29138184]
[336.99569702 -195.33041382]
[343.06088257 -181.04779053]
[339.53982544 -165.93548584]
[327.78640747 -155.80448914]
[312.32009888 -154.55038452]
[299.08798218 -162.65538025]
[293.17810059 -177.00294495]
[278.56939697 -180.40669250]
[263.96066284 -183.81044006]
[261.10220337 -179.15808105]
[257.42727661 -175.08671570]
[253.05245972 -171.73867798]
[248.11895752 -169.23323059]
[242.78810120 -167.66220093]
[237.23599243 -167.08673096]
[231.64778137 -167.53491211]
[225.23110962 -153.97665405]
[218.81443787 -140.41839600]
[212.39776611 -126.86014557]
[205.98109436 -113.30188751]
[199.56442261 -99.74362946]
[193.14775085 -86.18537140]
[198.38835144 -72.29034424]
[192.07406616 -58.44893646]
[177.46415710 -53.04633331]
[171.04748535 -39.48807907]
[164.63081360 -25.92982101]
[158.21414185 -12.37156391]
[160.58837891 5.01186371]
[145.36845398 15.36892223]
[139.16662598 29.02678490]
[133.18116760 42.78084946]
[127.41357422 56.62768936]
[121.64598846 70.47452545]
[115.87840271 84.32136536]
[110.11081696 98.16820526]
[106.70706940 112.77691650]
[105.76049042 127.74701691]
[104.81390381 142.71711731]
[103.86731720 157.68722534]
[102.92073822 172.65733337]
[101.97415161 187.62742615]
[101.02756500 202.59753418]
[100.08097839 217.56764221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[14 31]
[15 30]
[17 29]
[18 28]
[19 27]
[20 26]
[34 190]
[35 189]
[36 188]
[37 187]
[38 186]
[41 185]
[42 184]
[45 182]
[46 181]
[47 180]
[48 179]
[51 176]
[52 175]
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[60 147]
[61 146]
[64 143]
[65 142]
[66 141]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[75 130]
[76 129]
[77 128]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[93 114]
[94 113]
[95 112]
[150 163]
[151 162]
[152 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
