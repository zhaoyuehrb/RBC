%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:59:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COL5A3)
} def

/sequence { (\
GCGAGUGACUGCACCGAGCCCGAGAAGUCGCCGCGCCCCGCAGCCGCCCCGACUGGUUCCCCGCCUUGCCCGUGGGCCCCGCCGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.019370376 ubox
1 34 0.993267463 ubox
1 36 0.100279643 ubox
1 47 0.016271263 ubox
1 64 0.005987679 ubox
1 69 0.010897073 ubox
1 82 0.004441724 ubox
2 11 0.019381917 ubox
2 16 0.012702601 ubox
2 33 0.994007904 ubox
2 35 0.100640199 ubox
2 46 0.016323562 ubox
2 51 0.004963828 ubox
2 63 0.006006934 ubox
2 68 0.011786964 ubox
2 81 0.004455889 ubox
3 10 0.015709283 ubox
3 15 0.015652407 ubox
3 32 0.993552463 ubox
3 34 0.099837743 ubox
3 45 0.016065381 ubox
3 50 0.005001547 ubox
3 62 0.005891213 ubox
3 67 0.011797229 ubox
3 80 0.004371237 ubox
4 10 0.004752223 ubox
4 66 0.011802019 ubox
5 9 0.005352176 ubox
5 14 0.019698100 ubox
5 31 0.999097447 ubox
5 44 0.006361916 ubox
5 47 0.018531736 ubox
5 65 0.011700477 ubox
6 13 0.019720012 ubox
6 30 0.998867228 ubox
6 43 0.003505384 ubox
6 46 0.018560446 ubox
7 12 0.019645281 ubox
7 29 0.999277241 ubox
7 45 0.018515051 ubox
8 28 0.999196475 ubox
9 24 0.006714353 ubox
9 27 0.999238529 ubox
9 43 0.019576403 ubox
10 17 0.003610209 ubox
10 22 0.007958572 ubox
10 23 0.009679724 ubox
10 26 0.992939251 ubox
10 42 0.019882602 ubox
11 15 0.004646362 ubox
11 19 0.246282066 ubox
11 21 0.010782224 ubox
11 41 0.019893794 ubox
11 64 0.011914026 ubox
12 18 0.246236979 ubox
12 40 0.019864070 ubox
12 63 0.011904596 ubox
14 85 0.006172307 ubox
15 22 0.910999840 ubox
15 35 0.003658285 ubox
15 84 0.006188234 ubox
16 21 0.904051449 ubox
16 34 0.003641075 ubox
16 59 0.026336549 ubox
16 83 0.006093952 ubox
17 58 0.026889476 ubox
18 34 0.019427496 ubox
18 57 0.027099685 ubox
18 82 0.006032435 ubox
19 33 0.019401333 ubox
19 56 0.027056434 ubox
19 81 0.006016369 ubox
19 86 0.010880080 ubox
20 55 0.026976336 ubox
20 85 0.011174825 ubox
21 30 0.019735389 ubox
21 55 0.003360468 ubox
21 84 0.011175403 ubox
22 29 0.020005332 ubox
22 59 0.004351193 ubox
22 83 0.010719392 ubox
23 28 0.019490433 ubox
23 58 0.004349134 ubox
24 57 0.003927917 ubox
26 54 0.029881559 ubox
27 53 0.030344316 ubox
28 52 0.030352634 ubox
29 51 0.030355076 ubox
30 44 0.006226507 ubox
30 47 0.004736865 ubox
30 50 0.029918632 ubox
31 43 0.006304519 ubox
31 46 0.005083816 ubox
32 46 0.008686394 ubox
33 41 0.013457793 ubox
33 44 0.010426277 ubox
33 45 0.008548872 ubox
33 47 0.029573245 ubox
34 40 0.013492690 ubox
34 43 0.010654381 ubox
34 46 0.029633205 ubox
35 39 0.013939021 ubox
35 41 0.056973159 ubox
35 44 0.091453901 ubox
35 45 0.022777599 ubox
35 47 0.041959054 ubox
35 57 0.005539068 ubox
35 64 0.004136439 ubox
35 77 0.025358852 ubox
36 40 0.056625810 ubox
36 43 0.093719845 ubox
36 46 0.041932868 ubox
36 56 0.005768109 ubox
36 63 0.004133254 ubox
36 76 0.025197894 ubox
36 85 0.019463119 ubox
36 86 0.432773157 ubox
37 55 0.005440735 ubox
37 75 0.024849266 ubox
37 76 0.009032054 ubox
37 84 0.019130589 ubox
37 85 0.439678101 ubox
37 86 0.862711516 ubox
38 74 0.024482628 ubox
38 75 0.010004895 ubox
38 84 0.437932822 ubox
38 85 0.877627617 ubox
38 86 0.016059478 ubox
39 46 0.019855304 ubox
39 51 0.005798060 ubox
39 72 0.021916546 ubox
39 74 0.010845093 ubox
39 81 0.013424385 ubox
39 84 0.878411794 ubox
39 85 0.016080233 ubox
40 45 0.020120131 ubox
40 47 0.111621066 ubox
40 50 0.004933410 ubox
40 64 0.003934602 ubox
40 69 0.016171355 ubox
40 71 0.017137842 ubox
40 73 0.011517582 ubox
40 80 0.013708983 ubox
40 82 0.490268873 ubox
40 83 0.834198042 ubox
41 46 0.111700835 ubox
41 55 0.017813896 ubox
41 63 0.003976956 ubox
41 68 0.017281908 ubox
41 72 0.011512394 ubox
41 81 0.540179298 ubox
42 54 0.021945806 ubox
42 58 0.040218273 ubox
42 66 0.006234046 ubox
42 67 0.015715063 ubox
43 53 0.022308827 ubox
43 57 0.048393732 ubox
43 64 0.009301400 ubox
43 65 0.008241374 ubox
43 66 0.010073292 ubox
43 69 0.017333060 ubox
43 77 0.039130570 ubox
43 82 0.726729630 ubox
44 56 0.048979044 ubox
44 63 0.009415578 ubox
44 68 0.017304063 ubox
44 75 0.017067580 ubox
44 76 0.036329180 ubox
44 81 0.728616212 ubox
44 85 0.007816412 ubox
45 51 0.025735251 ubox
45 55 0.048971989 ubox
45 63 0.009627298 ubox
45 74 0.021373618 ubox
45 75 0.032663968 ubox
45 81 0.042608916 ubox
45 84 0.007856109 ubox
46 50 0.024203870 ubox
46 54 0.040744516 ubox
46 57 0.024313056 ubox
46 62 0.009239985 ubox
46 64 0.017488797 ubox
46 69 0.004276187 ubox
46 73 0.024917247 ubox
46 77 0.973172767 ubox
46 80 0.050672297 ubox
46 82 0.014080625 ubox
46 83 0.006787299 ubox
47 56 0.025644910 ubox
47 63 0.017451955 ubox
47 68 0.004255827 ubox
47 72 0.025312536 ubox
47 75 0.008003833 ubox
47 76 0.970277228 ubox
47 81 0.014415653 ubox
47 86 0.013741862 ubox
48 55 0.025571755 ubox
48 56 0.008527785 ubox
48 74 0.009652038 ubox
48 75 0.966480458 ubox
48 76 0.121167368 ubox
48 85 0.013095759 ubox
48 86 0.172536352 ubox
49 55 0.008553008 ubox
49 56 0.015042715 ubox
49 74 0.961954648 ubox
49 75 0.148293884 ubox
49 76 0.065668748 ubox
49 84 0.011828986 ubox
49 85 0.175451743 ubox
49 86 0.004478125 ubox
50 55 0.015130224 ubox
50 63 0.005432670 ubox
50 68 0.051557319 ubox
50 72 0.852074321 ubox
50 74 0.170972410 ubox
50 75 0.066530571 ubox
50 81 0.007430236 ubox
50 84 0.175543688 ubox
50 85 0.004425428 ubox
51 59 0.012753085 ubox
51 62 0.005572101 ubox
51 67 0.051916578 ubox
51 71 0.847336986 ubox
51 73 0.115114845 ubox
51 80 0.007738143 ubox
51 83 0.174311379 ubox
52 58 0.012192476 ubox
52 66 0.052795256 ubox
52 73 0.428768562 ubox
53 72 0.466854331 ubox
53 85 0.036668081 ubox
54 63 0.055028328 ubox
54 68 0.089464548 ubox
54 72 0.022806448 ubox
54 81 0.127891731 ubox
54 84 0.036818079 ubox
55 61 0.020909552 ubox
55 62 0.082282239 ubox
55 65 0.674576407 ubox
55 66 0.087353392 ubox
55 67 0.016271421 ubox
55 70 0.696542145 ubox
55 71 0.041646903 ubox
55 78 0.031808147 ubox
55 79 0.102217934 ubox
55 80 0.140943200 ubox
55 83 0.038771766 ubox
56 60 0.020727205 ubox
56 61 0.081729148 ubox
56 64 0.675117255 ubox
56 65 0.087668753 ubox
56 66 0.011860616 ubox
56 69 0.697213735 ubox
56 70 0.039611578 ubox
56 77 0.031944416 ubox
56 78 0.102541828 ubox
56 79 0.140606071 ubox
56 82 0.039191226 ubox
57 63 0.657753267 ubox
57 68 0.691235688 ubox
57 76 0.012110672 ubox
57 81 0.038553087 ubox
58 75 0.004714221 ubox
58 76 0.010013349 ubox
59 74 0.004563324 ubox
59 75 0.011443782 ubox
59 76 0.077328348 ubox
59 86 0.020013368 ubox
60 74 0.011447641 ubox
60 75 0.074597621 ubox
60 76 0.170410025 ubox
60 85 0.020948771 ubox
60 86 0.025492408 ubox
61 74 0.071656560 ubox
61 75 0.172348189 ubox
61 84 0.020931402 ubox
61 85 0.025920054 ubox
62 68 0.015168546 ubox
62 72 0.068286489 ubox
62 74 0.173695975 ubox
62 84 0.025925898 ubox
63 67 0.013334930 ubox
63 69 0.063686694 ubox
63 71 0.065606114 ubox
63 73 0.174744217 ubox
63 77 0.017168412 ubox
63 82 0.027223488 ubox
63 83 0.019720347 ubox
64 68 0.063810559 ubox
64 72 0.174684707 ubox
64 76 0.017212780 ubox
64 81 0.031910190 ubox
65 75 0.017202963 ubox
66 74 0.017006922 ubox
68 77 0.033818298 ubox
69 76 0.033842491 ubox
69 86 0.011148551 ubox
70 75 0.033713582 ubox
70 85 0.015606344 ubox
71 84 0.015620771 ubox
72 82 0.011998234 ubox
72 83 0.011042227 ubox
73 81 0.016197621 ubox
74 80 0.016282978 ubox
75 79 0.016020598 ubox
75 83 0.003555876 ubox
76 82 0.004376819 ubox
77 81 0.004504827 ubox
77 86 0.015271396 ubox
78 85 0.018982596 ubox
78 86 0.029994044 ubox
79 84 0.018944054 ubox
79 85 0.030482800 ubox
79 86 0.012208865 ubox
80 84 0.030266582 ubox
80 85 0.012418459 ubox
1 34 0.9500000 lbox
2 33 0.9500000 lbox
3 32 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
37 86 0.9500000 lbox
38 85 0.9500000 lbox
39 84 0.9500000 lbox
40 83 0.9500000 lbox
43 82 0.9500000 lbox
44 81 0.9500000 lbox
46 77 0.9500000 lbox
47 76 0.9500000 lbox
48 75 0.9500000 lbox
49 74 0.9500000 lbox
50 72 0.9500000 lbox
51 71 0.9500000 lbox
55 65 0.9500000 lbox
56 64 0.9500000 lbox
57 63 0.9500000 lbox
showpage
end
%%EOF
