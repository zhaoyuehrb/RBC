%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPN3)
} def

/sequence { (\
GGAGGGGCAGGAGCGCUGCGGUCGCUGAGCGUUUGCACGUUUGCACCUCUCUGUGGAAGCAGUGCGUCACAGGAGGGAAAUAUAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.047720406 ubox
1 26 0.019343057 ubox
1 41 0.005651176 ubox
1 42 0.051562634 ubox
1 47 0.004348720 ubox
1 49 0.036222360 ubox
1 50 0.572306036 ubox
1 51 0.023125602 ubox
1 52 0.087979952 ubox
2 22 0.046492514 ubox
2 23 0.105382204 ubox
2 25 0.020901452 ubox
2 33 0.003233359 ubox
2 34 0.003261433 ubox
2 40 0.008153060 ubox
2 41 0.062112990 ubox
2 42 0.025395431 ubox
2 46 0.004944407 ubox
2 48 0.016319830 ubox
2 49 0.820208952 ubox
2 50 0.008205511 ubox
2 51 0.118186633 ubox
3 17 0.003341979 ubox
3 22 0.104176517 ubox
3 26 0.017420639 ubox
3 32 0.003194076 ubox
3 33 0.003782265 ubox
3 34 0.023447817 ubox
3 40 0.063033664 ubox
3 41 0.026516352 ubox
3 42 0.012259934 ubox
3 48 0.824878302 ubox
3 50 0.136042647 ubox
4 17 0.024215546 ubox
4 23 0.047913839 ubox
4 25 0.018061847 ubox
4 32 0.003344228 ubox
4 33 0.030739022 ubox
4 40 0.025114125 ubox
4 41 0.012911794 ubox
4 42 0.003905288 ubox
4 47 0.825897857 ubox
4 48 0.086596006 ubox
4 49 0.142503222 ubox
4 50 0.003580020 ubox
5 16 0.028068030 ubox
5 17 0.003893900 ubox
5 22 0.046288912 ubox
5 23 0.020469136 ubox
5 32 0.033414628 ubox
5 40 0.012065546 ubox
5 41 0.004729870 ubox
5 42 0.016400357 ubox
5 46 0.822207342 ubox
5 47 0.112761390 ubox
5 48 0.138888546 ubox
5 49 0.004221239 ubox
6 16 0.004213462 ubox
6 17 0.011037583 ubox
6 22 0.017141059 ubox
6 23 0.016489550 ubox
6 33 0.004580045 ubox
6 40 0.004920384 ubox
6 41 0.019417853 ubox
6 46 0.123604163 ubox
6 47 0.139171627 ubox
6 48 0.003182526 ubox
6 68 0.008106703 ubox
7 14 0.029517187 ubox
7 16 0.011438328 ubox
7 19 0.148422774 ubox
7 22 0.005786357 ubox
7 25 0.003315989 ubox
7 30 0.036403601 ubox
7 32 0.005159740 ubox
7 36 0.107477767 ubox
7 40 0.020718881 ubox
7 44 0.950652621 ubox
7 46 0.138706559 ubox
7 67 0.008159526 ubox
8 13 0.029486184 ubox
8 15 0.011435173 ubox
8 18 0.148561670 ubox
8 21 0.005338488 ubox
8 24 0.003306837 ubox
8 27 0.008405216 ubox
8 29 0.036266555 ubox
8 31 0.005199096 ubox
8 35 0.107517889 ubox
8 39 0.020821417 ubox
8 43 0.961633539 ubox
8 66 0.008170465 ubox
9 17 0.148537815 ubox
9 26 0.009316647 ubox
9 34 0.096221871 ubox
9 41 0.012608798 ubox
9 42 0.848780085 ubox
10 16 0.148438322 ubox
10 17 0.003558254 ubox
10 25 0.009437179 ubox
10 33 0.069419307 ubox
10 34 0.006644760 ubox
10 40 0.009488956 ubox
10 41 0.572329417 ubox
10 42 0.053807216 ubox
10 68 0.024923412 ubox
11 16 0.005135890 ubox
11 23 0.011042069 ubox
11 32 0.039161307 ubox
11 33 0.008822837 ubox
11 34 0.109558573 ubox
11 40 0.175933491 ubox
11 41 0.075240530 ubox
11 42 0.444316302 ubox
11 67 0.024411269 ubox
11 68 0.010222298 ubox
12 22 0.011027023 ubox
12 26 0.044031412 ubox
12 32 0.009485117 ubox
12 33 0.135544750 ubox
12 34 0.004493421 ubox
12 40 0.083756153 ubox
12 41 0.706944813 ubox
12 42 0.007490138 ubox
12 67 0.009985701 ubox
13 25 0.044861914 ubox
13 30 0.036101732 ubox
13 32 0.152612394 ubox
13 33 0.003518184 ubox
13 36 0.035084126 ubox
13 40 0.944213701 ubox
13 41 0.012167709 ubox
13 44 0.007747295 ubox
13 65 0.028911775 ubox
14 20 0.011027291 ubox
14 21 0.003206770 ubox
14 24 0.044865913 ubox
14 29 0.036094489 ubox
14 31 0.154683004 ubox
14 35 0.035102306 ubox
14 39 0.970184433 ubox
14 43 0.007731560 ubox
14 64 0.028920874 ubox
15 19 0.010321508 ubox
15 22 0.009520736 ubox
15 23 0.043852054 ubox
15 30 0.154773429 ubox
15 34 0.033233014 ubox
15 36 0.050077553 ubox
15 38 0.969590776 ubox
15 40 0.037702535 ubox
15 42 0.003710245 ubox
15 44 0.003437087 ubox
15 63 0.028913396 ubox
16 21 0.044393146 ubox
16 29 0.154767941 ubox
16 35 0.050305043 ubox
16 39 0.039531175 ubox
16 43 0.003438135 ubox
16 62 0.028926012 ubox
17 27 0.007034088 ubox
17 28 0.151389330 ubox
17 31 0.003191478 ubox
17 37 0.966833187 ubox
17 45 0.003276711 ubox
17 61 0.028919388 ubox
18 25 0.085068227 ubox
18 30 0.003926019 ubox
18 32 0.062941560 ubox
18 36 0.972144364 ubox
18 40 0.003173890 ubox
18 44 0.005519404 ubox
18 60 0.028925934 ubox
19 24 0.085187949 ubox
19 27 0.129350007 ubox
19 29 0.003924029 ubox
19 31 0.063547934 ubox
19 35 0.972090131 ubox
19 39 0.003266483 ubox
19 43 0.005521400 ubox
19 59 0.028914922 ubox
20 26 0.129308859 ubox
20 30 0.063928004 ubox
20 33 0.043829109 ubox
20 34 0.952256761 ubox
20 38 0.003324557 ubox
20 42 0.005121865 ubox
20 47 0.020844404 ubox
21 25 0.126570757 ubox
21 30 0.008113451 ubox
21 32 0.061325840 ubox
21 33 0.773629251 ubox
21 36 0.003232787 ubox
21 41 0.004078469 ubox
21 44 0.005069358 ubox
21 46 0.023110796 ubox
22 28 0.063512616 ubox
22 29 0.007858417 ubox
22 35 0.003208796 ubox
22 43 0.004845339 ubox
22 45 0.023666251 ubox
22 56 0.027735029 ubox
22 78 0.011116849 ubox
23 27 0.063131432 ubox
23 31 0.970233397 ubox
23 39 0.004389455 ubox
23 55 0.028767890 ubox
23 77 0.011888985 ubox
24 30 0.971434013 ubox
24 32 0.024960788 ubox
24 38 0.004345600 ubox
24 44 0.143537391 ubox
24 54 0.028801675 ubox
25 29 0.964390606 ubox
25 31 0.025512642 ubox
25 43 0.142699973 ubox
25 53 0.028775770 ubox
26 37 0.003895730 ubox
26 43 0.023127138 ubox
26 45 0.003821018 ubox
27 36 0.003862252 ubox
27 38 0.005012103 ubox
27 41 0.010239066 ubox
27 42 0.137628465 ubox
27 44 0.004613134 ubox
27 49 0.006680175 ubox
27 51 0.027854153 ubox
28 40 0.009498677 ubox
28 41 0.148480905 ubox
28 48 0.006699335 ubox
28 50 0.028016740 ubox
29 36 0.010268137 ubox
29 40 0.150395852 ubox
29 47 0.006707173 ubox
29 49 0.027924572 ubox
30 35 0.010273740 ubox
30 39 0.150931994 ubox
31 38 0.150530917 ubox
31 46 0.009253610 ubox
32 37 0.137570209 ubox
32 45 0.006588572 ubox
34 45 0.052591508 ubox
35 44 0.076103176 ubox
35 65 0.004518865 ubox
36 43 0.076130529 ubox
36 64 0.004522923 ubox
37 42 0.064869716 ubox
37 63 0.004523051 ubox
38 62 0.004519567 ubox
39 60 0.004511132 ubox
39 81 0.031944436 ubox
39 83 0.021348813 ubox
39 85 0.016887742 ubox
40 59 0.004525963 ubox
40 79 0.007217745 ubox
40 80 0.032895497 ubox
40 82 0.021768073 ubox
40 84 0.016682854 ubox
41 58 0.004522412 ubox
41 78 0.008333090 ubox
41 79 0.032797771 ubox
41 80 0.024600540 ubox
42 57 0.004479031 ubox
42 77 0.008435229 ubox
42 78 0.029303566 ubox
42 79 0.029076791 ubox
42 82 0.012094564 ubox
43 81 0.012615825 ubox
44 55 0.004533973 ubox
45 54 0.004533480 ubox
46 53 0.004517141 ubox
46 76 0.521373380 ubox
46 77 0.066277414 ubox
47 75 0.523094948 ubox
47 76 0.064717729 ubox
47 77 0.080814191 ubox
48 74 0.523876888 ubox
48 75 0.056776000 ubox
48 76 0.096920143 ubox
48 77 0.009532975 ubox
48 78 0.017255490 ubox
49 73 0.522167344 ubox
49 75 0.144577129 ubox
49 76 0.020054033 ubox
49 77 0.023564789 ubox
50 72 0.059432907 ubox
50 73 0.496554064 ubox
50 74 0.155731348 ubox
50 75 0.018684876 ubox
50 76 0.024089158 ubox
50 77 0.007279179 ubox
50 78 0.008032705 ubox
51 62 0.013017999 ubox
51 72 0.980470422 ubox
51 73 0.124353188 ubox
51 75 0.020758734 ubox
51 76 0.008506023 ubox
51 77 0.008432966 ubox
52 61 0.014198331 ubox
52 71 0.992049981 ubox
52 72 0.065519300 ubox
52 74 0.017011882 ubox
52 75 0.006484243 ubox
52 76 0.006088191 ubox
53 60 0.015310908 ubox
53 70 0.998669574 ubox
54 59 0.015065576 ubox
54 61 0.004566317 ubox
54 69 0.997573651 ubox
54 71 0.023878306 ubox
55 60 0.005174108 ubox
55 68 0.984565232 ubox
55 70 0.025853289 ubox
56 67 0.895373984 ubox
56 68 0.167453502 ubox
57 67 0.217540736 ubox
59 65 0.981733198 ubox
59 67 0.077395093 ubox
60 64 0.974869871 ubox
60 66 0.085364278 ubox
62 70 0.010190445 ubox
63 69 0.010230167 ubox
64 68 0.010084665 ubox
67 74 0.004608463 ubox
67 76 0.003331230 ubox
67 78 0.005936276 ubox
68 73 0.004915134 ubox
68 75 0.004002667 ubox
68 77 0.006240663 ubox
1 50 0.9500000 lbox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
5 46 0.9500000 lbox
7 44 0.9500000 lbox
8 43 0.9500000 lbox
9 42 0.9500000 lbox
10 41 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
51 72 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
56 67 0.9500000 lbox
59 65 0.9500000 lbox
60 64 0.9500000 lbox
showpage
end
%%EOF
