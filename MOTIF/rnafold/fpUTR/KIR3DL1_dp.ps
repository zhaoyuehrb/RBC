%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIR3DL1)
} def

/sequence { (\
AUAACAUCCUGUGCGCUGCUGAGCUGAGCUGGGGCGCAGCCGCCUGUCUGCACCGGCAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.015073454 ubox
1 12 0.096365853 ubox
1 47 0.019320104 ubox
2 6 0.015681392 ubox
2 11 0.100489598 ubox
2 13 0.037931212 ubox
2 46 0.021438936 ubox
3 10 0.096227837 ubox
3 12 0.034370867 ubox
3 45 0.024358690 ubox
4 12 0.322776609 ubox
4 47 0.046686344 ubox
5 11 0.333960828 ubox
5 13 0.223027839 ubox
5 46 0.049563326 ubox
6 10 0.270748211 ubox
6 12 0.220887504 ubox
6 45 0.048258161 ubox
7 11 0.204521377 ubox
7 34 0.003435794 ubox
8 32 0.016935369 ubox
8 33 0.005702150 ubox
8 56 0.023115179 ubox
9 31 0.017061495 ubox
9 32 0.006115451 ubox
9 39 0.575005025 ubox
9 55 0.023373582 ubox
9 59 0.008217598 ubox
10 31 0.005960519 ubox
10 38 0.629039348 ubox
10 42 0.007225442 ubox
10 58 0.008220932 ubox
10 61 0.010036251 ubox
11 29 0.017271447 ubox
11 30 0.003818677 ubox
11 37 0.637798914 ubox
11 40 0.018686910 ubox
11 41 0.011173747 ubox
11 43 0.046747845 ubox
11 45 0.004904855 ubox
11 53 0.023720616 ubox
11 57 0.007967774 ubox
11 60 0.007665522 ubox
11 62 0.246178976 ubox
12 28 0.016890313 ubox
12 36 0.637566616 ubox
12 38 0.105239902 ubox
12 39 0.011091948 ubox
12 42 0.046837218 ubox
12 52 0.023873684 ubox
12 56 0.007509585 ubox
12 59 0.005298229 ubox
12 61 0.241866761 ubox
13 19 0.003315741 ubox
13 24 0.005928611 ubox
13 29 0.006480435 ubox
13 35 0.637870169 ubox
13 37 0.120530750 ubox
13 40 0.008943845 ubox
13 41 0.046985444 ubox
13 43 0.034953326 ubox
13 45 0.003556938 ubox
13 51 0.023889891 ubox
13 60 0.200109435 ubox
14 18 0.003296788 ubox
14 23 0.005938123 ubox
14 26 0.012925331 ubox
14 28 0.006480844 ubox
14 34 0.637818282 ubox
14 36 0.120584919 ubox
14 39 0.009579855 ubox
14 42 0.035084585 ubox
14 50 0.023865535 ubox
14 55 0.007620959 ubox
14 59 0.186385338 ubox
15 24 0.078799472 ubox
15 29 0.005769986 ubox
15 35 0.120604326 ubox
15 37 0.017495442 ubox
15 40 0.054134020 ubox
15 41 0.030077153 ubox
15 43 0.047428509 ubox
15 47 0.010100850 ubox
15 49 0.008463438 ubox
15 54 0.007877259 ubox
15 57 0.076196223 ubox
15 60 0.728820982 ubox
16 23 0.078943920 ubox
16 28 0.005778579 ubox
16 32 0.634452555 ubox
16 33 0.035083654 ubox
16 34 0.120322641 ubox
16 36 0.017492037 ubox
16 39 0.056905798 ubox
16 42 0.047544403 ubox
16 46 0.011285233 ubox
16 56 0.076439238 ubox
16 59 0.733112102 ubox
17 22 0.078157201 ubox
17 27 0.005596788 ubox
17 31 0.594234896 ubox
17 32 0.032559785 ubox
17 33 0.094276085 ubox
17 38 0.056823073 ubox
17 52 0.013213587 ubox
17 55 0.075426542 ubox
17 58 0.745588881 ubox
17 61 0.011183437 ubox
18 24 0.008021163 ubox
18 29 0.635887188 ubox
18 30 0.072176305 ubox
18 35 0.008037025 ubox
18 37 0.056687477 ubox
18 40 0.054838920 ubox
18 43 0.012353322 ubox
18 47 0.003496178 ubox
18 51 0.016967546 ubox
18 54 0.072417113 ubox
18 57 0.747842068 ubox
18 60 0.012624369 ubox
19 23 0.007986347 ubox
19 28 0.640358055 ubox
19 32 0.043058344 ubox
19 33 0.077894006 ubox
19 34 0.007324553 ubox
19 36 0.054368376 ubox
19 39 0.054956365 ubox
19 42 0.012199538 ubox
19 46 0.003619250 ubox
19 50 0.017216226 ubox
19 56 0.747849042 ubox
19 59 0.012628362 ubox
20 26 0.009780298 ubox
20 27 0.636325785 ubox
20 31 0.040983456 ubox
20 32 0.090001238 ubox
20 33 0.006724458 ubox
20 38 0.054940443 ubox
20 42 0.005754591 ubox
20 52 0.047087664 ubox
20 55 0.746615163 ubox
20 58 0.011974008 ubox
21 25 0.013874902 ubox
21 30 0.014281386 ubox
21 35 0.012615730 ubox
21 37 0.054802903 ubox
21 41 0.014229621 ubox
21 48 0.015548281 ubox
21 51 0.043694925 ubox
21 54 0.739733766 ubox
21 57 0.006523515 ubox
22 30 0.125117842 ubox
22 45 0.014194202 ubox
22 47 0.015154181 ubox
22 49 0.027345764 ubox
23 29 0.127024550 ubox
23 35 0.068473251 ubox
23 40 0.052224915 ubox
23 43 0.014570811 ubox
23 44 0.014273111 ubox
23 47 0.006564938 ubox
23 48 0.027187934 ubox
23 51 0.704100674 ubox
23 57 0.010998241 ubox
23 60 0.005438561 ubox
24 28 0.126105583 ubox
24 32 0.011774836 ubox
24 33 0.012663253 ubox
24 34 0.068396170 ubox
24 39 0.052345197 ubox
24 42 0.014759235 ubox
24 46 0.013765766 ubox
24 50 0.703434389 ubox
24 56 0.012191864 ubox
24 59 0.005448985 ubox
25 31 0.011553855 ubox
25 32 0.013526135 ubox
25 33 0.067710092 ubox
25 38 0.052339553 ubox
25 42 0.020911040 ubox
25 46 0.004694374 ubox
25 50 0.027980150 ubox
25 52 0.195697034 ubox
25 55 0.012336390 ubox
25 58 0.005739188 ubox
26 30 0.005598109 ubox
26 37 0.052200670 ubox
26 41 0.026830214 ubox
26 45 0.003416117 ubox
26 48 0.631724682 ubox
26 49 0.080453968 ubox
26 51 0.197190166 ubox
26 54 0.012629688 ubox
27 45 0.013460388 ubox
27 47 0.566688388 ubox
27 49 0.211886391 ubox
28 35 0.052424951 ubox
28 40 0.047044190 ubox
28 43 0.018346026 ubox
28 44 0.013426240 ubox
28 47 0.354586754 ubox
28 48 0.218718331 ubox
28 51 0.056946835 ubox
28 57 0.073793672 ubox
28 60 0.017541098 ubox
29 34 0.052358375 ubox
29 39 0.047084062 ubox
29 42 0.018410513 ubox
29 46 0.579485735 ubox
29 50 0.057520009 ubox
29 56 0.073927833 ubox
29 59 0.017571046 ubox
30 38 0.047081653 ubox
30 42 0.013327305 ubox
30 46 0.059361893 ubox
30 52 0.004430837 ubox
30 55 0.073816555 ubox
30 58 0.017627618 ubox
31 37 0.047071544 ubox
31 41 0.018500554 ubox
31 44 0.571072086 ubox
31 45 0.086938340 ubox
31 48 0.024289105 ubox
31 49 0.006582754 ubox
31 51 0.008461014 ubox
31 54 0.073701806 ubox
31 57 0.017613806 ubox
32 40 0.018439087 ubox
32 41 0.021357339 ubox
32 43 0.571988999 ubox
32 44 0.075051833 ubox
32 45 0.434041437 ubox
32 47 0.012256402 ubox
32 48 0.006307479 ubox
32 49 0.003882643 ubox
32 53 0.073216946 ubox
32 54 0.009848606 ubox
33 40 0.021376554 ubox
33 41 0.577530142 ubox
33 43 0.054463325 ubox
33 44 0.468440224 ubox
33 45 0.004148642 ubox
33 48 0.004476272 ubox
33 49 0.008556845 ubox
33 53 0.011032760 ubox
33 54 0.029426606 ubox
33 63 0.008196579 ubox
34 40 0.578113582 ubox
34 43 0.471289195 ubox
34 44 0.004199558 ubox
34 47 0.004428291 ubox
34 48 0.008596699 ubox
34 51 0.065072072 ubox
34 53 0.031008040 ubox
34 62 0.008723445 ubox
35 39 0.573915103 ubox
35 42 0.473971845 ubox
35 46 0.004462687 ubox
35 50 0.065937368 ubox
36 41 0.451294011 ubox
36 43 0.007019084 ubox
36 47 0.059625401 ubox
36 49 0.024747646 ubox
36 51 0.047393588 ubox
36 60 0.012464571 ubox
37 42 0.007244776 ubox
37 46 0.066576417 ubox
37 50 0.047457341 ubox
37 59 0.012460042 ubox
38 45 0.066538542 ubox
38 49 0.047454189 ubox
39 44 0.065541975 ubox
39 47 0.006844067 ubox
39 48 0.047196337 ubox
39 57 0.060945084 ubox
39 60 0.275610924 ubox
40 46 0.030195943 ubox
40 56 0.062751636 ubox
40 59 0.284361188 ubox
41 50 0.004150397 ubox
41 55 0.062766754 ubox
42 49 0.003276274 ubox
42 51 0.051703062 ubox
42 54 0.060337341 ubox
42 57 0.320545658 ubox
42 60 0.374055547 ubox
43 50 0.052028909 ubox
43 56 0.320790411 ubox
43 59 0.265711644 ubox
44 55 0.320462494 ubox
44 56 0.008801094 ubox
44 59 0.326526814 ubox
45 52 0.075536175 ubox
45 55 0.010565433 ubox
45 58 0.421556512 ubox
45 61 0.263884960 ubox
46 51 0.080120884 ubox
46 53 0.298559068 ubox
46 54 0.035081464 ubox
46 57 0.422968067 ubox
46 60 0.297801580 ubox
46 62 0.205776171 ubox
47 52 0.273381663 ubox
47 56 0.417404489 ubox
47 59 0.043114977 ubox
47 61 0.206070687 ubox
48 55 0.415261028 ubox
48 56 0.067551426 ubox
48 59 0.373393731 ubox
49 55 0.067904053 ubox
49 58 0.376741577 ubox
49 61 0.011129654 ubox
50 54 0.077607158 ubox
50 57 0.377065948 ubox
50 60 0.012607905 ubox
51 56 0.376428328 ubox
51 59 0.012604122 ubox
55 63 0.003175584 ubox
56 62 0.003197665 ubox
9 39 0.9500000 lbox
10 38 0.9500000 lbox
11 37 0.9500000 lbox
12 36 0.9500000 lbox
13 35 0.9500000 lbox
14 34 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
42 60 0.9500000 lbox
43 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
showpage
end
%%EOF
