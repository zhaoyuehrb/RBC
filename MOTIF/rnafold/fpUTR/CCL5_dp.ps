%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL5)
} def

/sequence { (\
GCUGCAGAGGAUUCCUGCAGAGGAUCAAGACAGCACGUGGACCUCGCACAGCCUCUCCCACAGGUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 34 0.600414369 ubox
1 38 0.008080607 ubox
1 47 0.096432654 ubox
1 52 0.137652641 ubox
1 65 0.235340799 ubox
2 9 0.009718747 ubox
2 10 0.003866980 ubox
2 20 0.178921185 ubox
2 22 0.003236713 ubox
2 33 0.600899889 ubox
2 37 0.008396668 ubox
2 46 0.096348489 ubox
2 51 0.138799723 ubox
2 63 0.597689609 ubox
2 64 0.230147048 ubox
3 8 0.009680981 ubox
3 9 0.003841757 ubox
3 19 0.222557021 ubox
3 32 0.600592760 ubox
3 35 0.021451170 ubox
3 48 0.099464699 ubox
3 50 0.135562854 ubox
3 60 0.146510452 ubox
3 62 0.604449491 ubox
3 63 0.207323309 ubox
3 66 0.075282508 ubox
4 18 0.229364124 ubox
4 31 0.598422563 ubox
4 34 0.023976063 ubox
4 47 0.115249819 ubox
4 49 0.132076856 ubox
4 59 0.172580188 ubox
4 61 0.603581224 ubox
4 65 0.083518134 ubox
5 17 0.229404636 ubox
5 33 0.023949473 ubox
5 46 0.115827047 ubox
5 64 0.083929646 ubox
6 16 0.228281431 ubox
6 56 0.705834635 ubox
7 14 0.046642172 ubox
7 15 0.222415803 ubox
7 26 0.039016907 ubox
7 45 0.174454103 ubox
7 55 0.738654310 ubox
7 57 0.086241040 ubox
8 12 0.005358953 ubox
8 13 0.061276018 ubox
8 16 0.026952835 ubox
8 25 0.038864696 ubox
8 44 0.174531809 ubox
8 54 0.738721323 ubox
8 56 0.086229033 ubox
9 15 0.035333119 ubox
9 16 0.003445105 ubox
9 26 0.090590340 ubox
9 43 0.174555009 ubox
9 53 0.738865011 ubox
9 55 0.085698280 ubox
9 56 0.013658636 ubox
9 58 0.023921613 ubox
9 68 0.004968660 ubox
10 14 0.036459442 ubox
10 15 0.004986996 ubox
10 25 0.077363042 ubox
10 26 0.584246420 ubox
10 42 0.173364272 ubox
10 52 0.738495084 ubox
10 53 0.021375685 ubox
10 54 0.075410214 ubox
10 55 0.015589187 ubox
10 57 0.023974170 ubox
10 67 0.005004447 ubox
11 25 0.578750401 ubox
11 38 0.007390170 ubox
11 54 0.016318527 ubox
11 56 0.023477969 ubox
12 22 0.006430381 ubox
12 24 0.413357639 ubox
12 37 0.007422321 ubox
12 40 0.011303263 ubox
12 41 0.083824952 ubox
12 51 0.315764495 ubox
13 21 0.007405391 ubox
13 23 0.090942291 ubox
13 24 0.441196392 ubox
13 39 0.005719743 ubox
13 40 0.080180937 ubox
13 41 0.124076404 ubox
13 50 0.287200420 ubox
14 20 0.007695784 ubox
14 22 0.082062914 ubox
14 23 0.600580876 ubox
14 39 0.079402997 ubox
14 40 0.132176503 ubox
14 64 0.005631128 ubox
15 22 0.601839027 ubox
15 23 0.004371498 ubox
15 33 0.010828399 ubox
15 39 0.132077088 ubox
15 40 0.005846938 ubox
15 51 0.181617694 ubox
15 63 0.005657386 ubox
16 21 0.597026543 ubox
16 22 0.004635197 ubox
16 27 0.003185630 ubox
16 32 0.011137210 ubox
16 35 0.145680217 ubox
16 37 0.018238219 ubox
16 39 0.006373029 ubox
16 48 0.696428047 ubox
16 50 0.177520015 ubox
16 62 0.005631580 ubox
17 26 0.003317447 ubox
17 31 0.011105982 ubox
17 34 0.147940853 ubox
17 36 0.016696154 ubox
17 38 0.027358118 ubox
17 47 0.722749529 ubox
17 49 0.173084232 ubox
17 61 0.005585880 ubox
18 33 0.147851843 ubox
18 37 0.028290211 ubox
18 46 0.720743235 ubox
19 56 0.008655940 ubox
20 26 0.014895486 ubox
20 45 0.757150931 ubox
20 55 0.011271923 ubox
21 25 0.013077194 ubox
21 44 0.759580222 ubox
21 54 0.012424374 ubox
22 43 0.759954395 ubox
22 44 0.005143725 ubox
22 53 0.012563607 ubox
22 58 0.044606021 ubox
22 59 0.027995512 ubox
22 68 0.026309179 ubox
23 42 0.759541143 ubox
23 43 0.006215798 ubox
23 45 0.006243596 ubox
23 52 0.012403357 ubox
23 57 0.044827203 ubox
23 58 0.027808738 ubox
23 67 0.026481677 ubox
24 38 0.011038675 ubox
24 44 0.006105431 ubox
24 56 0.038907602 ubox
24 65 0.021348559 ubox
25 37 0.010803335 ubox
25 40 0.395875040 ubox
25 41 0.592104162 ubox
25 64 0.021402170 ubox
26 39 0.448899214 ubox
26 40 0.590587425 ubox
26 63 0.021257745 ubox
27 38 0.407218219 ubox
28 54 0.026504961 ubox
28 56 0.043702010 ubox
29 45 0.006050371 ubox
29 53 0.026851421 ubox
29 55 0.053402444 ubox
29 57 0.020858351 ubox
30 38 0.471988932 ubox
30 44 0.005803223 ubox
30 54 0.052308607 ubox
30 56 0.020584926 ubox
30 65 0.013961784 ubox
31 37 0.497365193 ubox
31 39 0.198569080 ubox
31 64 0.014357386 ubox
32 38 0.195211069 ubox
32 54 0.018565559 ubox
33 47 0.010918628 ubox
33 52 0.063822625 ubox
33 53 0.017152108 ubox
33 65 0.123250777 ubox
34 46 0.010886368 ubox
34 51 0.064569473 ubox
34 64 0.126195901 ubox
35 65 0.100757517 ubox
36 46 0.033669707 ubox
36 64 0.104909278 ubox
37 45 0.034213184 ubox
37 47 0.243322375 ubox
37 49 0.355621410 ubox
37 61 0.430041410 ubox
37 67 0.017904299 ubox
38 46 0.243438879 ubox
38 48 0.356057466 ubox
38 50 0.020861007 ubox
38 60 0.430729297 ubox
38 62 0.035335748 ubox
38 66 0.017347935 ubox
39 45 0.243146382 ubox
39 47 0.356131261 ubox
39 49 0.023154676 ubox
39 53 0.006643668 ubox
39 56 0.004679746 ubox
39 58 0.071411025 ubox
39 59 0.426125046 ubox
39 61 0.031551066 ubox
39 65 0.008254575 ubox
39 68 0.096235643 ubox
40 44 0.157598263 ubox
40 52 0.006659850 ubox
40 55 0.007681017 ubox
40 57 0.096929022 ubox
40 58 0.420413010 ubox
40 67 0.097254039 ubox
41 54 0.009957514 ubox
41 56 0.113868969 ubox
41 65 0.103362533 ubox
42 64 0.104361073 ubox
43 51 0.025123839 ubox
43 63 0.104345624 ubox
44 50 0.024220362 ubox
44 62 0.099556418 ubox
46 52 0.401179564 ubox
47 51 0.398833153 ubox
48 65 0.003848325 ubox
49 64 0.003662981 ubox
50 56 0.064801938 ubox
51 55 0.065719008 ubox
51 65 0.455694019 ubox
52 64 0.466235266 ubox
53 63 0.466549748 ubox
53 64 0.023279724 ubox
54 62 0.450025911 ubox
54 63 0.020527133 ubox
54 64 0.031498785 ubox
55 63 0.041796574 ubox
55 64 0.018302523 ubox
56 62 0.040826106 ubox
56 63 0.017508160 ubox
56 64 0.014658284 ubox
57 63 0.027295236 ubox
57 64 0.180453534 ubox
58 63 0.181529390 ubox
58 64 0.121010221 ubox
59 63 0.120925964 ubox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
4 61 0.9500000 lbox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
8 54 0.9500000 lbox
9 53 0.9500000 lbox
10 52 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
20 45 0.9500000 lbox
21 44 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
showpage
end
%%EOF
