%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGUUUCCUGGCUGAACACGCCAGCCCAAUACUUAAAGAGAGCAACUCCUGACUCCGAUAGAGACUGGAUGGACCCACAAGGGUGACAGCCCAGGCGGACCGAUCUUCCCAUCCCACAUCCUCCGGCGCGAUGCCAAAAAGAGGCUGACGGCAACUGGGCCUUCUGCAGAGAAAGACCUCCGCUUCACUGCCCCGGCUGGUCCCAAGGGUCAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[70.41125488 485.20422363]
[57.25682449 493.43469238]
[41.77928543 492.32772827]
[29.93006706 482.30895996]
[26.26543427 467.23083496]
[32.19451523 452.89117432]
[45.43745422 444.80389404]
[46.50754166 429.84210205]
[47.57762909 414.88031006]
[48.64772034 399.91854858]
[49.71780777 384.95675659]
[50.78789520 369.99496460]
[51.85798264 355.03320312]
[52.92807007 340.07141113]
[53.99815750 325.10964966]
[40.61024857 318.49954224]
[30.74631310 307.23687744]
[25.93288803 293.01730347]
[26.93295860 277.99774170]
[33.62520218 264.46896362]
[45.01773834 254.50637817]
[59.39502716 249.65156555]
[60.46511459 234.68977356]
[61.53520203 219.72799683]
[62.60528946 204.76622009]
[63.67537689 189.80442810]
[64.74546051 174.84265137]
[65.81555176 159.88087463]
[60.00949097 155.13327026]
[51.89733887 167.75044250]
[43.78518677 180.36761475]
[38.87594223 194.54151917]
[24.44350815 198.62866211]
[12.83137321 189.13348389]
[13.97094154 174.17683411]
[26.88761711 166.55053711]
[37.64249039 156.09431458]
[48.39736557 145.63809204]
[42.59130478 140.89050293]
[28.14003181 144.91053772]
[20.71695518 150.22198486]
[13.45365810 148.88322449]
[-1.05354464 152.69650269]
[-15.56074715 156.50978088]
[-29.34242439 166.38407898]
[-42.64597702 155.87446594]
[-36.22988129 140.18147278]
[-19.37402153 142.00257874]
[-4.86681938 138.18930054]
[9.64038277 134.37602234]
[24.11998940 130.45925903]
[38.57126236 126.43922424]
[38.08964539 118.95470428]
[37.12641144 103.98566437]
[36.64479446 96.50114441]
[21.79747200 94.36641693]
[6.95014954 92.23169708]
[-6.70297289 100.65617371]
[-21.75277138 95.09891510]
[-26.65432930 79.82297516]
[-17.64759064 66.54675293]
[-1.64175379 65.45462036]
[9.08487225 77.38437653]
[23.93219376 79.51909637]
[38.77951431 81.65382385]
[50.52754593 76.63500977]
[62.21313858 74.62836456]
[51.30797958 64.32896423]
[40.40282059 54.02957535]
[29.49766159 43.73017883]
[11.48574829 39.88758469]
[7.12795115 22.88535881]
[-3.92316580 12.74273491]
[-21.98811340 9.15773201]
[-26.58824921 -7.78053474]
[-37.78306961 -17.76432037]
[-48.97789383 -27.74810600]
[-60.17271423 -37.73189163]
[-76.33078766 -40.53346634]
[-81.72881317 -56.01872635]
[-70.81378174 -68.25775909]
[-54.81412506 -64.66010284]
[-50.18893051 -48.92671204]
[-38.99410629 -38.94292831]
[-27.79928589 -28.95914078]
[-16.60446358 -18.97535706]
[-4.51800346 -19.35368729]
[4.88970280 -11.13344860]
[6.21945763 1.69161749]
[17.27057457 11.83424091]
[29.36120605 11.62853718]
[38.65057373 19.98227501]
[39.79705429 32.82501984]
[50.70221329 43.12441635]
[61.60737228 53.42380905]
[72.51253510 63.72320175]
[85.68438721 54.31243896]
[102.06560516 49.80121613]
[103.13569641 34.83943558]
[104.20578003 19.87765312]
[105.27587128 4.91587210]
[97.43659210 -5.32113123]
[98.63185883 -17.75691032]
[107.67861938 -25.78074074]
[108.96224213 -40.72571564]
[110.24586487 -55.67069244]
[96.89431000 -62.99570465]
[87.68157959 -75.12193298]
[84.20382690 -89.94843292]
[87.06359863 -104.90642548]
[95.76542664 -117.40435028]
[108.80166626 -125.27686310]
[123.91370392 -127.16000366]
[138.48329163 -122.72750854]
[149.98616028 -112.74732971]
[156.42936707 -98.94860077]
[156.69657898 -83.72202301]
[150.74151611 -69.70571136]
[139.59593201 -59.32806015]
[125.19084167 -54.38706589]
[123.90721893 -39.44209290]
[122.62359619 -24.49711609]
[130.90950012 -9.02424240]
[120.23765564 5.98596001]
[119.16756439 20.94774055]
[118.09748077 35.90952301]
[117.02738953 50.87130356]
[130.34352112 57.77641296]
[141.95564270 48.28122711]
[146.61402893 40.43183136]
[153.80206299 38.73479080]
[165.54858398 29.40638733]
[167.22625732 11.99042130]
[180.71708679 1.38766718]
[197.36720276 3.77791619]
[208.97932434 -5.71727085]
[220.59144592 -15.21245766]
[220.60900879 -30.85003090]
[230.71360779 -42.78448105]
[246.13415527 -45.38072968]
[259.58956909 -37.41290283]
[264.72656250 -22.64316559]
[259.11965942 -8.04533863]
[245.41622925 -0.51206779]
[230.08663940 -3.60033321]
[218.47450256 5.89485359]
[206.86238098 15.39004040]
[207.38374329 28.26086426]
[200.29263306 39.24704742]
[187.98846436 44.21826172]
[174.87698364 41.15291214]
[163.13046265 50.48131561]
[151.45083618 59.89335251]
[139.83871460 69.38854218]
[143.52563477 76.85685730]
[145.86209106 84.68841553]
[146.83131409 92.64614105]
[146.45716858 100.49768829]
[144.80191040 108.02219391]
[158.92958069 113.06293488]
[173.05723572 118.10367584]
[187.18490601 123.14441681]
[198.67076111 111.61571503]
[213.98008728 106.27072144]
[230.02987671 108.13204956]
[243.61138916 116.77645111]
[252.03163147 130.42971802]
[253.64733887 146.33059692]
[267.84555054 151.16908264]
[283.40383911 148.29682922]
[292.95501709 159.72593689]
[307.15322876 164.56442261]
[321.35140991 169.40292358]
[335.42178345 162.20568848]
[350.43435669 167.14517212]
[357.48242188 181.29086304]
[352.38449097 196.25036621]
[338.16510010 203.14846802]
[323.26031494 197.89266968]
[316.51293945 183.60112000]
[302.31472778 178.76263428]
[288.11651611 173.92413330]
[273.57376099 177.14247131]
[263.00704956 165.36729431]
[248.80883789 160.52879333]
[239.58026123 170.88279724]
[227.06341553 176.95765686]
[213.13282776 177.80690002]
[199.88879395 173.26942444]
[189.34069824 163.99879456]
[183.10212708 151.36923218]
[182.14416504 137.27207947]
[168.01649475 132.23133850]
[153.88883972 127.19059753]
[139.76116943 122.14985657]
[120.21856689 150.83950806]
[80.77733612 160.95095825]
[79.70724487 175.91273499]
[78.63716125 190.87452698]
[77.56707001 205.83630371]
[76.49697876 220.79808044]
[75.42689514 235.75987244]
[74.35680389 250.72164917]
[87.89684296 257.57315063]
[97.75559235 269.05566406]
[102.45437622 283.39913940]
[101.30676270 298.40814209]
[94.51867676 311.79794312]
[83.15229034 321.54220581]
[68.95993805 326.17971802]
[67.88985443 341.14151001]
[66.81976318 356.10327148]
[65.74967194 371.06506348]
[64.67958832 386.02685547]
[63.60950089 400.98861694]
[62.53941345 415.95040894]
[61.46932602 430.91220093]
[60.39923859 445.87396240]
[72.35644531 455.76361084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 218]
[8 217]
[9 216]
[10 215]
[11 214]
[12 213]
[13 212]
[14 211]
[15 210]
[22 203]
[23 202]
[24 201]
[25 200]
[26 199]
[27 198]
[28 197]
[39 52]
[40 51]
[42 50]
[43 49]
[44 48]
[55 65]
[56 64]
[57 63]
[67 96]
[68 95]
[69 94]
[70 93]
[72 90]
[73 89]
[75 86]
[76 85]
[77 84]
[78 83]
[98 127]
[99 126]
[100 125]
[101 124]
[104 122]
[105 121]
[106 120]
[128 154]
[129 153]
[131 152]
[132 151]
[135 147]
[136 146]
[137 145]
[159 195]
[160 194]
[161 193]
[162 192]
[168 185]
[169 184]
[171 182]
[172 181]
[173 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
