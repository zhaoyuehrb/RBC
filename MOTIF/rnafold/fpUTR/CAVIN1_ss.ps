%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAGCGAUCAGACUCCGGAGUUUGGCCCGGGAGCUGGGGAGCUCACCGAUCCCCCGCCCAGCAGUUCUGGCCGCUGUCCCGGUGCGCACGGACGUGGCUCGAGUUUCCUCUGCUCUCCGCUCUCGCCCGCUAGCUCUCCUCCCUUCCGCUCCUGCUUCUCUCCGGGUCUCCCGCUCCAGCUCCAGCCCCACCCGGCCGGUCCCGCACGGCUCCGGGUAGCC\
) } def
/len { sequence length } bind def

/coor [
[393.96084595 628.64904785]
[384.49975586 613.94866943]
[381.40957642 596.70629883]
[385.19180298 579.56622314]
[395.29177856 565.16766357]
[386.95825195 552.69561768]
[378.62469482 540.22357178]
[370.29113770 527.75152588]
[357.43145752 527.03228760]
[347.17922974 518.91876221]
[343.41363525 506.19546509]
[347.72314453 493.44046021]
[339.56530762 480.85275269]
[331.40750122 468.26507568]
[323.24966431 455.67736816]
[316.98013306 451.77743530]
[315.06713867 442.85543823]
[307.08666992 430.15457153]
[299.10620117 417.45373535]
[291.12570190 404.75286865]
[283.14523315 392.05200195]
[275.16473389 379.35113525]
[260.31643677 378.53536987]
[248.65773010 369.02017212]
[244.79228210 354.29226685]
[250.40515137 339.94647217]
[242.42466736 327.24560547]
[234.44418335 314.54473877]
[230.07881165 312.62878418]
[226.86631775 307.95523071]
[226.42378235 301.37384033]
[218.80265808 288.45416260]
[211.18153381 275.53448486]
[203.56039429 262.61477661]
[195.93927002 249.69508362]
[188.31813049 236.77540588]
[166.42796326 227.72392273]
[166.22354126 203.32403564]
[157.37275696 191.21356201]
[148.52198792 179.10308838]
[139.67120361 166.99261475]
[130.82041931 154.88214111]
[121.96962738 142.77165222]
[113.11885071 130.66117859]
[104.26806641 118.55070496]
[84.81597137 117.63366699]
[72.57678986 97.88067627]
[58.16302872 93.72814178]
[43.74926758 89.57560730]
[29.33550835 85.42307281]
[19.82260704 97.24594879]
[6.54373598 104.50643158]
[-8.46267605 106.12546539]
[-22.90654755 101.88729095]
[-34.59563065 92.46761322]
[-41.76822662 79.32610321]
[-43.35868073 64.48023987]
[-57.77244186 60.32770920]
[-73.17522430 63.94223404]
[-83.26312256 52.98397064]
[-97.67687988 48.83143616]
[-112.09063721 44.67890549]
[-126.50440216 40.52637100]
[-141.18467712 46.99700928]
[-155.32919312 39.42654419]
[-158.08750916 23.62239265]
[-147.34365845 11.70814228]
[-131.33941650 12.82339001]
[-122.35186768 26.11261177]
[-107.93811035 30.26514435]
[-93.52434540 34.41767502]
[-79.11058807 38.57020950]
[-64.73876953 34.65866470]
[-53.61990738 45.91394806]
[-39.20614624 50.06647873]
[-29.96099472 38.34230042]
[-16.89608002 31.03111649]
[-1.98708379 29.27421951]
[12.49773884 33.37025452]
[24.34265518 42.72501755]
[31.72338676 55.93743134]
[33.48804092 71.00931549]
[47.90179825 75.16184998]
[62.31555939 79.31438446]
[76.72931671 83.46691132]
[88.32447815 73.95101166]
[87.06372070 59.00409317]
[85.80296326 44.05717087]
[74.01121521 33.87913132]
[72.94554901 18.70286751]
[82.72142029 7.52396202]
[81.46066284 -7.42296028]
[80.09512329 -22.36067390]
[78.62486267 -37.28844452]
[74.67266846 -45.51289368]
[77.24017334 -52.43565750]
[75.97941589 -67.38258362]
[74.71865845 -82.32950592]
[73.45790100 -97.27642822]
[64.76473236 -103.79401398]
[61.16277313 -113.81176758]
[63.61237717 -123.94609833]
[71.07167816 -130.91290283]
[70.23062134 -145.88931274]
[69.38956451 -160.86570740]
[68.54850769 -175.84211731]
[55.91716003 -185.06074524]
[52.21681213 -200.25421143]
[59.19466019 -214.24862671]
[73.55596924 -220.43624878]
[88.51977539 -215.89549255]
[97.02062225 -202.77033997]
[95.04467010 -187.25808716]
[83.52490997 -176.68316650]
[84.36596680 -161.70677185]
[85.20702362 -146.73036194]
[86.04808044 -131.75396729]
[97.79013824 -116.38447571]
[88.40482330 -98.53718567]
[89.66558075 -83.59026337]
[90.92633820 -68.64334106]
[92.18709564 -53.69641495]
[93.55263519 -38.75870132]
[95.02289581 -23.83093071]
[98.80305481 -17.48844337]
[96.40758514 -8.68371868]
[97.66834259 6.26320410]
[109.17862701 15.64664364]
[110.67014313 30.78698921]
[100.74988556 42.79640961]
[102.01064301 57.74333572]
[103.27140045 72.69025421]
[120.86735535 89.70172882]
[116.37854004 109.69992065]
[125.22932434 121.81040192]
[134.08010864 133.92086792]
[142.93089294 146.03135681]
[151.78167725 158.14183044]
[160.63246155 170.25230408]
[169.48324585 182.36277771]
[178.33403015 194.47325134]
[184.56037903 193.68161011]
[190.72140503 194.64697266]
[196.33421326 197.27098083]
[200.96524048 201.32623291]
[204.26367188 206.47572327]
[205.98799133 212.30087280]
[206.02357483 218.33547974]
[204.39001465 224.10301208]
[201.23782349 229.15426636]
[208.85896301 242.07395935]
[216.48008728 254.99365234]
[224.10121155 267.91333008]
[231.72235107 280.83303833]
[239.34347534 293.75271606]
[247.14505005 306.56423950]
[255.12553406 319.26510620]
[263.10601807 331.96597290]
[278.46646118 333.13336182]
[290.05871582 343.00622559]
[293.57308960 357.63882446]
[287.86560059 371.37066650]
[295.84609985 384.07150269]
[303.82656860 396.77236938]
[311.80703735 409.47323608]
[319.78753662 422.17410278]
[327.76800537 434.87496948]
[335.83737183 447.51956177]
[343.99517822 460.10723877]
[352.15301514 472.69494629]
[360.31082153 485.28262329]
[377.48648071 488.62527466]
[386.74423218 503.07379150]
[382.76318359 519.41796875]
[391.09674072 531.89001465]
[399.43029785 544.36206055]
[407.76382446 556.83410645]
[420.01861572 553.38842773]
[432.73004150 553.52172852]
[444.87564087 557.21319580]
[455.48138428 564.15637207]
[463.69964600 573.78430176]
[468.87695312 585.31597900]
[470.60601807 597.81964111]
[468.75769043 610.28820801]
[463.49060059 621.72009277]
[455.23754883 631.19995117]
[463.03912354 644.01147461]
[473.72769165 645.96209717]
[481.42340088 653.31774902]
[483.75625610 663.47961426]
[480.19219971 673.04382324]
[487.63140869 686.06915283]
[495.07058716 699.09442139]
[502.50976562 712.11975098]
[509.94897461 725.14508057]
[517.57006836 738.06475830]
[525.37164307 750.87628174]
[533.17321777 763.68780518]
[540.97479248 776.49932861]
[556.45092773 777.62591553]
[568.28747559 787.65966797]
[571.93298340 802.74243164]
[565.98577881 817.07458496]
[552.73260498 825.14508057]
[537.26959229 823.85070801]
[525.54260254 813.68914795]
[522.06091309 798.56768799]
[528.16326904 784.30090332]
[520.36169434 771.48937988]
[512.56011963 758.67785645]
[504.75857544 745.86633301]
[500.42050171 743.88934326]
[497.27383423 739.17120361]
[496.92367554 732.58422852]
[489.48446655 719.55895996]
[482.04528809 706.53363037]
[474.60610962 693.50836182]
[467.16690063 680.48303223]
[449.79806519 671.97308350]
[450.22760010 651.81304932]
[442.42602539 639.00152588]
[425.34545898 642.19134521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 177]
[6 176]
[7 175]
[8 174]
[12 171]
[13 170]
[14 169]
[15 168]
[17 167]
[18 166]
[19 165]
[20 164]
[21 163]
[22 162]
[26 158]
[27 157]
[28 156]
[31 155]
[32 154]
[33 153]
[34 152]
[35 151]
[36 150]
[38 141]
[39 140]
[40 139]
[41 138]
[42 137]
[43 136]
[44 135]
[45 134]
[47 85]
[48 84]
[49 83]
[50 82]
[57 75]
[58 74]
[60 72]
[61 71]
[62 70]
[63 69]
[86 132]
[87 131]
[88 130]
[91 127]
[92 126]
[93 124]
[94 123]
[96 122]
[97 121]
[98 120]
[99 119]
[103 117]
[104 116]
[105 115]
[106 114]
[187 222]
[188 221]
[192 219]
[193 218]
[194 217]
[195 216]
[196 215]
[197 212]
[198 211]
[199 210]
[200 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
