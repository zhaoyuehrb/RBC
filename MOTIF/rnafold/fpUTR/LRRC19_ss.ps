%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACAAAGUGAAAUGUAAUCAUACGAUGUACUUUUUUUAAUGCCGUUGAAACAGAGUUAAUUUCCUUUAGCACACAAGUCUUAGAGACAAAAGAAAAAAAGGUCUGCAAC\
) } def
/len { sequence length } bind def

/coor [
[26.89175415 149.01896667]
[8.69063759 140.00183105]
[-5.00111103 146.12849426]
[-18.69285965 152.25515747]
[-28.12917137 164.95423889]
[-42.90666580 163.09014893]
[-56.59841537 169.21681213]
[-70.29016876 175.34347534]
[-83.98191071 181.47013855]
[-97.67366028 187.59680176]
[-111.36540985 193.72346497]
[-114.66857910 208.76989746]
[-126.06497955 218.86817932]
[-141.04518127 220.30255127]
[-153.84432983 212.73155212]
[-167.53607178 218.85821533]
[-181.22782898 224.98487854]
[-194.91957092 231.11154175]
[-204.09034729 244.70672607]
[-220.42839050 243.29243469]
[-227.12652588 228.32356262]
[-217.29429626 215.19880676]
[-201.04623413 217.41979980]
[-187.35449219 211.29313660]
[-173.66273499 205.16647339]
[-159.97099304 199.03981018]
[-157.08758545 184.45130920]
[-146.03605652 174.23722839]
[-130.91238403 172.46855164]
[-117.49207306 180.03170776]
[-103.80032349 173.90504456]
[-90.10858154 167.77838135]
[-76.41683197 161.65171814]
[-62.72507858 155.52505493]
[-49.03333282 149.39839172]
[-40.57634735 137.13752747]
[-24.81952477 138.56341553]
[-11.12777519 132.43675232]
[2.56397390 126.31008148]
[3.07866979 116.64938354]
[7.17573547 107.82077026]
[14.30630970 101.11045074]
[23.47624016 97.51380157]
[33.38456345 97.58787537]
[42.60805893 101.36560822]
[49.80566788 108.34480286]
[64.09729767 103.78964996]
[78.38892365 99.23449707]
[92.68054962 94.67934418]
[94.98104858 91.38410950]
[98.77484131 89.17581940]
[103.51488495 88.71945190]
[108.36846161 90.39707947]
[122.99238586 87.05926514]
[137.61630249 83.72145081]
[152.24021912 80.38363647]
[163.97268677 69.76949310]
[178.10256958 74.48072052]
[192.72648621 71.14290619]
[201.69062805 56.20133972]
[218.34416199 52.37051010]
[232.37326050 61.52665710]
[246.89781189 57.78001022]
[261.42236328 54.03336334]
[275.94692993 50.28671646]
[290.10516357 45.33253098]
[303.79690552 39.20586777]
[317.48867798 33.07920074]
[331.18041992 26.95253754]
[344.87216187 20.82587433]
[358.56390381 14.69921017]
[368.00021362 2.00013137]
[382.77770996 3.86422849]
[396.46948242 -2.26243544]
[405.64025879 -15.85761547]
[421.97830200 -14.44331837]
[428.67642212 0.52554929]
[418.84417725 13.65029907]
[402.59613037 11.42931366]
[388.90438843 17.55597687]
[380.44738770 29.81683731]
[364.69058228 28.39095879]
[350.99884033 34.51762390]
[337.30706787 40.64428711]
[323.61532593 46.77095032]
[309.92358398 52.89761353]
[296.23184204 59.02428055]
[309.39181519 66.22251129]
[313.85485840 80.54317474]
[307.11437988 93.94338989]
[292.95599365 98.89723969]
[279.33148193 92.62249756]
[273.89270020 78.64324188]
[279.69357300 64.81127167]
[265.16900635 68.55791473]
[250.64445496 72.30456543]
[236.11990356 76.05120850]
[231.14012146 88.02550507]
[219.98268127 95.01132965]
[206.64559937 94.23864746]
[196.06430054 85.76683044]
[181.44038391 89.10464478]
[170.75392151 99.48003387]
[155.57803345 95.00755310]
[140.95411682 98.34536743]
[126.33020020 101.68318176]
[111.70627594 105.02099609]
[97.23570251 108.97097015]
[82.94406891 113.52612305]
[68.65244293 118.08127594]
[54.36081696 122.63642883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 39]
[3 38]
[4 37]
[6 35]
[7 34]
[8 33]
[9 32]
[10 31]
[11 30]
[15 26]
[16 25]
[17 24]
[18 23]
[46 111]
[47 110]
[48 109]
[49 108]
[53 107]
[54 106]
[55 105]
[56 104]
[58 102]
[59 101]
[62 97]
[63 96]
[64 95]
[65 94]
[66 87]
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
[73 80]
[74 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
