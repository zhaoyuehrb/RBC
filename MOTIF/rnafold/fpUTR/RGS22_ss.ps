%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCCUCGGCCUCCCUGGGCGGCCGUAUUGUCUAAGCUCCAUAGCAACCCCGGCGCGGCGCCGGCCACGCUAGCCAGCGUAGCUCCGGAGCCCGCGCGCCGUCGCCGCGUCGCUCAGGCCCUGACCCGCGCUGGACCCGCGCGCUAGGGCCCUGACGGCCCGCGCGGGCUCCAGGCGCGGGCAGCGGGGACGGC\
) } def
/len { sequence length } bind def

/coor [
[133.35853577 117.70569611]
[115.82594299 141.59974670]
[109.31768799 155.11428833]
[102.80942535 168.62881470]
[96.30117035 182.14334106]
[89.79291534 195.65788269]
[90.18790436 200.88769531]
[88.68069458 205.30030823]
[85.90403748 208.30624390]
[82.63319397 209.65412903]
[75.48285675 222.84020996]
[68.33251953 236.02629089]
[61.18217850 249.21235657]
[62.16087341 265.58227539]
[48.32628250 274.38775635]
[33.91025162 266.57046509]
[33.74275589 250.17216492]
[47.99610138 242.06202698]
[55.14643860 228.87594604]
[62.29677582 215.68986511]
[69.44711304 202.50378418]
[76.27838135 189.14962769]
[82.78663635 175.63508606]
[89.29489899 162.12055969]
[95.80315399 148.60601807]
[102.31140900 135.09149170]
[97.58839417 129.26542664]
[85.93624878 138.71145630]
[74.28410339 148.15748596]
[62.63195801 157.60351562]
[50.97966003 167.04936218]
[41.53401184 155.39689636]
[53.18592453 145.95137024]
[64.83807373 136.50534058]
[76.49021149 127.05931091]
[88.14235687 117.61327362]
[83.41934204 111.78720093]
[68.85079956 115.35897827]
[54.28225708 118.93075562]
[42.82194519 130.66076660]
[27.00244713 126.33924866]
[23.09750938 110.41180420]
[35.12419510 99.26322174]
[50.71048355 104.36221313]
[65.27902222 100.79043579]
[79.84756470 97.21865845]
[82.15375519 90.08203125]
[67.65625763 86.23202515]
[52.67103577 85.56639862]
[48.23223877 71.23820496]
[60.21669388 62.21751404]
[72.75718689 70.44696045]
[86.76614380 75.80877686]
[89.07233429 68.67214203]
[79.34890747 57.25045395]
[69.62548065 45.82876587]
[59.90205383 34.40707397]
[50.17863083 22.98538589]
[40.36397934 11.64198875]
[30.45873833 0.37761241]
[15.53541088 -4.87642145]
[12.94135475 -19.54339600]
[3.03611255 -30.80777168]
[-6.86912918 -42.07214737]
[-16.77437210 -53.33652496]
[-35.70355606 -53.81971359]
[-48.06634521 -67.73828125]
[-46.37176514 -85.95682526]
[-56.63296127 -96.89793396]
[-66.89415741 -107.83904266]
[-77.15534973 -118.78015137]
[-87.41654205 -129.72126770]
[-103.26090240 -133.95072937]
[-107.25838470 -149.85519409]
[-95.29672241 -161.07351685]
[-79.68105316 -156.06524658]
[-76.47543335 -139.98245239]
[-66.21424103 -129.04135132]
[-55.95304489 -118.10023499]
[-45.69184875 -107.15912628]
[-35.43065643 -96.21801758]
[-24.20465279 -98.33334351]
[-13.23987484 -94.72416687]
[-5.30181456 -86.17879486]
[-2.45120597 -74.74539948]
[-5.50999498 -63.24176788]
[4.39524746 -51.97739029]
[14.30048943 -40.71301270]
[24.20573044 -29.44863701]
[38.42057037 -25.00030708]
[41.72311401 -9.52762985]
[51.62835693 1.73674703]
[58.41466522 4.68744230]
[61.60031891 13.26196003]
[71.32374573 24.68364906]
[81.04717255 36.10533905]
[90.77059937 47.52702713]
[100.49402618 58.94871902]
[114.11112976 65.23953247]
[129.11112976 65.23953247]
[144.11112976 65.23953247]
[159.11112976 65.23953247]
[174.11112976 65.23953247]
[189.11112976 65.23953247]
[202.91130066 57.50222778]
[215.63858032 65.23953247]
[230.63858032 65.23953247]
[245.63858032 65.23953247]
[260.63858032 65.23953247]
[273.70834351 57.87876511]
[281.48425293 45.05162430]
[289.26013184 32.22448349]
[286.85186768 16.36321449]
[297.85647583 4.68938732]
[313.83215332 6.15816259]
[322.52374268 19.64282227]
[317.26376343 34.79908752]
[302.08728027 40.00037003]
[294.31140137 52.82751465]
[286.53549194 65.65465546]
[289.51632690 72.53685760]
[295.47793579 86.30126953]
[298.45877075 93.18347168]
[313.13430786 96.28646851]
[322.19049072 94.99950409]
[328.01931763 99.55859375]
[342.64324951 102.89640808]
[357.26715088 106.23422241]
[371.89108276 109.57203674]
[386.51498413 112.90985107]
[401.13891602 116.24766541]
[415.76281738 119.58547974]
[430.41302490 122.80598450]
[445.08856201 125.90898132]
[459.76409912 129.01197815]
[474.43963623 132.11497498]
[489.13958740 135.10025024]
[503.86297607 137.96763611]
[518.58636475 140.83502197]
[533.30975342 143.70239258]
[548.03314209 146.56977844]
[562.75653076 149.43714905]
[577.47991943 152.30453491]
[581.55859375 150.73481750]
[585.52429199 150.56906128]
[588.94738770 151.59785461]
[591.51135254 153.49328613]
[593.04125977 155.85630798]
[607.55065918 159.66113281]
[622.06011963 163.46594238]
[636.56951904 167.27076721]
[651.07897949 171.07559204]
[665.59942627 164.25389099]
[679.92187500 171.48213196]
[683.05932617 187.21540833]
[672.60498047 199.38450623]
[656.57855225 198.65432739]
[647.27410889 185.58500671]
[632.76470947 181.78019714]
[618.25531006 177.97537231]
[603.74584961 174.17054749]
[589.23645020 170.36573792]
[574.61254883 167.02792358]
[559.88916016 164.16053772]
[545.16577148 161.29316711]
[530.44238281 158.42578125]
[515.71899414 155.55839539]
[500.99557495 152.69102478]
[486.27218628 149.82363892]
[479.09680176 151.63311768]
[471.33663940 146.79051208]
[456.66110229 143.68751526]
[441.98556519 140.58451843]
[427.31002808 137.48152161]
[420.10653687 139.17576599]
[412.42501831 134.20939636]
[397.80108643 130.87158203]
[383.17718506 127.53376770]
[368.55325317 124.19595337]
[353.92935181 120.85813904]
[339.30541992 117.52032471]
[324.68148804 114.18251038]
[310.03131104 110.96200562]
[295.35577393 107.85900879]
[260.63858032 80.23953247]
[245.63858032 80.23953247]
[230.63858032 80.23953247]
[215.63858032 80.23953247]
[202.91130066 87.97682953]
[189.11112976 80.23953247]
[174.11112976 80.23953247]
[159.11112976 80.23953247]
[144.11112976 80.23953247]
[129.11112976 80.23953247]
[114.11112976 80.23953247]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 26]
[3 25]
[4 24]
[5 23]
[6 22]
[10 21]
[11 20]
[12 19]
[13 18]
[37 46]
[38 45]
[39 44]
[54 98]
[55 97]
[56 96]
[57 95]
[58 94]
[59 92]
[60 91]
[62 89]
[63 88]
[64 87]
[65 86]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
[99 195]
[100 194]
[101 193]
[102 192]
[103 191]
[104 190]
[106 188]
[107 187]
[108 186]
[109 185]
[110 120]
[111 119]
[112 118]
[123 184]
[124 183]
[126 182]
[127 181]
[128 180]
[129 179]
[130 178]
[131 177]
[132 176]
[133 174]
[134 173]
[135 172]
[136 171]
[137 169]
[138 168]
[139 167]
[140 166]
[141 165]
[142 164]
[143 163]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
