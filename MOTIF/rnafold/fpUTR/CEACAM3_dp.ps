%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CEACAM3)
} def

/sequence { (\
AGAGCCUAAGUCACAGUAGCCCUGACUACAGCAUUCCUGGAGCCCAGGCUCUUUUCCACAGAGGAGGAAAGAGCAGGCAGCAGAGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.024067221 ubox
1 23 0.022431877 ubox
1 35 0.113211717 ubox
1 52 0.020004117 ubox
2 6 0.024938150 ubox
2 12 0.072195206 ubox
2 22 0.023807220 ubox
2 34 0.216782355 ubox
2 35 0.135173023 ubox
2 36 0.159564297 ubox
2 51 0.029693415 ubox
3 11 0.070210034 ubox
3 23 0.005573185 ubox
3 34 0.157658800 ubox
3 35 0.151916332 ubox
3 50 0.029759202 ubox
4 11 0.035081750 ubox
4 17 0.004045636 ubox
4 20 0.029154235 ubox
4 22 0.005703373 ubox
4 32 0.939513111 ubox
4 34 0.056395683 ubox
4 49 0.029792649 ubox
4 78 0.096557419 ubox
4 81 0.008533104 ubox
5 10 0.042871788 ubox
5 16 0.004047904 ubox
5 19 0.023819636 ubox
5 31 0.933380741 ubox
5 40 0.003327286 ubox
5 48 0.029794751 ubox
5 77 0.096658642 ubox
5 80 0.008388456 ubox
6 16 0.009804269 ubox
6 19 0.021213168 ubox
6 31 0.143354640 ubox
6 39 0.003333614 ubox
6 47 0.029802879 ubox
6 76 0.096635577 ubox
6 85 0.019282664 ubox
7 15 0.010015678 ubox
7 18 0.027123530 ubox
7 28 0.134442322 ubox
7 30 0.173483475 ubox
7 46 0.029358000 ubox
7 75 0.091937120 ubox
7 84 0.018733499 ubox
8 17 0.026888805 ubox
8 27 0.098724865 ubox
8 35 0.005360719 ubox
9 27 0.940058016 ubox
9 34 0.006840875 ubox
9 35 0.011542648 ubox
10 20 0.005214180 ubox
10 26 0.974479101 ubox
10 29 0.021163485 ubox
10 32 0.033414450 ubox
10 34 0.015704281 ubox
10 43 0.030085047 ubox
10 78 0.003832957 ubox
10 87 0.112646652 ubox
11 19 0.005128094 ubox
11 25 0.972835815 ubox
11 28 0.020482277 ubox
11 31 0.032717683 ubox
11 33 0.015572851 ubox
11 41 0.011156224 ubox
11 42 0.029567508 ubox
11 77 0.003836987 ubox
11 86 0.112933571 ubox
12 24 0.960468147 ubox
12 40 0.011938130 ubox
12 76 0.003822002 ubox
12 85 0.112816102 ubox
13 23 0.859900921 ubox
14 24 0.170213520 ubox
14 39 0.032556873 ubox
15 23 0.259865147 ubox
15 27 0.016047234 ubox
15 35 0.006081707 ubox
15 38 0.032557840 ubox
16 22 0.333342197 ubox
16 26 0.016643543 ubox
16 29 0.207320650 ubox
16 32 0.005396065 ubox
16 34 0.007917791 ubox
16 37 0.032411676 ubox
16 81 0.021349884 ubox
17 24 0.004148675 ubox
17 25 0.016045809 ubox
17 28 0.207605008 ubox
17 31 0.004598861 ubox
17 33 0.008033509 ubox
17 80 0.020378218 ubox
18 23 0.010795510 ubox
18 27 0.207653837 ubox
18 35 0.020670113 ubox
19 26 0.206625081 ubox
19 32 0.020594032 ubox
19 34 0.020410248 ubox
19 78 0.023092552 ubox
20 31 0.019546066 ubox
20 77 0.022759282 ubox
21 76 0.022250212 ubox
21 77 0.005552057 ubox
22 31 0.050759900 ubox
22 47 0.008989638 ubox
22 76 0.007176261 ubox
23 30 0.052661351 ubox
23 33 0.004539438 ubox
23 46 0.009029987 ubox
23 75 0.008464127 ubox
24 29 0.052693477 ubox
24 32 0.005319905 ubox
24 45 0.009007212 ubox
24 74 0.008276214 ubox
26 42 0.008432642 ubox
26 73 0.004696338 ubox
27 41 0.006495469 ubox
27 72 0.004577501 ubox
29 39 0.016101246 ubox
30 38 0.016218205 ubox
31 37 0.016148494 ubox
31 43 0.004221657 ubox
31 74 0.003673746 ubox
32 42 0.004226341 ubox
32 73 0.003634747 ubox
34 84 0.013165067 ubox
34 85 0.084576394 ubox
34 86 0.166566926 ubox
35 68 0.003183754 ubox
35 83 0.004846395 ubox
35 84 0.127522242 ubox
35 85 0.174897175 ubox
35 86 0.749237587 ubox
36 47 0.004285154 ubox
36 48 0.031255556 ubox
36 67 0.003213335 ubox
36 83 0.093456569 ubox
36 85 0.816025422 ubox
37 47 0.097840745 ubox
37 66 0.003202938 ubox
37 80 0.003975373 ubox
37 83 0.988545047 ubox
37 85 0.011253985 ubox
38 46 0.098199046 ubox
38 79 0.003995713 ubox
38 82 0.993811622 ubox
38 84 0.008927622 ubox
39 45 0.098271250 ubox
39 52 0.004816298 ubox
39 81 0.994167725 ubox
40 44 0.096685144 ubox
40 51 0.007784912 ubox
41 50 0.007808840 ubox
42 49 0.007820962 ubox
42 78 0.993746276 ubox
42 81 0.005909843 ubox
43 48 0.007819399 ubox
43 77 0.986873755 ubox
43 80 0.005981456 ubox
44 76 0.977765129 ubox
44 77 0.123152910 ubox
45 76 0.170944491 ubox
48 74 0.998533574 ubox
49 66 0.003212893 ubox
49 71 0.008535487 ubox
49 73 0.999454409 ubox
50 65 0.003232598 ubox
50 70 0.008418618 ubox
50 72 0.999300295 ubox
51 64 0.003238819 ubox
51 66 0.003247809 ubox
51 71 0.998183389 ubox
52 63 0.003237390 ubox
52 65 0.004311876 ubox
52 67 0.004244642 ubox
52 68 0.145769288 ubox
52 69 0.056480764 ubox
52 70 0.904416663 ubox
52 71 0.048821957 ubox
53 62 0.003248694 ubox
53 64 0.005632353 ubox
53 66 0.010125518 ubox
53 67 0.244276146 ubox
53 68 0.071750493 ubox
53 69 0.780233294 ubox
53 70 0.383633298 ubox
54 61 0.003199054 ubox
54 63 0.007475525 ubox
54 65 0.014171376 ubox
54 66 0.378957116 ubox
54 67 0.064608574 ubox
54 68 0.607069005 ubox
54 69 0.543054396 ubox
54 70 0.003885729 ubox
55 62 0.009784200 ubox
55 64 0.014170818 ubox
55 65 0.531105863 ubox
55 66 0.033429456 ubox
55 67 0.333629542 ubox
55 68 0.669899253 ubox
55 69 0.005099227 ubox
56 61 0.010474244 ubox
56 63 0.016522599 ubox
56 64 0.575586002 ubox
56 66 0.262895586 ubox
56 67 0.772165466 ubox
57 63 0.579654860 ubox
57 66 0.772887641 ubox
73 81 0.025775770 ubox
74 80 0.025787337 ubox
76 88 0.003734408 ubox
77 87 0.003754392 ubox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
35 86 0.9500000 lbox
36 85 0.9500000 lbox
37 83 0.9500000 lbox
38 82 0.9500000 lbox
39 81 0.9500000 lbox
42 78 0.9500000 lbox
43 77 0.9500000 lbox
44 76 0.9500000 lbox
48 74 0.9500000 lbox
49 73 0.9500000 lbox
50 72 0.9500000 lbox
51 71 0.9500000 lbox
52 70 0.9500000 lbox
53 69 0.9500000 lbox
54 68 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
showpage
end
%%EOF
