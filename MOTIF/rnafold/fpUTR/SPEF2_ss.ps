%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCUUCCAUAGCAAAGGGUUGCCCUUGGCUACAGGAGGACGCGGGCUGGCAGGCUUGGUUCCUGGCGAGUUUCUAAGCCCCCGCCUGCGGUCUGAGGCACCGGCUGAACC\
) } def
/len { sequence length } bind def

/coor [
[57.59894943 144.37165833]
[59.10776520 129.44772339]
[68.13703156 117.46973419]
[82.06641388 111.91079712]
[68.05267334 117.26012421]
[54.03894424 122.60944366]
[40.02520752 127.95877075]
[26.01147461 133.30809021]
[14.82056904 147.84721375]
[-2.35645080 144.56738281]
[-16.21464348 150.30763245]
[-30.07283592 156.04789734]
[-43.93103027 161.78814697]
[-53.71979141 174.21757507]
[-68.43919373 171.93975830]
[-82.29738617 177.68000793]
[-96.15557861 183.42025757]
[-110.01377106 189.16050720]
[-123.87196350 194.90075684]
[-136.19157410 206.54821777]
[-150.79426575 197.93440247]
[-146.55949402 181.51785278]
[-129.61221313 181.04257202]
[-115.75402069 175.30232239]
[-101.89582825 169.56207275]
[-88.03763580 163.82180786]
[-74.17944336 158.08155823]
[-65.38191223 146.06271362]
[-49.67127991 147.92994690]
[-35.81308746 142.18969727]
[-21.95489502 136.44944763]
[-8.09670258 130.70919800]
[-3.11961222 119.58540344]
[8.49704742 114.73341370]
[20.66215134 119.29435730]
[34.67588425 113.94503784]
[48.68962097 108.59571075]
[62.70335388 103.24639130]
[76.71708679 97.89706421]
[86.42379761 83.18135834]
[102.42516327 80.29769135]
[110.04629517 67.37800598]
[117.66742706 54.45831680]
[125.28855896 41.53862762]
[132.90968323 28.61893654]
[140.53082275 15.69924736]
[148.15194702 2.77955747]
[148.49923706 -13.03783703]
[161.62988281 -20.06886482]
[169.25102234 -32.98855591]
[169.70935059 -39.81887054]
[173.11688232 -44.59314728]
[177.67913818 -46.40184021]
[186.01269531 -58.87388611]
[194.34625244 -71.34593201]
[202.67980957 -83.81797028]
[211.01335144 -96.29001617]
[219.34690857 -108.76206207]
[227.68046570 -121.23410797]
[222.47215271 -135.73167419]
[226.74914551 -150.34539795]
[238.67012024 -159.52986145]
[253.53547668 -159.92886353]
[261.86901855 -172.40090942]
[262.40106201 -188.79142761]
[276.98733521 -196.28627014]
[290.62274170 -187.17538452]
[289.28033447 -170.83128357]
[274.34106445 -164.06735229]
[266.00750732 -151.59530640]
[271.32760620 -137.70881653]
[267.40423584 -123.18053436]
[255.53965759 -113.63667297]
[240.15251160 -112.90055084]
[231.81895447 -100.42850494]
[223.48539734 -87.95646667]
[215.15184021 -75.48442078]
[206.81829834 -63.01237488]
[198.48474121 -50.54033279]
[190.15118408 -38.06828690]
[182.17070007 -25.36742401]
[174.54957581 -12.44773483]
[174.74739075 2.44555664]
[161.07164001 10.40068817]
[153.45050049 23.32037735]
[145.82937622 36.24006653]
[138.20825195 49.15975571]
[130.58711243 62.07944489]
[122.96598816 74.99913788]
[115.34485626 87.91882324]
[127.17427826 78.69577026]
[142.13459778 79.78607941]
[152.50177002 90.62682343]
[152.92320251 105.62089539]
[143.18130493 117.02684021]
[128.30584717 118.95572662]
[115.97589874 110.40997314]
[124.30944824 122.88201904]
[132.64300537 135.35406494]
[147.58226013 142.11798096]
[148.92466736 158.46209717]
[135.28927612 167.57296753]
[120.70300293 160.07812500]
[120.17095947 143.68762207]
[111.83740234 131.21557617]
[103.50385284 118.74353027]
[111.64803314 131.34004211]
[112.07931519 146.33384705]
[104.67265320 159.37767029]
[91.57551575 166.68963623]
[76.58523560 166.14973450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 39]
[5 38]
[6 37]
[7 36]
[8 35]
[10 32]
[11 31]
[12 30]
[13 29]
[15 27]
[16 26]
[17 25]
[18 24]
[19 23]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[49 82]
[50 81]
[53 80]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[63 70]
[64 69]
[97 106]
[98 105]
[99 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
