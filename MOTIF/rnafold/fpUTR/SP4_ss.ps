%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAAGGGCGAGUCAGCCGGGCUCGGGCGGAGAGAGGAGCUGCUACGCCACAGCCCAGCGGCGGCCAUUCGCGGAAAAAGAGGCAGAGCCUGUGCCAGCUACAGCCUCCUCCGAGCCACCGCGGGCGGGCGGGACCGGCCUCUCCUCCCGCCUCGCCCCCACCCCCACCCACCUCUAUCCCAGUGUCUCCGUCUGAGGGUUUGUCCUGUUAAUGCGGG\
) } def
/len { sequence length } bind def

/coor [
[143.87542725 381.73919678]
[142.80046082 396.70062256]
[134.38882446 409.12014771]
[127.83903503 395.62564087]
[128.91400146 380.66421509]
[129.98896790 365.70278931]
[122.50824738 365.16531372]
[117.24337769 379.21099854]
[111.97851562 393.25668335]
[118.74774170 407.53790283]
[113.35734558 422.39450073]
[99.00536346 429.01235962]
[84.20655823 423.46520996]
[77.74081421 409.04403687]
[83.44412994 394.30471802]
[97.93283081 387.99182129]
[103.19770050 373.94613647]
[108.46256256 359.90045166]
[97.83695984 337.78753662]
[100.22183990 314.67416382]
[113.57270050 297.26440430]
[132.86071777 289.90603638]
[132.86071777 274.90603638]
[132.86071777 259.90603638]
[132.86071777 244.90603638]
[132.86071777 229.90603638]
[132.86071777 214.90603638]
[132.86071777 199.90603638]
[132.86071777 184.90603638]
[132.86071777 169.90603638]
[132.86071777 154.90603638]
[132.86071777 139.90603638]
[132.86071777 124.90604401]
[109.62928009 135.86015320]
[87.21211243 130.45219421]
[74.80197144 114.20475006]
[60.27215195 117.93093109]
[52.74225616 123.09110260]
[45.50717545 121.60475159]
[30.92540169 125.12212372]
[16.34362793 128.63949585]
[1.76185524 132.15686035]
[-4.03615189 146.55001831]
[-17.20475769 154.75778198]
[-32.68036652 153.62411499]
[-44.51228714 143.58493042]
[-48.15090942 128.50048828]
[-42.19710159 114.17108917]
[-28.94023323 106.10665894]
[-13.47783470 107.40814209]
[-1.75551558 117.57508850]
[12.82625771 114.05772400]
[27.40802956 110.54035187]
[41.98980331 107.02297974]
[56.54597092 103.40110779]
[71.07579041 99.67493439]
[84.32117462 68.61946869]
[124.38677979 66.75210571]
[116.42582703 54.03899002]
[108.46487427 41.32587433]
[100.50392914 28.61276054]
[86.62208557 21.02296829]
[86.42501831 6.12966585]
[78.46406555 -6.58344793]
[70.50311279 -19.29656219]
[63.00680161 -19.29851341]
[56.03841400 -21.87161064]
[50.44322586 -26.65355682]
[46.88246918 -33.01730347]
[45.75535202 -40.15300751]
[47.15474701 -47.17098618]
[50.86145020 -53.21263885]
[43.83204651 -66.46357727]
[36.80264282 -79.71452332]
[29.77323723 -92.96546936]
[20.48136139 -94.50460815]
[13.04760456 -100.06121826]
[9.06096268 -108.28981781]
[9.30051613 -117.29260254]
[13.58633232 -125.05672455]
[7.13352156 -138.59782410]
[0.68071085 -152.13891602]
[-5.77209997 -165.68000793]
[-12.22491074 -179.22109985]
[-28.81926155 -184.76602173]
[-36.12260056 -200.29246521]
[-30.05591202 -215.98080444]
[-36.70230103 -229.42794800]
[-43.34869003 -242.87507629]
[-58.66609955 -245.35633850]
[-69.57578278 -256.39074707]
[-71.88274384 -271.73538208]
[-64.69990540 -285.48989868]
[-50.78922272 -292.36538696]
[-35.49963379 -289.71810913]
[-24.71029663 -278.56600952]
[-22.56993103 -263.19726562]
[-29.90155411 -249.52146912]
[-23.25516510 -236.07434082]
[-16.60877609 -222.62719727]
[-3.94896841 -220.24604797]
[5.16523600 -210.86935425]
[7.24727011 -197.76278687]
[1.31618392 -185.67391968]
[7.76899433 -172.13282776]
[14.22180557 -158.59172058]
[20.67461586 -145.05062866]
[27.12742615 -131.50953674]
[45.08414078 -121.32869720]
[43.02418137 -99.99487305]
[50.05358505 -86.74392700]
[57.08298874 -73.49298859]
[64.11238861 -60.24204254]
[84.30529022 -50.42852402]
[83.21622467 -27.25751305]
[91.17717743 -14.54439831]
[99.13813019 -1.83128476]
[112.45055389 4.84918118]
[113.21704102 20.65180969]
[121.17799377 33.36492538]
[129.13894653 46.07803726]
[137.09989929 58.79115295]
[151.89624023 61.25448608]
[163.54666138 51.80632019]
[175.19708252 42.35815430]
[186.84748840 32.90999222]
[198.49790955 23.46182632]
[210.08026123 13.93034172]
[221.59394836 4.31602764]
[233.10762024 -5.29828644]
[244.62130737 -14.91260052]
[256.13500977 -24.52691460]
[267.64868164 -34.14122772]
[279.16238403 -43.75554276]
[281.78936768 -49.81225967]
[286.38842773 -53.13800812]
[291.14703369 -53.47476959]
[302.93176270 -62.75484085]
[306.24618530 -78.45178986]
[320.64910889 -85.51828766]
[335.09185791 -78.53352356]
[338.49517822 -62.85560989]
[328.24835205 -50.51129913]
[312.21185303 -50.97009277]
[300.42709351 -41.69002151]
[288.77667236 -32.24185562]
[277.26300049 -22.62754250]
[265.74929810 -13.01322842]
[254.23562622 -3.39891434]
[242.72193909 6.21539974]
[231.20825195 15.82971382]
[219.69456482 25.44402695]
[216.57698059 32.14002228]
[207.94607544 35.11224365]
[196.29565430 44.56040573]
[184.64523315 54.00857162]
[172.99482727 63.45673752]
[161.34440613 72.90489960]
[162.46981812 80.31998444]
[177.22372437 77.61394501]
[191.97761536 74.90790558]
[206.73150635 72.20186615]
[220.63439941 66.57074738]
[230.88391113 77.52279663]
[224.34478760 91.02241516]
[209.39784241 89.76966858]
[194.50544739 91.56315613]
[179.61305237 93.35665131]
[164.72065735 95.15014648]
[165.84606934 102.56523132]
[179.77522278 108.13108063]
[193.70437622 113.69693756]
[205.72128296 104.13191986]
[220.91310120 101.87270355]
[235.19331360 107.52699280]
[244.72062683 119.57382202]
[246.93220520 134.77264404]
[241.23318481 149.03507996]
[229.15655518 158.52456665]
[213.95086670 160.68850708]
[199.70637512 154.94480896]
[190.25479126 142.83848572]
[188.13851929 127.62609100]
[174.20936584 122.06023407]
[160.28021240 116.49437714]
[147.86071777 124.90604401]
[147.86071777 139.90603638]
[147.86071777 154.90603638]
[147.86071777 169.90603638]
[147.86071777 184.90603638]
[147.86071777 199.90603638]
[147.86071777 214.90603638]
[147.86071777 229.90603638]
[147.86071777 244.90603638]
[147.86071777 259.90603638]
[147.86071777 274.90603638]
[147.86071777 289.90603638]
[158.46565247 292.50491333]
[168.16192627 298.24337769]
[176.01611328 306.80099487]
[181.20823669 317.57980347]
[183.11402893 329.74426270]
[181.37312317 342.28564453]
[175.93614197 354.10565186]
[167.08518982 364.11242676]
[170.28800964 378.76651001]
[173.49081421 393.42059326]
[176.69363403 408.07464600]
[179.89643860 422.72872925]
[191.33337402 434.48156738]
[186.61381531 450.18688965]
[170.59286499 453.68844604]
[159.75148010 441.38412476]
[165.24237061 425.93154907]
[162.03955078 411.27746582]
[158.83674622 396.62338257]
[155.63392639 381.96932983]
[152.43110657 367.31524658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 18]
[8 17]
[9 16]
[22 197]
[23 196]
[24 195]
[25 194]
[26 193]
[27 192]
[28 191]
[29 190]
[30 189]
[31 188]
[32 187]
[33 186]
[36 56]
[37 55]
[39 54]
[40 53]
[41 52]
[42 51]
[58 122]
[59 121]
[60 120]
[61 119]
[63 117]
[64 116]
[65 115]
[72 113]
[73 112]
[74 111]
[75 110]
[80 108]
[81 107]
[82 106]
[83 105]
[84 104]
[87 100]
[88 99]
[89 98]
[123 158]
[124 157]
[125 156]
[126 155]
[127 154]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[137 145]
[138 144]
[170 185]
[171 184]
[172 183]
[205 218]
[206 217]
[207 216]
[208 215]
[209 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
