%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAAUUUAGAGCCUCGAGGCCUGGGGUGGGGACGCGAGGACACCAGCGUAGAAGAGCUUACAUCAGAAUCGAGCUUUGUGGGCGCUCCGGGAUUUGGCCCUUUAGCGCGGAUCCUAGACAACAGGUUUUGGACCUCGAGAGCUGCAGAACUGAGGCUACUGGUGCCGCCAGCCUGCUGGCUCCGCCUCUGCCUCAGUUUCUUCCCCU\
) } def
/len { sequence length } bind def

/coor [
[95.28492737 192.72084045]
[94.83404541 177.72761536]
[94.38317108 162.73439026]
[93.93228912 147.74116516]
[93.48140717 132.74794006]
[83.57456207 129.07102966]
[75.31281281 122.48249817]
[69.52361298 113.64221191]
[66.78679657 103.43559265]
[67.37646484 92.88487244]
[71.23355865 83.04677582]
[60.35165024 72.72281647]
[49.46974182 62.39886093]
[38.51054764 52.15698242]
[27.47468948 41.99776077]
[16.43882942 31.83853531]
[5.40297127 21.67931175]
[-5.63288736 11.52008915]
[-16.66874504 1.36086547]
[-27.70460510 -8.79835796]
[-39.25942993 -18.36319160]
[-51.30124283 -27.30716896]
[-63.34305573 -36.25114441]
[-75.38487244 -45.19512177]
[-90.81844330 -43.08740234]
[-102.90314484 -52.32940674]
[-104.81742096 -67.05595398]
[-116.85923767 -75.99993134]
[-135.19482422 -77.69151306]
[-141.53131104 -94.05588531]
[-153.70620728 -102.81784821]
[-165.88110352 -111.57981873]
[-178.05598450 -120.34178162]
[-190.36120605 -128.91975403]
[-202.79396057 -137.31179810]
[-215.22673035 -145.70385742]
[-227.65948486 -154.09590149]
[-254.91490173 -149.01629639]
[-272.49349976 -175.16311646]
[-286.56735229 -180.35223389]
[-300.64120483 -185.54135132]
[-296.83370972 -171.03262329]
[-305.67898560 -158.91812134]
[-320.65805054 -158.12619019]
[-330.73141479 -169.24049377]
[-328.47497559 -184.06980896]
[-315.55227661 -191.68492126]
[-329.19674683 -197.91613770]
[-342.84121704 -204.14736938]
[-356.48571777 -210.37858582]
[-371.09851074 -201.86172485]
[-387.74319458 -203.71403503]
[-399.88272095 -215.00872803]
[-402.86825562 -231.15000916]
[-416.60482788 -237.17543030]
[-430.34143066 -243.20086670]
[-444.07803345 -249.22630310]
[-457.81463623 -255.25172424]
[-471.55123901 -261.27716064]
[-485.28784180 -267.30258179]
[-497.20556641 -257.69915771]
[-512.22338867 -254.74554443]
[-526.89031982 -259.12051392]
[-537.83593750 -269.81869507]
[-542.54516602 -284.38174438]
[-539.93566895 -299.46316528]
[-530.60723877 -311.59735107]
[-516.70343018 -317.99600220]
[-501.41925049 -317.18869019]
[-488.26684570 -309.36096191]
[-480.26858521 -296.31158447]
[-479.26242065 -281.03918457]
[-465.52581787 -275.01376343]
[-451.78921509 -268.98834229]
[-438.05261230 -262.96289062]
[-424.31600952 -256.93746948]
[-410.57940674 -250.91203308]
[-396.84280396 -244.88659668]
[-385.99194336 -252.66630554]
[-372.60647583 -254.07936096]
[-360.17190552 -248.65031433]
[-351.97930908 -237.69932556]
[-350.25448608 -224.02307129]
[-336.61001587 -217.79183960]
[-322.96551514 -211.56062317]
[-309.32104492 -205.32939148]
[-295.45208740 -199.61518860]
[-281.37823486 -194.42608643]
[-267.30441284 -189.23696899]
[-256.26855469 -199.39619446]
[-260.27770996 -213.85047913]
[-264.28689575 -228.30476379]
[-278.16424561 -235.86747742]
[-282.54919434 -251.05128479]
[-274.84017944 -264.84790039]
[-259.61087036 -269.07205200]
[-245.89651489 -261.21762085]
[-241.83361816 -245.94448853]
[-249.83261108 -232.31394958]
[-245.82342529 -217.85966492]
[-241.81425476 -203.40536499]
[-232.97450256 -200.82142639]
[-225.63986206 -195.85507202]
[-220.39512634 -189.15805054]
[-217.57821655 -181.50498962]
[-217.26248169 -173.70733643]
[-219.26744080 -166.52865601]
[-206.83468628 -158.13661194]
[-194.40191650 -149.74456787]
[-181.96916199 -141.35252380]
[-177.19187927 -141.36706543]
[-172.35507202 -138.37966919]
[-169.29402161 -132.51667786]
[-157.11912537 -123.75470734]
[-144.94424438 -114.99273682]
[-132.76934814 -106.23077393]
[-120.78294373 -107.86667633]
[-110.56785583 -100.66524506]
[-107.91526031 -88.04174042]
[-95.87344360 -79.09776306]
[-81.22190857 -81.52016449]
[-68.88238525 -72.62123871]
[-66.44089508 -57.23693466]
[-54.39907837 -48.29295731]
[-42.35726547 -39.34898376]
[-30.31545258 -30.40500641]
[-32.58113098 -45.23291016]
[-24.89421082 -58.11356354]
[-10.76833439 -63.15931320]
[3.33966136 -58.06378174]
[10.98110867 -45.15609741]
[8.66315556 -30.33627892]
[-2.55467820 -20.37835693]
[-17.54538155 -19.83421707]
[-6.50952244 -9.67499352]
[4.52633619 0.48423040]
[15.56219482 10.64345360]
[26.59805298 20.80267715]
[37.63391113 30.96190071]
[48.66976929 41.12112427]
[55.72105408 43.33890152]
[59.79369736 51.51695251]
[70.67560577 61.84090805]
[81.55751038 72.16486359]
[100.89618683 66.62161255]
[119.90953827 73.19458771]
[131.69581604 89.49782562]
[131.97662354 109.61331940]
[145.00440979 117.04813385]
[158.03221130 124.48294830]
[171.06001282 131.91777039]
[184.08779907 139.35258484]
[197.11560059 146.78739929]
[210.14340210 154.22222900]
[223.17120361 161.65704346]
[236.19898987 169.09185791]
[249.22679138 176.52667236]
[261.33477783 169.93791199]
[275.00878906 170.19070435]
[286.67874146 177.11206055]
[293.35067749 188.80191040]
[293.37457275 202.15348816]
[306.28912354 209.78327942]
[319.20370483 217.41308594]
[332.11828613 225.04287720]
[347.24511719 221.32588196]
[360.23364258 229.24755859]
[363.68402100 243.69160461]
[376.59860229 251.32139587]
[389.51315308 258.95120239]
[402.42773438 266.58099365]
[415.34231567 274.21078491]
[431.73712158 273.83398438]
[440.02853394 287.98263550]
[431.68707275 302.10183716]
[415.29370117 301.66696167]
[407.71252441 287.12536621]
[394.79794312 279.49557495]
[381.88336182 271.86578369]
[368.96878052 264.23596191]
[356.05422974 256.60617065]
[341.73812866 260.55398560]
[328.53222656 253.00025940]
[324.48846436 237.95745850]
[311.57391357 230.32765198]
[298.65933228 222.69786072]
[285.74475098 215.06805420]
[270.89959717 222.07345581]
[254.64109802 218.81788635]
[243.41497803 206.39006042]
[241.79197693 189.55447388]
[228.76417542 182.11965942]
[215.73637390 174.68482971]
[202.70858765 167.25001526]
[189.68078613 159.81520081]
[176.65298462 152.38038635]
[163.62519836 144.94557190]
[150.59739685 137.51074219]
[137.56959534 130.07592773]
[124.54180145 122.64111328]
[117.19972992 128.61973572]
[108.47463226 132.29707336]
[108.92551422 147.29029846]
[109.37638855 162.28350830]
[109.82727051 177.27673340]
[110.27814484 192.26995850]
[116.79785156 207.92018127]
[103.56407928 218.51751709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 202]
[11 144]
[12 143]
[13 142]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 126]
[22 125]
[23 124]
[24 123]
[27 120]
[28 119]
[30 116]
[31 115]
[32 114]
[33 113]
[34 110]
[35 109]
[36 108]
[37 107]
[39 89]
[40 88]
[41 87]
[47 86]
[48 85]
[49 84]
[50 83]
[54 78]
[55 77]
[56 76]
[57 75]
[58 74]
[59 73]
[60 72]
[90 101]
[91 100]
[92 99]
[148 200]
[149 199]
[150 198]
[151 197]
[152 196]
[153 195]
[154 194]
[155 193]
[156 192]
[157 191]
[162 187]
[163 186]
[164 185]
[165 184]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
