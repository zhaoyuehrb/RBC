%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:58:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PGAM5)
} def

/sequence { (\
GAAGCGUGUUCCUCGCGGAGCGCCGUCGGGGCCGUGGGCGCCUGCGCGGGCCGGCGCGGGAGCAAGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.012161708 ubox
1 11 0.116017124 ubox
1 27 0.394878141 ubox
2 9 0.013189990 ubox
2 10 0.117588379 ubox
2 26 0.353097985 ubox
3 9 0.114980730 ubox
3 10 0.011053455 ubox
4 9 0.009341954 ubox
4 16 0.006654728 ubox
4 21 0.004625517 ubox
4 23 0.092226898 ubox
4 26 0.683965288 ubox
4 67 0.182307373 ubox
4 70 0.015805348 ubox
5 15 0.006692104 ubox
5 17 0.011870574 ubox
5 20 0.004537599 ubox
5 22 0.093269458 ubox
5 25 0.723213146 ubox
5 28 0.032658113 ubox
5 31 0.003776541 ubox
5 66 0.182243679 ubox
5 68 0.025941579 ubox
5 69 0.014095694 ubox
6 14 0.006676320 ubox
6 16 0.012187260 ubox
6 21 0.084571406 ubox
6 23 0.734976705 ubox
6 24 0.514719631 ubox
6 27 0.017877836 ubox
6 67 0.026971867 ubox
6 70 0.003356420 ubox
7 15 0.012184307 ubox
7 20 0.078706742 ubox
7 22 0.899253574 ubox
7 64 0.176164231 ubox
7 66 0.021319616 ubox
8 14 0.012166178 ubox
8 21 0.907502558 ubox
8 23 0.011550189 ubox
8 32 0.007550670 ubox
8 63 0.185043505 ubox
9 19 0.010974769 ubox
9 20 0.907454151 ubox
9 22 0.010955173 ubox
9 31 0.008188553 ubox
9 62 0.184969486 ubox
10 18 0.010366251 ubox
10 19 0.910726442 ubox
10 30 0.027184471 ubox
10 31 0.044426847 ubox
10 60 0.003527002 ubox
10 61 0.184939948 ubox
11 17 0.010686772 ubox
11 18 0.911466024 ubox
11 28 0.003285407 ubox
11 29 0.032292108 ubox
11 30 0.253080684 ubox
11 31 0.164708659 ubox
11 59 0.005336979 ubox
11 60 0.184430660 ubox
12 17 0.909912666 ubox
12 18 0.004519225 ubox
12 20 0.006197786 ubox
12 28 0.032213282 ubox
12 29 0.253800766 ubox
12 30 0.261806360 ubox
12 58 0.006634015 ubox
12 59 0.183796669 ubox
12 60 0.014724232 ubox
13 17 0.005687084 ubox
13 19 0.006267682 ubox
13 28 0.233713863 ubox
13 29 0.262264920 ubox
13 37 0.004797911 ubox
13 58 0.078995763 ubox
13 59 0.020657816 ubox
14 18 0.006222895 ubox
14 25 0.003679335 ubox
14 28 0.277382781 ubox
14 36 0.010150788 ubox
14 56 0.074172815 ubox
14 58 0.166520658 ubox
15 23 0.004007179 ubox
15 26 0.244284808 ubox
15 27 0.271590631 ubox
15 35 0.010220621 ubox
15 45 0.003378193 ubox
15 55 0.074321982 ubox
15 57 0.168885253 ubox
16 22 0.004798554 ubox
16 25 0.366635191 ubox
16 34 0.010229555 ubox
16 44 0.003398202 ubox
16 53 0.048804115 ubox
16 54 0.056603557 ubox
16 56 0.168840083 ubox
17 21 0.004501638 ubox
17 24 0.366732864 ubox
17 33 0.010135787 ubox
17 43 0.003426580 ubox
17 52 0.069106670 ubox
17 55 0.168107674 ubox
18 23 0.365093428 ubox
18 32 0.007351469 ubox
18 42 0.003435561 ubox
18 51 0.069034438 ubox
20 32 0.007114522 ubox
20 41 0.003571036 ubox
20 47 0.005431563 ubox
20 51 0.161806680 ubox
20 57 0.006437059 ubox
21 31 0.009465421 ubox
21 40 0.003669675 ubox
21 46 0.005438972 ubox
21 48 0.068988089 ubox
21 50 0.162237341 ubox
21 53 0.010313445 ubox
21 56 0.006481188 ubox
22 32 0.016203461 ubox
22 39 0.003672342 ubox
22 45 0.005434529 ubox
22 47 0.069087315 ubox
22 51 0.024423949 ubox
22 52 0.009098575 ubox
22 55 0.006672926 ubox
23 29 0.020810249 ubox
23 30 0.113037410 ubox
23 31 0.020539504 ubox
23 38 0.003634886 ubox
23 44 0.005242106 ubox
23 46 0.050279011 ubox
23 49 0.169573405 ubox
23 50 0.021015636 ubox
23 54 0.006709735 ubox
24 28 0.026820904 ubox
24 29 0.152080137 ubox
24 30 0.096063955 ubox
24 37 0.003589297 ubox
24 44 0.008233455 ubox
24 46 0.047708651 ubox
24 48 0.170236362 ubox
24 49 0.016052898 ubox
24 53 0.006697943 ubox
25 43 0.006721536 ubox
25 45 0.067444818 ubox
25 47 0.170713412 ubox
25 55 0.003924180 ubox
26 44 0.060222737 ubox
26 46 0.168984387 ubox
26 54 0.003970622 ubox
27 34 0.003414904 ubox
27 44 0.165232004 ubox
27 46 0.011201757 ubox
27 53 0.003977618 ubox
28 33 0.003436321 ubox
28 42 0.082241193 ubox
28 43 0.163760833 ubox
28 45 0.010124096 ubox
28 52 0.003465799 ubox
29 41 0.082440262 ubox
29 42 0.163944724 ubox
29 43 0.019356401 ubox
29 52 0.005871696 ubox
30 41 0.163796698 ubox
30 42 0.019741893 ubox
30 43 0.003632495 ubox
30 51 0.006721329 ubox
31 39 0.183375005 ubox
31 41 0.019761222 ubox
31 42 0.003538477 ubox
31 70 0.956348440 ubox
32 38 0.183488785 ubox
32 40 0.018252649 ubox
32 49 0.007311100 ubox
32 69 0.982286114 ubox
33 37 0.182157642 ubox
33 40 0.008492103 ubox
33 48 0.007331650 ubox
33 68 0.982684243 ubox
34 39 0.011106269 ubox
34 47 0.007345411 ubox
34 67 0.982681180 ubox
35 46 0.007331996 ubox
35 66 0.981959270 ubox
36 45 0.007197821 ubox
38 45 0.003178091 ubox
38 57 0.010285009 ubox
38 63 0.982532867 ubox
39 44 0.003198282 ubox
39 56 0.010294797 ubox
39 62 0.980647918 ubox
40 55 0.010301467 ubox
41 54 0.010303319 ubox
41 59 0.006503485 ubox
41 60 0.981021345 ubox
42 53 0.010298256 ubox
42 58 0.006475081 ubox
42 59 0.982677722 ubox
43 58 0.981945248 ubox
44 51 0.010334855 ubox
44 57 0.982685729 ubox
45 50 0.010342226 ubox
45 56 0.982698163 ubox
46 55 0.982688913 ubox
46 57 0.003847384 ubox
47 53 0.048182832 ubox
47 54 0.981328610 ubox
47 56 0.003883634 ubox
48 52 0.063655769 ubox
48 55 0.003952111 ubox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
31 70 0.9500000 lbox
32 69 0.9500000 lbox
33 68 0.9500000 lbox
34 67 0.9500000 lbox
35 66 0.9500000 lbox
38 63 0.9500000 lbox
39 62 0.9500000 lbox
41 60 0.9500000 lbox
42 59 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
showpage
end
%%EOF
