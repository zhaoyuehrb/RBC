%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SSX5)
} def

/sequence { (\
CGCUCUGAUUGUUUCGAUUCUUCCAAAAUCAGAGACAGAGUGCUCCCGGUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007457175 ubox
1 42 0.510280364 ubox
1 48 0.024645233 ubox
1 51 0.044873040 ubox
2 6 0.004665356 ubox
2 41 0.569864489 ubox
2 43 0.176070278 ubox
2 47 0.022255936 ubox
2 50 0.046582646 ubox
2 52 0.078295554 ubox
3 34 0.786747321 ubox
3 38 0.007044074 ubox
3 40 0.573827883 ubox
3 42 0.176017967 ubox
3 49 0.046642963 ubox
3 51 0.078269839 ubox
4 33 0.790293498 ubox
4 37 0.004446349 ubox
4 39 0.574219373 ubox
4 48 0.045294327 ubox
4 49 0.007317761 ubox
5 32 0.790803895 ubox
5 38 0.572087622 ubox
5 40 0.173288123 ubox
5 48 0.009167217 ubox
5 49 0.077367237 ubox
6 31 0.790656793 ubox
6 37 0.472824083 ubox
6 39 0.166609090 ubox
6 48 0.076912132 ubox
7 15 0.003535686 ubox
7 30 0.790859405 ubox
7 36 0.348838372 ubox
7 45 0.049841921 ubox
7 47 0.073574359 ubox
8 14 0.003835775 ubox
8 18 0.013003102 ubox
8 29 0.789894383 ubox
8 41 0.023240808 ubox
8 44 0.050488308 ubox
9 17 0.015017792 ubox
9 26 0.052215545 ubox
9 27 0.027624190 ubox
9 28 0.777116867 ubox
9 32 0.084496489 ubox
9 33 0.032035992 ubox
9 34 0.026322939 ubox
9 35 0.109202206 ubox
9 38 0.177357379 ubox
9 39 0.009926260 ubox
9 40 0.020688344 ubox
10 16 0.015966852 ubox
10 25 0.083366718 ubox
10 26 0.037606195 ubox
10 27 0.710311950 ubox
10 31 0.089120692 ubox
10 32 0.028353110 ubox
10 33 0.023730391 ubox
10 34 0.099584834 ubox
10 37 0.382711942 ubox
10 38 0.006594520 ubox
10 39 0.008112996 ubox
11 15 0.017130752 ubox
11 18 0.013853270 ubox
11 24 0.092421542 ubox
11 29 0.031406679 ubox
11 30 0.089235288 ubox
11 36 0.502026000 ubox
11 43 0.017857639 ubox
12 17 0.013285211 ubox
12 26 0.137649535 ubox
12 27 0.281523691 ubox
12 28 0.058473511 ubox
12 32 0.024326041 ubox
12 33 0.107332518 ubox
12 34 0.037705189 ubox
12 35 0.581709728 ubox
12 42 0.017346959 ubox
13 25 0.147851698 ubox
13 26 0.401326031 ubox
13 27 0.062574908 ubox
13 28 0.039739954 ubox
13 31 0.024362907 ubox
13 32 0.111967476 ubox
13 33 0.052093792 ubox
13 34 0.583495532 ubox
13 35 0.007452579 ubox
13 40 0.014141405 ubox
14 25 0.407312910 ubox
14 26 0.061496526 ubox
14 27 0.041909054 ubox
14 31 0.110825538 ubox
14 32 0.052443486 ubox
14 33 0.586019841 ubox
14 34 0.005996886 ubox
14 35 0.010477283 ubox
14 39 0.017289438 ubox
15 32 0.586026630 ubox
15 34 0.010548022 ubox
15 38 0.017353895 ubox
16 22 0.065562359 ubox
16 23 0.685509249 ubox
16 30 0.588155085 ubox
17 21 0.058812183 ubox
17 22 0.671636894 ubox
17 29 0.590052688 ubox
17 41 0.005100688 ubox
18 26 0.017970217 ubox
18 27 0.048502780 ubox
18 28 0.584569376 ubox
18 34 0.009077365 ubox
18 35 0.003579317 ubox
18 40 0.005137254 ubox
19 25 0.023124253 ubox
19 26 0.061478629 ubox
19 27 0.550248693 ubox
19 33 0.012368619 ubox
19 35 0.029014042 ubox
19 39 0.005170543 ubox
20 32 0.012552975 ubox
20 34 0.029697312 ubox
20 38 0.005175907 ubox
21 27 0.032940488 ubox
21 28 0.016701807 ubox
21 31 0.011922528 ubox
21 33 0.027544809 ubox
21 34 0.006381725 ubox
21 37 0.004931023 ubox
22 26 0.038291047 ubox
22 27 0.019575718 ubox
22 32 0.024266240 ubox
22 33 0.013696123 ubox
22 35 0.004077129 ubox
23 32 0.017496651 ubox
23 34 0.004122159 ubox
32 45 0.005950800 ubox
33 44 0.006467444 ubox
34 43 0.006851140 ubox
34 45 0.005758470 ubox
35 41 0.032829149 ubox
35 44 0.006702025 ubox
35 50 0.036101613 ubox
36 40 0.033392719 ubox
36 42 0.021575066 ubox
36 49 0.037020154 ubox
36 51 0.024075389 ubox
37 41 0.017688506 ubox
37 44 0.029508102 ubox
37 50 0.023366845 ubox
38 43 0.032099462 ubox
38 45 0.058540282 ubox
39 44 0.054945175 ubox
40 52 0.749933439 ubox
41 48 0.013573336 ubox
41 49 0.003473008 ubox
41 51 0.750000079 ubox
42 47 0.019335344 ubox
42 50 0.757050554 ubox
42 52 0.270054530 ubox
43 49 0.761429247 ubox
43 51 0.275824010 ubox
44 48 0.686011393 ubox
3 34 0.9500000 lbox
4 33 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
40 52 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
44 48 0.9500000 lbox
showpage
end
%%EOF
