%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2Z1)
} def

/sequence { (\
UUAUUUGCCACCCCAUGCAGGCUUCUUGCCAUAGUUCAGCUGUUCUUCCUGCAGCUAAAGUGCAUUGUGUAAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 72 0.028504174 ubox
1 73 0.018984571 ubox
1 74 0.046017745 ubox
2 62 0.003851856 ubox
2 67 0.003259406 ubox
2 69 0.009903609 ubox
2 71 0.032326003 ubox
2 72 0.015684097 ubox
2 73 0.040580314 ubox
3 61 0.004375302 ubox
3 66 0.003563127 ubox
3 68 0.011135730 ubox
3 70 0.032148185 ubox
4 21 0.010447431 ubox
4 60 0.004414610 ubox
4 67 0.011012277 ubox
4 69 0.017525446 ubox
4 72 0.037987590 ubox
4 73 0.784106488 ubox
4 74 0.184191664 ubox
5 20 0.016559860 ubox
5 59 0.004083895 ubox
5 71 0.037626308 ubox
5 72 0.901216571 ubox
5 73 0.217432611 ubox
5 74 0.050236012 ubox
6 15 0.004539173 ubox
6 19 0.040660056 ubox
6 64 0.021501670 ubox
6 67 0.003513249 ubox
6 69 0.004268819 ubox
6 71 0.926950995 ubox
6 72 0.218987251 ubox
6 73 0.057019869 ubox
7 14 0.006043053 ubox
7 18 0.043628857 ubox
7 22 0.021117179 ubox
7 63 0.023359723 ubox
7 66 0.003166609 ubox
7 68 0.008785297 ubox
7 70 0.930035214 ubox
8 17 0.043234311 ubox
8 21 0.021153029 ubox
8 62 0.018099743 ubox
8 67 0.007979468 ubox
8 69 0.719181180 ubox
9 17 0.006635085 ubox
9 20 0.021133173 ubox
9 62 0.017221410 ubox
9 67 0.394386926 ubox
9 69 0.686960876 ubox
10 16 0.008045914 ubox
10 61 0.022646602 ubox
10 66 0.391171950 ubox
10 68 0.906245166 ubox
10 70 0.041487959 ubox
11 60 0.022638040 ubox
11 67 0.906913646 ubox
11 69 0.043533032 ubox
14 62 0.025390818 ubox
14 67 0.066349050 ubox
14 69 0.010328222 ubox
15 32 0.008926335 ubox
15 35 0.006323354 ubox
15 61 0.024700280 ubox
15 65 0.976051105 ubox
15 66 0.053457100 ubox
15 68 0.009442463 ubox
15 70 0.009438423 ubox
16 31 0.009702117 ubox
16 34 0.006701259 ubox
16 53 0.008290095 ubox
16 60 0.023255881 ubox
16 62 0.011255000 ubox
16 64 0.995298060 ubox
16 67 0.006482166 ubox
16 69 0.009753219 ubox
16 71 0.007675373 ubox
17 29 0.025492381 ubox
17 30 0.007021095 ubox
17 35 0.010909962 ubox
17 52 0.008672290 ubox
17 61 0.016809442 ubox
17 63 0.996971970 ubox
17 68 0.011660540 ubox
17 70 0.008393666 ubox
18 28 0.026533793 ubox
18 34 0.011797305 ubox
18 51 0.008672912 ubox
18 60 0.017277042 ubox
18 62 0.996369178 ubox
18 67 0.011739170 ubox
18 69 0.008437800 ubox
19 26 0.003536150 ubox
19 27 0.026484723 ubox
19 50 0.008571751 ubox
19 61 0.857499938 ubox
19 66 0.010910937 ubox
19 68 0.007542459 ubox
20 25 0.004624559 ubox
20 26 0.026357776 ubox
20 30 0.997668857 ubox
20 36 0.016759872 ubox
20 37 0.007969535 ubox
20 49 0.007945477 ubox
21 25 0.025809632 ubox
21 29 0.998735970 ubox
21 35 0.020994707 ubox
21 36 0.005924516 ubox
21 48 0.007687238 ubox
21 61 0.011139112 ubox
21 70 0.007417742 ubox
22 28 0.998502385 ubox
22 34 0.021899159 ubox
22 60 0.014112971 ubox
22 69 0.007675882 ubox
23 33 0.021573637 ubox
23 59 0.013907942 ubox
23 74 0.003375379 ubox
24 58 0.012105973 ubox
24 73 0.003826849 ubox
25 34 0.009453613 ubox
25 60 0.004040783 ubox
26 33 0.009404749 ubox
26 59 0.003986787 ubox
26 72 0.020634992 ubox
26 73 0.003359745 ubox
27 58 0.003604412 ubox
27 64 0.011719243 ubox
27 71 0.022880895 ubox
27 72 0.003535141 ubox
28 35 0.006430648 ubox
28 40 0.005902230 ubox
28 52 0.003319118 ubox
28 63 0.012435868 ubox
28 70 0.023210513 ubox
29 34 0.006782078 ubox
29 39 0.005897694 ubox
29 51 0.003280870 ubox
29 62 0.011252893 ubox
29 69 0.021640465 ubox
30 62 0.008204191 ubox
30 67 0.019941178 ubox
30 69 0.016449510 ubox
31 43 0.011108924 ubox
31 61 0.039209285 ubox
31 65 0.004453954 ubox
31 66 0.019724319 ubox
31 68 0.020261705 ubox
32 42 0.011654712 ubox
32 57 0.052926341 ubox
32 60 0.044001654 ubox
32 62 0.047487538 ubox
32 64 0.004379494 ubox
32 67 0.020369156 ubox
33 41 0.011988246 ubox
33 56 0.054194053 ubox
33 61 0.295918115 ubox
33 66 0.020243787 ubox
34 40 0.012030396 ubox
34 55 0.053349370 ubox
34 61 0.023153549 ubox
34 63 0.017240649 ubox
34 65 0.019970300 ubox
35 39 0.011259231 ubox
35 54 0.052968547 ubox
35 58 0.217208352 ubox
35 59 0.474870084 ubox
35 60 0.062733835 ubox
35 62 0.016977877 ubox
35 64 0.019386994 ubox
36 53 0.050814070 ubox
36 57 0.245629675 ubox
36 58 0.493760653 ubox
36 59 0.072527459 ubox
37 51 0.049034386 ubox
37 62 0.018049621 ubox
38 50 0.048993006 ubox
38 56 0.958297888 ubox
38 61 0.012841601 ubox
39 49 0.048583472 ubox
39 52 0.019829419 ubox
39 55 0.998308420 ubox
40 51 0.019866075 ubox
40 54 0.998479372 ubox
41 53 0.998250981 ubox
42 52 0.998443047 ubox
43 51 0.992266704 ubox
49 60 0.005804676 ubox
50 59 0.005838550 ubox
50 64 0.003687912 ubox
51 63 0.004097307 ubox
52 62 0.004097640 ubox
53 61 0.003932249 ubox
54 63 0.005486080 ubox
55 62 0.005494362 ubox
57 61 0.007804495 ubox
58 66 0.003234321 ubox
59 65 0.003478616 ubox
61 71 0.020842205 ubox
62 68 0.003871855 ubox
62 70 0.023813432 ubox
63 67 0.004092653 ubox
63 69 0.024212677 ubox
64 68 0.019629193 ubox
65 73 0.003769893 ubox
65 74 0.004091162 ubox
66 72 0.004792331 ubox
66 73 0.005556866 ubox
67 75 0.012112934 ubox
68 74 0.012317819 ubox
69 75 0.004240755 ubox
70 74 0.004538176 ubox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
10 68 0.9500000 lbox
11 67 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
17 63 0.9500000 lbox
18 62 0.9500000 lbox
19 61 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
38 56 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
showpage
end
%%EOF
