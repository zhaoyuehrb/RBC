%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCAGGCCAGCAGCCCUAGCUUCUGGAAGGAUCCUUCAGGCUCCAGACACCCAACCUACCCGUGGCCGGAUGUCUGCCUGAGCCCCACCCCGAAUGCCAGCCCUUCUUCCCUGAGCUCACCCAGCCCCAGCUCCAGGACUGAGAGCCCCAGGAAGCUUGGAGAGGUGUGAGAGAGACAGGUGUCCAGCCUCAGCCCCGAUCCUUCACCUGCAGAGCCCGGC\
) } def
/len { sequence length } bind def

/coor [
[148.84716797 487.47473145]
[151.30909729 468.25003052]
[151.52040100 453.25152588]
[151.73170471 438.25299072]
[144.17446899 425.41799927]
[152.10540771 411.72817993]
[152.31672668 396.72967529]
[152.52803040 381.73117065]
[138.00773621 377.96807861]
[130.90768433 391.18130493]
[123.80762482 404.39453125]
[124.09114075 420.21319580]
[111.25120544 427.76205444]
[104.15115356 440.97528076]
[97.05110168 454.18850708]
[98.09214783 470.55456543]
[84.29120636 479.41265869]
[69.84549713 471.65036011]
[69.61553192 455.25280762]
[83.83788300 447.08843994]
[90.93793488 433.87521362]
[98.03798676 420.66198730]
[97.24662781 405.78842163]
[110.59440613 397.29446411]
[117.69445801 384.08123779]
[124.79450989 370.86801147]
[129.46994019 356.61529541]
[131.57614136 341.76388550]
[133.68234253 326.91250610]
[135.78852844 312.06109619]
[137.89472961 297.20971680]
[140.00091553 282.35830688]
[142.10711670 267.50692749]
[144.21331787 252.65553284]
[142.63137817 237.73918152]
[137.45697021 223.65991211]
[132.28256226 209.58065796]
[127.10816193 195.50140381]
[121.93376160 181.42213440]
[116.75935364 167.34288025]
[111.58495331 153.26362610]
[106.41054535 139.18435669]
[101.23614502 125.10510254]
[84.13130951 119.49304962]
[75.16610718 103.88228607]
[60.32991791 101.67153168]
[45.49372864 99.46077728]
[30.65753555 97.25002289]
[15.82134533 95.03926849]
[0.98515439 92.82851410]
[-13.80466366 98.44739532]
[-25.25259399 88.91880035]
[-40.08878708 86.70804596]
[-52.70600891 95.84278107]
[-67.72052002 93.38941956]
[-76.35134125 81.30452728]
[-91.18753052 79.09377289]
[-102.77420044 89.59535217]
[-118.40227509 90.14060211]
[-130.69265747 80.47207642]
[-133.84220886 65.15495300]
[-126.36380768 51.42150497]
[-111.78852081 45.75625610]
[-96.99835968 50.83415604]
[-88.97677612 64.25758362]
[-74.14058685 66.46833801]
[-62.36139679 57.42476273]
[-47.28389359 59.45543671]
[-37.87802887 71.87185669]
[-23.04183960 74.08261108]
[-9.31320477 68.30559540]
[3.19590926 77.99232483]
[18.03210068 80.20307922]
[32.86828995 82.41383362]
[47.70448303 84.62458801]
[62.54067230 86.83534241]
[77.37686157 89.04609680]
[74.07810211 82.67676544]
[72.19863892 75.25367737]
[63.65761566 62.92278290]
[55.11658859 50.59189224]
[47.66440964 45.32508469]
[46.54353333 38.02658844]
[38.17706680 25.57660103]
[23.07692528 27.80113220]
[8.50954247 23.24546623]
[-2.63271999 12.81413174]
[-8.13755703 -1.42172194]
[-6.91198015 -16.63555527]
[0.80067265 -29.80665016]
[13.46904755 -38.31987762]
[28.57783127 -40.48492813]
[43.12715912 -35.87192917]
[54.22826004 -25.39679909]
[59.67699432 -11.13937759]
[58.39151382 4.06951141]
[50.62705231 17.21013260]
[58.99352264 29.66012001]
[67.44747925 42.05086517]
[75.98850250 54.38175583]
[84.52953339 66.71264648]
[92.02878571 66.60699463]
[90.44507599 51.69083023]
[88.86136627 36.77466965]
[86.31726837 21.99199295]
[98.78279114 13.64868546]
[111.47913361 21.63635445]
[109.35303497 36.48596954]
[108.19016266 51.44082642]
[107.02729797 66.39568329]
[114.52655792 66.29002380]
[122.71680450 53.72341156]
[130.90705872 41.15679932]
[139.09730530 28.59018326]
[139.66815186 10.18082809]
[155.62290955 2.86351538]
[163.63531494 -9.81723118]
[171.64772034 -22.49797821]
[179.66012573 -35.17872238]
[176.65942383 -45.62213135]
[179.83152771 -55.78507614]
[187.90054321 -62.38915634]
[198.05351257 -63.44368744]
[206.41998291 -75.89367676]
[214.78645325 -88.34366608]
[216.06173706 -104.11338806]
[229.58251953 -110.36141968]
[237.94898987 -122.81140900]
[232.49046326 -137.33670044]
[236.64463806 -152.28736877]
[248.81413269 -161.91458130]
[264.31951904 -162.51646423]
[277.19869995 -153.86158752]
[282.49932861 -139.27792358]
[278.18319702 -124.37319946]
[265.90997314 -114.87857819]
[250.39897156 -114.44493866]
[242.03250122 -101.99494934]
[241.35563660 -87.11573029]
[227.23643494 -79.97719574]
[218.86996460 -67.52720642]
[210.50349426 -55.07721710]
[210.59323120 -35.73623276]
[192.34088135 -27.16631699]
[184.32847595 -14.48556995]
[176.31605530 -1.80482364]
[168.30364990 10.87592316]
[170.65937805 22.73528099]
[164.09529114 33.36337662]
[151.66392517 36.78043365]
[143.47367859 49.34704971]
[135.28341675 61.91366196]
[127.09317017 74.48027802]
[131.07769775 102.49311829]
[115.31539917 119.93070221]
[120.48980713 134.00996399]
[125.66420746 148.08921814]
[130.83860779 162.16847229]
[136.01301575 176.24774170]
[141.18742371 190.32699585]
[146.36183167 204.40625000]
[151.53623962 218.48551941]
[156.71063232 232.56477356]
[176.46130371 225.30287170]
[188.21701050 240.13313293]
[202.10533142 245.80009460]
[216.52929688 239.91902161]
[230.53330994 245.86396790]
[236.05111694 259.65124512]
[249.93943787 265.31820679]
[263.82775879 270.98516846]
[277.71609497 276.65213013]
[291.97296143 267.54284668]
[308.68399048 268.71789551]
[321.27343750 279.51614380]
[324.90588379 295.52908325]
[338.87265015 300.99981689]
[352.83944702 306.47058105]
[368.96395874 303.48187256]
[379.40728760 316.12579346]
[373.42623901 331.39535522]
[357.17361450 333.58251953]
[347.36868286 320.43734741]
[333.40191650 314.96661377]
[319.43511963 309.49584961]
[308.90957642 317.70108032]
[295.59762573 319.65176392]
[282.95874023 314.73294067]
[274.33087158 304.12896729]
[272.04913330 290.54046631]
[258.16079712 284.87350464]
[244.27249146 279.20654297]
[230.38415527 273.53958130]
[216.79592896 279.53088379]
[202.63046265 273.98162842]
[196.43836975 259.68841553]
[182.55004883 254.02145386]
[171.67030334 259.08560181]
[159.06471252 254.76171875]
[156.95851135 269.61312866]
[154.85232544 284.46450806]
[152.74612427 299.31591797]
[150.63992310 314.16729736]
[148.53373718 329.01870728]
[146.42753601 343.87008667]
[144.32133484 358.72149658]
[153.28984070 346.69793701]
[165.42495728 337.88098145]
[180.32078552 336.11614990]
[194.18023682 341.85336304]
[203.47044373 353.63012695]
[205.82324219 368.44445801]
[200.63890076 382.52005005]
[189.23895264 392.26895142]
[174.53176880 395.20620728]
[167.52655029 381.94247437]
[167.31523132 396.94097900]
[167.10392761 411.93948364]
[174.64605713 425.84729004]
[166.73022461 438.46432495]
[166.51890564 453.46282959]
[166.30760193 468.46133423]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 222]
[3 221]
[4 220]
[6 218]
[7 217]
[8 216]
[9 26]
[10 25]
[11 24]
[13 22]
[14 21]
[15 20]
[27 206]
[28 205]
[29 204]
[30 203]
[31 202]
[32 201]
[33 200]
[34 199]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[41 157]
[42 156]
[43 155]
[45 77]
[46 76]
[47 75]
[48 74]
[49 73]
[50 72]
[52 70]
[53 69]
[56 66]
[57 65]
[79 101]
[80 100]
[81 99]
[83 98]
[84 97]
[111 153]
[112 152]
[113 151]
[114 150]
[116 147]
[117 146]
[118 145]
[119 144]
[123 142]
[124 141]
[125 140]
[127 138]
[128 137]
[165 197]
[166 196]
[169 193]
[170 192]
[171 191]
[172 190]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
