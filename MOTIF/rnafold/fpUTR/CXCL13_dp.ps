%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CXCL13)
} def

/sequence { (\
GAGAAGAUGUUUGAAAAAACUGACUCUGCUAAUGAGCCUGGACUCAGAGCUCAAGUCUGAACUCUACCUCCAGACAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.008388007 ubox
1 26 0.560808792 ubox
1 52 0.011673942 ubox
1 64 0.019981256 ubox
1 70 0.050239820 ubox
2 10 0.003594735 ubox
2 11 0.008838277 ubox
2 12 0.008720317 ubox
2 21 0.006567085 ubox
2 25 0.561744182 ubox
2 27 0.596420282 ubox
2 30 0.446366084 ubox
2 51 0.011428950 ubox
2 63 0.019995672 ubox
2 65 0.007038806 ubox
2 69 0.050412529 ubox
3 10 0.007511553 ubox
3 11 0.009306655 ubox
3 12 0.013099594 ubox
3 20 0.006335285 ubox
3 24 0.559763690 ubox
3 26 0.612192001 ubox
3 29 0.457236920 ubox
3 50 0.010980270 ubox
3 62 0.019874833 ubox
3 64 0.007264081 ubox
3 68 0.050271791 ubox
3 70 0.004211088 ubox
4 10 0.008959231 ubox
4 11 0.014634355 ubox
4 12 0.006901233 ubox
4 25 0.579545338 ubox
4 63 0.006683080 ubox
4 69 0.004094039 ubox
5 10 0.014138786 ubox
5 11 0.006959281 ubox
5 12 0.004471893 ubox
5 21 0.121468261 ubox
5 25 0.171447341 ubox
5 27 0.454174864 ubox
5 30 0.025349213 ubox
5 58 0.014013738 ubox
5 65 0.046765077 ubox
6 10 0.004812474 ubox
6 11 0.003976966 ubox
6 20 0.104919988 ubox
6 24 0.232445579 ubox
6 26 0.502995992 ubox
6 29 0.026199756 ubox
6 52 0.004357412 ubox
6 57 0.014178786 ubox
6 62 0.003410027 ubox
6 64 0.048230565 ubox
7 25 0.490221928 ubox
7 51 0.004286563 ubox
7 56 0.013813621 ubox
7 63 0.047218315 ubox
8 22 0.081569268 ubox
8 28 0.003239789 ubox
8 55 0.012614267 ubox
8 76 0.065064876 ubox
9 20 0.878569271 ubox
9 21 0.021104368 ubox
9 24 0.439034428 ubox
9 29 0.012840528 ubox
9 50 0.004244286 ubox
9 62 0.045854205 ubox
9 75 0.072156660 ubox
10 16 0.033601551 ubox
10 17 0.027271886 ubox
10 18 0.039363854 ubox
10 19 0.881263150 ubox
10 23 0.437912882 ubox
10 28 0.012752600 ubox
10 49 0.004232555 ubox
10 55 0.003965770 ubox
10 61 0.045812120 ubox
10 74 0.072041082 ubox
10 78 0.009264759 ubox
11 15 0.028610939 ubox
11 16 0.025146026 ubox
11 17 0.041175870 ubox
11 18 0.877883825 ubox
11 19 0.046995728 ubox
11 22 0.429537417 ubox
11 23 0.026800739 ubox
11 48 0.004080650 ubox
11 54 0.014811013 ubox
11 60 0.045421586 ubox
11 73 0.071169384 ubox
11 77 0.011117307 ubox
12 16 0.036180957 ubox
12 17 0.863094914 ubox
12 18 0.067467947 ubox
12 22 0.033941675 ubox
12 53 0.016376403 ubox
12 59 0.043941981 ubox
12 72 0.071041055 ubox
12 76 0.011700241 ubox
13 21 0.032652028 ubox
13 26 0.014706510 ubox
13 52 0.016652220 ubox
13 57 0.008783966 ubox
13 58 0.037275560 ubox
13 70 0.010593444 ubox
13 71 0.070028476 ubox
13 75 0.011658253 ubox
14 25 0.014214577 ubox
14 51 0.016286020 ubox
14 56 0.007700667 ubox
14 63 0.003208334 ubox
14 69 0.014443505 ubox
19 56 0.004673790 ubox
20 47 0.021301710 ubox
20 55 0.005204391 ubox
20 77 0.036628452 ubox
21 28 0.003737424 ubox
21 31 0.006180306 ubox
21 46 0.022627675 ubox
21 53 0.013847255 ubox
21 54 0.004925541 ubox
21 76 0.038037421 ubox
22 27 0.004234347 ubox
22 30 0.006376121 ubox
22 45 0.023786313 ubox
22 52 0.015090498 ubox
22 57 0.055324375 ubox
22 64 0.035449362 ubox
22 75 0.037804522 ubox
23 44 0.023402373 ubox
23 51 0.015031792 ubox
23 56 0.055442700 ubox
23 63 0.034794596 ubox
24 36 0.091741601 ubox
24 41 0.003208236 ubox
24 49 0.013937862 ubox
24 55 0.055470758 ubox
24 77 0.011660383 ubox
25 35 0.092328536 ubox
25 42 0.023235287 ubox
25 48 0.013950363 ubox
25 54 0.054861955 ubox
25 60 0.051975712 ubox
25 74 0.009518569 ubox
25 76 0.010955163 ubox
25 78 0.040703729 ubox
26 34 0.092389855 ubox
26 36 0.005464046 ubox
26 41 0.023606469 ubox
26 47 0.013950053 ubox
26 55 0.003451882 ubox
26 59 0.053312364 ubox
26 73 0.010071375 ubox
26 77 0.050184060 ubox
27 35 0.006303901 ubox
27 40 0.021863980 ubox
27 46 0.013416817 ubox
27 53 0.003924224 ubox
27 54 0.010789136 ubox
27 72 0.010026495 ubox
27 76 0.049627965 ubox
28 33 0.006602797 ubox
28 37 0.326981653 ubox
28 45 0.012347252 ubox
28 50 0.048178270 ubox
28 56 0.094877884 ubox
28 71 0.009778167 ubox
28 75 0.036316747 ubox
29 36 0.328175178 ubox
29 41 0.010185795 ubox
29 49 0.048290832 ubox
29 55 0.104846878 ubox
29 73 0.021524721 ubox
29 77 0.079194653 ubox
30 35 0.312473439 ubox
30 40 0.010175501 ubox
30 48 0.046844363 ubox
30 54 0.107693394 ubox
30 72 0.021056604 ubox
30 76 0.075643350 ubox
31 39 0.009822833 ubox
33 40 0.003689638 ubox
33 46 0.047993898 ubox
33 53 0.836127465 ubox
33 76 0.043541411 ubox
34 45 0.048754326 ubox
34 52 0.927040017 ubox
34 70 0.021846331 ubox
34 75 0.048304463 ubox
35 44 0.048834359 ubox
35 51 0.927134109 ubox
35 69 0.021932037 ubox
36 43 0.048585729 ubox
36 50 0.927292343 ubox
36 68 0.021861378 ubox
37 49 0.927115465 ubox
38 47 0.926764212 ubox
38 49 0.012615988 ubox
38 73 0.367937580 ubox
38 77 0.003915726 ubox
39 46 0.926542750 ubox
39 48 0.017766947 ubox
39 66 0.020069393 ubox
39 72 0.369060710 ubox
40 45 0.923770637 ubox
40 64 0.005695458 ubox
40 65 0.021277942 ubox
40 71 0.369367863 ubox
41 63 0.005309804 ubox
41 64 0.021390977 ubox
41 70 0.369350192 ubox
42 63 0.020986895 ubox
42 69 0.362286940 ubox
44 60 0.025333367 ubox
45 59 0.025850340 ubox
46 58 0.025848873 ubox
46 65 0.357935490 ubox
47 57 0.025852616 ubox
47 64 0.369216972 ubox
48 56 0.025111204 ubox
48 63 0.369223328 ubox
49 56 0.005179800 ubox
49 62 0.368555564 ubox
50 55 0.009826897 ubox
51 60 0.363048212 ubox
51 78 0.010489605 ubox
52 59 0.368923123 ubox
52 77 0.012944393 ubox
53 58 0.332368175 ubox
54 63 0.013249617 ubox
54 65 0.008602719 ubox
55 62 0.014248977 ubox
55 64 0.008911453 ubox
55 75 0.915243999 ubox
56 61 0.013198818 ubox
56 74 0.916906838 ubox
56 78 0.075867497 ubox
57 73 0.917802447 ubox
57 77 0.105274450 ubox
58 66 0.003479777 ubox
58 72 0.916941193 ubox
58 76 0.105431762 ubox
59 65 0.004062784 ubox
59 70 0.291052374 ubox
59 71 0.869152078 ubox
59 75 0.105288219 ubox
60 69 0.405991288 ubox
62 73 0.032740832 ubox
62 77 0.003639887 ubox
63 72 0.032397282 ubox
63 74 0.097479379 ubox
63 78 0.004427851 ubox
64 73 0.098629191 ubox
64 77 0.005380698 ubox
65 72 0.094583797 ubox
65 76 0.005198811 ubox
68 77 0.009084303 ubox
69 76 0.008607193 ubox
69 78 0.004879393 ubox
70 77 0.005867356 ubox
1 26 0.9500000 lbox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
55 75 0.9500000 lbox
56 74 0.9500000 lbox
57 73 0.9500000 lbox
58 72 0.9500000 lbox
59 71 0.9500000 lbox
showpage
end
%%EOF
