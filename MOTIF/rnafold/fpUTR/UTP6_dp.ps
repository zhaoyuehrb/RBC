%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UTP6)
} def

/sequence { (\
GGGUCUCCGAACCUGAAACCGGGAGCUUCCUGCUCGUGUUCGCUGUUGAGAAGCUACCCGCGGGGUUGUAGACCUCGGACCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008761780 ubox
1 13 0.009473143 ubox
1 14 0.038279602 ubox
1 20 0.003708923 ubox
1 59 0.031842514 ubox
1 74 0.032297371 ubox
1 75 0.738458804 ubox
1 76 0.496072528 ubox
1 81 0.024474247 ubox
1 82 0.143270165 ubox
1 83 0.026814542 ubox
2 7 0.008739257 ubox
2 12 0.009454042 ubox
2 13 0.040554768 ubox
2 19 0.003718671 ubox
2 20 0.008697453 ubox
2 58 0.031865560 ubox
2 73 0.023149189 ubox
2 74 0.981294869 ubox
2 75 0.061432584 ubox
2 76 0.005248889 ubox
2 80 0.019669454 ubox
2 81 0.166403564 ubox
2 82 0.011761142 ubox
3 12 0.040588812 ubox
3 19 0.009024731 ubox
3 57 0.031847970 ubox
3 73 0.983070569 ubox
3 74 0.043599530 ubox
3 80 0.166543005 ubox
3 81 0.011579008 ubox
4 10 0.011399297 ubox
4 11 0.037578844 ubox
4 16 0.004093466 ubox
4 18 0.008810103 ubox
4 51 0.019305604 ubox
4 56 0.024493175 ubox
4 72 0.984177312 ubox
4 79 0.163618958 ubox
5 9 0.015560592 ubox
5 15 0.004774917 ubox
5 50 0.025337439 ubox
5 53 0.014218176 ubox
5 71 0.984272119 ubox
5 78 0.161274033 ubox
6 16 0.041844306 ubox
6 23 0.004951113 ubox
6 49 0.025363850 ubox
6 51 0.013731755 ubox
6 52 0.010468904 ubox
6 70 0.961188369 ubox
6 72 0.011773395 ubox
6 77 0.064683312 ubox
6 79 0.034746559 ubox
7 15 0.043278742 ubox
7 22 0.015395358 ubox
7 48 0.024746156 ubox
7 50 0.017138470 ubox
7 63 0.007175160 ubox
7 71 0.014872314 ubox
7 77 0.018281788 ubox
7 78 0.044051059 ubox
8 15 0.061797634 ubox
8 21 0.015501937 ubox
8 42 0.027602091 ubox
8 48 0.013656538 ubox
8 62 0.007350993 ubox
8 68 0.957698418 ubox
8 77 0.047609752 ubox
9 14 0.047885501 ubox
9 20 0.015982210 ubox
9 41 0.033100918 ubox
9 47 0.014251882 ubox
9 61 0.007585200 ubox
9 67 0.929134268 ubox
9 76 0.048276103 ubox
10 40 0.033102185 ubox
10 46 0.013894310 ubox
10 47 0.015246290 ubox
10 66 0.765978323 ubox
10 67 0.287565595 ubox
10 75 0.045377768 ubox
11 39 0.033089626 ubox
11 46 0.016266647 ubox
11 66 0.344491787 ubox
12 22 0.003638439 ubox
12 23 0.013899807 ubox
12 38 0.032999656 ubox
12 45 0.016480184 ubox
12 63 0.012430835 ubox
12 64 0.905073553 ubox
12 65 0.386026032 ubox
13 21 0.003657558 ubox
13 22 0.016015492 ubox
13 62 0.012385183 ubox
13 63 0.907946118 ubox
13 64 0.382347311 ubox
13 65 0.004927414 ubox
13 71 0.033551695 ubox
14 21 0.016017938 ubox
14 36 0.031433983 ubox
14 42 0.019722848 ubox
14 62 0.908578906 ubox
14 63 0.375893224 ubox
14 64 0.005185262 ubox
14 70 0.033569232 ubox
15 20 0.018650781 ubox
15 35 0.032141783 ubox
15 41 0.022857796 ubox
15 61 0.906821334 ubox
15 69 0.030194090 ubox
16 34 0.031907279 ubox
16 40 0.022285629 ubox
16 66 0.003610105 ubox
16 67 0.003705210 ubox
17 39 0.018831309 ubox
17 40 0.006643625 ubox
17 67 0.031887682 ubox
18 39 0.008485667 ubox
18 66 0.033592767 ubox
19 38 0.007439689 ubox
19 63 0.016582380 ubox
19 64 0.005430636 ubox
19 65 0.033608313 ubox
20 32 0.032092917 ubox
20 38 0.022769016 ubox
20 60 0.993834653 ubox
20 62 0.015999929 ubox
20 63 0.005260991 ubox
20 64 0.030224067 ubox
21 31 0.032196508 ubox
21 37 0.024296032 ubox
21 58 0.022592773 ubox
21 59 0.998534410 ubox
21 61 0.010596240 ubox
22 30 0.032229266 ubox
22 57 0.023083786 ubox
22 58 0.998585834 ubox
22 59 0.008956715 ubox
23 29 0.032218166 ubox
23 35 0.031317522 ubox
23 57 0.997507207 ubox
23 58 0.008795492 ubox
24 28 0.028030133 ubox
24 34 0.031805226 ubox
24 55 0.995011493 ubox
25 33 0.031883971 ubox
25 54 0.998945634 ubox
26 32 0.031878130 ubox
26 53 0.998949542 ubox
27 50 0.018671276 ubox
27 51 0.010836355 ubox
27 52 0.997924439 ubox
28 49 0.048239824 ubox
28 50 0.013502416 ubox
28 51 0.996151313 ubox
28 52 0.004816512 ubox
29 48 0.053052819 ubox
29 50 0.973796834 ubox
30 50 0.163079136 ubox
31 42 0.006378244 ubox
31 45 0.030529634 ubox
31 48 0.237096193 ubox
31 49 0.221927756 ubox
31 52 0.004036512 ubox
32 39 0.073651647 ubox
32 41 0.006996428 ubox
32 43 0.304558030 ubox
32 44 0.013376441 ubox
32 46 0.846402661 ubox
32 47 0.183405465 ubox
33 38 0.075305456 ubox
33 42 0.304373359 ubox
33 45 0.873121903 ubox
33 50 0.108542458 ubox
34 49 0.173189786 ubox
34 51 0.003236767 ubox
35 42 0.800040856 ubox
35 45 0.144411727 ubox
35 48 0.174046021 ubox
35 50 0.003545950 ubox
36 41 0.793804273 ubox
36 43 0.370924379 ubox
36 44 0.089044729 ubox
36 46 0.006097882 ubox
36 47 0.159114731 ubox
36 54 0.004808546 ubox
36 57 0.006788849 ubox
36 59 0.005669856 ubox
36 61 0.009266604 ubox
37 42 0.356066693 ubox
37 45 0.008281118 ubox
37 48 0.003675890 ubox
37 53 0.004691477 ubox
37 56 0.006764761 ubox
37 60 0.009290376 ubox
38 44 0.017559345 ubox
38 46 0.013136357 ubox
38 47 0.009079240 ubox
38 54 0.003756007 ubox
38 55 0.005859231 ubox
38 57 0.008215497 ubox
38 59 0.009075813 ubox
39 45 0.026430843 ubox
39 49 0.005423327 ubox
39 50 0.011277971 ubox
39 52 0.005797268 ubox
39 53 0.003215296 ubox
39 56 0.008246993 ubox
40 48 0.004200728 ubox
40 49 0.079407298 ubox
40 51 0.007914012 ubox
41 48 0.081007096 ubox
41 50 0.008444988 ubox
42 47 0.054947832 ubox
42 54 0.026438419 ubox
43 50 0.010866827 ubox
43 53 0.026669266 ubox
44 49 0.017387668 ubox
44 52 0.026569107 ubox
45 54 0.012201786 ubox
46 53 0.012191085 ubox
47 52 0.011864690 ubox
48 76 0.004686904 ubox
49 75 0.004690733 ubox
50 74 0.004659128 ubox
53 61 0.010113097 ubox
53 69 0.004530037 ubox
54 60 0.010217550 ubox
54 68 0.004614285 ubox
56 66 0.005634400 ubox
57 65 0.006131539 ubox
58 64 0.006141711 ubox
59 63 0.006099287 ubox
61 77 0.153124423 ubox
62 75 0.004920750 ubox
62 76 0.166319978 ubox
62 83 0.004757289 ubox
63 74 0.007144153 ubox
63 75 0.166458157 ubox
63 82 0.004928589 ubox
64 73 0.007157862 ubox
64 74 0.167414071 ubox
64 81 0.004963252 ubox
65 73 0.167891102 ubox
65 80 0.004966187 ubox
66 72 0.166698543 ubox
66 79 0.004868081 ubox
67 71 0.150212219 ubox
67 78 0.004607517 ubox
68 76 0.003340207 ubox
77 83 0.054503245 ubox
78 82 0.036600811 ubox
1 75 0.9500000 lbox
2 74 0.9500000 lbox
3 73 0.9500000 lbox
4 72 0.9500000 lbox
5 71 0.9500000 lbox
6 70 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 62 0.9500000 lbox
15 61 0.9500000 lbox
20 60 0.9500000 lbox
21 59 0.9500000 lbox
22 58 0.9500000 lbox
23 57 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
showpage
end
%%EOF
