%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCCAGUUCCGGCCGCGAGGGUGGAGCUUUGUGCCUCGGAGGCGUGGGUGACGCAGGCGCAGCGCGGGCUGCGCGCGCUACUGCCCAUCCCCGGUUGUCCCACUUUUGUUCGCCUCUCUUCGGCCCUCUACUCAAGAGCUCCGUCUCCGUCUCGCCCUCCUCGAAGUCCUCGUCGCGCGCCCGCGACCCAGGUCGCCCUGAAAUCUAGCCCGUCCGAGCGCGAGUCCAACGCCGCGGCCGCACCAAGGCCCCC\
UCAGACCGUGCC\
) } def
/len { sequence length } bind def

/coor [
[91.06165314 257.25607300]
[76.45656586 260.67535400]
[61.64501953 258.30508423]
[48.83633041 250.49882507]
[39.94105148 238.42098999]
[36.28601837 223.87312317]
[38.41641617 209.02517700]
[46.01446915 196.09190369]
[57.94684982 187.00244141]
[72.43370819 183.11259460]
[87.31416321 185.00254822]
[100.36863708 192.39044189]
[109.64910889 204.17268372]
[107.19844818 189.37423706]
[104.74778748 174.57577515]
[102.29712677 159.77732849]
[99.84646606 144.97886658]
[97.39580536 130.18041992]
[94.94514465 115.38195801]
[81.87334442 102.09968567]
[89.41924286 82.67028046]
[75.73519897 76.52642822]
[62.05115509 70.38256836]
[48.33133698 64.31902313]
[34.57621384 58.33599854]
[20.82109070 52.35297012]
[7.06596947 46.36994171]
[-6.68915272 40.38691711]
[-20.44427490 34.40388870]
[-34.19939804 28.42086029]
[-47.95451736 22.43783188]
[-61.70964050 16.45480537]
[-82.76914978 27.09299278]
[-104.50453949 18.62372971]
[-112.62649536 -2.95899320]
[-126.88143158 -7.62768126]
[-141.13636780 -12.29636955]
[-157.73214722 -3.10348535]
[-175.46138000 -8.89558983]
[-183.15956116 -25.53177261]
[-197.52003479 -29.86500549]
[-211.88050842 -34.19823837]
[-226.24096680 -38.53147125]
[-240.60144043 -42.86470413]
[-254.96191406 -47.19793701]
[-269.32238770 -51.53116608]
[-306.16629028 -23.05198288]
[-321.16217041 -23.40362167]
[-336.15805054 -23.75526047]
[-351.15393066 -24.10689926]
[-366.14981079 -24.45853806]
[-376.24151611 -10.86402416]
[-392.29199219 -6.02383089]
[-407.90380859 -11.65978146]
[-416.97753906 -25.35883713]
[-431.97650146 -25.53466797]
[-443.23657227 -14.77136707]
[-458.44515991 -15.16335106]
[-468.63693237 -25.96443367]
[-483.63589478 -26.14026642]
[-498.63485718 -26.31609726]
[-513.63385010 -26.49192810]
[-528.63281250 -26.66775894]
[-543.63177490 -26.84359169]
[-558.63073730 -27.01942253]
[-572.65515137 -18.51953125]
[-586.89624023 -26.65115356]
[-586.70397949 -43.04917526]
[-572.27618408 -50.84471512]
[-558.45489502 -42.01839066]
[-543.45593262 -41.84255981]
[-528.45697021 -41.66672897]
[-513.45800781 -41.49089813]
[-498.45904541 -41.31506729]
[-483.46005249 -41.13923645]
[-468.46109009 -40.96340561]
[-458.01892090 -51.52259827]
[-442.80532837 -51.55794525]
[-431.80065918 -40.53363800]
[-416.80169678 -40.35780716]
[-409.86959839 -51.74541473]
[-398.12585449 -58.28075409]
[-384.57846069 -58.16776276]
[-372.75814819 -51.32916641]
[-365.79815674 -39.45441437]
[-350.80227661 -39.10277557]
[-335.80639648 -38.75113678]
[-320.81051636 -38.39949799]
[-305.81463623 -38.04786301]
[-303.02593994 -45.01012421]
[-317.99246216 -46.01166534]
[-321.66482544 -60.55517578]
[-308.96795654 -68.54197693]
[-297.44854736 -58.93465424]
[-294.65982056 -65.89691925]
[-305.75192261 -75.99470520]
[-321.88049316 -78.96144104]
[-327.11981201 -94.50111389]
[-316.08013916 -106.62784576]
[-300.11813354 -102.86669159]
[-295.65414429 -87.08680725]
[-284.56204224 -76.98902130]
[-290.71243286 -90.67012787]
[-289.52368164 -105.62294769]
[-281.28887939 -118.16041565]
[-268.03860474 -125.19105530]
[-253.04005432 -124.98125458]
[-239.99160767 -117.58273315]
[-232.11073303 -104.81983185]
[-231.34068298 -89.83960724]
[-237.87135315 -76.33589172]
[-250.09239197 -67.63841248]
[-264.98913574 -65.89163971]
[-250.62867737 -61.55840683]
[-236.26820374 -57.22517395]
[-221.90774536 -52.89194107]
[-207.54727173 -48.55870819]
[-193.18679810 -44.22547531]
[-178.82632446 -39.89224243]
[-170.21437073 -47.31387329]
[-158.97590637 -49.69670105]
[-147.86412048 -46.33924484]
[-139.65805054 -37.96088791]
[-136.46768188 -26.55131149]
[-122.21274567 -21.88262177]
[-107.95780182 -17.21393394]
[-103.52283478 -22.51737404]
[-97.91231537 -26.59424591]
[-91.45767212 -29.19053459]
[-84.54342651 -30.14007759]
[-77.58428955 -29.37515450]
[-71.00028992 -26.93120575]
[-65.19142914 -22.94532776]
[-60.51337433 -17.64863586]
[-57.25567627 -11.35286903]
[-55.62389374 -4.43206072]
[-55.72661209 2.69968319]
[-41.97148895 8.68271065]
[-28.21636963 14.66573811]
[-14.46124649 20.64876556]
[-0.70612502 26.63179398]
[13.04899693 32.61482239]
[26.80411911 38.59785080]
[40.55924225 44.58087540]
[54.31436157 50.56390381]
[61.67589951 50.35078049]
[68.19500732 56.69852829]
[81.87905121 62.84238434]
[95.56309509 68.98623657]
[110.48869324 70.47837067]
[125.11818695 67.16504669]
[139.74766541 63.85173035]
[154.29547119 60.19636536]
[168.75357056 56.20097351]
[183.21166992 52.20557785]
[197.66978455 48.21018219]
[212.12788391 44.21478653]
[223.36860657 33.08119583]
[237.69699097 37.14894485]
[252.15510559 33.15354919]
[266.61322021 29.15815353]
[274.97756958 13.77523994]
[291.55740356 9.30602837]
[305.94168091 18.04985428]
[320.35195923 13.88525486]
[320.37936401 -3.49668074]
[325.54779053 -20.07549667]
[335.38455200 -34.36697769]
[348.99938965 -45.09465408]
[365.16516113 -51.30381393]
[382.42840576 -52.44646835]
[399.24005127 -48.42968750]
[414.09436035 -39.62308884]
[425.66381836 -26.82483864]
[439.12338257 -33.44602203]
[452.58294678 -40.06720734]
[466.04251099 -46.68839264]
[479.50207520 -53.30957794]
[492.96163940 -59.93076324]
[501.63125610 -73.85088348]
[518.00994873 -73.03247070]
[525.24877930 -58.31744385]
[515.90100098 -44.84336090]
[499.58282471 -46.47119904]
[486.12326050 -39.85001373]
[472.66369629 -33.22882843]
[459.20413208 -26.60764313]
[445.74456787 -19.98645782]
[432.28500366 -13.36527252]
[433.06396484 -10.88181782]
[433.72988892 -8.36569881]
[448.64648438 -9.94528294]
[463.56307983 -11.52486801]
[478.47967529 -13.10445213]
[491.41372681 -23.18623924]
[506.50811768 -16.77599335]
[508.23504639 -0.46802697]
[494.81799316 8.96142292]
[480.05926514 1.81214619]
[465.14266968 3.39173079]
[450.22607422 4.97131538]
[435.30947876 6.55089998]
[433.26745605 20.53464508]
[427.87780762 33.61032486]
[419.46008301 44.98883820]
[408.51672363 53.98211288]
[395.70312500 60.04471970]
[381.78833008 62.80693817]
[367.60894775 62.09732056]
[354.01870728 57.95330429]
[341.83724976 50.61928558]
[331.80056763 40.53220749]
[324.51654053 28.29553223]
[310.10626221 32.46013260]
[305.53427124 44.48547745]
[294.71533203 51.79995728]
[281.46368408 51.55498886]
[270.60861206 43.61626053]
[256.15048218 47.61165619]
[241.69238281 51.60704803]
[231.48580933 62.45486069]
[216.12329102 58.67288971]
[201.66517639 62.66828537]
[187.20707703 66.66368103]
[172.74896240 70.65908051]
[158.29086304 74.65447235]
[156.79400635 76.98583984]
[154.29937744 78.87535858]
[150.96696472 79.94583130]
[147.08825684 79.88350677]
[143.06098938 78.48121643]
[128.43150330 81.79454041]
[113.80201721 85.10785675]
[118.22427368 100.92745209]
[109.74359894 112.93129730]
[112.19425964 127.72975159]
[114.64492035 142.52821350]
[117.09558105 157.32666016]
[119.54624176 172.12512207]
[121.99690247 186.92356873]
[124.44756317 201.72203064]
[128.10292053 216.26982117]
[132.93838501 230.46905518]
[137.77384949 244.66828918]
[142.60931396 258.86752319]
[146.48440552 262.26150513]
[148.49226379 266.38491821]
[148.66540527 270.41317749]
[147.35560608 273.65182495]
[151.68884277 288.01229858]
[166.65951538 291.44369507]
[177.89787292 301.91244507]
[182.38085938 316.60250854]
[178.90255737 331.56237793]
[168.39862061 342.76785278]
[153.69456482 347.20477295]
[138.74569702 343.67959595]
[127.57318115 333.14059448]
[123.18238831 318.42269897]
[126.75440216 303.48495483]
[137.32836914 292.34552002]
[132.99514771 277.98504639]
[128.41007996 263.70300293]
[123.57461548 249.50375366]
[118.73915100 235.30451965]
[113.90368652 221.10528564]
[111.29416656 235.87655640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 241]
[14 240]
[15 239]
[16 238]
[17 237]
[18 236]
[19 235]
[21 149]
[22 148]
[23 147]
[24 145]
[25 144]
[26 143]
[27 142]
[28 141]
[29 140]
[30 139]
[31 138]
[32 137]
[35 126]
[36 125]
[37 124]
[40 119]
[41 118]
[42 117]
[43 116]
[44 115]
[45 114]
[46 113]
[47 89]
[48 88]
[49 87]
[50 86]
[51 85]
[55 80]
[56 79]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
[95 102]
[96 101]
[150 233]
[151 232]
[152 231]
[153 226]
[154 225]
[155 224]
[156 223]
[157 222]
[159 220]
[160 219]
[161 218]
[164 214]
[165 213]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
[191 202]
[192 201]
[193 200]
[194 199]
[242 266]
[243 265]
[244 264]
[245 263]
[249 262]
[250 261]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
