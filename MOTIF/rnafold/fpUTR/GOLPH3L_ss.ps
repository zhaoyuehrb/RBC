%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACACCAAGGUAGGUUGCCUAGUGAUCCUGAGGAAGCUGAUGUGUUAUUCCUUCUCUGCAUCGAAGGAUCAGGAAGUUUGUGCUCUCUGCGUGGCUAAGUUUUUCACCUACUAGGACGGGGGUGGGGUGGGGAGAACAGGUGUCCUUCUAAAAUACAGCACAAGCUACAGCCUGCGUCCAGCCAUAACCCAGGAGUAACAUCAGAAACAGGUGAGA\
) } def
/len { sequence length } bind def

/coor [
[49.55398560 362.50625610]
[43.02455521 366.23870850]
[35.76155472 368.08511353]
[28.29615593 367.92532349]
[22.20827293 381.63436890]
[16.12039185 395.34338379]
[20.01706696 407.63528442]
[14.66823864 418.92645264]
[3.43279123 423.39993286]
[-2.85201216 437.01980591]
[-9.13681507 450.63970947]
[-15.42161846 464.25958252]
[-21.70642281 477.87945557]
[-22.85278130 494.79461670]
[-39.42422104 498.37564087]
[-47.45272446 483.44314575]
[-35.32630539 471.59466553]
[-29.04150391 457.97476196]
[-22.75670052 444.35488892]
[-16.47189713 430.73501587]
[-10.18709278 417.11511230]
[-12.72382164 399.74819946]
[2.41135454 389.25552368]
[8.49923611 375.54647827]
[14.58711815 361.83743286]
[4.28372812 341.79705811]
[12.29616833 320.44754028]
[33.74175644 311.93539429]
[38.41810989 297.68295288]
[43.09446335 283.43054199]
[47.77081680 269.17810059]
[39.65484238 261.53701782]
[34.95274353 251.37379456]
[34.37777710 240.13893127]
[38.05112076 229.45175171]
[45.47886658 220.86689758]
[55.61808777 215.64823914]
[67.02316284 214.58283997]
[72.31112671 200.54583740]
[77.59909058 186.50883484]
[82.88705444 172.47183228]
[88.17501831 158.43482971]
[93.46298218 144.39782715]
[98.75095367 130.36083984]
[95.41360474 123.64427948]
[89.07293701 137.23823547]
[74.49143982 140.75677490]
[62.64902496 131.55041504]
[62.46304703 116.55156708]
[74.07354736 107.05439758]
[88.73891449 110.21116638]
[85.40157318 103.49460602]
[71.02029419 99.23092651]
[56.63902664 94.96723938]
[42.25775146 90.70355225]
[33.14593506 91.26480103]
[27.70077705 86.27342224]
[13.38244057 81.80294037]
[-0.93589711 77.33245850]
[-10.05485535 77.76234436]
[-15.42752075 72.69300842]
[-29.67994881 68.01666260]
[-43.93237686 63.34030533]
[-59.86321640 67.23138428]
[-71.00132751 55.19500351]
[-65.88877869 39.61315918]
[-49.78492355 36.51511765]
[-39.25602722 49.08787918]
[-25.00359726 53.76422882]
[-10.75116825 58.44058228]
[3.53458548 63.01411819]
[17.85292244 67.48460388]
[32.17126083 71.95508575]
[46.52143860 76.32228088]
[60.90270996 80.58596802]
[75.28398132 84.84964752]
[89.66525269 89.11333466]
[82.08278656 76.17092133]
[88.24221039 62.49387741]
[102.95923615 59.59399033]
[113.84672546 69.91205597]
[111.74079132 84.76356506]
[123.42965698 75.36300659]
[135.11853027 65.96245575]
[146.80738831 56.56189728]
[158.49626160 47.16134262]
[163.21911621 39.34886932]
[170.42196655 37.71100235]
[182.24508667 28.47986794]
[194.06820679 19.24873161]
[200.88824463 -1.06980646]
[221.43533325 -3.04336238]
[232.84843445 -12.77686214]
[244.26155090 -22.51036072]
[255.67465210 -32.24386215]
[267.08776855 -41.97735977]
[278.50085449 -51.71086121]
[265.07812500 -45.01531601]
[250.08959961 -45.60185242]
[237.23114014 -53.32584000]
[229.67338562 -66.28269958]
[229.27992249 -81.27754211]
[236.14776611 -94.61293030]
[248.58345032 -103.00064850]
[263.52059937 -104.37243652]
[277.27600098 -98.39005280]
[286.45785522 -86.52862549]
[288.80221558 -71.71415710]
[290.09759521 -86.65811920]
[291.39297485 -101.60208130]
[286.73706055 -117.90419006]
[301.11318970 -126.89102173]
[313.72851562 -115.56452179]
[306.33694458 -100.30670929]
[305.04156494 -85.36274719]
[303.74618530 -70.41878510]
[309.82015991 -66.01914215]
[321.96810913 -57.21986389]
[328.04208374 -52.82022476]
[341.83743286 -58.70991898]
[355.63278198 -64.59961700]
[365.28662109 -77.13411713]
[380.02978516 -75.01551819]
[393.82513428 -80.90521240]
[407.62045288 -86.79491425]
[421.41580200 -92.68460846]
[435.21115112 -98.57430267]
[444.86499023 -111.10880280]
[459.60815430 -108.99021149]
[473.40350342 -114.87990570]
[486.32122803 -122.50435638]
[498.14434814 -131.73548889]
[509.96746826 -140.96662903]
[521.79058838 -150.19776917]
[533.61370850 -159.42890930]
[539.72949219 -174.02026367]
[554.52282715 -175.75413513]
[566.34594727 -184.98527527]
[571.98907471 -200.38290405]
[588.18957520 -202.92767334]
[598.28179932 -190.00173950]
[591.88366699 -174.90219116]
[575.57708740 -173.16215515]
[563.75396729 -163.93101501]
[558.48382568 -149.99993896]
[542.84484863 -147.60578918]
[531.02172852 -138.37464905]
[519.19860840 -129.14350891]
[507.37548828 -119.91237640]
[495.55236816 -110.68124390]
[498.09494019 -103.62536621]
[512.20666504 -108.71050262]
[524.05645752 -117.90737915]
[536.46490479 -109.47939301]
[532.28363037 -95.07393646]
[517.29180908 -94.59875488]
[503.18008423 -89.51361847]
[505.72265625 -82.45774841]
[520.71643066 -82.89001465]
[535.71020508 -83.32228851]
[549.37854004 -92.38364410]
[563.93750000 -84.83594513]
[564.41009521 -68.44360352]
[550.31011963 -60.06966782]
[536.14245605 -68.32851410]
[521.14868164 -67.89624786]
[506.15490723 -67.46397400]
[483.98327637 -81.39432526]
[479.29321289 -101.08456421]
[465.49786377 -95.19486237]
[456.83074951 -83.08163452]
[441.10086060 -84.77896118]
[427.30551147 -78.88926697]
[413.51016235 -72.99956512]
[399.71481323 -67.10987091]
[385.91946411 -61.22017670]
[377.25234985 -49.10694504]
[361.52246094 -50.80427170]
[347.72711182 -44.91457748]
[333.93179321 -39.02487946]
[288.23437500 -40.29775238]
[276.82125854 -30.56425476]
[265.40814209 -20.83075523]
[253.99504089 -11.09725571]
[242.58193970 -1.36375606]
[231.16883850 8.36974335]
[231.91665649 17.20788383]
[228.46380615 25.52702141]
[221.46702576 31.41526031]
[212.41212463 33.45705795]
[203.29934692 31.07184982]
[191.47622681 40.30298615]
[179.65310669 49.53412247]
[167.89680481 58.85020828]
[156.20794678 68.25076294]
[144.51907349 77.65132141]
[132.83021545 87.05187225]
[121.14134979 96.45243073]
[112.78795624 135.64880371]
[107.49998474 149.68580627]
[102.21202087 163.72280884]
[96.92405701 177.75979614]
[91.63609314 191.79679871]
[86.34812927 205.83380127]
[81.06015778 219.87080383]
[92.25401306 235.40284729]
[91.82196045 254.39306641]
[80.11992645 269.16433716]
[62.02324295 273.85446167]
[57.34689331 288.10687256]
[52.67053986 302.35931396]
[47.99418640 316.61175537]
[53.73979950 321.75198364]
[57.88938522 328.21734619]
[60.15360641 335.53036499]
[60.38169861 343.15554810]
[58.57147217 350.53857422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 25]
[5 24]
[6 23]
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[28 212]
[29 211]
[30 210]
[31 209]
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[43 200]
[44 199]
[52 77]
[53 76]
[54 75]
[55 74]
[57 73]
[58 72]
[59 71]
[61 70]
[62 69]
[63 68]
[82 198]
[83 197]
[84 196]
[85 195]
[86 194]
[88 193]
[89 192]
[90 191]
[92 186]
[93 185]
[94 184]
[95 183]
[96 182]
[97 181]
[108 116]
[109 115]
[110 114]
[119 180]
[120 179]
[121 178]
[123 176]
[124 175]
[125 174]
[126 173]
[127 172]
[129 170]
[130 169]
[131 150]
[132 149]
[133 148]
[134 147]
[135 146]
[137 144]
[138 143]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
