%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGCGCUCCCGCGCGUGCGUGUUGGGAUCGAAUCGCUGUUUCCUUCCGCUUCUCUUCCUCUGUCUCCCCCCCAUAUCCGUGCGCCGAGCUGAUAAAGGCGCCAUUUUGGAGGGGCCGCGGGAGACGUGGUGCCGCUGCGGGCUCGCUCUGCCGUGCGCUAGGCUUGGUGGGAAGGCCUGUUCUCGAGUCCGCGCUUUUCGUCACCGCC\
) } def
/len { sequence length } bind def

/coor [
[126.37713623 132.32978821]
[111.51290131 130.31622314]
[108.83460236 115.55735016]
[102.23013306 119.11136627]
[98.02371979 133.50949097]
[93.81731415 147.90762329]
[89.61090088 162.30575562]
[94.02236176 178.10040283]
[82.35774231 189.62727356]
[66.61660767 185.02850342]
[62.99208450 169.03491211]
[75.21276855 158.09933472]
[79.41918182 143.70121765]
[83.62559509 129.30308533]
[87.83200836 114.90495300]
[81.86482239 110.36152649]
[69.93045044 101.27468109]
[63.96326828 96.73125458]
[51.20306778 104.61650848]
[38.44286728 112.50177002]
[38.43830872 126.28591919]
[31.67683601 138.17343140]
[20.01760292 145.11198425]
[6.56088161 145.38105774]
[-5.17605591 139.01725769]
[-18.05278778 146.71075439]
[-30.92951965 154.40423584]
[-43.80625153 162.09773254]
[-51.68453598 175.81790161]
[-66.57870483 175.70362854]
[-79.45543671 183.39712524]
[-83.07353973 198.78169250]
[-96.55425262 207.03068542]
[-111.89970398 203.25012207]
[-120.00571442 189.68295288]
[-116.06312561 174.37832642]
[-102.41101074 166.41621399]
[-87.14892578 170.52038574]
[-74.27219391 162.82690430]
[-67.31494141 149.65701294]
[-51.49974060 149.22099304]
[-38.62300873 141.52751160]
[-25.74627686 133.83401489]
[-12.86954498 126.14052582]
[-11.92266846 109.75244141]
[-1.28789055 97.03036499]
[14.99578190 93.11486816]
[30.55760956 99.74156189]
[43.31781006 91.85630798]
[56.07801056 83.97105408]
[41.09948730 84.77345276]
[27.42625427 90.94132233]
[12.44175148 90.25966644]
[-0.61500144 82.87581635]
[-8.92168236 70.38586426]
[-10.68273544 55.48959732]
[-5.51749563 41.40697479]
[5.45752954 31.18206215]
[19.87000084 27.02505875]
[34.60454559 29.83453369]
[46.47617722 39.00319672]
[52.91892624 52.55002213]
[63.82615662 62.84722137]
[59.19090271 48.58137512]
[54.55564880 34.31552505]
[49.92039108 20.04967880]
[45.28513718 5.78383064]
[40.64988327 -8.48201752]
[36.01462936 -22.74786568]
[30.95467758 -36.86866379]
[25.47456360 -50.83176804]
[19.99444771 -64.79487610]
[14.51433182 -78.75798035]
[10.43091393 -82.01203918]
[8.22510815 -86.09854126]
[7.89953661 -90.16266632]
[9.11709690 -93.47250366]
[4.26895189 -107.66741943]
[-0.57919276 -121.86232758]
[-5.42733765 -136.05723572]
[-23.33696938 -149.52450562]
[-18.33656693 -170.58206177]
[-24.02495003 -184.46162415]
[-29.71333122 -198.34118652]
[-35.40171432 -212.22076416]
[-41.09009552 -226.10032654]
[-56.33338928 -227.47894287]
[-69.18368530 -235.79330444]
[-76.68807220 -249.13281250]
[-77.12210846 -264.43215942]
[-70.38604736 -278.17568970]
[-58.02779007 -287.20520020]
[-42.88716888 -289.44577026]
[-28.44339561 -284.38259888]
[-18.01553726 -273.17907715]
[-13.99984074 -258.40975952]
[-17.31908417 -243.46850586]
[-27.21053123 -231.78871155]
[-21.52214813 -217.90913391]
[-15.83376694 -204.02957153]
[-10.14538479 -190.15000916]
[-4.45700312 -176.27044678]
[3.29309154 -174.84667969]
[9.92737103 -170.42326355]
[14.32409000 -163.65893555]
[15.70492935 -155.61500549]
[13.77186394 -147.58898926]
[8.76757336 -140.90538025]
[13.61571789 -126.71047211]
[18.46386337 -112.51556396]
[23.31200790 -98.32064819]
[28.47743797 -84.23809814]
[33.95755386 -70.27498627]
[39.43766785 -56.31188202]
[44.91778564 -42.34877777]
[47.43107224 -41.10553741]
[49.60312653 -38.79145432]
[51.02347183 -35.53158188]
[51.33446503 -31.59717941]
[50.28047562 -27.38311958]
[54.91572952 -13.11727238]
[59.55098724 1.14857554]
[64.18624115 15.41442299]
[68.82149506 29.68027115]
[73.45674896 43.94611740]
[78.09200287 58.21196747]
[133.06932068 90.56171417]
[147.40292358 94.98303986]
[161.73651123 99.40436554]
[176.07009888 103.82569885]
[190.40370178 108.24702454]
[204.73728943 112.66835022]
[220.20497131 109.34246826]
[230.08619690 120.48744965]
[244.41978455 124.90878296]
[265.84204102 118.33544922]
[279.93881226 134.75817871]
[294.51116943 138.31437683]
[309.08352661 141.87059021]
[323.65585327 145.42678833]
[338.22821045 148.98300171]
[352.80056763 152.53919983]
[367.37292480 156.09541321]
[381.94525146 159.65161133]
[396.51760864 163.20782471]
[419.53570557 142.15405273]
[434.53570557 142.15405273]
[449.53570557 142.15405273]
[460.66885376 131.25949097]
[475.88098145 131.47317505]
[486.19866943 142.15405273]
[501.19866943 142.15405273]
[516.19866943 142.15405273]
[525.21008301 129.52178955]
[539.93615723 124.63079834]
[554.71447754 129.36175537]
[563.86236572 141.89550781]
[563.86236572 157.41258240]
[554.71447754 169.94635010]
[539.93615723 174.67730713]
[525.21008301 169.78631592]
[516.19866943 157.15405273]
[501.19866943 157.15405273]
[486.19866943 157.15405273]
[475.88098145 167.83493042]
[460.66885376 168.04859924]
[449.53570557 157.15405273]
[434.53570557 157.15405273]
[419.53570557 157.15405273]
[415.11437988 171.48764038]
[427.50796509 179.93743896]
[439.90155029 188.38723755]
[452.29513550 196.83705139]
[464.68872070 205.28684998]
[480.16894531 202.10275269]
[493.32043457 210.86706543]
[496.34069824 226.38008118]
[487.43783569 239.43820190]
[471.89373779 242.29426575]
[458.93048096 233.25382996]
[456.23892212 217.68043518]
[443.84533691 209.23062134]
[431.45175171 200.78082275]
[419.05816650 192.33102417]
[406.66458130 183.88122559]
[392.96139526 177.78018188]
[378.38906860 174.22396851]
[363.81671143 170.66777039]
[349.24435425 167.11155701]
[334.67199707 163.55535889]
[320.09967041 159.99914551]
[305.52731323 156.44294739]
[290.95495605 152.88673401]
[276.38259888 149.33053589]
[270.67535400 154.76361084]
[263.19720459 157.53083801]
[255.14044189 157.11189270]
[247.82112122 153.50091553]
[242.46415710 147.21945190]
[239.99845886 139.24237061]
[225.66487122 134.82104492]
[211.22241211 138.46316528]
[200.31596375 127.00194550]
[185.98236084 122.58061981]
[171.64877319 118.15928650]
[157.31518555 113.73796082]
[142.98159790 109.31663513]
[128.64799500 104.89530945]
[122.04353333 108.44931793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 15]
[5 14]
[6 13]
[7 12]
[18 50]
[19 49]
[20 48]
[25 44]
[26 43]
[27 42]
[28 41]
[30 39]
[31 38]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[68 121]
[69 120]
[70 115]
[71 114]
[72 113]
[73 112]
[77 111]
[78 110]
[79 109]
[80 108]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[127 208]
[128 207]
[129 206]
[130 205]
[131 204]
[132 203]
[134 201]
[135 200]
[137 194]
[138 193]
[139 192]
[140 191]
[141 190]
[142 189]
[143 188]
[144 187]
[145 186]
[146 169]
[147 168]
[148 167]
[151 164]
[152 163]
[153 162]
[170 185]
[171 184]
[172 183]
[173 182]
[174 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
