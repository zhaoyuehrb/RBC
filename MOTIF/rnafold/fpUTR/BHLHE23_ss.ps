%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUUGGACAGCAGCGAGGUCCCACCGGGCGCCUCCGCGGCUUAAAACCGAAGCGGGGGCGAGGGGGAGGUAGAGCCCGCCCCCUGCGCGUCGCGGCUGGGAGGGAGAGGAGGUGGGAGAGAAGGAAGAGGCGGAGGAGGCAGCGGGCGCCGAGGCUCUGGGACCCGCAGGCAAGCCAGACCGACGCGCAGAGCCGGGAGCCUCAUCGCAGCGGCAGCGGCAGCGGCGGGCUCGGGCCGGCCUCGGGGGCUGCUC\
ACCCAC\
) } def
/len { sequence length } bind def

/coor [
[104.80742645 386.14221191]
[89.01335907 385.57382202]
[78.30850220 373.94708252]
[79.04384613 358.15988159]
[90.78313446 347.57855225]
[91.32260895 332.58825684]
[91.86207581 317.59796143]
[79.88637543 305.77001953]
[80.19196320 288.60247803]
[93.07870483 276.75006104]
[93.43839264 261.75439453]
[93.79808044 246.75869751]
[94.15777588 231.76301575]
[94.51746368 216.76731873]
[94.87715149 201.77163696]
[94.87715149 186.77163696]
[94.51746368 171.77595520]
[94.15777588 156.78025818]
[93.79808044 141.78457642]
[93.43839264 126.78888702]
[80.38847351 119.39296722]
[67.33855438 126.78888702]
[54.28863525 134.18481445]
[48.38916779 141.11614990]
[41.03760147 141.59010315]
[27.89994049 148.82901001]
[25.49624062 159.39616394]
[17.84401512 166.75711060]
[7.62239361 168.66824341]
[-1.76799774 164.73829651]
[-15.07546616 171.66009521]
[-28.38293457 178.58189392]
[-41.69040298 185.50369263]
[-54.99787140 192.42547607]
[-68.30534363 199.34727478]
[-81.61280823 206.26907349]
[-94.92028046 213.19087219]
[-108.22774506 220.11267090]
[-106.87308502 235.25312805]
[-111.42031097 249.75799561]
[-121.17601013 261.41537476]
[-134.65249634 268.44763184]
[-149.79472351 269.78237915]
[-164.29359436 265.21609497]
[-175.93814087 255.44505310]
[-182.95266724 241.95933533]
[-184.26748657 226.81536865]
[-179.68211365 212.32250977]
[-169.89578247 200.69082642]
[-156.40083313 193.69404602]
[-141.25515747 192.39913940]
[-126.76834869 197.00358582]
[-115.14954376 206.80520630]
[-101.84207916 199.88340759]
[-88.53460693 192.96160889]
[-75.22714233 186.03981018]
[-61.91967010 179.11801147]
[-48.61220169 172.19621277]
[-35.30473328 165.27441406]
[-21.99726295 158.35263062]
[-8.68979454 151.43083191]
[0.52281678 134.40975952]
[20.66102982 135.69134521]
[33.79869080 128.45243835]
[46.89271927 121.13488770]
[59.94263840 113.73896790]
[72.99255371 106.34304810]
[82.72499847 84.38174438]
[102.44223022 81.32426453]
[110.14894867 68.45544434]
[117.85567474 55.58663177]
[117.73618317 37.15826416]
[133.42169189 29.25870323]
[140.97355652 16.29840279]
[148.52542114 3.33810163]
[156.07728577 -9.62219906]
[163.62913513 -22.58249855]
[171.18099976 -35.54280090]
[178.73286438 -48.50310135]
[186.28472900 -61.46340179]
[193.83659363 -74.42369843]
[191.30868530 -87.05059814]
[197.84011841 -97.68157959]
[209.47515869 -100.91767120]
[217.18188477 -113.78648376]
[224.88859558 -126.65530396]
[232.59532166 -139.52412415]
[234.31024170 -148.46315002]
[240.47238159 -152.50025940]
[248.33285522 -165.27574158]
[256.19332886 -178.05122375]
[256.83520508 -193.85940552]
[270.09454346 -200.64462280]
[277.95501709 -213.42010498]
[278.59689331 -229.22828674]
[291.85623169 -236.01350403]
[299.71667480 -248.78898621]
[307.57714844 -261.56448364]
[315.43762207 -274.33996582]
[316.07949829 -290.14813232]
[329.33883667 -296.93334961]
[337.19931030 -309.70883179]
[333.83273315 -318.45611572]
[334.83438110 -327.63714600]
[339.85656738 -335.22375488]
[347.67749023 -339.59790039]
[356.49624634 -339.89642334]
[364.81109619 -352.38095093]
[373.12594604 -364.86547852]
[381.44079590 -377.35000610]
[375.34808350 -393.14508057]
[379.83734131 -409.29580688]
[392.94436646 -419.47689819]
[409.37094116 -419.82418823]
[417.53549194 -432.40753174]
[425.70004272 -444.99084473]
[418.77111816 -452.44989014]
[413.43481445 -461.11166382]
[409.89392090 -470.64163208]
[408.28204346 -480.67233276]
[408.65838623 -490.81762695]
[411.00570679 -500.68750000]
[415.23107910 -509.90304565]
[421.16943359 -518.11102295]
[428.59020996 -524.99749756]
[437.20617676 -530.29968262]
[446.68450928 -533.81597900]
[456.65979004 -535.41387939]
[466.74801636 -535.03460693]
[476.56130981 -532.69555664]
[485.72302246 -528.48937988]
[495.05526733 -540.23284912]
[504.38751221 -551.97631836]
[502.78463745 -567.47045898]
[512.41613770 -579.24707031]
[527.19732666 -580.67968750]
[536.52960205 -592.42315674]
[538.63079834 -612.49243164]
[556.95184326 -618.73156738]
[565.99981689 -630.69543457]
[575.04779053 -642.65936279]
[576.08178711 -665.83770752]
[597.12304688 -673.66772461]
[605.43792725 -686.15228271]
[613.75274658 -698.63677979]
[622.06762695 -711.12133789]
[630.38244629 -723.60583496]
[627.48626709 -738.91107178]
[636.09655762 -751.45367432]
[650.70556641 -754.12042236]
[659.02044678 -766.60498047]
[667.33526611 -779.08947754]
[663.98345947 -794.53424072]
[672.60455322 -807.78009033]
[688.08392334 -810.96844482]
[701.23785400 -802.20776367]
[704.26239014 -786.69555664]
[695.36309814 -773.63500977]
[679.81982422 -770.77465820]
[671.50494385 -758.29010010]
[663.19012451 -745.80560303]
[666.36047363 -731.29754639]
[658.10589600 -718.51800537]
[642.86700439 -715.29095459]
[634.55212402 -702.80645752]
[626.23730469 -690.32196045]
[617.92242432 -677.83740234]
[609.60760498 -665.35290527]
[612.66467285 -659.03100586]
[613.36535645 -651.97552490]
[611.57751465 -645.04437256]
[607.47442627 -639.09643555]
[601.51922607 -634.88519287]
[594.41284180 -632.96350098]
[587.01165771 -633.61138916]
[577.96368408 -621.64752197]
[568.91577148 -609.68359375]
[571.22149658 -599.76861572]
[567.62933350 -590.01000977]
[559.09326172 -583.69525146]
[548.27307129 -583.09094238]
[538.94079590 -571.34741211]
[540.88372803 -556.62463379]
[531.58679199 -544.58215332]
[516.13098145 -542.64410400]
[506.79873657 -530.90063477]
[497.46649170 -519.15710449]
[508.14492798 -502.12121582]
[511.48083496 -482.26306152]
[506.94131470 -462.61380005]
[495.19747925 -446.18179321]
[478.02526855 -435.49203491]
[458.03683472 -432.19805908]
[438.28335571 -436.82629395]
[430.11880493 -424.24295044]
[421.95425415 -411.65963745]
[427.87484741 -399.71304321]
[427.12118530 -386.29281616]
[419.78308105 -374.90243530]
[407.68316650 -368.56808472]
[393.92532349 -369.03515625]
[385.61047363 -356.55062866]
[377.29562378 -344.06610107]
[368.98077393 -331.58157349]
[369.40628052 -310.93066406]
[349.97479248 -301.84838867]
[342.11431885 -289.07287598]
[342.03469849 -274.17849731]
[328.21310425 -266.47949219]
[320.35263062 -253.70401001]
[312.49218750 -240.92852783]
[304.63171387 -228.15303040]
[304.55206299 -213.25865173]
[290.73049927 -205.55963135]
[282.87002563 -192.78414917]
[282.79037476 -177.88975525]
[268.96881104 -170.19075012]
[261.10833740 -157.41526794]
[253.24787903 -144.63978577]
[245.46414185 -131.81739807]
[237.75741577 -118.94858551]
[230.05070496 -106.07976532]
[222.34397888 -93.21095276]
[222.99493408 -75.66060638]
[206.79689026 -66.87184143]
[199.24502563 -53.91153717]
[191.69316101 -40.95123672]
[184.14129639 -27.99093819]
[176.58944702 -15.03063774]
[169.03758240 -2.07033706]
[161.48571777 10.88996315]
[153.93385315 23.85026360]
[146.38198853 36.81056213]
[149.16268921 48.56277084]
[143.00363159 59.41372681]
[130.72448730 63.29335022]
[123.01776886 76.16217041]
[115.31105042 89.03098297]
[122.10543060 107.32840729]
[108.43408203 126.42919922]
[108.79376984 141.42488098]
[109.15345764 156.42057800]
[109.51315308 171.41625977]
[109.87284088 186.41194153]
[112.22019958 189.98001099]
[113.22821045 193.73171997]
[113.00117493 197.22908020]
[111.77330017 200.11157227]
[109.87284088 202.13133240]
[109.51315308 217.12701416]
[109.15345764 232.12269592]
[108.79376984 247.11839294]
[108.43408203 262.11407471]
[108.07439423 277.10977173]
[118.41560364 285.70996094]
[121.87484741 298.50625610]
[117.40813446 310.77999878]
[106.85237122 318.13745117]
[106.31290436 333.12774658]
[105.77342987 348.11804199]
[116.72173309 359.51583862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 260]
[6 259]
[7 258]
[10 254]
[11 253]
[12 252]
[13 251]
[14 250]
[15 249]
[16 244]
[17 243]
[18 242]
[19 241]
[20 240]
[21 67]
[22 66]
[23 65]
[25 64]
[26 63]
[30 61]
[31 60]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[37 54]
[38 53]
[69 238]
[70 237]
[71 236]
[73 233]
[74 232]
[75 231]
[76 230]
[77 229]
[78 228]
[79 227]
[80 226]
[81 225]
[84 223]
[85 222]
[86 221]
[87 220]
[89 219]
[90 218]
[91 217]
[93 215]
[94 214]
[96 212]
[97 211]
[98 210]
[99 209]
[101 207]
[102 206]
[107 204]
[108 203]
[109 202]
[110 201]
[114 196]
[115 195]
[116 194]
[131 187]
[132 186]
[133 185]
[136 182]
[137 181]
[139 177]
[140 176]
[141 175]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
