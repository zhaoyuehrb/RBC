%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRM2)
} def

/sequence { (\
AGACCAGACCAACAGUAACACCAAGGGCAGGUGGGCAGGCCUCCGCCCUCCUCCCCUACUCCAGGGCCCACUGCAGCCUCAGCCCAGGAGCCACCAGAUCUCCCAACACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.007509463 ubox
1 101 0.157806736 ubox
2 56 0.007874754 ubox
2 100 0.181281545 ubox
2 102 0.102877173 ubox
3 16 0.101345844 ubox
3 99 0.165218228 ubox
3 101 0.093368609 ubox
4 15 0.104708595 ubox
4 88 0.003437776 ubox
5 87 0.003456984 ubox
6 57 0.009120762 ubox
6 101 0.225341698 ubox
7 56 0.009475188 ubox
7 100 0.242418141 ubox
7 102 0.095194408 ubox
8 16 0.211919951 ubox
8 99 0.219094848 ubox
8 101 0.088010587 ubox
9 15 0.219489135 ubox
9 65 0.004278407 ubox
9 88 0.003236913 ubox
10 64 0.005827142 ubox
10 87 0.003254455 ubox
13 73 0.006040098 ubox
14 57 0.012968598 ubox
14 60 0.026085587 ubox
14 72 0.006078069 ubox
14 101 0.046186593 ubox
15 21 0.135200579 ubox
15 56 0.013476775 ubox
15 59 0.030582076 ubox
15 71 0.006082326 ubox
15 91 0.032989338 ubox
15 94 0.093829181 ubox
15 99 0.025855231 ubox
15 100 0.048814333 ubox
15 107 0.132602975 ubox
15 109 0.076152481 ubox
16 20 0.122207503 ubox
16 58 0.031769026 ubox
16 70 0.005906931 ubox
16 90 0.015867718 ubox
16 93 0.089629026 ubox
16 98 0.029156384 ubox
16 106 0.128107079 ubox
16 108 0.072734542 ubox
17 57 0.020540439 ubox
21 65 0.005622270 ubox
21 88 0.004465040 ubox
22 64 0.005667166 ubox
22 87 0.004483178 ubox
24 49 0.008005541 ubox
24 57 0.941075215 ubox
24 101 0.003642103 ubox
25 48 0.008481964 ubox
25 54 0.004021643 ubox
25 55 0.219335394 ubox
25 56 0.974985941 ubox
25 57 0.015742642 ubox
25 85 0.014420400 ubox
25 104 0.010248866 ubox
26 47 0.008484445 ubox
26 53 0.003968616 ubox
26 54 0.222977432 ubox
26 55 0.974451331 ubox
26 56 0.016044440 ubox
26 84 0.014435648 ubox
26 103 0.010189291 ubox
27 46 0.008484580 ubox
27 53 0.226032937 ubox
27 54 0.972903148 ubox
27 55 0.015746261 ubox
27 83 0.014433193 ubox
27 102 0.010042718 ubox
28 45 0.008457622 ubox
28 82 0.014389300 ubox
29 52 0.978600961 ubox
29 79 0.010683367 ubox
29 101 0.005936157 ubox
30 44 0.008067174 ubox
30 50 0.005057709 ubox
30 51 0.999785221 ubox
30 52 0.004407010 ubox
30 78 0.011538597 ubox
30 100 0.005835594 ubox
31 43 0.008060554 ubox
31 49 0.005402116 ubox
31 50 0.998367407 ubox
31 51 0.004608825 ubox
31 71 0.003272679 ubox
31 77 0.011531453 ubox
31 99 0.005641316 ubox
32 70 0.003467046 ubox
32 76 0.011422808 ubox
32 98 0.005495103 ubox
33 41 0.007616477 ubox
33 48 0.998617349 ubox
33 49 0.006932468 ubox
33 69 0.003607690 ubox
34 40 0.007620652 ubox
34 47 0.999843973 ubox
34 48 0.006858289 ubox
34 68 0.003607619 ubox
35 46 0.999842572 ubox
35 47 0.006150213 ubox
35 67 0.003605200 ubox
35 74 0.011357247 ubox
36 45 0.997510344 ubox
36 66 0.003411935 ubox
36 73 0.011371598 ubox
37 72 0.011350187 ubox
38 44 0.836582505 ubox
38 47 0.005928041 ubox
38 71 0.011204030 ubox
39 43 0.823509381 ubox
39 46 0.006428299 ubox
40 45 0.006618180 ubox
45 67 0.011548504 ubox
46 66 0.011565500 ubox
47 65 0.011565593 ubox
48 64 0.011563243 ubox
49 63 0.010918996 ubox
54 66 0.005015378 ubox
55 65 0.006307517 ubox
56 64 0.006811446 ubox
56 97 0.026650585 ubox
57 63 0.006642012 ubox
57 96 0.026046515 ubox
59 76 0.008943791 ubox
59 82 0.011672361 ubox
59 90 0.988727906 ubox
59 97 0.019984309 ubox
60 75 0.008847957 ubox
60 81 0.011606028 ubox
60 89 0.994944399 ubox
60 96 0.019307550 ubox
60 98 0.022525233 ubox
61 88 0.995796518 ubox
61 97 0.024162738 ubox
62 73 0.010016535 ubox
62 87 0.994115833 ubox
63 72 0.010086437 ubox
63 79 0.005366708 ubox
64 71 0.010084702 ubox
64 78 0.005150862 ubox
64 79 0.029667427 ubox
64 80 0.008822934 ubox
64 84 0.005784350 ubox
64 85 0.995475158 ubox
64 92 0.006469999 ubox
64 95 0.006932068 ubox
64 104 0.038656628 ubox
65 77 0.004754828 ubox
65 78 0.032860838 ubox
65 83 0.005224718 ubox
65 84 0.997148651 ubox
65 85 0.012515400 ubox
65 91 0.006126388 ubox
65 92 0.049541594 ubox
65 94 0.005101994 ubox
65 103 0.038688856 ubox
66 74 0.007615245 ubox
66 77 0.033482580 ubox
66 83 0.997063647 ubox
66 84 0.012218404 ubox
66 91 0.049962008 ubox
66 102 0.038616254 ubox
67 73 0.008057377 ubox
67 76 0.033902488 ubox
67 82 0.973411512 ubox
67 90 0.049990278 ubox
68 88 0.041982522 ubox
69 87 0.041503133 ubox
71 82 0.208802634 ubox
71 87 0.028130812 ubox
71 88 0.004046304 ubox
71 97 0.038521122 ubox
72 81 0.449459642 ubox
72 86 0.030011054 ubox
72 87 0.003981691 ubox
72 96 0.038638704 ubox
73 80 0.448521180 ubox
73 83 0.038043016 ubox
73 85 0.030111778 ubox
73 91 0.003959452 ubox
73 95 0.038336281 ubox
74 82 0.038324814 ubox
74 90 0.004391063 ubox
76 83 0.031934566 ubox
76 91 0.028616294 ubox
77 82 0.032022697 ubox
77 88 0.013270280 ubox
77 90 0.025389301 ubox
78 87 0.013517919 ubox
78 88 0.012047547 ubox
78 90 0.026506411 ubox
79 86 0.012797157 ubox
79 87 0.010224242 ubox
79 88 0.016755771 ubox
79 89 0.029604719 ubox
80 87 0.018749133 ubox
80 88 0.029515875 ubox
87 95 0.008673912 ubox
87 101 0.004051082 ubox
87 103 0.063341551 ubox
87 104 0.007178366 ubox
88 94 0.008662663 ubox
88 100 0.004499417 ubox
88 102 0.063684281 ubox
88 103 0.005706660 ubox
89 99 0.004515812 ubox
89 101 0.063802590 ubox
90 100 0.063102578 ubox
24 57 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
27 54 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
33 48 0.9500000 lbox
34 47 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
38 44 0.9500000 lbox
39 43 0.9500000 lbox
59 90 0.9500000 lbox
60 89 0.9500000 lbox
61 88 0.9500000 lbox
62 87 0.9500000 lbox
64 85 0.9500000 lbox
65 84 0.9500000 lbox
66 83 0.9500000 lbox
67 82 0.9500000 lbox
showpage
end
%%EOF
