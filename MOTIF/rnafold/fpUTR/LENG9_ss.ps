%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCUCUCCACCAAGGAGGGACUGGGCCAGAGUCCUCGCGAGGGCACGCGGCGUGGUCCCCAGAGCUAGGCCGGAGCGCGGGCCGCUGACGCCACUGUCGGGUGAGGCUCGGUGCAUCCAUGGGGAGCCGCCCUCCGUGCGGGGCGACCUCGUCUGCGCGGCGGGCGUGCCAGUUCCCCGCACCC\
) } def
/len { sequence length } bind def

/coor [
[96.07240295 115.10119629]
[90.46652222 112.13559723]
[86.55950165 107.22906494]
[71.81764984 109.99995422]
[59.68426132 120.15335083]
[45.74674225 114.90026855]
[31.00489235 117.67115784]
[16.26304245 120.44204712]
[1.52119160 123.21293640]
[-12.15481377 135.52864075]
[-28.47295952 129.09756470]
[-43.16590881 132.11705017]
[-55.12608337 142.47392273]
[-69.15033722 137.45698547]
[-83.84328461 140.47645569]
[-93.96395111 157.80955505]
[-113.26412964 162.08050537]
[-129.25282288 150.98283386]
[-143.77398682 154.74261475]
[-158.29513550 158.50241089]
[-172.81629944 162.26219177]
[-187.33744812 166.02198792]
[-201.85861206 169.78176880]
[-216.37977600 173.54154968]
[-227.80003357 184.49090576]
[-242.06037903 180.19073486]
[-256.58154297 183.95051575]
[-271.10269165 187.71029663]
[-277.07482910 203.52412415]
[-291.15182495 212.57923889]
[-307.68704224 211.47857666]
[-320.18658447 200.85264587]
[-334.64218140 204.85714722]
[-349.09774780 208.86164856]
[-363.55334473 212.86616516]
[-378.00891113 216.87066650]
[-389.11444092 228.93711853]
[-405.05575562 225.08914185]
[-409.43377686 209.28518677]
[-397.74481201 197.78302002]
[-382.01342773 202.41508484]
[-367.55783081 198.41056824]
[-353.10226440 194.40606689]
[-338.64666748 190.40156555]
[-324.19110107 186.39704895]
[-320.68692017 173.50187683]
[-311.18841553 163.94940186]
[-298.10458374 160.31416321]
[-284.82962036 163.65039062]
[-274.86248779 173.18914795]
[-260.34133911 169.42935181]
[-245.82017517 165.66957092]
[-235.43856812 154.98915100]
[-220.13955688 159.02040100]
[-205.61839294 155.26060486]
[-191.09724426 151.50082397]
[-176.57608032 147.74104309]
[-162.05493164 143.98124695]
[-147.53376770 140.22146606]
[-133.01261902 136.46166992]
[-130.36813354 126.50429535]
[-123.76874542 118.48783875]
[-114.35939789 113.90898895]
[-103.81717682 113.65869141]
[-94.05247498 117.84960938]
[-86.86276245 125.78350830]
[-72.16981506 122.76403046]
[-61.26057434 112.62313080]
[-46.18538666 117.42409515]
[-31.49243736 114.40461731]
[-24.56522942 104.47124481]
[-12.33257008 101.84525299]
[-1.24969923 108.47108459]
[13.49215126 105.70019531]
[28.23400307 102.92930603]
[42.97585297 100.15841675]
[54.05480957 90.20321655]
[69.04676056 95.25810242]
[83.78861237 92.48721313]
[93.75003052 81.27248383]
[94.76268005 66.30670929]
[95.77532196 51.34092712]
[96.78797150 36.37514877]
[97.80061340 21.40936852]
[87.18583679 2.81004214]
[99.33084869 -13.86284351]
[99.58419037 -28.86070442]
[99.83753204 -43.85856247]
[100.09087372 -58.85642624]
[100.34421539 -73.85428619]
[89.18042755 -85.04112244]
[89.28027344 -100.84509277]
[100.58451080 -111.88999176]
[116.38654327 -111.62306213]
[127.31130981 -100.20268250]
[126.87732697 -84.40435028]
[115.34207916 -73.60094452]
[115.08873749 -58.60308075]
[114.83539581 -43.60522079]
[114.58205414 -28.60736084]
[114.32871246 -13.60950089]
[121.48635101 -8.29184341]
[125.44316101 -0.14757450]
[125.19218445 9.04137039]
[120.66304779 17.19850349]
[112.76639557 22.42201424]
[111.75374603 37.38779449]
[110.74110413 52.35357285]
[109.72845459 67.31935120]
[108.71581268 82.28513336]
[117.38849640 94.52378082]
[131.84408569 98.52828217]
[146.29966736 102.53279114]
[160.75524902 106.53730011]
[175.21083069 110.54180145]
[168.91413879 96.92741394]
[173.94142151 82.79495239]
[187.42152405 76.21568298]
[201.65576172 80.94712067]
[208.51473999 94.28707123]
[204.08119202 108.61689758]
[190.88694763 115.75263214]
[204.86323547 121.19903564]
[218.83952332 126.64544678]
[232.81581116 132.09185791]
[246.79209900 137.53826904]
[260.76840210 142.98466492]
[274.74468994 148.43107605]
[288.93841553 153.28265381]
[303.32431030 157.53073120]
[317.71020508 161.77880859]
[332.09606934 166.02690125]
[346.48196411 170.27497864]
[361.90838623 166.76274109]
[371.92337036 177.78768921]
[386.30926514 182.03578186]
[400.69512939 186.28385925]
[415.08102417 190.53195190]
[429.46691895 194.78002930]
[443.85281372 199.02810669]
[458.23870850 203.27619934]
[472.62457275 207.52427673]
[487.01046753 211.77235413]
[496.14953613 211.20233154]
[501.60232544 216.21557617]
[515.91442871 220.70602417]
[531.79327393 216.60792542]
[543.08709717 228.49830627]
[538.17779541 244.14537048]
[522.11566162 247.45275879]
[511.42398071 235.01811218]
[497.11187744 230.52766418]
[482.76239014 226.15824890]
[468.37649536 221.91015625]
[453.99060059 217.66207886]
[439.60473633 213.41400146]
[425.21884155 209.16590881]
[410.83294678 204.91783142]
[396.44705200 200.66975403]
[382.06115723 196.42166138]
[367.67529297 192.17358398]
[353.27783203 195.98968506]
[342.23388672 184.66087341]
[327.84799194 180.41278076]
[313.46209717 176.16470337]
[299.07623291 171.91662598]
[284.69033813 167.66853333]
[289.33654785 181.93081665]
[281.22787476 194.55023193]
[266.32458496 196.25090027]
[255.58132935 185.78274536]
[256.89489746 170.84037781]
[269.29827881 162.40736389]
[255.32197571 156.96095276]
[241.34568787 151.51455688]
[227.36940002 146.06814575]
[213.39311218 140.62173462]
[199.41682434 135.17532349]
[185.44053650 129.72891235]
[171.20632935 124.99739075]
[156.75074768 120.99288177]
[142.29516602 116.98837280]
[127.83957672 112.98387146]
[113.38399506 108.97936249]
[108.58381653 113.43839264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 79]
[4 78]
[6 76]
[7 75]
[8 74]
[9 73]
[11 70]
[12 69]
[14 67]
[15 66]
[18 60]
[19 59]
[20 58]
[21 57]
[22 56]
[23 55]
[24 54]
[26 52]
[27 51]
[28 50]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[80 110]
[81 109]
[82 108]
[83 107]
[84 106]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[111 184]
[112 183]
[113 182]
[114 181]
[115 180]
[122 179]
[123 178]
[124 177]
[125 176]
[126 175]
[127 174]
[128 173]
[129 167]
[130 166]
[131 165]
[132 164]
[133 163]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
[143 153]
[145 152]
[146 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
