%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGGCGGACUCCGCGCCGCCGGCCUUGUAGCCAUUUUAGGAGGAAUCGCUGGUCGCCAGCGAGGGGUGCGGCUUCAAUUUCAAUAACUUUAUUGGUGGCCUGAUCUGCAGAACAGCCAUCACAUCAGUGGCCCUUGGAGGAGGGAGCGCAUCGCCCGAGGUGGUCCCCGACGAGCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[-73.97703552 394.63287354]
[-73.57325745 409.62744141]
[-84.93168640 419.42468262]
[-99.70455170 416.82418823]
[-107.03459930 403.73788452]
[-113.67369080 417.18862915]
[-120.31278229 430.63937378]
[-126.95187378 444.09011841]
[-133.59095764 457.54086304]
[-126.25191498 471.21267700]
[-128.38394165 486.58258057]
[-139.16722107 497.74053955]
[-154.45536804 500.39611816]
[-168.36978149 493.52816772]
[-175.56008911 479.77755737]
[-173.26145935 464.43170166]
[-162.35775757 453.39135742]
[-147.04170227 450.90176392]
[-140.40261841 437.45101929]
[-133.76351929 424.00027466]
[-127.12443542 410.54956055]
[-120.48534393 397.09881592]
[-114.42310333 383.37841797]
[-108.94863129 369.41308594]
[-103.47416687 355.44775391]
[-104.54112244 350.77127075]
[-102.66548157 345.37615967]
[-97.56939697 341.10635376]
[-91.62387085 327.33499146]
[-85.67833710 313.56362915]
[-79.73281097 299.79223633]
[-73.78728485 286.02087402]
[-67.84175873 272.24951172]
[-70.87287903 265.38931274]
[-82.69291687 274.62438965]
[-94.51295471 283.85946655]
[-101.10535431 297.33316040]
[-113.90789032 305.14947510]
[-128.90502930 304.85687256]
[-141.39292908 296.54705811]
[-147.45471191 282.82647705]
[-145.18911743 267.99856567]
[-135.30674744 256.71411133]
[-120.90720367 252.51251221]
[-106.50843811 256.71063232]
[-91.72177887 254.18977356]
[-76.93511963 251.66891479]
[-79.96623993 244.80871582]
[-94.15132141 239.93188477]
[-108.33640289 235.05505371]
[-122.52148438 230.17822266]
[-136.70655823 225.30139160]
[-150.89164734 220.42454529]
[-165.07672119 215.54771423]
[-182.02114868 216.11592102]
[-187.25782776 199.99098206]
[-173.21272278 190.49513245]
[-160.19989014 201.36264038]
[-146.01481628 206.23947144]
[-131.82972717 211.11630249]
[-117.64465332 215.99313354]
[-103.45957184 220.86996460]
[-89.27449036 225.74679565]
[-75.08940887 230.62362671]
[-60.37453461 227.71289062]
[-49.11444855 217.80276489]
[-37.85436249 207.89265442]
[-26.59427834 197.98252869]
[-23.64361000 191.18765259]
[-15.05782318 188.00170898]
[-3.63108039 178.28422546]
[1.05186260 164.14494324]
[16.57707214 161.09889221]
[28.00381470 151.38139343]
[39.43055725 141.66390991]
[50.85729980 131.94642639]
[62.28404236 122.22893524]
[55.21531296 109.15487671]
[52.75518036 93.85751343]
[55.58385849 77.98194885]
[63.79005051 63.37110901]
[76.81840515 51.85272980]
[93.49340057 45.01470566]
[91.96770477 30.09250069]
[90.44200897 15.17029476]
[88.91630554 0.24808833]
[87.39060974 -14.67411804]
[77.35559845 -27.64449501]
[83.82032013 -42.71564102]
[100.13442230 -44.38365173]
[109.51535034 -30.93262100]
[102.31281281 -16.19981766]
[103.83851624 -1.27761102]
[105.36421204 13.64459515]
[106.88990784 28.56680107]
[108.41561127 43.48900986]
[123.02316284 46.89773560]
[130.99594116 34.19203568]
[138.96871948 21.48633385]
[146.94149780 8.78063393]
[154.91427612 -3.92506695]
[156.83206177 -12.87983990]
[163.13185120 -16.77721786]
[171.31922913 -29.34570312]
[172.36863708 -45.13206863]
[185.79858398 -51.57302094]
[193.98596191 -64.14151001]
[194.32661438 -80.53711700]
[208.82440186 -88.20173645]
[222.56523132 -79.25067139]
[221.41372681 -62.89199829]
[206.55444336 -55.95412827]
[198.36706543 -43.38564301]
[197.90327454 -28.49825859]
[183.88772583 -21.15832329]
[175.70033264 -8.58983803]
[167.61996460 4.04770994]
[159.64718628 16.75341034]
[151.67442322 29.45911217]
[143.70164490 42.16481018]
[135.72886658 54.87051392]
[145.54301453 66.21433258]
[159.26341248 60.15209198]
[172.98381042 54.08985138]
[182.21838379 40.53792572]
[198.54960632 42.02900314]
[205.17730713 57.02918625]
[195.28349304 70.10757446]
[179.04605103 67.81024933]
[165.32565308 73.87248993]
[151.60525513 79.93473053]
[147.92361450 87.31478119]
[143.30902100 93.60099030]
[158.30416870 93.98303223]
[173.29930115 94.36507416]
[188.29443359 94.74712372]
[203.28956604 95.12916565]
[217.42950439 86.82290649]
[231.55744934 95.14957428]
[231.13977051 111.54339600]
[216.60614014 119.13982391]
[202.90751648 110.12429810]
[187.91238403 109.74225616]
[172.91725159 109.36021423]
[157.92211914 108.97816467]
[142.92698669 108.59612274]
[142.54779053 110.31039429]
[142.10017395 112.00807953]
[155.60681152 118.53272247]
[169.11343384 125.05736542]
[186.00567627 126.50263977]
[189.29312134 143.13481140]
[174.22099304 150.89802551]
[162.58879089 138.56399536]
[149.08216858 132.03935242]
[135.57553101 125.51470947]
[117.09337616 140.30429077]
[93.61397552 143.31094360]
[72.00152588 133.65568542]
[60.57478714 143.37316895]
[49.14804459 153.09065247]
[37.72130203 162.80813599]
[26.29455757 172.52563477]
[20.79429817 187.35997009]
[6.08640671 189.71096802]
[-5.34033585 199.42845154]
[-16.68415833 209.24261475]
[-27.94424248 219.15274048]
[-39.20432663 229.06285095]
[-50.46441269 238.97297668]
[-46.96423721 243.91419983]
[-44.72531891 250.04710388]
[-44.11418533 257.02664185]
[-45.39878464 264.40249634]
[-48.71981430 271.64773560]
[-54.07038498 278.19503784]
[-60.01591110 291.96640015]
[-65.96144104 305.73776245]
[-71.90696716 319.50915527]
[-77.85249329 333.28051758]
[-83.79801941 347.05187988]
[-89.50884247 360.92224121]
[-94.98331451 374.88754272]
[-100.45778656 388.85287476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[23 184]
[24 183]
[25 182]
[28 181]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[54 58]
[65 170]
[66 169]
[67 168]
[68 167]
[70 166]
[71 165]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[97 121]
[98 120]
[99 119]
[100 118]
[101 117]
[103 116]
[104 115]
[106 113]
[107 112]
[122 131]
[123 130]
[124 129]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
