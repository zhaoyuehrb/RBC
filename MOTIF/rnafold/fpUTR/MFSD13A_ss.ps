%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGCCGUGGGAUUAGGCUUCGCCGGCUACGAUUGCGGCCCCCAUCUUCUGACUUUUCCUCGUGUGACCCAUCUUUUCAAAUUCCCUUACCUGAGGAAGGAGCCCGAUUACAAGGAUAUUUACCUGCUCCUACCCUGAUCUAGGGACGAGGAUGGGAAGACCGCCUGUGGCCAUGAGCCCUCCCCGGUGCUCCUGGGGCUAAGGCUGGGGCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[258.31588745 752.87719727]
[260.50030518 746.64837646]
[258.57778931 731.77209473]
[256.65530396 716.89575195]
[254.73281860 702.01947021]
[252.81031799 687.14318848]
[250.88783264 672.26690674]
[241.58312988 660.63629150]
[247.48789978 645.95825195]
[245.56541443 631.08197021]
[243.64291382 616.20568848]
[230.53601074 610.27337646]
[221.08595276 599.97045898]
[216.57705688 587.16717529]
[217.43466187 574.02746582]
[223.20387268 562.64459229]
[232.67265320 554.70770264]
[227.83415222 540.50946045]
[222.99566650 526.31127930]
[218.15718079 512.11309814]
[213.31867981 497.91485596]
[202.23983765 495.22259521]
[193.74639893 487.43817139]
[190.02432251 476.40832520]
[192.10685730 464.83343506]
[199.59094238 455.60650635]
[195.15986633 441.27590942]
[190.72879028 426.94534302]
[186.29771423 412.61474609]
[181.86663818 398.28417969]
[177.43556213 383.95358276]
[173.00450134 369.62298584]
[163.58190918 365.69085693]
[157.75370789 357.04162598]
[157.64215088 346.39309692]
[163.52519226 337.25439453]
[159.50514221 322.80310059]
[155.48510742 308.35183716]
[151.46505737 293.90057373]
[135.00979614 285.86843872]
[129.56430054 268.05145264]
[139.03694153 251.63868713]
[134.60588074 237.30810547]
[130.17480469 222.97752380]
[125.74372864 208.64694214]
[121.31265259 194.31636047]
[116.88157654 179.98577881]
[112.45050812 165.65519714]
[108.01943207 151.32461548]
[103.58835602 136.99403381]
[92.55866241 137.08221436]
[81.79830933 133.89758301]
[72.27305603 127.60983276]
[64.87103271 118.67177582]
[60.32033920 107.78800201]
[59.11857605 95.85983276]
[61.48080826 83.91080475]
[67.31143951 72.99885559]
[55.43290710 63.83913803]
[43.55437469 54.67941666]
[31.67584038 45.51969910]
[19.79730797 36.35998154]
[7.91877365 27.20026398]
[-7.73437977 24.90040398]
[-13.08836937 11.00133610]
[-24.96690369 1.84161794]
[-36.84543610 -7.31810045]
[-48.72396851 -16.47781754]
[-61.06358719 -7.74711323]
[-75.42893219 -3.04303694]
[-90.54264069 -2.78387308]
[-105.06082153 -6.99266672]
[-117.69252014 -15.29517365]
[-127.31452942 -26.95314217]
[-133.07128906 -40.92995453]
[-134.45088196 -55.98279572]
[-131.33065796 -70.77318573]
[-123.98806000 -83.98596954]
[-113.07598114 -94.44627380]
[-99.56472015 -101.22397614]
[-84.65569305 -103.71640778]
[-69.67459106 -101.70195007]
[-55.95352936 -95.35971832]
[-44.71257782 -85.25365448]
[-36.95126724 -72.28240204]
[-33.35973740 -57.59933853]
[-34.25733566 -42.51008224]
[-39.56425095 -28.35635185]
[-27.68571854 -19.19663429]
[-15.80718422 -10.03691578]
[-3.92865086 -0.87719756]
[10.87487030 0.76749855]
[17.07849121 15.32172966]
[28.95702553 24.48144913]
[40.83555984 33.64116669]
[52.71409225 42.80088425]
[64.59262848 51.96060181]
[76.47116089 61.12031937]
[90.40990448 55.57854080]
[92.75642395 40.76321793]
[95.10294342 25.94789314]
[97.44945526 11.13256741]
[99.79597473 -3.68275785]
[102.14249420 -18.49808311]
[103.42611694 -33.44305801]
[103.64031219 -48.44152832]
[91.13801575 -57.63241196]
[86.45780182 -72.42684174]
[91.39929962 -87.13606262]
[104.06240845 -96.10408020]
[119.57790375 -95.88249969]
[131.97975159 -86.55653381]
[136.49920654 -71.71220398]
[131.39843750 -57.05745316]
[118.63877869 -48.22733688]
[118.42459106 -33.22886658]
[127.39342499 -45.25217438]
[141.13458252 -51.26719666]
[156.05249023 -49.70001221]
[168.24365234 -40.96070099]
[174.51808167 -27.33602905]
[173.23396301 -12.39109421]
[164.72731018 -0.03646063]
[151.22402954 6.49510145]
[136.25744629 5.49451256]
[123.74377441 -2.77640891]
[116.95781708 -16.15156555]
[114.61129761 -1.33624089]
[112.26478577 13.47908401]
[109.91826630 28.29440880]
[107.57174683 43.10973358]
[105.22523499 57.92506027]
[115.07292938 63.18306732]
[122.60016632 70.49292755]
[133.93640137 60.67001343]
[145.27264404 50.84710312]
[156.60890198 41.02419281]
[167.94514465 31.20128059]
[175.95603943 16.25933456]
[192.53169250 19.82083130]
[193.69798279 36.73461533]
[177.76805115 42.53752518]
[166.43180847 52.36043549]
[155.09556580 62.18334579]
[143.75932312 72.00625610]
[132.42308044 81.82917023]
[137.16326904 100.57116699]
[131.84934998 119.15864563]
[117.91894531 132.56295776]
[122.35001373 146.89353943]
[126.78108978 161.22412109]
[131.21215820 175.55470276]
[135.64323425 189.88528442]
[140.07431030 204.21586609]
[144.50538635 218.54644775]
[148.93646240 232.87704468]
[153.36752319 247.20762634]
[164.75350952 250.59986877]
[173.00596619 258.97915649]
[176.15921021 270.18487549]
[173.54197693 281.40475464]
[165.91633606 289.88052368]
[169.93637085 304.33178711]
[173.95642090 318.78308105]
[177.97645569 333.23434448]
[192.98696899 346.69622803]
[187.33508301 365.19192505]
[191.76614380 379.52252197]
[196.19721985 393.85308838]
[200.62829590 408.18368530]
[205.05937195 422.51425171]
[209.49044800 436.84484863]
[213.92152405 451.17541504]
[231.00500488 459.37692261]
[236.56657410 477.15802002]
[227.51689148 493.07638550]
[232.35537720 507.27459717]
[237.19386292 521.47277832]
[242.03236389 535.67102051]
[246.87084961 549.86920166]
[268.20535278 553.84197998]
[282.70150757 571.83160400]
[281.97796631 596.32696533]
[293.02908325 606.46954346]
[304.08020020 616.61218262]
[315.13131714 626.75482178]
[326.18243408 636.89746094]
[337.23355103 647.04003906]
[353.25897217 647.79229736]
[362.54537964 660.87445068]
[357.96908569 676.25091553]
[343.04058838 682.12628174]
[329.21179199 673.99340820]
[327.09094238 658.09118652]
[316.03982544 647.94854736]
[304.98870850 637.80590820]
[293.93759155 627.66333008]
[282.88647461 617.52069092]
[271.83535767 607.37805176]
[258.51919556 614.28314209]
[260.44171143 629.15948486]
[262.36419678 644.03576660]
[271.80639648 656.73046875]
[265.76412964 670.34442139]
[267.68661499 685.22070312]
[269.60910034 700.09698486]
[271.53158569 714.97326660]
[273.45410156 729.84954834]
[275.37658691 744.72589111]
[277.51129150 759.57318115]
[279.85781860 774.38848877]
[282.20434570 789.20385742]
[292.93954468 801.60089111]
[287.31600952 817.00573730]
[271.11877441 819.57110596]
[261.01013184 806.65802002]
[267.38900757 791.55035400]
[265.04251099 776.73504639]
[262.69598389 761.91967773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[9 202]
[10 201]
[11 200]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[26 173]
[27 172]
[28 171]
[29 170]
[30 169]
[31 168]
[32 167]
[36 165]
[37 164]
[38 163]
[39 162]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[58 98]
[59 97]
[60 96]
[61 95]
[62 94]
[63 93]
[65 91]
[66 90]
[67 89]
[68 88]
[99 132]
[100 131]
[101 130]
[102 129]
[103 128]
[104 127]
[105 116]
[106 115]
[134 146]
[135 145]
[136 144]
[137 143]
[138 142]
[183 199]
[184 198]
[185 197]
[186 196]
[187 195]
[188 194]
[210 219]
[211 218]
[212 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
