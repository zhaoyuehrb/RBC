%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:58:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PGAM2)
} def

/sequence { (\
GGGAGUGUUGGGAAGCAGCCGUCCCCGUCCAGAGUCCUCUGUGGUCCCUGCUGCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.004323323 ubox
1 24 0.005219228 ubox
1 25 0.798279478 ubox
1 26 0.136784470 ubox
1 30 0.011666394 ubox
1 37 0.012482847 ubox
1 38 0.026978513 ubox
1 39 0.012576777 ubox
1 48 0.068286281 ubox
1 49 0.004083993 ubox
1 52 0.003177034 ubox
1 55 0.558783359 ubox
1 58 0.067303241 ubox
2 8 0.005045626 ubox
2 9 0.003443442 ubox
2 23 0.004536422 ubox
2 24 0.804672019 ubox
2 25 0.114008979 ubox
2 29 0.011075841 ubox
2 30 0.035785665 ubox
2 36 0.012443809 ubox
2 37 0.033250395 ubox
2 38 0.003746083 ubox
2 40 0.009817472 ubox
2 47 0.068385868 ubox
2 48 0.004280566 ubox
2 51 0.003345935 ubox
2 54 0.559109137 ubox
2 55 0.048363595 ubox
2 57 0.068040749 ubox
2 58 0.014009615 ubox
3 9 0.003529621 ubox
3 22 0.003466902 ubox
3 23 0.808258909 ubox
3 24 0.085164670 ubox
3 28 0.009928465 ubox
3 29 0.035925430 ubox
3 35 0.011108311 ubox
3 36 0.033293996 ubox
3 37 0.003601252 ubox
3 39 0.010320858 ubox
3 46 0.068350703 ubox
3 47 0.004228035 ubox
3 54 0.048460410 ubox
3 57 0.014112802 ubox
4 8 0.003217556 ubox
4 22 0.811249798 ubox
4 28 0.035825248 ubox
4 35 0.032571033 ubox
4 38 0.010329659 ubox
4 45 0.064129752 ubox
4 49 0.003369923 ubox
4 52 0.558126748 ubox
5 19 0.016872523 ubox
5 22 0.013533975 ubox
5 28 0.004449220 ubox
5 37 0.010308136 ubox
5 48 0.003348102 ubox
5 51 0.559222901 ubox
5 54 0.066996545 ubox
5 57 0.023392240 ubox
6 17 0.019631642 ubox
6 18 0.010169082 ubox
6 21 0.033189552 ubox
6 27 0.024765011 ubox
6 31 0.027614201 ubox
6 34 0.005297830 ubox
6 43 0.018659659 ubox
6 50 0.551607230 ubox
6 53 0.064779693 ubox
6 56 0.023298819 ubox
7 16 0.023627075 ubox
7 19 0.812038584 ubox
7 20 0.026026881 ubox
7 26 0.032581206 ubox
7 28 0.010835953 ubox
7 30 0.028976755 ubox
7 42 0.010744762 ubox
7 49 0.293861111 ubox
7 51 0.080406319 ubox
7 52 0.010402649 ubox
7 55 0.022377127 ubox
7 57 0.024066821 ubox
8 15 0.023611599 ubox
8 18 0.812295154 ubox
8 27 0.029278470 ubox
8 32 0.009941138 ubox
8 33 0.003437765 ubox
8 50 0.080387802 ubox
8 56 0.017954912 ubox
9 14 0.023071733 ubox
9 17 0.811954609 ubox
9 21 0.016695235 ubox
9 27 0.070872563 ubox
9 31 0.011744879 ubox
9 32 0.003272449 ubox
9 50 0.006823415 ubox
9 56 0.041504814 ubox
10 16 0.812312802 ubox
10 20 0.018778152 ubox
10 24 0.003386963 ubox
10 25 0.139994453 ubox
10 26 0.095127232 ubox
10 30 0.011539454 ubox
10 46 0.005654800 ubox
10 47 0.037650342 ubox
10 48 0.542832611 ubox
10 49 0.014327903 ubox
10 55 0.048163277 ubox
10 58 0.057526958 ubox
11 19 0.018774512 ubox
11 20 0.007940849 ubox
11 23 0.003351979 ubox
11 24 0.141486384 ubox
11 25 0.093914439 ubox
11 26 0.011882999 ubox
11 29 0.011304318 ubox
11 30 0.003206772 ubox
11 37 0.003530054 ubox
11 46 0.037586226 ubox
11 47 0.543591451 ubox
11 48 0.014444499 ubox
11 54 0.047620305 ubox
11 55 0.035035265 ubox
11 57 0.058094741 ubox
11 58 0.062009800 ubox
12 19 0.008089122 ubox
12 23 0.142354849 ubox
12 24 0.092497254 ubox
12 25 0.012129498 ubox
12 28 0.010063903 ubox
12 29 0.003300877 ubox
12 36 0.003535051 ubox
12 45 0.036246912 ubox
12 46 0.543537665 ubox
12 47 0.014075573 ubox
12 54 0.035231738 ubox
12 57 0.062744694 ubox
13 22 0.138942093 ubox
13 28 0.003309471 ubox
13 35 0.003489948 ubox
13 45 0.527492417 ubox
14 40 0.010526168 ubox
14 52 0.056736879 ubox
15 22 0.149734614 ubox
15 28 0.052166261 ubox
15 39 0.010599176 ubox
15 42 0.396049788 ubox
15 45 0.009776838 ubox
15 51 0.059650890 ubox
15 54 0.092384250 ubox
16 21 0.155968412 ubox
16 27 0.054036588 ubox
16 41 0.397133432 ubox
16 43 0.052248522 ubox
16 44 0.012383458 ubox
16 50 0.059656612 ubox
16 53 0.092674368 ubox
17 38 0.019470900 ubox
17 40 0.396460020 ubox
17 42 0.050391219 ubox
17 49 0.059609502 ubox
17 52 0.092655790 ubox
18 28 0.067000285 ubox
18 35 0.014835351 ubox
18 37 0.025784307 ubox
18 39 0.394025119 ubox
18 42 0.010217227 ubox
18 45 0.066976713 ubox
18 48 0.058783173 ubox
18 51 0.092676313 ubox
19 27 0.065412750 ubox
19 34 0.027827597 ubox
19 41 0.009627618 ubox
19 44 0.091734520 ubox
19 50 0.092116191 ubox
20 27 0.147526720 ubox
20 43 0.091686202 ubox
20 50 0.008849680 ubox
21 26 0.148275400 ubox
21 28 0.005888865 ubox
21 35 0.049054202 ubox
21 42 0.088526113 ubox
21 45 0.016366469 ubox
21 49 0.011356468 ubox
22 27 0.005190277 ubox
22 33 0.369115677 ubox
22 34 0.012476809 ubox
22 41 0.004591192 ubox
23 32 0.370705150 ubox
23 44 0.031843311 ubox
24 43 0.031597255 ubox
24 44 0.036629816 ubox
25 43 0.035506266 ubox
25 44 0.190100390 ubox
26 41 0.012082859 ubox
26 43 0.192135347 ubox
26 50 0.041308331 ubox
26 53 0.039656159 ubox
27 35 0.004271194 ubox
27 40 0.011476707 ubox
27 42 0.156654906 ubox
27 45 0.092688507 ubox
27 49 0.032570690 ubox
27 51 0.138498352 ubox
27 52 0.028698096 ubox
27 54 0.110389682 ubox
27 57 0.078883067 ubox
28 34 0.005633251 ubox
28 41 0.009213659 ubox
28 44 0.091114307 ubox
28 50 0.136957417 ubox
28 53 0.108403103 ubox
28 56 0.076759899 ubox
29 43 0.116601680 ubox
29 44 0.549511006 ubox
30 41 0.438061286 ubox
30 43 0.553024378 ubox
30 50 0.137652641 ubox
30 53 0.110773129 ubox
31 38 0.104353162 ubox
31 40 0.549808157 ubox
31 42 0.552228150 ubox
31 49 0.138914661 ubox
31 52 0.111753392 ubox
32 37 0.109244520 ubox
32 39 0.560106590 ubox
32 46 0.011524555 ubox
32 48 0.138610390 ubox
32 51 0.111625321 ubox
33 38 0.524046927 ubox
33 40 0.570544757 ubox
33 45 0.011215946 ubox
33 49 0.104997496 ubox
33 52 0.013616301 ubox
34 39 0.571454459 ubox
34 45 0.013836251 ubox
34 48 0.105070860 ubox
34 51 0.013918973 ubox
34 57 0.006031278 ubox
35 44 0.005604940 ubox
35 50 0.013872740 ubox
35 56 0.005753205 ubox
36 43 0.005946630 ubox
36 44 0.179658058 ubox
37 43 0.179721788 ubox
37 44 0.008665433 ubox
38 43 0.007799590 ubox
38 44 0.004680735 ubox
39 43 0.005034533 ubox
40 56 0.009383074 ubox
41 51 0.012038261 ubox
41 54 0.055554933 ubox
41 55 0.008262063 ubox
41 57 0.550674103 ubox
42 50 0.012560112 ubox
42 53 0.060890094 ubox
42 56 0.629793666 ubox
43 49 0.013868366 ubox
43 52 0.070694679 ubox
43 55 0.653533855 ubox
43 58 0.030618978 ubox
44 48 0.014066723 ubox
44 51 0.073651565 ubox
44 54 0.653549223 ubox
44 57 0.031608004 ubox
45 50 0.069302971 ubox
45 53 0.636604392 ubox
45 56 0.030037090 ubox
49 56 0.051200070 ubox
50 55 0.057222321 ubox
1 25 0.9500000 lbox
2 24 0.9500000 lbox
3 23 0.9500000 lbox
4 22 0.9500000 lbox
7 19 0.9500000 lbox
8 18 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
showpage
end
%%EOF
