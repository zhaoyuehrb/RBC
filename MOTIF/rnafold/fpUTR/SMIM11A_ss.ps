%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCACUGCGCCUGAGCACGUAGCGGUGCAUUUCGGGACCUGUAGUUUUCCCCGGCAGGACGGUAGAAGUCGUGGUUUGUGCGCGGCCAGGCGCUGGAGCCUCCGCUGCCGGGAGCAAUCAGACCUUCCAGCUGCCUCUCAUGUACUUGUCUGUUGGGGGCUUGUGUUGAUCAGGAGUGAAUUCACAGUCUACC\
) } def
/len { sequence length } bind def

/coor [
[-12.20989132 322.28091431]
[-28.12837791 320.95065308]
[-35.48913956 334.02044678]
[-42.74492264 347.14880371]
[-49.89525986 360.33486938]
[-49.67200851 376.15451050]
[-62.54060745 383.65438843]
[-69.69094086 396.84048462]
[-76.84127808 410.02655029]
[-83.99161530 423.21264648]
[-91.14195251 436.39871216]
[-84.33293915 450.34207153]
[-87.05316925 465.61883545]
[-98.25666809 476.35482788]
[-113.63545990 478.42178345]
[-127.27608490 471.02496338]
[-133.93344116 457.00857544]
[-131.04765320 441.76220703]
[-119.72834015 431.14840698]
[-104.32803345 429.24838257]
[-97.17769623 416.06228638]
[-90.02735901 402.87622070]
[-82.87702179 389.69015503]
[-75.72668457 376.50405884]
[-76.46137238 361.62759399]
[-63.08134079 353.18453979]
[-55.93100357 339.99844360]
[-55.50562286 332.61065674]
[-48.55892181 326.65966797]
[-41.19815826 313.58990479]
[-49.68847656 302.60980225]
[-53.36193848 289.18005371]
[-51.63159180 275.32122803]
[-44.72611618 263.13159180]
[-33.66021347 254.46929932]
[-20.08563042 250.66934204]
[-6.04465532 252.33770752]
[1.52464294 239.38757324]
[9.09394073 226.43745422]
[16.66323853 213.48733521]
[17.32519150 206.11695862]
[24.45906258 200.39169312]
[32.23495102 187.56454468]
[40.01083755 174.73741150]
[47.68367767 161.84835815]
[55.25297546 148.89823914]
[62.82227707 135.94812012]
[70.39157104 122.99799347]
[77.96086884 110.04786682]
[82.85309601 91.52458954]
[96.87038422 86.32061768]
[100.44216156 71.75207520]
[104.01393127 57.18353271]
[107.58570862 42.61499023]
[111.15748596 28.04644775]
[114.72926331 13.47790623]
[118.30103302 -1.09063613]
[121.87281036 -15.65917873]
[125.44458771 -30.22772026]
[124.44854736 -39.32050323]
[129.19212341 -45.00021362]
[132.99693298 -59.50963593]
[136.80175781 -74.01905823]
[140.49017334 -88.55850983]
[144.06195068 -103.12705231]
[147.63372803 -117.69559479]
[133.70460510 -129.05073547]
[126.52513885 -145.43067932]
[127.60427856 -163.19541931]
[136.62528992 -178.43647766]
[128.04353333 -190.73905945]
[119.46178436 -203.04164124]
[110.88003540 -215.34422302]
[102.29828644 -227.64680481]
[93.71652985 -239.94938660]
[78.12586212 -241.15972900]
[66.99695587 -252.14524841]
[65.58455658 -267.71890259]
[74.55554199 -280.52731323]
[89.67409515 -284.52273560]
[103.80169678 -277.81863403]
[110.26772308 -263.58050537]
[106.01911926 -248.53114319]
[114.60086823 -236.22856140]
[123.18261719 -223.92597961]
[131.76437378 -211.62339783]
[140.34611511 -199.32080078]
[148.92787170 -187.01821899]
[162.07237244 -190.07232666]
[175.44940186 -188.29450989]
[182.81016541 -201.36428833]
[190.17092896 -214.43406677]
[197.53169250 -227.50386047]
[204.78747559 -240.63220215]
[211.93782043 -253.81828308]
[219.08815002 -267.00436401]
[226.23849487 -280.19042969]
[233.38882446 -293.37652588]
[240.53916931 -306.56259155]
[246.61091614 -320.27877808]
[251.56509399 -334.43704224]
[248.81990051 -350.01824951]
[260.32656860 -359.47586060]
[265.28076172 -373.63409424]
[270.23492432 -387.79235840]
[275.18911743 -401.95059204]
[271.61032104 -417.95449829]
[283.86224365 -428.85507202]
[299.34112549 -423.43878174]
[302.12362671 -407.27743530]
[289.34738159 -396.99642944]
[284.39318848 -382.83816528]
[279.43899536 -368.67990112]
[274.48480225 -354.52166748]
[277.58438110 -339.95312500]
[265.72335815 -329.48284912]
[260.76916504 -315.32461548]
[273.19137573 -323.73223877]
[288.14520264 -324.90844727]
[301.72915649 -318.54632568]
[310.39913940 -306.30578613]
[311.89321899 -291.38040161]
[305.82153320 -277.66418457]
[293.76818848 -268.73571777]
[278.87792969 -266.92446899]
[265.03567505 -272.70300293]
[255.85281372 -284.56365967]
[253.72525024 -299.41226196]
[246.57490540 -286.22619629]
[239.42457581 -273.04010010]
[232.27423096 -259.85403442]
[225.12390137 -246.66795349]
[217.97355652 -233.48187256]
[217.54817200 -226.09407043]
[210.60147095 -220.14309692]
[203.24070740 -207.07330322]
[195.87994385 -194.00352478]
[188.51918030 -180.93374634]
[196.93470764 -170.70820618]
[201.30659485 -158.16809082]
[201.07101440 -144.85270691]
[196.23135376 -132.40589905]
[187.36100769 -122.37317657]
[175.53552246 -116.00982666]
[162.20227051 -114.12381744]
[158.63049316 -99.55527496]
[155.05871582 -84.98673248]
[156.52119446 -77.73265076]
[151.31118774 -70.21424103]
[147.50636292 -55.70481873]
[143.70153809 -41.19539642]
[140.01312256 -26.65594482]
[136.44134521 -12.08740330]
[132.86958313 2.48113894]
[129.29780579 17.04968071]
[125.72602844 31.61822319]
[122.15425110 46.18676376]
[118.58247375 60.75530624]
[115.01070404 75.32385254]
[111.43892670 89.89239502]
[115.82194519 104.23774719]
[126.92611694 114.32225800]
[138.03028870 124.40676880]
[149.13446045 134.49128723]
[164.55221558 138.04139709]
[168.77214050 152.32571411]
[179.87631226 162.41021729]
[195.90544128 163.07838440]
[205.26037598 176.11161804]
[200.76478577 191.51191711]
[185.86732483 197.46549988]
[171.99604797 189.40530396]
[169.79179382 173.51438904]
[158.68762207 163.42988586]
[144.06411743 160.60107422]
[139.04994202 145.59545898]
[127.94577026 135.51094055]
[116.84160614 125.42642975]
[105.73743439 115.34191132]
[90.91099548 117.61716461]
[83.34169769 130.56729126]
[75.77239990 143.51741028]
[68.20310211 156.46754456]
[60.63380432 169.41766357]
[59.00152206 178.41801453]
[52.83798218 182.51330566]
[45.06209183 195.34043884]
[37.28620529 208.16758728]
[29.61336327 221.05662537]
[22.04406548 234.00675964]
[14.47476768 246.95687866]
[6.90546942 259.90701294]
[16.10525513 273.31994629]
[18.52906799 289.34429932]
[13.74218655 304.76696777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[4 27]
[5 26]
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[37 192]
[38 191]
[39 190]
[40 189]
[42 188]
[43 187]
[44 186]
[45 184]
[46 183]
[47 182]
[48 181]
[49 180]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[61 151]
[62 150]
[63 149]
[64 147]
[65 146]
[66 145]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[75 83]
[90 138]
[91 137]
[92 136]
[93 135]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
[100 117]
[101 116]
[103 114]
[104 113]
[105 112]
[106 111]
[161 179]
[162 178]
[163 177]
[164 176]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
