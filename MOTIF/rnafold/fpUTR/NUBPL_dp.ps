%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NUBPL)
} def

/sequence { (\
ACUCCGCGCCACCCGCGACAGUUUCCCAGCAGGGCUCACAGCAGCGUUCCGCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.109869791 ubox
1 47 0.003521732 ubox
1 54 0.026966661 ubox
2 21 0.126281392 ubox
2 34 0.007738593 ubox
2 41 0.013189973 ubox
2 44 0.004864418 ubox
2 46 0.003999586 ubox
2 53 0.028981856 ubox
3 18 0.037358700 ubox
3 20 0.122203327 ubox
3 33 0.007695352 ubox
3 34 0.004707816 ubox
3 40 0.012495551 ubox
3 43 0.004997848 ubox
4 17 0.028939702 ubox
4 32 0.007817259 ubox
4 33 0.010454993 ubox
5 17 0.263506407 ubox
5 32 0.010436544 ubox
5 46 0.030550251 ubox
5 51 0.004120799 ubox
5 53 0.581879026 ubox
6 16 0.268301911 ubox
6 30 0.010513579 ubox
6 35 0.004837950 ubox
6 42 0.040399606 ubox
6 45 0.031282177 ubox
6 47 0.021295672 ubox
6 50 0.003672891 ubox
6 52 0.595189057 ubox
6 54 0.720657843 ubox
7 15 0.268304105 ubox
7 17 0.043565839 ubox
7 29 0.010517879 ubox
7 34 0.004654309 ubox
7 41 0.040418584 ubox
7 44 0.031254556 ubox
7 46 0.022423612 ubox
7 51 0.595198621 ubox
7 53 0.751578379 ubox
8 14 0.262367228 ubox
8 16 0.045130450 ubox
8 30 0.005982085 ubox
8 35 0.018715551 ubox
8 42 0.030843398 ubox
8 45 0.022740398 ubox
8 47 0.005517443 ubox
8 50 0.591143988 ubox
8 52 0.752747114 ubox
9 15 0.045095350 ubox
9 29 0.005985163 ubox
9 33 0.004394748 ubox
9 34 0.018605389 ubox
9 41 0.030905657 ubox
9 44 0.022751976 ubox
9 46 0.008759827 ubox
9 51 0.751673342 ubox
10 32 0.004396649 ubox
10 33 0.016990749 ubox
11 22 0.003806018 ubox
11 47 0.256634681 ubox
11 54 0.003873285 ubox
12 21 0.004040246 ubox
12 33 0.055983734 ubox
12 34 0.059756231 ubox
12 46 0.218468229 ubox
12 53 0.004036205 ubox
13 32 0.056704296 ubox
13 33 0.072646170 ubox
14 32 0.072717911 ubox
14 46 0.923202238 ubox
14 51 0.004472114 ubox
14 53 0.024366468 ubox
15 22 0.021316592 ubox
15 30 0.093463350 ubox
15 35 0.005167793 ubox
15 42 0.131587664 ubox
15 45 0.946517932 ubox
15 47 0.034281270 ubox
15 50 0.006240723 ubox
15 52 0.024950965 ubox
16 21 0.022132791 ubox
16 29 0.093656071 ubox
16 34 0.005085796 ubox
16 41 0.131791029 ubox
16 44 0.946398907 ubox
16 46 0.034984440 ubox
16 51 0.024948882 ubox
17 23 0.005660861 ubox
17 24 0.008771496 ubox
17 25 0.029512773 ubox
17 37 0.015013773 ubox
17 45 0.034894098 ubox
17 48 0.008152801 ubox
17 49 0.008455655 ubox
17 50 0.023343126 ubox
17 55 0.020724461 ubox
18 22 0.005412056 ubox
18 23 0.008716338 ubox
18 24 0.028282062 ubox
18 36 0.013541723 ubox
18 47 0.015041211 ubox
18 48 0.010055458 ubox
18 54 0.028093534 ubox
19 46 0.016081671 ubox
19 53 0.028823276 ubox
20 36 0.112228729 ubox
21 30 0.028206557 ubox
21 35 0.116816270 ubox
21 39 0.763507054 ubox
21 42 0.083403639 ubox
21 45 0.020166139 ubox
21 52 0.011627310 ubox
22 29 0.027877271 ubox
22 33 0.003375905 ubox
22 34 0.057246718 ubox
22 38 0.739212982 ubox
22 41 0.083348598 ubox
22 44 0.019989737 ubox
22 51 0.011392316 ubox
23 28 0.022029166 ubox
23 32 0.004524953 ubox
23 33 0.031936808 ubox
23 34 0.013309500 ubox
23 40 0.075220593 ubox
23 41 0.010631496 ubox
23 43 0.017436957 ubox
24 31 0.004577411 ubox
24 32 0.027408089 ubox
24 33 0.016812764 ubox
24 34 0.087744297 ubox
24 40 0.013487418 ubox
24 43 0.003470824 ubox
25 32 0.019662844 ubox
25 33 0.108278595 ubox
25 34 0.972569535 ubox
26 32 0.107984297 ubox
26 33 0.978542792 ubox
26 34 0.090403415 ubox
27 32 0.977204531 ubox
27 33 0.090519412 ubox
28 36 0.036838980 ubox
28 48 0.008926864 ubox
29 35 0.038391116 ubox
29 42 0.011774740 ubox
29 45 0.016871091 ubox
29 47 0.010616581 ubox
29 52 0.083856063 ubox
29 54 0.013222434 ubox
30 34 0.038117703 ubox
30 41 0.011779739 ubox
30 44 0.016871123 ubox
30 46 0.010714044 ubox
30 51 0.083780585 ubox
30 53 0.013690127 ubox
31 48 0.044514080 ubox
32 47 0.055323967 ubox
32 48 0.004709330 ubox
32 49 0.044512045 ubox
32 50 0.048861819 ubox
33 47 0.005617305 ubox
33 48 0.042748615 ubox
33 49 0.048835580 ubox
33 50 0.007292255 ubox
34 42 0.104735226 ubox
34 45 0.099739317 ubox
34 47 0.039553461 ubox
34 48 0.018460011 ubox
34 49 0.007195026 ubox
34 52 0.006078128 ubox
35 41 0.107660125 ubox
35 44 0.100775642 ubox
35 46 0.040509812 ubox
35 51 0.006197772 ubox
35 53 0.003946869 ubox
36 40 0.097037352 ubox
36 43 0.095285448 ubox
38 47 0.021997418 ubox
38 54 0.032462635 ubox
39 46 0.022877224 ubox
39 53 0.034508257 ubox
40 48 0.010657455 ubox
41 47 0.012809573 ubox
41 52 0.064868495 ubox
41 54 0.123081342 ubox
42 46 0.012878734 ubox
42 51 0.064920146 ubox
42 53 0.127166547 ubox
44 52 0.202574874 ubox
44 54 0.141268318 ubox
45 51 0.202750797 ubox
45 53 0.146572023 ubox
46 50 0.189726760 ubox
46 52 0.146696560 ubox
47 51 0.137236141 ubox
6 54 0.9500000 lbox
7 53 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
21 39 0.9500000 lbox
22 38 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
27 32 0.9500000 lbox
showpage
end
%%EOF
