%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGAUGAAGAACCCUCCUUUGAGAAGCUGCCUUUGUGUCCUACAGACAGGCUGGGGCCAAAGCCAUUCAACCAAUCCCCAGAUAAUCCAGAGCUCUUGGGAGCAGAACCUUAAAGAGAGAUCGUGGAGAGAGCCAGGGCCCAGAAGAACUCUCUCAAAGAGAAGAGGGCAGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[124.47248840 252.28591919]
[132.37724304 265.03405762]
[136.46298218 279.46688843]
[136.41331482 294.46679688]
[132.23208618 308.87225342]
[124.24307251 321.56774902]
[113.06491089 331.57019043]
[99.56320953 338.10504150]
[84.78347778 340.66622925]
[69.87021637 339.05541992]
[55.97825241 333.39739990]
[44.18332291 324.13027954]
[35.39878845 311.97164917]
[30.30489159 297.86306763]
[29.29608345 282.89703369]
[32.44880676 268.23703003]
[22.56274223 279.51824951]
[12.67667961 290.79946899]
[10.01571083 306.98129272]
[-5.42202520 312.51376343]
[-17.75551033 301.70556641]
[-14.29711151 285.67523193]
[1.39546657 280.91339111]
[11.28152943 269.63220215]
[21.16759300 258.35098267]
[21.28750038 252.56120300]
[24.53429413 246.98019409]
[30.63707161 243.30133057]
[36.52898788 229.50694275]
[42.42090607 215.71253967]
[48.31282425 201.91815186]
[54.20473862 188.12376404]
[60.09665680 174.32936096]
[65.98857117 160.53497314]
[71.88049316 146.74057007]
[77.77240753 132.94618225]
[67.12530518 122.33318329]
[61.18190002 108.52476501]
[46.18709564 108.91961670]
[31.19229507 109.31446075]
[16.19749260 109.70931244]
[4.15718269 120.31169128]
[-11.61329174 117.36692047]
[-19.01617241 103.13396454]
[-12.37260342 88.53114319]
[3.22103810 84.76047516]
[15.80264473 94.71450806]
[30.79744720 94.31966400]
[45.79224777 93.92481232]
[60.78705215 93.52996826]
[69.10898590 74.99476624]
[85.50431061 62.99470520]
[105.68810272 60.66601944]
[110.59789276 46.49230957]
[115.50768280 32.31860352]
[120.41747284 18.14489746]
[125.32726288 3.97118974]
[122.53324127 -11.60135078]
[134.01020813 -21.09495926]
[138.91999817 -35.26866531]
[131.67576599 -46.64429855]
[132.30618286 -59.92099762]
[140.35632324 -70.25170898]
[152.70364380 -73.99446869]
[157.86143494 -88.07982635]
[153.14782715 -100.10627747]
[157.75537109 -111.74328613]
[168.69976807 -116.93825531]
[174.10395813 -130.93092346]
[179.50813293 -144.92359924]
[166.19789124 -138.00714111]
[152.11407471 -143.16914368]
[146.42602539 -157.04884338]
[152.83697510 -170.60980225]
[167.17303467 -175.02310181]
[180.10040283 -167.41580200]
[175.44012451 -181.67349243]
[170.77983093 -195.93118286]
[158.21894836 -206.47424316]
[161.33514404 -222.57460022]
[176.92272949 -227.66957092]
[188.94654846 -216.51789856]
[185.03752136 -200.59146118]
[189.69781494 -186.33377075]
[194.35809326 -172.07608032]
[201.74287415 -170.76652527]
[216.51245117 -168.14739990]
[223.89723206 -166.83782959]
[233.17588806 -178.62370300]
[242.45454407 -190.40956116]
[251.73320007 -202.19541931]
[260.90808105 -214.06225586]
[269.97845459 -226.00914001]
[272.16085815 -241.67910767]
[286.01940918 -247.13717651]
[295.08978271 -259.08404541]
[304.16015625 -271.03094482]
[313.23056030 -282.97784424]
[322.30093384 -294.92471313]
[319.60592651 -312.19522095]
[330.01873779 -325.81231689]
[346.72128296 -327.66232300]
[355.58059692 -339.76654053]
[364.43991089 -351.87078857]
[361.77502441 -367.44876099]
[370.97399902 -380.29998779]
[386.57931519 -382.80004883]
[399.33255005 -373.46569824]
[401.66748047 -357.83483887]
[392.19882202 -345.18099976]
[376.54415894 -343.01144409]
[367.68484497 -330.90722656]
[358.82553101 -318.80297852]
[362.55978394 -306.45309448]
[358.42889404 -294.02471924]
[347.73129272 -286.13616943]
[334.24783325 -285.85433960]
[325.17742920 -273.90744019]
[316.10705566 -261.96057129]
[307.03668213 -250.01367188]
[297.96627808 -238.06678772]
[296.43264771 -223.25134277]
[281.92535400 -216.93875122]
[272.85494995 -204.99186707]
[271.31002808 -197.74206543]
[263.51907349 -192.91676331]
[254.24040222 -181.13090515]
[244.96174622 -169.34504700]
[235.68309021 -157.55917358]
[193.50080872 -139.51940918]
[188.09661865 -125.52674103]
[182.69244385 -111.53407288]
[186.34339905 -94.38172150]
[171.94679260 -82.92204285]
[166.78900146 -68.83668518]
[174.51387024 -53.91272736]
[168.95892334 -37.69563293]
[153.09370422 -30.35887718]
[148.18391418 -16.18516922]
[151.32911682 -1.62642765]
[139.50096130 8.88097858]
[134.59117126 23.05468559]
[129.68139648 37.22839355]
[124.77159882 51.40209961]
[119.86180878 65.57580566]
[127.52154541 71.32804108]
[133.58245850 78.74594116]
[137.69244385 87.39855194]
[139.61273193 96.78323364]
[139.23179626 106.35478973]
[136.57173157 115.55717468]
[131.78707886 123.85578156]
[141.86959839 134.96176147]
[151.95213318 146.06773376]
[162.03465271 157.17370605]
[172.11717224 168.27967834]
[187.24043274 175.94279480]
[184.06333923 192.59638977]
[167.18106079 194.15364075]
[161.01119995 178.36221313]
[150.92868042 167.25624084]
[140.84614563 156.15025330]
[130.76362610 145.04428101]
[120.68109894 133.93830872]
[106.59581757 139.19198608]
[91.56680298 138.83810425]
[85.67488861 152.63249207]
[79.78296661 166.42687988]
[73.89105225 180.22128296]
[67.99913788 194.01567078]
[62.10721588 207.81007385]
[56.21530151 221.60446167]
[50.32338333 235.39886475]
[44.43146515 249.19325256]
[56.28750992 240.00444031]
[70.21664429 234.43853760]
[85.14024353 232.92655945]
[99.90268707 235.58557129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 25]
[17 24]
[18 23]
[28 174]
[29 173]
[30 172]
[31 171]
[32 170]
[33 169]
[34 168]
[35 167]
[36 166]
[38 50]
[39 49]
[40 48]
[41 47]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[59 139]
[60 138]
[64 135]
[65 134]
[68 132]
[69 131]
[70 130]
[76 85]
[77 84]
[78 83]
[88 129]
[89 128]
[90 127]
[91 126]
[92 124]
[93 123]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[102 113]
[103 112]
[104 111]
[152 164]
[153 163]
[154 162]
[155 161]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
