%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAAGGGUCAGCCGCGGCGGCAGGGCGGCGGCGGCAGCGGCGCAGCUCCGCUCCCCGCGCGUCUCCCUUCCCCGCGCCCAGGUAGGGCGCUCAGCCUCCGCCGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[77.63589478 336.75411987]
[65.14490509 345.31298828]
[50.55099869 349.34988403]
[35.43719864 348.42691040]
[21.44294739 342.64422607]
[10.08623123 332.62905884]
[2.59894419 319.46777344]
[-0.20675042 304.58801270]
[1.97348893 289.60385132]
[8.90316582 276.14062500]
[19.83060074 265.65875244]
[33.57046890 259.29519653]
[48.63237000 257.74026489]
[51.99974060 243.12310791]
[47.31708908 228.98373413]
[57.95492554 217.27275085]
[61.32229614 202.65560913]
[64.68966675 188.03846741]
[68.05703735 173.42132568]
[63.37438583 159.28195190]
[74.01222229 147.57096863]
[77.37959290 132.95382690]
[80.74696350 118.33668518]
[81.61198425 87.95874023]
[74.67006683 74.66175842]
[67.72814941 61.36476898]
[60.78623962 48.06778336]
[47.54074478 39.41518402]
[48.50948715 24.55211639]
[41.56757355 11.25513077]
[34.62565613 -2.04185486]
[27.68374252 -15.33884048]
[20.55435944 -28.53626060]
[13.23893547 -41.63147354]
[5.92351103 -54.72668457]
[-1.39191294 -67.82189178]
[-17.39309120 -76.79613495]
[-16.62928772 -94.26560211]
[-24.31236076 -107.14855194]
[-31.99543571 -120.03149414]
[-39.67850876 -132.91444397]
[-47.36158371 -145.79739380]
[-62.82633972 -148.11585999]
[-73.14395905 -159.86663818]
[-73.44277954 -175.50135803]
[-63.58170319 -187.63780212]
[-48.21683121 -190.54550171]
[-34.60298538 -182.85153198]
[-29.16820717 -168.18875122]
[-34.47863388 -153.48046875]
[-26.79556084 -140.59751892]
[-19.11248589 -127.71456909]
[-11.42941284 -114.83161926]
[-3.74633884 -101.94866943]
[7.98156404 -98.63077545]
[14.46118736 -87.83506775]
[11.70329857 -75.13732147]
[19.01872253 -62.04210663]
[26.33414650 -48.94689560]
[33.64957047 -35.85168457]
[39.74811935 -31.48333168]
[40.98072815 -22.28075409]
[47.92264175 -8.98376942]
[54.86455917 4.31321573]
[61.80647278 17.61020088]
[74.55543518 25.31171227]
[74.08322144 41.12586975]
[81.02513885 54.42285538]
[87.96705627 67.71984100]
[94.90896606 81.01682281]
[95.81584930 66.04426575]
[107.48175812 56.61523438]
[122.31154633 58.86854935]
[130.65020752 71.33717346]
[127.06883240 85.90335846]
[113.89952087 93.08367920]
[128.88600159 93.72029877]
[143.87248230 94.35691833]
[158.85897827 94.99353790]
[173.84545898 95.63014984]
[188.83193970 96.26676941]
[201.57243347 86.51693726]
[217.10324097 90.53858948]
[223.51045227 105.24665833]
[215.87899780 119.35837555]
[200.06307983 122.04843140]
[188.19532776 111.25325775]
[173.20883179 110.61663818]
[158.22235107 109.98001862]
[143.23587036 109.34339905]
[128.24938965 108.70677948]
[113.26290131 108.07016754]
[123.48932648 119.04377747]
[118.16115570 133.06556702]
[103.22786713 134.47868347]
[95.36410522 121.70406342]
[91.99673462 136.32119751]
[88.62936401 150.93833923]
[93.07115936 166.12322998]
[82.67417908 176.78869629]
[79.30680847 191.40583801]
[75.93943787 206.02297974]
[72.57206726 220.64012146]
[77.01386261 235.82501221]
[66.61688232 246.49047852]
[63.24951172 261.10763550]
[76.11295319 269.09576416]
[85.68374634 280.82943726]
[90.92370605 295.03582764]
[91.26445770 310.17395020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 106]
[14 105]
[16 103]
[17 102]
[18 101]
[19 100]
[21 98]
[22 97]
[23 96]
[24 70]
[25 69]
[26 68]
[27 67]
[29 65]
[30 64]
[31 63]
[32 62]
[33 60]
[34 59]
[35 58]
[36 57]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
