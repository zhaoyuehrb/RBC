%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUAGUACACUGAAAUUCAAAGUCAUGCUCAUAACUGUUAAUGAAAGCAGAUUCAAAGCAACACCACCACCACUGAAGUAUUUUUAGUUAUAUAAGAUUGGAACUACCAAGC\
) } def
/len { sequence length } bind def

/coor [
[94.76313019 182.91726685]
[81.82182312 181.06942749]
[69.33055878 177.21453857]
[62.55755997 190.59834290]
[55.78455734 203.98216248]
[49.01155853 217.36598206]
[50.45472336 233.70149231]
[36.87576675 242.89628601]
[22.24355888 235.49151611]
[21.61045647 219.10459900]
[35.62774277 210.59297180]
[42.40074539 197.20916748]
[49.17374420 183.82534790]
[55.94674683 170.44152832]
[42.99250031 160.43876648]
[32.25050735 148.09059143]
[24.13761330 133.87620544]
[18.96865463 118.34721375]
[16.94421768 102.10623169]
[18.14286423 85.78350830]
[22.51807976 70.01248169]
[29.90007591 55.40515900]
[40.00238800 42.52839279]
[30.15110779 31.21679306]
[14.62375164 29.97624969]
[4.79429007 18.36434364]
[6.07264853 3.56902719]
[-3.77863193 -7.74257183]
[-13.62991238 -19.05417061]
[-23.48119354 -30.36577034]
[-39.06936264 -25.93636703]
[-54.97755432 -28.70527649]
[-68.05827332 -38.07362366]
[-75.74562073 -52.14188385]
[-76.55857849 -68.09485626]
[-70.38607025 -82.76496887]
[-80.54529572 -93.80082703]
[-90.70452118 -104.83668518]
[-100.86373901 -115.87254333]
[-111.02296448 -126.90840149]
[-126.82212830 -127.31101227]
[-137.64842224 -138.82478333]
[-137.07878113 -154.61880493]
[-125.45119476 -165.32276917]
[-109.66407776 -164.58618164]
[-99.08365631 -152.84606934]
[-99.98710632 -137.06762695]
[-89.82788086 -126.03176880]
[-79.66866302 -114.99591064]
[-69.50943756 -103.96005249]
[-59.35021210 -92.92419434]
[-46.22033691 -97.62218475]
[-32.24876022 -96.93319702]
[-19.56619263 -90.92896271]
[-10.11952400 -80.49434662]
[-5.37297869 -67.19707489]
[-6.08122396 -53.05226517]
[-12.16959381 -40.21705246]
[-2.31831312 -28.90545082]
[7.53296709 -17.59385300]
[17.38424683 -6.28225327]
[32.21492386 -5.51630592]
[42.36666107 5.81492901]
[41.46270752 21.36551094]
[51.31398773 32.67711258]
[64.30031586 24.97846031]
[78.46537018 19.75687599]
[93.34146118 17.18476486]
[108.43740845 17.34705544]
[123.25476074 20.23838615]
[137.30429077 25.76329041]
[150.12210083 33.73934937]
[161.28498840 43.90320969]
[170.42434692 55.91927338]
[177.23843384 69.39080048]
[181.50225830 83.87298584]
[183.07504272 98.88764954]
[181.90483093 113.93904877]
[178.03028870 128.53019714]
[191.59565735 134.93185425]
[205.16101074 141.33349609]
[220.94338989 140.22579956]
[229.15129089 152.65478516]
[242.71664429 159.05642700]
[256.28201294 165.45806885]
[269.84735107 171.85972595]
[283.41271973 178.26136780]
[296.97808838 184.66300964]
[310.54342651 191.06466675]
[324.10879517 197.46630859]
[338.89813232 191.89395142]
[353.26135254 198.48736572]
[358.67703247 213.33477783]
[351.93215942 227.62750244]
[337.02828979 232.88591003]
[322.80767822 225.99028015]
[317.70715332 211.03166199]
[304.14178467 204.63002014]
[290.57644653 198.22837830]
[277.01107788 191.82672119]
[263.44570923 185.42507935]
[249.88035583 179.02343750]
[236.31500244 172.62178040]
[222.74964905 166.22013855]
[207.93754578 167.78572083]
[198.75936890 154.89884949]
[185.19400024 148.49720764]
[171.62864685 142.09555054]
[164.13900757 152.80990601]
[155.06146240 162.21682739]
[144.62075806 170.08343506]
[133.07534790 176.21496582]
[120.71109772 180.45960999]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[23 65]
[24 64]
[27 61]
[28 60]
[29 59]
[30 58]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[79 108]
[80 107]
[81 106]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
