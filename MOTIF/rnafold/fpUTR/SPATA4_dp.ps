%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPATA4)
} def

/sequence { (\
GCGCUGAGGUCUCGCCCCAUAAGACUCCGCCCCGCCCCACGAGACCGCGCCGCCAGCAAUAAGGCCCAGCCCCGCCUUCUGCUGUUGCCGCAGCAACCCAGAAAGCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.003684578 ubox
1 35 0.007410100 ubox
1 48 0.023645735 ubox
1 50 0.825397137 ubox
1 53 0.302898719 ubox
1 57 0.036478980 ubox
1 70 0.028650443 ubox
1 75 0.005263173 ubox
1 94 0.009077268 ubox
1 106 0.059753858 ubox
1 108 0.348676043 ubox
2 29 0.003696280 ubox
2 34 0.007433225 ubox
2 47 0.023655797 ubox
2 49 0.828141374 ubox
2 52 0.303918516 ubox
2 56 0.036318721 ubox
2 69 0.028648575 ubox
2 74 0.005285004 ubox
2 93 0.009071912 ubox
2 105 0.059698237 ubox
2 107 0.381528628 ubox
3 28 0.003618586 ubox
3 30 0.005302534 ubox
3 33 0.006794348 ubox
3 46 0.010307695 ubox
3 48 0.828816000 ubox
3 50 0.096881506 ubox
3 51 0.295795989 ubox
3 53 0.033333786 ubox
3 57 0.044183799 ubox
3 70 0.232089470 ubox
3 73 0.003333368 ubox
3 94 0.022173697 ubox
3 106 0.382683460 ubox
3 108 0.005191554 ubox
4 29 0.005456839 ubox
4 47 0.828013683 ubox
4 49 0.118113097 ubox
4 52 0.033396695 ubox
4 56 0.044231074 ubox
4 69 0.232562335 ubox
4 93 0.022194612 ubox
4 101 0.060587982 ubox
4 105 0.382401810 ubox
4 107 0.005316968 ubox
5 29 0.005524757 ubox
5 47 0.018462155 ubox
5 49 0.272444557 ubox
5 55 0.044075014 ubox
5 68 0.232337704 ubox
5 92 0.021517924 ubox
5 95 0.006095115 ubox
5 100 0.066003218 ubox
5 104 0.369847725 ubox
6 27 0.007311698 ubox
6 28 0.008129821 ubox
6 46 0.026332536 ubox
6 48 0.308209760 ubox
6 54 0.043436950 ubox
6 67 0.231116000 ubox
6 91 0.013184670 ubox
6 94 0.008542673 ubox
6 99 0.070681669 ubox
6 109 0.007229477 ubox
7 26 0.006999420 ubox
7 108 0.006854036 ubox
8 16 0.003300016 ubox
8 25 0.005177869 ubox
8 26 0.012139911 ubox
8 28 0.005730556 ubox
8 46 0.998192316 ubox
8 51 0.004753929 ubox
8 66 0.016101790 ubox
8 98 0.005827288 ubox
8 99 0.004534619 ubox
9 15 0.003308567 ubox
9 25 0.013855825 ubox
9 27 0.005713305 ubox
9 45 0.999712277 ubox
9 50 0.004412323 ubox
9 65 0.014103122 ubox
9 97 0.004979789 ubox
10 24 0.014671559 ubox
10 44 0.999619054 ubox
10 49 0.003221356 ubox
10 64 0.014041971 ubox
10 96 0.004064626 ubox
11 23 0.014715097 ubox
11 43 0.999743399 ubox
11 63 0.013973076 ubox
12 22 0.014110393 ubox
12 24 0.006885824 ubox
12 42 0.999600927 ubox
12 62 0.013010194 ubox
13 23 0.008250232 ubox
13 41 0.999647048 ubox
14 28 0.005772958 ubox
14 30 0.071116313 ubox
14 33 0.003945845 ubox
14 35 0.113712763 ubox
14 40 0.972761126 ubox
14 48 0.003285317 ubox
14 57 0.006441664 ubox
15 29 0.077510302 ubox
15 34 0.124232342 ubox
15 47 0.003278376 ubox
15 56 0.006428608 ubox
20 61 0.003636578 ubox
21 60 0.003526564 ubox
25 43 0.006243146 ubox
25 56 0.005112866 ubox
26 42 0.006306695 ubox
26 55 0.005042496 ubox
27 41 0.005990957 ubox
28 34 0.112644188 ubox
28 41 0.005009769 ubox
28 49 0.004021805 ubox
29 33 0.106202575 ubox
29 35 0.238945520 ubox
29 40 0.006522013 ubox
29 48 0.004374258 ubox
29 53 0.013843075 ubox
30 34 0.237556073 ubox
30 47 0.004365419 ubox
30 52 0.013860235 ubox
33 41 0.008970992 ubox
33 49 0.014724384 ubox
34 40 0.015884298 ubox
34 48 0.014966177 ubox
35 47 0.014923653 ubox
40 47 0.004398796 ubox
41 46 0.005083105 ubox
47 51 0.016478735 ubox
47 53 0.050650798 ubox
47 57 0.075504824 ubox
47 65 0.008968665 ubox
47 70 0.097963622 ubox
47 73 0.005395237 ubox
47 75 0.061038828 ubox
47 88 0.005001401 ubox
47 89 0.008628535 ubox
47 91 0.257559956 ubox
47 94 0.236946377 ubox
47 108 0.005635622 ubox
48 52 0.050388391 ubox
48 56 0.075573158 ubox
48 64 0.008925186 ubox
48 69 0.098138050 ubox
48 74 0.061149823 ubox
48 87 0.005015120 ubox
48 90 0.257989274 ubox
48 93 0.237082821 ubox
48 107 0.005877903 ubox
49 57 0.050932160 ubox
49 65 0.143956039 ubox
49 70 0.069777353 ubox
49 73 0.053948913 ubox
49 75 0.005866605 ubox
49 86 0.004328245 ubox
49 88 0.052985314 ubox
49 89 0.252400216 ubox
49 91 0.245062590 ubox
49 94 0.029796553 ubox
49 106 0.005861850 ubox
50 56 0.050927511 ubox
50 64 0.144284153 ubox
50 69 0.071669319 ubox
50 74 0.005853246 ubox
50 87 0.070771435 ubox
50 90 0.245506722 ubox
50 93 0.029810516 ubox
50 105 0.005848087 ubox
51 63 0.144314281 ubox
51 87 0.240010351 ubox
51 90 0.024432109 ubox
51 107 0.110494201 ubox
52 65 0.806583578 ubox
52 70 0.114867722 ubox
52 82 0.004268798 ubox
52 85 0.060573274 ubox
52 86 0.234298193 ubox
52 88 0.251848717 ubox
52 89 0.021199809 ubox
52 91 0.029773356 ubox
52 106 0.112807673 ubox
52 108 0.007419262 ubox
53 64 0.808200280 ubox
53 69 0.114854169 ubox
53 84 0.044539498 ubox
53 87 0.251237415 ubox
53 90 0.029780817 ubox
53 105 0.112547082 ubox
53 107 0.007591696 ubox
54 63 0.808083156 ubox
54 81 0.007511761 ubox
54 84 0.369449365 ubox
54 87 0.015768187 ubox
55 80 0.008427318 ubox
55 83 0.383597173 ubox
55 86 0.018060481 ubox
56 65 0.139391810 ubox
56 70 0.031994812 ubox
56 75 0.009333022 ubox
56 79 0.008609547 ubox
56 82 0.384761229 ubox
56 85 0.018057846 ubox
56 88 0.011446803 ubox
56 106 0.021901650 ubox
56 108 0.012029311 ubox
57 64 0.139513671 ubox
57 69 0.032045491 ubox
57 74 0.009369567 ubox
57 81 0.384730788 ubox
57 84 0.018067003 ubox
57 87 0.011461641 ubox
57 105 0.021908559 ubox
57 107 0.012249175 ubox
58 80 0.372562713 ubox
58 83 0.017635529 ubox
58 86 0.011455680 ubox
59 85 0.011451026 ubox
60 81 0.009270433 ubox
60 84 0.011419942 ubox
61 78 0.361838748 ubox
61 80 0.007008442 ubox
61 83 0.008385376 ubox
62 77 0.393548156 ubox
62 78 0.008048665 ubox
63 71 0.371940490 ubox
63 72 0.048040559 ubox
63 73 0.008107958 ubox
63 76 0.399551573 ubox
64 70 0.373211210 ubox
64 71 0.044746377 ubox
64 72 0.008197830 ubox
64 75 0.399578201 ubox
65 69 0.370892601 ubox
65 74 0.399422326 ubox
69 75 0.019729584 ubox
69 76 0.003738860 ubox
69 106 0.004546846 ubox
69 108 0.038020054 ubox
70 74 0.019692797 ubox
70 105 0.004521122 ubox
70 107 0.033571207 ubox
73 107 0.888915010 ubox
74 106 0.909827144 ubox
74 108 0.022880994 ubox
75 105 0.907924519 ubox
75 107 0.023859572 ubox
76 101 0.005307328 ubox
76 105 0.052362424 ubox
77 100 0.005156607 ubox
77 102 0.005179067 ubox
77 103 0.877157311 ubox
77 104 0.057014847 ubox
78 102 0.918626979 ubox
78 103 0.040629885 ubox
79 101 0.921511142 ubox
80 95 0.063426904 ubox
80 100 0.919813405 ubox
80 107 0.004733598 ubox
81 94 0.081308427 ubox
81 99 0.915833575 ubox
81 106 0.006313835 ubox
82 93 0.085039125 ubox
82 101 0.007100151 ubox
82 105 0.006324033 ubox
83 92 0.085026058 ubox
83 95 0.095380253 ubox
83 100 0.007278211 ubox
83 104 0.006275400 ubox
84 91 0.085012661 ubox
84 94 0.096659755 ubox
84 97 0.914921610 ubox
84 99 0.005788141 ubox
85 90 0.080283428 ubox
85 93 0.096629303 ubox
85 96 0.920307573 ubox
86 92 0.096309024 ubox
86 95 0.922197286 ubox
87 91 0.094841381 ubox
87 94 0.922958513 ubox
87 106 0.004477084 ubox
87 108 0.005806430 ubox
88 93 0.919966225 ubox
88 105 0.004471205 ubox
88 107 0.004443564 ubox
89 107 0.042221228 ubox
90 106 0.043385698 ubox
90 108 0.009143446 ubox
91 105 0.043349325 ubox
91 107 0.009529355 ubox
93 106 0.017431188 ubox
94 105 0.017442102 ubox
96 108 0.003901597 ubox
97 107 0.004288328 ubox
101 109 0.007280962 ubox
102 108 0.007058447 ubox
1 50 0.9500000 lbox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
11 43 0.9500000 lbox
12 42 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
52 65 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
73 107 0.9500000 lbox
74 106 0.9500000 lbox
75 105 0.9500000 lbox
77 103 0.9500000 lbox
78 102 0.9500000 lbox
79 101 0.9500000 lbox
80 100 0.9500000 lbox
81 99 0.9500000 lbox
84 97 0.9500000 lbox
85 96 0.9500000 lbox
86 95 0.9500000 lbox
87 94 0.9500000 lbox
88 93 0.9500000 lbox
showpage
end
%%EOF
