%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGUAGGCGCUUCAGGCUUAGGGGCGGAACAGCGCGGGCCGCGCGGGCGUAGGCGGGGUAUCUGGAGGAGGCGCAGGGAACCUGGAGAGGGUCCAGCCCUCAGUGCCCCGGCCAGAGGCGGGAAGGGGCUCUAGAGCUUCGGGAGGCAAGAUGACUUCUCUGCCCCAAGCUUGGAACAGCUAAAGGGAAAAACAGUGCAAG\
) } def
/len { sequence length } bind def

/coor [
[131.07536316 504.24548340]
[131.89454651 489.20742798]
[135.92776489 474.69717407]
[142.98635864 461.39340210]
[152.74018860 449.91836548]
[164.73304749 440.80874634]
[178.40402222 434.49060059]
[175.17945862 419.84130859]
[171.95489502 405.19198608]
[157.41197205 396.75131226]
[153.39125061 380.07656860]
[162.85427856 365.36727905]
[159.40341187 350.76962280]
[155.95252991 336.17196655]
[152.50166321 321.57434082]
[149.05079651 306.97668457]
[145.59991455 292.37902832]
[142.14904785 277.78137207]
[138.69818115 263.18371582]
[135.24729919 248.58605957]
[130.64619446 242.79615784]
[131.85783386 233.73582458]
[128.63328552 219.08651733]
[125.40872192 204.43721008]
[122.18416595 189.78790283]
[118.95960999 175.13859558]
[115.73505402 160.48928833]
[112.51049805 145.83998108]
[109.28594208 131.19067383]
[100.25702667 135.62327576]
[89.49245453 137.25122070]
[77.90785217 135.46769714]
[66.61425018 129.97250366]
[52.59534836 135.30827332]
[38.57644653 140.64402771]
[24.55754471 145.97979736]
[10.53864384 151.31556702]
[-2.11371541 162.60069275]
[-16.46033859 153.56683350]
[-11.75106144 137.28005981]
[5.20287752 137.29666138]
[19.22177887 131.96089172]
[33.24068069 126.62512970]
[47.25958252 121.28936768]
[61.27848434 115.95359802]
[60.00788498 108.56201172]
[57.46669006 93.77883148]
[56.19609070 86.38724518]
[41.20013428 86.03907013]
[27.07898331 94.37724304]
[12.93227196 86.08251190]
[13.31292343 69.68778229]
[27.82935524 62.05855179]
[41.54830933 71.04311371]
[56.54426575 71.39128876]
[66.77518463 60.42186356]
[65.38436127 45.48648071]
[63.99353790 30.55109978]
[62.60271454 15.61571884]
[61.21189117 0.68033743]
[57.29806137 -7.58039141]
[59.91694260 -14.49665356]
[58.75741196 -29.45176888]
[57.59788513 -44.40688324]
[56.43835449 -59.36199951]
[55.27882385 -74.31711578]
[54.11929703 -89.27223206]
[34.91442490 -87.92174530]
[16.01592827 -105.51659393]
[8.88746548 -118.71450806]
[1.75900185 -131.91242981]
[-5.36946154 -145.11033630]
[-12.20562840 -151.17866516]
[-12.50432205 -158.56811523]
[-19.42769051 -171.87477112]
[-31.47428894 -176.49542236]
[-36.96549225 -187.72631836]
[-33.44614792 -199.30380249]
[-40.16276550 -212.71600342]
[-46.87938309 -226.12818909]
[-59.97702789 -235.00300598]
[-58.75769424 -249.84761047]
[-65.47431183 -263.25982666]
[-72.19092560 -276.67202759]
[-86.17227173 -285.24255371]
[-85.47021484 -301.62664795]
[-70.80697632 -308.96978760]
[-57.26683426 -299.71792603]
[-58.77873230 -283.38864136]
[-52.06211472 -269.97644043]
[-45.34549713 -256.56423950]
[-32.72826767 -248.64875793]
[-33.46718597 -232.84481812]
[-26.75056839 -219.43261719]
[-20.03395081 -206.02041626]
[-4.88462162 -197.16778564]
[-6.12104034 -178.79814148]
[0.80232877 -165.49148560]
[7.82845545 -152.23880005]
[14.95691872 -139.04089355]
[22.08538246 -125.84297180]
[29.21384621 -112.64505768]
[36.71361923 -112.58702087]
[44.31364441 -125.51913452]
[51.71317291 -112.47095490]
[59.21294785 -112.41291809]
[66.54479980 -125.49893951]
[73.87664795 -138.58496094]
[81.20849609 -151.67098999]
[88.54035187 -164.75700378]
[84.47768402 -179.79470825]
[92.09963989 -192.96134949]
[106.46082306 -196.74180603]
[113.79267883 -209.82783508]
[108.08641052 -224.38711548]
[113.12265778 -239.19151306]
[126.52343750 -247.25085449]
[141.96133423 -244.75975037]
[152.14701843 -232.89443970]
[152.27114868 -217.25735474]
[142.27510071 -205.23184204]
[126.87870026 -202.49598694]
[119.54685211 -189.40995789]
[123.82167816 -175.18809509]
[116.57255554 -161.81256104]
[101.62637329 -157.42515564]
[94.29451752 -144.33914185]
[86.96266937 -131.25311279]
[79.63082123 -118.16709137]
[72.29897308 -105.08106995]
[69.07440948 -90.43176270]
[70.23394012 -75.47664642]
[71.39347076 -60.52153015]
[72.55300140 -45.56641388]
[73.71253204 -30.61129761]
[74.87205505 -15.65618229]
[76.14727020 -0.71048629]
[77.53809357 14.22489452]
[78.92891693 29.16027641]
[80.31974030 44.09565735]
[81.71056366 59.03103638]
[121.61306763 67.89178467]
[132.52479553 101.10653687]
[147.51356506 100.52633667]
[162.50233459 99.94614410]
[177.49111938 99.36594391]
[185.23477173 86.02280426]
[198.97340393 79.00472260]
[214.32307434 80.55113983]
[226.38574219 90.16859436]
[231.31225586 104.78820038]
[227.53060913 119.74489594]
[216.24748230 130.26603699]
[201.06327820 132.99438477]
[186.82324219 127.05933380]
[178.07131958 114.35472107]
[163.08253479 114.93491364]
[148.09376526 115.51511383]
[133.10499573 116.09531403]
[123.93524933 127.96611023]
[127.15980530 142.61541748]
[130.38435364 157.26472473]
[133.60891724 171.91403198]
[136.83348083 186.56333923]
[140.05802917 201.21264648]
[143.28259277 215.86195374]
[146.50714111 230.51127625]
[149.84495544 245.13519287]
[153.29582214 259.73284912]
[156.74670410 274.33050537]
[160.19757080 288.92816162]
[163.64843750 303.52578735]
[167.09931946 318.12344360]
[170.55018616 332.72109985]
[174.00105286 347.31875610]
[177.45193481 361.91641235]
[189.65328979 367.63000488]
[196.23825073 379.16036987]
[194.99630737 392.18487549]
[186.60421753 401.96743774]
[189.82876587 416.61672974]
[193.05332947 431.26605225]
[208.11366272 431.25994873]
[222.82313538 434.49194336]
[236.49371338 440.81088257]
[248.48603821 449.92123413]
[258.23916626 461.39688110]
[265.29696655 474.70108032]
[269.32931519 489.21157837]
[270.14758301 504.24966431]
[267.71356201 519.11199951]
[262.14105225 533.10351562]
[253.69067383 545.56964111]
[242.75772095 555.92749023]
[229.85350037 563.69250488]
[215.58158875 568.50146484]
[200.60949707 570.12957764]
[185.63751221 568.50061035]
[171.36587524 563.69073486]
[158.46212769 555.92492676]
[147.52978516 545.56646729]
[139.08016968 533.09979248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 182]
[8 181]
[9 180]
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[20 168]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 162]
[28 161]
[29 160]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[48 55]
[49 54]
[56 141]
[57 140]
[58 139]
[59 138]
[60 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[69 102]
[70 101]
[71 100]
[72 99]
[74 98]
[75 97]
[78 95]
[79 94]
[80 93]
[82 91]
[83 90]
[84 89]
[106 130]
[107 129]
[108 128]
[109 127]
[110 126]
[113 123]
[114 122]
[143 159]
[144 158]
[145 157]
[146 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
