%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MAGIX)
} def

/sequence { (\
AAAACUCGUCGCUGGCUGCCCUGCGUCCACCCGGCCGACUACUGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
4 26 0.049643586 ubox
5 15 0.003550586 ubox
5 25 0.050819832 ubox
5 45 0.058462825 ubox
6 15 0.005833777 ubox
6 34 0.004116118 ubox
6 38 0.098467566 ubox
6 44 0.055054136 ubox
6 45 0.032324355 ubox
7 14 0.015457093 ubox
7 23 0.046854367 ubox
7 25 0.115156127 ubox
7 33 0.044959625 ubox
7 37 0.106407859 ubox
7 44 0.044285320 ubox
8 13 0.011570347 ubox
8 16 0.025263893 ubox
8 19 0.003865365 ubox
8 22 0.042328166 ubox
8 24 0.119381509 ubox
8 26 0.139888044 ubox
8 30 0.276551404 ubox
8 32 0.068416677 ubox
8 35 0.087496970 ubox
8 36 0.082832406 ubox
8 39 0.449311272 ubox
8 42 0.026758996 ubox
8 43 0.011145902 ubox
8 46 0.030603250 ubox
9 15 0.025244449 ubox
9 18 0.003604368 ubox
9 23 0.117327134 ubox
9 25 0.008755549 ubox
9 29 0.272646058 ubox
9 34 0.109912052 ubox
9 38 0.450202578 ubox
9 41 0.025121169 ubox
9 45 0.030613825 ubox
10 14 0.024544144 ubox
10 18 0.003385074 ubox
10 23 0.017180909 ubox
10 25 0.721290659 ubox
10 33 0.137491115 ubox
10 37 0.450243800 ubox
10 44 0.030597042 ubox
11 19 0.131054484 ubox
11 22 0.012216004 ubox
11 24 0.743737780 ubox
11 26 0.020085079 ubox
11 32 0.167227117 ubox
11 35 0.322156425 ubox
11 36 0.317998447 ubox
11 43 0.026972096 ubox
11 46 0.016174971 ubox
12 18 0.131122574 ubox
12 23 0.742165214 ubox
12 25 0.020669803 ubox
12 34 0.452291165 ubox
12 45 0.016199606 ubox
13 23 0.007850805 ubox
13 25 0.006169903 ubox
13 29 0.412233614 ubox
13 33 0.449428642 ubox
13 37 0.033378323 ubox
13 41 0.020556681 ubox
13 44 0.015024670 ubox
14 20 0.194229605 ubox
14 21 0.707744807 ubox
14 22 0.049059807 ubox
14 24 0.006680594 ubox
14 27 0.064679334 ubox
14 28 0.460820329 ubox
14 31 0.026602106 ubox
14 32 0.446773041 ubox
14 36 0.048400304 ubox
14 40 0.020394751 ubox
14 43 0.011063171 ubox
14 47 0.038316597 ubox
15 19 0.192404528 ubox
15 20 0.701036552 ubox
15 21 0.051918657 ubox
15 24 0.081254558 ubox
15 26 0.068452873 ubox
15 27 0.460668485 ubox
15 30 0.034570390 ubox
15 31 0.443961386 ubox
15 35 0.050386885 ubox
15 39 0.020346552 ubox
15 42 0.011014337 ubox
15 46 0.038777995 ubox
16 23 0.086578114 ubox
16 25 0.129409156 ubox
16 34 0.050389045 ubox
16 45 0.038776241 ubox
17 23 0.006948976 ubox
17 25 0.466683570 ubox
17 29 0.361121062 ubox
17 33 0.050196384 ubox
17 37 0.012814479 ubox
17 41 0.006452769 ubox
17 44 0.037954486 ubox
18 22 0.004094744 ubox
18 24 0.500261715 ubox
18 26 0.141931052 ubox
18 28 0.355620153 ubox
18 32 0.049028348 ubox
18 35 0.019330515 ubox
18 36 0.011111198 ubox
18 40 0.005964259 ubox
18 43 0.025653859 ubox
18 46 0.008821575 ubox
19 23 0.497249339 ubox
19 25 0.168529523 ubox
19 34 0.020603258 ubox
19 45 0.008842441 ubox
20 33 0.020520623 ubox
20 34 0.008102950 ubox
20 44 0.008820239 ubox
21 33 0.008161007 ubox
22 29 0.040678439 ubox
22 33 0.003252977 ubox
22 37 0.005054332 ubox
22 41 0.003390749 ubox
23 28 0.041883927 ubox
23 32 0.006229969 ubox
23 35 0.004355839 ubox
23 36 0.005651614 ubox
23 40 0.003250481 ubox
24 33 0.004983830 ubox
24 34 0.004256389 ubox
24 37 0.039406119 ubox
25 32 0.019659967 ubox
25 35 0.009609194 ubox
25 36 0.039335232 ubox
25 39 0.005789877 ubox
26 34 0.008825866 ubox
26 38 0.005808593 ubox
27 33 0.011177703 ubox
27 34 0.040161456 ubox
27 37 0.005604972 ubox
27 45 0.003204271 ubox
28 33 0.041506515 ubox
28 44 0.003240014 ubox
30 45 0.003377411 ubox
31 45 0.031906423 ubox
32 44 0.032252258 ubox
33 43 0.032246616 ubox
33 47 0.870066084 ubox
34 39 0.003226879 ubox
34 42 0.032168017 ubox
34 46 0.881494297 ubox
35 45 0.881593453 ubox
36 44 0.881519519 ubox
37 43 0.766950977 ubox
39 45 0.015591346 ubox
40 44 0.015192724 ubox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
showpage
end
%%EOF
