%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAGACCUAAAUCAGCUUUCCUCCCUGCUAACAUCCUAGUGGCAACUCUUACUCCUACCCGCACUAUGGGAUUUUAAGAUCAAAGGAAUUAGACCUAGGGCAAAAACUGAGACAGCAGGGAGGCACUGUAACAACUGGAAAGUUUUCCAAAUUGGUAAACUUGCAGUAUUCUUUCUGUACAGAAGUAAAAGAUCCCCUAUGUCCCU\
) } def
/len { sequence length } bind def

/coor [
[88.56085968 343.60971069]
[76.16669464 334.27352905]
[71.65947723 319.42547607]
[76.77232361 304.77493286]
[89.53924561 295.95532227]
[89.76579285 280.95703125]
[89.99234772 265.95874023]
[75.69111633 261.57101440]
[63.19311523 253.32290649]
[53.51591110 241.87574768]
[47.45030594 228.15171814]
[45.49568176 213.25958252]
[47.81892395 198.40513611]
[54.24019623 184.79354858]
[64.24683380 173.53155518]
[77.03426361 165.53756714]
[91.57069397 161.46665955]
[91.79724121 146.46838379]
[92.02378845 131.47009277]
[92.25033569 116.47180176]
[85.48088837 103.08618927]
[73.26622772 94.37974548]
[61.05157471 85.67330170]
[48.83691788 76.96685791]
[36.62226105 68.26041412]
[24.40760612 59.55396652]
[12.19295025 50.84751892]
[-0.02170498 42.14107513]
[-12.23636055 33.43463135]
[-24.45101547 24.72818565]
[-40.42723846 34.97134399]
[-60.23368835 35.96364212]
[-78.67841339 26.60111046]
[-90.51078033 8.60356045]
[-91.90559387 -13.74569702]
[-106.29217529 -17.99144363]
[-120.67874908 -22.23718834]
[-135.06533813 -26.48293495]
[-146.74810791 -21.01346397]
[-158.64434814 -24.84761429]
[-164.54273987 -35.41034317]
[-178.86354065 -39.87288666]
[-193.18435669 -44.33543396]
[-197.38874817 -43.22942734]
[-201.32958984 -43.49367905]
[-204.60813904 -44.87676239]
[-206.94841003 -47.02350235]
[-208.22038269 -49.52404404]
[-222.24562073 -54.84311676]
[-236.27087402 -60.16219330]
[-250.29611206 -65.48126221]
[-264.32135010 -70.80033875]
[-284.05053711 -66.66995239]
[-295.62152100 -82.16017151]
[-309.80102539 -87.05320740]
[-323.98052979 -91.94625092]
[-338.16003418 -96.83929443]
[-352.33953857 -101.73233795]
[-364.39361572 -92.10411835]
[-379.74188232 -90.54400635]
[-393.48678589 -97.54982758]
[-401.24234009 -110.88605499]
[-400.53378296 -126.29714203]
[-391.58724976 -138.86546326]
[-377.25747681 -144.58052063]
[-362.11712646 -141.61865234]
[-350.99734497 -130.92498779]
[-347.44647217 -115.91183472]
[-333.26699829 -111.01879120]
[-319.08749390 -106.12574768]
[-304.90798950 -101.23270416]
[-290.72848511 -96.33966827]
[-281.97830200 -101.62226868]
[-271.54586792 -101.20649719]
[-262.88690186 -94.98839569]
[-259.00228882 -84.82558441]
[-244.97703552 -79.50650787]
[-230.95179749 -74.18743134]
[-216.92655945 -68.86836243]
[-202.90130615 -63.54928970]
[-188.72181702 -58.65624619]
[-174.40100098 -54.19369888]
[-160.08018494 -49.73115540]
[-143.19393921 -54.50465775]
[-130.81958008 -40.86951447]
[-116.43300629 -36.62376785]
[-102.04642487 -32.37802124]
[-87.65985107 -28.13227463]
[-81.68679047 -32.66797256]
[-92.27667999 -43.29125595]
[-105.44399261 -50.47608566]
[-106.56745148 -65.43395233]
[-94.62107849 -74.50502014]
[-80.51456451 -69.40538788]
[-77.13004303 -54.79298782]
[-69.74066925 -41.73936462]
[-63.76760483 -46.27505875]
[-63.99415207 -61.27334976]
[-64.22070312 -76.27163696]
[-76.98762512 -85.09123993]
[-82.10047150 -99.74178314]
[-77.59325409 -114.58983612]
[-65.19908905 -123.92601776]
[-49.68378067 -124.16036987]
[-37.01328659 -115.20279694]
[-32.05966949 -100.49765015]
[-36.72769547 -85.69936371]
[-49.22241211 -76.49818420]
[-48.99586487 -61.49989700]
[-48.76931763 -46.50160980]
[-32.25824356 -41.45391846]
[-19.51210594 -30.80438805]
[-12.21387005 -16.61767960]
[-11.06536484 -1.36229300]
[-15.74457169 12.51352882]
[-3.52991557 21.21997452]
[8.68474007 29.92642021]
[20.89939499 38.63286591]
[33.11405182 47.33930969]
[45.32870865 56.04575348]
[57.54336166 64.75219727]
[69.75801849 73.45864105]
[81.97267151 82.16509247]
[94.18733215 90.87153625]
[99.30958557 83.88529205]
[109.92535400 80.99918365]
[122.58488464 85.67559052]
[137.57803345 85.22254944]
[152.57119751 84.76950073]
[167.56434631 84.31645966]
[182.55751038 83.86341095]
[191.04304504 80.47557831]
[197.78015137 83.51847076]
[212.77844238 83.29192352]
[227.73568726 82.16021729]
[242.59732056 80.12747192]
[257.45895386 78.09473419]
[272.32058716 76.06198883]
[280.72937012 66.27961731]
[293.15112305 64.89360809]
[302.86492920 72.10498810]
[317.75555420 70.29693604]
[332.64620972 68.48889160]
[347.53683472 66.68083954]
[362.42745972 64.87278748]
[377.31811523 63.06473923]
[390.08502197 53.72042465]
[403.65213013 59.86720657]
[418.54275513 58.05915833]
[433.43341064 56.25110626]
[448.42822266 48.33965683]
[460.18148804 60.55838776]
[451.69390869 75.23480225]
[435.24145508 71.14173889]
[420.35079956 72.94979095]
[405.46017456 74.75784302]
[393.75833130 83.97283173]
[379.12615967 77.95536804]
[364.23550415 79.76342010]
[349.34487915 81.57147217]
[334.45425415 83.37952423]
[319.56362915 85.18756866]
[304.67297363 86.99562073]
[291.23352051 98.27891541]
[274.35330200 90.92362213]
[259.49169922 92.95635986]
[244.63006592 94.98909760]
[229.76843262 97.02184296]
[242.28263855 105.29194641]
[247.65519714 119.29678345]
[243.88296509 133.81471252]
[232.37239075 143.43276978]
[217.41517639 144.56488037]
[204.58805847 136.78895569]
[198.67358398 123.00422668]
[201.87693787 108.35026550]
[213.00498962 98.29021454]
[198.00669861 98.51676178]
[183.01055908 98.85656738]
[168.01739502 99.30961609]
[153.02424622 99.76265717]
[138.03108215 100.21570587]
[123.03792572 100.66874695]
[137.48529053 104.70280457]
[144.25129700 118.09015656]
[138.93090820 132.11489868]
[124.98799133 137.64616394]
[111.50013733 131.08279419]
[107.24862671 116.69834900]
[107.02207947 131.69664001]
[106.79553223 146.69493103]
[106.56898499 161.69320679]
[120.97582245 166.20130920]
[133.51597595 174.57786560]
[143.17790222 186.13694763]
[149.18513489 199.93627930]
[151.05867004 214.85411072]
[148.65515137 229.68040466]
[142.17781067 243.21498108]
[132.15927124 254.36463928]
[119.41786194 262.23150635]
[104.99063110 266.18530273]
[104.76408386 281.18359375]
[104.53753662 296.18188477]
[117.03224945 305.38305664]
[121.70027924 320.18133545]
[116.74665833 334.88647461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[17 192]
[18 191]
[19 190]
[20 189]
[21 124]
[22 123]
[23 122]
[24 121]
[25 120]
[26 119]
[27 118]
[28 117]
[29 116]
[30 115]
[35 88]
[36 87]
[37 86]
[38 85]
[41 83]
[42 82]
[43 81]
[48 80]
[49 79]
[50 78]
[51 77]
[52 76]
[54 72]
[55 71]
[56 70]
[57 69]
[58 68]
[97 110]
[98 109]
[99 108]
[127 183]
[128 182]
[129 181]
[130 180]
[131 179]
[133 178]
[134 177]
[135 168]
[136 167]
[137 166]
[138 165]
[141 163]
[142 162]
[143 161]
[144 160]
[145 159]
[146 158]
[148 156]
[149 155]
[150 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
