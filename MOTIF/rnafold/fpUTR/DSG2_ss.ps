%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCUCUGUAAAAGCGGCCCGGGCCGGCCCCCGGCUCCAUUUUCUCGCGGCGGCCACACCUGGAGCCGCGCCUUUGGGUUGGGCUGGGCUGGGCCGCGCAACCGCCACGGGAAGACAGCCCUCGGGGCGGGGAGGGAGAGGGUGGCCGGGCCGGGGGGAGGCCGGGGCCAGGGAGGAGCCGAGUGCGCGCUCGGGGCAGGCGGCGGCGCGGAGCGGUGCGGCGGCGGGAGGCGGAGGCGAGGGUGCG\
) } def
/len { sequence length } bind def

/coor [
[510.72042847 549.66052246]
[500.37664795 535.07275391]
[497.46829224 517.37402344]
[502.63037109 500.14138794]
[491.28286743 490.33148193]
[479.93536377 480.52160645]
[468.58786011 470.71170044]
[457.24035645 460.90179443]
[450.07461548 464.28472900]
[442.20065308 465.43692017]
[434.29949951 464.23889160]
[427.06030273 460.77526855]
[421.12023926 455.32919312]
[417.00845337 448.35916138]
[415.09896851 440.46057129]
[415.57672119 432.31475830]
[418.41973877 424.63037109]
[407.84664917 413.99035645]
[397.27355957 403.35037231]
[386.70043945 392.71035767]
[376.12734985 382.07034302]
[361.66790771 378.49627686]
[357.42889404 363.25354004]
[346.85577393 352.61355591]
[336.28268433 341.97354126]
[325.70959473 331.33352661]
[310.86065674 331.54351807]
[299.98645020 320.90365601]
[299.86688232 305.32727051]
[289.29379272 294.68728638]
[278.72070312 284.04727173]
[268.14761353 273.40725708]
[257.57452393 262.76727295]
[247.00141907 252.12725830]
[236.42832947 241.48725891]
[225.85523987 230.84724426]
[215.28213501 220.20724487]
[204.50958252 209.76922607]
[193.54142761 199.53694153]
[182.57327271 189.30467224]
[171.60511780 179.07238770]
[160.63696289 168.84010315]
[149.66880798 158.60781860]
[138.70066833 148.37553406]
[127.73250580 138.14324951]
[116.76435089 127.91097260]
[105.79619598 117.67869568]
[63.71485519 124.22869873]
[49.36936188 119.84613800]
[35.02386856 115.46358490]
[25.92784691 115.95038605]
[20.52566528 110.93418121]
[6.23660612 106.37097931]
[-8.05245304 101.80777740]
[-22.34151268 97.24457550]
[-36.63056946 92.68138123]
[-45.73200989 93.05339050]
[-51.07047272 87.96942139]
[-65.30082703 83.22630310]
[-79.56081390 78.57305145]
[-93.84986877 74.00984955]
[-108.13893127 69.44665527]
[-114.62990570 70.47211456]
[-119.88571167 68.39357758]
[-122.72835541 64.58385468]
[-136.89773560 59.66157913]
[-151.06710815 54.73930740]
[-165.23648071 49.81703186]
[-179.32817078 56.45494461]
[-193.62782288 51.26121140]
[-199.86921692 37.78602600]
[-214.03858948 32.86375046]
[-228.20796204 27.94147682]
[-244.20375061 31.55630875]
[-255.13191223 19.32899666]
[-249.75050354 3.83795094]
[-233.59545898 1.01903188]
[-223.28569031 13.77210140]
[-209.11631775 18.69437599]
[-194.94694519 23.61665154]
[-181.69564819 16.91299629]
[-167.25576782 21.70303345]
[-160.31420898 35.64765549]
[-146.14483643 40.56993103]
[-131.97544861 45.49220276]
[-117.80607605 50.41447830]
[-103.57572937 55.15759277]
[-89.28666687 59.72079468]
[-74.99761200 64.28399658]
[-67.68798065 63.32728958]
[-60.55770874 68.99595642]
[-46.32735825 73.73906708]
[-32.06737137 78.39231873]
[-17.77831078 82.95552063]
[-3.48925281 87.51872253]
[10.79980659 92.08191681]
[25.08886528 96.64511871]
[39.40642548 101.11808777]
[53.75191879 105.50064850]
[68.09741211 109.88320923]
[73.67732239 104.87176514]
[84.83715057 94.84887695]
[90.41706848 89.83743286]
[87.59519196 75.10525513]
[84.77332306 60.37308121]
[81.95144653 45.64090347]
[79.12957764 30.90872574]
[68.93426514 18.81053162]
[74.13909912 4.85492611]
[71.31723022 -9.87725067]
[68.40247345 -24.59133339]
[65.39495850 -39.28673553]
[51.21241760 -45.58237839]
[43.46814346 -59.02878571]
[45.13996887 -74.45553589]
[55.58504486 -85.93073273]
[70.78701782 -89.04192352]
[84.90042877 -82.59279633]
[92.49838257 -69.06317139]
[90.65930176 -53.65546036]
[80.09036255 -42.29425049]
[83.09787750 -27.59885025]
[87.50703430 -21.69078064]
[86.04940796 -12.69912338]
[88.87127686 2.03305292]
[98.86474609 13.07750225]
[93.86174774 28.08685303]
[96.68362427 42.81903076]
[99.50550079 57.55120468]
[102.32736969 72.28338623]
[105.14924622 87.01555634]
[113.12422943 74.31124115]
[127.88272858 71.63046265]
[139.81616211 80.71854401]
[141.15519714 95.65865326]
[131.02806091 106.72396851]
[116.02848053 106.71054077]
[126.99663544 116.94281769]
[137.96478271 127.17510223]
[148.93293762 137.40737915]
[159.90109253 147.63966370]
[170.86924744 157.87194824]
[181.83740234 168.10423279]
[192.80555725 178.33651733]
[203.77371216 188.56880188]
[214.74186707 198.80107117]
[219.77951050 199.96600342]
[223.50660706 202.66567993]
[225.55957031 206.15034485]
[225.92214966 209.63415527]
[236.49523926 220.27415466]
[247.06832886 230.91415405]
[257.64141846 241.55416870]
[268.21450806 252.19416809]
[278.78759766 262.83416748]
[289.36071777 273.47418213]
[299.93380737 284.11416626]
[310.50689697 294.75418091]
[326.08221436 294.97201538]
[336.65325928 305.91311646]
[336.34960938 320.76043701]
[346.92269897 331.40045166]
[357.49578857 342.04043579]
[368.06887817 352.68045044]
[383.28457642 357.01556396]
[386.76736450 371.49725342]
[397.34045410 382.13726807]
[407.91354370 392.77728271]
[418.48663330 403.41726685]
[429.05972290 414.05728149]
[451.49349976 412.31665039]
[467.60998535 427.61721802]
[467.05026245 449.55429077]
[478.39773560 459.36419678]
[489.74523926 469.17410278]
[501.09274292 478.98397827]
[512.44024658 488.79388428]
[523.26623535 482.77090454]
[535.39215088 480.35476685]
[547.65142822 481.76266479]
[558.86944580 486.84466553]
[567.97589111 495.09954834]
[574.10699463 505.72412109]
[576.68731689 517.69140625]
[575.48388672 529.84985352]
[570.62701416 541.03430176]
[581.59515381 551.26660156]
[592.56329346 561.49890137]
[603.53143311 571.73114014]
[618.90026855 575.48736572]
[622.92858887 589.82690430]
[633.89672852 600.05920410]
[644.86486816 610.29150391]
[655.83306885 620.52374268]
[675.87261963 618.78869629]
[690.47424316 632.17364502]
[690.48437500 651.67541504]
[701.83184814 661.48529053]
[721.79144287 658.99316406]
[736.88909912 671.81591797]
[737.63720703 691.30334473]
[749.34777832 700.67681885]
[764.95672607 703.25994873]
[770.05792236 717.25378418]
[781.76855469 726.62725830]
[797.37744141 729.21038818]
[802.47869873 743.20416260]
[814.18927002 752.57763672]
[825.89990234 761.95111084]
[837.61047363 771.32458496]
[853.28894043 769.33447266]
[865.73120117 779.07958984]
[867.55541992 794.77819824]
[857.67938232 807.11669922]
[841.96228027 808.77484131]
[829.72888184 798.76892090]
[828.23699951 783.03521729]
[816.52642822 773.66174316]
[804.81579590 764.28826904]
[793.10522461 754.91479492]
[778.33392334 753.00207520]
[772.39508057 738.33782959]
[760.68444824 728.96435547]
[745.91320801 727.05169678]
[739.97430420 712.38739014]
[728.26373291 703.01397705]
[718.78369141 706.83843994]
[708.49029541 706.39215088]
[699.23309326 701.68853760]
[692.70288086 693.51184082]
[690.12341309 683.28735352]
[692.02197266 672.83282471]
[680.67443848 663.02288818]
[671.05645752 666.48590088]
[660.78735352 665.65045166]
[651.71478271 660.59985352]
[645.49865723 652.18194580]
[643.30792236 641.86712646]
[645.60076904 631.49194336]
[634.63262939 621.25964355]
[623.66448975 611.02734375]
[612.69628906 600.79504395]
[598.11199951 597.77075195]
[593.29919434 582.69934082]
[582.33099365 572.46704102]
[571.36285400 562.23474121]
[560.39471436 552.00250244]
[544.12432861 559.03051758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 177]
[5 176]
[6 175]
[7 174]
[8 173]
[17 170]
[18 169]
[19 168]
[20 167]
[21 166]
[23 164]
[24 163]
[25 162]
[26 161]
[29 158]
[30 157]
[31 156]
[32 155]
[33 154]
[34 153]
[35 152]
[36 151]
[37 150]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 100]
[49 99]
[50 98]
[52 97]
[53 96]
[54 95]
[55 94]
[56 93]
[58 92]
[59 91]
[60 89]
[61 88]
[62 87]
[65 86]
[66 85]
[67 84]
[68 83]
[71 80]
[72 79]
[73 78]
[103 131]
[104 130]
[105 129]
[106 128]
[107 127]
[109 125]
[110 124]
[111 122]
[112 121]
[186 247]
[187 246]
[188 245]
[189 244]
[191 242]
[192 241]
[193 240]
[194 239]
[197 233]
[198 232]
[201 226]
[202 225]
[204 223]
[205 222]
[207 220]
[208 219]
[209 218]
[210 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
