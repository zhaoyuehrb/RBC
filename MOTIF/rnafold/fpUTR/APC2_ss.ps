%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCGCCGCCUGCCCAGGCCCGGACCGGGCUUUGUCCGCCCCGGAGCCCCUGCCCGCGCCGCGGAGACCCCGGAGCCCGCGCGCUCCGAGGCCACCCCGGGCCGGGAUUUCCGGUGGGGCCCGCGGAGCCGCGCAGAGGGAGGAGGCCCCAGACCCAGGCGCCCCGCCAGCCCAGCUGCACGUAAGCGGACGCUGCAGGAGCUGAAG\
) } def
/len { sequence length } bind def

/coor [
[129.89967346 312.67678833]
[127.43075562 297.88137817]
[124.96183777 283.08596802]
[122.49291992 268.29052734]
[120.02400208 253.49511719]
[117.55507660 238.69969177]
[114.97503662 223.92324829]
[112.28400421 209.16661072]
[109.59297180 194.40997314]
[106.90194702 179.65333557]
[97.00687408 168.52064514]
[102.14286804 153.55627441]
[99.45183563 138.79963684]
[96.76081085 124.04300690]
[89.89250946 121.03028870]
[77.80621338 129.91406250]
[76.15590668 115.00485992]
[69.28761292 111.99214172]
[56.60821533 120.00668335]
[43.92881775 128.02122498]
[31.31001472 136.13084412]
[18.75251770 144.33506775]
[6.19502020 152.53929138]
[-6.36247730 160.74351501]
[-9.72399998 175.95330811]
[-22.57596016 184.09466553]
[-37.05546188 180.79623413]
[-49.61295700 189.00045776]
[-62.17045593 197.20468140]
[-74.72795105 205.40890503]
[-87.28544617 213.61312866]
[-97.23840332 227.33810425]
[-113.18225861 221.57356262]
[-112.05669403 204.65701294]
[-95.48966980 201.05563354]
[-82.93217468 192.85140991]
[-70.37467957 184.64718628]
[-57.81718063 176.44296265]
[-45.25968170 168.23873901]
[-42.46395111 153.65383911]
[-29.84573364 145.15469360]
[-14.56669903 148.18600464]
[-2.00920224 139.98179626]
[10.54829502 131.77757263]
[23.10579300 123.57334137]
[26.98669434 117.28226471]
[35.91427231 115.34183502]
[48.59366989 107.32729340]
[61.27306366 99.31274414]
[66.98726654 85.44379425]
[63.63375473 70.82346344]
[60.28023911 56.20314026]
[55.31073761 48.53691864]
[56.98794937 41.33788300]
[53.85457230 26.66880226]
[50.72119522 11.99972153]
[41.41930008 0.23219168]
[27.87002373 -6.20341921]
[12.08491611 -5.13526726]
[3.90817761 -17.58477402]
[-9.64109898 -24.02038574]
[-23.19037628 -30.45599556]
[-32.28626251 -31.31143379]
[-36.89383316 -37.09152222]
[-50.34484863 -43.73006439]
[-66.66508484 -42.12327576]
[-75.99548340 -55.60940933]
[-68.73771667 -70.31508636]
[-52.35796356 -71.11236572]
[-43.70630646 -57.18107605]
[-30.25529099 -50.54253387]
[-16.75476456 -44.00527191]
[-3.20548820 -37.56966019]
[10.34378910 -31.13405037]
[25.15976143 -32.66252136]
[34.30563354 -19.75269699]
[47.85491180 -13.31708527]
[51.10944366 -22.86861229]
[57.69519043 -29.62742805]
[65.93828583 -32.66239166]
[67.28929138 -47.60142899]
[68.64029694 -62.54046249]
[69.99130249 -77.47949982]
[71.34230804 -92.41853333]
[72.58100128 -107.36730194]
[73.70730591 -122.32495880]
[74.83361053 -137.28260803]
[75.95991516 -152.24026489]
[77.08621979 -167.19792175]
[68.71935272 -183.60067749]
[79.16642761 -197.70040894]
[80.06777954 -212.67330933]
[80.96912384 -227.64619446]
[81.87047577 -242.61909485]
[79.26209259 -251.37484741]
[82.89957428 -257.80975342]
[84.02587891 -272.76739502]
[85.03973389 -287.73309326]
[85.94107819 -302.70599365]
[86.84243011 -317.67889404]
[87.74378204 -332.65179443]
[88.64512634 -347.62466431]
[76.57719421 -357.37887573]
[72.57992554 -372.37225342]
[78.19036102 -386.83956909]
[91.25116730 -395.21780396]
[106.74020386 -394.28536987]
[118.70161438 -384.40081787]
[122.53599548 -369.36495972]
[116.76895142 -354.95938110]
[103.61802673 -346.72332764]
[102.71667480 -331.75042725]
[101.81532288 -316.77752686]
[100.91397858 -301.80465698]
[100.01262665 -286.83175659]
[102.74898529 -279.96505737]
[98.98352814 -271.64108276]
[97.85722351 -256.68344116]
[96.84336853 -241.71774292]
[95.94202423 -226.74484253]
[95.04067230 -211.77195740]
[94.13932037 -196.79905701]
[101.92651367 -187.54109192]
[101.29714203 -175.05860901]
[92.04387665 -166.07160950]
[90.91757202 -151.11396790]
[89.79126740 -136.15631104]
[88.66496277 -121.19865417]
[87.53865814 -106.24099731]
[90.17149353 -99.33394623]
[86.28134918 -91.06752777]
[84.93034363 -76.12849426]
[83.57933807 -61.18945694]
[82.22833252 -46.25041962]
[80.87732697 -31.31138611]
[91.04999542 -21.28287697]
[91.91624451 -6.20035458]
[81.93208313 6.21288681]
[65.39027405 8.86634445]
[68.52365112 23.53542519]
[71.65702820 38.20450592]
[74.90056610 52.84962463]
[78.25408173 67.46994781]
[81.60759735 82.09027863]
[98.59489441 50.89107895]
[149.02362061 46.47006607]
[164.00286865 45.68127441]
[178.98211670 44.89248276]
[193.95500183 43.99113464]
[208.92070007 42.97727585]
[217.05769348 29.76482201]
[231.41952515 23.88966942]
[246.48377991 27.61093712]
[256.45794678 39.49772263]
[257.50674438 54.97931290]
[249.22691345 68.10272217]
[234.80218506 73.82173157]
[219.77919006 69.93726349]
[209.93455505 57.94297409]
[194.96885681 58.95682907]
[188.50680542 62.54584122]
[179.77090454 59.87172699]
[164.79165649 60.66052246]
[149.81240845 61.44931412]
[148.13565063 68.75947571]
[144.78213501 83.37979889]
[143.10539246 90.68996429]
[156.24346924 97.92812347]
[165.27151489 99.32859039]
[169.52342224 105.37509918]
[182.55122375 112.80991364]
[195.57902527 120.24473572]
[212.33251953 122.84410858]
[214.47256470 139.66244507]
[198.90391541 146.37463379]
[188.14421082 133.27253723]
[175.11640930 125.83771515]
[162.08860779 118.40289307]
[149.00531006 111.06620026]
[135.86723328 103.82804108]
[129.77978516 108.20902252]
[117.60488892 116.97099304]
[111.51744843 121.35197449]
[114.20847321 136.10861206]
[116.89950562 150.86524963]
[126.98705292 163.05343628]
[121.65858459 176.96231079]
[124.34960938 191.71894836]
[127.04064178 206.47558594]
[129.73167419 221.23222351]
[134.35054016 229.11466980]
[132.35049438 236.23077393]
[134.81941223 251.02619934]
[137.28833008 265.82162476]
[139.75726318 280.61703491]
[142.22618103 295.41244507]
[144.69509888 310.20788574]
[159.36347961 314.42706299]
[170.74287415 324.59915161]
[176.57391357 338.70455933]
[175.69882202 353.94256592]
[168.29136658 367.28768921]
[155.82229614 376.09024048]
[140.76734924 378.60244751]
[126.11569214 374.32556152]
[114.77643585 364.10870361]
[109.00099182 349.98046875]
[109.93608093 334.74603271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[6 192]
[7 190]
[8 189]
[9 188]
[10 187]
[12 185]
[13 184]
[14 183]
[18 49]
[19 48]
[20 47]
[21 45]
[22 44]
[23 43]
[24 42]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[50 144]
[51 143]
[52 142]
[54 141]
[55 140]
[56 139]
[57 77]
[58 76]
[60 74]
[61 73]
[62 72]
[64 71]
[65 70]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[91 122]
[92 121]
[93 120]
[94 119]
[96 118]
[97 117]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
[146 164]
[147 163]
[148 162]
[149 160]
[150 159]
[167 180]
[168 179]
[170 178]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
