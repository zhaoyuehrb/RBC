%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCUUCGCCCAGCCGGCGAGGAGGAGGACCCGCUGGCAGUCUCCUCCCAGGUGGGGAGCGUGGAGCCUGUCACUGCAGCCUGGCGGCCUGAGCGCCGAGCCUGGGGCUGGGGCCGCGGUGCUGAGGACGCAAAUCAGCCCCGUAGCUGGGUGGAGCCUCCGGGCCUGACGUGGACCUUCACUGGAGAAGUGACUCAGGGAUCCUCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[17.64920235 304.23016357]
[17.42797279 289.23178101]
[17.20674133 274.23342896]
[9.85492611 272.74990845]
[-12.20051956 268.29937744]
[-18.22061920 282.03829956]
[-24.24071693 295.77725220]
[-30.26081657 309.51617432]
[-36.28091431 323.25512695]
[-42.30101395 336.99404907]
[-48.32111359 350.73300171]
[-43.84633255 366.13934326]
[-53.21884918 379.15994263]
[-69.24887085 379.80645752]
[-79.63953400 367.58297729]
[-76.42001343 351.86627197]
[-62.06005096 344.71289062]
[-56.03995132 330.97396851]
[-50.01985168 317.23501587]
[-43.99975586 303.49609375]
[-37.97965622 289.75714111]
[-31.95955658 276.01821899]
[-25.93945694 262.27926636]
[-0.52037346 247.47860718]
[19.94791222 254.79830933]
[24.30879784 240.44621277]
[28.66968346 226.09411621]
[33.03057098 211.74201965]
[37.39145660 197.38992310]
[41.75234222 183.03782654]
[46.00726700 168.65396118]
[50.15600204 154.23912048]
[54.30474091 139.82426453]
[53.48760986 110.82024384]
[66.27535248 91.03853607]
[83.84696198 85.01178741]
[96.98751068 91.33238983]
[93.91213226 76.65103912]
[89.09043884 68.89472198]
[90.90134430 61.73054504]
[88.04282379 47.00543213]
[77.81745148 34.93264389]
[82.98755646 20.96413040]
[80.12903595 6.23901939]
[77.27052307 -8.48609161]
[74.41201019 -23.21120262]
[64.18663025 -35.28399277]
[69.35673523 -49.25250626]
[66.49822235 -63.97761536]
[63.63970184 -78.70272827]
[60.78118896 -93.42784119]
[57.92267227 -108.15294647]
[47.69729996 -120.22573853]
[52.86739731 -134.19425964]
[50.00888443 -148.91935730]
[47.04185486 -163.62300110]
[43.96647263 -178.30435181]
[40.89109421 -192.98568726]
[36.06939697 -200.74201965]
[37.88030243 -207.90618896]
[35.02178955 -222.63130188]
[30.31501198 -230.45788574]
[32.23138428 -237.59457397]
[29.59035683 -252.36024475]
[26.94932747 -267.12591553]
[12.59880447 -272.41833496]
[2.88823152 -284.10601807]
[0.34848148 -298.98605347]
[5.56292820 -313.04541016]
[17.03726768 -322.54306030]
[14.39624023 -337.30871582]
[11.75521278 -352.07440186]
[9.11418533 -366.84005737]
[4.52335358 -374.73522949]
[6.54477358 -381.84286499]
[4.12180805 -396.64587402]
[-0.35208055 -404.60787964]
[1.77394855 -411.68493652]
[-0.43042797 -426.52209473]
[-2.63480449 -441.35922241]
[-4.83918095 -456.19638062]
[-7.15291500 -471.01684570]
[-9.57588100 -485.81985474]
[-11.99884605 -500.62286377]
[-16.47273445 -508.58489990]
[-14.34670544 -515.66192627]
[-16.55108261 -530.49908447]
[-18.75545883 -545.33624268]
[-20.95983505 -560.17333984]
[-23.16421127 -575.01049805]
[-25.36858749 -589.84765625]
[-35.04993439 -602.36090088]
[-29.26701927 -616.08709717]
[-31.47139740 -630.92419434]
[-33.67577362 -645.76135254]
[-43.35711670 -658.27465820]
[-37.57420349 -672.00079346]
[-39.77857971 -686.83795166]
[-41.98295593 -701.67504883]
[-52.59881592 -714.17449951]
[-46.82786942 -729.52465820]
[-30.60677338 -731.93469238]
[-20.62240028 -718.92529297]
[-27.14581680 -703.87945557]
[-24.94144058 -689.04229736]
[-22.73706436 -674.20513916]
[-13.21339035 -662.75311279]
[-18.83863258 -647.96575928]
[-16.63425636 -633.12860107]
[-14.42988014 -618.29144287]
[-4.90620613 -606.83941650]
[-10.53144836 -592.05200195]
[-8.32707214 -577.21490479]
[-6.12269545 -562.37774658]
[-3.91831875 -547.54058838]
[-1.71394229 -532.70349121]
[0.49043420 -517.86633301]
[2.80416822 -503.04583740]
[5.22713375 -488.24282837]
[7.65009928 -473.43981934]
[11.83208942 -467.34753418]
[9.99795914 -458.40075684]
[12.20233536 -443.56359863]
[14.40671158 -428.72647095]
[16.61108780 -413.88931274]
[18.92482185 -399.06884766]
[21.34778786 -384.26583862]
[23.87985420 -369.48107910]
[26.52088165 -354.71542358]
[29.16190910 -339.94973755]
[31.80293655 -325.18408203]
[45.85808563 -320.25271606]
[55.62271500 -308.87255859]
[58.39839172 -294.03469849]
[53.34124374 -279.70562744]
[41.71499634 -269.76693726]
[44.35602570 -255.00128174]
[46.99705124 -240.23561096]
[49.74689865 -225.48982239]
[52.60541534 -210.76470947]
[55.57244110 -196.06108093]
[58.64782333 -181.37973022]
[61.72320557 -166.69837952]
[66.17058563 -160.79705811]
[64.73399353 -151.77787781]
[67.59250641 -137.05276489]
[77.61342621 -126.03321838]
[72.64778137 -111.01146698]
[75.50630188 -96.28635406]
[78.36481476 -81.56124115]
[81.22332764 -66.83613586]
[84.08184814 -52.11102295]
[94.10276031 -41.09146881]
[89.13711548 -26.06971741]
[91.99563599 -11.34460735]
[94.85414886 3.38050389]
[97.71266174 18.10561562]
[107.73358154 29.12516785]
[102.76793671 44.14691925]
[105.62644958 58.87202835]
[108.59348297 73.57566071]
[111.66886139 88.25701141]
[121.59020233 99.50720978]
[135.77177429 104.39421844]
[149.95335388 109.28122711]
[164.17059326 114.06352234]
[178.42269897 118.74083710]
[192.41062927 111.38465881]
[207.47819519 116.15373230]
[214.68606567 130.21865845]
[209.75796509 145.23495483]
[195.61761475 152.29373169]
[180.65426636 147.20713806]
[173.74537659 132.99295044]
[159.49327087 128.31562805]
[152.15888977 129.21652222]
[145.06634521 123.46280670]
[130.88476562 118.57579803]
[116.70319366 113.68878937]
[108.63592529 126.33470917]
[119.04518890 137.13504028]
[129.45445251 147.93537903]
[139.86370850 158.73571777]
[150.27296448 169.53605652]
[166.22222900 171.26824951]
[174.69010925 184.89450073]
[169.18077087 199.96191406]
[153.92050171 204.91204834]
[140.61569214 195.94760132]
[139.47262573 179.94531250]
[129.06336975 169.14497375]
[118.65410614 158.34463501]
[108.24485016 147.54431152]
[97.83558655 136.74397278]
[90.55658722 138.55122375]
[94.17086029 153.10928345]
[79.61274719 156.72331238]
[75.99858856 142.16574097]
[68.71958923 143.97299194]
[64.57085419 158.38784790]
[60.42211914 172.80270386]
[61.05597305 181.91354370]
[56.10443878 187.39871216]
[51.74355316 201.75080872]
[47.38266754 216.10290527]
[43.02178192 230.45501709]
[38.66089630 244.80711365]
[34.30001068 259.15921021]
[32.20510864 274.01220703]
[32.42634201 289.01055908]
[32.64757156 304.00894165]
[35.12220383 323.23199463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 211]
[2 210]
[3 209]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[25 208]
[26 207]
[27 206]
[28 205]
[29 204]
[30 203]
[31 201]
[32 200]
[33 199]
[37 162]
[38 161]
[40 160]
[41 159]
[43 157]
[44 156]
[45 155]
[46 154]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[54 146]
[55 145]
[56 143]
[57 142]
[58 141]
[60 140]
[61 139]
[63 138]
[64 137]
[65 136]
[70 131]
[71 130]
[72 129]
[73 128]
[75 127]
[76 126]
[78 125]
[79 124]
[80 123]
[81 122]
[82 120]
[83 119]
[84 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[93 110]
[94 109]
[95 108]
[97 106]
[98 105]
[99 104]
[163 179]
[164 178]
[165 177]
[166 175]
[167 174]
[180 194]
[181 193]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
