%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COQ7)
} def

/sequence { (\
AUCAGUCCGAGCCAAGGGCACUAUUGGCCAGUUCCGUUCAACGAAGUGGUUGCUUUUUUUAGUUCCGGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.003636112 ubox
2 10 0.041854062 ubox
2 23 0.004133795 ubox
2 27 0.003449538 ubox
2 68 0.004444157 ubox
3 9 0.044708119 ubox
3 26 0.012500227 ubox
3 67 0.005975016 ubox
4 22 0.015921441 ubox
4 25 0.012464445 ubox
5 19 0.060489148 ubox
5 21 0.016661237 ubox
5 24 0.011097228 ubox
5 69 0.970712765 ubox
6 18 0.060477117 ubox
6 20 0.016548334 ubox
6 23 0.010758052 ubox
6 68 0.934214812 ubox
7 17 0.060619718 ubox
7 18 0.016392658 ubox
7 27 0.003258312 ubox
7 67 0.932171684 ubox
7 68 0.311364555 ubox
8 16 0.060623977 ubox
8 17 0.016397955 ubox
8 26 0.004115410 ubox
8 67 0.313731877 ubox
9 25 0.004141403 ubox
9 34 0.003901223 ubox
9 64 0.006533564 ubox
9 65 0.958893439 ubox
9 66 0.227382041 ubox
10 24 0.004140333 ubox
10 33 0.003983967 ubox
10 59 0.004218810 ubox
10 60 0.004570431 ubox
10 63 0.010054755 ubox
10 64 0.983825167 ubox
11 19 0.060881771 ubox
11 28 0.017592196 ubox
11 32 0.003911140 ubox
11 58 0.004258015 ubox
11 59 0.005205273 ubox
11 63 0.983696658 ubox
11 69 0.147207927 ubox
12 18 0.060962367 ubox
12 27 0.021071136 ubox
12 31 0.003909471 ubox
12 62 0.982430187 ubox
12 68 0.147359358 ubox
13 17 0.060538487 ubox
13 26 0.026067712 ubox
13 67 0.146859782 ubox
14 25 0.025986814 ubox
14 55 0.003791201 ubox
14 56 0.028013738 ubox
14 57 0.750852855 ubox
14 58 0.242101585 ubox
14 59 0.142183411 ubox
14 60 0.400251876 ubox
15 22 0.021274614 ubox
15 24 0.024529580 ubox
15 54 0.003201598 ubox
15 55 0.028589457 ubox
15 56 0.847105876 ubox
15 57 0.215043617 ubox
15 58 0.135173333 ubox
15 59 0.378927525 ubox
15 60 0.029988745 ubox
16 21 0.022662757 ubox
16 22 0.005517994 ubox
16 29 0.009022436 ubox
16 54 0.025840154 ubox
16 55 0.905548976 ubox
16 56 0.173832095 ubox
16 57 0.099359006 ubox
16 58 0.287714017 ubox
16 59 0.026425798 ubox
16 60 0.013370438 ubox
16 65 0.014764605 ubox
16 66 0.112815182 ubox
17 21 0.005909168 ubox
17 28 0.009046641 ubox
17 29 0.006976024 ubox
17 53 0.019734159 ubox
17 54 0.965691476 ubox
17 55 0.124413489 ubox
17 56 0.038475794 ubox
17 57 0.124377421 ubox
17 58 0.015260214 ubox
17 59 0.010385040 ubox
17 64 0.014546045 ubox
17 65 0.113308373 ubox
17 66 0.068029692 ubox
18 28 0.007026066 ubox
18 53 0.983314306 ubox
18 54 0.017823210 ubox
18 55 0.010409215 ubox
18 56 0.057853584 ubox
18 57 0.010809899 ubox
18 58 0.008676799 ubox
18 63 0.014492421 ubox
18 64 0.110596907 ubox
18 65 0.068169043 ubox
19 26 0.013231917 ubox
19 27 0.006972596 ubox
19 52 0.983437531 ubox
19 62 0.014945840 ubox
20 25 0.013813018 ubox
20 32 0.003462684 ubox
20 50 0.057460230 ubox
20 51 0.903863626 ubox
20 63 0.131326695 ubox
21 27 0.018272682 ubox
21 31 0.003531616 ubox
21 49 0.080773604 ubox
21 62 0.132844395 ubox
22 26 0.017872145 ubox
22 30 0.003440275 ubox
22 48 0.080526041 ubox
22 52 0.019690716 ubox
22 61 0.132626396 ubox
23 47 0.080301975 ubox
23 50 0.017077571 ubox
23 51 0.027672185 ubox
23 60 0.129969367 ubox
24 41 0.004844803 ubox
24 44 0.007883448 ubox
24 46 0.079571763 ubox
24 49 0.004591274 ubox
24 62 0.003230184 ubox
25 36 0.014263561 ubox
25 40 0.008498220 ubox
25 43 0.011266661 ubox
25 44 0.003177647 ubox
25 45 0.075000542 ubox
25 52 0.078706207 ubox
25 61 0.003324750 ubox
25 67 0.003874759 ubox
26 34 0.003471312 ubox
26 35 0.018948470 ubox
26 38 0.008163356 ubox
26 39 0.009014905 ubox
26 42 0.013582004 ubox
26 51 0.397178118 ubox
26 54 0.032743363 ubox
26 55 0.016806085 ubox
26 56 0.012420313 ubox
26 57 0.034079213 ubox
26 58 0.010261433 ubox
26 59 0.005171038 ubox
26 66 0.004333415 ubox
27 34 0.018816752 ubox
27 37 0.010061837 ubox
27 38 0.006739343 ubox
27 47 0.003554046 ubox
27 50 0.992345422 ubox
27 53 0.030792003 ubox
27 54 0.005010078 ubox
27 55 0.004164298 ubox
27 56 0.010174114 ubox
27 57 0.003287656 ubox
27 65 0.003836824 ubox
27 69 0.004613811 ubox
28 36 0.011262088 ubox
28 46 0.003839148 ubox
28 49 0.996178657 ubox
28 52 0.022773666 ubox
28 68 0.004631398 ubox
29 48 0.996592677 ubox
29 67 0.004617122 ubox
30 38 0.003454816 ubox
30 47 0.994610898 ubox
30 54 0.006251449 ubox
31 37 0.003255117 ubox
31 42 0.068569131 ubox
31 47 0.003593713 ubox
31 53 0.006577746 ubox
32 41 0.068428638 ubox
32 44 0.004664559 ubox
32 45 0.985646834 ubox
32 46 0.037514432 ubox
32 52 0.006460110 ubox
33 40 0.061683432 ubox
33 43 0.003183176 ubox
33 44 0.991934887 ubox
33 45 0.039561718 ubox
34 43 0.875114059 ubox
34 49 0.007724329 ubox
35 43 0.476029098 ubox
35 48 0.007730898 ubox
36 42 0.665626837 ubox
36 47 0.006911728 ubox
37 41 0.599969066 ubox
37 45 0.005029301 ubox
37 46 0.004752807 ubox
38 44 0.005325737 ubox
38 45 0.004408553 ubox
39 43 0.004978123 ubox
39 52 0.008148276 ubox
40 51 0.008467882 ubox
41 50 0.008552712 ubox
42 49 0.008561430 ubox
43 56 0.005254552 ubox
44 55 0.006299736 ubox
45 54 0.006540868 ubox
46 53 0.006584558 ubox
47 52 0.006313790 ubox
48 66 0.008324613 ubox
49 65 0.009361494 ubox
51 70 0.026501216 ubox
52 63 0.061455528 ubox
52 69 0.045573145 ubox
53 62 0.065635400 ubox
53 68 0.045604812 ubox
54 61 0.064650774 ubox
54 62 0.003274833 ubox
54 67 0.043397883 ubox
55 61 0.006291118 ubox
55 62 0.008899345 ubox
56 61 0.010087014 ubox
57 61 0.003983733 ubox
62 69 0.010261870 ubox
63 68 0.009780374 ubox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
14 57 0.9500000 lbox
15 56 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
18 53 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
showpage
end
%%EOF
