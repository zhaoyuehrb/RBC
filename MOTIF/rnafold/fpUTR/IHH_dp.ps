%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IHH)
} def

/sequence { (\
AUCAGCCCACCAGGAGACCUCGCCCGCCGCUCCCCCGGGCUCCCCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 15 0.005409297 ubox
2 17 0.027742372 ubox
2 47 0.060889012 ubox
3 13 0.003403457 ubox
3 14 0.005636982 ubox
3 16 0.030327347 ubox
3 46 0.082582021 ubox
4 20 0.006295846 ubox
4 31 0.061068777 ubox
4 41 0.501673580 ubox
5 19 0.006704360 ubox
5 23 0.013177684 ubox
5 27 0.041348652 ubox
5 30 0.065269762 ubox
5 40 0.535603107 ubox
5 48 0.632149526 ubox
6 14 0.038381551 ubox
6 22 0.013192791 ubox
6 26 0.041390559 ubox
6 29 0.065183822 ubox
6 39 0.535745171 ubox
6 47 0.631543170 ubox
7 13 0.038390522 ubox
7 14 0.072132901 ubox
7 38 0.535709207 ubox
7 39 0.004888498 ubox
7 46 0.628453038 ubox
7 47 0.066559527 ubox
8 13 0.075474092 ubox
8 37 0.534912277 ubox
8 38 0.006698724 ubox
8 46 0.080570738 ubox
10 38 0.012600397 ubox
10 39 0.003881832 ubox
10 47 0.472395470 ubox
11 37 0.013820921 ubox
11 38 0.003875269 ubox
11 46 0.474451141 ubox
12 20 0.154752800 ubox
12 41 0.006993854 ubox
13 19 0.165038848 ubox
13 20 0.032235150 ubox
13 21 0.028773243 ubox
13 24 0.039410803 ubox
13 25 0.033254198 ubox
13 28 0.012026878 ubox
13 32 0.004217450 ubox
13 33 0.582525159 ubox
13 34 0.076439242 ubox
13 35 0.044419991 ubox
13 36 0.013600529 ubox
13 41 0.003474891 ubox
13 42 0.012910179 ubox
13 43 0.394119199 ubox
13 44 0.476313964 ubox
13 45 0.470338672 ubox
13 49 0.022505854 ubox
14 18 0.162424035 ubox
14 19 0.035925246 ubox
14 20 0.023501261 ubox
14 21 0.071539407 ubox
14 23 0.039538044 ubox
14 24 0.033090017 ubox
14 27 0.012008228 ubox
14 32 0.583797821 ubox
14 33 0.074013077 ubox
14 34 0.044586213 ubox
14 35 0.013314024 ubox
14 41 0.011686847 ubox
14 42 0.395287648 ubox
14 43 0.476425573 ubox
14 44 0.469818868 ubox
14 48 0.022683069 ubox
15 20 0.067199704 ubox
15 31 0.583907948 ubox
15 41 0.394635423 ubox
16 30 0.579432067 ubox
16 32 0.084364348 ubox
16 40 0.253630738 ubox
16 42 0.666201770 ubox
17 31 0.083505931 ubox
17 41 0.662693183 ubox
18 38 0.049219960 ubox
18 39 0.188884107 ubox
18 47 0.025376947 ubox
19 37 0.049512885 ubox
19 38 0.187606583 ubox
19 39 0.048368768 ubox
19 46 0.025457156 ubox
20 37 0.120215159 ubox
20 38 0.050039004 ubox
20 47 0.003685844 ubox
21 29 0.298240832 ubox
21 37 0.147378140 ubox
21 46 0.005249317 ubox
22 28 0.292463222 ubox
22 30 0.132300744 ubox
22 36 0.141797805 ubox
22 40 0.756439657 ubox
22 45 0.003856605 ubox
22 48 0.036787083 ubox
23 29 0.136112237 ubox
23 39 0.773045065 ubox
23 47 0.035810382 ubox
24 37 0.003685465 ubox
24 38 0.773092520 ubox
24 39 0.005274198 ubox
24 46 0.034671865 ubox
24 47 0.012566522 ubox
25 37 0.773076407 ubox
25 38 0.004913428 ubox
25 46 0.015338913 ubox
26 36 0.752882069 ubox
26 40 0.021102323 ubox
26 45 0.017473760 ubox
26 48 0.020277494 ubox
27 38 0.020544612 ubox
27 39 0.021199450 ubox
27 47 0.020272122 ubox
28 37 0.026857359 ubox
28 38 0.020841554 ubox
28 46 0.020212935 ubox
29 36 0.032827575 ubox
29 40 0.041236898 ubox
29 45 0.011818961 ubox
29 48 0.005255772 ubox
30 39 0.041992541 ubox
30 47 0.004092626 ubox
31 38 0.040673003 ubox
31 39 0.006548695 ubox
32 37 0.040428921 ubox
32 38 0.013031288 ubox
32 39 0.006720335 ubox
33 37 0.013175205 ubox
33 38 0.006730899 ubox
33 39 0.004509893 ubox
34 38 0.004499204 ubox
34 47 0.017532851 ubox
35 46 0.012997209 ubox
35 47 0.263275017 ubox
36 46 0.266233281 ubox
37 44 0.008237994 ubox
37 45 0.268143273 ubox
38 43 0.008557064 ubox
38 44 0.268129977 ubox
38 45 0.003752309 ubox
38 49 0.009538226 ubox
39 43 0.263797617 ubox
39 44 0.003977900 ubox
39 48 0.011996656 ubox
40 47 0.012225948 ubox
41 46 0.011620516 ubox
41 47 0.010114213 ubox
42 46 0.024606322 ubox
4 41 0.9500000 lbox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
7 38 0.9500000 lbox
8 37 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
showpage
end
%%EOF
