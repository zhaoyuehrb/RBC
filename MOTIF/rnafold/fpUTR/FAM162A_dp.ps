%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM162A)
} def

/sequence { (\
CUUCCCACUCCAACGCUGGGUGACAUUGAGCUCACCAGCGCCACCGUCCCCGGCGAAGUUCUGCGCUGGUCGGCGGAGUAGCAAGUGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 78 0.005766488 ubox
1 81 0.008112857 ubox
1 85 0.055593934 ubox
1 88 0.006207435 ubox
2 77 0.005415073 ubox
2 78 0.010493648 ubox
2 80 0.008332443 ubox
2 84 0.056076922 ubox
2 85 0.003686896 ubox
2 87 0.005490912 ubox
3 12 0.003530473 ubox
3 29 0.005218265 ubox
3 76 0.004606829 ubox
3 77 0.013274750 ubox
3 80 0.004260846 ubox
3 83 0.052612940 ubox
3 84 0.004170781 ubox
3 88 0.004157985 ubox
4 20 0.008259755 ubox
4 28 0.005460113 ubox
4 75 0.004539813 ubox
4 76 0.013664401 ubox
4 87 0.003580573 ubox
4 88 0.055004493 ubox
5 19 0.008359905 ubox
5 75 0.013619912 ubox
5 87 0.040139874 ubox
5 88 0.977470007 ubox
6 18 0.008370204 ubox
6 22 0.059383235 ubox
6 87 0.986629870 ubox
7 17 0.007649706 ubox
7 21 0.059539961 ubox
7 59 0.005827413 ubox
7 79 0.099939235 ubox
7 86 0.986956587 ubox
8 20 0.059163672 ubox
8 58 0.006346046 ubox
8 78 0.105365734 ubox
8 81 0.004442463 ubox
8 85 0.986659200 ubox
9 19 0.017760908 ubox
9 20 0.009963657 ubox
9 56 0.008512854 ubox
9 57 0.006962074 ubox
9 77 0.106796730 ubox
9 80 0.005637129 ubox
9 84 0.931703705 ubox
10 18 0.017113874 ubox
10 19 0.061257201 ubox
10 55 0.009841366 ubox
10 76 0.107080176 ubox
10 88 0.029830218 ubox
11 18 0.063480318 ubox
11 63 0.007071181 ubox
11 75 0.106025410 ubox
11 87 0.030180763 ubox
12 17 0.057376228 ubox
12 60 0.014602334 ubox
12 62 0.006745856 ubox
12 86 0.026900784 ubox
13 59 0.016690093 ubox
13 79 0.079402510 ubox
13 86 0.005222964 ubox
14 40 0.708626649 ubox
14 55 0.638581062 ubox
14 58 0.013353544 ubox
14 72 0.003296723 ubox
14 75 0.003971985 ubox
14 78 0.077956563 ubox
14 85 0.007078245 ubox
14 87 0.004521782 ubox
15 31 0.005808378 ubox
15 39 0.754856321 ubox
15 41 0.006532504 ubox
15 54 0.651369910 ubox
15 74 0.005162263 ubox
15 79 0.006082776 ubox
15 82 0.021041398 ubox
15 86 0.004537421 ubox
16 30 0.005822128 ubox
16 38 0.754962872 ubox
16 40 0.006509977 ubox
16 53 0.651401525 ubox
16 73 0.005162540 ubox
16 78 0.006196538 ubox
16 81 0.021064241 ubox
16 85 0.004552614 ubox
17 29 0.005820722 ubox
17 34 0.007410806 ubox
17 37 0.744457348 ubox
17 52 0.650914391 ubox
17 72 0.005035285 ubox
17 77 0.006024485 ubox
17 80 0.020432999 ubox
17 84 0.004393191 ubox
18 24 0.003355775 ubox
18 33 0.010742594 ubox
18 36 0.613854062 ubox
18 51 0.651384139 ubox
18 71 0.004118646 ubox
18 79 0.013363477 ubox
19 27 0.005650033 ubox
19 32 0.014862889 ubox
19 35 0.446192224 ubox
19 36 0.440835668 ubox
19 50 0.651400747 ubox
20 26 0.005656992 ubox
20 31 0.042372090 ubox
20 35 0.610003636 ubox
20 49 0.651320014 ubox
20 82 0.010506630 ubox
21 25 0.005246447 ubox
21 30 0.042309415 ubox
21 34 0.741279850 ubox
21 81 0.010255163 ubox
21 83 0.014000534 ubox
22 33 0.750206522 ubox
22 48 0.651213483 ubox
22 82 0.015470602 ubox
23 32 0.738126385 ubox
23 47 0.651186756 ubox
23 79 0.009087662 ubox
23 86 0.003759810 ubox
24 46 0.649861370 ubox
24 78 0.009983622 ubox
24 85 0.003789504 ubox
24 87 0.007887911 ubox
25 79 0.016578026 ubox
25 86 0.007876439 ubox
26 76 0.003800815 ubox
26 77 0.007992520 ubox
26 78 0.016795030 ubox
26 84 0.004126177 ubox
26 85 0.007654822 ubox
27 34 0.009690428 ubox
27 43 0.602176576 ubox
27 76 0.007796170 ubox
27 77 0.016293257 ubox
27 83 0.004620265 ubox
27 84 0.007299840 ubox
28 33 0.009843437 ubox
28 42 0.614771933 ubox
28 45 0.007981260 ubox
28 82 0.004955129 ubox
30 39 0.513672252 ubox
30 41 0.400059633 ubox
30 74 0.026263595 ubox
30 79 0.005386340 ubox
30 82 0.006502698 ubox
30 89 0.055832902 ubox
31 38 0.513623253 ubox
31 40 0.399983585 ubox
31 73 0.026295374 ubox
31 78 0.005423253 ubox
31 81 0.006511456 ubox
31 88 0.055625752 ubox
32 37 0.469469758 ubox
32 72 0.025638704 ubox
32 77 0.005420408 ubox
32 80 0.006470232 ubox
32 87 0.008765756 ubox
32 88 0.011339721 ubox
33 72 0.004479600 ubox
33 76 0.005395452 ubox
33 87 0.056660564 ubox
34 70 0.027228202 ubox
34 86 0.057296802 ubox
35 69 0.027746280 ubox
35 85 0.057261389 ubox
36 68 0.027762079 ubox
37 67 0.027765501 ubox
38 66 0.027773095 ubox
38 79 0.020898198 ubox
38 82 0.063505922 ubox
39 65 0.027772782 ubox
39 78 0.022679227 ubox
39 81 0.063538690 ubox
40 45 0.004631061 ubox
40 54 0.007924378 ubox
40 64 0.027790588 ubox
40 74 0.009016885 ubox
40 79 0.067711543 ubox
40 82 0.178269942 ubox
40 89 0.080725550 ubox
41 53 0.008112924 ubox
41 63 0.027672994 ubox
41 73 0.009009583 ubox
41 76 0.480788504 ubox
41 78 0.105375310 ubox
41 81 0.182907068 ubox
41 88 0.084912536 ubox
42 52 0.008110000 ubox
42 72 0.008710413 ubox
42 75 0.482344525 ubox
42 87 0.084947007 ubox
43 59 0.025190130 ubox
43 70 0.004981186 ubox
43 79 0.075295122 ubox
43 86 0.084392576 ubox
44 53 0.017458296 ubox
44 58 0.025197003 ubox
44 69 0.004640146 ubox
44 73 0.492832201 ubox
44 76 0.566965156 ubox
44 78 0.044301513 ubox
44 85 0.052762719 ubox
45 52 0.018155773 ubox
45 55 0.036311436 ubox
45 68 0.004491670 ubox
45 72 0.493357298 ubox
45 75 0.572094368 ubox
46 51 0.017640191 ubox
46 54 0.036883309 ubox
46 70 0.003617367 ubox
46 71 0.492272839 ubox
46 74 0.573251156 ubox
46 79 0.003968311 ubox
46 82 0.012970123 ubox
47 53 0.036815055 ubox
47 56 0.003989825 ubox
47 69 0.005703374 ubox
47 73 0.552670964 ubox
47 77 0.035998118 ubox
47 81 0.009852907 ubox
48 52 0.035528803 ubox
48 55 0.004031606 ubox
48 68 0.004510253 ubox
48 69 0.130988577 ubox
48 72 0.547857655 ubox
48 73 0.150984533 ubox
48 76 0.038108978 ubox
49 68 0.125436305 ubox
49 69 0.064051079 ubox
49 72 0.151157665 ubox
49 75 0.038107313 ubox
50 68 0.047055406 ubox
50 69 0.741126135 ubox
50 73 0.037663935 ubox
50 76 0.003771487 ubox
51 65 0.011849057 ubox
51 68 0.744484529 ubox
51 72 0.037686230 ubox
51 75 0.003780780 ubox
52 64 0.010976985 ubox
52 67 0.753440001 ubox
52 71 0.037669188 ubox
52 74 0.003786358 ubox
53 64 0.041784204 ubox
53 66 0.755378866 ubox
53 70 0.037552512 ubox
54 63 0.042115072 ubox
54 65 0.755368963 ubox
54 69 0.037481887 ubox
54 72 0.003796503 ubox
55 61 0.027143135 ubox
55 62 0.033827813 ubox
55 64 0.752969704 ubox
55 71 0.003811198 ubox
56 60 0.025828353 ubox
56 70 0.003690646 ubox
57 67 0.033699410 ubox
58 64 0.078811148 ubox
58 66 0.034265526 ubox
58 79 0.039878748 ubox
58 82 0.605527789 ubox
58 89 0.012393115 ubox
59 63 0.074401721 ubox
59 65 0.033382140 ubox
59 78 0.086199815 ubox
59 81 0.605178788 ubox
59 84 0.008659592 ubox
59 88 0.012238361 ubox
60 77 0.115476907 ubox
60 80 0.575665371 ubox
60 83 0.016877108 ubox
60 87 0.010012744 ubox
61 76 0.118262868 ubox
61 78 0.609138712 ubox
61 81 0.048010179 ubox
61 85 0.012651565 ubox
61 88 0.010723224 ubox
62 75 0.118090197 ubox
62 77 0.607538120 ubox
62 80 0.049076147 ubox
62 83 0.010711782 ubox
62 84 0.013767897 ubox
62 87 0.010894223 ubox
63 70 0.003648227 ubox
63 74 0.118337626 ubox
63 79 0.049473253 ubox
63 82 0.010028151 ubox
63 86 0.011447331 ubox
64 69 0.004363507 ubox
64 72 0.007235015 ubox
64 73 0.118119137 ubox
64 75 0.609645686 ubox
64 78 0.049366569 ubox
64 81 0.009525299 ubox
64 85 0.011441583 ubox
65 71 0.009839353 ubox
65 74 0.609866800 ubox
65 79 0.004955733 ubox
65 82 0.191729477 ubox
66 73 0.609720597 ubox
66 76 0.049208528 ubox
66 78 0.005277898 ubox
66 81 0.191955790 ubox
67 72 0.570388658 ubox
67 75 0.049256288 ubox
67 77 0.005057185 ubox
67 80 0.191946561 ubox
68 74 0.049253171 ubox
68 79 0.190873182 ubox
70 77 0.191933528 ubox
71 76 0.192027136 ubox
73 82 0.023427089 ubox
74 81 0.024871652 ubox
78 89 0.008747538 ubox
79 88 0.008664880 ubox
80 86 0.003853175 ubox
81 89 0.069555322 ubox
82 88 0.069670167 ubox
5 88 0.9500000 lbox
6 87 0.9500000 lbox
7 86 0.9500000 lbox
8 85 0.9500000 lbox
9 84 0.9500000 lbox
14 55 0.9500000 lbox
15 54 0.9500000 lbox
16 53 0.9500000 lbox
17 52 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 46 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
58 82 0.9500000 lbox
59 81 0.9500000 lbox
60 80 0.9500000 lbox
61 78 0.9500000 lbox
62 77 0.9500000 lbox
64 75 0.9500000 lbox
65 74 0.9500000 lbox
66 73 0.9500000 lbox
67 72 0.9500000 lbox
showpage
end
%%EOF
