%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL14)
} def

/sequence { (\
UUUCUCAACAAUUCCUCACCGCAGGAGCCUCUGAAGCUCCCACCAGGCCAGCUCUCCUCCCACAACAGCUUCCCACAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.027213086 ubox
1 11 0.019516966 ubox
1 27 0.007181220 ubox
1 35 0.004580027 ubox
1 36 0.027263487 ubox
1 65 0.005188163 ubox
1 78 0.008382957 ubox
2 7 0.028599910 ubox
2 8 0.023702486 ubox
2 10 0.021853285 ubox
2 11 0.038589087 ubox
2 23 0.003456392 ubox
2 26 0.010935382 ubox
2 27 0.007036456 ubox
2 34 0.004539326 ubox
2 35 0.042386841 ubox
2 36 0.011059214 ubox
2 64 0.005726790 ubox
2 65 0.005059054 ubox
2 77 0.009461303 ubox
2 78 0.009834593 ubox
3 7 0.023187760 ubox
3 10 0.039983360 ubox
3 23 0.003478316 ubox
3 25 0.011295860 ubox
3 26 0.009687055 ubox
3 33 0.003544480 ubox
3 34 0.051561647 ubox
3 35 0.015031609 ubox
3 64 0.005329442 ubox
3 77 0.010396354 ubox
4 24 0.012131261 ubox
4 25 0.009900816 ubox
4 27 0.013901802 ubox
4 33 0.052449463 ubox
4 36 0.030867000 ubox
4 46 0.003857364 ubox
4 51 0.003234242 ubox
4 68 0.005880226 ubox
4 78 0.037192589 ubox
5 23 0.012052145 ubox
5 24 0.008924787 ubox
5 26 0.013671702 ubox
5 34 0.217890567 ubox
5 35 0.022696174 ubox
5 45 0.003952072 ubox
5 67 0.005538126 ubox
5 77 0.035300302 ubox
6 24 0.004287595 ubox
6 25 0.013292865 ubox
6 33 0.231161612 ubox
7 13 0.020924114 ubox
7 32 0.223943353 ubox
7 71 0.003287725 ubox
8 12 0.018313195 ubox
9 33 0.017363376 ubox
10 32 0.017918361 ubox
10 71 0.008269340 ubox
11 70 0.008399735 ubox
12 26 0.017064348 ubox
12 27 0.381096223 ubox
12 51 0.005158825 ubox
12 65 0.003821889 ubox
12 68 0.005084429 ubox
12 78 0.008679912 ubox
13 23 0.006656373 ubox
13 25 0.006097375 ubox
13 26 0.528061724 ubox
13 34 0.003333848 ubox
13 50 0.005819503 ubox
13 64 0.004141177 ubox
13 67 0.007572286 ubox
13 77 0.009376015 ubox
14 24 0.006527788 ubox
14 25 0.541161032 ubox
14 33 0.003415789 ubox
14 47 0.076230699 ubox
15 24 0.541423245 ubox
15 25 0.005999808 ubox
15 27 0.037711014 ubox
15 46 0.077262935 ubox
15 47 0.009857145 ubox
15 51 0.089004672 ubox
15 68 0.024454683 ubox
15 78 0.037653040 ubox
16 23 0.511520551 ubox
16 24 0.005282123 ubox
16 25 0.006549983 ubox
16 26 0.038371389 ubox
16 34 0.011854569 ubox
16 45 0.074885321 ubox
16 46 0.009047200 ubox
16 47 0.011533804 ubox
16 50 0.089102125 ubox
16 67 0.024260449 ubox
16 77 0.035672693 ubox
17 24 0.012482821 ubox
17 25 0.038191728 ubox
17 33 0.012589338 ubox
17 46 0.015828576 ubox
18 32 0.012096255 ubox
19 25 0.013604061 ubox
19 47 0.201646116 ubox
20 24 0.013952683 ubox
20 46 0.202447909 ubox
21 28 0.033357507 ubox
21 37 0.004333884 ubox
21 48 0.024890807 ubox
21 52 0.015372574 ubox
21 69 0.101806133 ubox
21 79 0.220468025 ubox
22 27 0.033375081 ubox
22 33 0.031371772 ubox
22 36 0.004228908 ubox
22 47 0.024910398 ubox
22 51 0.015370148 ubox
22 68 0.101870035 ubox
22 78 0.221851207 ubox
23 30 0.005720320 ubox
23 32 0.033267598 ubox
23 55 0.006085160 ubox
23 58 0.265895734 ubox
24 29 0.006014309 ubox
24 31 0.033395860 ubox
24 32 0.008954427 ubox
24 40 0.749516252 ubox
24 41 0.074341453 ubox
24 44 0.008090033 ubox
24 49 0.006861231 ubox
24 54 0.004929689 ubox
24 55 0.090492333 ubox
24 56 0.021270651 ubox
24 57 0.282474514 ubox
24 60 0.193863818 ubox
24 61 0.019947543 ubox
24 72 0.041204257 ubox
24 73 0.036013479 ubox
24 74 0.020502912 ubox
25 29 0.004531768 ubox
25 30 0.026075344 ubox
25 31 0.009780973 ubox
25 39 0.753271874 ubox
25 40 0.052742370 ubox
25 43 0.006604448 ubox
25 48 0.005408763 ubox
25 54 0.099196189 ubox
25 56 0.282395758 ubox
25 59 0.194804733 ubox
25 60 0.014887362 ubox
25 71 0.041775671 ubox
25 72 0.036172450 ubox
25 73 0.020140829 ubox
26 30 0.008655904 ubox
26 32 0.011388901 ubox
26 38 0.755163577 ubox
26 53 0.100665903 ubox
26 55 0.281953951 ubox
26 58 0.195234789 ubox
26 70 0.048280241 ubox
26 71 0.029394716 ubox
27 31 0.013623877 ubox
27 37 0.755434888 ubox
27 48 0.082920980 ubox
27 52 0.102765224 ubox
27 54 0.279320189 ubox
27 57 0.194765316 ubox
27 69 0.053648757 ubox
27 70 0.017284468 ubox
27 79 0.218190277 ubox
28 36 0.740825085 ubox
28 47 0.084095762 ubox
28 51 0.102606778 ubox
28 68 0.052852309 ubox
28 78 0.220039966 ubox
29 36 0.143500091 ubox
29 46 0.083863310 ubox
29 47 0.017139404 ubox
29 51 0.016965874 ubox
29 68 0.014620145 ubox
29 78 0.096936386 ubox
30 35 0.187730608 ubox
30 45 0.080020718 ubox
30 47 0.097934769 ubox
30 50 0.015406161 ubox
30 67 0.016159511 ubox
30 77 0.099539775 ubox
31 46 0.103844341 ubox
31 47 0.004747925 ubox
31 51 0.182462055 ubox
31 68 0.017245897 ubox
31 78 0.076016172 ubox
32 42 0.068581954 ubox
32 45 0.104593789 ubox
32 46 0.004197888 ubox
32 50 0.183918149 ubox
32 62 0.009832782 ubox
32 64 0.024083794 ubox
32 67 0.019302365 ubox
32 75 0.051340769 ubox
32 77 0.076982295 ubox
33 39 0.016529659 ubox
33 41 0.070719399 ubox
33 44 0.105130926 ubox
33 49 0.182010049 ubox
33 54 0.167252037 ubox
33 56 0.152211584 ubox
33 59 0.026357748 ubox
33 61 0.009337029 ubox
33 63 0.023331099 ubox
33 66 0.018361558 ubox
33 72 0.451819727 ubox
33 74 0.036019072 ubox
33 76 0.048854056 ubox
34 38 0.014566432 ubox
34 53 0.118839152 ubox
34 55 0.151423548 ubox
34 58 0.026604925 ubox
34 71 0.457427562 ubox
35 53 0.359601364 ubox
35 55 0.003494735 ubox
35 70 0.459818857 ubox
36 48 0.179879428 ubox
36 52 0.388766387 ubox
36 69 0.460353498 ubox
36 79 0.028321079 ubox
37 46 0.035724061 ubox
37 47 0.179799232 ubox
37 51 0.388791857 ubox
37 68 0.460292786 ubox
37 78 0.028604574 ubox
38 45 0.035684530 ubox
38 46 0.163065778 ubox
38 47 0.011100837 ubox
38 50 0.373512138 ubox
38 67 0.441558693 ubox
38 77 0.027548777 ubox
39 46 0.063666233 ubox
39 47 0.184209390 ubox
40 46 0.184164499 ubox
40 47 0.348365842 ubox
41 46 0.349108524 ubox
45 53 0.025702522 ubox
45 55 0.022733034 ubox
45 58 0.407120359 ubox
45 70 0.003433038 ubox
45 71 0.031257014 ubox
46 52 0.027167699 ubox
46 53 0.011793633 ubox
46 54 0.023997768 ubox
46 55 0.011862401 ubox
46 56 0.011491792 ubox
46 57 0.425020466 ubox
46 58 0.025603984 ubox
46 59 0.035944851 ubox
46 60 0.132771387 ubox
46 61 0.105169020 ubox
46 69 0.003487018 ubox
46 70 0.037262717 ubox
46 72 0.027290913 ubox
46 73 0.192320053 ubox
46 74 0.690217499 ubox
47 52 0.015211558 ubox
47 53 0.018791041 ubox
47 54 0.013357781 ubox
47 55 0.009658314 ubox
47 56 0.424082702 ubox
47 57 0.027720510 ubox
47 58 0.028075041 ubox
47 59 0.132296028 ubox
47 60 0.104884450 ubox
47 69 0.038028227 ubox
47 71 0.024331662 ubox
47 72 0.192974884 ubox
47 73 0.690421572 ubox
47 79 0.008674639 ubox
48 68 0.037981906 ubox
48 78 0.009210360 ubox
50 58 0.118449737 ubox
50 70 0.729537697 ubox
50 71 0.016897370 ubox
51 57 0.124609303 ubox
51 69 0.743347346 ubox
51 79 0.022196365 ubox
52 68 0.743225857 ubox
52 78 0.022466268 ubox
53 67 0.701750875 ubox
53 77 0.021252349 ubox
54 68 0.010123431 ubox
54 78 0.004001201 ubox
55 67 0.014369077 ubox
55 77 0.003860595 ubox
57 68 0.023855645 ubox
57 78 0.006737308 ubox
58 67 0.026331447 ubox
58 77 0.006469248 ubox
64 71 0.009844266 ubox
65 70 0.008977679 ubox
68 79 0.382802807 ubox
69 78 0.386137226 ubox
70 77 0.364495106 ubox
70 78 0.007007268 ubox
71 77 0.015571185 ubox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
46 74 0.9500000 lbox
47 73 0.9500000 lbox
50 70 0.9500000 lbox
51 69 0.9500000 lbox
52 68 0.9500000 lbox
53 67 0.9500000 lbox
showpage
end
%%EOF
