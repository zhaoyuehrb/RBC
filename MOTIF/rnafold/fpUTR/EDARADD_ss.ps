%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGCCAAAGCAGGAAGUGAGCUCGUGGAAGAAGCGAAGGAGGAGAAGAAGAAGGGAGGGGAAGGCGGAGGAGGGCAGGGGCGCGCAGAGCCACGGUUUGCUCCAGGCGCGUCGGAACCGCAGGACUUUUCAUCCCCGUGGUCCCACGGUCCUCCCGCGCCCCGGAGGCCUGCCAGCCCCGCUCGGACGCUCGUUUGCCCCUAACCCGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[100.41536713 206.47888184]
[91.07555389 216.16737366]
[78.27236176 219.94570923]
[74.58449554 234.48529053]
[70.89662170 249.02487183]
[67.20874786 263.56445312]
[72.18324280 279.19091797]
[60.93907928 291.12829590]
[45.04328918 287.09643555]
[40.84809875 271.24298096]
[52.66915894 259.87658691]
[56.35703278 245.33700562]
[60.04490662 230.79742432]
[63.73277664 216.25782776]
[52.83285904 203.98124695]
[51.38482666 187.46121216]
[60.15684509 173.19233704]
[75.85995483 166.90287781]
[79.33498383 152.31095886]
[82.81002045 137.71903992]
[81.30216217 130.48616028]
[86.44390106 122.94005585]
[90.13177490 108.40047455]
[77.56167603 100.21557617]
[65.75652313 109.46967316]
[53.95137024 118.72377777]
[42.14622116 127.97787476]
[41.80671692 143.61177063]
[31.45855141 155.33566284]
[15.98781204 157.61387634]
[2.69930911 149.37071228]
[-2.13253307 134.49833679]
[3.77373338 120.01905060]
[17.62935066 112.76950073]
[32.89212036 116.17272186]
[44.69726944 106.91862488]
[56.50242233 97.66452026]
[68.30757904 88.41042328]
[53.51092911 90.87197113]
[40.12497711 84.10319519]
[29.71939468 73.29930878]
[23.45797539 59.66866302]
[22.04101372 44.73573685]
[25.62698746 30.17068291]
[33.81483078 17.60250092]
[45.68879318 8.43685436]
[59.92084503 3.69885731]
[74.91924286 3.91842246]
[89.00650024 9.07099247]
[100.60707855 18.58028984]
[108.42351532 31.38276291]
[111.58159637 46.04654312]
[109.72812653 60.93159103]
[103.07100677 74.37226105]
[100.07070160 89.06913757]
[109.74977875 77.60984039]
[119.42884827 66.15054321]
[128.93945312 54.55104065]
[138.27955627 42.81381607]
[147.61965942 31.07658768]
[156.95976257 19.33936119]
[166.29986572 7.60213327]
[168.83856201 -8.01406193]
[182.81779480 -13.15510941]
[192.15789795 -24.89233589]
[201.49800110 -36.62956238]
[210.83810425 -48.36679077]
[220.17820740 -60.10401917]
[223.07177734 -68.76476288]
[229.74153137 -71.94319153]
[239.25213623 -83.54269409]
[236.21955872 -103.40711212]
[248.58653259 -118.85595703]
[268.02359009 -120.20290375]
[277.01672363 -132.20803833]
[286.00988770 -144.21316528]
[295.00302124 -156.21830750]
[297.64230347 -164.95989990]
[304.21633911 -168.33186340]
[313.38394165 -180.20431519]
[322.55154419 -192.07676697]
[331.71914673 -203.94920349]
[340.88674927 -215.82165527]
[339.06802368 -231.29194641]
[348.53442383 -243.20170593]
[363.29418945 -244.84024048]
[372.46179199 -256.71267700]
[381.62939453 -268.58514404]
[390.79699707 -280.45758057]
[393.56372070 -289.15969849]
[400.18634033 -292.43524170]
[409.52642822 -304.17245483]
[418.86651611 -315.90969849]
[421.17010498 -334.18060303]
[437.74002075 -339.96426392]
[446.90762329 -351.83670044]
[456.07522583 -363.70913696]
[441.52297974 -360.07150269]
[427.28106689 -364.77981567]
[417.76458740 -376.37448120]
[415.92361450 -391.26107788]
[422.32894897 -404.82470703]
[434.99484253 -412.86056519]
[449.99484253 -412.87750244]
[462.67883301 -404.87023926]
[469.11474609 -391.32110596]
[467.30776978 -376.43124390]
[477.95306396 -386.99902344]
[488.59832764 -397.56680298]
[499.24362183 -408.13458252]
[509.88888550 -418.70239258]
[520.53417969 -429.27017212]
[520.27856445 -446.76315308]
[532.51367188 -458.79083252]
[549.32440186 -458.25726318]
[559.81408691 -468.97946167]
[570.30383301 -479.70166016]
[574.06658936 -488.02166748]
[581.02606201 -490.50247192]
[591.67132568 -501.07025146]
[602.31658936 -511.63806152]
[602.54217529 -527.21325684]
[613.48852539 -537.77886963]
[628.33575439 -537.46777344]
[638.98101807 -548.03558350]
[649.62628174 -558.60333252]
[660.27154541 -569.17114258]
[670.91687012 -579.73895264]
[665.87976074 -594.14691162]
[667.60144043 -609.31262207]
[675.73999023 -622.22485352]
[688.67962646 -630.31994629]
[703.85101318 -631.99053955]
[718.24194336 -626.90490723]
[728.99511719 -616.07293701]
[733.97546387 -601.64520264]
[732.19403076 -586.48638916]
[724.00469971 -573.60626221]
[711.03332520 -565.56225586]
[695.85546875 -563.95141602]
[681.48461914 -569.09362793]
[670.83935547 -558.52587891]
[660.19409180 -547.95806885]
[649.54876709 -537.39031982]
[638.90350342 -526.82250977]
[639.10607910 -511.97344971]
[628.46081543 -501.10458374]
[612.88439941 -500.99276733]
[602.23907471 -490.42498779]
[591.59381104 -479.85720825]
[581.02606201 -469.21191406]
[570.53631592 -458.48971558]
[560.04656982 -447.76751709]
[561.98925781 -435.03134155]
[556.15539551 -423.32656860]
[544.47381592 -417.02542114]
[531.10192871 -418.62487793]
[520.45666504 -408.05709839]
[509.81140137 -397.48931885]
[499.16610718 -386.92153931]
[488.52084351 -376.35375977]
[477.87554932 -365.78594971]
[467.94766235 -354.54153442]
[458.78005981 -342.66909790]
[449.61245728 -330.79666138]
[450.84365845 -318.76483154]
[443.30575562 -308.79913330]
[430.60375977 -306.56958008]
[421.26364136 -294.83236694]
[411.92355347 -283.09512329]
[402.66946411 -271.28997803]
[393.50186157 -259.41754150]
[384.33422852 -247.54508972]
[375.16662598 -235.67263794]
[377.31460571 -220.97836304]
[368.18649292 -208.80741882]
[352.75921631 -206.65405273]
[343.59161377 -194.78160095]
[334.42401123 -182.90914917]
[325.25640869 -171.03671265]
[316.08877563 -159.16426086]
[307.00817871 -147.22515869]
[298.01501465 -135.22001648]
[289.02185059 -123.21488953]
[280.02871704 -111.20975494]
[284.16769409 -101.82182312]
[284.03689575 -91.48207092]
[279.59298706 -82.05574799]
[271.57659912 -75.27112579]
[261.38995361 -72.40267944]
[250.85163879 -74.03208923]
[241.34103394 -62.43259048]
[231.91543579 -50.76391602]
[222.57533264 -39.02668762]
[213.23522949 -27.28946114]
[203.89512634 -15.55223465]
[194.55502319 -3.81500745]
[192.68438721 10.96166325]
[178.03709412 16.94223595]
[168.69699097 28.67946243]
[159.35688782 40.41669083]
[150.01678467 52.15391541]
[140.67668152 63.89114380]
[140.31616211 68.65064240]
[136.96391296 73.23498535]
[130.88815308 75.82962036]
[121.20907593 87.28891754]
[111.52999878 98.74821472]
[104.67136383 112.08834839]
[100.98348999 126.62792969]
[97.40193939 141.19407654]
[93.92691040 155.78599548]
[90.45187378 170.37791443]
[100.17559814 180.14483643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[18 213]
[19 212]
[20 211]
[22 210]
[23 209]
[24 38]
[25 37]
[26 36]
[27 35]
[55 208]
[56 207]
[57 206]
[58 203]
[59 202]
[60 201]
[61 200]
[62 199]
[64 197]
[65 196]
[66 195]
[67 194]
[68 193]
[70 192]
[71 191]
[74 185]
[75 184]
[76 183]
[77 182]
[79 181]
[80 180]
[81 179]
[82 178]
[83 177]
[86 174]
[87 173]
[88 172]
[89 171]
[91 170]
[92 169]
[93 168]
[95 165]
[96 164]
[97 163]
[107 162]
[108 161]
[109 160]
[110 159]
[111 158]
[112 157]
[115 153]
[116 152]
[117 151]
[119 150]
[120 149]
[121 148]
[124 145]
[125 144]
[126 143]
[127 142]
[128 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
