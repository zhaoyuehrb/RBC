%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCGUGGUCAGCGCGGCCGAAGGGCGUGGUUGGCGCUCGGUCCUGCCCUGCGCGUUUUGGGCUGCGGUUGGAGGGCCGCAGUUGCAGUCAGGGUCCGCCAGCUCGGGGCCAGCGCAUGGGGCUGCUGAGACCGCUCCGGACGUGCGAAGCGUUCGCGGUGCGGUAGGAAGCUGAAGUCUUCAGCAGAACCCUGACCUAGGUAGGGAGUCUCA\
) } def
/len { sequence length } bind def

/coor [
[30.45371056 212.49174500]
[38.91304016 198.44284058]
[38.69386673 183.44444275]
[38.47469330 168.44602966]
[38.25551987 153.44763184]
[31.13971901 151.07795715]
[19.91972160 161.03344727]
[16.90811729 146.33860779]
[9.79231644 143.96891785]
[0.62471086 155.84136963]
[-8.54289532 167.71382141]
[-17.71050072 179.58627319]
[-26.87810707 191.45870972]
[-36.04571152 203.33116150]
[-31.84182930 218.15119934]
[-37.10896683 232.43792725]
[-49.63057709 240.78498840]
[-64.48838806 240.16564941]
[-73.65599060 252.03810120]
[-82.82359314 263.91055298]
[-84.47616577 280.22622681]
[-99.54119110 286.70520020]
[-112.52105713 276.68246460]
[-110.06319427 260.46856689]
[-94.69604492 254.74295044]
[-85.52843475 242.87049866]
[-76.36083221 230.99804688]
[-80.71805573 216.78001404]
[-75.80954742 202.55430603]
[-63.31960678 193.84484863]
[-47.91815948 194.16355896]
[-38.75055313 182.29110718]
[-29.58294868 170.41865540]
[-20.41534233 158.54621887]
[-11.24773693 146.67376709]
[-2.08013082 134.80131531]
[40.21067810 62.54534149]
[95.92131805 66.99600983]
[86.58121490 55.25878143]
[77.24111176 43.52155685]
[67.90101624 31.78432846]
[58.56091309 20.04710197]
[49.22080994 8.30987453]
[38.36431885 7.70794249]
[29.80652618 1.36254835]
[26.22763443 -8.43857002]
[28.58205223 -18.37809563]
[19.58889961 -30.38322830]
[10.59574699 -42.38836288]
[1.60259497 -54.39349365]
[-7.39055729 -66.39862823]
[-16.38370895 -78.40376282]
[-30.85000038 -84.80976868]
[-32.28806686 -99.63478851]
[-41.28121948 -111.63992310]
[-50.27437210 -123.64505768]
[-59.26752472 -135.65019226]
[-68.26067352 -147.65531921]
[-73.05480957 -149.70483398]
[-76.26425171 -153.05250549]
[-77.65991974 -156.87815857]
[-77.37112427 -160.38940430]
[-85.82954407 -172.77709961]
[-94.28797150 -185.16479492]
[-102.74639130 -197.55249023]
[-116.91806030 -204.58630371]
[-117.70507812 -219.46009827]
[-126.16350555 -231.84779358]
[-134.71220398 -244.17337036]
[-143.35072327 -256.43615723]
[-151.98924255 -268.69894409]
[-160.62777710 -280.96173096]
[-169.26629639 -293.22451782]
[-183.53923035 -300.05050659]
[-184.54348755 -314.91119385]
[-193.18200684 -327.17398071]
[-201.82054138 -339.43676758]
[-210.45906067 -351.69955444]
[-219.09757996 -363.96234131]
[-233.92108154 -360.59597778]
[-248.90361023 -363.16348267]
[-261.76046753 -371.27334595]
[-270.53103638 -383.68887329]
[-273.87789917 -398.51678467]
[-271.29067993 -413.49594116]
[-263.16390991 -426.34210205]
[-250.73686218 -435.09634399]
[-235.90455627 -438.42370605]
[-220.92883301 -435.81677246]
[-208.09336853 -427.67312622]
[-199.35548401 -415.23455811]
[-196.04763794 -400.39788818]
[-198.67425537 -385.42559814]
[-206.83479309 -372.60086060]
[-198.19627380 -360.33807373]
[-189.55775452 -348.07528687]
[-180.91923523 -335.81250000]
[-172.28070068 -323.54971313]
[-158.62565613 -317.60086060]
[-157.00350952 -301.86303711]
[-148.36499023 -289.60025024]
[-139.72647095 -277.33746338]
[-131.08793640 -265.07467651]
[-122.44941711 -252.81188965]
[-116.02946472 -249.15507507]
[-113.77580261 -240.30621338]
[-105.31738281 -227.91851807]
[-91.75071716 -221.77076721]
[-90.35869598 -206.01092529]
[-81.90026855 -193.62321472]
[-73.44184875 -181.23551941]
[-64.98342896 -168.84782410]
[-56.25554276 -156.64846802]
[-47.26239014 -144.64334106]
[-38.26923752 -132.63821411]
[-29.27608490 -120.63307953]
[-20.28293419 -108.62794495]
[-6.45989275 -103.08061981]
[-4.37857676 -87.39691162]
[4.61457539 -75.39177704]
[13.60772800 -63.38664627]
[22.60087967 -51.38151550]
[31.59403229 -39.37638092]
[40.58718491 -27.37124825]
[58.87400055 -21.08262634]
[60.95803833 -1.03022707]
[70.29814148 10.70699978]
[79.63823700 22.44422722]
[88.97834015 34.18145370]
[98.31844330 45.91868210]
[107.65854645 57.65590668]
[122.11381531 61.66154861]
[136.16282654 56.40559006]
[150.21185303 51.14962769]
[164.26086426 45.89366531]
[178.30987549 40.63770294]
[192.32012939 35.27923965]
[206.29084778 29.81855965]
[220.22129822 24.25595856]
[234.11073303 18.59172821]
[248.00016785 12.92749882]
[261.88961792 7.26326942]
[275.77905273 1.59904015]
[289.66848755 -4.06518936]
[303.55792236 -9.72941875]
[311.07879639 -23.90036964]
[326.87319946 -26.71400833]
[338.82501221 -16.01195145]
[337.76580811 -0.00390113]
[324.50814819 9.03013611]
[309.22216797 4.16001987]
[295.33270264 9.82424927]
[281.44326782 15.48847866]
[267.55383301 21.15270805]
[253.66439819 26.81693840]
[239.77496338 32.48116684]
[225.88552856 38.14539719]
[220.88046265 43.58023453]
[211.75152588 43.78927994]
[197.78080750 49.24995804]
[192.69686890 54.61108398]
[183.56584167 54.68671799]
[169.51683044 59.94268036]
[155.46780396 65.19864655]
[141.41879272 70.45460510]
[127.36978149 75.71056366]
[126.76767731 83.18636322]
[141.35960388 79.71134949]
[149.17367554 92.51527405]
[139.41107178 103.90350342]
[125.56348419 98.13794708]
[124.96138000 105.61373901]
[137.98814392 113.05037689]
[151.01489258 120.48701477]
[164.04165649 127.92365265]
[177.06840515 135.36029053]
[190.09516907 142.79693604]
[206.84829712 145.39865112]
[208.98599243 162.21728516]
[193.41639709 168.92729187]
[182.65852356 155.82368469]
[169.63177490 148.38705444]
[156.60501099 140.95040894]
[143.57826233 133.51377869]
[130.55149841 126.07713318]
[117.52474213 118.64049530]
[112.08757782 123.80646515]
[122.41934967 134.68095398]
[111.54470825 145.01255798]
[101.21324921 134.13841248]
[95.77609253 139.30438232]
[102.53707886 152.69425964]
[109.29806519 166.08415222]
[116.05905914 179.47402954]
[122.71853638 185.72163391]
[122.81939697 193.10932922]
[129.38401794 206.59657288]
[143.26762390 215.32455444]
[142.38044739 231.69969177]
[127.63516235 238.87663269]
[114.20043945 229.47236633]
[115.89677429 213.16119385]
[109.33215332 199.67395020]
[102.66917419 186.23501587]
[95.90818024 172.84513855]
[89.14719391 159.45524597]
[82.38620758 146.06536865]
[75.10313416 147.85614014]
[53.25391769 153.22846985]
[53.47309113 168.22686768]
[53.69226456 183.22526550]
[53.91143799 198.22366333]
[62.77766418 212.01939392]
[55.02384949 226.46966553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 212]
[3 211]
[4 210]
[5 209]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[14 31]
[18 27]
[19 26]
[20 25]
[38 131]
[39 130]
[40 129]
[41 128]
[42 127]
[43 126]
[47 124]
[48 123]
[49 122]
[50 121]
[51 120]
[52 119]
[54 117]
[55 116]
[56 115]
[57 114]
[58 113]
[62 112]
[63 111]
[64 110]
[65 109]
[67 107]
[68 106]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[132 166]
[133 165]
[134 164]
[135 163]
[136 162]
[137 160]
[138 159]
[139 157]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[172 186]
[173 185]
[174 184]
[175 183]
[176 182]
[177 181]
[191 207]
[192 206]
[193 205]
[194 204]
[196 203]
[197 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
