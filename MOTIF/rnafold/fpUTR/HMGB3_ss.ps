%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCACCGCCCGCUCCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCCGCAGCGCCCGCACAACUUUCCGGCCCGCGCCGCCGUGAGCGCGCCCUGCCGCCGCCUCCCCCUGCCUCUACUCCCCAUUCCCUUCCCGCCCCCUCCGCCUUCCCUCCUGCUAGGCGGCCGGGAAGGAAGAAGCAAUUCAGUCAGG\
) } def
/len { sequence length } bind def

/coor [
[329.24194336 165.83348083]
[317.47064209 144.85366821]
[302.68588257 142.32159424]
[287.90115356 139.78953552]
[275.92855835 148.57545471]
[260.89865112 146.21820068]
[251.76432800 133.60066223]
[236.97958374 131.06860352]
[223.12886047 136.54644775]
[210.83282471 126.59065247]
[196.04808044 124.05858612]
[181.26333618 121.52651978]
[166.47859192 118.99445343]
[151.69384766 116.46238708]
[137.84312439 121.94023895]
[125.54708862 111.98444366]
[110.76234436 109.45237732]
[97.58205414 114.11839294]
[86.70559692 105.33236694]
[71.92085266 102.80030060]
[57.01262665 108.09703827]
[45.77408600 98.32235718]
[30.98934174 95.79029083]
[16.20459747 93.25822449]
[-0.91600025 100.04000854]
[-13.96615505 88.30615997]
[-28.78663445 85.99242401]
[-43.60711670 83.67868805]
[-58.42759705 81.36495972]
[-75.74913788 96.60496521]
[-98.40930176 94.06333160]
[-111.60868835 75.80097198]
[-126.58870697 75.02697754]
[-141.58218384 74.58456421]
[-156.58177185 74.47394562]
[-171.58135986 74.36332703]
[-185.43821716 81.99864960]
[-198.10809326 74.16770172]
[-213.10768127 74.05708313]
[-226.96453857 81.69239807]
[-239.63439941 73.86145020]
[-254.63398743 73.75083160]
[-268.49084473 81.38615417]
[-281.16070557 73.55520630]
[-296.16030884 73.44458771]
[-310.01715088 81.07991028]
[-322.68704224 73.24895477]
[-337.68661499 73.13834381]
[-351.54348755 80.77365875]
[-364.21334839 72.94271088]
[-379.21295166 72.83209229]
[-393.20025635 81.39287567]
[-407.47656250 73.32324982]
[-407.35562134 56.92454529]
[-392.96185303 49.06635284]
[-379.10232544 57.83250046]
[-364.10272217 57.94311905]
[-351.31875610 50.29988861]
[-337.57601929 58.13874817]
[-322.57641602 58.24936676]
[-309.79241943 50.60613632]
[-296.04968262 58.44499588]
[-281.05010986 58.55561447]
[-268.26611328 50.91238022]
[-254.52337646 58.75123978]
[-239.52378845 58.86185837]
[-226.73979187 51.21862793]
[-212.99705505 59.05748749]
[-197.99746704 59.16810608]
[-185.21348572 51.52487564]
[-171.47074890 59.36373520]
[-156.47114563 59.47435379]
[-141.47155762 59.58497238]
[-138.71766663 57.38536453]
[-134.76205444 56.40953445]
[-130.19113159 57.20755005]
[-125.81471252 60.04695892]
[-110.83469391 60.82095337]
[-107.59391022 54.07945633]
[-102.65111542 48.42943573]
[-96.35527039 44.29164886]
[-89.15676117 41.97932053]
[-81.57518768 41.67447662]
[-74.16184235 43.41368866]
[-67.45964813 47.08436584]
[-61.96338272 52.43194199]
[-58.08316040 59.07747269]
[-56.11386108 66.54447937]
[-41.29338074 68.85820770]
[-26.47290039 71.17194366]
[-11.65242100 73.48567963]
[-1.70121384 66.60986328]
[10.66407299 68.41513062]
[18.73666382 78.47348022]
[33.52140808 81.00554657]
[48.30615234 83.53761292]
[62.15687180 78.05976105]
[74.45291138 88.01555634]
[89.23765564 90.54762268]
[102.41794586 85.88160706]
[113.29440308 94.66763306]
[128.07914734 97.19969940]
[142.98738098 91.90296173]
[154.22592163 101.67764282]
[169.01065063 104.20970917]
[183.79539490 106.74177551]
[198.58013916 109.27384186]
[213.36488342 111.80590820]
[228.27311707 106.50917053]
[239.51165771 116.28385925]
[254.29640198 118.81592560]
[267.10879517 109.95703125]
[282.06655884 112.73551941]
[290.43319702 125.00478363]
[305.21795654 127.53684998]
[320.00268555 130.06892395]
[323.58517456 124.21615601]
[328.39471436 119.34716034]
[334.17214966 115.71250916]
[340.60876465 113.49656677]
[347.36291504 112.80815125]
[354.07806396 113.67525482]
[360.40164185 116.04395294]
[366.00354004 119.78171539]
[370.59335327 124.68478394]
[373.93548584 130.48927307]
[375.86111450 136.88534546]
[376.27682495 143.53376770]
[390.59637451 148.00036621]
[404.91589355 152.46697998]
[419.23544312 156.93357849]
[434.71356201 153.65660095]
[444.55950928 164.83276367]
[458.87905884 169.29937744]
[466.97091675 156.57313538]
[478.07266235 146.38310242]
[491.42346191 139.41946411]
[506.11044312 136.15158081]
[521.13116455 136.79635620]
[535.46197510 141.30383301]
[548.12774658 149.36102295]
[558.26837158 160.41363525]
[565.19702148 173.70417786]
[568.44665527 188.32389832]
[567.80169678 203.27493286]
[582.12127686 207.74154663]
[596.44079590 212.20816040]
[610.76037598 216.67475891]
[619.88299561 216.24261475]
[625.25726318 221.31428528]
[639.50939941 225.99159241]
[653.76147461 230.66891479]
[668.01361084 235.34623718]
[682.26574707 240.02354431]
[696.51782227 244.70086670]
[702.28881836 239.89848328]
[709.30212402 237.41581726]
[716.67309570 237.51597595]
[723.48925781 240.13945007]
[728.92309570 244.91719055]
[732.33245850 251.22189331]
[733.33636475 258.24996948]
[747.20513916 263.96466064]
[761.07391357 269.67935181]
[774.94262695 275.39404297]
[788.81140137 281.10873413]
[802.68017578 286.82342529]
[814.37866211 276.95416260]
[829.32623291 273.66323853]
[844.08789062 277.70693970]
[855.27160645 288.15603638]
[860.30737305 302.60937500]
[858.03808594 317.74572754]
[848.98516846 330.08682251]
[835.22888184 336.79681396]
[819.93041992 336.33377075]
[806.60516357 328.80410767]
[798.31518555 315.93804932]
[796.96545410 300.69216919]
[783.09667969 294.97747803]
[769.22796631 289.26278687]
[755.35919189 283.54809570]
[741.49041748 277.83340454]
[727.62170410 272.11871338]
[705.81646729 277.46551514]
[691.84051514 258.95297241]
[677.58843994 254.27566528]
[663.33630371 249.59834290]
[649.08416748 244.92103577]
[634.83209229 240.24371338]
[620.57995605 235.56639099]
[606.29376221 230.99430847]
[591.97418213 226.52769470]
[577.65466309 222.06109619]
[563.33508301 217.59448242]
[555.36553955 230.26080322]
[544.38037109 240.44035339]
[531.12438965 247.43482971]
[516.49835205 250.76211548]
[501.49789429 250.18955994]
[487.14587402 245.75016785]
[474.42233276 237.74085999]
[464.19781494 226.70248413]
[457.17367554 213.38342285]
[453.83404541 198.68878174]
[454.41244507 183.61891174]
[440.09292603 179.15231323]
[425.63903809 182.74876404]
[414.76885986 171.25312805]
[400.44931030 166.78652954]
[386.12976074 162.31991577]
[371.81021118 157.85330200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 116]
[3 115]
[4 114]
[7 111]
[8 110]
[10 108]
[11 107]
[12 106]
[13 105]
[14 104]
[16 102]
[17 101]
[19 99]
[20 98]
[22 96]
[23 95]
[24 94]
[26 91]
[27 90]
[28 89]
[29 88]
[32 78]
[33 77]
[34 73]
[35 72]
[36 71]
[38 69]
[39 68]
[41 66]
[42 65]
[44 63]
[45 62]
[47 60]
[48 59]
[50 57]
[51 56]
[128 212]
[129 211]
[130 210]
[131 209]
[133 207]
[134 206]
[145 195]
[146 194]
[147 193]
[148 192]
[150 191]
[151 190]
[152 189]
[153 188]
[154 187]
[155 186]
[162 184]
[163 183]
[164 182]
[165 181]
[166 180]
[167 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
