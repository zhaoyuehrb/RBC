%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUUCAUGUGGCCCGGCCCGCGACGGCCGGCGGCUGGGAGCGGCGAGGCGGCGGCGGCGGCGAGUGGCGGCCCGCGAGGCCCGGGAGGCGGUGGCCGAGGCCCAGGCGGUGGCGGCGGCGGCCCAGGAGGCGGCGGACGGGGAGCUGCGGGAGCAGGCCCGGCCUGGCUCUCUAGCGGCCGCCUGGCUGCAGC\
) } def
/len { sequence length } bind def

/coor [
[-15.27576351 272.95690918]
[-25.04043388 284.34335327]
[-34.80510330 295.72979736]
[-44.56977463 307.11624146]
[-54.33444595 318.50271606]
[-64.09912109 329.88916016]
[-63.07651901 345.43237305]
[-73.14148712 356.84075928]
[-87.96588898 357.71984863]
[-97.73056030 369.10632324]
[-100.84081268 384.61877441]
[-114.99934387 389.24319458]
[-124.76401520 400.62963867]
[-134.52868652 412.01608276]
[-137.74574280 420.57986450]
[-144.54354858 423.50567627]
[-154.49038696 434.73333740]
[-164.43722534 445.96099854]
[-174.38406372 457.18865967]
[-173.17977905 472.94702148]
[-183.53430176 484.88684082]
[-199.30448914 485.92443848]
[-211.13417053 475.44427490]
[-212.00500488 459.66400146]
[-201.40032959 447.94577026]
[-185.61172485 447.24182129]
[-175.66488647 436.01416016]
[-165.71804810 424.78649902]
[-155.77120972 413.55883789]
[-145.91513062 402.25143433]
[-136.15046692 390.86499023]
[-126.38578796 379.47851562]
[-123.97397614 364.78048706]
[-109.11700439 359.34164429]
[-99.35233307 347.95520020]
[-100.74356842 333.17007446]
[-91.00300598 321.48348999]
[-75.48556519 320.12448120]
[-65.72089386 308.73803711]
[-55.95622253 297.35159302]
[-46.19155502 285.96514893]
[-36.42688370 274.57867432]
[-26.66221046 263.19223022]
[-17.55477333 251.27357483]
[-9.13351917 238.86058044]
[-8.39108467 223.98448181]
[5.75943756 216.90823364]
[14.18069172 204.49523926]
[22.60194588 192.08224487]
[31.02320099 179.66925049]
[39.44445419 167.25625610]
[47.86570740 154.84326172]
[56.28696442 142.43026733]
[57.02939606 127.55416870]
[71.17991638 120.47792816]
[79.60117340 108.06492615]
[76.24653625 93.44486237]
[63.25615311 85.94486237]
[50.26576996 78.44486237]
[34.44582367 78.24547577]
[27.29233170 65.18113708]
[14.30195045 57.68113708]
[-1.50423253 60.42779922]
[-13.41055965 49.67517471]
[-12.28351593 33.67175674]
[1.01232719 24.69400215]
[16.27753639 29.62887192]
[21.80195045 44.69075775]
[34.79233170 52.19075775]
[49.68312073 51.85369492]
[57.76576996 65.45448303]
[70.75614929 72.95448303]
[83.74653625 80.45448303]
[97.40012360 74.24324799]
[100.28202820 59.52269363]
[103.16392517 44.80213928]
[94.72578430 36.40494537]
[91.42867279 25.09111786]
[93.98214722 13.70952606]
[101.63745880 5.06817102]
[112.40212250 1.24145710]
[115.75675964 -13.37861061]
[111.30174255 -28.55963135]
[121.68943024 -39.23414612]
[125.04406738 -53.85421371]
[128.39871216 -68.47428131]
[120.26994324 -81.76190948]
[123.88029480 -96.54094696]
[136.59811401 -104.20859528]
[139.95274353 -118.82865906]
[135.49774170 -134.00968933]
[145.88542175 -144.68420410]
[149.24006653 -159.30426025]
[144.78504944 -174.48529053]
[155.17272949 -185.15980530]
[158.52737427 -199.77987671]
[161.88200378 -214.39993286]
[165.23664856 -229.02000427]
[157.10787964 -242.30763245]
[160.71823120 -257.08666992]
[173.43605042 -264.75430298]
[176.79069519 -279.37438965]
[171.46038818 -294.88308716]
[182.42880249 -307.07431030]
[198.41258240 -303.40676880]
[202.96897888 -287.65328979]
[191.41075134 -276.01974487]
[188.05612183 -261.39968872]
[196.15898132 -248.95463562]
[192.96516418 -234.08001709]
[179.85671997 -225.66535950]
[176.50207520 -211.04530334]
[173.14744568 -196.42523193]
[169.79280090 -181.80516052]
[174.48776245 -167.66986084]
[163.86012268 -155.94963074]
[160.50549316 -141.32955933]
[165.20045471 -127.19425964]
[154.57281494 -115.47402191]
[151.21818542 -100.85395050]
[159.32104492 -88.40890503]
[156.12722778 -73.53429413]
[143.01878357 -65.11964417]
[139.66413879 -50.49957275]
[136.30949402 -35.87950516]
[141.00445557 -21.74420929]
[130.37683105 -10.02397060]
[127.02218628 4.59609747]
[137.66162109 19.48117256]
[133.99253845 37.73159790]
[117.88447571 47.68404007]
[115.00257874 62.40459442]
[112.12067413 77.12514496]
[122.51154327 87.94318390]
[137.33619690 85.65635681]
[152.16085815 83.36952972]
[166.98550415 81.08270264]
[173.96572876 67.22427368]
[187.77403259 60.14538193]
[203.10081482 62.56801224]
[214.05264282 73.56060791]
[216.41830444 88.89629364]
[209.28814697 102.67819214]
[195.40386963 109.60686493]
[180.10426331 107.01811218]
[169.27233887 95.90735626]
[154.44767761 98.19418335]
[139.62303162 100.48101044]
[124.79837036 102.76783752]
[122.27301025 117.55372620]
[135.49827576 124.63134003]
[148.72352600 131.70895386]
[161.94879150 138.78656006]
[175.17404175 145.86416626]
[188.39930725 152.94178772]
[201.68113708 159.91262817]
[215.01870728 166.77626038]
[228.35626221 173.63989258]
[241.69383240 180.50352478]
[258.54418945 182.37489319]
[261.41058350 199.08477783]
[246.14723206 206.46492004]
[234.83020020 193.84109497]
[221.49263000 186.97746277]
[208.15507507 180.11381531]
[194.81750488 173.25018311]
[187.42155457 172.98460388]
[181.32168579 166.16703796]
[168.09643555 159.08943176]
[154.87117004 152.01181030]
[141.64591980 144.93420410]
[128.42065430 137.85659790]
[115.19540405 130.77899170]
[104.48590851 128.64071655]
[96.51520538 123.39610291]
[92.01416779 116.48618317]
[83.59291840 128.89918518]
[82.24813843 144.66313171]
[68.69995880 150.85151672]
[60.27870560 163.26451111]
[51.85745239 175.67750549]
[43.43619537 188.09049988]
[35.01494217 200.50349426]
[26.59368896 212.91650391]
[18.17243385 225.32949829]
[16.82765579 241.09344482]
[3.27947688 247.28182983]
[-5.14177752 259.69482422]
[9.59259129 256.88442993]
[22.75197029 264.08377075]
[28.33124352 278.00756836]
[23.78437996 292.30181885]
[11.18628311 300.44357300]
[-3.71406436 298.71740723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[3 41]
[4 40]
[5 39]
[6 38]
[9 35]
[10 34]
[12 32]
[13 31]
[14 30]
[16 29]
[17 28]
[18 27]
[19 26]
[44 188]
[45 187]
[47 185]
[48 184]
[49 183]
[50 182]
[51 181]
[52 180]
[53 179]
[55 177]
[56 176]
[57 73]
[58 72]
[59 71]
[61 69]
[62 68]
[74 133]
[75 132]
[76 131]
[81 128]
[82 127]
[84 125]
[85 124]
[86 123]
[89 120]
[90 119]
[92 117]
[93 116]
[95 114]
[96 113]
[97 112]
[98 111]
[101 108]
[102 107]
[134 149]
[135 148]
[136 147]
[137 146]
[150 173]
[151 172]
[152 171]
[153 170]
[154 169]
[155 168]
[156 166]
[157 165]
[158 164]
[159 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
