%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUUGGGGGAGAACUGGAAAGCCGAGGGUAGCCGAGCGGGGCGGGCGCUCUGGAGCGGCGGGUGCUCGGGCUGCCGUCCGCUCCGCCAGAAGCACCGAGCAGCCGAGCCGGGGCCCGCCGCCCUCCUCCUCCAUGAGGCCCGAGUGAGGCGCGGCGGCUAUAGCCGACCCGCGGCGCCUUCCCCCCGCGUCCUAUCGCGAGCGCAGCGGCAGCGGCCCCUGGAGGAGGAGGCGGAGGAGGAGGAGC\
) } def
/len { sequence length } bind def

/coor [
[239.52484131 285.14578247]
[232.38316345 287.43627930]
[228.07437134 301.80410767]
[223.76559448 316.17190552]
[219.45680237 330.53973389]
[222.90386963 345.98086548]
[211.83671570 355.94918823]
[207.52792358 370.31701660]
[215.24185181 384.11087036]
[210.86231995 399.29626465]
[196.98765564 406.86389160]
[181.84944153 402.32406616]
[174.42890930 388.37017822]
[179.12854004 373.28079224]
[193.16011047 366.00820923]
[197.46890259 351.64038086]
[193.71362305 337.22695923]
[205.08897400 326.23095703]
[209.39776611 311.86312866]
[213.70655823 297.49530029]
[218.01535034 283.12747192]
[215.46261597 268.34628296]
[206.58445740 256.25585938]
[197.70631409 244.16545105]
[188.82815552 232.07502747]
[175.05868530 226.39601135]
[173.12716675 210.69314575]
[164.24900818 198.60272217]
[155.37084961 186.51229858]
[146.49270630 174.42187500]
[130.06243896 168.22712708]
[128.22644043 149.89347839]
[119.19584656 137.91648865]
[100.13337708 142.49850464]
[81.04251862 138.03622437]
[65.98609161 125.47929382]
[58.16830826 107.50000000]
[43.16830826 107.50000000]
[28.16830826 107.50000000]
[13.16830730 107.50000000]
[-1.83169258 107.50000000]
[-16.83169174 107.50000000]
[-31.83169174 107.50000000]
[-46.83169174 107.50000000]
[-61.83169174 107.50000000]
[-76.83169556 107.50000000]
[-91.83169556 107.50000000]
[-106.83139038 107.59500885]
[-121.83018494 107.78501892]
[-137.45181274 117.55529022]
[-152.40753174 108.35449219]
[-167.40272522 108.73448181]
[-181.00245667 116.81889343]
[-193.92166138 109.40649414]
[-208.91683960 109.78648376]
[-223.91203308 110.16647339]
[-238.90721130 110.54646301]
[-253.90240479 110.92645264]
[-265.95321655 121.51690674]
[-281.72076416 118.55650330]
[-289.10952759 104.31622314]
[-282.45150757 89.71998596]
[-266.85412598 85.96477509]
[-254.28239441 95.93126678]
[-239.28720093 95.55127716]
[-224.29202271 95.17128754]
[-209.29682922 94.79129791]
[-194.30165100 94.41130829]
[-181.77445984 86.35407257]
[-167.78271484 93.73929596]
[-152.78752136 93.35930634]
[-144.24270630 84.81853485]
[-131.76913452 84.36531067]
[-122.02019501 92.78622437]
[-107.02140045 92.59621429]
[-100.38914490 89.37670135]
[-91.83169556 92.50000000]
[-76.83169556 92.50000000]
[-61.83169174 92.50000000]
[-46.83169174 92.50000000]
[-31.83169174 92.50000000]
[-16.83169174 92.50000000]
[-1.83169258 92.50000000]
[13.16830730 92.50000000]
[28.16830826 92.50000000]
[43.16830826 92.50000000]
[58.16830826 92.50000000]
[58.83693314 86.46343994]
[60.38735199 80.47159576]
[62.81932831 74.65458679]
[66.11327362 69.14321136]
[70.23008728 64.06601715]
[75.11140442 59.54642868]
[67.83187103 46.43122864]
[54.36954117 38.12002182]
[54.95805359 23.23704720]
[47.67852402 10.12184811]
[40.39899445 -2.99335122]
[33.51520538 -8.95978642]
[33.11151886 -16.32111359]
[25.99871063 -29.52747345]
[10.79040432 -33.82665634]
[3.14951706 -47.66112137]
[7.60925150 -62.82312393]
[21.52372551 -70.31731415]
[36.63772964 -65.69753265]
[43.98439407 -51.70460129]
[39.20507050 -36.64028168]
[46.31787872 -23.43392372]
[53.51419449 -10.27288055]
[60.79372406 2.84231853]
[68.07324982 15.95751762]
[81.01490784 23.33063698]
[80.94707489 39.15169907]
[88.22660065 52.26689911]
[103.16767120 50.93852997]
[108.01924133 36.74478912]
[112.87081146 22.55105019]
[117.72238159 8.35730934]
[122.57395172 -5.83643150]
[127.42551422 -20.03017235]
[132.27708435 -34.22391129]
[137.03866577 -48.44809723]
[141.71003723 -62.70215607]
[146.38142395 -76.95621490]
[151.05281067 -91.21027374]
[155.63381958 -105.49362946]
[160.12426758 -119.80571747]
[164.61471558 -134.11781311]
[156.23320007 -149.48577881]
[161.46806335 -165.83499146]
[176.60874939 -173.18110657]
[180.91754150 -187.54893494]
[176.61862183 -203.37458801]
[188.36499023 -214.81813049]
[204.07299805 -210.10743713]
[207.58358765 -194.08845520]
[195.28536987 -183.24014282]
[190.97657776 -168.87231445]
[198.60807800 -158.50762939]
[198.88815308 -145.44503784]
[191.49111938 -134.43992615]
[178.92680359 -129.62736511]
[174.43635559 -115.31527710]
[169.94590759 -101.00318909]
[170.93984985 -93.69810486]
[165.30686951 -86.53888702]
[160.63548279 -72.28482819]
[155.96409607 -58.03077316]
[151.29272461 -43.77671432]
[152.19404602 -36.45963287]
[146.47082520 -29.37234306]
[141.61926270 -15.17860222]
[136.76768494 -0.98486155]
[131.91612244 13.20887852]
[127.06455231 27.40262032]
[122.21298218 41.59635925]
[117.36141205 55.79010010]
[129.99691772 64.25529480]
[139.10485840 76.09892273]
[143.86720276 89.97702026]
[143.94686890 104.38099670]
[139.50630188 117.80136871]
[131.17283630 128.88589478]
[140.20343018 140.86288452]
[152.82987976 143.41760254]
[160.10662842 153.55883789]
[158.58312988 165.54371643]
[167.46127319 177.63415527]
[176.33943176 189.72457886]
[185.21759033 201.81500244]
[199.62208557 208.35879517]
[200.91857910 223.19686890]
[209.79673767 235.28729248]
[218.67488098 247.37771606]
[227.55303955 259.46813965]
[270.13146973 266.41262817]
[281.99310303 275.59420776]
[293.91265869 284.70050049]
[305.88964844 293.73107910]
[317.86663818 302.76168823]
[329.84362793 311.79226685]
[341.82061768 320.82287598]
[353.85458374 329.77743530]
[365.94500732 338.65557861]
[378.09143066 347.45700073]
[390.29333496 356.18127441]
[402.49523926 364.90557861]
[414.69717407 373.62985229]
[430.42324829 375.36230469]
[436.27621460 389.05874634]
[448.47811890 397.78302002]
[460.68005371 406.50732422]
[472.88195801 415.23159790]
[481.65969849 417.66809082]
[485.18225098 424.14450073]
[497.27267456 433.02264404]
[505.13461304 428.95318604]
[513.84692383 427.64935303]
[522.47045898 429.22348022]
[530.08465576 433.47897339]
[535.88592529 439.93466187]
[539.27246094 447.87896729]
[539.90649414 456.44815063]
[537.74798584 464.72045898]
[549.25225830 474.34609985]
[560.75646973 483.97174072]
[576.30560303 486.89331055]
[581.10162354 500.99462891]
[592.60589600 510.62026978]
[604.11010742 520.24591064]
[620.34851074 522.53631592]
[626.23242188 537.84356689]
[615.70892334 550.42083740]
[599.60375977 547.32977295]
[594.48443604 531.75012207]
[582.98022461 522.12451172]
[571.47601318 512.49884033]
[556.74975586 510.26577759]
[551.13085938 495.47595215]
[539.62658691 485.85034180]
[528.12237549 476.22470093]
[507.20315552 480.01876831]
[490.12802124 466.87713623]
[488.39450073 445.11306763]
[476.30407715 436.23492432]
[464.15768433 427.43350220]
[451.95574951 418.70922852]
[439.75384521 409.98492432]
[427.55191040 401.26065063]
[412.69860840 400.15222168]
[405.97286987 385.83178711]
[393.77096558 377.10748291]
[381.56903076 368.38320923]
[369.36712646 359.65890503]
[362.11578369 358.32843018]
[357.06683350 350.74600220]
[344.97640991 341.86785889]
[337.74252319 340.44564819]
[332.79003906 332.79986572]
[320.81304932 323.76928711]
[308.83605957 314.73867798]
[296.85906982 305.70806885]
[284.88208008 296.67749023]
[277.66674805 295.16375732]
[272.81152344 287.45584106]
[260.94989014 278.27426147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 21]
[3 20]
[4 19]
[5 18]
[7 16]
[8 15]
[22 176]
[23 175]
[24 174]
[25 173]
[27 171]
[28 170]
[29 169]
[30 168]
[32 165]
[33 164]
[37 87]
[38 86]
[39 85]
[40 84]
[41 83]
[42 82]
[43 81]
[44 80]
[45 79]
[46 78]
[47 77]
[48 75]
[49 74]
[51 71]
[52 70]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[93 115]
[94 114]
[96 112]
[97 111]
[98 110]
[100 109]
[101 108]
[116 158]
[117 157]
[118 156]
[119 155]
[120 154]
[121 153]
[122 152]
[123 150]
[124 149]
[125 148]
[126 147]
[127 145]
[128 144]
[129 143]
[132 139]
[133 138]
[177 247]
[178 246]
[179 244]
[180 243]
[181 242]
[182 241]
[183 240]
[184 238]
[185 237]
[186 235]
[187 234]
[188 233]
[189 232]
[191 230]
[192 229]
[193 228]
[194 227]
[196 226]
[197 225]
[205 222]
[206 221]
[207 220]
[209 218]
[210 217]
[211 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
