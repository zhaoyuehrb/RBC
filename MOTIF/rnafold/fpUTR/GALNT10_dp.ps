%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GALNT10)
} def

/sequence { (\
GUUGGAGCGGGGCCGGCGCCGCAGCCGCUUCUGCUGGCUGAGCUGCUGCCGCCGCCGGGCGGACGGGCGGACGCGCGGAGCUGGGGGCGGCGCGGCGGGGCCGGCGGGGCGCGGCGGGGCUGACCGGCCCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.148831866 ubox
2 7 0.142336562 ubox
3 132 0.004053347 ubox
4 8 0.015885145 ubox
4 131 0.005737540 ubox
5 130 0.005596224 ubox
7 128 0.005868127 ubox
8 127 0.005863366 ubox
8 132 0.914773778 ubox
9 131 0.999786354 ubox
10 125 0.005728710 ubox
10 130 0.999971538 ubox
11 124 0.005714347 ubox
11 129 0.999974519 ubox
12 128 0.999976694 ubox
13 127 0.999978065 ubox
14 122 0.010608646 ubox
14 126 0.999921140 ubox
15 121 0.029594155 ubox
15 125 0.999528297 ubox
16 120 0.060681923 ubox
16 124 0.997911806 ubox
17 116 0.016195719 ubox
17 119 0.077825742 ubox
17 122 0.835037032 ubox
18 115 0.016375368 ubox
18 120 0.980419538 ubox
18 121 0.176593805 ubox
19 114 0.016378081 ubox
19 117 0.080181117 ubox
19 118 0.020033048 ubox
19 119 0.996212971 ubox
20 113 0.016377966 ubox
20 116 0.080362692 ubox
20 117 0.024105359 ubox
20 118 0.995571942 ubox
20 122 0.003751152 ubox
21 112 0.016373127 ubox
21 115 0.079220982 ubox
21 120 0.016315084 ubox
22 111 0.016212967 ubox
22 114 0.078586218 ubox
22 119 0.016327104 ubox
24 110 0.015750026 ubox
24 112 0.075631832 ubox
24 115 0.996246655 ubox
25 109 0.015755125 ubox
25 111 0.053753281 ubox
25 114 0.996736715 ubox
26 108 0.015567646 ubox
26 111 0.057534490 ubox
26 113 0.996728104 ubox
27 110 0.080210054 ubox
27 112 0.996617438 ubox
28 107 0.003488274 ubox
28 109 0.080210414 ubox
28 111 0.996308786 ubox
29 108 0.061572496 ubox
29 109 0.962502856 ubox
30 107 0.033017571 ubox
30 108 0.986756910 ubox
30 109 0.090341609 ubox
31 106 0.032419474 ubox
31 107 0.996359816 ubox
31 108 0.076718311 ubox
32 106 0.997184695 ubox
32 107 0.053857914 ubox
33 105 0.999955415 ubox
34 104 0.999989778 ubox
35 103 0.999239752 ubox
36 102 0.999963849 ubox
37 101 0.999995202 ubox
38 99 0.022410275 ubox
38 100 0.999699160 ubox
39 98 0.030722548 ubox
39 99 0.983328005 ubox
42 96 0.999280134 ubox
43 95 0.999902750 ubox
43 98 0.012758796 ubox
44 94 0.999153226 ubox
44 97 0.012769209 ubox
45 93 0.999829635 ubox
45 96 0.012803714 ubox
46 92 0.977289341 ubox
46 95 0.012798213 ubox
47 92 0.209404568 ubox
47 94 0.011454177 ubox
48 91 0.999518100 ubox
48 93 0.008023802 ubox
49 90 0.999964803 ubox
49 92 0.005729974 ubox
50 89 0.999952345 ubox
50 92 0.005070391 ubox
51 88 0.999955683 ubox
51 91 0.007180463 ubox
52 87 0.999964147 ubox
52 90 0.007182205 ubox
53 85 0.004390087 ubox
53 86 0.999345028 ubox
53 89 0.007182076 ubox
54 88 0.007175261 ubox
55 84 0.596976124 ubox
55 85 0.801400555 ubox
55 87 0.006978120 ubox
56 83 0.596094547 ubox
56 84 0.802037291 ubox
56 86 0.006749491 ubox
57 82 0.493972011 ubox
58 81 0.370353161 ubox
58 82 0.864512433 ubox
59 74 0.003340914 ubox
59 76 0.011104219 ubox
59 81 0.928805823 ubox
60 73 0.003342480 ubox
60 75 0.011109989 ubox
60 77 0.024639435 ubox
60 80 0.984615236 ubox
61 72 0.003338307 ubox
61 74 0.010893961 ubox
61 76 0.025165127 ubox
64 73 0.027264906 ubox
64 75 0.007483990 ubox
64 77 0.996408839 ubox
65 72 0.027330556 ubox
65 74 0.007481089 ubox
65 76 0.996751845 ubox
67 74 0.996817442 ubox
67 76 0.070838823 ubox
68 73 0.995480367 ubox
68 75 0.072199795 ubox
69 74 0.071936438 ubox
8 132 0.9500000 lbox
9 131 0.9500000 lbox
10 130 0.9500000 lbox
11 129 0.9500000 lbox
12 128 0.9500000 lbox
13 127 0.9500000 lbox
14 126 0.9500000 lbox
15 125 0.9500000 lbox
16 124 0.9500000 lbox
18 120 0.9500000 lbox
19 119 0.9500000 lbox
20 118 0.9500000 lbox
24 115 0.9500000 lbox
25 114 0.9500000 lbox
26 113 0.9500000 lbox
27 112 0.9500000 lbox
28 111 0.9500000 lbox
29 109 0.9500000 lbox
30 108 0.9500000 lbox
31 107 0.9500000 lbox
32 106 0.9500000 lbox
33 105 0.9500000 lbox
34 104 0.9500000 lbox
35 103 0.9500000 lbox
36 102 0.9500000 lbox
37 101 0.9500000 lbox
38 100 0.9500000 lbox
39 99 0.9500000 lbox
42 96 0.9500000 lbox
43 95 0.9500000 lbox
44 94 0.9500000 lbox
45 93 0.9500000 lbox
46 92 0.9500000 lbox
48 91 0.9500000 lbox
49 90 0.9500000 lbox
50 89 0.9500000 lbox
51 88 0.9500000 lbox
52 87 0.9500000 lbox
53 86 0.9500000 lbox
55 85 0.9500000 lbox
56 84 0.9500000 lbox
58 82 0.9500000 lbox
59 81 0.9500000 lbox
60 80 0.9500000 lbox
64 77 0.9500000 lbox
65 76 0.9500000 lbox
67 74 0.9500000 lbox
68 73 0.9500000 lbox
showpage
end
%%EOF
