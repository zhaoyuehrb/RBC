%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UQCRQ)
} def

/sequence { (\
CUUGCCGGAAAUGACGAACGAGUCAACCGGAUCGGUGACUGUGGAGGGCGAGCUGAGCCCUGGCCGCCGCCACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.013161237 ubox
1 22 0.012607639 ubox
1 30 0.003326011 ubox
1 35 0.155562444 ubox
2 7 0.012097058 ubox
2 9 0.008859191 ubox
2 10 0.008092369 ubox
2 11 0.008800375 ubox
2 17 0.056096184 ubox
2 18 0.007284442 ubox
2 21 0.024389402 ubox
2 31 0.029173265 ubox
2 34 0.135631784 ubox
2 35 0.137997485 ubox
2 38 0.140731420 ubox
3 8 0.009212202 ubox
3 9 0.008900996 ubox
3 10 0.009990108 ubox
3 16 0.059327449 ubox
3 17 0.007388392 ubox
3 20 0.032440234 ubox
3 30 0.006187572 ubox
3 34 0.177338306 ubox
3 37 0.153206874 ubox
3 72 0.009674809 ubox
3 74 0.034494471 ubox
4 15 0.060706072 ubox
4 19 0.035611112 ubox
4 33 0.207066983 ubox
4 36 0.167359395 ubox
4 70 0.005072575 ubox
4 71 0.009360630 ubox
4 73 0.043523459 ubox
5 30 0.969510395 ubox
5 35 0.167588119 ubox
5 69 0.003977672 ubox
6 13 0.062908370 ubox
6 16 0.104323746 ubox
6 20 0.060051164 ubox
6 29 0.972830944 ubox
6 34 0.167019217 ubox
6 69 0.004319482 ubox
7 12 0.055036603 ubox
7 15 0.105234907 ubox
7 19 0.060567368 ubox
7 28 0.973325323 ubox
7 33 0.164026171 ubox
7 68 0.004478489 ubox
8 27 0.972890067 ubox
8 32 0.149089392 ubox
8 33 0.009838431 ubox
8 67 0.004046912 ubox
9 32 0.013571673 ubox
12 20 0.004795901 ubox
12 25 0.975199091 ubox
12 29 0.011047208 ubox
13 19 0.007638645 ubox
13 24 0.987588964 ubox
13 28 0.005945304 ubox
14 23 0.987524625 ubox
15 22 0.987321440 ubox
16 24 0.004929886 ubox
17 23 0.004744174 ubox
18 42 0.009874881 ubox
19 41 0.010581931 ubox
19 43 0.004194460 ubox
20 40 0.006787148 ubox
20 42 0.003766587 ubox
21 40 0.145155679 ubox
22 39 0.155666699 ubox
23 38 0.156029665 ubox
24 37 0.155945027 ubox
25 36 0.110000059 ubox
26 36 0.114842492 ubox
27 35 0.159607208 ubox
28 34 0.159613953 ubox
29 33 0.149330328 ubox
29 71 0.005423900 ubox
30 39 0.004359287 ubox
30 70 0.005645413 ubox
32 38 0.058713768 ubox
33 37 0.063687334 ubox
33 41 0.011015432 ubox
33 43 0.003451627 ubox
33 44 0.004000949 ubox
33 69 0.128709665 ubox
34 40 0.037479087 ubox
34 42 0.003305376 ubox
34 68 0.135273591 ubox
34 71 0.678253349 ubox
35 39 0.040664825 ubox
35 67 0.135268187 ubox
35 70 0.678985013 ubox
35 73 0.162475552 ubox
36 66 0.135149747 ubox
36 69 0.678526490 ubox
36 72 0.162712881 ubox
36 74 0.005923215 ubox
37 65 0.134161341 ubox
37 68 0.674511903 ubox
37 71 0.162314463 ubox
37 73 0.006015264 ubox
39 46 0.004453202 ubox
39 63 0.104202068 ubox
40 45 0.004458260 ubox
40 62 0.103516007 ubox
40 66 0.025559580 ubox
40 69 0.014695573 ubox
40 74 0.522396390 ubox
41 61 0.021666174 ubox
41 64 0.104314787 ubox
41 65 0.027428890 ubox
41 67 0.692286109 ubox
41 68 0.012437517 ubox
41 70 0.035469333 ubox
41 73 0.701619338 ubox
42 62 0.006669167 ubox
42 63 0.103648725 ubox
42 66 0.692888836 ubox
42 69 0.035542486 ubox
42 72 0.702006531 ubox
43 61 0.003502336 ubox
43 65 0.693308288 ubox
43 68 0.035571901 ubox
43 71 0.702332601 ubox
44 64 0.691013613 ubox
44 67 0.035558220 ubox
44 70 0.702043698 ubox
45 61 0.660332041 ubox
46 60 0.711190734 ubox
46 61 0.011321764 ubox
46 65 0.007548496 ubox
46 68 0.094249236 ubox
47 59 0.711421885 ubox
47 60 0.009466479 ubox
47 64 0.007100353 ubox
47 65 0.032248383 ubox
47 67 0.066945697 ubox
47 68 0.695463036 ubox
47 71 0.003406377 ubox
48 58 0.711451292 ubox
48 59 0.007044576 ubox
48 64 0.032885868 ubox
48 67 0.698696815 ubox
48 70 0.003444944 ubox
49 55 0.004023754 ubox
49 57 0.711364618 ubox
49 62 0.006578803 ubox
49 63 0.032984626 ubox
49 66 0.701834830 ubox
49 69 0.003471431 ubox
50 54 0.008601446 ubox
50 61 0.005735321 ubox
50 65 0.701480001 ubox
50 68 0.003469359 ubox
51 61 0.032542197 ubox
52 58 0.010053974 ubox
52 60 0.031942951 ubox
52 64 0.701665083 ubox
52 67 0.003403125 ubox
53 57 0.010466789 ubox
53 63 0.701706919 ubox
53 66 0.003353290 ubox
54 62 0.692401149 ubox
55 61 0.529536823 ubox
57 64 0.009183506 ubox
58 63 0.009170847 ubox
61 69 0.003226319 ubox
61 72 0.007622231 ubox
62 68 0.013536599 ubox
62 71 0.018140814 ubox
63 67 0.013334143 ubox
63 70 0.018243155 ubox
64 69 0.018241395 ubox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
34 71 0.9500000 lbox
35 70 0.9500000 lbox
36 69 0.9500000 lbox
37 68 0.9500000 lbox
41 67 0.9500000 lbox
42 66 0.9500000 lbox
43 65 0.9500000 lbox
44 64 0.9500000 lbox
45 61 0.9500000 lbox
46 60 0.9500000 lbox
47 59 0.9500000 lbox
48 58 0.9500000 lbox
49 57 0.9500000 lbox
showpage
end
%%EOF
