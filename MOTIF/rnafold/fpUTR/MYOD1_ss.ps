%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAGCUAGGGGUGAGGAAGCCCUGGGGCGCUGCCGCCGCUUUCCUUAACCACAAAUCAGGCCGGACAGGAGAGGGAGGGGUGGGGGACAGUGGGUGGGCAUUCAGACUGCCAGCACUUUGCUAUCUACAGCCGGGGCUCCCGAGCGGCAGAAAGUUCCGGCCACUCUCUGCCGCUUGGGUUGGGCGAAGCCAGGACCGUGCCGCGCCACCGCCAGGAU\
) } def
/len { sequence length } bind def

/coor [
[49.86706161 352.34658813]
[40.19527435 340.53900146]
[36.61276627 325.70227051]
[39.83084488 310.78225708]
[49.21055984 298.74133301]
[62.88956070 291.97024536]
[62.67633820 276.97177124]
[59.94210434 273.06417847]
[59.62862015 267.39904785]
[62.67633820 261.54531860]
[62.88956070 246.54682922]
[62.99617386 231.54721069]
[62.99617386 216.54721069]
[62.99617386 201.54721069]
[62.99617386 186.54721069]
[55.25887299 173.81994629]
[62.99617386 160.01977539]
[62.99617386 145.01977539]
[67.95632172 109.88069916]
[91.56442261 97.53211212]
[80.12723541 87.82691956]
[68.69004059 78.12172699]
[57.25285339 68.41654205]
[45.81566620 58.71135330]
[34.37847519 49.00616455]
[22.94128609 39.30097580]
[11.50409603 29.59578514]
[-3.11692977 39.74306870]
[-24.69155121 38.05640030]
[-43.52103424 20.78354073]
[-58.24566650 17.92256927]
[-72.97029877 15.06159687]
[-87.69493866 12.20062447]
[-102.41957092 9.33965302]
[-117.16416931 6.58340979]
[-131.92797852 3.93203568]
[-146.87849426 9.10821152]
[-158.03773499 -0.75690985]
[-172.80154419 -3.40828419]
[-187.56535339 -6.05965853]
[-202.32917786 -8.71103287]
[-217.09298706 -11.36240673]
[-231.85679626 -14.01378059]
[-246.63908386 -16.56015205]
[-261.43908691 -19.00139236]
[-276.23910522 -21.44263458]
[-291.03912354 -23.88387489]
[-305.83914185 -26.32511520]
[-318.59692383 -17.38772392]
[-333.57144165 -20.07431984]
[-342.01327515 -32.29198456]
[-356.81326294 -34.73322678]
[-363.97644043 -21.39277649]
[-375.08483887 -11.10285950]
[-388.93350220 -4.97964859]
[-404.02020264 -3.68734360]
[-418.70846558 -7.36612368]
[-431.40502930 -15.61694241]
[-440.73266602 -27.54481316]
[-445.67956543 -41.85588837]
[-445.70913696 -56.99781418]
[-440.81814575 -71.32810211]
[-431.53720093 -83.29231262]
[-418.87295532 -91.59265900]
[-404.19915771 -95.32877350]
[-389.10751343 -94.09539795]
[-375.23507690 -88.02632141]
[-364.08657837 -77.77986908]
[-356.87133789 -64.46749878]
[-354.37203979 -49.53323746]
[-339.57202148 -47.09199524]
[-327.65359497 -55.95127106]
[-312.60949707 -53.68633652]
[-303.39788818 -41.12512589]
[-288.59786987 -38.68388748]
[-273.79788208 -36.24264526]
[-258.99786377 -33.80140305]
[-244.19784546 -31.36016464]
[-237.09190369 -33.37148285]
[-229.20542908 -28.77759552]
[-214.44161987 -26.12622070]
[-199.67779541 -23.47484779]
[-184.91398621 -20.82347298]
[-170.15017700 -18.17209816]
[-155.38635254 -15.52072430]
[-141.49185181 -20.88654518]
[-129.27661133 -10.83177853]
[-114.51279449 -8.18040466]
[-107.37897491 -10.09051132]
[-99.55859375 -5.38498116]
[-84.83396149 -2.52400899]
[-70.10932922 0.33696300]
[-55.38469696 3.19793510]
[-40.66006088 6.05890703]
[-30.01583290 -4.50993347]
[-32.77207565 -19.25452995]
[-35.52832031 -33.99912643]
[-38.28456116 -48.74372482]
[-41.04080582 -63.48831940]
[-55.36917496 -69.20683289]
[-64.31269836 -81.77730560]
[-65.01752472 -97.18856049]
[-57.25875473 -110.52291870]
[-43.51217651 -117.52542877]
[-28.16427612 -115.96161652]
[-16.11251259 -106.33049774]
[-11.20255947 -91.70531464]
[-15.00116444 -76.75292206]
[-26.29620743 -66.24456024]
[-23.53996468 -51.49996567]
[-20.78372192 -36.75537109]
[-18.02747917 -22.01077271]
[-15.27123642 -7.26617622]
[-0.27729866 -6.83977318]
[3.31243634 -21.40390015]
[6.90217113 -35.96802902]
[10.49190617 -50.53215408]
[8.41181469 -67.35801697]
[24.00428772 -74.01467896]
[34.71723175 -60.87431335]
[25.05603409 -46.94242096]
[21.46629906 -32.37829208]
[17.87656403 -17.81416512]
[14.28682899 -3.25003815]
[20.70556831 -16.80731583]
[33.63290024 -24.41547394]
[48.60149765 -23.44534492]
[60.43862152 -14.23217487]
[65.05368805 0.04021566]
[60.85186386 14.43968296]
[49.28517532 23.99016762]
[34.35075760 25.39128494]
[21.20928574 18.15859604]
[32.64647293 27.86378479]
[44.08366394 37.56897354]
[55.52085495 47.27416229]
[66.95804596 56.97935104]
[78.39523315 66.68453979]
[89.83242035 76.38973236]
[101.26961517 86.09491730]
[115.66745758 90.30230713]
[130.53088379 88.28276825]
[145.39431763 86.26322937]
[160.25773621 84.24369812]
[175.12117004 82.22415924]
[189.98458862 80.20462799]
[204.84802246 78.18508911]
[219.71144104 76.16555023]
[234.57487488 74.14601898]
[249.43830872 72.12648010]
[264.30172729 70.10694122]
[279.16516113 68.08740997]
[294.02859497 66.06787109]
[306.66137695 56.54302216]
[320.31451416 62.49633026]
[335.17791748 60.47679520]
[350.04135132 58.45726013]
[358.23510742 45.13823700]
[373.08944702 40.25119781]
[387.59057617 46.10365677]
[394.89151001 59.93225479]
[391.54498291 75.20755768]
[379.13113403 84.71702576]
[363.51138306 83.97058868]
[352.06088257 73.32068634]
[337.19744873 75.34022522]
[322.33404541 77.35975647]
[310.76437378 86.74015808]
[296.04812622 80.93129730]
[281.18469238 82.95083618]
[266.32125854 84.97037506]
[251.45783997 86.98990631]
[236.59440613 89.00944519]
[221.73098755 91.02898407]
[206.86755371 93.04851532]
[192.00413513 95.06805420]
[177.14070129 97.08758545]
[162.27726746 99.10712433]
[147.41384888 101.12666321]
[132.55041504 103.14619446]
[117.68698883 105.16573334]
[113.89059448 119.67736053]
[125.86084747 128.71687317]
[137.83111572 137.75639343]
[149.80136108 146.79591370]
[165.41751099 144.36450195]
[178.12959290 153.75483704]
[180.39576721 169.39581299]
[170.87155151 182.00790405]
[155.20750427 184.10859680]
[142.69680786 174.45156860]
[140.76184082 158.76617432]
[128.79159546 149.72665405]
[116.82132721 140.68713379]
[104.85107422 131.64761353]
[98.13734436 134.99066162]
[104.82342529 148.41810608]
[115.33155060 159.12226868]
[108.39845276 172.42385864]
[93.60545349 169.94047546]
[91.39597321 155.10418701]
[84.70989990 141.67672729]
[77.99617004 145.01977539]
[77.99617004 160.01977539]
[85.73347473 173.81994629]
[77.99617004 186.54721069]
[77.99617004 201.54721069]
[77.99617004 216.54721069]
[77.99617004 231.54721069]
[81.12372589 240.12152100]
[77.88804626 246.76005554]
[77.67481995 261.75854492]
[77.67481995 276.75854492]
[77.88804626 291.75701904]
[91.75399780 298.13653564]
[101.47220612 309.90594482]
[105.11311340 324.72845459]
[101.95381165 339.66101074]
[92.62158966 351.73876953]
[78.96936035 358.56369019]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 214]
[7 213]
[10 212]
[11 211]
[12 209]
[13 208]
[14 207]
[15 206]
[17 204]
[18 203]
[20 140]
[21 139]
[22 138]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[30 94]
[31 93]
[32 92]
[33 91]
[34 90]
[35 88]
[36 87]
[38 85]
[39 84]
[40 83]
[41 82]
[42 81]
[43 80]
[44 78]
[45 77]
[46 76]
[47 75]
[48 74]
[51 71]
[52 70]
[95 113]
[96 112]
[97 111]
[98 110]
[99 109]
[114 124]
[115 123]
[116 122]
[117 121]
[141 181]
[142 180]
[143 179]
[144 178]
[145 177]
[146 176]
[147 175]
[148 174]
[149 173]
[150 172]
[151 171]
[152 170]
[153 169]
[155 167]
[156 166]
[157 165]
[182 195]
[183 194]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
