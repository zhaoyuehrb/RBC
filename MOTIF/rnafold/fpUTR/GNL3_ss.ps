%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCCAAGCGAUCCCUGCUCCGCGCGACACUGCGUGCCCGCGCACGCAGAGAGGCGGUGACGCACUUUACGGCGGCAGCGUAAGUGCGUGACGCUCGUCAGUGGCUUCAGUUCACACGUGGCGCCAGCGGAGGCAGGUUGAUGUGUUUGUGCUUCCUUCUACAGCCAAUAUGAAAAGGCCUAGUAAGUGGGGUCGGGAGGCGGGCGUGGAGGGACCCACGUCUGGAAGUUGCUGCAGCCACCACGACGCUC\
UUCUACGGCUACGGCUUUGUCUCUGCUGAGUUAAAGAAAGCAAGUAAACGC\
) } def
/len { sequence length } bind def

/coor [
[396.89227295 272.39132690]
[384.50073242 263.93850708]
[372.10922241 255.48567200]
[357.23507690 254.70538330]
[350.19485474 240.53689575]
[337.80334473 232.08407593]
[325.41180420 223.63125610]
[313.02029419 215.17843628]
[300.62875366 206.72561646]
[286.69186401 211.91224670]
[272.20190430 207.84967041]
[262.77230835 195.89407349]
[262.18383789 180.50057983]
[249.79231262 172.04776001]
[237.40078735 163.59494019]
[225.00926208 155.14212036]
[212.61773682 146.68930054]
[200.22621155 138.23648071]
[187.83470154 129.78366089]
[180.57557678 128.61614990]
[175.36022949 121.18039703]
[163.05584717 112.60121918]
[150.75148010 104.02203369]
[141.64695740 126.06700897]
[123.99520874 140.82379150]
[102.33319092 145.51516724]
[81.78446198 139.82858276]
[70.12566376 149.26640320]
[58.46686554 158.70422363]
[60.75553513 173.82734680]
[55.20384598 187.97215271]
[43.39598846 197.37646484]
[28.56550598 199.59294128]
[14.71014118 194.12535095]
[3.05134201 203.56317139]
[-8.60745716 213.00099182]
[-20.26625633 222.43881226]
[-31.92505646 231.87663269]
[-43.58385468 241.31445312]
[-55.24265289 250.75225830]
[-66.90145111 260.19009399]
[-72.27268219 275.68466187]
[-88.42587280 278.51419067]
[-98.74401855 265.76791382]
[-92.61268616 250.55807495]
[-76.33927155 248.53128052]
[-64.68047333 239.09346008]
[-53.02167130 229.65563965]
[-41.36287308 220.21783447]
[-29.70407486 210.78001404]
[-18.04527473 201.34219360]
[-6.38647556 191.90437317]
[5.27232361 182.46655273]
[2.80992699 167.77635193]
[8.06618881 153.73257446]
[19.72324753 144.14198303]
[34.71406555 141.65760803]
[49.02904510 147.04542542]
[60.68784714 137.60760498]
[72.34664154 128.16978455]
[67.59475708 113.94235992]
[52.60437775 113.40522766]
[38.53599548 120.64340210]
[26.09394646 112.45532227]
[11.10356712 111.91819763]
[-3.88681293 111.38106537]
[-18.87719345 110.84394073]
[-33.86757278 110.30680847]
[-48.85795212 109.76968384]
[-63.84833145 109.23255157]
[-78.83871460 108.69542694]
[-87.47579956 111.50453949]
[-93.97951508 108.07532501]
[-108.96361542 107.38482666]
[-117.62899780 110.10540771]
[-124.09728241 106.60981750]
[-139.07353210 105.76602936]
[-153.46264648 113.63275909]
[-167.32737732 104.87483215]
[-166.40487671 88.50164795]
[-151.64413452 81.35653687]
[-138.22973633 90.78977966]
[-123.25348663 91.63357544]
[-108.27311707 92.40072632]
[-93.28901672 93.09122467]
[-78.30158234 93.70504761]
[-63.31120300 94.24217224]
[-48.32082367 94.77930450]
[-33.33044434 95.31642914]
[-18.34006500 95.85356140]
[-3.34968472 96.39068604]
[11.64069557 96.92781067]
[26.63107491 97.46494293]
[39.62724686 90.18834686]
[53.14150620 98.41484833]
[68.13188934 98.95198059]
[74.03129578 85.16078949]
[63.28989029 74.69072723]
[52.54848480 64.22065735]
[41.70050430 53.86106110]
[30.74707794 43.61301422]
[19.79365349 33.36496735]
[8.84022903 23.11691856]
[-2.11319590 12.86887074]
[-13.11891174 2.67700052]
[-24.17663193 -7.45842457]
[-35.23435211 -17.59384918]
[-49.61331940 -12.34944057]
[-64.78091431 -14.39948082]
[-77.25173187 -23.27288437]
[-84.16007233 -36.93061066]
[-83.91844177 -52.23421097]
[-76.58237457 -65.66703033]
[-63.83763885 -74.14231110]
[-48.61288452 -75.71248627]
[-34.40665054 -70.01674652]
[-24.48341942 -58.36393356]
[-21.12348175 -43.43177414]
[-25.09892654 -28.65156937]
[-14.04120636 -18.51614380]
[-2.98348713 -8.38071918]
[4.03457022 -6.18875790]
[8.13485241 1.91544569]
[19.08827782 12.16349411]
[30.04170227 22.41154099]
[40.99512482 32.65959167]
[51.94855118 42.90763855]
[56.61942291 43.65221786]
[60.88780212 47.30702209]
[63.01854706 53.47925568]
[73.75995636 63.94931793]
[84.50135803 74.41938019]
[97.86994171 67.61636353]
[95.72830963 52.77003860]
[93.58668518 37.92370987]
[91.44505310 23.07738304]
[89.30342102 8.23105621]
[87.16179657 -6.61527109]
[85.02016449 -21.46159744]
[70.28106689 -25.18011665]
[58.08991623 -34.25999832]
[50.30577469 -47.31662750]
[48.11566925 -62.35896301]
[51.85357285 -77.09316254]
[60.94948196 -89.27235413]
[74.01634216 -97.03931427]
[89.06154633 -99.20963287]
[103.79080963 -95.45234680]
[115.95803070 -86.34042358]
[123.70779419 -73.26335907]
[125.85832214 -58.21531677]
[122.08166504 -43.49100494]
[112.95374298 -31.33578110]
[99.86649323 -23.60322571]
[102.00812531 -8.75689983]
[104.14974976 6.08942747]
[106.29138184 20.93575478]
[108.43300629 35.78208160]
[110.57463837 50.62841034]
[112.71626282 65.47473907]
[120.11595917 66.69724274]
[129.63285828 55.10290146]
[134.91534424 69.14225006]
[142.31504822 70.36475372]
[149.11805725 56.99617386]
[155.92108154 43.62759399]
[153.99612427 23.52827644]
[170.73840332 13.79654884]
[177.26640320 0.29154414]
[183.79440308 -13.21345997]
[175.09475708 -25.87093163]
[173.90536499 -41.18370056]
[180.54618835 -55.03271103]
[193.23086548 -63.69264984]
[208.54728699 -64.83403015]
[222.37541199 -58.14983749]
[230.99554443 -45.43807602]
[232.08891296 -30.11815071]
[225.36140442 -16.31104469]
[212.62269592 -7.73079729]
[197.29940796 -6.68545437]
[190.77140808 6.81955004]
[184.24340820 20.32455444]
[188.44067383 29.57278252]
[186.84777832 39.82481384]
[179.74914551 47.68873978]
[169.28965759 50.43061066]
[162.48664856 63.79919434]
[155.68362427 77.16777039]
[159.33065796 91.71765900]
[171.63502502 100.29683685]
[183.93940735 108.87602234]
[196.28752136 117.39213562]
[208.67903137 125.84495544]
[221.07055664 134.29777527]
[233.46208191 142.75059509]
[245.85360718 151.20341492]
[258.24511719 159.65623474]
[270.63665771 168.10905457]
[285.18353271 163.04005432]
[299.75552368 167.45706177]
[308.82522583 179.46559143]
[309.08157349 194.33409119]
[321.47311401 202.78691101]
[333.86462402 211.23973083]
[346.25616455 219.69255066]
[358.64767456 228.14537048]
[374.40814209 229.53027344]
[380.56204224 243.09414673]
[392.95355225 251.54696655]
[405.34509277 259.99978638]
[419.44628906 265.11407471]
[434.37545776 266.57000732]
[449.30465698 268.02593994]
[464.23382568 269.48187256]
[479.16299438 270.93780518]
[494.09216309 272.39373779]
[486.47216797 259.47338867]
[491.72415161 245.42288208]
[505.95077515 240.66864014]
[518.59497070 248.73864746]
[520.27386475 263.64437866]
[509.74084473 274.32510376]
[524.57598877 276.54266357]
[539.41119385 278.76022339]
[554.24633789 280.97778320]
[569.09271240 283.11941528]
[583.94976807 285.18505859]
[598.80688477 287.25067139]
[611.33422852 277.99307251]
[626.37200928 280.29956055]
[635.12054443 292.29949951]
[649.97760010 294.36514282]
[664.83471680 296.43078613]
[679.69177246 298.49642944]
[696.21264648 294.68887329]
[704.44482422 309.51007080]
[692.48175049 321.52343750]
[677.62615967 313.35351562]
[662.76904297 311.28787231]
[647.91198730 309.22222900]
[633.05487061 307.15658569]
[621.36462402 316.31488037]
[606.26800537 314.43167114]
[596.74121094 302.10778809]
[581.88415527 300.04214478]
[567.02703857 297.97650146]
[560.00524902 300.15649414]
[552.02880859 295.81295776]
[537.19360352 293.59539795]
[522.35845947 291.37783813]
[507.52328491 289.16027832]
[492.63623047 287.32290649]
[477.70706177 285.86697388]
[462.77789307 284.41104126]
[447.84872437 282.95510864]
[432.91952515 281.49917603]
[417.99035645 280.04324341]
[413.82757568 286.28192139]
[405.50201416 298.75930786]
[401.33920288 304.99798584]
[408.41439819 318.22454834]
[423.27215576 322.90267944]
[430.25897217 336.41708374]
[425.70751953 350.55282593]
[432.78271484 363.77938843]
[439.85787964 377.00595093]
[455.72872925 386.38998413]
[454.41714478 403.91149902]
[461.62728882 417.06497192]
[468.83746338 430.21844482]
[476.04760742 443.37188721]
[483.25778198 456.52536011]
[503.81124878 461.18414307]
[513.99731445 479.29400635]
[507.49282837 498.71466064]
[515.23516846 511.56207275]
[522.97753906 524.40948486]
[537.58483887 531.86328125]
[538.16296387 548.25219727]
[524.11724854 556.71679688]
[509.89666748 548.54931641]
[510.13015747 532.15185547]
[502.38778687 519.30444336]
[494.64541626 506.45703125]
[485.42636108 507.10592651]
[476.54089355 504.36199951]
[469.20251465 498.55639648]
[464.42916870 490.44131470]
[462.90209961 481.09274292]
[464.86883545 471.76773071]
[470.10430908 463.73550415]
[462.89413452 450.58206177]
[455.68399048 437.42858887]
[448.47381592 424.27511597]
[441.26367188 411.12167358]
[429.77099609 407.45089722]
[423.64596558 396.59484863]
[426.63131714 384.08114624]
[419.55615234 370.85458374]
[412.48095703 357.62802124]
[398.19625854 353.56814575]
[390.83261108 340.25531006]
[395.18783569 325.29971313]
[388.11264038 312.07315063]
[384.18515015 295.00091553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 211]
[2 210]
[3 209]
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[18 194]
[19 193]
[21 192]
[22 191]
[23 190]
[27 60]
[28 59]
[29 58]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[61 96]
[62 95]
[64 93]
[65 92]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[73 85]
[74 84]
[76 83]
[77 82]
[97 132]
[98 131]
[99 130]
[100 127]
[101 126]
[102 125]
[103 124]
[104 123]
[105 121]
[106 120]
[107 119]
[133 160]
[134 159]
[135 158]
[136 157]
[137 156]
[138 155]
[139 154]
[164 189]
[165 188]
[166 187]
[168 183]
[169 182]
[170 181]
[212 258]
[213 257]
[214 256]
[215 255]
[216 254]
[217 253]
[223 252]
[224 251]
[225 250]
[226 249]
[227 247]
[228 246]
[229 245]
[232 242]
[233 241]
[234 240]
[235 239]
[261 305]
[262 304]
[265 301]
[266 300]
[267 299]
[269 296]
[270 295]
[271 294]
[272 293]
[273 292]
[276 285]
[277 284]
[278 283]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
