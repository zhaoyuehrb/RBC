%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCGGGGCAACGACGGGAGGCGGGAGCGCCGCACUGCCUUGGAGGCGGGGCAACGCUUGGAGGCGGGAACGCGGCACGCGAGCGUUGGGGGCCCUAAGCGUCGCGACCUGGGGGCUUCGGGGAGGUAGCCGUGGACGUGGGCAGAGCGCGGGCCUCGUGGUGUGCGGGCACUGUGGGCCGGGCGAGCCCCUUCCCGCCCGUGUGGUUGACAUC\
) } def
/len { sequence length } bind def

/coor [
[94.74879456 401.29891968]
[96.46514130 396.37875366]
[93.65869141 381.64364624]
[90.85223389 366.90853882]
[88.04578400 352.17340088]
[73.07092285 351.30523682]
[68.58048248 365.61734009]
[76.11904144 379.50781250]
[71.54751587 394.63650513]
[57.57810211 402.02777100]
[42.49861145 397.29653931]
[35.25543213 383.24978638]
[40.14582062 368.22116089]
[54.26839066 361.12689209]
[58.75883865 346.81478882]
[67.30377960 337.63323975]
[77.26442719 333.68658447]
[86.26495361 334.66107178]
[86.04779816 319.66262817]
[85.83064270 304.66421509]
[85.61349487 289.66577148]
[85.39633942 274.66735840]
[85.17918396 259.66891479]
[81.94075775 253.02932739]
[85.06903076 244.45216370]
[85.06903076 229.45216370]
[85.06903076 214.45216370]
[74.38816071 204.13447571]
[74.17448425 188.92234802]
[85.06903076 177.78921509]
[85.06903076 162.78921509]
[85.06903076 147.78921509]
[85.06903076 132.78921509]
[73.01081848 123.86736298]
[58.66660309 128.25408936]
[47.73252106 139.68896484]
[33.29890442 136.01200867]
[18.95468712 140.39874268]
[4.61046934 144.78546143]
[-9.73374939 149.17219543]
[-24.07796860 153.55892944]
[-38.42218781 157.94566345]
[-51.80060959 168.35978699]
[-65.51126862 158.38711548]
[-59.72382355 142.45156860]
[-42.80891418 143.60144043]
[-28.46469688 139.21470642]
[-14.12047863 134.82797241]
[0.22373989 130.44125366]
[14.56795883 126.05451965]
[28.91217613 121.66779327]
[38.82026672 110.54668427]
[54.27987289 113.90987396]
[68.62409210 109.52314758]
[70.59277344 82.58931732]
[92.69140625 65.19885254]
[81.67104340 55.02282333]
[70.65068054 44.84679413]
[59.63031769 34.67076492]
[48.60995102 24.49473381]
[37.58958817 14.31870461]
[26.56922531 4.14267492]
[15.54886055 -6.03335476]
[7.12507153 -9.55379963]
[4.44397211 -16.43736267]
[-6.42791986 -26.77186584]
[-17.29981232 -37.10636902]
[-33.89254761 -33.81249237]
[-49.02807999 -40.98798752]
[-56.82460022 -55.62510681]
[-54.38343811 -71.86042786]
[-65.40380096 -82.03646088]
[-76.42416382 -92.21248627]
[-87.44452667 -102.38851929]
[-98.46488953 -112.56455231]
[-113.37104797 -108.58837128]
[-128.05358887 -113.32402802]
[-137.82737732 -125.26039124]
[-139.57362366 -140.58860779]
[-132.73510742 -154.41749573]
[-119.49397278 -162.33432007]
[-104.07543182 -161.81283569]
[-91.39946747 -153.01945496]
[-85.51094055 -138.76011658]
[-88.28886414 -123.58491516]
[-77.26850128 -113.40888214]
[-66.24813843 -103.23285675]
[-55.22777176 -93.05682373]
[-44.20740891 -82.88079071]
[-31.41597748 -86.69589996]
[-18.30432892 -83.66910553]
[-8.32021236 -74.48657990]
[-4.14302826 -61.46734619]
[-6.96530771 -47.97826004]
[3.90658402 -37.64375687]
[14.77847576 -27.30925369]
[25.72488976 -17.05371857]
[36.74525452 -6.87768888]
[47.76561737 3.29834056]
[58.78598022 13.47437000]
[69.80634308 23.65040016]
[80.82670593 33.82643127]
[91.84707642 44.00246048]
[102.86743927 54.17848969]
[117.76694489 52.44508362]
[126.15683746 40.01087189]
[134.54673767 27.57665634]
[142.93663025 15.14244175]
[140.13265991 -0.17994489]
[148.81834412 -12.67048931]
[163.44317627 -15.24921417]
[171.83306885 -27.68342781]
[180.22296143 -40.11764145]
[175.08027649 -54.63862991]
[179.42335510 -69.23284912]
[191.38575745 -78.36328888]
[206.25276184 -78.69503021]
[214.64265442 -91.12924194]
[222.94232178 -103.62386322]
[231.15133667 -116.17823792]
[239.36033630 -128.73260498]
[247.56935120 -141.28697205]
[248.64593506 -157.07151794]
[262.08694458 -163.48933411]
[270.29595947 -176.04370117]
[266.81365967 -191.45957947]
[275.32247925 -204.77780151]
[290.77432251 -208.09692383]
[304.00183105 -199.44776917]
[307.15740967 -183.96170044]
[298.36886597 -170.82635498]
[282.85031128 -167.83470154]
[274.64129639 -155.28033447]
[274.15188599 -140.39376831]
[260.12371826 -133.07797241]
[251.91470337 -120.52359772]
[243.70570374 -107.96923065]
[235.49668884 -95.41485596]
[234.46748352 -88.09963989]
[227.07687378 -82.73934937]
[218.68698120 -70.30513763]
[223.94419861 -56.39472198]
[219.95512390 -41.88433456]
[208.04748535 -32.39424896]
[192.65716553 -31.72774887]
[184.26727295 -19.29353523]
[175.87738037 -6.85932016]
[178.96031189 7.66758966]
[170.62890625 20.39716721]
[155.37083435 23.53233528]
[146.98094177 35.96654892]
[138.59104919 48.40076447]
[130.20115662 60.83498001]
[136.21612549 74.57616425]
[151.04315186 76.84757996]
[165.87017822 79.11899567]
[180.69718933 81.39041901]
[189.64915466 79.59703064]
[195.72180176 83.80353546]
[210.51438904 86.28936768]
[225.30697632 88.77519226]
[240.09956360 91.26101685]
[254.89215088 93.74684906]
[269.68475342 96.23267365]
[284.47732544 98.71850586]
[299.26992798 101.20433044]
[314.43695068 94.96790314]
[327.25433350 105.19760132]
[324.53665161 121.36999512]
[309.07958984 126.84830475]
[296.78408813 115.99691772]
[281.99151611 113.51109314]
[267.19891357 111.02526093]
[252.40632629 108.53943634]
[237.61373901 106.05360413]
[222.82115173 103.56777954]
[208.02856445 101.08195496]
[193.23597717 98.59612274]
[178.42578125 96.21743774]
[163.59875488 93.94602203]
[148.77172852 91.67460632]
[133.94470215 89.40319061]
[127.55265045 120.21801758]
[100.06903076 132.78921509]
[100.06903076 147.78921509]
[100.06903076 162.78921509]
[100.06903076 177.78921509]
[110.96358490 188.92234802]
[110.74990845 204.13447571]
[100.06903076 214.45216370]
[100.06903076 229.45216370]
[100.06903076 244.45216370]
[100.17761230 259.45178223]
[100.39476776 274.45019531]
[100.61192322 289.44863892]
[100.82907104 304.44705200]
[101.04622650 319.44549561]
[101.26338196 334.44390869]
[102.78090668 349.36694336]
[105.58735657 364.10208130]
[108.39381409 378.83718872]
[111.20026398 393.57232666]
[114.32601929 408.24301147]
[117.76959991 422.84240723]
[121.21318817 437.44177246]
[124.65676880 452.04113770]
[137.49116516 461.66705322]
[137.82341003 477.70666504]
[125.39862823 487.85577393]
[109.74805450 484.32885742]
[102.87747192 469.83145142]
[110.05739594 455.48474121]
[106.61381531 440.88534546]
[103.17022705 426.28598022]
[99.72664642 411.68661499]
[96.94058228 409.53247070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[6 15]
[7 14]
[18 198]
[19 197]
[20 196]
[21 195]
[22 194]
[23 193]
[25 192]
[26 191]
[27 190]
[30 187]
[31 186]
[32 185]
[33 184]
[34 54]
[35 53]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[42 46]
[56 104]
[57 103]
[58 102]
[59 101]
[60 100]
[61 99]
[62 98]
[63 97]
[65 96]
[66 95]
[67 94]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[105 153]
[106 152]
[107 151]
[108 150]
[111 147]
[112 146]
[113 145]
[117 141]
[118 140]
[119 138]
[120 137]
[121 136]
[122 135]
[124 133]
[125 132]
[154 182]
[155 181]
[156 180]
[157 179]
[159 178]
[160 177]
[161 176]
[162 175]
[163 174]
[164 173]
[165 172]
[166 171]
[203 215]
[204 214]
[205 213]
[206 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
