%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DGKH)
} def

/sequence { (\
CCCACCCGCUGACCAACGCCGCCGCCCCCGCCGGGCGGUGCUGUGUCCCCGCAGGAGUCGGAGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 55 0.008711626 ubox
1 61 0.710392922 ubox
1 66 0.078056347 ubox
2 54 0.008702973 ubox
2 55 0.019636263 ubox
2 60 0.712722466 ubox
2 61 0.650334834 ubox
2 65 0.079219177 ubox
2 66 0.094701316 ubox
3 11 0.005294692 ubox
3 54 0.019648945 ubox
3 60 0.652102534 ubox
3 65 0.096152235 ubox
4 10 0.004934943 ubox
4 58 0.952296381 ubox
5 55 0.122407741 ubox
5 57 0.960113048 ubox
5 61 0.036522765 ubox
5 66 0.092561792 ubox
6 54 0.124462948 ubox
6 55 0.962348367 ubox
6 60 0.036186322 ubox
6 61 0.117645810 ubox
6 65 0.092790828 ubox
6 66 0.106660219 ubox
7 18 0.005642411 ubox
7 51 0.034259082 ubox
7 54 0.961693691 ubox
7 60 0.117959879 ubox
7 65 0.108340639 ubox
8 17 0.006335464 ubox
8 19 0.031121047 ubox
8 50 0.047762160 ubox
8 52 0.959131265 ubox
8 58 0.038450633 ubox
8 59 0.114475577 ubox
9 18 0.031249283 ubox
9 51 0.961506962 ubox
9 54 0.072957117 ubox
9 55 0.008223956 ubox
9 57 0.107311266 ubox
9 61 0.185701025 ubox
9 63 0.038988435 ubox
9 65 0.028164816 ubox
10 18 0.004567308 ubox
10 51 0.042715403 ubox
10 53 0.077196303 ubox
10 54 0.007153073 ubox
10 56 0.103871570 ubox
10 60 0.186597051 ubox
10 62 0.036050161 ubox
10 64 0.028349700 ubox
11 17 0.014680059 ubox
11 20 0.004552430 ubox
11 47 0.934323875 ubox
11 50 0.098704591 ubox
11 52 0.077746598 ubox
11 59 0.188211828 ubox
12 46 0.934540624 ubox
12 58 0.188200348 ubox
13 45 0.913097198 ubox
13 55 0.034331289 ubox
13 57 0.187404916 ubox
13 61 0.037464965 ubox
13 66 0.006545194 ubox
14 43 0.502178246 ubox
14 45 0.192300614 ubox
14 54 0.034040713 ubox
14 60 0.037474624 ubox
14 65 0.006615016 ubox
15 42 0.478576563 ubox
15 44 0.200764225 ubox
16 44 0.739677240 ubox
16 46 0.152656912 ubox
16 58 0.034020128 ubox
17 40 0.313686455 ubox
17 43 0.801805093 ubox
17 45 0.161645974 ubox
17 51 0.003862621 ubox
17 57 0.034246286 ubox
18 39 0.313849658 ubox
18 41 0.463254134 ubox
18 42 0.750838844 ubox
18 44 0.166278250 ubox
18 50 0.003623177 ubox
18 52 0.008171640 ubox
18 58 0.005841461 ubox
19 38 0.313761371 ubox
19 40 0.331460170 ubox
19 43 0.165454134 ubox
19 51 0.008174465 ubox
19 55 0.022866735 ubox
19 57 0.006025948 ubox
20 37 0.313607934 ubox
20 40 0.884702466 ubox
20 54 0.009575281 ubox
21 36 0.312941930 ubox
21 39 0.947751862 ubox
21 41 0.007824114 ubox
22 34 0.051855270 ubox
22 35 0.308425846 ubox
22 38 0.949468760 ubox
22 40 0.005749729 ubox
23 33 0.073202014 ubox
23 34 0.302384513 ubox
23 37 0.949520707 ubox
24 29 0.006062608 ubox
24 31 0.233213511 ubox
24 32 0.069257356 ubox
24 36 0.949733830 ubox
24 39 0.003855669 ubox
25 30 0.240220628 ubox
25 34 0.017453203 ubox
25 35 0.948604998 ubox
25 38 0.003874320 ubox
26 33 0.024630467 ubox
26 34 0.947464377 ubox
26 35 0.047659357 ubox
26 37 0.003872049 ubox
27 33 0.945179512 ubox
27 34 0.067434326 ubox
27 35 0.005464695 ubox
28 33 0.082364521 ubox
28 34 0.007105440 ubox
29 33 0.008439024 ubox
41 54 0.178974510 ubox
41 55 0.009019107 ubox
41 61 0.011261839 ubox
42 53 0.184901047 ubox
42 54 0.004923790 ubox
42 60 0.011359987 ubox
43 52 0.185965387 ubox
43 59 0.011692580 ubox
44 51 0.185681856 ubox
44 53 0.008414356 ubox
45 50 0.181689789 ubox
45 52 0.013088597 ubox
46 51 0.012372616 ubox
46 55 0.003373244 ubox
46 56 0.073671709 ubox
46 64 0.015882490 ubox
47 54 0.005158473 ubox
47 55 0.086148691 ubox
47 61 0.003529251 ubox
47 63 0.018263402 ubox
47 66 0.003290290 ubox
48 54 0.086025126 ubox
48 55 0.068003518 ubox
48 60 0.003511817 ubox
48 61 0.013287039 ubox
48 65 0.003703387 ubox
49 54 0.068057059 ubox
49 55 0.035646076 ubox
49 60 0.013186547 ubox
49 61 0.038744055 ubox
50 54 0.035509145 ubox
50 60 0.038861444 ubox
51 58 0.015327607 ubox
51 59 0.038005198 ubox
52 57 0.038063637 ubox
58 64 0.010375257 ubox
58 66 0.014500729 ubox
59 63 0.011280209 ubox
59 65 0.026398519 ubox
1 61 0.9500000 lbox
2 60 0.9500000 lbox
4 58 0.9500000 lbox
5 57 0.9500000 lbox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
11 47 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
22 38 0.9500000 lbox
23 37 0.9500000 lbox
24 36 0.9500000 lbox
25 35 0.9500000 lbox
26 34 0.9500000 lbox
27 33 0.9500000 lbox
showpage
end
%%EOF
