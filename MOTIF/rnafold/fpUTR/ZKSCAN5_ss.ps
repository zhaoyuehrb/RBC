%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCCCGCCCCACGGAAAGGGGAGGAGCUUGGGCUGUUUGAAUGGCUUUGGGAUGGAGCAGGGGAGAGAGUGGCUCCGUUUGCCUCCCCGCUUUGGUGAUGCUGUGCGAGCGGCUUCGGGGGCCCUGGAGACGUCCGAGUCACUGAGGGUGGGCUGGGACUCGGGGCCCGCGUCCCAUCUCCCCGCCGAUUGGUCCGCCCCCCGUGCGAGUGUAACACAGCCAGCCUCGAAGACUUCCCUCUGAGUUGGA\
) } def
/len { sequence length } bind def

/coor [
[57.00804138 668.72515869]
[52.05385590 682.88336182]
[47.09967041 697.04162598]
[42.14548492 711.19989014]
[37.19129944 725.35815430]
[32.23711395 739.51635742]
[27.28292656 753.67462158]
[31.89877319 773.31512451]
[16.65630722 785.23742676]
[12.05663586 799.51477051]
[16.03329468 815.42449951]
[4.05696058 826.62713623]
[-11.55214214 821.59838867]
[-14.73670578 805.51141357]
[-2.22072458 794.91510010]
[2.37894654 780.63775635]
[-3.06822181 772.03070068]
[-2.88897276 761.62707520]
[3.09829259 752.85034180]
[13.12467766 748.72045898]
[18.07886314 734.56219482]
[23.03304863 720.40393066]
[27.98723602 706.24566650]
[32.94142151 692.08746338]
[37.89560699 677.92919922]
[42.84979248 663.77093506]
[62.92227936 645.40997314]
[83.20033264 647.19390869]
[83.57429504 632.19854736]
[83.94825745 617.20324707]
[81.38240051 613.20361328]
[81.28392029 607.55462646]
[84.52310944 601.83996582]
[85.27079773 586.85864258]
[86.01848602 571.87725830]
[86.76617432 556.89593506]
[87.51386261 541.91455078]
[88.26155090 526.93322754]
[88.91584015 511.94747925]
[89.47670746 496.95797729]
[90.03757477 481.96847534]
[76.14114380 473.69839478]
[68.27294159 459.46304321]
[68.66725922 443.10870361]
[77.31113434 429.10916138]
[91.92193604 421.34188843]
[92.29589844 406.34655762]
[78.94056702 396.78048706]
[73.87715149 380.97763062]
[79.29367828 365.11639404]
[93.23952484 355.52285767]
[93.42651367 340.52401733]
[93.61351013 325.52517700]
[86.03547668 312.70245361]
[93.94421387 298.99981689]
[94.13120270 284.00097656]
[94.31819916 269.00213623]
[94.50519562 254.00329590]
[86.92716217 241.18055725]
[94.83589172 227.47792053]
[95.02288818 212.47908020]
[94.64892578 197.48374939]
[93.71453857 182.51287842]
[92.78014374 167.54200745]
[91.84574890 152.57113647]
[90.91136169 137.60026550]
[89.97696686 122.62940216]
[89.04257202 107.65853119]
[82.61868286 94.10369873]
[71.62290955 83.90110779]
[60.62712860 73.69851685]
[49.63135147 63.49592209]
[34.25240707 59.78126526]
[30.18535805 45.45267868]
[19.18958092 35.25008774]
[8.19380188 25.04749680]
[-2.80197620 14.84490490]
[-11.19743061 11.31498241]
[-13.87022877 4.44592953]
[-24.73796463 -5.89294529]
[-42.22794342 -5.14355326]
[-54.59570694 -17.05044556]
[-54.51371002 -33.87995529]
[-65.50949097 -44.08254623]
[-80.88843536 -47.79720306]
[-84.95548248 -62.12578964]
[-95.95126343 -72.32837677]
[-111.33020020 -76.04303741]
[-115.39725494 -90.37162781]
[-126.39302826 -100.57421875]
[-142.41410828 -101.41362762]
[-151.62924194 -114.54606628]
[-146.96936035 -129.89744568]
[-132.00912476 -135.69151306]
[-118.22476196 -127.48354340]
[-116.19043732 -111.56999207]
[-105.19466400 -101.36740112]
[-90.60221100 -98.38249969]
[-85.74867249 -83.32415771]
[-74.75289154 -73.12156677]
[-60.16043854 -70.13666534]
[-55.30690002 -55.07832336]
[-44.31111908 -44.87573242]
[-31.64472389 -47.15520096]
[-19.79779243 -41.64827728]
[-13.18105888 -30.15859413]
[-14.39908886 -16.76068115]
[-3.53135395 -6.42180538]
[7.40061474 3.84912729]
[18.39639282 14.05171871]
[29.39217186 24.25430870]
[40.38795090 34.45690155]
[54.98040009 37.44180298]
[59.83394241 52.50014496]
[70.82971954 62.70273590]
[81.82550049 72.90532684]
[92.82127380 83.10791779]
[107.60934448 80.59532166]
[114.61837006 67.33359528]
[114.22608948 51.51725006]
[127.01381683 43.88027191]
[134.02284241 30.61854172]
[141.03187561 17.35680962]
[148.04090881 4.09507942]
[155.04992676 -9.16665173]
[162.05895996 -22.42838287]
[169.06799316 -35.69011307]
[176.07702637 -48.95184326]
[183.08604431 -62.21357346]
[182.77828979 -66.48509216]
[183.73509216 -70.26036835]
[185.64927673 -73.20591736]
[188.13749695 -75.12055969]
[190.78938293 -75.94877625]
[198.45074463 -88.84465027]
[206.11210632 -101.74052429]
[213.77345276 -114.63639832]
[214.17004395 -130.45263672]
[227.32254028 -137.44270325]
[234.98390198 -150.33857727]
[242.64526367 -163.23445129]
[250.30662537 -176.13032532]
[257.88745117 -189.07369995]
[265.38745117 -202.06408691]
[272.88745117 -215.05447388]
[275.57073975 -231.79472351]
[292.39959717 -233.85047913]
[299.03369141 -218.24838257]
[285.87783813 -207.55447388]
[278.37783813 -194.56408691]
[270.87783813 -181.57369995]
[270.25686646 -174.22917175]
[263.20248413 -168.46896362]
[255.54113770 -155.57308960]
[247.87977600 -142.67721558]
[240.21841431 -129.78134155]
[240.36982727 -114.88750458]
[226.66932678 -106.97503662]
[219.00798035 -94.07916260]
[211.34661865 -81.18328857]
[203.68525696 -68.28741455]
[196.34777832 -55.20454407]
[189.33874512 -41.94281387]
[182.32972717 -28.68108368]
[175.32069397 -15.41935349]
[168.31166077 -2.15762210]
[161.30262756 11.10410881]
[154.29360962 24.36583900]
[147.28457642 37.62757111]
[140.27554321 50.88930130]
[141.16915894 65.75707245]
[127.88010406 74.34262085]
[120.87107086 87.60435486]
[120.72772980 94.16294098]
[118.79170227 99.75453186]
[115.56008148 103.94619751]
[111.61927032 106.49643707]
[107.58018494 107.36859894]
[104.01344299 106.72414398]
[104.94783783 121.69500732]
[105.88222504 136.66587830]
[106.81661987 151.63674927]
[107.75101471 166.60762024]
[108.68540955 181.57849121]
[109.61979675 196.54934692]
[120.20723724 185.92362976]
[135.20655823 185.78089905]
[145.99427795 196.20323181]
[146.36827087 211.19857788]
[136.11351013 222.14572144]
[121.12573242 222.75088501]
[110.02172089 212.66607666]
[109.83473206 227.66491699]
[117.39939117 241.56047058]
[109.50402832 254.19029236]
[109.31703186 269.18911743]
[109.13004303 284.18795776]
[108.94304657 299.18679810]
[116.50770569 313.08236694]
[108.61234283 325.71218872]
[108.42535400 340.71102905]
[108.23835754 355.70983887]
[119.85901642 363.09484863]
[126.26839447 375.15847778]
[125.88981628 388.70559692]
[118.92871094 400.20739746]
[107.29123688 406.72052002]
[106.91727448 421.71585083]
[119.20393372 428.37155151]
[127.38988495 439.61462402]
[129.92654419 453.22152710]
[126.37572479 466.53125000]
[117.48411560 476.96572876]
[105.02708435 482.52932739]
[104.46621704 497.51885986]
[103.90534973 512.50836182]
[106.70601654 521.17437744]
[103.24290466 527.68090820]
[102.49521637 542.66223145]
[101.74752808 557.64361572]
[100.99983978 572.62493896]
[100.25215149 587.60632324]
[99.50446320 602.58764648]
[98.94359589 617.57720947]
[98.56963348 632.57250977]
[98.19567108 647.56787109]
[100.89242554 662.32342529]
[106.54618073 676.21716309]
[112.19993591 690.11083984]
[117.85369873 704.00457764]
[130.22186279 713.87060547]
[127.85234833 728.57550049]
[133.50610352 742.46923828]
[148.16490173 748.37646484]
[154.27624512 762.95129395]
[148.21438599 777.54687500]
[133.57571411 783.50378418]
[119.04508972 777.28790283]
[113.24328613 762.58709717]
[119.61240387 748.12298584]
[113.95864105 734.22930908]
[101.99486542 725.35699463]
[103.95999146 709.65832520]
[98.30623627 695.76458740]
[92.65247345 681.87091064]
[86.99871826 667.97723389]
[79.50105286 668.16418457]
[79.87500763 683.15954590]
[80.24871826 698.15484619]
[65.25337219 698.52832031]
[64.87966919 683.53350830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[7 20]
[9 16]
[10 15]
[28 226]
[29 225]
[30 224]
[33 223]
[34 222]
[35 221]
[36 220]
[37 219]
[38 218]
[39 216]
[40 215]
[41 214]
[46 208]
[47 207]
[51 202]
[52 201]
[53 200]
[55 198]
[56 197]
[57 196]
[58 195]
[60 193]
[61 192]
[62 185]
[63 184]
[64 183]
[65 182]
[66 181]
[67 180]
[68 179]
[69 117]
[70 116]
[71 115]
[72 114]
[74 112]
[75 111]
[76 110]
[77 109]
[79 108]
[80 107]
[83 103]
[84 102]
[86 100]
[87 99]
[89 97]
[90 96]
[118 173]
[119 172]
[121 170]
[122 169]
[123 168]
[124 167]
[125 166]
[126 165]
[127 164]
[128 163]
[129 162]
[134 161]
[135 160]
[136 159]
[137 158]
[139 156]
[140 155]
[141 154]
[142 153]
[143 151]
[144 150]
[145 149]
[227 246]
[228 245]
[229 244]
[230 243]
[232 241]
[233 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
