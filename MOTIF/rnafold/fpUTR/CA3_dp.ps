%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CA3)
} def

/sequence { (\
ACAUAAAAGCGCGGGCUCGCGGCGACUCUGCACCACGCAGGGGAAGAGAAAGCAGGAGCCGUCCAGCACGGAGGAAGGCGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
8 17 0.080154615 ubox
8 27 0.007396966 ubox
9 16 0.087140116 ubox
9 20 0.056134559 ubox
9 23 0.469193297 ubox
9 26 0.008762298 ubox
9 38 0.015627717 ubox
9 53 0.090650944 ubox
9 62 0.005626826 ubox
9 67 0.075475079 ubox
9 79 0.063208903 ubox
10 15 0.087190902 ubox
10 19 0.056198329 ubox
10 21 0.798135583 ubox
10 22 0.338475399 ubox
10 24 0.084720763 ubox
10 37 0.015643521 ubox
10 52 0.088899774 ubox
10 61 0.006698127 ubox
10 66 0.075524766 ubox
10 70 0.004819927 ubox
10 78 0.063204715 ubox
10 80 0.363935968 ubox
11 18 0.053872120 ubox
11 20 0.871190258 ubox
11 23 0.086426659 ubox
11 31 0.008908712 ubox
11 36 0.015571736 ubox
11 38 0.011088191 ubox
11 53 0.227836668 ubox
11 62 0.059982445 ubox
11 67 0.015572525 ubox
11 69 0.004703915 ubox
11 79 0.368941763 ubox
12 19 0.871586853 ubox
12 21 0.097916923 ubox
12 22 0.076515979 ubox
12 24 0.004678255 ubox
12 30 0.008939414 ubox
12 37 0.011099602 ubox
12 52 0.228024052 ubox
12 61 0.067957744 ubox
12 66 0.015545233 ubox
12 70 0.019222538 ubox
12 78 0.368614346 ubox
12 80 0.018739904 ubox
13 18 0.859598200 ubox
13 20 0.105837394 ubox
13 23 0.004490578 ubox
13 29 0.008871100 ubox
13 34 0.014107131 ubox
13 36 0.011058621 ubox
13 60 0.059439457 ubox
13 63 0.009185242 ubox
13 64 0.014392982 ubox
13 69 0.020126870 ubox
13 79 0.018736163 ubox
13 83 0.009942031 ubox
14 28 0.008874556 ubox
14 33 0.014058157 ubox
14 34 0.012809794 ubox
14 59 0.042176910 ubox
14 60 0.360260557 ubox
14 63 0.011936192 ubox
14 64 0.011435460 ubox
14 82 0.009859387 ubox
14 83 0.013686418 ubox
15 23 0.023726652 ubox
15 26 0.003203987 ubox
15 27 0.008056488 ubox
15 31 0.012323057 ubox
15 33 0.012851635 ubox
15 53 0.044825572 ubox
15 59 0.363367665 ubox
15 62 0.006174537 ubox
15 63 0.011465006 ubox
15 67 0.026543135 ubox
15 82 0.013856459 ubox
16 22 0.023754605 ubox
16 30 0.012322075 ubox
16 46 0.005199097 ubox
16 48 0.237483150 ubox
16 52 0.044865744 ubox
16 55 0.003735851 ubox
16 56 0.005360689 ubox
16 58 0.365831306 ubox
16 61 0.005401663 ubox
16 66 0.026787810 ubox
16 73 0.134168428 ubox
16 74 0.029657085 ubox
17 21 0.021408584 ubox
17 25 0.017954591 ubox
17 45 0.004474981 ubox
17 47 0.237681180 ubox
17 49 0.015667944 ubox
17 51 0.042387826 ubox
17 54 0.004152603 ubox
17 55 0.005394280 ubox
17 56 0.008698441 ubox
17 57 0.365792689 ubox
17 65 0.025969329 ubox
17 71 0.003458592 ubox
17 72 0.134504951 ubox
17 73 0.027789829 ubox
17 81 0.018188914 ubox
18 24 0.022777339 ubox
18 43 0.003362824 ubox
18 46 0.237634343 ubox
18 48 0.018720072 ubox
18 55 0.019143763 ubox
18 56 0.364974169 ubox
18 70 0.007398974 ubox
18 71 0.134304002 ubox
18 73 0.003704087 ubox
18 74 0.003234081 ubox
18 80 0.022487244 ubox
19 23 0.022278024 ubox
19 31 0.015533625 ubox
19 53 0.103205206 ubox
19 62 0.041459106 ubox
19 67 0.012605121 ubox
19 69 0.009193200 ubox
19 79 0.022314761 ubox
20 30 0.015567544 ubox
20 52 0.103554912 ubox
20 61 0.042829438 ubox
20 66 0.012584043 ubox
20 70 0.129337291 ubox
20 78 0.022172312 ubox
21 29 0.015505910 ubox
21 60 0.044538698 ubox
21 63 0.007764562 ubox
21 64 0.009422872 ubox
21 69 0.129062211 ubox
21 83 0.012603886 ubox
22 28 0.015361568 ubox
22 31 0.005225960 ubox
22 53 0.680702942 ubox
22 59 0.044554507 ubox
22 62 0.008265994 ubox
22 63 0.009400027 ubox
22 67 0.103875569 ubox
22 79 0.016006853 ubox
22 82 0.014819432 ubox
23 30 0.005231503 ubox
23 52 0.681350121 ubox
23 58 0.044541038 ubox
23 61 0.012526614 ubox
23 66 0.103806299 ubox
23 70 0.006977929 ubox
23 78 0.016007346 ubox
23 80 0.015201287 ubox
24 29 0.003987864 ubox
24 60 0.012445567 ubox
24 63 0.008143715 ubox
24 69 0.006926178 ubox
24 79 0.007344690 ubox
25 62 0.008043423 ubox
26 41 0.030170244 ubox
26 42 0.807590729 ubox
26 43 0.041229645 ubox
26 46 0.011501270 ubox
26 48 0.579395110 ubox
26 55 0.016724883 ubox
26 56 0.006914160 ubox
26 58 0.006168266 ubox
26 61 0.007157135 ubox
26 73 0.008646709 ubox
27 40 0.003440013 ubox
27 41 0.809213594 ubox
27 42 0.034562144 ubox
27 45 0.009718930 ubox
27 47 0.581556165 ubox
27 49 0.035134620 ubox
27 54 0.013810527 ubox
27 56 0.011583817 ubox
27 57 0.006086694 ubox
27 72 0.008642818 ubox
28 40 0.811576942 ubox
28 41 0.026308820 ubox
28 46 0.581602745 ubox
28 48 0.036058067 ubox
28 52 0.003858657 ubox
28 55 0.015749600 ubox
28 56 0.004701068 ubox
28 71 0.008618074 ubox
29 39 0.811912398 ubox
29 40 0.013066353 ubox
29 45 0.578031326 ubox
29 47 0.035805931 ubox
29 51 0.003737980 ubox
29 54 0.016322274 ubox
29 70 0.008544525 ubox
30 38 0.812357450 ubox
30 53 0.016537414 ubox
30 69 0.008369398 ubox
31 37 0.811842726 ubox
31 52 0.016483674 ubox
33 41 0.425797803 ubox
33 42 0.393786965 ubox
33 43 0.050622131 ubox
34 40 0.425921758 ubox
34 41 0.393191205 ubox
34 42 0.050580336 ubox
43 63 0.003234777 ubox
43 82 0.004351657 ubox
44 62 0.003165482 ubox
46 63 0.009141274 ubox
47 62 0.009124962 ubox
48 63 0.030425638 ubox
49 62 0.030399627 ubox
52 59 0.037942164 ubox
52 67 0.089837893 ubox
52 79 0.040840056 ubox
53 58 0.038035864 ubox
53 66 0.089818427 ubox
53 78 0.040875294 ubox
55 64 0.133880278 ubox
55 83 0.820785677 ubox
56 63 0.134045599 ubox
56 82 0.826664518 ubox
57 62 0.130574293 ubox
58 79 0.917448050 ubox
59 71 0.025118101 ubox
59 74 0.039438227 ubox
59 78 0.917818747 ubox
60 70 0.025424032 ubox
60 73 0.040028984 ubox
60 77 0.916476201 ubox
60 80 0.006915254 ubox
61 67 0.011711744 ubox
61 69 0.027731582 ubox
61 79 0.014181988 ubox
61 82 0.024635711 ubox
62 66 0.010969167 ubox
62 68 0.026596928 ubox
62 71 0.008687589 ubox
62 72 0.223739532 ubox
62 74 0.007709653 ubox
62 75 0.900967792 ubox
62 78 0.011204269 ubox
62 81 0.024613880 ubox
63 70 0.010930915 ubox
63 71 0.241026333 ubox
63 73 0.006913351 ubox
63 74 0.955033533 ubox
63 77 0.008369930 ubox
63 78 0.007329067 ubox
63 80 0.024343345 ubox
64 70 0.241027237 ubox
64 73 0.954913197 ubox
64 77 0.007902223 ubox
66 79 0.025953101 ubox
67 78 0.026028900 ubox
69 80 0.062246636 ubox
70 79 0.063436385 ubox
70 83 0.012335315 ubox
71 82 0.012395807 ubox
73 83 0.023505620 ubox
74 82 0.023653158 ubox
77 83 0.020026773 ubox
78 82 0.019873346 ubox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
55 83 0.9500000 lbox
56 82 0.9500000 lbox
58 79 0.9500000 lbox
59 78 0.9500000 lbox
60 77 0.9500000 lbox
62 75 0.9500000 lbox
63 74 0.9500000 lbox
64 73 0.9500000 lbox
showpage
end
%%EOF
