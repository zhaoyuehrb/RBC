%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGCGUGGCCUGCGCGCGCGUGCGUCGUAGCCGAACGCUGUGGCGGGGCAGGCGAGGCGGUCGCUUCGAGCGCGCUAGUCAGCUCCCUGAAGGGAGUGACGGCGGUUGGGUGCCCGCGGCCACUUUUGCCUUCCCGGGGAGAUGUCCUUUGCUUCUCAGAUGUAAAUGCACUUUAAGUUUGUUAUUCAACAGUGAAA\
) } def
/len { sequence length } bind def

/coor [
[75.65111542 92.83618927]
[63.15470505 84.53922272]
[50.65829086 76.24225616]
[38.16187668 67.94528961]
[25.66546440 59.64832306]
[13.16905212 51.35135651]
[0.67263961 43.05438995]
[-12.07698631 35.15204620]
[-25.06736755 27.65204430]
[-38.05774689 20.15204430]
[-51.04813004 12.65204525]
[-64.03851318 5.15204477]
[-77.02889252 -2.34795523]
[-106.81766510 30.32487679]
[-134.57115173 11.31911469]
[-149.46821594 13.07344437]
[-164.36528015 14.82777500]
[-179.26232910 16.58210373]
[-194.15939331 18.33643341]
[-209.05644226 20.09076309]
[-223.61840820 23.68925285]
[-237.61791992 29.07571411]
[-247.71917725 41.25254440]
[-262.37597656 38.60165024]
[-276.37548828 43.98811340]
[-290.37496948 49.37457275]
[-300.47622681 61.55140305]
[-315.13305664 58.90051270]
[-329.13253784 64.28697205]
[-343.13204956 69.67343140]
[-357.13156128 75.05989838]
[-371.00094604 80.77306366]
[-384.73257446 86.80979156]
[-398.46420288 92.84651947]
[-405.60021973 107.21513367]
[-421.31298828 110.45368195]
[-433.54904175 100.07781982]
[-432.92193604 84.04703522]
[-419.91271973 74.65876007]
[-404.50094604 79.11488342]
[-390.76928711 73.07815552]
[-377.03765869 67.04141998]
[-375.42443848 63.89759445]
[-372.20410156 61.38180542]
[-367.68978882 60.24277115]
[-362.51800537 61.06039429]
[-348.51852417 55.67393112]
[-334.51901245 50.28747177]
[-320.51950073 44.90100861]
[-311.41958618 33.10945511]
[-295.76144409 35.37507248]
[-281.76193237 29.98861122]
[-267.76245117 24.60214996]
[-258.66253662 12.81059742]
[-243.00437927 15.07621384]
[-229.00486755 9.68975258]
[-228.65322876 -5.30612564]
[-242.38487244 -11.34285450]
[-256.11651611 -17.37958336]
[-269.84814453 -23.41631317]
[-283.57980347 -29.45304298]
[-299.81292725 -27.12553596]
[-309.73104858 -40.18551636]
[-303.13122559 -55.19799423]
[-286.80279541 -56.71941757]
[-277.54306030 -43.18468094]
[-263.81143188 -37.14795303]
[-250.07978821 -31.11122322]
[-236.34814453 -25.07449341]
[-222.61650085 -19.03776360]
[-214.57130432 -11.61057854]
[-210.68789673 -2.95200491]
[-210.81077576 5.19370651]
[-195.91371155 3.43937659]
[-181.01666260 1.68504667]
[-166.11959839 -0.06928313]
[-151.22254944 -1.82361293]
[-136.32548523 -3.57794285]
[-138.88589478 -12.11409092]
[-137.94210815 -22.28259468]
[-132.86088562 -32.69649124]
[-136.79975891 -47.17009735]
[-140.73861694 -61.64370728]
[-144.67749023 -76.11730957]
[-149.95463562 -83.58329773]
[-148.56292725 -90.84795380]
[-152.27510071 -105.38134766]
[-155.98728943 -119.91474915]
[-159.69946289 -134.44815063]
[-163.41165161 -148.98155212]
[-175.25169373 -160.32815552]
[-171.08300781 -176.18861389]
[-155.19398499 -180.24705505]
[-143.92988586 -168.32849121]
[-148.87825012 -152.69372559]
[-145.16606140 -138.16032410]
[-141.45388794 -123.62693024]
[-137.74171448 -109.09352875]
[-134.02952576 -94.56012726]
[-130.20388794 -80.05618286]
[-126.26501465 -65.58257294]
[-122.32614899 -51.10897064]
[-118.38727570 -36.63536072]
[-110.89849854 -36.22528458]
[-88.43215179 -34.99504852]
[-82.93645477 -48.95203018]
[-77.44075012 -62.90900803]
[-71.94505310 -76.86598969]
[-80.39732361 -89.87900543]
[-79.55287933 -105.37308502]
[-69.73641968 -117.39044189]
[-54.72257614 -121.31015015]
[-40.28447723 -115.62500000]
[-31.97386551 -102.52105713]
[-32.98634338 -87.03704834]
[-42.93259048 -75.12689209]
[-57.98807144 -71.37028503]
[-63.48377228 -57.41330719]
[-68.97946930 -43.45632935]
[-74.47517395 -29.49934959]
[-69.52889252 -15.33833599]
[-56.53850937 -7.83833647]
[-43.54813004 -0.33833626]
[-30.55774879 7.16166353]
[-17.56736755 14.66166401]
[-4.57698631 22.16166306]
[-1.83096480 21.56115913]
[1.31925857 22.01668167]
[4.47101307 23.68799210]
[7.17118406 26.58568001]
[8.96960735 30.55797577]
[21.46602058 38.85494232]
[33.96243286 47.15191269]
[46.45884705 55.44887924]
[58.95525742 63.74584579]
[71.45166779 72.04281616]
[83.94808197 80.33978271]
[108.50618744 61.81328201]
[147.65330505 77.11313629]
[162.45175171 74.66247559]
[177.25021362 72.21181488]
[192.04866028 69.76115417]
[206.84712219 67.31049347]
[219.16838074 56.48836517]
[234.61236572 62.00339890]
[237.29161072 78.18220520]
[224.44995117 88.38140869]
[209.29777527 82.10894775]
[194.49932861 84.55960846]
[179.70086670 87.01026917]
[164.90242004 89.46092987]
[150.10395813 91.91159058]
[148.24787903 99.17829132]
[162.78128052 102.89047241]
[177.75050354 101.93007660]
[183.28945923 115.86994934]
[171.74336243 125.44532013]
[159.06909180 117.42386627]
[144.53569031 113.71169281]
[142.67961121 120.97839355]
[154.49014282 130.22563171]
[166.30067444 139.47285461]
[178.11120605 148.72009277]
[189.92173767 157.96733093]
[205.55746460 160.38278198]
[210.80862427 174.32102966]
[222.61915588 183.56825256]
[234.42968750 192.81549072]
[246.24021912 202.06272888]
[262.27536011 201.55929565]
[272.55651855 213.87503052]
[269.19683838 229.56236267]
[254.77360535 236.58729553]
[240.35107422 229.56091309]
[236.99298096 213.87326050]
[225.18244934 204.62602234]
[213.37191772 195.37878418]
[201.56138611 186.13156128]
[186.77041626 184.37753296]
[180.67449951 169.77786255]
[168.86396790 160.53062439]
[157.05343628 151.28338623]
[145.24290466 142.03616333]
[133.43237305 132.78892517]
[127.12009430 136.83924866]
[127.82348633 151.82273865]
[114.49552917 144.93989563]
[108.18325043 148.99021912]
[111.66783142 163.57986450]
[115.15241241 178.16949463]
[118.63699341 192.75914001]
[130.29824829 204.28941345]
[125.88220215 220.08277893]
[109.93168640 223.89237976]
[98.85523224 211.79924011]
[104.04734802 196.24372864]
[100.56276703 181.65408325]
[97.07818604 167.06443787]
[93.59360504 152.47479248]
[71.84666443 133.42695618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[6 132]
[7 131]
[8 126]
[9 125]
[10 124]
[11 123]
[12 122]
[13 121]
[15 78]
[16 77]
[17 76]
[18 75]
[19 74]
[20 73]
[21 56]
[22 55]
[24 53]
[25 52]
[26 51]
[28 49]
[29 48]
[30 47]
[31 46]
[32 42]
[33 41]
[34 40]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[81 103]
[82 102]
[83 101]
[84 100]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[105 120]
[106 119]
[107 118]
[108 117]
[139 152]
[140 151]
[141 150]
[142 149]
[143 148]
[160 184]
[161 183]
[162 182]
[163 181]
[164 180]
[166 178]
[167 177]
[168 176]
[169 175]
[188 199]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
