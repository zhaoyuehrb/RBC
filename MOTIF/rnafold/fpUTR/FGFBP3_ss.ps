%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGAUACCACGUUCAUUCACAGGGAGCCGGCUAAAACAGACUACUCCCCCGUGCAGUCGUUCCCUCUACCCUAAUAAGGCUUUGGCGCCUCUCCCAGAACUCGGUCCUGGGGAAUGCUCUUUGCCUGGUCCAGCCCCGACAAACGUGGUCUGAGAACAGCGGAGCGCGGAAACCGCGGAGC\
) } def
/len { sequence length } bind def

/coor [
[7.30458546 195.38461304]
[4.07644606 196.96498108]
[0.89113992 197.31257629]
[-1.84573746 196.60493469]
[-15.08591938 203.65458679]
[-28.32610130 210.70423889]
[-33.03288651 225.55294800]
[-46.56074142 232.51368713]
[-60.68770218 227.93496704]
[-73.92787933 234.98461914]
[-87.16806793 242.03427124]
[-100.40824890 249.08392334]
[-85.77148438 252.36494446]
[-74.51751709 262.28201294]
[-69.42134094 276.38977051]
[-71.73958588 291.20956421]
[-80.90059662 303.08709717]
[-94.64547729 309.09362793]
[-109.58499908 307.74807739]
[-122.03540039 299.38220215]
[-128.92665100 286.05889893]
[-128.55950928 271.06338501]
[-121.02537537 258.09414673]
[-135.19271851 263.02227783]
[-149.36004639 267.95040894]
[-163.52738953 272.87854004]
[-177.69473267 277.80667114]
[-184.01550293 289.06857300]
[-195.93629456 292.87347412]
[-206.88691711 287.69778442]
[-221.13677979 292.38198853]
[-235.34588623 297.18835449]
[-249.51322937 302.11648560]
[-257.76681519 315.87356567]
[-273.68704224 317.85516357]
[-285.06121826 306.54110718]
[-283.16409302 290.61062622]
[-269.45095825 282.28417969]
[-254.44136047 287.94912720]
[-240.27403259 283.02099609]
[-234.97625732 277.84091187]
[-225.82098389 278.13214111]
[-211.57113647 273.44793701]
[-200.61109924 259.75585938]
[-182.62286377 263.63934326]
[-168.45552063 258.71121216]
[-154.28819275 253.78306580]
[-140.12084961 248.85493469]
[-125.95351410 243.92680359]
[-119.25183868 235.86143494]
[-107.45790100 235.84375000]
[-94.21771240 228.79409790]
[-80.97753143 221.74444580]
[-67.73735046 214.69479370]
[-63.64991379 200.41793823]
[-50.32291412 193.07998657]
[-35.37575150 197.46406555]
[-22.13557053 190.41441345]
[-8.89538860 183.36476135]
[4.09499264 175.86476135]
[16.82026100 167.92324829]
[29.54552841 159.98173523]
[42.27079773 152.04023743]
[54.99606323 144.09872437]
[40.02122879 144.96723938]
[26.40864372 151.26783752]
[11.40865326 151.25044250]
[-2.18929029 144.91831970]
[-11.85646629 133.44897461]
[-15.79513359 118.97531128]
[-13.27284336 104.18889618]
[-4.75864935 91.83946228]
[8.16411877 84.22355652]
[23.09229851 82.75745392]
[37.24979401 87.71379852]
[48.00382614 98.17089081]
[53.35435104 112.18285370]
[63.47244263 123.25643921]
[59.90194321 108.68758392]
[56.33144379 94.11872864]
[52.76094437 79.54987335]
[39.11849213 71.57120514]
[35.19446564 56.26181412]
[43.31692123 42.70447922]
[58.66694641 38.94253159]
[72.13764954 47.20787048]
[75.73709106 62.59681320]
[67.32979584 75.97937012]
[70.90029907 90.54822540]
[74.47079468 105.11708069]
[78.04129791 119.68593597]
[75.13955688 87.27250671]
[102.80059052 73.78211975]
[108.57056427 59.93627930]
[114.34054565 46.09043503]
[120.11051941 32.24459457]
[125.88049316 18.39875031]
[131.65046692 4.55290747]
[129.81695557 -11.16169643]
[141.85466003 -19.93341446]
[147.62463379 -33.77925873]
[148.13627625 -50.72548294]
[164.56187439 -54.92501068]
[173.14434814 -40.30387497]
[161.47047424 -28.00928116]
[155.70050049 -14.16343784]
[157.94671631 0.56081873]
[145.49632263 10.32288361]
[139.72633362 24.16872787]
[133.95635986 38.01457214]
[128.18638611 51.86041260]
[122.41641235 65.70625305]
[116.64643097 79.55210114]
[125.97382355 92.10214233]
[126.70503998 108.17751312]
[118.08190155 122.30046082]
[102.62046814 129.37437439]
[117.46105957 131.55543518]
[132.30165100 133.73648071]
[147.14222717 135.91754150]
[161.98281860 138.09860229]
[168.29702759 136.00672913]
[173.87477112 137.24891663]
[177.29193115 140.61770630]
[192.04890442 143.30691528]
[201.07810974 141.76502991]
[207.03517151 146.17103577]
[221.74380493 149.11317444]
[236.79351807 144.23297119]
[247.75596619 154.31632996]
[262.46459961 157.25846863]
[277.19793701 160.07424927]
[291.95489502 162.76345825]
[306.71188354 165.45266724]
[321.49139404 168.01512146]
[336.29232788 170.45060730]
[351.16567993 165.05665588]
[362.46777344 174.75776672]
[377.26873779 177.19325256]
[391.08996582 169.04750061]
[406.02392578 174.90893555]
[410.61456299 190.28115845]
[401.34033203 203.37193298]
[385.31564331 204.13912964]
[374.83325195 191.99421692]
[360.03228760 189.55873108]
[346.21762085 195.12687683]
[333.85684204 185.25157166]
[319.05587769 182.81607056]
[311.92752075 184.83747864]
[304.02267456 180.20964050]
[289.26568604 177.52043152]
[274.50872803 174.83122253]
[267.34671021 176.72996521]
[259.52246094 171.96710205]
[244.81382751 169.02496338]
[230.81616211 174.11561584]
[218.80166626 163.82180786]
[204.09303284 160.87966919]
[189.35969543 158.06388855]
[174.60272217 155.37467957]
[159.80175781 152.93917847]
[144.96118164 150.75813293]
[130.12059021 148.57707214]
[115.27999878 146.39601135]
[100.43941498 144.21496582]
[91.13027191 155.97676086]
[96.66172028 169.91961670]
[102.19316101 183.86245728]
[107.72460938 197.80531311]
[119.18570709 210.29849243]
[110.35351562 224.77014160]
[94.00242615 220.28927612]
[93.78175354 203.33676147]
[88.25031281 189.39390564]
[82.71886444 175.45104980]
[77.18742371 161.50820923]
[62.93757248 156.82398987]
[50.21230316 164.76550293]
[37.48703766 172.70701599]
[24.76176834 180.64851379]
[12.03650093 188.59002686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 59]
[5 58]
[6 57]
[9 54]
[10 53]
[11 52]
[12 51]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[30 43]
[31 42]
[32 40]
[33 39]
[60 182]
[61 181]
[62 180]
[63 179]
[64 178]
[78 91]
[79 90]
[80 89]
[81 88]
[93 113]
[94 112]
[95 111]
[96 110]
[97 109]
[98 108]
[100 106]
[101 105]
[117 166]
[118 165]
[119 164]
[120 163]
[121 162]
[124 161]
[125 160]
[127 159]
[128 158]
[130 156]
[131 155]
[132 153]
[133 152]
[134 151]
[135 149]
[136 148]
[138 146]
[139 145]
[167 177]
[168 176]
[169 175]
[170 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
