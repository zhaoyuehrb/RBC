%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC7A4)
} def

/sequence { (\
GCGGAGGCAGCGGCUGCGGCAGCAGCAGGUUCCAGUAGCUGGCUCGGUGCUCUUCUCGGCCACCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.188314576 ubox
1 11 0.054922648 ubox
1 20 0.006968141 ubox
1 23 0.018690820 ubox
1 36 0.049090211 ubox
1 39 0.130172865 ubox
1 48 0.106500865 ubox
1 50 0.038859720 ubox
1 60 0.040926577 ubox
1 67 0.269515991 ubox
2 7 0.188398760 ubox
2 10 0.054964641 ubox
2 12 0.016607627 ubox
2 19 0.006808861 ubox
2 22 0.018698974 ubox
2 35 0.051533083 ubox
2 38 0.130356913 ubox
2 41 0.004753789 ubox
2 46 0.008720776 ubox
2 47 0.110442200 ubox
2 49 0.038779524 ubox
2 58 0.012992973 ubox
2 59 0.040790702 ubox
2 66 0.270295883 ubox
3 11 0.016812800 ubox
3 32 0.009804072 ubox
3 33 0.525258129 ubox
3 40 0.006203625 ubox
3 45 0.017852204 ubox
3 48 0.031523183 ubox
3 53 0.014315077 ubox
3 55 0.097528512 ubox
3 56 0.022567820 ubox
3 57 0.015896531 ubox
3 64 0.026996040 ubox
3 65 0.221168441 ubox
3 68 0.018610698 ubox
4 31 0.008938259 ubox
4 32 0.525777285 ubox
4 39 0.006339630 ubox
4 44 0.007810533 ubox
4 45 0.424874574 ubox
4 52 0.015348039 ubox
4 54 0.098139023 ubox
4 55 0.028282496 ubox
4 56 0.003877430 ubox
4 57 0.038660352 ubox
4 63 0.027084268 ubox
4 64 0.066549543 ubox
4 67 0.014917547 ubox
5 30 0.008793022 ubox
5 31 0.505187218 ubox
5 44 0.425627917 ubox
5 51 0.014590968 ubox
5 53 0.098741547 ubox
5 54 0.026916595 ubox
5 56 0.038576900 ubox
5 65 0.012174457 ubox
6 15 0.006862474 ubox
6 30 0.387442345 ubox
6 31 0.128606281 ubox
6 32 0.010985738 ubox
6 33 0.451505546 ubox
6 40 0.005441181 ubox
6 43 0.425608294 ubox
6 44 0.011754108 ubox
6 45 0.004247528 ubox
6 50 0.010777915 ubox
6 51 0.023168470 ubox
6 52 0.098554807 ubox
6 53 0.022277537 ubox
6 55 0.035894291 ubox
6 61 0.035838701 ubox
6 64 0.012507199 ubox
6 68 0.526226414 ubox
7 14 0.007063782 ubox
7 17 0.018955535 ubox
7 26 0.040063907 ubox
7 30 0.316785350 ubox
7 31 0.009229694 ubox
7 32 0.451880720 ubox
7 36 0.005984730 ubox
7 39 0.006394987 ubox
7 43 0.016225254 ubox
7 48 0.003914415 ubox
7 50 0.105847227 ubox
7 51 0.011064702 ubox
7 52 0.021824566 ubox
7 54 0.017037584 ubox
7 60 0.035882252 ubox
7 63 0.012530943 ubox
7 67 0.530767081 ubox
8 13 0.007137204 ubox
8 16 0.018961849 ubox
8 25 0.040031845 ubox
8 29 0.428638270 ubox
8 35 0.006077387 ubox
8 38 0.006410980 ubox
8 41 0.425510898 ubox
8 42 0.018393094 ubox
8 47 0.004161575 ubox
8 49 0.107007750 ubox
8 59 0.035805309 ubox
8 66 0.530791028 ubox
9 15 0.018915459 ubox
9 31 0.464366106 ubox
9 40 0.425408436 ubox
9 44 0.033325800 ubox
9 48 0.106280716 ubox
9 51 0.028457159 ubox
9 53 0.005304700 ubox
9 56 0.004468563 ubox
9 65 0.529903557 ubox
10 14 0.018501113 ubox
10 17 0.003303839 ubox
10 23 0.043885899 ubox
10 26 0.123818781 ubox
10 30 0.498096853 ubox
10 39 0.425320893 ubox
10 43 0.040315307 ubox
10 50 0.028874181 ubox
10 52 0.005274556 ubox
10 55 0.004762791 ubox
10 60 0.003598638 ubox
10 64 0.527081742 ubox
10 67 0.009308867 ubox
11 16 0.003311153 ubox
11 22 0.043780576 ubox
11 25 0.123373484 ubox
11 29 0.500990423 ubox
11 38 0.424886498 ubox
11 41 0.054858339 ubox
11 42 0.030194783 ubox
11 46 0.105777201 ubox
11 49 0.028818545 ubox
11 58 0.013308792 ubox
11 59 0.003496910 ubox
11 66 0.009322070 ubox
12 31 0.012718174 ubox
12 32 0.020717611 ubox
12 33 0.043839033 ubox
12 40 0.078256627 ubox
12 45 0.104214116 ubox
12 48 0.020747620 ubox
12 51 0.004617863 ubox
12 55 0.006676633 ubox
12 57 0.013488620 ubox
12 61 0.525877121 ubox
12 65 0.006570311 ubox
13 20 0.044011723 ubox
13 23 0.123849544 ubox
13 26 0.729117832 ubox
13 30 0.009764324 ubox
13 31 0.006224550 ubox
13 32 0.039298652 ubox
13 36 0.382246202 ubox
13 39 0.085470491 ubox
13 43 0.010551697 ubox
13 44 0.008905152 ubox
13 48 0.016975550 ubox
13 50 0.004752783 ubox
13 60 0.526638831 ubox
14 19 0.044171974 ubox
14 22 0.124315107 ubox
14 25 0.729894443 ubox
14 28 0.048444495 ubox
14 29 0.008173873 ubox
14 35 0.401422687 ubox
14 38 0.085758549 ubox
14 42 0.010138081 ubox
14 47 0.023978910 ubox
14 49 0.004743899 ubox
14 59 0.526636143 ubox
15 21 0.124162213 ubox
15 24 0.729820331 ubox
15 27 0.049241091 ubox
15 28 0.004399830 ubox
15 34 0.400749474 ubox
15 37 0.086600639 ubox
15 41 0.007889310 ubox
15 46 0.023961585 ubox
15 58 0.525955577 ubox
16 20 0.122185214 ubox
16 23 0.730031173 ubox
16 26 0.049678987 ubox
16 30 0.024980530 ubox
16 33 0.396429067 ubox
16 36 0.086695702 ubox
16 39 0.006954693 ubox
16 43 0.005013095 ubox
16 45 0.023818189 ubox
16 57 0.524611566 ubox
17 22 0.729755196 ubox
17 25 0.049742632 ubox
17 29 0.046289596 ubox
17 35 0.086675268 ubox
17 38 0.006999326 ubox
17 41 0.003538263 ubox
17 42 0.004974473 ubox
17 46 0.006392652 ubox
17 58 0.013906232 ubox
18 31 0.344720424 ubox
18 32 0.124799978 ubox
18 33 0.100839448 ubox
18 40 0.004428910 ubox
18 44 0.021700063 ubox
18 45 0.006388044 ubox
18 51 0.025834807 ubox
18 52 0.009611791 ubox
18 53 0.117033456 ubox
18 54 0.023251419 ubox
18 55 0.412969424 ubox
18 56 0.287536317 ubox
18 57 0.015823377 ubox
19 26 0.079719575 ubox
19 30 0.373022768 ubox
19 31 0.087908573 ubox
19 32 0.105052001 ubox
19 36 0.003860671 ubox
19 39 0.004557108 ubox
19 43 0.022848126 ubox
19 50 0.032319131 ubox
19 52 0.121123614 ubox
19 53 0.035042220 ubox
19 54 0.400619032 ubox
19 55 0.292264359 ubox
19 56 0.011532894 ubox
20 25 0.079800517 ubox
20 29 0.378755087 ubox
20 35 0.004049773 ubox
20 38 0.004538411 ubox
20 41 0.019702772 ubox
20 42 0.017833370 ubox
20 49 0.032435529 ubox
21 31 0.113393375 ubox
21 40 0.024458812 ubox
21 44 0.005363453 ubox
21 48 0.031163720 ubox
21 51 0.197299728 ubox
21 53 0.473223259 ubox
21 54 0.053007568 ubox
21 56 0.009001737 ubox
22 30 0.130875423 ubox
22 36 0.003575807 ubox
22 39 0.024837292 ubox
22 43 0.006992532 ubox
22 48 0.007082594 ubox
22 50 0.201299914 ubox
22 52 0.478957443 ubox
22 53 0.052866496 ubox
22 55 0.009107600 ubox
23 29 0.131646861 ubox
23 35 0.003750677 ubox
23 38 0.024703548 ubox
23 41 0.011392137 ubox
23 42 0.005138498 ubox
23 47 0.010992945 ubox
23 49 0.201226773 ubox
24 40 0.012546241 ubox
24 44 0.045982056 ubox
24 48 0.185398263 ubox
24 51 0.483095911 ubox
24 53 0.004734120 ubox
25 36 0.023334822 ubox
25 39 0.012673993 ubox
25 43 0.058988391 ubox
25 48 0.067406350 ubox
25 50 0.485156152 ubox
25 52 0.004740034 ubox
25 67 0.027290858 ubox
26 35 0.024630403 ubox
26 38 0.012664509 ubox
26 41 0.009258196 ubox
26 42 0.058106643 ubox
26 47 0.113555195 ubox
26 49 0.485141686 ubox
26 66 0.027428646 ubox
27 40 0.013285949 ubox
27 44 0.043444399 ubox
27 48 0.480028137 ubox
27 53 0.011883992 ubox
27 65 0.027879321 ubox
28 39 0.013540250 ubox
28 40 0.056816506 ubox
28 43 0.047373601 ubox
28 44 0.142534929 ubox
28 45 0.166794576 ubox
28 51 0.020678566 ubox
28 52 0.012587925 ubox
28 61 0.009484633 ubox
28 64 0.028028939 ubox
28 68 0.005494773 ubox
29 36 0.013685118 ubox
29 39 0.062313493 ubox
29 43 0.149384764 ubox
29 44 0.152440132 ubox
29 50 0.025163896 ubox
29 60 0.009488745 ubox
29 63 0.028038612 ubox
29 67 0.005360683 ubox
30 35 0.008971665 ubox
30 38 0.062074524 ubox
30 42 0.053364613 ubox
30 47 0.016005788 ubox
30 49 0.024732138 ubox
30 59 0.008017488 ubox
30 62 0.025133241 ubox
30 66 0.004818242 ubox
31 37 0.054714713 ubox
31 41 0.017734296 ubox
31 42 0.012859512 ubox
31 46 0.018248321 ubox
31 47 0.022017250 ubox
31 58 0.006151365 ubox
31 59 0.005397392 ubox
32 41 0.013755241 ubox
32 42 0.525524590 ubox
32 46 0.022085189 ubox
32 47 0.071209157 ubox
32 58 0.007382242 ubox
32 59 0.021939348 ubox
33 41 0.528978681 ubox
33 46 0.071230253 ubox
33 58 0.022073390 ubox
33 66 0.003926223 ubox
34 40 0.527922701 ubox
34 44 0.075170878 ubox
34 51 0.005031331 ubox
34 53 0.005298966 ubox
34 56 0.022540984 ubox
34 65 0.004435392 ubox
35 39 0.516379815 ubox
35 43 0.075803416 ubox
35 50 0.005284412 ubox
35 52 0.005497708 ubox
35 55 0.022642035 ubox
35 63 0.010857502 ubox
35 64 0.004381509 ubox
35 67 0.698685960 ubox
36 42 0.074914824 ubox
36 49 0.005048759 ubox
36 62 0.010031969 ubox
36 66 0.699994238 ubox
37 44 0.005589097 ubox
37 48 0.004593093 ubox
37 51 0.008464951 ubox
37 53 0.019376239 ubox
37 54 0.003856838 ubox
37 56 0.004965122 ubox
37 65 0.700474512 ubox
38 43 0.005653991 ubox
38 48 0.005226415 ubox
38 50 0.008693171 ubox
38 52 0.020501457 ubox
38 53 0.003558268 ubox
38 55 0.005056398 ubox
38 60 0.010301759 ubox
38 64 0.699241446 ubox
38 67 0.019118262 ubox
39 47 0.007299502 ubox
39 49 0.008680960 ubox
39 59 0.010314185 ubox
39 66 0.019152847 ubox
40 46 0.007327029 ubox
40 58 0.010297274 ubox
40 62 0.697344906 ubox
41 45 0.007033112 ubox
41 51 0.021912884 ubox
41 52 0.004906982 ubox
41 57 0.009685061 ubox
41 61 0.706237685 ubox
41 68 0.153471441 ubox
42 50 0.027618035 ubox
42 56 0.007413550 ubox
42 60 0.706355916 ubox
42 67 0.158503618 ubox
43 47 0.003195567 ubox
43 49 0.027666626 ubox
43 59 0.703554467 ubox
43 66 0.158477686 ubox
44 58 0.422969035 ubox
44 59 0.062311396 ubox
45 58 0.560184295 ubox
45 66 0.005135374 ubox
46 52 0.009712336 ubox
46 53 0.040763460 ubox
46 54 0.014279390 ubox
46 55 0.109772904 ubox
46 56 0.394470097 ubox
46 57 0.566495270 ubox
46 61 0.017149535 ubox
46 64 0.440728959 ubox
46 65 0.005396762 ubox
46 68 0.010938129 ubox
47 51 0.006749845 ubox
47 52 0.048088644 ubox
47 53 0.013523655 ubox
47 54 0.104396402 ubox
47 55 0.443120766 ubox
47 56 0.503318118 ubox
47 60 0.017094543 ubox
47 63 0.441448716 ubox
47 64 0.004987559 ubox
47 67 0.011020279 ubox
48 58 0.003653153 ubox
48 59 0.016746506 ubox
48 62 0.440495810 ubox
48 66 0.010950046 ubox
49 57 0.007682313 ubox
49 60 0.280720344 ubox
49 61 0.343659866 ubox
49 67 0.011165254 ubox
50 59 0.393230143 ubox
50 66 0.011195064 ubox
51 58 0.359609942 ubox
51 59 0.183080707 ubox
52 58 0.218337965 ubox
52 59 0.050446593 ubox
53 58 0.046421043 ubox
53 59 0.007005304 ubox
54 58 0.006050039 ubox
57 66 0.013122478 ubox
58 64 0.016305241 ubox
58 65 0.013372091 ubox
58 68 0.144404659 ubox
59 63 0.016074466 ubox
59 64 0.013220052 ubox
59 67 0.145625221 ubox
60 66 0.145340023 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
18 55 0.9500000 lbox
19 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
24 51 0.9500000 lbox
25 50 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
showpage
end
%%EOF
