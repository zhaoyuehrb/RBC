%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCUGGGCGGAGCGCACAGCGCUGGGCGCUGGGGAGGCUGCGCCGCAGCACCCGGUUGGUCAGGACCAAGUGGGCCCGAGGCGGACGUGAGAAGGGUCGGGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[74.82206726 220.20794678]
[84.37725067 207.32083130]
[83.51306915 192.34573364]
[82.64889526 177.37065125]
[81.78471375 162.39556885]
[80.92053223 147.42048645]
[80.05635071 132.44538879]
[69.07459259 122.22772217]
[54.07614517 122.44387817]
[39.07770538 122.66003418]
[24.07926178 122.87619019]
[10.39202023 130.81155396]
[-2.44542813 123.25846863]
[-17.44387054 123.47462463]
[-32.44231415 123.69078064]
[-42.31067276 138.74934387]
[-59.05631638 144.92683411]
[-76.04176331 139.97160339]
[-86.65103149 126.00618744]
[-101.61210632 127.08607483]
[-116.57318878 128.16596985]
[-131.53427124 129.24584961]
[-146.49534607 130.32574463]
[-161.45642090 131.40562439]
[-176.81916809 138.57658386]
[-187.96269226 125.79933929]
[-178.76963806 111.55419922]
[-162.53631592 116.44454956]
[-147.57522583 115.36466217]
[-132.61415100 114.28477478]
[-117.65307617 113.20488739]
[-102.69200134 112.12500000]
[-87.73091888 111.04511261]
[-82.83186340 99.75178528]
[-73.50138855 91.61058807]
[-61.50824356 88.24778748]
[-49.16185760 90.37583923]
[-38.86766815 97.64357758]
[-32.65847015 108.69233704]
[-17.66002846 108.47618103]
[-2.66158533 108.26002502]
[9.95286655 100.34011841]
[23.86310387 107.87775421]
[38.86154556 107.66159058]
[53.85998917 107.44543457]
[68.85842896 107.22927856]
[68.12694550 96.28794861]
[71.14034271 85.70206451]
[77.57176971 76.72011566]
[86.68957520 70.41103363]
[97.44049835 67.53697968]
[108.57131195 68.46139526]
[118.77488708 73.10324860]
[126.95051575 60.52711487]
[135.12614441 47.95098114]
[143.30177307 35.37484741]
[144.33642578 19.58750916]
[157.76034546 13.13400459]
[165.93597412 0.55787170]
[174.11160278 -12.01826096]
[182.28721619 -24.59439278]
[190.46284485 -37.17052460]
[190.78817749 -53.56644821]
[205.27879333 -61.24461746]
[219.02798462 -52.30639648]
[217.89176941 -35.94665909]
[203.03898621 -28.99489784]
[194.86335754 -16.41876602]
[186.68772888 -3.84263349]
[178.51210022 8.73349953]
[170.33647156 21.30963135]
[169.88659668 36.19744110]
[155.87789917 43.55047607]
[147.70228577 56.12660980]
[139.52665710 68.70274353]
[131.35102844 81.27887726]
[136.23226929 95.46243286]
[150.41583252 100.34368896]
[164.59939575 105.22493744]
[176.20843506 95.26615143]
[191.14494324 92.47370911]
[205.37911987 97.49910736]
[215.12152100 108.89830017]
[217.83181763 123.54479980]
[232.01538086 128.42604065]
[248.00062561 124.76494598]
[258.96414185 136.96058655]
[253.62757874 152.46713257]
[237.48075867 155.33279419]
[227.13412476 142.60960388]
[212.95056152 137.72836304]
[201.80070496 147.60490417]
[187.10649109 150.59426880]
[172.79432678 145.79548645]
[162.73976135 134.40240479]
[159.71813965 119.40850067]
[145.53457642 114.52724457]
[131.35102844 109.64599609]
[117.15145874 127.47090149]
[95.03144073 131.58122253]
[95.89562225 146.55630493]
[96.75979614 161.53138733]
[97.62397766 176.50646973]
[98.48815918 191.48155212]
[99.35234070 206.45664978]
[110.32653809 218.15905762]
[107.87702179 234.01400757]
[93.88285065 241.85893250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 105]
[3 104]
[4 103]
[5 102]
[6 101]
[7 100]
[8 46]
[9 45]
[10 44]
[11 43]
[13 41]
[14 40]
[15 39]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[24 28]
[53 76]
[54 75]
[55 74]
[56 73]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[77 98]
[78 97]
[79 96]
[84 91]
[85 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
