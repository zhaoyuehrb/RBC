%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (S100A1)
} def

/sequence { (\
GGACUGUUGAAGACAGGUCUCCACACACAGCUCCAGCAGCCACAUUUGCAACCUUGGCCAUCUGUCCAGAACCUGCUCCCACCUCAGGCCCAGGCCAACCGUGCACUGCUGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.047457800 ubox
1 20 0.093359312 ubox
1 21 0.030549065 ubox
1 22 0.160997912 ubox
1 32 0.040392888 ubox
1 33 0.039002886 ubox
1 34 0.973528521 ubox
1 41 0.041764010 ubox
2 18 0.026576113 ubox
2 19 0.111835865 ubox
2 20 0.005356671 ubox
2 21 0.160797464 ubox
2 31 0.048264252 ubox
2 32 0.034955876 ubox
2 33 0.975401868 ubox
2 40 0.041802681 ubox
3 18 0.111736256 ubox
3 20 0.158802205 ubox
3 32 0.972137650 ubox
4 16 0.184784881 ubox
4 17 0.086890665 ubox
4 30 0.976140198 ubox
4 39 0.041897951 ubox
5 15 0.198579492 ubox
5 16 0.047203090 ubox
5 25 0.018423984 ubox
5 27 0.035612551 ubox
5 29 0.975893020 ubox
5 38 0.041915981 ubox
6 14 0.202966794 ubox
6 24 0.024196155 ubox
6 26 0.046790320 ubox
6 28 0.975557191 ubox
6 31 0.033427259 ubox
6 37 0.041929388 ubox
7 13 0.201608065 ubox
7 16 0.024911160 ubox
7 23 0.024919321 ubox
7 25 0.052064515 ubox
7 27 0.961060741 ubox
7 30 0.033544304 ubox
7 36 0.041909645 ubox
8 12 0.181678901 ubox
8 15 0.039373380 ubox
8 23 0.705856654 ubox
8 25 0.619580519 ubox
8 27 0.078111078 ubox
8 29 0.033312103 ubox
8 35 0.041889257 ubox
9 14 0.040077172 ubox
9 19 0.012630576 ubox
9 21 0.091473751 ubox
9 22 0.710964119 ubox
9 24 0.626658623 ubox
9 26 0.109539844 ubox
9 28 0.033148540 ubox
9 34 0.041731630 ubox
10 18 0.012676949 ubox
10 20 0.073646425 ubox
11 20 0.845010099 ubox
11 32 0.040075043 ubox
12 19 0.863801756 ubox
12 21 0.425494264 ubox
12 31 0.040995343 ubox
12 33 0.004753376 ubox
13 18 0.765622509 ubox
13 20 0.398516610 ubox
13 32 0.004626569 ubox
16 22 0.070607177 ubox
17 21 0.069603026 ubox
17 24 0.026174971 ubox
17 26 0.045806366 ubox
17 28 0.020041051 ubox
17 31 0.007927700 ubox
18 23 0.024021829 ubox
18 25 0.043322298 ubox
18 27 0.019794901 ubox
18 30 0.005090121 ubox
19 30 0.008581694 ubox
20 29 0.008665851 ubox
28 111 0.004305808 ubox
29 110 0.004260114 ubox
30 109 0.004197220 ubox
30 112 0.048814545 ubox
31 108 0.004074734 ubox
31 111 0.043531580 ubox
34 108 0.006932394 ubox
34 111 0.172710151 ubox
35 107 0.007154781 ubox
35 110 0.240468299 ubox
36 49 0.004834846 ubox
36 106 0.007145316 ubox
36 109 0.246158644 ubox
36 112 0.967079260 ubox
37 48 0.004841585 ubox
37 108 0.246185664 ubox
37 111 0.968084691 ubox
38 47 0.004815132 ubox
38 107 0.246058916 ubox
38 110 0.967863662 ubox
39 46 0.003932636 ubox
39 104 0.012192974 ubox
39 106 0.245479309 ubox
39 109 0.968048611 ubox
39 112 0.017155887 ubox
40 103 0.009613593 ubox
40 108 0.926148933 ubox
40 111 0.016836375 ubox
41 48 0.003751400 ubox
41 103 0.251367969 ubox
41 108 0.263056878 ubox
41 111 0.004545465 ubox
42 47 0.006835741 ubox
42 102 0.251939078 ubox
42 107 0.356750316 ubox
42 110 0.006455035 ubox
43 101 0.251492989 ubox
43 103 0.063133354 ubox
43 108 0.093143073 ubox
43 111 0.009135526 ubox
44 102 0.063201031 ubox
44 107 0.189395729 ubox
44 110 0.008896774 ubox
45 98 0.011294574 ubox
45 101 0.060474782 ubox
46 97 0.010015483 ubox
46 98 0.241371765 ubox
47 97 0.254032720 ubox
47 101 0.009796075 ubox
47 103 0.008705395 ubox
47 105 0.931605596 ubox
48 76 0.012010895 ubox
48 95 0.014183178 ubox
48 96 0.254509137 ubox
48 100 0.010988136 ubox
48 102 0.012752352 ubox
48 104 0.965183893 ubox
49 75 0.012031589 ubox
49 94 0.012784723 ubox
49 101 0.012907241 ubox
49 103 0.965207607 ubox
50 74 0.011662660 ubox
50 102 0.939589334 ubox
51 102 0.183087290 ubox
52 94 0.259853348 ubox
52 101 0.258551996 ubox
53 69 0.010086476 ubox
53 93 0.260268249 ubox
53 94 0.013504293 ubox
54 68 0.009263484 ubox
54 69 0.013533376 ubox
54 92 0.255652628 ubox
54 93 0.013798754 ubox
54 98 0.898583574 ubox
55 68 0.016043743 ubox
55 92 0.020285522 ubox
55 97 0.960209951 ubox
56 66 0.009077683 ubox
56 67 0.016727232 ubox
56 90 0.259620569 ubox
56 91 0.021506323 ubox
56 96 0.965186796 ubox
57 65 0.009216749 ubox
57 66 0.016665520 ubox
57 89 0.260150266 ubox
57 90 0.016968836 ubox
57 95 0.965202450 ubox
58 64 0.013992179 ubox
58 88 0.260382515 ubox
58 94 0.964090988 ubox
59 87 0.257621116 ubox
59 93 0.957385002 ubox
60 74 0.006447351 ubox
61 70 0.706381040 ubox
61 88 0.310890655 ubox
61 94 0.012080929 ubox
62 69 0.754812338 ubox
62 87 0.346690884 ubox
62 88 0.030249570 ubox
62 93 0.085321511 ubox
63 68 0.706413800 ubox
63 81 0.078292976 ubox
63 86 0.352158137 ubox
63 87 0.027302891 ubox
63 92 0.171541096 ubox
64 72 0.036187747 ubox
64 76 0.026032840 ubox
64 80 0.081078167 ubox
64 82 0.173229075 ubox
64 85 0.351485742 ubox
64 89 0.369222985 ubox
64 91 0.172259913 ubox
65 71 0.037226548 ubox
65 75 0.019964934 ubox
65 81 0.168411221 ubox
65 88 0.285043825 ubox
66 87 0.280839369 ubox
66 88 0.298191439 ubox
66 93 0.003636439 ubox
66 94 0.005429669 ubox
67 75 0.239630296 ubox
67 87 0.298904334 ubox
67 93 0.007914731 ubox
68 74 0.240649555 ubox
68 77 0.146872496 ubox
68 84 0.162093512 ubox
69 73 0.235548191 ubox
69 76 0.152309738 ubox
69 78 0.269300168 ubox
69 83 0.166881257 ubox
69 85 0.312452301 ubox
70 77 0.258937318 ubox
70 84 0.302225547 ubox
72 88 0.760763812 ubox
72 94 0.046291640 ubox
73 87 0.764506126 ubox
73 88 0.008181906 ubox
73 93 0.074378782 ubox
74 81 0.189661069 ubox
74 86 0.764102551 ubox
74 87 0.007897622 ubox
74 92 0.126645905 ubox
75 80 0.195687649 ubox
75 85 0.757737028 ubox
75 89 0.110155429 ubox
75 91 0.131905509 ubox
76 87 0.027940517 ubox
76 88 0.110015933 ubox
76 93 0.005315886 ubox
77 86 0.029563875 ubox
77 87 0.095126390 ubox
77 88 0.014969843 ubox
77 92 0.011235249 ubox
78 87 0.049437598 ubox
78 88 0.118512432 ubox
79 87 0.118003689 ubox
79 88 0.151921022 ubox
80 87 0.153687723 ubox
80 103 0.007460538 ubox
81 102 0.007585112 ubox
82 88 0.056991828 ubox
82 101 0.007581420 ubox
83 87 0.056858894 ubox
87 96 0.013491193 ubox
88 95 0.013518712 ubox
89 94 0.013546394 ubox
102 113 0.005728474 ubox
103 112 0.007834935 ubox
104 111 0.007840662 ubox
105 110 0.006685232 ubox
1 34 0.9500000 lbox
2 33 0.9500000 lbox
3 32 0.9500000 lbox
4 30 0.9500000 lbox
5 29 0.9500000 lbox
6 28 0.9500000 lbox
7 27 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
36 112 0.9500000 lbox
37 111 0.9500000 lbox
38 110 0.9500000 lbox
39 109 0.9500000 lbox
40 108 0.9500000 lbox
47 105 0.9500000 lbox
48 104 0.9500000 lbox
49 103 0.9500000 lbox
50 102 0.9500000 lbox
54 98 0.9500000 lbox
55 97 0.9500000 lbox
56 96 0.9500000 lbox
57 95 0.9500000 lbox
58 94 0.9500000 lbox
59 93 0.9500000 lbox
61 70 0.9500000 lbox
62 69 0.9500000 lbox
63 68 0.9500000 lbox
72 88 0.9500000 lbox
73 87 0.9500000 lbox
74 86 0.9500000 lbox
75 85 0.9500000 lbox
showpage
end
%%EOF
