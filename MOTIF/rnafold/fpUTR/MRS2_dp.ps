%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRS2)
} def

/sequence { (\
CGCGGCACGCCCCGCGCAUGCCUGGUGCACAGAGUCUGCAGGUCGGGCGGUAGCGACAGGUCAGAGCUGCGGCCUGAGCAGCCAGCGUCCGGCAUGAAGGUCUGGGGUCUGGCUGCUGCCUGCUUCUUGCUCCAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.007832187 ubox
1 16 0.916254659 ubox
1 24 0.022988710 ubox
2 10 0.010194579 ubox
2 13 0.008336099 ubox
2 15 0.970313564 ubox
2 17 0.041220012 ubox
2 21 0.054901702 ubox
2 23 0.031079068 ubox
2 136 0.058661934 ubox
3 9 0.010216417 ubox
3 14 0.970422470 ubox
3 16 0.041176817 ubox
3 20 0.055006426 ubox
3 24 0.010301769 ubox
3 135 0.058643953 ubox
4 8 0.009562199 ubox
4 11 0.018618769 ubox
4 12 0.035292039 ubox
4 13 0.969635866 ubox
4 15 0.036161268 ubox
4 19 0.049516858 ubox
4 22 0.228609685 ubox
4 23 0.003176702 ubox
5 10 0.020434310 ubox
5 11 0.049235892 ubox
5 12 0.961956105 ubox
5 15 0.019119152 ubox
5 17 0.053776824 ubox
5 21 0.229971122 ubox
6 14 0.026625273 ubox
6 16 0.053697068 ubox
6 20 0.229980129 ubox
7 19 0.223584865 ubox
8 14 0.053154388 ubox
8 16 0.135648503 ubox
9 13 0.049757498 ubox
9 15 0.137814714 ubox
9 17 0.185359288 ubox
10 14 0.136820360 ubox
10 16 0.185325631 ubox
14 21 0.004182678 ubox
15 20 0.004203522 ubox
16 136 0.012561153 ubox
17 24 0.004378941 ubox
17 135 0.011256890 ubox
18 23 0.004253628 ubox
19 137 0.813915011 ubox
20 136 0.935415079 ubox
21 135 0.663552504 ubox
22 135 0.702193746 ubox
23 134 0.967987252 ubox
24 132 0.010656050 ubox
24 133 0.971700267 ubox
24 139 0.231696463 ubox
25 131 0.010380214 ubox
25 132 0.970313318 ubox
25 138 0.235750264 ubox
26 137 0.235729674 ubox
27 130 0.970516010 ubox
27 136 0.235780483 ubox
28 129 0.971647360 ubox
28 135 0.235381722 ubox
29 128 0.954124333 ubox
30 129 0.010956495 ubox
31 37 0.005278296 ubox
31 124 0.003188120 ubox
31 125 0.006639355 ubox
31 127 0.945533758 ubox
31 128 0.012094914 ubox
31 131 0.016977803 ubox
32 36 0.005354010 ubox
32 124 0.007183627 ubox
32 125 0.048136229 ubox
32 126 0.959176007 ubox
32 127 0.012537760 ubox
32 128 0.087523140 ubox
32 130 0.017583407 ubox
32 132 0.233120222 ubox
33 124 0.053877395 ubox
33 125 0.952166404 ubox
33 127 0.139661875 ubox
33 128 0.010172075 ubox
33 131 0.233730391 ubox
34 123 0.035916507 ubox
34 124 0.906872634 ubox
34 126 0.140298265 ubox
34 127 0.015980736 ubox
34 130 0.233770585 ubox
35 122 0.026219686 ubox
35 129 0.229990325 ubox
38 119 0.021819094 ubox
38 123 0.998674945 ubox
39 118 0.021829810 ubox
39 122 0.999629190 ubox
40 117 0.018814446 ubox
40 121 0.999512285 ubox
41 116 0.011646621 ubox
41 120 0.999743190 ubox
42 119 0.999196177 ubox
43 77 0.180565616 ubox
43 118 0.935275522 ubox
44 76 0.991488834 ubox
44 118 0.038209237 ubox
45 74 0.005178696 ubox
45 75 0.998423108 ubox
45 117 0.003733615 ubox
46 73 0.004455249 ubox
46 74 0.999954074 ubox
47 54 0.004838878 ubox
47 73 0.999968856 ubox
48 53 0.004847535 ubox
48 71 0.007680933 ubox
48 72 0.999557248 ubox
49 70 0.007390848 ubox
50 70 0.999698802 ubox
51 69 0.999712694 ubox
52 68 0.999501581 ubox
53 67 0.999964445 ubox
54 60 0.004636154 ubox
54 66 0.999733323 ubox
55 62 0.217497176 ubox
56 61 0.193003066 ubox
57 76 0.005569867 ubox
58 75 0.005598143 ubox
59 74 0.005602486 ubox
60 73 0.005602500 ubox
61 72 0.005599681 ubox
62 71 0.005588412 ubox
76 117 0.004202624 ubox
77 117 0.957925153 ubox
78 116 0.999727480 ubox
79 115 0.999986768 ubox
80 114 0.999755114 ubox
81 113 0.999990076 ubox
82 112 0.999995530 ubox
83 111 0.999987632 ubox
84 110 0.999584141 ubox
85 108 0.065722862 ubox
85 109 0.996534332 ubox
86 107 0.454818504 ubox
87 108 0.020064610 ubox
88 105 0.256475798 ubox
88 106 0.945173774 ubox
88 107 0.032268378 ubox
89 100 0.005791770 ubox
89 104 0.257881805 ubox
89 105 0.965020013 ubox
89 106 0.034006227 ubox
89 107 0.011653694 ubox
90 99 0.006002728 ubox
90 104 0.965091071 ubox
90 105 0.032546884 ubox
90 106 0.011618346 ubox
91 102 0.487358717 ubox
91 103 0.871254329 ubox
92 101 0.495480135 ubox
92 102 0.867336913 ubox
93 100 0.792214434 ubox
93 104 0.007208395 ubox
94 101 0.578296017 ubox
94 103 0.007219062 ubox
95 100 0.572531030 ubox
96 102 0.011872055 ubox
97 101 0.012251666 ubox
1 16 0.9500000 lbox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
19 137 0.9500000 lbox
20 136 0.9500000 lbox
21 135 0.9500000 lbox
23 134 0.9500000 lbox
24 133 0.9500000 lbox
25 132 0.9500000 lbox
27 130 0.9500000 lbox
28 129 0.9500000 lbox
29 128 0.9500000 lbox
31 127 0.9500000 lbox
32 126 0.9500000 lbox
33 125 0.9500000 lbox
34 124 0.9500000 lbox
38 123 0.9500000 lbox
39 122 0.9500000 lbox
40 121 0.9500000 lbox
41 120 0.9500000 lbox
42 119 0.9500000 lbox
43 118 0.9500000 lbox
44 76 0.9500000 lbox
45 75 0.9500000 lbox
46 74 0.9500000 lbox
47 73 0.9500000 lbox
48 72 0.9500000 lbox
50 70 0.9500000 lbox
51 69 0.9500000 lbox
52 68 0.9500000 lbox
53 67 0.9500000 lbox
54 66 0.9500000 lbox
77 117 0.9500000 lbox
78 116 0.9500000 lbox
79 115 0.9500000 lbox
80 114 0.9500000 lbox
81 113 0.9500000 lbox
82 112 0.9500000 lbox
83 111 0.9500000 lbox
84 110 0.9500000 lbox
85 109 0.9500000 lbox
88 106 0.9500000 lbox
89 105 0.9500000 lbox
90 104 0.9500000 lbox
91 103 0.9500000 lbox
92 102 0.9500000 lbox
94 101 0.9500000 lbox
95 100 0.9500000 lbox
showpage
end
%%EOF
