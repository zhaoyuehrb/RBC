%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUCCUGGGUCGGGGGUGGGGCGAGGGAGAGCCAGGAGGCGGAAGUUCCCGCGGGCGGUGGGGACGGCGCCCUCACCGCGAGUCACUUGUCAGCCCUUGUCUGAGGCGGAGGCAGCCCCGCGCCGCGCCGGACCCGAGCAUAUUUCAUUUUCUGUCAUUGGACUUUGAGCCAUUAGAACC\
) } def
/len { sequence length } bind def

/coor [
[345.63088989 432.18264771]
[336.27853394 420.45516968]
[326.92617798 408.72769165]
[317.57385254 397.00021362]
[305.57702637 395.32794189]
[297.69104004 385.61148071]
[298.57690430 372.72680664]
[289.42837524 360.83963013]
[280.27984619 348.95248413]
[271.13131714 337.06533813]
[261.98278809 325.17819214]
[252.83427429 313.29104614]
[238.94024658 307.92395020]
[236.65512085 292.26864624]
[227.50659180 280.38150024]
[213.61257935 275.01443481]
[211.32745361 259.35910034]
[202.17892456 247.47195435]
[193.03039551 235.58480835]
[183.88186646 223.69764709]
[169.98783875 218.33058167]
[167.70272827 202.67526245]
[158.55419922 190.78811646]
[149.40567017 178.90095520]
[142.81735229 175.50903320]
[140.20393372 166.72874451]
[131.26194763 154.68545532]
[122.31995392 142.64216614]
[115.19908905 145.66752625]
[107.68547821 147.51281738]
[99.97326660 148.13038635]
[92.26174927 147.50425720]
[84.75019073 145.65060425]
[77.63269043 142.61735535]
[71.09316254 138.48284912]
[65.30059052 133.35394287]
[60.40465164 127.36317444]
[56.53186417 120.66533661]
[53.78229904 113.43350220]
[52.22700500 105.85454559]
[37.23594284 105.33680725]
[22.24487877 104.81906128]
[7.25381708 104.30132294]
[-4.12811804 115.26613617]
[-19.92787552 114.88765717]
[-30.77173615 103.39042664]
[-30.22623444 87.59555817]
[-18.61500359 76.87385559]
[-2.82678127 77.58631897]
[7.77155924 89.31025696]
[22.76262093 89.82800293]
[37.75368500 90.34574127]
[52.74474716 90.86348724]
[53.34289932 82.90194702]
[55.30848312 74.91088867]
[58.66357422 67.12851715]
[47.96582794 56.61385345]
[37.26807785 46.09918594]
[26.57032967 35.58452225]
[15.87258053 25.06985855]
[5.17483234 14.55519295]
[-5.52291632 4.04052782]
[-16.22066498 -6.47413683]
[-26.91841316 -16.98880196]
[-42.46578217 -15.31149864]
[-55.42504501 -24.06315613]
[-59.67723846 -39.11150742]
[-53.21459961 -53.35118103]
[-39.08859634 -60.05864334]
[-23.96909142 -56.06682968]
[-14.99505234 -43.26055527]
[-16.40374756 -27.68655014]
[-5.70599985 -17.17188454]
[4.99174881 -6.65722036]
[15.68949699 3.85744429]
[26.38724518 14.37210941]
[37.08499527 24.88677406]
[47.78274155 35.40143967]
[58.48049164 45.91610336]
[69.17823792 56.43076706]
[82.51974487 49.57481003]
[80.19880676 34.75545883]
[66.32434845 27.80714607]
[59.21369934 14.01518250]
[61.60104752 -1.31714261]
[72.56840515 -12.29423714]
[87.89861298 -14.69518375]
[101.69687653 -7.59676981]
[108.65749359 6.27151966]
[106.10395813 21.57704544]
[95.01815796 32.43451691]
[97.33910370 47.25387192]
[106.09044647 49.89701462]
[113.87062836 53.91160202]
[120.37889099 40.39706802]
[126.88714600 26.88253403]
[125.90374756 11.09191990]
[138.39697266 2.98213339]
[144.90522766 -10.53240013]
[151.41348267 -24.04693222]
[157.92173767 -37.56146622]
[164.42999268 -51.07600021]
[165.85476685 -67.96997070]
[182.48294067 -71.27759552]
[190.26443481 -56.21490097]
[177.94453430 -44.56774139]
[171.43626404 -31.05320930]
[164.92800903 -17.53867722]
[158.41975403 -4.02414370]
[151.91149902 9.49038982]
[153.36041260 24.31435394]
[140.40167236 33.39078903]
[133.89341736 46.90532303]
[127.38516235 60.41985703]
[144.60470581 81.91809845]
[147.21578979 109.33834076]
[134.36325073 133.70018005]
[143.30523682 145.74346924]
[152.24722290 157.78675842]
[161.29281616 169.75242615]
[170.44134521 181.63958740]
[179.58987427 193.52673340]
[194.13825989 199.74406433]
[195.76901245 214.54911804]
[204.91754150 226.43627930]
[214.06608582 238.32342529]
[223.21461487 250.21058655]
[237.76300049 256.42788696]
[239.39375305 271.23297119]
[248.54228210 283.12011719]
[263.09066772 289.33743286]
[264.72143555 304.14251709]
[273.86996460 316.02966309]
[283.01849365 327.91680908]
[292.16702271 339.80395508]
[301.31555176 351.69110107]
[310.46408081 363.57827759]
[327.63784790 370.18899536]
[329.30130005 387.64785767]
[338.65365601 399.37533569]
[348.00601196 411.10281372]
[357.35836792 422.83029175]
[366.93881226 420.08737183]
[376.87081909 420.36233521]
[386.22897339 423.61169434]
[394.14672852 429.51568604]
[399.89666748 437.50964355]
[402.95724487 446.83789062]
[403.06008911 456.62524414]
[400.21347046 465.95916748]
[394.69985962 473.97467041]
[403.00646973 486.46469116]
[411.31311035 498.95468140]
[419.61972046 511.44467163]
[427.92636108 523.93469238]
[437.38146973 524.55096436]
[445.36660767 529.39068604]
[450.14447021 537.25219727]
[450.74456787 546.29394531]
[447.15829468 554.46551514]
[454.80728149 567.36871338]
[462.45626831 580.27191162]
[477.91793823 581.58209229]
[489.63455200 591.75561523]
[493.10086060 606.88055420]
[486.98394775 621.14111328]
[473.63595581 629.05377197]
[458.18939209 627.57592773]
[446.58383179 617.27593994]
[443.28182983 602.11425781]
[449.55307007 587.92089844]
[441.90408325 575.01770020]
[434.25509644 562.11450195]
[415.44515991 553.65380859]
[415.43634033 532.24127197]
[407.12973022 519.75128174]
[398.82308960 507.26129150]
[390.51647949 494.77130127]
[382.20986938 482.28131104]
[361.94076538 483.00909424]
[345.21047974 471.30017090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[3 140]
[4 139]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
[14 130]
[15 129]
[17 127]
[18 126]
[19 125]
[20 124]
[22 122]
[23 121]
[24 120]
[26 119]
[27 118]
[28 117]
[40 53]
[41 52]
[42 51]
[43 50]
[56 80]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[63 73]
[64 72]
[81 92]
[82 91]
[94 114]
[95 113]
[96 112]
[98 110]
[99 109]
[100 108]
[101 107]
[102 106]
[151 179]
[152 178]
[153 177]
[154 176]
[155 175]
[160 173]
[161 172]
[162 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
