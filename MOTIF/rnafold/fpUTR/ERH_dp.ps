%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ERH)
} def

/sequence { (\
GCGGCGUUGUAGUUAAGCUCGUGUAACGGCGGCGGUGUCGGCAGCUGCUGUAGCGAAGAGAGUUUGGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.044643355 ubox
1 10 0.203976360 ubox
1 13 0.004692953 ubox
1 18 0.005142465 ubox
1 22 0.035042812 ubox
1 24 0.005342091 ubox
1 38 0.004975363 ubox
1 48 0.007212836 ubox
1 51 0.014598084 ubox
1 68 0.018138367 ubox
1 70 0.364027426 ubox
2 6 0.048551810 ubox
2 9 0.211405562 ubox
2 12 0.005527066 ubox
2 17 0.005181070 ubox
2 21 0.036357990 ubox
2 23 0.005518416 ubox
2 37 0.005445359 ubox
2 47 0.007224954 ubox
2 50 0.015132278 ubox
2 67 0.018111729 ubox
2 69 0.364211849 ubox
2 71 0.084292890 ubox
3 8 0.161629645 ubox
3 14 0.015318454 ubox
3 19 0.008070080 ubox
3 20 0.036086473 ubox
3 22 0.003851242 ubox
3 36 0.005444069 ubox
3 46 0.007219104 ubox
3 49 0.015141396 ubox
3 68 0.325854815 ubox
3 70 0.066061563 ubox
4 10 0.080848846 ubox
4 13 0.080365204 ubox
4 18 0.031884811 ubox
4 19 0.020196675 ubox
4 22 0.006813833 ubox
4 45 0.007221942 ubox
4 48 0.015155080 ubox
4 68 0.053208281 ubox
4 70 0.562088763 ubox
5 9 0.081907522 ubox
5 12 0.085773849 ubox
5 17 0.032106238 ubox
5 21 0.007852527 ubox
5 34 0.005716641 ubox
5 44 0.007215523 ubox
5 47 0.015148122 ubox
5 66 0.295242085 ubox
5 67 0.072755670 ubox
5 69 0.565992928 ubox
5 71 0.257214908 ubox
6 13 0.005550899 ubox
6 18 0.040628919 ubox
6 20 0.007981193 ubox
6 33 0.005893421 ubox
6 42 0.006995682 ubox
6 45 0.015124860 ubox
6 65 0.229856389 ubox
6 68 0.534949186 ubox
6 70 0.277602491 ubox
7 12 0.006101239 ubox
7 16 0.039846648 ubox
7 17 0.041362526 ubox
7 32 0.005891937 ubox
7 41 0.007018142 ubox
7 44 0.015131234 ubox
7 61 0.005655652 ubox
7 62 0.012170519 ubox
7 67 0.521139910 ubox
7 69 0.274156728 ubox
8 15 0.046957381 ubox
8 16 0.041628383 ubox
8 21 0.005769980 ubox
8 31 0.005877553 ubox
8 40 0.006998299 ubox
8 43 0.015200387 ubox
8 60 0.004189490 ubox
8 61 0.013572405 ubox
8 66 0.334613353 ubox
8 69 0.035199020 ubox
8 71 0.318559361 ubox
9 14 0.047284749 ubox
9 18 0.022658640 ubox
9 20 0.008525415 ubox
9 30 0.005896391 ubox
9 39 0.007002716 ubox
9 42 0.015223927 ubox
9 63 0.013974019 ubox
9 65 0.181583642 ubox
9 68 0.044209897 ubox
9 70 0.543367034 ubox
10 17 0.022686907 ubox
10 29 0.005615709 ubox
10 37 0.003382959 ubox
10 41 0.015133556 ubox
10 62 0.011387209 ubox
10 66 0.068424820 ubox
10 67 0.043191252 ubox
10 69 0.508748205 ubox
11 19 0.012319323 ubox
11 36 0.003420852 ubox
11 64 0.081915308 ubox
11 65 0.085420348 ubox
12 18 0.015219652 ubox
12 27 0.006009748 ubox
12 36 0.003680817 ubox
12 63 0.077847599 ubox
12 64 0.086987649 ubox
12 68 0.773433261 ubox
12 70 0.014883334 ubox
13 17 0.014382224 ubox
13 26 0.006017568 ubox
13 57 0.009881603 ubox
13 58 0.025258275 ubox
13 59 0.022056881 ubox
13 60 0.025349185 ubox
13 61 0.080539225 ubox
13 62 0.058951298 ubox
13 67 0.787410101 ubox
13 69 0.014054320 ubox
14 25 0.005895203 ubox
14 37 0.007865662 ubox
14 56 0.008033310 ubox
14 57 0.025139544 ubox
14 58 0.020568885 ubox
14 59 0.025403695 ubox
14 60 0.068112961 ubox
14 61 0.061465344 ubox
14 66 0.881866455 ubox
15 24 0.005272805 ubox
15 36 0.007600365 ubox
15 64 0.052997366 ubox
15 65 0.936429971 ubox
16 63 0.052798923 ubox
16 64 0.957769335 ubox
16 65 0.010454973 ubox
17 24 0.005381085 ubox
17 30 0.003186785 ubox
17 33 0.015855979 ubox
17 36 0.003341279 ubox
17 54 0.038724151 ubox
17 63 0.960763373 ubox
17 64 0.010679926 ubox
18 23 0.005681563 ubox
18 29 0.003175290 ubox
18 32 0.015766689 ubox
18 35 0.003360712 ubox
18 53 0.038734229 ubox
18 58 0.079532339 ubox
18 60 0.236837146 ubox
18 62 0.960207654 ubox
19 31 0.003446107 ubox
19 52 0.038362568 ubox
19 56 0.131282656 ubox
19 57 0.057567353 ubox
19 59 0.247599642 ubox
19 61 0.955151140 ubox
20 28 0.005097809 ubox
20 31 0.015640332 ubox
20 55 0.152487601 ubox
20 58 0.254264344 ubox
20 60 0.948462825 ubox
20 71 0.003584378 ubox
21 27 0.005463951 ubox
21 30 0.015869230 ubox
21 54 0.168548100 ubox
21 70 0.003953141 ubox
22 26 0.004930481 ubox
22 29 0.015725232 ubox
22 52 0.004628980 ubox
22 53 0.166704678 ubox
22 55 0.652058111 ubox
22 69 0.003948441 ubox
23 54 0.968801497 ubox
23 68 0.003892050 ubox
24 52 0.070856743 ubox
24 53 0.961250254 ubox
24 67 0.003801775 ubox
25 51 0.057022050 ubox
26 51 0.968885628 ubox
27 50 0.996686991 ubox
27 55 0.019488228 ubox
28 49 0.996158972 ubox
28 54 0.019319756 ubox
29 48 0.996920403 ubox
29 51 0.075464140 ubox
30 47 0.996899657 ubox
30 50 0.076115538 ubox
31 46 0.996170191 ubox
31 49 0.076101182 ubox
32 42 0.004140625 ubox
32 45 0.996904410 ubox
32 48 0.076163457 ubox
33 40 0.006386958 ubox
33 41 0.004467622 ubox
33 44 0.993309588 ubox
33 47 0.076162390 ubox
34 39 0.015341901 ubox
34 46 0.076107166 ubox
35 42 0.962545337 ubox
35 45 0.076130119 ubox
36 41 0.953452101 ubox
36 43 0.074892083 ubox
36 44 0.072191048 ubox
37 42 0.081549022 ubox
39 50 0.005366836 ubox
40 49 0.005509410 ubox
41 48 0.005531277 ubox
42 47 0.005523424 ubox
50 70 0.003834451 ubox
51 69 0.003664014 ubox
52 64 0.004861174 ubox
53 63 0.005965427 ubox
53 68 0.014830924 ubox
53 70 0.038476249 ubox
54 62 0.006048691 ubox
54 66 0.006095467 ubox
54 67 0.014805394 ubox
54 69 0.038523679 ubox
55 65 0.007453940 ubox
55 68 0.038521124 ubox
56 64 0.008075440 ubox
56 65 0.015166380 ubox
57 63 0.008396078 ubox
57 64 0.015142471 ubox
57 65 0.008394326 ubox
58 63 0.011682631 ubox
58 64 0.008854458 ubox
58 65 0.037890011 ubox
59 63 0.007697627 ubox
59 64 0.035147411 ubox
59 65 0.003523838 ubox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
12 68 0.9500000 lbox
13 67 0.9500000 lbox
14 66 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
17 63 0.9500000 lbox
18 62 0.9500000 lbox
19 61 0.9500000 lbox
20 60 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
showpage
end
%%EOF
