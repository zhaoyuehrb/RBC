%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LHCGR)
} def

/sequence { (\
AGAGGGGUGCGGGCCGCACUCAGAGGCCGUCCAAGACACUGGCAAGCCGCAGAAGCCCAGUUCGCCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 21 0.038990883 ubox
2 31 0.008224027 ubox
2 63 0.003266840 ubox
3 20 0.035566393 ubox
3 30 0.008203406 ubox
3 62 0.003225696 ubox
4 19 0.029168629 ubox
4 21 0.086652131 ubox
4 28 0.006048308 ubox
4 32 0.012738336 ubox
4 39 0.003214054 ubox
4 70 0.015800615 ubox
5 20 0.071264795 ubox
5 21 0.986688680 ubox
5 27 0.005741053 ubox
5 28 0.007784628 ubox
5 31 0.012692128 ubox
5 32 0.017299429 ubox
5 58 0.004268239 ubox
5 69 0.012517415 ubox
5 70 0.009625568 ubox
6 15 0.021238741 ubox
6 19 0.051565788 ubox
6 20 0.993558912 ubox
6 21 0.035747059 ubox
6 27 0.007537553 ubox
6 30 0.005671129 ubox
6 31 0.017224365 ubox
6 32 0.035781816 ubox
6 40 0.005435849 ubox
6 57 0.004279093 ubox
6 66 0.005982076 ubox
6 69 0.009661048 ubox
6 70 0.007996846 ubox
7 14 0.021300211 ubox
7 17 0.010057998 ubox
7 19 0.997041289 ubox
7 20 0.004365174 ubox
7 30 0.008082512 ubox
7 31 0.035839207 ubox
7 37 0.005421536 ubox
7 39 0.005761837 ubox
7 56 0.004274888 ubox
7 65 0.005986342 ubox
7 69 0.008082487 ubox
8 13 0.021055611 ubox
8 16 0.010061040 ubox
8 18 0.998271312 ubox
8 29 0.003233826 ubox
8 36 0.005383722 ubox
8 38 0.005788757 ubox
8 44 0.003787533 ubox
8 55 0.003496644 ubox
8 64 0.005938483 ubox
8 67 0.008463340 ubox
8 68 0.007245195 ubox
9 15 0.009905194 ubox
9 17 0.998566106 ubox
9 30 0.037254709 ubox
9 37 0.005722190 ubox
9 43 0.004199719 ubox
9 50 0.004579817 ubox
9 61 0.003366628 ubox
9 63 0.005232464 ubox
9 65 0.012066653 ubox
9 66 0.006060284 ubox
10 16 0.998479940 ubox
10 29 0.039175558 ubox
10 42 0.004177684 ubox
10 49 0.004580849 ubox
10 60 0.004019445 ubox
10 64 0.013513816 ubox
11 15 0.934075299 ubox
11 28 0.032024909 ubox
11 32 0.009874907 ubox
11 48 0.004523728 ubox
11 58 0.005054788 ubox
11 63 0.013383437 ubox
12 27 0.022672408 ubox
12 28 0.031973494 ubox
12 31 0.009884952 ubox
12 57 0.005074276 ubox
12 62 0.009493136 ubox
13 27 0.039250729 ubox
13 30 0.009874507 ubox
13 56 0.005073215 ubox
13 61 0.009494632 ubox
14 26 0.045301803 ubox
14 29 0.009890535 ubox
14 55 0.005061000 ubox
14 60 0.009493158 ubox
15 25 0.045300706 ubox
16 27 0.010003512 ubox
16 56 0.009020842 ubox
17 26 0.010016640 ubox
17 55 0.009010397 ubox
19 25 0.006943053 ubox
19 52 0.003371830 ubox
20 24 0.006297363 ubox
20 51 0.003282158 ubox
20 53 0.008732814 ubox
21 52 0.009031511 ubox
23 31 0.009670380 ubox
24 30 0.009594043 ubox
24 40 0.005792346 ubox
25 32 0.019882395 ubox
25 39 0.005950105 ubox
25 40 0.004991873 ubox
25 48 0.019088964 ubox
25 66 0.010860606 ubox
25 70 0.960062078 ubox
26 31 0.019581607 ubox
26 39 0.005464256 ubox
26 43 0.234776907 ubox
26 47 0.019114839 ubox
26 65 0.010873635 ubox
26 69 0.968325122 ubox
27 42 0.235058463 ubox
27 46 0.019095612 ubox
27 64 0.010787641 ubox
27 68 0.968321736 ubox
28 41 0.234895668 ubox
28 67 0.968105225 ubox
29 37 0.294764572 ubox
29 39 0.080184232 ubox
29 40 0.105076693 ubox
29 43 0.031133611 ubox
29 47 0.003786185 ubox
29 65 0.122425368 ubox
29 66 0.926577069 ubox
29 69 0.010357621 ubox
30 36 0.298657786 ubox
30 38 0.078802648 ubox
30 42 0.008994417 ubox
30 46 0.003890299 ubox
30 64 0.172133771 ubox
30 68 0.009962164 ubox
31 35 0.296469034 ubox
31 41 0.008371465 ubox
31 42 0.047788471 ubox
31 67 0.010371716 ubox
31 68 0.004073382 ubox
32 41 0.049452638 ubox
32 67 0.004405767 ubox
33 40 0.046088169 ubox
33 62 0.044302385 ubox
34 40 0.019044296 ubox
34 61 0.022658648 ubox
34 62 0.034989872 ubox
35 39 0.021065261 ubox
35 61 0.015427211 ubox
35 62 0.053660716 ubox
35 63 0.925819364 ubox
36 61 0.053041888 ubox
36 62 0.917904661 ubox
37 60 0.052274444 ubox
38 61 0.927193574 ubox
39 46 0.007152141 ubox
39 52 0.011505440 ubox
39 60 0.939582292 ubox
39 68 0.068656690 ubox
40 45 0.007198783 ubox
40 49 0.005586006 ubox
40 51 0.011710476 ubox
40 59 0.938985696 ubox
40 67 0.070596660 ubox
41 48 0.020096960 ubox
41 50 0.011153419 ubox
41 57 0.332053464 ubox
41 58 0.881391783 ubox
41 66 0.231123608 ubox
42 47 0.020181283 ubox
42 50 0.025953853 ubox
42 56 0.464298201 ubox
42 57 0.818353840 ubox
42 65 0.232240454 ubox
43 49 0.034513936 ubox
43 55 0.565987873 ubox
43 64 0.231957123 ubox
44 62 0.025533954 ubox
45 61 0.024597424 ubox
45 62 0.224271836 ubox
46 56 0.573265738 ubox
46 61 0.230213517 ubox
46 65 0.005582822 ubox
46 69 0.237687458 ubox
47 55 0.572969544 ubox
47 60 0.230467538 ubox
47 64 0.005531647 ubox
47 68 0.238252716 ubox
48 67 0.238236884 ubox
49 56 0.505206242 ubox
49 61 0.003273079 ubox
49 65 0.091793613 ubox
49 66 0.221412599 ubox
50 55 0.504748299 ubox
50 60 0.003405345 ubox
50 64 0.124714585 ubox
51 62 0.005594840 ubox
52 61 0.005404981 ubox
52 62 0.008727888 ubox
52 63 0.239960553 ubox
53 61 0.008552087 ubox
53 62 0.238421688 ubox
54 61 0.228835738 ubox
54 62 0.029178463 ubox
55 61 0.039360538 ubox
55 65 0.013656046 ubox
55 69 0.011333795 ubox
56 60 0.046862402 ubox
56 64 0.013662092 ubox
56 68 0.011265661 ubox
57 67 0.011154249 ubox
58 67 0.003448320 ubox
5 21 0.9500000 lbox
6 20 0.9500000 lbox
7 19 0.9500000 lbox
8 18 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
11 15 0.9500000 lbox
25 70 0.9500000 lbox
26 69 0.9500000 lbox
27 68 0.9500000 lbox
28 67 0.9500000 lbox
29 66 0.9500000 lbox
35 63 0.9500000 lbox
36 62 0.9500000 lbox
38 61 0.9500000 lbox
39 60 0.9500000 lbox
40 59 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
showpage
end
%%EOF
