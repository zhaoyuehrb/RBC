%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGCCCCCAGCCCGCCCGCCCCCGCGGGCCCGGCCUGGCGCGGCCGCCCGCCGCCGCGCUCCUCCUCCUCCUCCUCCAGCGCCCGGCGGCCCGCUGCCUCCUCCGCCCGACGCCCCGCGUCCCCCGCCGCGCCGCCGCCGCCACCCUCUGCGCCCCGCGCCGCCCCCCGGUCCCGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[148.99104309 456.77770996]
[150.98472595 447.67907715]
[155.41751099 439.46029663]
[161.95817566 432.76278687]
[155.77964783 419.09436035]
[149.60113525 405.42593384]
[143.42260742 391.75750732]
[136.07778931 390.23971558]
[134.94696045 405.19702148]
[140.54724121 419.11236572]
[133.61708069 432.41546631]
[119.00409698 435.80087280]
[106.93004608 426.90045166]
[105.84069061 411.94006348]
[116.49776459 401.38455200]
[121.38816071 387.20413208]
[114.04335022 385.68634033]
[102.95317078 395.78625488]
[91.86299133 405.88613892]
[80.77281189 415.98605347]
[69.68263245 426.08593750]
[58.59244919 436.18582153]
[54.13145065 451.96655273]
[38.17015457 455.73074341]
[27.12817574 443.60610962]
[32.36455536 428.06546021]
[48.49255371 425.09564209]
[59.58273315 414.99575806]
[70.67291260 404.89587402]
[81.76309204 394.79595947]
[92.85327148 384.69607544]
[103.94345093 374.59616089]
[101.39308929 339.46105957]
[125.18354034 319.37799072]
[123.15201569 304.51620483]
[121.12049103 289.65438843]
[119.08895874 274.79260254]
[107.60346985 261.53707886]
[114.67692566 244.54711914]
[112.39332581 229.72195435]
[110.10972595 214.89680481]
[107.82612610 200.07165527]
[105.54252625 185.24650574]
[103.25892639 170.42134094]
[100.97532654 155.59619141]
[98.69173431 140.77104187]
[96.40813446 125.94588470]
[75.95212555 110.38220978]
[78.65320587 84.82090759]
[69.42943573 72.99203491]
[53.99213409 70.91180420]
[44.80643082 58.78425598]
[46.88474655 44.07996368]
[37.66098022 32.25109482]
[28.43721199 20.42222786]
[19.21344566 8.59335995]
[9.98967934 -3.23550892]
[0.76591289 -15.06437683]
[-8.65738678 -26.73491287]
[-18.27750206 -38.24375153]
[-27.89761925 -49.75259018]
[-37.51773453 -61.26142883]
[-47.13785172 -72.77027130]
[-61.27173615 -67.33776855]
[-76.40382385 -66.79138184]
[-90.89270782 -71.19036102]
[-103.16673279 -80.05754852]
[-111.89450836 -92.43109894]
[-116.12931061 -106.96881104]
[-115.41178131 -122.09375763]
[-109.81974792 -136.16528320]
[-99.95979309 -147.65702820]
[-86.90145874 -155.32243347]
[-72.06121063 -158.33003235]
[-57.04880142 -156.35357666]
[-43.49267197 -149.60746765]
[-32.86329269 -138.82345581]
[-26.31365013 -125.17131042]
[-24.55420685 -110.13192749]
[-27.77581215 -95.33665466]
[-35.62901306 -82.39038086]
[-26.00889587 -70.88154602]
[-16.38878059 -59.37270737]
[-6.76866436 -47.86386871]
[2.85145164 -36.35503006]
[7.46574163 -35.04492188]
[11.29710197 -30.80868530]
[12.59478092 -24.28814316]
[21.81854820 -12.45927525]
[31.04231453 -0.63040698]
[40.26608276 11.19846153]
[49.48984909 23.02733040]
[58.71361542 34.85619736]
[73.48097992 36.42477417]
[83.00370026 48.28953171]
[81.25830841 63.76827240]
[90.48207092 75.59713745]
[90.45547485 68.56597900]
[91.46688080 61.42359161]
[97.17770386 47.55324554]
[89.76781464 33.78270721]
[92.99364471 18.48146629]
[105.33205414 8.87429428]
[120.95721436 9.49740505]
[132.49140930 20.05658722]
[134.48855591 35.56611633]
[126.00563812 48.70286560]
[111.04804993 53.26406479]
[105.33722687 67.13441467]
[111.40485382 71.54280090]
[123.54010773 80.35958099]
[129.60774231 84.76796722]
[141.03448486 75.05048370]
[152.46122742 65.33299255]
[163.88796997 55.61550903]
[175.31471252 45.89802170]
[183.46366882 31.03092003]
[200.00561523 34.74579620]
[201.01518250 51.66965866]
[185.03219604 57.32476425]
[173.60545349 67.04225159]
[162.17871094 76.75973511]
[150.75196838 86.47722626]
[139.32522583 96.19470978]
[136.44113159 105.44573975]
[131.57479858 113.09530640]
[125.32017517 118.77156067]
[118.32447815 122.29143524]
[111.23328400 123.66228485]
[113.51688385 138.48744202]
[115.80048370 153.31259155]
[118.08408356 168.13774109]
[120.36768341 182.96290588]
[122.65128326 197.78805542]
[124.93488312 212.61320496]
[127.21847534 227.43835449]
[129.50207520 242.26351929]
[139.43370056 250.51646423]
[141.01997375 262.92749023]
[133.95075989 272.76107788]
[135.98228455 287.62286377]
[138.01380920 302.48464966]
[140.04533386 317.34646606]
[148.29455566 318.30117798]
[156.24836731 321.39981079]
[163.34552002 326.54830933]
[169.05514526 333.50515747]
[172.91560364 341.89114380]
[174.57014465 351.20932007]
[173.79676819 360.87445068]
[170.52969360 370.24969482]
[164.87106323 378.68850708]
[157.09103394 385.57897949]
[163.26956177 399.24740601]
[169.44807434 412.91583252]
[175.62660217 426.58425903]
[196.78715515 429.40054321]
[211.88760376 444.29916382]
[214.94937134 465.15447998]
[204.89707947 483.52932739]
[212.43382263 496.49844360]
[219.97055054 509.46755981]
[234.98388672 513.61938477]
[242.44245911 526.87921143]
[238.39181519 541.16656494]
[245.92855835 554.13568115]
[253.46528625 567.10479736]
[267.95199585 574.79034424]
[268.26898193 591.18640137]
[254.09016418 599.42614746]
[240.00149536 591.03320312]
[240.49618530 574.64154053]
[232.95944214 561.67242432]
[225.42271423 548.70330811]
[211.00384521 545.14916992]
[203.17578125 532.10400391]
[207.00144958 517.00427246]
[199.46472168 504.03518677]
[191.92797852 491.06607056]
[182.90354919 492.57742310]
[173.78843689 491.54312134]
[165.28866577 488.03027344]
[158.06613159 482.29846191]
[152.68711853 474.78057861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 156]
[5 155]
[6 154]
[7 153]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[34 143]
[35 142]
[36 141]
[37 140]
[39 137]
[40 136]
[41 135]
[42 134]
[43 133]
[44 132]
[45 131]
[46 130]
[47 129]
[49 97]
[50 96]
[53 93]
[54 92]
[55 91]
[56 90]
[57 89]
[58 88]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[99 109]
[100 108]
[112 124]
[113 123]
[114 122]
[115 121]
[116 120]
[160 179]
[161 178]
[162 177]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
