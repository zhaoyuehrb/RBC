%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BICD2)
} def

/sequence { (\
UGAGGAGGGCCCGGCCUGCGAGAGCCUCAGUGGGAGCCGGCUCAGCCCUCGGCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.003663105 ubox
1 44 0.006489681 ubox
1 51 0.246292057 ubox
1 55 0.277184548 ubox
2 28 0.004066025 ubox
2 43 0.007201429 ubox
2 50 0.326426937 ubox
2 54 0.322967989 ubox
3 27 0.004064617 ubox
3 42 0.007183409 ubox
3 49 0.326441545 ubox
4 26 0.004060239 ubox
4 41 0.007110507 ubox
4 47 0.021715501 ubox
4 48 0.325638718 ubox
4 50 0.039982219 ubox
4 54 0.101389908 ubox
4 57 0.027800902 ubox
5 25 0.003927827 ubox
5 46 0.030192955 ubox
5 47 0.324713249 ubox
5 49 0.017420368 ubox
5 50 0.938954909 ubox
5 53 0.082618361 ubox
5 56 0.026914152 ubox
6 17 0.003622619 ubox
6 49 0.944089777 ubox
7 16 0.003674295 ubox
7 17 0.005129504 ubox
7 38 0.004110029 ubox
7 43 0.323917985 ubox
7 48 0.944662706 ubox
8 15 0.003645794 ubox
8 16 0.005621899 ubox
8 37 0.004018871 ubox
8 38 0.006059979 ubox
8 42 0.324769460 ubox
8 43 0.030809033 ubox
8 47 0.944692172 ubox
8 54 0.026582093 ubox
9 15 0.005642256 ubox
9 37 0.006127893 ubox
9 41 0.325444627 ubox
9 42 0.024646644 ubox
9 46 0.944706462 ubox
9 53 0.026632788 ubox
10 14 0.005618570 ubox
10 36 0.006182284 ubox
10 40 0.267368847 ubox
10 45 0.944183558 ubox
10 52 0.025806573 ubox
11 34 0.006657857 ubox
11 39 0.192379521 ubox
11 40 0.859694439 ubox
11 51 0.024862291 ubox
11 52 0.006838617 ubox
12 20 0.011657518 ubox
12 33 0.006666307 ubox
12 39 0.879998812 ubox
12 51 0.009597494 ubox
13 19 0.011751889 ubox
13 38 0.899351070 ubox
13 42 0.425439505 ubox
13 43 0.037587322 ubox
13 47 0.010098417 ubox
13 48 0.013371831 ubox
13 49 0.016054221 ubox
13 50 0.011657624 ubox
13 54 0.003677652 ubox
14 31 0.006598426 ubox
14 37 0.897601460 ubox
14 41 0.433006731 ubox
14 42 0.004310920 ubox
14 46 0.010096484 ubox
14 47 0.013379340 ubox
14 48 0.017009783 ubox
14 49 0.009753252 ubox
14 53 0.003682636 ubox
15 30 0.006409840 ubox
15 33 0.018068993 ubox
15 34 0.554147377 ubox
15 36 0.707522480 ubox
15 40 0.433028755 ubox
15 45 0.008809527 ubox
15 52 0.003682187 ubox
16 22 0.007813580 ubox
16 24 0.014267475 ubox
16 30 0.020542040 ubox
16 32 0.026543649 ubox
16 33 0.815241078 ubox
16 34 0.361840272 ubox
16 36 0.015289007 ubox
16 39 0.432673552 ubox
16 45 0.006729501 ubox
16 51 0.003668303 ubox
17 21 0.007074616 ubox
17 23 0.014464312 ubox
17 29 0.020417256 ubox
17 32 0.835865731 ubox
17 33 0.304658326 ubox
17 35 0.021064333 ubox
17 39 0.004227737 ubox
17 44 0.008274190 ubox
18 25 0.078741020 ubox
18 28 0.014162969 ubox
18 31 0.860411418 ubox
18 37 0.431811441 ubox
18 38 0.014947468 ubox
18 43 0.005274324 ubox
18 46 0.024852252 ubox
19 24 0.079485802 ubox
19 30 0.872629531 ubox
19 32 0.049376489 ubox
19 36 0.432033464 ubox
19 39 0.003333318 ubox
19 45 0.024878189 ubox
20 28 0.860536726 ubox
20 31 0.036726148 ubox
20 38 0.007348881 ubox
21 27 0.863031791 ubox
22 26 0.844273758 ubox
22 28 0.158175861 ubox
22 43 0.029028632 ubox
23 27 0.137855660 ubox
23 42 0.029491276 ubox
24 31 0.184436396 ubox
24 37 0.012817303 ubox
24 41 0.029510322 ubox
25 30 0.184652058 ubox
25 33 0.382308960 ubox
25 34 0.064449899 ubox
25 36 0.012285341 ubox
25 40 0.029507812 ubox
26 32 0.382486107 ubox
26 33 0.065150301 ubox
26 34 0.025620693 ubox
26 36 0.016537791 ubox
26 39 0.028968854 ubox
27 32 0.058240889 ubox
27 33 0.025594951 ubox
27 34 0.006735934 ubox
27 35 0.022548984 ubox
28 32 0.026204843 ubox
28 33 0.008288793 ubox
28 34 0.022716682 ubox
30 37 0.023664164 ubox
31 36 0.023297544 ubox
32 38 0.009074630 ubox
32 57 0.003470808 ubox
33 37 0.008935755 ubox
33 56 0.003510981 ubox
36 53 0.003622029 ubox
37 52 0.003686280 ubox
38 51 0.003685366 ubox
39 47 0.004016122 ubox
40 46 0.004278249 ubox
41 45 0.004301345 ubox
45 53 0.017651492 ubox
46 52 0.017707513 ubox
47 51 0.017579260 ubox
51 57 0.208205724 ubox
52 56 0.206459254 ubox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
10 45 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
20 28 0.9500000 lbox
21 27 0.9500000 lbox
22 26 0.9500000 lbox
showpage
end
%%EOF
