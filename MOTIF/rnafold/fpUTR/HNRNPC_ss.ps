%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAUGGGGCGGGGACUAGGCCUUCGCCUCGGCGGCAGAGGAGACUCGGGGGCCAUUUUGUGAAGAGACGAAGACUGAGCGGUUGUGGCCGCGUUGCCGACCUCCAGCAGCAGUCGGCUUCUCUACGCAGAACCCGGGAGUAGGAGACUCAGAAUCGAAUCUCUUCUCCCUCCCCUUCUUGUGAGAUUUUUUUGAUCUUCAGCUACAUUUUCGGCUUUGUGAGAAACCUUACCAUCAAACACG\
) } def
/len { sequence length } bind def

/coor [
[179.45930481 221.82458496]
[194.45695496 222.09013367]
[208.83973694 226.34870911]
[221.56224060 234.28964233]
[235.70408630 239.29046631]
[225.69096375 228.12187195]
[215.67785645 216.95327759]
[205.66473389 205.78466797]
[195.65162659 194.61607361]
[185.63851929 183.44747925]
[171.38156128 179.13606262]
[167.93035889 163.69586182]
[157.91725159 152.52725220]
[147.90412903 141.35865784]
[137.89102173 130.19006348]
[127.87790680 119.02146912]
[117.10301208 127.58750153]
[104.28417969 130.87307739]
[91.76609039 128.72193909]
[81.66436005 121.93457031]
[69.36177063 130.51632690]
[57.05918884 139.09806824]
[44.75660706 147.67982483]
[32.45402145 156.26156616]
[20.15143776 164.84332275]
[7.84885359 173.42506409]
[-4.45373011 182.00682068]
[-16.47493362 190.97848511]
[-28.20240593 200.33082581]
[-39.92987823 209.68316650]
[-51.65735245 219.03552246]
[-51.86630630 234.67170715]
[-62.11621857 246.48158264]
[-77.56739807 248.88890076]
[-90.92426300 240.75697327]
[-95.88011932 225.92547607]
[-90.09495544 211.39736938]
[-76.30035400 204.03237915]
[-61.00969696 207.30804443]
[-49.28222656 197.95570374]
[-37.55475235 188.60334778]
[-25.82728195 179.25100708]
[-40.24959946 175.12829590]
[-46.13984299 161.33319092]
[-39.14311981 148.06495667]
[-24.43239021 145.13333130]
[-12.88387871 154.70579529]
[-13.03547955 169.70423889]
[-0.73289615 161.12248230]
[11.56968784 152.54074097]
[23.87227058 143.95898438]
[36.17485428 135.37724304]
[48.47743988 126.79548645]
[60.78002167 118.21373749]
[73.08260345 109.63198853]
[71.64588165 96.34413910]
[76.40614319 83.85530853]
[66.68271637 72.43361664]
[56.95928955 61.01192856]
[47.23586273 49.59024048]
[37.51243973 38.16854858]
[27.78901291 26.74686050]
[18.06558609 15.32517147]
[3.22838640 9.83262348]
[0.86974347 -4.87404394]
[-8.85368252 -16.29573250]
[-18.57710838 -27.71742249]
[-28.30053520 -39.13911057]
[-38.02396011 -50.56080246]
[-53.08583069 -47.89860916]
[-67.36368561 -53.09858322]
[-77.05729675 -64.67011261]
[-79.64007568 -79.44120789]
[-74.51702118 -93.42762756]
[-84.24044800 -104.84931183]
[-93.96387482 -116.27100372]
[-103.68729401 -127.69269562]
[-113.41072083 -139.11437988]
[-130.90426636 -144.89717102]
[-133.37486267 -162.28105164]
[-143.24394226 -173.57711792]
[-153.18524170 -184.80969238]
[-163.19834900 -195.97828674]
[-178.74195862 -196.99514771]
[-188.73757935 -208.46434021]
[-187.67236328 -223.27653503]
[-197.68548584 -234.44512939]
[-207.76998901 -245.54930115]
[-217.92549133 -256.58859253]
[-228.08099365 -267.62786865]
[-243.88002014 -268.03579712]
[-254.70242310 -279.55322266]
[-254.12745667 -295.34707642]
[-242.49626160 -306.04708862]
[-226.70939636 -305.30517578]
[-216.13293457 -293.56149292]
[-217.04170227 -277.78335571]
[-206.88619995 -266.74407959]
[-196.73071289 -255.70478821]
[-189.90461731 -252.91635132]
[-186.51687622 -244.45823669]
[-176.50376892 -233.28964233]
[-161.66360474 -232.73728943]
[-151.34977722 -221.55339050]
[-152.02975464 -205.99139404]
[-142.01664734 -194.82279968]
[-135.22686768 -191.94706726]
[-131.94787598 -183.44621277]
[-122.07878876 -172.15013123]
[-110.04850769 -171.02908325]
[-101.73352814 -161.71867371]
[-101.98903656 -148.83781433]
[-92.26560974 -137.41612244]
[-82.54218292 -125.99443054]
[-72.81875610 -114.57273865]
[-63.09532928 -103.15105438]
[-48.47055435 -105.97620392]
[-34.30101013 -101.06906891]
[-24.42490387 -89.65290070]
[-21.57032967 -74.72814941]
[-26.60227013 -60.28422546]
[-16.87884521 -48.86253738]
[-7.15541887 -37.44084930]
[2.56800699 -26.01915932]
[12.29143238 -14.59747028]
[26.43314743 -9.92187786]
[29.48727608 5.60174561]
[39.21070099 17.02343559]
[48.93412781 28.44512367]
[58.65755463 39.86681366]
[68.38098145 51.28850174]
[78.10440826 62.71019363]
[87.82782745 74.13188171]
[97.98135376 70.18939972]
[109.34743500 70.26573944]
[120.32859039 74.69522095]
[129.25744629 83.17752838]
[140.09938049 72.81159210]
[150.94129944 62.44564819]
[161.78321838 52.07970810]
[172.62513733 41.71376801]
[176.65295410 33.54105759]
[183.67317200 31.28552818]
[194.64712524 21.05946159]
[205.62107849 10.83339405]
[216.59501648 0.60732681]
[227.56896973 -9.61874008]
[238.54292297 -19.84480858]
[243.36427307 -34.91349030]
[257.95031738 -37.92956924]
[268.92425537 -48.15563583]
[269.23089600 -63.95695114]
[280.67871094 -74.85297394]
[296.47589111 -74.37928772]
[307.25027466 -62.81692505]
[306.60958862 -47.02562714]
[294.93395996 -36.37409210]
[279.15032959 -37.18168640]
[268.17636108 -26.95562172]
[264.13995361 -12.61837578]
[248.76898193 -8.87085915]
[237.79504395 1.35520828]
[226.82109070 11.58127594]
[215.84713745 21.80734253]
[204.87318420 32.03340912]
[193.89924622 42.25947571]
[182.99108887 52.55569077]
[172.14915466 62.92163086]
[161.30723572 73.28757477]
[150.46531677 83.65351105]
[139.62339783 94.01945496]
[139.04650879 109.00835419]
[149.05961609 120.17694855]
[159.07273865 131.34555054]
[169.08584595 142.51414490]
[179.09895325 153.68273926]
[194.07212830 158.79301453]
[196.80711365 173.43437195]
[206.82022095 184.60296631]
[216.83334351 195.77156067]
[226.84645081 206.94015503]
[236.85955811 218.10874939]
[246.87268066 229.27735901]
[259.84701538 236.80509949]
[274.51251221 239.95512390]
[289.17803955 243.10514832]
[303.84353638 246.25517273]
[318.50906372 249.40519714]
[333.17459106 252.55522156]
[347.37438965 245.08894348]
[362.00668335 251.66732788]
[365.84686279 267.24398804]
[355.94903564 279.86987305]
[339.90597534 279.85943604]
[330.02456665 267.22073364]
[315.35903931 264.07070923]
[300.69351196 260.92068481]
[286.02801514 257.77066040]
[271.36248779 254.62063599]
[256.69699097 251.47061157]
[253.52975464 258.26904297]
[244.02810669 278.66436768]
[255.87454224 287.86557007]
[267.72097778 297.06677246]
[279.56741333 306.26797485]
[294.43307495 301.81921387]
[309.06338501 306.98968506]
[317.83267212 319.79119873]
[317.36898804 335.30136108]
[307.85058594 347.55615234]
[292.93753052 351.84338379]
[278.36416626 346.51449585]
[269.73428345 333.61859131]
[270.36618042 318.11441040]
[258.51977539 308.91320801]
[246.67333984 299.71200562]
[234.82690430 290.51080322]
[229.05419922 295.29888916]
[217.50877380 304.87506104]
[211.73605347 309.66314697]
[218.58871460 323.00631714]
[225.44139099 336.34951782]
[232.29405212 349.69271851]
[239.14672852 363.03591919]
[253.21450806 371.46383667]
[252.67910767 387.85424805]
[238.09129333 395.34609985]
[224.45776367 386.23242188]
[225.80352783 369.88861084]
[218.95085144 356.54541016]
[212.09819031 343.20220947]
[205.24551392 329.85900879]
[198.39285278 316.51580811]
[198.00956726 331.51089478]
[183.06072998 332.74874878]
[168.32374573 329.95205688]
[154.86769104 323.32373047]
[143.66871643 313.34460449]
[135.53923035 300.73858643]
[131.06895447 286.42019653]
[130.58219910 271.42810059]
[134.11427307 256.84988403]
[141.40893555 243.74308777]
[151.93701172 233.05853271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[10 178]
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[25 50]
[26 49]
[27 48]
[28 42]
[29 41]
[30 40]
[31 39]
[57 133]
[58 132]
[59 131]
[60 130]
[61 129]
[62 128]
[63 127]
[65 125]
[66 124]
[67 123]
[68 122]
[69 121]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
[80 109]
[81 108]
[82 106]
[83 105]
[86 102]
[87 101]
[88 99]
[89 98]
[90 97]
[137 171]
[138 170]
[139 169]
[140 168]
[141 167]
[143 166]
[144 165]
[145 164]
[146 163]
[147 162]
[148 161]
[150 159]
[151 158]
[184 200]
[185 199]
[186 198]
[187 197]
[188 196]
[189 195]
[202 217]
[203 216]
[204 215]
[205 214]
[220 233]
[221 232]
[222 231]
[223 230]
[224 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
