%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGGUUCUCACCUACUUCGACUCCUCUCCCUGUCCCAGGGAGGGGAGAAAAGGUCUGGGAUUCAUUGCCAGGAGGGGCUUCCCCCAGGAUUUCCUACUUCUUUCUUUACUGCUGUGCUUGAAGCUCACAGGAGACCCCUCAAGAGGUGGUCACCGGCCCACAGCCCACCCCAUCCCCCACCCGCCACCCCCACCGUACCAAAUGCUAGCUCUGCCCUUUCUUCUGUGUUUUUCCCAUCAAGAGAG\
) } def
/len { sequence length } bind def

/coor [
[-301.64437866 754.01135254]
[-304.86248779 768.66204834]
[-308.08062744 783.31280518]
[-311.29876709 797.96350098]
[-314.51687622 812.61425781]
[-317.73501587 827.26495361]
[-312.26028442 842.72326660]
[-323.11453247 855.01623535]
[-339.13183594 851.49792480]
[-343.83496094 835.78765869]
[-332.38574219 824.04681396]
[-329.16760254 809.39611816]
[-325.94949341 794.74536133]
[-322.73135376 780.09466553]
[-319.51321411 765.44390869]
[-316.29507446 750.79321289]
[-322.67614746 746.85211182]
[-326.22900391 761.42529297]
[-341.18679810 762.54949951]
[-346.87805176 748.67108154]
[-335.43826294 738.96997070]
[-341.81930542 735.02886963]
[-353.47848511 744.46624756]
[-365.13769531 753.90356445]
[-376.79687500 763.34088135]
[-388.45605469 772.77819824]
[-400.11526489 782.21557617]
[-411.77444458 791.65289307]
[-423.43365479 801.09020996]
[-435.09283447 810.52758789]
[-446.75201416 819.96490479]
[-458.41122437 829.40222168]
[-470.07040405 838.83953857]
[-478.57772827 853.50451660]
[-495.02465820 849.38934326]
[-495.62326050 832.44598389]
[-479.50772095 827.18035889]
[-467.84854126 817.74304199]
[-456.18936157 808.30572510]
[-444.53015137 798.86834717]
[-432.87097168 789.43103027]
[-421.21179199 779.99371338]
[-409.55258179 770.55639648]
[-397.89340210 761.11901855]
[-386.23422241 751.68170166]
[-374.57501221 742.24438477]
[-362.91583252 732.80700684]
[-351.25665283 723.36968994]
[-358.24911499 705.78637695]
[-359.91226196 687.13989258]
[-356.22235107 668.99279785]
[-347.59967041 652.83319092]
[-334.86383057 639.95220947]
[-319.15731812 631.34149170]
[-301.84356689 627.61700439]
[-284.38870239 628.97625732]
[-268.23757935 635.19104004]
[-259.79528809 622.79235840]
[-251.35299683 610.39367676]
[-242.91070557 597.99493408]
[-234.46841431 585.59625244]
[-238.94752502 567.82897949]
[-228.82312012 552.17431641]
[-210.15170288 548.85943604]
[-202.02749634 536.25006104]
[-193.90330505 523.64062500]
[-199.86332703 511.70870972]
[-199.14947510 498.28189087]
[-191.84127808 486.86697388]
[-179.75447083 480.49810791]
[-165.99096680 480.93045044]
[-157.70704651 468.42535400]
[-149.42312622 455.92028809]
[-141.13922119 443.41522217]
[-132.85530090 430.91015625]
[-124.57138062 418.40509033]
[-116.28746796 405.90002441]
[-108.00355530 393.39495850]
[-99.71963501 380.88989258]
[-107.99424744 369.57040405]
[-111.92011261 356.07870483]
[-111.00685120 342.02725220]
[-105.34366608 329.10256958]
[-95.59111786 318.86294556]
[-82.90412140 312.55047607]
[-68.79518890 310.94046021]
[-54.95414734 314.24624634]
[-46.51185608 301.84753418]
[-45.74419403 286.97274780]
[-31.58169174 279.92050171]
[-23.13939857 267.52178955]
[-14.69710541 255.12310791]
[-6.25481272 242.72441101]
[-9.27641392 228.18461609]
[-0.89135218 215.49031067]
[14.37980556 212.41955566]
[22.82209778 200.02085876]
[31.26439095 187.62216187]
[15.63310432 172.69425964]
[3.17983437 155.02803040]
[-5.62631512 135.28894043]
[-10.45362663 114.22055817]
[-11.12025833 92.61650085]
[-7.60109997 71.29057312]
[-0.02871441 51.04610062]
[11.31165409 32.64567566]
[25.99282455 16.78241920]
[43.46177292 4.05388689]
[63.06045914 -5.06045008]
[84.05062103 -10.21726322]
[82.90702057 -25.17360687]
[81.76342010 -40.12994766]
[77.99661255 -48.42491913]
[80.70162964 -55.28357697]
[79.74834442 -70.25325775]
[71.14965820 -83.53380585]
[78.06246948 -96.72707367]
[77.10918427 -111.69675446]
[76.15590668 -126.66642761]
[69.11517334 -142.08929443]
[81.98623657 -153.12432861]
[96.15309143 -143.81108093]
[91.12557983 -127.61971283]
[92.07886505 -112.65003204]
[93.03215027 -97.68035889]
[101.56265259 -85.47053528]
[94.71802521 -71.20653534]
[95.67130280 -56.23685837]
[96.71976471 -41.27354813]
[97.86336517 -26.31720543]
[99.00696564 -11.36086273]
[115.20236969 -10.32277966]
[131.07495117 -6.94192505]
[146.28762817 -1.29009366]
[153.42683411 -14.48219967]
[160.56605530 -27.67430687]
[167.70526123 -40.86641312]
[174.76043701 -54.10365295]
[181.73127747 -67.38549042]
[188.70213318 -80.66733551]
[187.50151062 -97.02247620]
[201.21540833 -106.01475525]
[215.73612976 -98.39369202]
[216.12600708 -81.99917603]
[201.98397827 -73.69648743]
[195.01312256 -60.41464615]
[188.04228210 -47.13280487]
[187.71751404 -39.76715469]
[180.89736938 -33.72720337]
[173.75816345 -20.53509521]
[166.61894226 -7.34298897]
[159.47973633 5.84911728]
[166.88235474 10.95518494]
[173.84884644 16.64188385]
[180.33380127 22.87213135]
[186.29492188 29.60530281]
[198.53030396 20.92801285]
[210.76570129 12.25072098]
[214.86326599 -3.26022458]
[229.60250854 -9.59540653]
[243.67671204 -1.89501512]
[246.28938293 13.93386841]
[235.43627930 25.74867821]
[219.44299316 24.48610497]
[207.20759583 33.16339493]
[194.97221375 41.84068680]
[199.73376465 50.44796371]
[203.71722412 59.44182968]
[206.89152527 68.75211334]
[209.23188782 78.30618286]
[210.72007751 88.02950287]
[211.34446716 97.84620667]
[211.10017395 107.67971039]
[209.98913574 117.45330811]
[208.02000427 127.09073639]
[205.20812988 136.51681519]
[201.57546997 145.65800476]
[197.15034485 154.44297791]
[191.96730042 162.80322266]
[186.06675720 170.67349243]
[179.49475098 177.99238586]
[172.30255127 184.70281982]
[164.54627991 190.75244141]
[156.28645325 196.09403992]
[147.58747864 200.68594360]
[138.51725769 204.49234009]
[129.14654541 207.48352051]
[119.54843140 209.63615417]
[109.79781342 210.93345642]
[99.97074890 211.36528015]
[90.14392090 210.92828369]
[80.39398193 209.62586975]
[70.79700470 207.46820068]
[61.42786026 204.47209167]
[52.35963821 200.66093445]
[43.66308975 196.06445312]
[35.22079468 208.46315002]
[26.77850342 220.86184692]
[29.51778030 236.19593811]
[20.77947044 248.64971924]
[6.14388418 251.16670227]
[-2.29840875 263.56539917]
[-10.74070168 275.96408081]
[-19.18299484 288.36279297]
[-20.55450439 304.12445068]
[-34.11315918 310.28982544]
[-42.55545044 322.68853760]
[-33.64986038 336.08834839]
[-30.58046532 351.84280396]
[-33.78890228 367.53018188]
[-42.75410843 380.75057983]
[-56.07666016 389.49316406]
[-71.69716644 392.44195557]
[-87.21456909 389.17379761]
[-95.49848175 401.67886353]
[-103.78240204 414.18392944]
[-112.06631470 426.68899536]
[-120.35022736 439.19409180]
[-128.63414001 451.69915771]
[-136.91806030 464.20422363]
[-145.20198059 476.70928955]
[-153.48588562 489.21435547]
[-147.35392761 504.99020386]
[-151.79780579 521.14959717]
[-164.87211609 531.36669922]
[-181.29388428 531.76483154]
[-189.41809082 544.37420654]
[-197.54228210 556.98364258]
[-192.82368469 567.86480713]
[-193.92115784 579.55395508]
[-200.44821167 589.16851807]
[-210.69387817 594.39361572]
[-222.06971741 594.03857422]
[-230.51200867 606.43725586]
[-238.95429993 618.83593750]
[-247.39659119 631.23461914]
[-255.83888245 643.63336182]
[-246.27293396 653.41119385]
[-239.10700989 665.21624756]
[-234.76550293 678.46356201]
[-233.53115845 692.48077393]
[-235.52738953 706.54211426]
[-240.70878601 719.90594482]
[-248.86044312 731.85406494]
[-259.60632324 741.73010254]
[-272.42626953 748.97552490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[22 48]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[33 37]
[57 237]
[58 236]
[59 235]
[60 234]
[61 233]
[64 228]
[65 227]
[66 226]
[71 222]
[72 221]
[73 220]
[74 219]
[75 218]
[76 217]
[77 216]
[78 215]
[79 214]
[87 207]
[88 206]
[90 204]
[91 203]
[92 202]
[93 201]
[96 198]
[97 197]
[98 196]
[110 131]
[111 130]
[112 129]
[114 128]
[115 127]
[117 125]
[118 124]
[119 123]
[134 152]
[135 151]
[136 150]
[137 149]
[138 147]
[139 146]
[140 145]
[156 166]
[157 165]
[158 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
