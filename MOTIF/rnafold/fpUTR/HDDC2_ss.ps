%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:49:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGUGGGGGAGGAGGAGGAGGAGUUGGAAGGGGAGGAGGAAGAGGGGGAGCAGGAAGAGGGGCAGAAGGAAGAAGAAGAGGGGGAGGAGAAAGAGAUAGAAGAGUAAGAGGAGGGGGAAGAAAGACAAGGGGAAGGGGAGGAGGAGGAGGACGGGGAGGAGCUUCGCCGCGGCCUGCUCCGCCCAGCCGGGGUCGGUGGCCGC\
) } def
/len { sequence length } bind def

/coor [
[-177.80401611 113.14099121]
[-184.13838196 126.74163818]
[-191.17015076 139.99517822]
[-198.88034058 152.86587524]
[-207.24816895 165.31904602]
[-216.25109863 177.32109070]
[-225.86483765 188.83967590]
[-236.06349182 199.84375000]
[-246.81953430 210.30363464]
[-258.10400391 220.19114685]
[-269.88644409 229.47961426]
[-282.13513184 238.14401245]
[-294.81701660 246.16098022]
[-307.89791870 253.50889587]
[-321.34259033 260.16796875]
[-335.11474609 266.12020874]
[-349.17730713 271.34960938]
[-363.49230957 275.84207153]
[-378.02120972 279.58547974]
[-392.72482300 282.56970215]
[-407.56350708 284.78674316]
[-422.49728394 286.23062134]
[-437.48583984 286.89743042]
[-452.48883057 286.78536987]
[-467.46575928 285.89474487]
[-482.37628174 284.22796631]
[-497.18020630 281.78948975]
[-511.83758545 278.58593750]
[-526.30895996 274.62594604]
[-540.55529785 269.92016602]
[-554.53814697 264.48126221]
[-568.21984863 258.32394409]
[-581.56353760 251.46479797]
[-594.53320312 243.92230225]
[-607.09393311 235.71679688]
[-619.21179199 226.87039185]
[-630.85418701 217.40695190]
[-641.98974609 207.35198975]
[-652.58831787 196.73258972]
[-662.62145996 185.57740784]
[-672.06207275 173.91648865]
[-680.88470459 161.78129578]
[-689.06555176 149.20452881]
[-696.58264160 136.22009277]
[-703.41564941 122.86299133]
[-709.54614258 109.16923523]
[-714.95764160 95.17573547]
[-719.63549805 80.92022705]
[-723.56713867 66.44113922]
[-726.74194336 51.77749252]
[-729.15136719 36.96883011]
[-730.78894043 22.05506897]
[-731.65020752 7.07641220]
[-731.73291016 -7.92675734]
[-731.03674316 -22.91399384]
[-729.56359863 -37.84489441]
[-727.31744385 -52.67921066]
[-724.30444336 -67.37694550]
[-720.53259277 -81.89848328]
[-716.01208496 -96.20467377]
[-710.75512695 -110.25695038]
[-704.77587891 -124.01742554]
[-698.09051514 -137.44900513]
[-690.71697998 -150.51548767]
[-682.67517090 -163.18164062]
[-673.98675537 -175.41331482]
[-664.67523193 -187.17755127]
[-654.76562500 -198.44261169]
[-644.28466797 -209.17814636]
[-633.26068115 -219.35520935]
[-621.72326660 -228.94636536]
[-609.70355225 -237.92576599]
[-597.23406982 -246.26918030]
[-584.34826660 -253.95413208]
[-571.08099365 -260.95989990]
[-557.46795654 -267.26760864]
[-543.54583740 -272.86026001]
[-529.35223389 -277.72271729]
[-514.92541504 -281.84194946]
[-500.30419922 -285.20681763]
[-485.52807617 -287.80825806]
[-470.63681030 -289.63925171]
[-455.67059326 -290.69485474]
[-440.66976929 -290.97222900]
[-425.67474365 -290.47061157]
[-410.72598267 -289.19140625]
[-395.86376953 -287.13800049]
[-381.12817383 -284.31594849]
[-366.55889893 -280.73287964]
[-352.19525146 -276.39843750]
[-338.07592773 -271.32431030]
[-324.23901367 -265.52416992]
[-310.72180176 -259.01367188]
[-297.56069946 -251.81033325]
[-284.79125977 -243.93360901]
[-272.44784546 -235.40470886]
[-260.56375122 -226.24662781]
[-249.17102051 -216.48406982]
[-238.30036926 -206.14332581]
[-227.98109436 -195.25230408]
[-218.24099731 -183.84036255]
[-209.10636902 -171.93823242]
[-200.60182190 -159.57803345]
[-192.75027466 -146.79307556]
[-185.57289124 -133.61782837]
[-179.08905029 -120.08780670]
[-173.31619263 -106.23947906]
[-168.26991272 -92.11018372]
[-163.96379089 -77.73801422]
[-160.40943909 -63.16171646]
[-157.61645508 -48.42057800]
[-155.59236145 -33.55434036]
[-154.34260559 -18.60308647]
[-153.87057495 -3.60711670]
[-154.17752075 11.39314079]
[-155.26261902 26.35724640]
[-157.12295532 41.24486160]
[-142.35530090 43.87473297]
[-134.79917908 32.23677444]
[-123.34143066 24.33355141]
[-109.69371796 21.38586044]
[-95.91026306 23.87116241]
[-84.07859802 31.44661140]
[-76.00343323 42.99592590]
[-72.93141174 56.79376602]
[-58.20578766 59.64963150]
[-43.48016357 62.50550079]
[-32.73574448 52.22467041]
[-17.82138252 50.21821976]
[-4.42878103 57.46332932]
[2.20637059 71.36588287]
[16.93199539 74.22174835]
[24.78373146 65.93662262]
[35.77432251 62.43642807]
[47.20645142 64.70165253]
[56.21544266 72.28267670]
[60.48706436 83.38334656]
[75.11825562 86.68913269]
[89.74944305 89.99492645]
[103.15679932 86.02824402]
[113.55634308 95.37388611]
[128.18753052 98.67967224]
[142.81872559 101.98546600]
[157.44992065 105.29125977]
[172.61596680 100.78556061]
[183.32511902 111.13753510]
[197.95631409 114.44332886]
[212.58750916 117.74911499]
[222.24479675 107.91031647]
[235.39849854 104.15908813]
[248.58238220 107.37269592]
[258.37692261 116.60752106]
[262.29632568 129.37274170]
[276.87515259 132.90234375]
[291.45394897 136.43196106]
[306.68728638 132.15921021]
[317.23654175 142.67407227]
[331.81533813 146.20368958]
[346.39416504 149.73330688]
[361.96563721 144.58924866]
[374.02450562 155.70298767]
[370.16567993 171.64166260]
[354.35873413 176.00892639]
[342.86453247 164.31211853]
[328.28573608 160.78250122]
[313.70690918 157.25288391]
[299.51635742 161.77810669]
[287.92434692 151.01077271]
[273.34552002 147.48117065]
[258.76672363 143.95155334]
[246.61308289 154.98312378]
[230.11381531 156.61480713]
[215.74972534 148.00669861]
[209.28170776 132.38031006]
[194.65052795 129.07450867]
[180.01933289 125.76872253]
[165.89979553 130.51087952]
[154.14411926 119.92244720]
[139.51293945 116.61665344]
[124.88174438 113.31086731]
[110.25055695 110.00507355]
[96.84320068 113.97175598]
[86.44365692 104.62611389]
[71.81246185 101.32032776]
[57.18127441 98.01453400]
[41.56453705 108.73328400]
[23.38292503 104.70724487]
[14.07612896 88.94737244]
[-0.64949608 86.09150696]
[-12.00062656 96.50582123]
[-27.13064384 98.21929932]
[-40.21370316 90.78306580]
[-46.33602905 77.23112488]
[-61.06165314 74.37525940]
[-75.78727722 71.51939392]
[-85.40174103 84.64277649]
[-99.72492218 92.23342133]
[-115.86642456 92.81697845]
[-130.59385681 86.32734680]
[-140.98011780 74.10978699]
[-144.98516846 58.64239502]
[-159.75282288 56.01251984]
[-163.14633179 70.62710571]
[-167.29382324 85.04585266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[117 202]
[118 201]
[125 195]
[126 194]
[127 193]
[131 189]
[132 188]
[137 185]
[138 184]
[139 183]
[141 181]
[142 180]
[143 179]
[144 178]
[146 176]
[147 175]
[148 174]
[153 170]
[154 169]
[155 168]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
