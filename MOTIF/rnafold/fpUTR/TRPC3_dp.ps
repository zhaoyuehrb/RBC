%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRPC3)
} def

/sequence { (\
GGGAAGACUGCACUGCCGCGAAGGCGGAGGAGGCCGGCAGCCGGCACCCCCACACUCGGACCGCAGCCGGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.318311875 ubox
1 14 0.037551995 ubox
1 17 0.045200113 ubox
1 35 0.045353128 ubox
1 49 0.020451280 ubox
1 50 0.023955629 ubox
1 51 0.106084676 ubox
1 56 0.003259070 ubox
1 57 0.020269637 ubox
1 62 0.030780058 ubox
1 68 0.090831423 ubox
2 8 0.340536989 ubox
2 9 0.121225447 ubox
2 13 0.040147882 ubox
2 14 0.014240889 ubox
2 16 0.045287963 ubox
2 17 0.069251762 ubox
2 34 0.045103695 ubox
2 35 0.060705767 ubox
2 48 0.020535652 ubox
2 49 0.024135970 ubox
2 50 0.106104515 ubox
2 51 0.023609771 ubox
2 55 0.003927250 ubox
2 56 0.020446477 ubox
2 61 0.030931207 ubox
2 62 0.011693954 ubox
2 67 0.090681981 ubox
2 68 0.115558109 ubox
3 8 0.127597239 ubox
3 13 0.015140842 ubox
3 16 0.069589838 ubox
3 34 0.060666618 ubox
3 47 0.020458100 ubox
3 48 0.023986233 ubox
3 49 0.101671587 ubox
3 50 0.023619664 ubox
3 55 0.020384052 ubox
3 57 0.005479742 ubox
3 61 0.011750837 ubox
3 67 0.115729799 ubox
4 56 0.004911721 ubox
5 14 0.086836866 ubox
5 56 0.004879059 ubox
6 13 0.093175504 ubox
6 55 0.005493383 ubox
6 57 0.028861535 ubox
7 56 0.028162770 ubox
8 27 0.025629880 ubox
8 29 0.108573017 ubox
8 30 0.113958689 ubox
8 32 0.509735633 ubox
8 33 0.049337788 ubox
8 37 0.020707646 ubox
8 59 0.005053953 ubox
8 66 0.176740646 ubox
8 70 0.028609325 ubox
9 20 0.004187071 ubox
9 26 0.025752367 ubox
9 28 0.107402041 ubox
9 29 0.112792168 ubox
9 31 0.505778538 ubox
9 32 0.076898469 ubox
9 36 0.024700056 ubox
9 39 0.004490978 ubox
9 52 0.004696975 ubox
9 54 0.026604093 ubox
9 58 0.005063723 ubox
9 65 0.177774257 ubox
9 69 0.028724462 ubox
9 72 0.045845394 ubox
9 74 0.287292889 ubox
10 16 0.022162924 ubox
10 19 0.005549596 ubox
10 25 0.026149282 ubox
10 34 0.089330550 ubox
10 35 0.021099494 ubox
10 38 0.004851597 ubox
10 51 0.004788783 ubox
10 53 0.026832506 ubox
10 57 0.004930335 ubox
10 64 0.178047774 ubox
10 67 0.004945855 ubox
10 68 0.028387154 ubox
10 71 0.065753258 ubox
10 73 0.562309074 ubox
11 15 0.022746456 ubox
11 18 0.005551799 ubox
11 24 0.026123164 ubox
11 33 0.091509028 ubox
11 37 0.004835645 ubox
11 63 0.177861587 ubox
11 66 0.005707998 ubox
11 70 0.065624392 ubox
11 72 0.562089028 ubox
13 23 0.025815264 ubox
13 27 0.634478695 ubox
13 29 0.486824916 ubox
13 30 0.483981557 ubox
13 32 0.133343316 ubox
13 40 0.004688503 ubox
13 59 0.026663329 ubox
13 66 0.064907725 ubox
13 70 0.060989128 ubox
14 22 0.025753288 ubox
14 26 0.636930676 ubox
14 28 0.486899917 ubox
14 29 0.445135416 ubox
14 31 0.127927423 ubox
14 32 0.003502767 ubox
14 39 0.006878079 ubox
14 58 0.026285582 ubox
14 65 0.065317495 ubox
14 69 0.056658027 ubox
14 72 0.053808178 ubox
14 74 0.012536078 ubox
15 25 0.643518728 ubox
15 38 0.007197202 ubox
15 57 0.022385469 ubox
15 62 0.005026762 ubox
15 64 0.065412053 ubox
15 67 0.030275084 ubox
15 68 0.046675047 ubox
15 71 0.100058455 ubox
15 73 0.023386606 ubox
16 24 0.643553715 ubox
16 27 0.743663004 ubox
16 30 0.008244050 ubox
16 37 0.007195814 ubox
16 59 0.035210146 ubox
16 63 0.063446856 ubox
16 66 0.041802973 ubox
16 70 0.100085997 ubox
16 72 0.019672265 ubox
17 23 0.643444532 ubox
17 26 0.745988689 ubox
17 29 0.007814273 ubox
17 36 0.007189890 ubox
17 58 0.035202175 ubox
17 63 0.010155052 ubox
17 69 0.100029187 ubox
17 72 0.012280759 ubox
17 74 0.059558293 ubox
18 25 0.746335854 ubox
18 35 0.003405429 ubox
18 57 0.033347114 ubox
18 62 0.013364773 ubox
18 64 0.041971328 ubox
18 67 0.031142913 ubox
18 68 0.094421905 ubox
18 71 0.017425879 ubox
18 73 0.102765977 ubox
19 24 0.746100261 ubox
19 26 0.005563486 ubox
19 58 0.063533185 ubox
19 63 0.041974140 ubox
19 66 0.042861922 ubox
19 69 0.014986011 ubox
19 70 0.016692361 ubox
19 72 0.102835522 ubox
20 25 0.005703831 ubox
20 57 0.064048785 ubox
20 62 0.041341347 ubox
20 68 0.016330445 ubox
20 71 0.102721542 ubox
21 56 0.052591233 ubox
22 56 0.052410089 ubox
23 35 0.007512481 ubox
23 51 0.003199768 ubox
23 55 0.063918577 ubox
23 56 0.021418760 ubox
23 57 0.021589766 ubox
23 62 0.019213108 ubox
23 68 0.100944745 ubox
24 34 0.008039491 ubox
24 55 0.027423518 ubox
24 56 0.013455046 ubox
24 61 0.019187964 ubox
24 64 0.102286227 ubox
24 67 0.099770360 ubox
25 33 0.008039159 ubox
25 58 0.011606121 ubox
25 63 0.103430276 ubox
25 66 0.098502711 ubox
26 50 0.019361318 ubox
26 51 0.141712402 ubox
26 57 0.008718944 ubox
26 62 0.108293478 ubox
27 49 0.020274104 ubox
27 50 0.142042736 ubox
27 55 0.004509614 ubox
27 56 0.006151002 ubox
27 57 0.005904194 ubox
27 61 0.107803603 ubox
28 56 0.006330970 ubox
29 35 0.008901345 ubox
29 48 0.096188792 ubox
29 49 0.264240006 ubox
29 50 0.008270081 ubox
29 51 0.010228003 ubox
29 55 0.003677351 ubox
29 62 0.023412763 ubox
30 34 0.008784385 ubox
30 47 0.096712141 ubox
30 48 0.268860466 ubox
30 49 0.007648301 ubox
30 50 0.010202883 ubox
30 57 0.010242063 ubox
30 61 0.023104632 ubox
31 56 0.010296731 ubox
32 48 0.008098140 ubox
32 49 0.004016572 ubox
32 55 0.010279633 ubox
33 45 0.293564483 ubox
33 47 0.005508261 ubox
33 71 0.946142038 ubox
33 73 0.008677098 ubox
34 44 0.293664272 ubox
34 70 0.947275630 ubox
34 72 0.007047004 ubox
35 43 0.293660898 ubox
35 69 0.947317912 ubox
35 74 0.016682420 ubox
36 42 0.293602233 ubox
36 68 0.947320146 ubox
36 73 0.014189720 ubox
37 41 0.288862507 ubox
37 67 0.947333737 ubox
37 73 0.122862587 ubox
38 66 0.945950947 ubox
38 72 0.123241970 ubox
40 64 0.918420948 ubox
40 71 0.127487605 ubox
41 59 0.030816885 ubox
41 63 0.651157488 ubox
41 70 0.127585304 ubox
42 58 0.035459397 ubox
42 63 0.686329170 ubox
42 69 0.127584136 ubox
43 49 0.020963216 ubox
43 50 0.005624543 ubox
43 51 0.005136671 ubox
43 57 0.035264087 ubox
43 62 0.945268457 ubox
43 68 0.127584158 ubox
44 48 0.020698502 ubox
44 49 0.006065361 ubox
44 50 0.005167545 ubox
44 55 0.012179613 ubox
44 56 0.026881526 ubox
44 61 0.944732362 ubox
44 64 0.011861377 ubox
44 67 0.127570106 ubox
45 63 0.012020779 ubox
45 66 0.127376006 ubox
47 59 0.392632400 ubox
48 58 0.390806747 ubox
48 59 0.809433911 ubox
49 58 0.809991154 ubox
49 59 0.165880547 ubox
50 58 0.167165349 ubox
50 59 0.327479864 ubox
51 58 0.328473111 ubox
55 66 0.011122012 ubox
55 70 0.021976031 ubox
56 65 0.016964024 ubox
56 69 0.003701200 ubox
56 70 0.052898943 ubox
57 63 0.040066053 ubox
57 69 0.082149299 ubox
57 72 0.010167319 ubox
57 74 0.095512278 ubox
58 62 0.039402105 ubox
58 68 0.083429999 ubox
58 71 0.010849857 ubox
58 73 0.105726457 ubox
59 67 0.083301121 ubox
61 70 0.124396012 ubox
62 69 0.124747883 ubox
62 72 0.035944083 ubox
62 74 0.021174712 ubox
63 68 0.118790844 ubox
63 71 0.046451989 ubox
63 73 0.028273019 ubox
64 70 0.046437707 ubox
64 72 0.028269778 ubox
66 73 0.023493744 ubox
67 72 0.024275430 ubox
68 74 0.012015065 ubox
69 73 0.013525594 ubox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
33 71 0.9500000 lbox
34 70 0.9500000 lbox
35 69 0.9500000 lbox
36 68 0.9500000 lbox
37 67 0.9500000 lbox
38 66 0.9500000 lbox
40 64 0.9500000 lbox
41 63 0.9500000 lbox
43 62 0.9500000 lbox
44 61 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
showpage
end
%%EOF
