%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WDR62)
} def

/sequence { (\
UUUCCCGCGGCUGUUCGCUGUUCCAGUGGGUCGUGGCGGUGGCGGCAGCGGCGGUUAGGGGAUGUAACGGUCGCCCGCCUCCGGCGUGACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003971925 ubox
1 26 0.013138913 ubox
1 29 0.009965946 ubox
1 62 0.007496904 ubox
1 67 0.011650002 ubox
1 84 0.004598151 ubox
1 89 0.012368882 ubox
2 9 0.004663864 ubox
2 10 0.003577429 ubox
2 25 0.015488430 ubox
2 26 0.023052873 ubox
2 28 0.011811791 ubox
2 29 0.005265278 ubox
2 39 0.003329446 ubox
2 57 0.003429026 ubox
2 61 0.006756618 ubox
2 62 0.101559290 ubox
2 66 0.013856210 ubox
2 67 0.005041678 ubox
2 84 0.005413472 ubox
2 88 0.012921142 ubox
2 89 0.014613649 ubox
3 9 0.003992398 ubox
3 10 0.016923388 ubox
3 25 0.027292348 ubox
3 28 0.005382918 ubox
3 29 0.012109862 ubox
3 30 0.005786994 ubox
3 36 0.003886981 ubox
3 38 0.005143277 ubox
3 39 0.012193655 ubox
3 42 0.003735350 ubox
3 60 0.005337887 ubox
3 61 0.109277597 ubox
3 62 0.206354222 ubox
3 84 0.007839266 ubox
3 88 0.014527309 ubox
3 89 0.062547077 ubox
4 9 0.021940128 ubox
4 10 0.044496343 ubox
4 28 0.014362348 ubox
4 29 0.087599317 ubox
4 30 0.153082244 ubox
4 35 0.004842660 ubox
4 36 0.044633481 ubox
4 38 0.020409789 ubox
4 41 0.005159286 ubox
4 59 0.005419618 ubox
4 60 0.112910816 ubox
4 61 0.220712737 ubox
4 83 0.007567256 ubox
4 84 0.013949786 ubox
4 88 0.067394625 ubox
5 9 0.044703028 ubox
5 28 0.086294824 ubox
5 29 0.368379343 ubox
5 30 0.006573849 ubox
5 35 0.032663333 ubox
5 36 0.808523276 ubox
5 39 0.027282804 ubox
5 45 0.007452640 ubox
5 54 0.010407174 ubox
5 58 0.004850681 ubox
5 59 0.112975942 ubox
5 60 0.220750188 ubox
5 83 0.004537419 ubox
5 84 0.003419861 ubox
6 13 0.020925365 ubox
6 20 0.018694248 ubox
6 28 0.369363748 ubox
6 29 0.012981285 ubox
6 35 0.826727786 ubox
6 38 0.027603371 ubox
6 44 0.007546236 ubox
6 53 0.010917228 ubox
6 58 0.112992713 ubox
6 59 0.220706070 ubox
6 86 0.012866159 ubox
6 88 0.009888857 ubox
6 91 0.009449840 ubox
7 12 0.014419651 ubox
7 14 0.048025283 ubox
7 18 0.078179927 ubox
7 19 0.004068348 ubox
7 21 0.312714884 ubox
7 27 0.317772131 ubox
7 34 0.832074590 ubox
7 37 0.028381280 ubox
7 43 0.007556344 ubox
7 52 0.011318817 ubox
7 55 0.013811091 ubox
7 85 0.009381920 ubox
7 87 0.008493165 ubox
7 90 0.004338580 ubox
8 13 0.050035393 ubox
8 17 0.078559496 ubox
8 20 0.330119486 ubox
8 26 0.308332345 ubox
8 28 0.006494820 ubox
8 33 0.833019440 ubox
8 36 0.028438506 ubox
8 42 0.007555883 ubox
8 51 0.011314483 ubox
8 54 0.014296439 ubox
8 84 0.009206627 ubox
8 86 0.008313894 ubox
8 91 0.003561320 ubox
9 16 0.078426658 ubox
9 19 0.378617383 ubox
9 22 0.134160424 ubox
9 23 0.043418255 ubox
9 24 0.176387515 ubox
9 27 0.004862359 ubox
9 32 0.833041084 ubox
9 56 0.235620211 ubox
9 85 0.004379240 ubox
10 15 0.055467986 ubox
10 18 0.380522202 ubox
10 21 0.150191491 ubox
10 22 0.031336989 ubox
10 23 0.169901129 ubox
10 27 0.027433354 ubox
10 31 0.832662925 ubox
10 34 0.028797482 ubox
10 37 0.004017824 ubox
10 40 0.007549956 ubox
10 49 0.011317640 ubox
10 52 0.014493352 ubox
10 55 0.247043382 ubox
11 17 0.380821676 ubox
11 20 0.192877506 ubox
11 26 0.029413203 ubox
11 29 0.010449538 ubox
11 30 0.830763375 ubox
11 33 0.028848059 ubox
11 36 0.004149118 ubox
11 39 0.007564707 ubox
11 48 0.011322444 ubox
11 51 0.014495907 ubox
11 54 0.247568112 ubox
12 20 0.022035824 ubox
12 25 0.031699092 ubox
12 28 0.008243020 ubox
12 29 0.701152727 ubox
12 33 0.003868760 ubox
12 35 0.003820013 ubox
12 38 0.007555969 ubox
12 47 0.011319116 ubox
12 50 0.014300666 ubox
12 53 0.247376949 ubox
13 19 0.022589031 ubox
13 21 0.034707049 ubox
13 24 0.031653340 ubox
13 31 0.019326042 ubox
13 32 0.015002750 ubox
13 37 0.007557684 ubox
13 46 0.011313453 ubox
13 49 0.014259369 ubox
13 52 0.247412697 ubox
14 20 0.035748928 ubox
14 29 0.028225922 ubox
14 30 0.065348001 ubox
14 36 0.006170618 ubox
14 45 0.009230173 ubox
14 48 0.014232399 ubox
14 51 0.176129045 ubox
15 28 0.008899795 ubox
15 29 0.458356533 ubox
15 36 0.004220386 ubox
15 42 0.005208561 ubox
15 44 0.003588046 ubox
15 45 0.006420919 ubox
15 47 0.013844893 ubox
15 50 0.034059005 ubox
15 51 0.172450846 ubox
16 28 0.848692511 ubox
16 29 0.008452367 ubox
16 35 0.005985598 ubox
16 41 0.006885286 ubox
16 44 0.009107399 ubox
16 50 0.244805544 ubox
17 27 0.851469367 ubox
17 34 0.006013794 ubox
17 40 0.006933997 ubox
17 43 0.009208763 ubox
17 46 0.014150384 ubox
17 49 0.247577320 ubox
18 26 0.852432437 ubox
18 33 0.006008671 ubox
18 39 0.006939339 ubox
18 42 0.009198516 ubox
18 45 0.014154878 ubox
18 48 0.247584152 ubox
19 25 0.851458552 ubox
19 38 0.006937735 ubox
19 41 0.009056066 ubox
19 44 0.014138409 ubox
19 47 0.247525779 ubox
20 24 0.837948279 ubox
20 32 0.004539775 ubox
20 37 0.006843821 ubox
20 40 0.006448028 ubox
20 43 0.013867323 ubox
20 46 0.247576696 ubox
21 36 0.004933670 ubox
21 39 0.005940739 ubox
21 42 0.009195259 ubox
21 45 0.246925281 ubox
22 28 0.003572119 ubox
22 29 0.022777244 ubox
22 30 0.009757346 ubox
22 35 0.004147842 ubox
22 38 0.005912312 ubox
22 41 0.007102805 ubox
22 44 0.231091031 ubox
22 45 0.003356283 ubox
23 28 0.026778892 ubox
23 29 0.133770454 ubox
23 30 0.012472999 ubox
23 36 0.010632683 ubox
23 39 0.008302046 ubox
23 42 0.247558692 ubox
24 28 0.133112680 ubox
24 29 0.027127694 ubox
24 35 0.010810137 ubox
24 38 0.008277468 ubox
24 41 0.247799743 ubox
25 34 0.010752612 ubox
25 40 0.247627580 ubox
26 37 0.013356859 ubox
27 36 0.013359978 ubox
27 38 0.245550722 ubox
27 91 0.003705993 ubox
28 37 0.246843173 ubox
30 37 0.016188918 ubox
30 90 0.467592431 ubox
31 36 0.015740397 ubox
31 39 0.003674314 ubox
31 89 0.485124731 ubox
32 38 0.003758657 ubox
32 86 0.005033018 ubox
32 88 0.488508782 ubox
32 91 0.057771232 ubox
33 37 0.003541725 ubox
33 85 0.005294543 ubox
33 87 0.463462846 ubox
33 90 0.063662663 ubox
34 84 0.005087740 ubox
34 86 0.463921827 ubox
34 89 0.063296466 ubox
35 85 0.497603470 ubox
36 85 0.127256164 ubox
36 87 0.075596082 ubox
37 83 0.947564524 ubox
37 84 0.094862148 ubox
37 86 0.111905887 ubox
37 88 0.005131556 ubox
38 81 0.007568092 ubox
38 82 0.961229854 ubox
38 85 0.112714393 ubox
39 80 0.007720493 ubox
39 81 0.959989250 ubox
39 85 0.006689081 ubox
39 90 0.006733787 ubox
40 83 0.112127384 ubox
40 84 0.005681573 ubox
40 89 0.006771549 ubox
41 79 0.960856520 ubox
41 80 0.003380874 ubox
41 82 0.112563929 ubox
42 78 0.962043839 ubox
42 81 0.112492260 ubox
42 87 0.006681643 ubox
43 77 0.962037705 ubox
43 86 0.006685285 ubox
43 91 0.005530646 ubox
44 75 0.005418878 ubox
44 76 0.961995976 ubox
44 79 0.112473498 ubox
44 85 0.005089405 ubox
44 90 0.005965095 ubox
45 74 0.007019381 ubox
45 75 0.956966725 ubox
45 78 0.112517901 ubox
45 85 0.004319166 ubox
46 73 0.007859023 ubox
46 77 0.112380102 ubox
46 84 0.006001207 ubox
46 88 0.004618118 ubox
47 87 0.003898609 ubox
48 74 0.964289579 ubox
48 87 0.008143530 ubox
49 73 0.968544538 ubox
49 83 0.007088665 ubox
49 86 0.009052214 ubox
50 72 0.968488996 ubox
50 82 0.007430316 ubox
50 85 0.009071741 ubox
51 71 0.968267659 ubox
51 81 0.007429903 ubox
52 69 0.008733387 ubox
52 70 0.968324753 ubox
52 83 0.009112800 ubox
53 68 0.009973850 ubox
53 79 0.007439294 ubox
53 82 0.009115409 ubox
54 68 0.967470955 ubox
54 78 0.007441490 ubox
54 81 0.009109850 ubox
55 67 0.967906400 ubox
55 77 0.007206020 ubox
56 61 0.003519900 ubox
56 64 0.024819295 ubox
56 66 0.966250949 ubox
57 63 0.034238324 ubox
57 65 0.958400945 ubox
58 75 0.008436256 ubox
58 76 0.011258678 ubox
59 74 0.008547216 ubox
59 75 0.011298950 ubox
60 74 0.011289766 ubox
61 72 0.014163492 ubox
62 71 0.014170975 ubox
63 69 0.010807502 ubox
63 70 0.014033171 ubox
64 68 0.014556320 ubox
64 90 0.004272312 ubox
65 89 0.003972402 ubox
67 87 0.003293085 ubox
68 86 0.003452894 ubox
68 91 0.046278257 ubox
69 90 0.035153790 ubox
70 90 0.245202859 ubox
71 84 0.003469499 ubox
71 89 0.247752661 ubox
72 83 0.003553704 ubox
72 86 0.008942958 ubox
72 88 0.247919403 ubox
73 82 0.003528647 ubox
73 85 0.009826084 ubox
73 87 0.246671226 ubox
74 84 0.009418844 ubox
74 86 0.244492864 ubox
75 83 0.008966974 ubox
75 84 0.238622983 ubox
76 83 0.238646321 ubox
76 86 0.041033813 ubox
77 82 0.227236747 ubox
77 85 0.067508470 ubox
78 84 0.067696763 ubox
79 83 0.067204599 ubox
80 89 0.004535316 ubox
81 88 0.004873087 ubox
82 88 0.003616125 ubox
82 91 0.021459628 ubox
83 90 0.045647394 ubox
85 91 0.088565498 ubox
86 90 0.089779328 ubox
5 36 0.9500000 lbox
6 35 0.9500000 lbox
7 34 0.9500000 lbox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
12 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
20 24 0.9500000 lbox
37 83 0.9500000 lbox
38 82 0.9500000 lbox
39 81 0.9500000 lbox
41 79 0.9500000 lbox
42 78 0.9500000 lbox
43 77 0.9500000 lbox
44 76 0.9500000 lbox
45 75 0.9500000 lbox
48 74 0.9500000 lbox
49 73 0.9500000 lbox
50 72 0.9500000 lbox
51 71 0.9500000 lbox
52 70 0.9500000 lbox
54 68 0.9500000 lbox
55 67 0.9500000 lbox
56 66 0.9500000 lbox
57 65 0.9500000 lbox
showpage
end
%%EOF
