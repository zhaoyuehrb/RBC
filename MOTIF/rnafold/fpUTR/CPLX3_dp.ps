%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CPLX3)
} def

/sequence { (\
AGCUGUCCGCGAAACCUAGUGCUGAAGUAGGCGCGGACGUGCCCGGUGCCUGGCGCGUGGUAGCAGGCGCCCGGUGCCCCGGCCGGCGAAGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.003215908 ubox
2 40 0.212012194 ubox
2 42 0.270045936 ubox
2 83 0.016150052 ubox
2 87 0.673238878 ubox
3 9 0.003217706 ubox
3 39 0.223789618 ubox
3 41 0.270974552 ubox
3 82 0.016122678 ubox
3 86 0.673826643 ubox
3 91 0.062164511 ubox
4 39 0.470141887 ubox
4 81 0.014650594 ubox
4 85 0.622603495 ubox
4 88 0.013394989 ubox
4 90 0.059737543 ubox
5 38 0.976451318 ubox
5 80 0.004603766 ubox
5 84 0.129091996 ubox
5 87 0.015921351 ubox
5 93 0.029308373 ubox
6 37 0.995385431 ubox
6 86 0.013230851 ubox
6 92 0.029248656 ubox
7 36 0.999300802 ubox
7 82 0.016251437 ubox
7 91 0.028836138 ubox
8 35 0.999311568 ubox
8 81 0.016250116 ubox
8 88 0.029682021 ubox
9 20 0.003202880 ubox
9 22 0.006603426 ubox
9 34 0.999302502 ubox
9 40 0.006496517 ubox
9 42 0.006664143 ubox
9 80 0.012634915 ubox
9 87 0.030363585 ubox
10 19 0.004290399 ubox
10 21 0.006703795 ubox
10 33 0.999283892 ubox
10 39 0.007052589 ubox
10 41 0.006844591 ubox
10 86 0.030313790 ubox
10 88 0.007563065 ubox
11 20 0.006395075 ubox
11 32 0.995151119 ubox
11 38 0.007103992 ubox
11 40 0.006659446 ubox
11 87 0.007465506 ubox
14 20 0.011681213 ubox
14 28 0.021096017 ubox
15 19 0.011872868 ubox
15 27 0.022280857 ubox
15 31 0.989137542 ubox
15 36 0.022591922 ubox
16 27 0.113159669 ubox
16 30 0.990004082 ubox
16 31 0.027760756 ubox
16 35 0.022555982 ubox
16 36 0.016806117 ubox
17 24 0.011047211 ubox
17 26 0.113059765 ubox
17 29 0.984767139 ubox
17 30 0.026501078 ubox
17 35 0.014956980 ubox
18 23 0.013461647 ubox
18 28 0.962577537 ubox
19 28 0.038714020 ubox
19 34 0.034730561 ubox
20 27 0.255660934 ubox
20 29 0.102518902 ubox
20 33 0.034980206 ubox
21 28 0.178061781 ubox
21 32 0.043591869 ubox
22 27 0.195907117 ubox
22 30 0.006908124 ubox
22 31 0.044952514 ubox
23 29 0.007396950 ubox
23 30 0.044197048 ubox
24 28 0.006677324 ubox
30 43 0.011199098 ubox
31 42 0.011263411 ubox
32 41 0.011290360 ubox
33 40 0.011275546 ubox
34 39 0.011266230 ubox
35 43 0.003718382 ubox
35 44 0.007766774 ubox
36 42 0.003726554 ubox
36 43 0.007756240 ubox
38 85 0.148414886 ubox
38 88 0.072380384 ubox
39 44 0.003669479 ubox
39 77 0.018192906 ubox
39 83 0.020572390 ubox
39 84 0.603360252 ubox
39 87 0.252776228 ubox
39 93 0.031231739 ubox
40 76 0.018219441 ubox
40 81 0.006392503 ubox
40 82 0.019472559 ubox
40 85 0.087360399 ubox
40 86 0.239855110 ubox
40 88 0.146143625 ubox
40 92 0.030477348 ubox
41 75 0.027196243 ubox
41 77 0.004023574 ubox
41 80 0.009031588 ubox
41 83 0.928214533 ubox
41 84 0.117647251 ubox
41 87 0.200129475 ubox
42 74 0.028424768 ubox
42 76 0.004038601 ubox
42 82 0.931161561 ubox
42 86 0.195955144 ubox
43 73 0.028645942 ubox
43 74 0.031212251 ubox
43 81 0.928286707 ubox
43 82 0.256517118 ubox
43 85 0.157450771 ubox
43 86 0.112637053 ubox
44 73 0.031390836 ubox
44 81 0.285712757 ubox
44 85 0.120602677 ubox
44 88 0.005328118 ubox
45 71 0.035862905 ubox
45 72 0.025709272 ubox
45 78 0.917247895 ubox
45 79 0.269437608 ubox
45 80 0.256130584 ubox
45 84 0.124517026 ubox
45 94 0.011073924 ubox
46 70 0.040491745 ubox
46 71 0.018268614 ubox
46 77 0.937820888 ubox
46 78 0.204969014 ubox
46 79 0.246326231 ubox
46 83 0.123833533 ubox
46 93 0.011150746 ubox
47 69 0.044330813 ubox
47 76 0.956347973 ubox
47 81 0.009957711 ubox
47 82 0.121822403 ubox
47 92 0.010816947 ubox
48 68 0.044447910 ubox
48 75 0.973326058 ubox
48 77 0.214650423 ubox
48 80 0.008993795 ubox
48 87 0.003589689 ubox
49 67 0.044449937 ubox
49 74 0.975599990 ubox
49 76 0.214301578 ubox
49 86 0.003584064 ubox
50 66 0.044449104 ubox
50 73 0.974982976 ubox
50 74 0.213113720 ubox
50 85 0.003471308 ubox
51 65 0.043969255 ubox
51 73 0.211804102 ubox
52 64 0.037995764 ubox
52 71 0.982571145 ubox
52 72 0.176223802 ubox
52 78 0.005472963 ubox
53 61 0.014250973 ubox
53 64 0.022508641 ubox
53 70 0.991046219 ubox
53 71 0.125682176 ubox
53 77 0.005496228 ubox
54 60 0.014851805 ubox
54 63 0.031184444 ubox
54 69 0.998703205 ubox
54 76 0.005511596 ubox
55 61 0.025688324 ubox
55 64 0.004642309 ubox
55 68 0.998709681 ubox
55 70 0.022886485 ubox
55 75 0.005498101 ubox
56 60 0.025708801 ubox
56 63 0.005221866 ubox
56 67 0.998550975 ubox
56 69 0.022888438 ubox
56 74 0.005433537 ubox
57 64 0.016228132 ubox
57 68 0.022882323 ubox
58 63 0.016066365 ubox
58 65 0.996609633 ubox
58 67 0.022683739 ubox
59 64 0.997016270 ubox
59 71 0.004747754 ubox
60 70 0.004747604 ubox
61 69 0.004670089 ubox
71 82 0.003321936 ubox
71 86 0.005142938 ubox
72 81 0.012215062 ubox
72 85 0.010957369 ubox
73 80 0.012408367 ubox
73 84 0.011958450 ubox
73 94 0.003715783 ubox
74 79 0.012315603 ubox
74 83 0.011960564 ubox
74 93 0.003781244 ubox
75 82 0.011851772 ubox
75 88 0.025256812 ubox
75 92 0.003367707 ubox
76 80 0.003186312 ubox
76 87 0.041454854 ubox
77 86 0.041460225 ubox
78 85 0.041374919 ubox
78 86 0.005089131 ubox
79 85 0.008164713 ubox
79 86 0.068627706 ubox
80 85 0.069166268 ubox
80 88 0.103067720 ubox
81 87 0.103909499 ubox
81 94 0.017333743 ubox
82 93 0.017421451 ubox
85 94 0.307021651 ubox
86 93 0.308251868 ubox
2 87 0.9500000 lbox
3 86 0.9500000 lbox
4 85 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
41 83 0.9500000 lbox
42 82 0.9500000 lbox
43 81 0.9500000 lbox
45 78 0.9500000 lbox
46 77 0.9500000 lbox
47 76 0.9500000 lbox
48 75 0.9500000 lbox
49 74 0.9500000 lbox
50 73 0.9500000 lbox
52 71 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
56 67 0.9500000 lbox
58 65 0.9500000 lbox
59 64 0.9500000 lbox
showpage
end
%%EOF
