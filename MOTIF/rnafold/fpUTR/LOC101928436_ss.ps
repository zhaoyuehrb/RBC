%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCGCACGGCGGCGAGCGCUAUCUGGAGCUGACCGUGCGGCUCUUAAUCCCUGGCCUUGGGAAAGUGAAUUGGCCUGAAUAGCAAGGAGGAGAACUUGGGUGUGGAAAUACCGGAAUCUCACUCUAUUGCUCAGGCUGGAGUGCAGUGGCCACAAAGCGGGAGAUUGGCACGAGGGAUACCAACACCGGAAUAUGUG\
) } def
/len { sequence length } bind def

/coor [
[31.04809761 124.05616760]
[21.12841988 135.30783081]
[11.20874119 146.55949402]
[7.88635826 162.02792358]
[-6.33417225 166.45802307]
[-16.25385094 177.70970154]
[-26.17352867 188.96136475]
[-36.09320450 200.21302795]
[-46.01288223 211.46469116]
[-55.93256378 222.71635437]
[-65.85224152 233.96801758]
[-75.68324280 245.29725647]
[-85.42496490 256.70333862]
[-95.16668701 268.10943604]
[-104.90840149 279.51553345]
[-97.97616577 293.04373169]
[-96.75360870 308.19543457]
[-101.42718506 322.66006470]
[-111.28418732 334.23193359]
[-124.82150269 341.14636230]
[-139.97479248 342.34899902]
[-154.43328857 337.65640259]
[-165.99217224 327.78417969]
[-172.88879395 314.23779297]
[-174.07147217 299.08291626]
[-169.35986328 284.63061523]
[-159.47245789 273.08471680]
[-145.91699219 266.20593262]
[-130.76058960 265.04318237]
[-116.31449127 269.77380371]
[-106.57277679 258.36770630]
[-96.83105469 246.96162415]
[-87.08933258 235.55552673]
[-85.13404846 228.42121887]
[-77.10390472 224.04833984]
[-67.18422699 212.79667664]
[-57.26454926 201.54501343]
[-47.34487152 190.29335022]
[-37.42519379 179.04168701]
[-27.50551605 167.79002380]
[-17.58583832 156.53834534]
[-14.97297668 141.87471008]
[-0.04292461 136.63981628]
[9.87675381 125.38815308]
[19.79643059 114.13648987]
[94.97064209 80.20903778]
[98.70098877 65.68029022]
[102.43133545 51.15154266]
[106.16168976 36.62279510]
[109.89203644 22.09404945]
[113.62238312 7.56530142]
[109.56012726 -7.72550154]
[120.21949005 -18.12873459]
[123.94983673 -32.65748215]
[119.88758087 -47.94828415]
[130.54695129 -58.35151672]
[134.27729797 -72.88026428]
[130.21504211 -88.17106628]
[140.87440491 -98.57430267]
[144.60475159 -113.10305023]
[148.33509827 -127.63179779]
[151.95121765 -142.18939209]
[155.45291138 -156.77494812]
[144.42898560 -167.37779236]
[140.22013855 -181.97856140]
[143.86045837 -196.62828064]
[154.27513123 -207.41673279]
[168.59509277 -211.51606750]
[172.09677124 -226.10162354]
[161.58790588 -241.85644531]
[165.84980774 -259.98098755]
[181.72486877 -269.08383179]
[184.76667786 -283.77215576]
[187.80848694 -298.46051025]
[190.85029602 -313.14886475]
[193.89210510 -327.83718872]
[196.93391418 -342.52554321]
[199.97572327 -357.21386719]
[203.01753235 -371.90222168]
[206.05934143 -386.59057617]
[204.41218567 -391.56253052]
[204.80364990 -396.20324707]
[206.76445007 -399.78988647]
[209.60595703 -401.89169312]
[213.33630371 -416.42044067]
[217.06665039 -430.94918823]
[220.79701233 -445.47793579]
[224.41313171 -460.03555298]
[227.91481018 -474.62109375]
[231.41648865 -489.20663452]
[234.91816711 -503.79220581]
[238.30519104 -518.40478516]
[241.57734680 -533.04351807]
[244.84948730 -547.68231201]
[248.12164307 -562.32104492]
[241.88027954 -573.61523438]
[244.91316223 -585.74493408]
[255.06370544 -592.33496094]
[258.56539917 -606.92047119]
[254.26345825 -622.14562988]
[264.75808716 -632.71496582]
[268.25976562 -647.30053711]
[271.76147461 -661.88610840]
[275.26315308 -676.47161865]
[278.76483154 -691.05718994]
[273.59094238 -706.61877441]
[284.68157959 -718.69891357]
[300.62759399 -714.87060547]
[305.02514648 -699.07208252]
[293.35037231 -687.55548096]
[289.84869385 -672.96997070]
[286.34701538 -658.38439941]
[282.84533691 -643.79882812]
[279.34365845 -629.21331787]
[283.89605713 -615.03143311]
[273.15093994 -603.41882324]
[269.64926147 -588.83325195]
[275.53558350 -572.30499268]
[262.76037598 -559.04888916]
[259.48825073 -544.41015625]
[256.21609497 -529.77142334]
[252.94393921 -515.13262939]
[254.55429077 -507.91265869]
[249.50372314 -500.29049683]
[246.00204468 -485.70495605]
[242.50036621 -471.11941528]
[238.99868774 -456.53387451]
[240.49542236 -449.28945923]
[235.32575989 -441.74758911]
[231.59539795 -427.21884155]
[227.86505127 -412.69009399]
[224.13470459 -398.16134644]
[220.74769592 -383.54876709]
[217.70588684 -368.86041260]
[214.66407776 -354.17205811]
[211.62225342 -339.48373413]
[208.58044434 -324.79537964]
[205.53863525 -310.10705566]
[202.49682617 -295.41870117]
[199.45501709 -280.73034668]
[196.41320801 -266.04202271]
[204.60144043 -258.08227539]
[207.96136475 -247.04287720]
[205.54629517 -235.63641357]
[197.84378052 -226.72451782]
[186.68231201 -222.59994507]
[183.18063354 -208.01438904]
[194.07875061 -197.86073303]
[198.46043396 -183.51998901]
[195.05314636 -168.81431580]
[184.67442322 -157.71572876]
[170.03845215 -153.27325439]
[166.53677368 -138.68771362]
[168.03350830 -131.44331360]
[162.86384583 -123.90144348]
[159.13349915 -109.37270355]
[155.40315247 -94.84395599]
[159.73222351 -80.59234619]
[148.80604553 -69.14991760]
[145.07569885 -54.62117004]
[149.40476990 -40.36956024]
[138.47859192 -28.92713356]
[134.74824524 -14.39838600]
[139.07731628 -0.14677639]
[128.15113831 11.29564953]
[124.42078400 25.82439804]
[120.69043732 40.35314560]
[116.96008301 54.88189316]
[113.22973633 69.41063690]
[109.49938965 83.93938446]
[120.95358276 74.25426483]
[135.82963562 76.17854309]
[144.44244385 88.45941162]
[141.18458557 103.10134888]
[128.17710876 110.57165527]
[113.88892365 106.00705719]
[122.89522552 118.00232697]
[138.18359375 123.93511200]
[140.42208862 140.18077087]
[127.30793762 150.02714539]
[112.33185577 143.34513855]
[110.89995575 127.00862885]
[101.89365387 115.01335907]
[95.10745239 118.20670319]
[81.53504181 124.59339142]
[74.74884033 127.78673553]
[78.25051880 142.37228394]
[81.75220490 156.95783997]
[96.13910675 162.77133179]
[104.33269501 175.94876099]
[103.18238068 191.42312622]
[93.13047028 203.24424744]
[78.04212952 206.86663818]
[63.71914291 200.89741516]
[55.66897964 187.63188171]
[56.98709869 172.17088318]
[67.16664886 160.45951843]
[63.66497040 145.87396240]
[60.16329193 131.28842163]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[10 36]
[11 35]
[12 33]
[13 32]
[14 31]
[15 30]
[46 170]
[47 169]
[48 168]
[49 167]
[50 166]
[51 165]
[53 163]
[54 162]
[56 160]
[57 159]
[59 157]
[60 156]
[61 155]
[62 153]
[63 152]
[68 147]
[69 146]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[79 134]
[80 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 127]
[89 126]
[90 125]
[91 124]
[92 122]
[93 121]
[94 120]
[95 119]
[98 117]
[99 116]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[176 183]
[177 182]
[186 199]
[187 198]
[188 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
