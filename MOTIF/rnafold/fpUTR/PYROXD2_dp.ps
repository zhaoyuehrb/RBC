%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PYROXD2)
} def

/sequence { (\
CUCCCUGCUCCACCCCGUGCCUAGGGCAGCACAAAAGCCAAUCGCUAGCAAACUCCCUGCCUAGCAAGGCCCAGCCUGGGGCAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.003621697 ubox
1 84 0.012731881 ubox
2 28 0.003731762 ubox
2 81 0.006112183 ubox
2 83 0.011799903 ubox
2 85 0.051762133 ubox
3 26 0.004894329 ubox
3 80 0.008254011 ubox
3 81 0.011238140 ubox
3 84 0.043886763 ubox
4 25 0.005060663 ubox
4 79 0.008269834 ubox
4 80 0.011249879 ubox
5 24 0.005067290 ubox
5 29 0.006666810 ubox
5 78 0.008260126 ubox
5 79 0.011226174 ubox
5 84 0.991710248 ubox
6 23 0.004980546 ubox
6 28 0.007660035 ubox
6 31 0.007791785 ubox
6 78 0.009943713 ubox
6 83 0.995547096 ubox
7 11 0.003321119 ubox
7 22 0.004209063 ubox
7 27 0.008228692 ubox
7 30 0.010279618 ubox
7 38 0.004439466 ubox
7 75 0.008163304 ubox
7 82 0.996466414 ubox
8 26 0.008214833 ubox
8 29 0.010284354 ubox
8 37 0.004491599 ubox
8 74 0.008181816 ubox
8 81 0.994790125 ubox
8 84 0.020222745 ubox
9 25 0.007802157 ubox
9 28 0.010065653 ubox
9 36 0.004332946 ubox
9 73 0.007876285 ubox
9 80 0.991597578 ubox
9 81 0.003428069 ubox
9 83 0.020078699 ubox
9 85 0.067416780 ubox
10 24 0.007768020 ubox
10 79 0.992028021 ubox
10 80 0.028336478 ubox
10 84 0.070762963 ubox
11 19 0.011340765 ubox
11 78 0.991293647 ubox
11 79 0.028002066 ubox
12 18 0.050392321 ubox
12 77 0.568288792 ubox
13 17 0.062217278 ubox
13 25 0.017709530 ubox
13 26 0.328053898 ubox
13 69 0.031227984 ubox
13 79 0.006575635 ubox
13 80 0.018751771 ubox
13 81 0.099959180 ubox
14 24 0.019639184 ubox
14 25 0.328549054 ubox
14 26 0.450094646 ubox
14 68 0.031156636 ubox
14 69 0.015935340 ubox
14 78 0.007022714 ubox
14 79 0.018945298 ubox
14 80 0.117944273 ubox
15 24 0.327647554 ubox
15 25 0.455565474 ubox
15 26 0.050370980 ubox
15 68 0.015773562 ubox
15 69 0.059658860 ubox
15 78 0.018546654 ubox
15 79 0.119139593 ubox
16 24 0.457715932 ubox
16 25 0.050916322 ubox
16 68 0.059984819 ubox
16 78 0.119382152 ubox
17 27 0.011871747 ubox
17 30 0.144083716 ubox
17 32 0.366482159 ubox
17 38 0.006822798 ubox
17 42 0.003528351 ubox
17 43 0.010285693 ubox
17 45 0.003499194 ubox
17 53 0.004052429 ubox
17 65 0.018617230 ubox
17 70 0.005885909 ubox
17 75 0.063106858 ubox
17 77 0.112287711 ubox
18 26 0.011726672 ubox
18 28 0.507315113 ubox
18 29 0.084466449 ubox
18 31 0.366312791 ubox
18 37 0.005530479 ubox
18 41 0.003355716 ubox
18 44 0.003542008 ubox
18 50 0.008322807 ubox
18 52 0.003766422 ubox
18 64 0.018095195 ubox
18 66 0.166311920 ubox
18 69 0.005286319 ubox
18 73 0.021367051 ubox
18 74 0.061945326 ubox
19 27 0.568773204 ubox
19 30 0.365839289 ubox
19 43 0.012727268 ubox
19 45 0.005741066 ubox
19 49 0.009371733 ubox
19 60 0.009257263 ubox
19 65 0.183217332 ubox
19 70 0.392115572 ubox
19 72 0.010897574 ubox
19 75 0.140851058 ubox
19 82 0.003309229 ubox
20 26 0.569057835 ubox
20 29 0.362696146 ubox
20 44 0.005844854 ubox
20 48 0.006762588 ubox
20 59 0.009176708 ubox
20 64 0.158877150 ubox
20 69 0.392798803 ubox
20 74 0.131671697 ubox
20 81 0.003304569 ubox
21 25 0.565067524 ubox
21 29 0.045049168 ubox
21 48 0.007656633 ubox
21 64 0.095920180 ubox
21 68 0.392612513 ubox
21 74 0.059972242 ubox
21 80 0.003298748 ubox
22 28 0.061770418 ubox
22 47 0.010058517 ubox
22 59 0.037135253 ubox
22 63 0.133270037 ubox
22 67 0.377656547 ubox
22 73 0.077951605 ubox
23 46 0.010089797 ubox
23 58 0.057365912 ubox
23 62 0.123425073 ubox
24 39 0.042319445 ubox
24 43 0.054765635 ubox
24 45 0.010074112 ubox
24 57 0.060681666 ubox
24 58 0.004075059 ubox
24 61 0.101256331 ubox
24 62 0.212439628 ubox
24 72 0.145976974 ubox
24 77 0.006661528 ubox
25 38 0.038331024 ubox
25 39 0.359418618 ubox
25 42 0.047414771 ubox
25 43 0.017807471 ubox
25 56 0.060721147 ubox
25 57 0.005301103 ubox
25 60 0.072256391 ubox
25 61 0.229841883 ubox
25 71 0.146068236 ubox
25 76 0.009033609 ubox
26 38 0.361453328 ubox
26 42 0.016211408 ubox
26 49 0.013031972 ubox
26 55 0.060688284 ubox
26 56 0.006066416 ubox
26 60 0.240483659 ubox
26 65 0.003691490 ubox
26 70 0.146045236 ubox
26 75 0.009184907 ubox
27 37 0.361957806 ubox
27 48 0.013364210 ubox
27 59 0.250647407 ubox
27 64 0.003692874 ubox
27 69 0.145845329 ubox
27 74 0.009235626 ubox
27 78 0.004214920 ubox
28 46 0.016043316 ubox
28 54 0.059531101 ubox
28 58 0.250275118 ubox
28 77 0.007204476 ubox
29 38 0.756828653 ubox
29 45 0.017010732 ubox
29 49 0.018201406 ubox
29 53 0.060206222 ubox
29 57 0.248316513 ubox
29 65 0.008164641 ubox
29 75 0.050204208 ubox
29 76 0.007920478 ubox
30 37 0.757967432 ubox
30 44 0.017156042 ubox
30 48 0.019830347 ubox
30 64 0.008161838 ubox
30 74 0.050401550 ubox
36 46 0.168807050 ubox
36 54 0.006398419 ubox
37 45 0.175839319 ubox
37 49 0.187587727 ubox
37 53 0.006498723 ubox
37 70 0.182636280 ubox
37 75 0.005611685 ubox
37 82 0.003413319 ubox
38 44 0.175668373 ubox
38 48 0.187584401 ubox
38 69 0.183080514 ubox
38 74 0.005625404 ubox
38 81 0.003413601 ubox
39 68 0.183167002 ubox
39 80 0.003398146 ubox
42 69 0.005271036 ubox
43 68 0.016529546 ubox
44 60 0.005767271 ubox
44 65 0.963972679 ubox
45 59 0.005717914 ubox
45 64 0.964989717 ubox
46 63 0.964523509 ubox
47 54 0.040348367 ubox
47 58 0.008217978 ubox
47 62 0.961171409 ubox
48 53 0.043213349 ubox
48 57 0.009081433 ubox
48 60 0.680836353 ubox
48 61 0.684075671 ubox
48 65 0.006798031 ubox
48 75 0.008297994 ubox
49 59 0.958992206 ubox
49 64 0.006797290 ubox
49 74 0.008326717 ubox
50 58 0.919633986 ubox
53 74 0.006147521 ubox
54 73 0.006058397 ubox
55 69 0.008101580 ubox
56 68 0.008383172 ubox
56 69 0.007267093 ubox
57 68 0.007641185 ubox
57 74 0.007228035 ubox
57 84 0.008813739 ubox
58 66 0.027917537 ubox
58 67 0.006026163 ubox
58 73 0.006893756 ubox
58 83 0.008849332 ubox
59 65 0.037017170 ubox
59 70 0.025211359 ubox
59 72 0.003230133 ubox
59 82 0.008858277 ubox
60 64 0.036772909 ubox
60 69 0.025617309 ubox
60 81 0.008841682 ubox
61 68 0.025704174 ubox
61 80 0.008821469 ubox
62 67 0.024487686 ubox
62 79 0.007975422 ubox
64 75 0.003586887 ubox
65 74 0.003663675 ubox
65 78 0.007450945 ubox
66 77 0.028030090 ubox
67 77 0.777750723 ubox
68 76 0.884970298 ubox
68 77 0.004254141 ubox
69 75 0.885439517 ubox
69 76 0.005327159 ubox
69 82 0.005140360 ubox
70 74 0.879007766 ubox
70 80 0.005297730 ubox
70 81 0.005146261 ubox
71 79 0.006643446 ubox
71 80 0.005214276 ubox
72 78 0.006952403 ubox
72 79 0.005200887 ubox
73 77 0.005975496 ubox
5 84 0.9500000 lbox
6 83 0.9500000 lbox
7 82 0.9500000 lbox
8 81 0.9500000 lbox
9 80 0.9500000 lbox
10 79 0.9500000 lbox
11 78 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
21 25 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
67 77 0.9500000 lbox
68 76 0.9500000 lbox
69 75 0.9500000 lbox
70 74 0.9500000 lbox
showpage
end
%%EOF
