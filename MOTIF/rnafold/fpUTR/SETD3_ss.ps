%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGUUGGGCCGCGGUCGCGGGGCCGUCUCAGGCUGCCGUCCCGCCCCUCCCGUCCGGCCGCCGCCGCCGCCACCGCCGCCACCGCCUGGGGGUUGGUUGAGGCGGACGGCGGGGUCCGGGCCGGAGUACGUCGUUCCCGCUGCGCUAGGGGAAGCGGGCAGUCAGAAAA\
) } def
/len { sequence length } bind def

/coor [
[57.07982635 296.75659180]
[53.66512299 304.42312622]
[48.54662323 311.05429077]
[42.01961136 316.27969360]
[34.45777130 319.80975342]
[26.29178047 321.45162964]
[17.98478508 321.11984253]
[10.00613976 318.84060669]
[1.45901859 331.16726685]
[-7.08810234 343.49392700]
[-15.63522339 355.82058716]
[-17.14033127 371.57003784]
[-30.75077438 377.62026978]
[-39.29789734 389.94692993]
[-40.11215210 406.32583618]
[-54.82534409 413.56835938]
[-68.30179596 404.22399902]
[-66.67809296 387.90542603]
[-51.62456131 381.39981079]
[-43.07744217 369.07315063]
[-42.18368149 354.20538330]
[-27.96189117 347.27346802]
[-19.41477013 334.94680786]
[-10.86764908 322.62014771]
[-2.32052779 310.29348755]
[-11.62291813 290.30410767]
[-7.08801126 268.59921265]
[9.62821102 253.84022522]
[31.97832298 252.00869751]
[38.62809753 238.56324768]
[37.33488846 223.72488403]
[50.38819504 214.78498840]
[57.03797150 201.33952332]
[63.68774414 187.89405823]
[70.33751678 174.44859314]
[76.98728943 161.00312805]
[83.63706207 147.55766296]
[90.28683472 134.11219788]
[81.85518646 129.85859680]
[74.96510315 123.60858154]
[70.06362152 115.86898041]
[67.44129181 107.23883057]
[67.21572113 98.36328125]
[69.32819366 89.88542938]
[73.55326843 82.39971924]
[79.52022552 76.41032410]
[86.74456024 72.29728699]
[94.66674805 70.29284668]
[95.76806641 55.33332825]
[96.86939240 40.37381363]
[97.97071075 25.41429710]
[91.26752472 11.08328915]
[99.91839600 -1.04154873]
[101.01971436 -16.00106430]
[102.12103271 -30.96057892]
[103.22235870 -45.92009354]
[104.32367706 -60.87960815]
[105.42500305 -75.83912659]
[106.38886261 -90.80812836]
[107.21517944 -105.78534698]
[104.55579376 -114.56480408]
[108.19674683 -121.02935028]
[109.29806519 -135.98886108]
[110.39938354 -150.94837952]
[111.50070953 -165.90789795]
[112.60202789 -180.86741638]
[113.70335388 -195.82693481]
[114.66721344 -210.79592896]
[115.49352264 -225.77314758]
[116.31983948 -240.75038147]
[117.14615631 -255.72760010]
[117.97247314 -270.70483398]
[118.38578796 -285.69912720]
[118.38578796 -300.69912720]
[118.38578796 -315.69912720]
[118.38578796 -330.69912720]
[118.24800110 -345.69848633]
[117.97244263 -360.69595337]
[109.98292542 -374.35165405]
[117.48510742 -387.21893311]
[117.20954895 -402.21640015]
[116.93398285 -417.21386719]
[106.42771149 -429.33813477]
[109.49783325 -445.08468628]
[123.78921509 -452.37411499]
[138.33872986 -445.61459351]
[141.98524475 -429.99145508]
[131.93145752 -417.48944092]
[132.20701599 -402.49197388]
[132.48257446 -387.49447632]
[140.45237732 -374.91149902]
[132.96990967 -360.97152710]
[133.24546814 -345.97406006]
[136.52478027 -339.31875610]
[133.38578796 -330.69912720]
[133.38578796 -315.69912720]
[133.38578796 -300.69912720]
[133.38578796 -285.69912720]
[135.64244080 -282.94329834]
[136.65599060 -278.94467163]
[135.85121155 -274.30902100]
[132.94969177 -269.87850952]
[132.12338257 -254.90127563]
[131.29705811 -239.92405701]
[130.47074890 -224.94683838]
[129.64443970 -209.96961975]
[132.42623901 -203.09149170]
[128.66287231 -194.72560120]
[127.56154633 -179.76609802]
[126.46022034 -164.80657959]
[125.35890198 -149.84706116]
[124.25758362 -134.88754272]
[123.15625763 -119.92803192]
[122.19239807 -104.95903015]
[121.36608124 -89.98181152]
[124.14789581 -83.10369110]
[120.38451385 -74.73780060]
[119.28319550 -59.77828598]
[118.18186951 -44.81877136]
[117.08055115 -29.85925674]
[115.97923279 -14.89974213]
[114.87790680 0.05977255]
[121.65987396 13.32077694]
[112.93022919 26.51561928]
[111.82890320 41.47513580]
[110.72758484 56.43465042]
[109.62625885 71.39416504]
[126.66077423 82.40372467]
[133.59983826 102.67449951]
[126.13846588 123.97432709]
[138.84455872 131.94647217]
[151.55065918 139.91860962]
[158.19390869 140.54824829]
[162.80755615 143.94805908]
[164.56953430 148.42427063]
[176.97419739 156.85780334]
[189.37886047 165.29133606]
[201.78352356 173.72486877]
[214.18818665 182.15840149]
[223.08125305 184.40878296]
[226.74130249 190.86253357]
[238.98893738 199.52253723]
[251.23657227 208.18252563]
[267.66012573 212.39007568]
[268.16348267 229.33654785]
[252.01863098 234.51148987]
[242.57658386 220.43016052]
[230.32894897 211.77017212]
[218.08131409 203.11016846]
[205.75465393 194.56304932]
[193.34999084 186.12953186]
[180.94532776 177.69599915]
[168.54066467 169.26246643]
[156.13601685 160.82893372]
[143.57852173 152.62471008]
[130.87242126 144.65257263]
[118.16632080 136.68041992]
[103.73229980 140.76197815]
[97.08252716 154.20744324]
[90.43275452 167.65290833]
[83.78298187 181.09837341]
[77.13320923 194.54383850]
[70.48343658 207.98928833]
[63.83366013 221.43475342]
[64.65122986 237.23483276]
[52.07356262 245.21301270]
[45.42378998 258.65847778]
[51.33737946 264.72460938]
[55.64361572 272.00180054]
[58.10546112 280.07479858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 25]
[9 24]
[10 23]
[11 22]
[13 20]
[14 19]
[29 167]
[30 166]
[32 164]
[33 163]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[48 127]
[49 126]
[50 125]
[51 124]
[53 122]
[54 121]
[55 120]
[56 119]
[57 118]
[58 117]
[59 115]
[60 114]
[62 113]
[63 112]
[64 111]
[65 110]
[66 109]
[67 108]
[68 106]
[69 105]
[70 104]
[71 103]
[72 102]
[73 98]
[74 97]
[75 96]
[76 95]
[77 93]
[78 92]
[80 90]
[81 89]
[82 88]
[130 157]
[131 156]
[132 155]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[141 149]
[142 148]
[143 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
