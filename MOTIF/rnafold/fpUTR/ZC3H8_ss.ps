%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCUGGCGCGGCUCUGGGUCCGUCUCGUCGCGUCCGGGUUGUCACUCUCUCGGGUUGUUACUCUGUAGCUUCCCGGCUCGCGAAAGGGAGGACCUGUCUGGGUC\
) } def
/len { sequence length } bind def

/coor [
[53.79406738 378.24957275]
[53.79406738 363.24957275]
[53.79406738 348.24957275]
[53.79406738 333.24957275]
[53.79406738 318.24957275]
[46.05676651 305.52227783]
[53.79406738 291.72210693]
[53.79406738 276.72210693]
[53.79406738 261.72210693]
[42.97237778 272.10919189]
[28.14447784 274.37487793]
[14.71471882 267.69345093]
[7.57786608 254.50006104]
[9.33509922 239.60334778]
[19.34595680 228.43272400]
[33.96176529 225.05958557]
[47.85547638 230.71331787]
[55.96354675 243.33447266]
[59.45452118 228.74635315]
[62.94549561 214.15824890]
[66.43647003 199.57012939]
[69.92744446 184.98200989]
[73.41841125 170.39390564]
[71.89012146 163.04057312]
[77.23193359 155.43185425]
[81.14965820 140.95249939]
[85.06738281 126.47315979]
[88.98510742 111.99381256]
[84.22016144 95.97804260]
[96.06993866 84.19702148]
[99.56091309 69.60890961]
[103.05187988 55.02079010]
[106.54285431 40.43267822]
[110.03382874 25.84456062]
[104.34120941 8.40983391]
[116.72547913 -3.92792797]
[119.78668976 -18.61223793]
[122.84790039 -33.29654694]
[125.90911865 -47.98085785]
[128.97033691 -62.66516876]
[120.57712555 -75.78735352]
[123.89080811 -90.63572693]
[136.45252991 -98.55650330]
[139.51374817 -113.24081421]
[134.75564575 -128.32957458]
[144.92749023 -139.20996094]
[147.98870850 -153.89427185]
[142.25617981 -159.37019348]
[138.89614868 -166.47425842]
[138.31021118 -174.24174500]
[140.52687073 -181.63719177]
[145.20431519 -187.69247437]
[151.68208313 -191.63348389]
[159.07400513 -192.97897339]
[164.25025940 -207.05755615]
[169.42651367 -221.13612366]
[174.60276794 -235.21470642]
[171.27615356 -251.27290344]
[183.69798279 -261.97943115]
[199.08976746 -256.32037354]
[201.61773682 -240.11723328]
[188.68135071 -230.03845215]
[183.50509644 -215.95986938]
[178.32884216 -201.88130188]
[173.15257263 -187.80271912]
[179.81994629 -166.38240051]
[162.67301941 -150.83305359]
[159.61180115 -136.14874268]
[164.58886719 -122.11029816]
[154.19805908 -110.17959595]
[151.13684082 -95.49528503]
[159.48728943 -83.21498871]
[156.59196472 -68.27940369]
[143.65464783 -59.60395432]
[140.59342957 -44.91964722]
[137.53221130 -30.23533440]
[134.47099304 -15.55102444]
[131.40979004 -0.86671442]
[137.80133057 9.51962852]
[135.25820923 21.85863304]
[124.62194824 29.33553505]
[121.13097382 43.92364883]
[117.63999939 58.51176453]
[114.14902496 73.09988403]
[110.65805054 87.68799591]
[116.16842651 98.06055450]
[113.26751709 109.44206238]
[103.46444702 115.91153717]
[99.54672241 130.39088440]
[95.62900543 144.87022400]
[91.71128082 159.34957886]
[88.00653076 173.88487244]
[84.51555634 188.47299194]
[81.02458191 203.06109619]
[77.53360748 217.64921570]
[74.04263306 232.23733521]
[70.55165863 246.82545471]
[68.79406738 261.72210693]
[68.79406738 276.72210693]
[68.79406738 291.72210693]
[76.53137207 305.52227783]
[68.79406738 318.24957275]
[68.79406738 333.24957275]
[68.79406738 348.24957275]
[68.79406738 363.24957275]
[68.79406738 378.24957275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 106]
[2 105]
[3 104]
[4 103]
[5 102]
[7 100]
[8 99]
[9 98]
[18 97]
[19 96]
[20 95]
[21 94]
[22 93]
[23 92]
[25 91]
[26 90]
[27 89]
[28 88]
[30 85]
[31 84]
[32 83]
[33 82]
[34 81]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[43 71]
[44 70]
[46 68]
[47 67]
[54 65]
[55 64]
[56 63]
[57 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
