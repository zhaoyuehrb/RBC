%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUAUCGUCCAGACCCUGAAUCCUCCGGCUGUACUGCCAAGUCAUUUCCUAGGGCCGCACUCAAGGUGUCAGACUCACGUGGGCUCAUCACUGCGUCCUCUCAUAUUUUCAAUAUGAAUGACUUUUAUCAGGAAAUCUGAAAAUUAGUGAAAGGUUCAUUUUUCUCAGCAUCCGGAAGGCUCGAAGGGCAGGCAGGAGGGGCGCGAACAGGGGCUUUGCCCUCCUGGAGAGACAGCAUGAACACAG\
) } def
/len { sequence length } bind def

/coor [
[-97.49187469 235.79202271]
[-103.86277771 238.13708496]
[-110.54315186 239.29728699]
[-117.31483459 239.23780823]
[-123.95724487 237.96362305]
[-130.25454712 235.51921082]
[-136.00268555 231.98704529]
[-141.01599121 227.48475647]
[-145.13313293 222.16130066]
[-159.10609436 227.61624146]
[-173.07905579 233.07118225]
[-187.05201721 238.52612305]
[-201.02497864 243.98106384]
[-214.89221191 249.69944763]
[-228.64874268 255.67924500]
[-234.51580811 270.10891724]
[-248.55207825 275.97729492]
[-262.27239990 270.29501343]
[-276.02893066 276.27481079]
[-289.78546143 282.25460815]
[-303.54199219 288.23437500]
[-309.40905762 302.66406250]
[-323.44531250 308.53244019]
[-337.16564941 302.85015869]
[-350.92218018 308.82995605]
[-364.67871094 314.80975342]
[-370.54577637 329.23941040]
[-384.58203125 335.10778809]
[-398.30236816 329.42553711]
[-412.05889893 335.40530396]
[-418.66137695 341.68078613]
[-426.02688599 341.37255859]
[-439.85778809 347.17831421]
[-453.68865967 352.98406982]
[-457.20220947 363.24487305]
[-465.60098267 369.75503540]
[-475.97662354 370.56463623]
[-484.89935303 365.64739990]
[-498.87231445 371.10235596]
[-512.84527588 376.55728149]
[-524.03094482 391.19912720]
[-541.26770020 387.84786987]
[-555.17071533 393.47866821]
[-559.81799316 408.40972900]
[-573.00341797 416.81677246]
[-588.50122070 414.73031616]
[-598.99371338 403.13543701]
[-599.52679443 387.50695801]
[-589.84869385 375.22412109]
[-574.52911377 372.08651733]
[-560.80151367 379.57565308]
[-546.89843750 373.94485474]
[-541.90460205 362.94433594]
[-530.38818359 358.13186646]
[-518.30023193 362.58432007]
[-504.32723999 357.12939453]
[-490.35427856 351.67443848]
[-479.37786865 335.73843384]
[-459.49441528 339.15316772]
[-445.66354370 333.34744263]
[-431.83264160 327.54168701]
[-418.03866577 321.64877319]
[-404.28213501 315.66900635]
[-399.07772827 301.76037598]
[-385.21185303 295.50006104]
[-370.65847778 301.05322266]
[-356.90194702 295.07342529]
[-343.14541626 289.09362793]
[-337.94100952 275.18502808]
[-324.07513428 268.92468262]
[-309.52178955 274.47787476]
[-295.76525879 268.49807739]
[-282.00872803 262.51828003]
[-268.25219727 256.53848267]
[-263.04779053 242.62986755]
[-249.18188477 236.36955261]
[-234.62852478 241.92271423]
[-220.87199402 235.94291687]
[-219.24771118 232.83969116]
[-216.05238342 230.36032104]
[-211.59146118 229.22900391]
[-206.47991943 230.00810242]
[-192.50695801 224.55316162]
[-178.53399658 219.09822083]
[-164.56103516 213.64328003]
[-150.58807373 208.18833923]
[-147.11701965 184.68444824]
[-130.09030151 167.94432068]
[-106.29524994 164.84199524]
[-85.33909607 176.77452087]
[-72.34871674 169.27452087]
[-59.35833740 161.77452087]
[-55.14761734 155.72341919]
[-46.15641022 154.26303101]
[-33.07244110 146.92752075]
[-19.98847008 139.59201050]
[-6.95103359 132.17410278]
[6.03934717 124.67410278]
[19.02972794 117.17410278]
[31.97253799 109.59230042]
[44.86725998 101.92900848]
[57.76198578 94.26570892]
[62.86263657 80.15956879]
[57.85107422 66.02152252]
[52.83951187 51.88348007]
[47.82794952 37.74543762]
[42.81638718 23.60739517]
[37.80482483 9.46935368]
[32.79325867 -4.66868877]
[21.80244637 -17.57753563]
[31.16425133 -31.71234894]
[47.33827591 -26.62931442]
[46.93130112 -9.68025112]
[51.94286346 4.45779085]
[56.95442963 18.59583282]
[61.96599197 32.73387527]
[66.97755432 46.87191772]
[71.98911285 61.00996017]
[77.00067902 75.14800262]
[84.38397980 76.46588898]
[87.01998901 61.69932556]
[101.78651428 64.33556366]
[99.15058899 79.10166931]
[106.53388977 80.41956329]
[116.12729645 68.88845062]
[125.72069550 57.35733414]
[135.31410217 45.82621765]
[144.90750122 34.29510498]
[145.48751831 30.04826546]
[147.20429993 26.54895592]
[149.68762207 24.06067848]
[152.51995850 22.70131302]
[155.28742981 22.44022751]
[165.45031738 11.40774250]
[175.61320496 0.37525764]
[173.51506042 -12.91428566]
[179.36141968 -24.81554031]
[190.82118225 -31.09048843]
[203.61100769 -29.64875984]
[213.91227722 -40.55214691]
[224.21354675 -51.45553589]
[234.51481628 -62.35892105]
[229.82475281 -75.52282715]
[231.25180054 -89.35775757]
[238.46131897 -101.17425537]
[250.00019836 -108.69990540]
[263.58932495 -110.51625061]
[276.57376099 -106.32584381]
[287.01177979 -117.09839630]
[297.44979858 -127.87094879]
[307.88778687 -138.64349365]
[318.32580566 -149.41604614]
[328.76382446 -160.18859863]
[335.44345093 -175.77125549]
[352.26623535 -173.66636658]
[354.90060425 -156.91833496]
[339.53637695 -149.75059509]
[329.09835815 -138.97804260]
[318.66033936 -128.20549011]
[308.22235107 -117.43292999]
[297.78433228 -106.66037750]
[287.34631348 -95.88782501]
[292.15216064 -80.44812775]
[288.48785400 -64.60193634]
[277.26269531 -52.70274353]
[261.47647095 -48.06868362]
[245.41819763 -52.05765152]
[235.11692810 -41.15426254]
[224.81565857 -30.25087738]
[214.51438904 -19.34749031]
[215.70303345 -2.56054950]
[204.14627075 10.13396931]
[186.64569092 10.53814507]
[176.48280334 21.57062912]
[166.31991577 32.60311508]
[156.43861389 43.88850784]
[146.84521484 55.41962051]
[137.25181580 66.95073700]
[127.65840912 78.48184967]
[118.06500244 90.01296234]
[124.56108093 103.53335571]
[139.55839539 103.24949646]
[154.55570984 102.96563721]
[169.55302429 102.68177032]
[185.27490234 96.33677673]
[195.72418213 109.68775940]
[185.78759766 123.42459869]
[169.83688354 117.67908478]
[154.83956909 117.96295166]
[139.84225464 118.24681091]
[124.84494019 118.53067017]
[122.60845947 125.68945312]
[132.77136230 136.72192383]
[118.13549042 140.00701904]
[115.89900208 147.16578674]
[128.06755066 155.93658447]
[140.23608398 164.70736694]
[152.40461731 173.47814941]
[164.57316589 182.24893188]
[176.74169922 191.01971436]
[188.91024780 199.79049683]
[201.07878113 208.56127930]
[219.67190552 204.82777405]
[234.81431580 215.70483398]
[237.13143921 233.88174438]
[249.51739502 242.34271240]
[264.08380127 236.99488831]
[279.00244141 241.26269531]
[288.53674316 253.50509644]
[289.02062988 269.01461792]
[280.26800537 281.82754517]
[265.64440918 287.01705933]
[250.77297974 282.58764648]
[241.37202454 270.24252319]
[241.05642700 254.72866821]
[228.67047119 246.26770020]
[218.21064758 250.75080872]
[206.76586914 249.62751770]
[197.17973328 243.06106567]
[191.88975525 232.58132935]
[192.30799866 220.72981262]
[180.13946533 211.95903015]
[167.97091675 203.18824768]
[155.80238342 194.41746521]
[143.63383484 185.64668274]
[131.46530151 176.87590027]
[119.29676056 168.10511780]
[107.12821960 159.33433533]
[65.42527771 107.16043091]
[52.53055954 114.82373047]
[39.63583374 122.48703003]
[33.87549210 129.54344177]
[26.52972794 130.16448975]
[13.53934765 137.66448975]
[0.54896629 145.16448975]
[-5.29994488 152.14765930]
[-12.65295887 152.67597961]
[-25.73693085 160.01148987]
[-38.82089996 167.34700012]
[-51.85833740 174.76489258]
[-64.84871674 182.26489258]
[-77.83909607 189.76489258]
[-76.29052734 196.44396973]
[-75.96820068 203.28417969]
[-76.87958527 210.06256104]
[-78.99198151 216.55868530]
[-82.23370361 222.56185913]
[-86.49645996 227.87794495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 86]
[10 85]
[11 84]
[12 83]
[13 82]
[14 78]
[15 77]
[18 74]
[19 73]
[20 72]
[21 71]
[24 68]
[25 67]
[26 66]
[29 63]
[30 62]
[32 61]
[33 60]
[34 59]
[38 57]
[39 56]
[40 55]
[42 52]
[43 51]
[90 242]
[91 241]
[92 240]
[94 239]
[95 238]
[96 237]
[97 235]
[98 234]
[99 233]
[100 231]
[101 230]
[102 229]
[103 119]
[104 118]
[105 117]
[106 116]
[107 115]
[108 114]
[109 113]
[124 180]
[125 179]
[126 178]
[127 177]
[128 176]
[133 175]
[134 174]
[135 173]
[139 170]
[140 169]
[141 168]
[142 167]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[153 157]
[181 191]
[182 190]
[183 189]
[184 188]
[195 228]
[196 227]
[197 226]
[198 225]
[199 224]
[200 223]
[201 222]
[202 221]
[205 216]
[206 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
