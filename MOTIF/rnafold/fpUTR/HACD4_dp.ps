%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HACD4)
} def

/sequence { (\
UUCCGCGCCCAGCCGCGGGGCCGCCCCUGCCUCCUCCCCGGUACUCCUUCCUGGACCGCGCUGGAAGCCCUGGCGGCGGCGGCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.003714457 ubox
1 20 0.006456449 ubox
2 17 0.004107551 ubox
2 18 0.006912813 ubox
2 19 0.094178423 ubox
3 17 0.024344632 ubox
3 18 0.907251594 ubox
3 19 0.008128478 ubox
4 15 0.018589095 ubox
4 17 0.995608911 ubox
4 18 0.010673925 ubox
4 19 0.004687746 ubox
5 13 0.016532144 ubox
5 14 0.017931021 ubox
5 16 0.997528449 ubox
6 12 0.017619063 ubox
6 15 0.997467351 ubox
6 17 0.064085773 ubox
6 81 0.003636246 ubox
7 13 0.348265607 ubox
7 14 0.910480556 ubox
7 16 0.064888054 ubox
7 80 0.004098361 ubox
8 12 0.488646897 ubox
8 15 0.064789605 ubox
8 79 0.004063745 ubox
9 78 0.004005702 ubox
12 77 0.004509540 ubox
13 76 0.004526096 ubox
14 75 0.004526052 ubox
15 74 0.004519630 ubox
16 73 0.003412178 ubox
17 71 0.004231597 ubox
17 85 0.006214706 ubox
18 70 0.004522264 ubox
18 84 0.006564239 ubox
18 85 0.415405901 ubox
19 69 0.004527616 ubox
19 83 0.005502825 ubox
19 84 0.993129433 ubox
19 85 0.026340287 ubox
20 68 0.004532441 ubox
20 77 0.003642104 ubox
20 80 0.014843382 ubox
20 83 0.999613717 ubox
20 84 0.019321030 ubox
21 67 0.004532411 ubox
21 76 0.003650034 ubox
21 79 0.014872198 ubox
21 82 0.999867103 ubox
22 75 0.003651507 ubox
22 78 0.014880705 ubox
22 81 0.999850351 ubox
23 74 0.003653119 ubox
23 77 0.014905869 ubox
23 80 0.999852199 ubox
24 64 0.004290201 ubox
24 73 0.003651706 ubox
24 76 0.014910313 ubox
24 79 0.998890888 ubox
25 63 0.004281900 ubox
25 72 0.003644983 ubox
25 75 0.014911929 ubox
25 78 0.996930388 ubox
25 79 0.044051741 ubox
26 73 0.016115063 ubox
26 76 0.266240557 ubox
26 78 0.062277125 ubox
27 72 0.016115162 ubox
27 75 0.262448390 ubox
27 76 0.962476661 ubox
28 43 0.017274938 ubox
28 60 0.003801432 ubox
28 75 0.963360592 ubox
28 78 0.004226554 ubox
29 42 0.019183976 ubox
29 59 0.005894709 ubox
29 68 0.019076822 ubox
29 74 0.999159907 ubox
29 77 0.026524452 ubox
30 41 0.019304880 ubox
30 58 0.005887927 ubox
30 67 0.019099043 ubox
30 73 0.999204080 ubox
30 76 0.026541745 ubox
31 40 0.019305708 ubox
31 67 0.023746208 ubox
31 72 0.998297255 ubox
31 73 0.004063497 ubox
31 75 0.026379719 ubox
32 41 0.004150250 ubox
32 55 0.016832059 ubox
32 64 0.004494387 ubox
32 65 0.449921564 ubox
32 66 0.034873117 ubox
32 72 0.005157436 ubox
33 40 0.006094913 ubox
33 41 0.024511267 ubox
33 54 0.018058604 ubox
33 63 0.004574882 ubox
33 64 0.453488747 ubox
33 73 0.024044892 ubox
34 40 0.024902496 ubox
34 41 0.004913633 ubox
34 53 0.018050273 ubox
34 63 0.453210724 ubox
34 64 0.008406257 ubox
34 67 0.556418552 ubox
34 72 0.024045746 ubox
35 40 0.004529845 ubox
35 55 0.015676392 ubox
35 63 0.008278589 ubox
35 64 0.006227455 ubox
35 65 0.329244305 ubox
35 66 0.495640525 ubox
36 54 0.016355518 ubox
36 63 0.008483066 ubox
36 64 0.406089769 ubox
37 53 0.016054965 ubox
37 54 0.022443806 ubox
37 63 0.404815709 ubox
37 64 0.253284265 ubox
38 53 0.022695169 ubox
38 54 0.020192478 ubox
38 63 0.242015393 ubox
38 64 0.745835704 ubox
39 53 0.020246556 ubox
39 58 0.542224649 ubox
39 60 0.141972674 ubox
39 63 0.751279931 ubox
40 47 0.020273577 ubox
40 51 0.030801886 ubox
40 52 0.014959792 ubox
40 57 0.546473574 ubox
40 59 0.137150254 ubox
40 62 0.755659880 ubox
40 69 0.018049287 ubox
40 70 0.006806604 ubox
40 71 0.005052105 ubox
41 46 0.020401852 ubox
41 50 0.030902002 ubox
41 51 0.014718813 ubox
41 56 0.546337845 ubox
41 59 0.326693671 ubox
41 61 0.755108009 ubox
41 68 0.018082108 ubox
41 69 0.006804270 ubox
41 70 0.005076152 ubox
42 55 0.370959870 ubox
42 58 0.328419644 ubox
42 60 0.742084938 ubox
42 67 0.011781282 ubox
43 52 0.006501245 ubox
44 54 0.131889714 ubox
45 53 0.118319083 ubox
45 54 0.035084725 ubox
45 55 0.911199733 ubox
45 65 0.007389440 ubox
46 53 0.059336754 ubox
46 54 0.985430379 ubox
46 64 0.007614407 ubox
47 53 0.985421397 ubox
47 54 0.053032876 ubox
47 63 0.007610859 ubox
47 67 0.030318574 ubox
48 53 0.052331040 ubox
48 54 0.004801304 ubox
48 55 0.006300340 ubox
48 66 0.032512743 ubox
49 53 0.004187361 ubox
49 54 0.006191570 ubox
49 55 0.008247013 ubox
49 65 0.032828966 ubox
50 54 0.008558935 ubox
50 64 0.032804248 ubox
51 63 0.032710790 ubox
52 60 0.010503909 ubox
52 63 0.003518335 ubox
53 59 0.013373553 ubox
53 62 0.022026961 ubox
54 61 0.023412862 ubox
56 64 0.017234031 ubox
56 76 0.012312061 ubox
57 63 0.017312815 ubox
57 75 0.012402969 ubox
57 78 0.003439071 ubox
58 62 0.010699865 ubox
58 68 0.023292780 ubox
58 74 0.012567896 ubox
58 77 0.007136156 ubox
59 67 0.023466930 ubox
59 73 0.012541085 ubox
59 75 0.009857408 ubox
59 76 0.005058603 ubox
60 68 0.048205227 ubox
60 74 0.018876745 ubox
61 67 0.048290133 ubox
61 73 0.018901249 ubox
62 66 0.043505754 ubox
62 72 0.018577308 ubox
63 69 0.010730788 ubox
63 70 0.037164780 ubox
63 71 0.017437401 ubox
64 68 0.010620994 ubox
64 69 0.037154327 ubox
64 70 0.017621691 ubox
67 74 0.005866975 ubox
67 77 0.003758626 ubox
68 73 0.005860380 ubox
68 76 0.003761996 ubox
69 75 0.003752216 ubox
3 18 0.9500000 lbox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
19 84 0.9500000 lbox
20 83 0.9500000 lbox
21 82 0.9500000 lbox
22 81 0.9500000 lbox
23 80 0.9500000 lbox
24 79 0.9500000 lbox
25 78 0.9500000 lbox
27 76 0.9500000 lbox
28 75 0.9500000 lbox
29 74 0.9500000 lbox
30 73 0.9500000 lbox
31 72 0.9500000 lbox
38 64 0.9500000 lbox
39 63 0.9500000 lbox
40 62 0.9500000 lbox
41 61 0.9500000 lbox
42 60 0.9500000 lbox
45 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
showpage
end
%%EOF
