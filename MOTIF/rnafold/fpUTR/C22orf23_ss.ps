%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:16:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCGGGGAAAGUGCGCAUGCGCUGACUGGUGUGUGCGCGUUUCUAUAGUAGCGAGAGGCGCUAGCUGCCAGCUCCAGCAGCCCAGAUCGCGCAGUAUUUCUGCGUGGCACCGGUGCGGAUGCGGCUGUAAAGCAGUGGUCACCGCCUCCGGGAGCCCACUUCUAUGUGGAGAGGGGAGCACCCAGAGAGGGUCUUAGGAGUCCUCCC\
) } def
/len { sequence length } bind def

/coor [
[75.70300293 223.16322327]
[63.77846527 233.53535461]
[48.01836777 232.35429382]
[37.77289963 220.32075500]
[39.12051773 204.57403564]
[51.26169968 194.45635986]
[52.38264847 179.49830627]
[38.81981277 173.09132385]
[27.97789192 183.45726013]
[17.13596725 193.82319641]
[6.29404497 204.18913269]
[-4.54787779 214.55508423]
[-8.58845234 222.74812317]
[-15.63038254 224.99348450]
[-26.62615967 235.19607544]
[-37.62193680 245.39866638]
[-48.61771774 255.60125732]
[-59.61349487 265.80386353]
[-70.60927582 276.00643921]
[-81.60504913 286.20904541]
[-92.60083008 296.41162109]
[-103.59660339 306.61422729]
[-114.59238434 316.81680298]
[-125.58816528 327.01940918]
[-136.58393860 337.22198486]
[-140.89799500 353.04351807]
[-156.82359314 356.95596313]
[-167.97784424 344.93453979]
[-162.88621521 329.34585571]
[-146.78652954 326.22619629]
[-135.79075623 316.02362061]
[-124.79497528 305.82101440]
[-113.79919434 295.61843872]
[-102.80342102 285.41583252]
[-91.80764008 275.21325684]
[-80.81186676 265.01065063]
[-69.81608582 254.80807495]
[-58.82030869 244.60548401]
[-47.82452774 234.40289307]
[-36.82875061 224.20030212]
[-25.83297348 213.99771118]
[-14.91381741 203.71315002]
[-4.07189465 193.34721375]
[6.77002859 182.98127747]
[17.61195183 172.61534119]
[28.45387459 162.24938965]
[34.33937073 155.47067261]
[40.40556717 148.87763977]
[46.64828873 142.47410583]
[53.06328583 136.26376343]
[59.64624405 130.25027466]
[44.84888458 127.79301453]
[30.05152512 125.33574677]
[15.25416565 122.87847900]
[0.45680660 120.42120361]
[-13.37638569 128.54661560]
[-28.30170631 122.66322327]
[-32.86972427 107.28424835]
[-23.57625198 94.20713806]
[-7.55044079 93.46352386]
[2.91407537 105.62384796]
[17.71143341 108.08111572]
[32.50879288 110.53838348]
[47.30615234 112.99565125]
[62.10351181 115.45291901]
[68.10189056 101.70449066]
[56.23582458 92.52862549]
[44.36975861 83.35276031]
[32.50369644 74.17689514]
[20.63762856 65.00102997]
[5.78149748 69.48154449]
[-8.85982800 64.34235382]
[-17.65645790 51.55960083]
[-17.22591019 36.04849625]
[-7.73373890 23.77338982]
[7.17012358 19.45430183]
[21.75483704 24.75201416]
[30.41228104 37.62944794]
[29.81349373 53.13496399]
[41.67955780 62.31082916]
[53.54562378 71.48669434]
[65.41168976 80.66255951]
[77.27775574 89.83842468]
[83.68717194 85.94362640]
[75.89757538 73.12480164]
[68.10820007 60.30584717]
[80.92728424 52.51668167]
[88.71640015 65.33521271]
[96.50599670 78.15403748]
[102.91540527 74.25923920]
[100.23705292 59.50029755]
[97.55870056 44.74135208]
[94.88034821 29.98241043]
[92.20199585 15.22346592]
[89.52363586 0.46452242]
[86.84528351 -14.29442120]
[74.52977753 -24.57585526]
[75.03357697 -40.61099625]
[87.97019958 -50.09905624]
[103.41578674 -45.76160812]
[109.52179718 -30.92597008]
[101.60423279 -16.97277451]
[104.28258514 -2.21383095]
[106.96093750 12.54511261]
[109.63928986 27.30405617]
[112.31764221 42.06299973]
[114.99599457 56.82194519]
[117.67434692 71.58088684]
[131.86926270 76.42903137]
[143.01643372 66.39207458]
[148.29835510 48.75207138]
[165.59265137 45.77507401]
[176.58842468 35.57248306]
[187.58421326 25.36989212]
[198.57998657 15.16730118]
[203.59742737 -2.54974222]
[220.84526062 -5.78511810]
[231.68717957 -16.15105820]
[242.52911377 -26.51699829]
[253.37103271 -36.88293839]
[253.88917542 -52.45115280]
[265.03210449 -62.80924225]
[279.87081909 -62.21932602]
[290.71273804 -72.58526611]
[295.34048462 -87.71453094]
[309.88662720 -90.91738892]
[320.72854614 -101.28333282]
[331.57049561 -111.64926910]
[342.41241455 -122.01521301]
[353.25433350 -132.38114929]
[360.52438354 -147.69725037]
[377.25445557 -144.95123291]
[379.24710083 -128.11479187]
[363.62026978 -121.53923035]
[352.77835083 -111.17328644]
[341.93643188 -100.80735016]
[331.09451294 -90.44140625]
[320.25256348 -80.07546997]
[316.40032959 -65.68764496]
[301.07867432 -61.74334335]
[290.23675537 -51.37740326]
[290.16033936 -36.52715683]
[279.31274414 -25.86017418]
[263.73696899 -26.04101372]
[252.89505005 -15.67507458]
[242.05311584 -5.30913496]
[231.21119690 5.05680466]
[230.62622070 17.13969040]
[221.67779541 25.86447144]
[208.78257751 26.16308022]
[197.78680420 36.36566925]
[186.79101562 46.56826019]
[175.79524231 56.77085114]
[175.02958679 68.84363556]
[165.95162964 77.43357849]
[153.05339050 77.53924561]
[141.90621948 87.57620239]
[145.78849792 102.06509399]
[160.46072388 105.18376923]
[175.13293457 108.30244446]
[189.80514526 111.42111969]
[202.92156982 102.60437012]
[218.41436768 105.72663879]
[227.09194946 118.93554688]
[223.80606079 134.39447021]
[210.50614929 142.93191528]
[195.08282471 139.48275757]
[186.68647766 126.09333038]
[172.01425171 122.97465515]
[157.34204102 119.85597992]
[142.66983032 116.73730469]
[139.46633911 123.51872253]
[148.00862122 135.84873962]
[133.05935669 137.08155823]
[129.85585022 143.86297607]
[141.58332825 153.21533203]
[153.31080627 162.56767273]
[169.34980774 162.20747375]
[179.52055359 174.61454773]
[176.02091980 190.27124023]
[161.53550720 197.16708374]
[147.17630005 190.01217651]
[143.95845032 174.29515076]
[132.23098755 164.94279480]
[120.50350952 155.59045410]
[114.43588257 159.99884033]
[116.00411987 174.91664124]
[102.30062866 168.81561279]
[96.23300171 173.22401428]
[101.50362396 187.26753235]
[106.77424622 201.31105042]
[112.04486847 215.35458374]
[117.31549072 229.39810181]
[122.69100952 243.40180969]
[128.17112732 257.36489868]
[141.32287598 267.16101074]
[139.14659119 283.41510010]
[123.88106537 289.40640259]
[111.23014069 278.97152710]
[114.20801544 262.84503174]
[108.72790527 248.88192749]
[103.35756683 243.80354309]
[103.27196503 234.66871643]
[98.00134277 220.62519836]
[92.73072052 206.58168030]
[87.46009827 192.53814697]
[82.18947601 178.49462891]
[67.34070587 180.61926270]
[66.21975708 195.57731628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 209]
[7 208]
[8 46]
[9 45]
[10 44]
[11 43]
[12 42]
[14 41]
[15 40]
[16 39]
[17 38]
[18 37]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[25 30]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[66 83]
[67 82]
[68 81]
[69 80]
[70 79]
[90 108]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[109 157]
[110 156]
[112 153]
[113 152]
[114 151]
[115 150]
[117 147]
[118 146]
[119 145]
[120 144]
[123 141]
[124 140]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[158 171]
[159 170]
[160 169]
[161 168]
[175 185]
[176 184]
[177 183]
[189 207]
[190 206]
[191 205]
[192 204]
[193 203]
[194 201]
[195 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
