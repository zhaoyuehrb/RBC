%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAACGGCCAGCCUGAGGAGCUGCUGCGAGGGUCCGCUUCGUCUUUCGAGAGUGACUCCCGCGGUCCCAAGGCUUUCCAGAGCGAACCUGUGCGGCUGCAGGCACCGGCGUGUUGAGUUUCCGGCGUUCCGAAGGACUGAGCUCUUGUCGCGGAUCCCGUCCGCCGUUUCCAGCCCCCAGUCUCAGAGCGGAGCCCACAGAGCAGGGCACCGGC\
) } def
/len { sequence length } bind def

/coor [
[131.19076538 137.69444275]
[120.50669861 144.42083740]
[108.45712280 148.18933105]
[95.84440613 148.74900818]
[83.50840759 146.06259155]
[72.27054596 140.30895996]
[62.87912750 131.87124634]
[55.95951462 121.31127930]
[41.61529541 125.69801331]
[34.15499496 139.37213135]
[19.54542542 143.61656189]
[6.55521393 136.42004395]
[-7.78900480 140.80676270]
[-22.13322258 145.19349670]
[-36.47744370 149.58023071]
[-50.82165909 153.96694946]
[-58.28196335 167.64108276]
[-72.89153290 171.88551331]
[-85.88174438 164.68898010]
[-100.22595978 169.07571411]
[-103.06600952 172.34678650]
[-106.45734406 174.34564209]
[-109.93319702 175.05505371]
[-113.06903839 174.61091614]
[-115.52872467 173.27517700]
[-130.10278320 176.82434082]
[-144.67684937 180.37351990]
[-159.25091553 183.92268372]
[-173.82498169 187.47186279]
[-188.39904785 191.02104187]
[-199.97662354 201.80390930]
[-214.17323303 197.29772949]
[-228.74729919 200.84690857]
[-243.32135010 204.39608765]
[-257.89541626 207.94525146]
[-272.46948242 211.49443054]
[-280.06289673 216.56332397]
[-287.28021240 214.98786926]
[-301.90414429 218.32568359]
[-316.52804565 221.66349792]
[-331.12744141 225.10707092]
[-345.70150757 228.65625000]
[-360.27557373 232.20542908]
[-369.80828857 245.10916138]
[-385.84509277 245.55749512]
[-396.08386230 233.20651245]
[-392.67031860 217.53082275]
[-378.22305298 210.55546570]
[-363.82473755 217.63136292]
[-349.25067139 214.08218384]
[-334.67660522 210.53300476]
[-328.92410278 205.89833069]
[-319.86587524 207.03958130]
[-305.24194336 203.70176697]
[-290.61804199 200.36395264]
[-276.01864624 196.92036438]
[-261.44458008 193.37118530]
[-246.87052917 189.82202148]
[-232.29646301 186.27284241]
[-217.72239685 182.72366333]
[-207.18725586 172.19465637]
[-191.94822693 176.44697571]
[-177.37416077 172.89779663]
[-162.80009460 169.34863281]
[-148.22602844 165.79945374]
[-133.65196228 162.25027466]
[-119.07789612 158.70111084]
[-104.61268616 154.73149109]
[-90.26847076 150.34475708]
[-83.52547455 137.11344910]
[-69.04088593 132.46034241]
[-55.20838928 139.62274170]
[-40.86417007 135.23600769]
[-26.51995277 130.84927368]
[-12.17573452 126.46254730]
[2.16848445 122.07582092]
[8.91148376 108.84451294]
[23.39607048 104.19140625]
[37.22856522 111.35379028]
[51.57278442 106.96706390]
[51.07582474 100.40037537]
[51.46524429 93.82643890]
[52.73398972 87.36434937]
[54.85907364 81.13118744]
[57.80199814 75.23987579]
[61.50943756 69.79715729]
[65.91423035 64.90163422]
[70.93656158 60.64200211]
[76.48545837 57.09543610]
[71.37783813 42.99181366]
[66.27021027 28.88819122]
[61.16259003 14.78456688]
[56.05496979 0.68094313]
[41.63769531 -5.79344749]
[36.09939957 -20.59556961]
[42.72585678 -34.94358826]
[57.58570480 -40.32507706]
[71.86286163 -33.54729462]
[77.08694458 -18.63137817]
[70.15859222 -4.42667866]
[75.26621246 9.67694473]
[80.37384033 23.78056908]
[85.48146057 37.88419342]
[90.58908081 51.98781586]
[115.68596649 53.65686798]
[136.63720703 67.57392883]
[147.90562439 90.06085968]
[162.88636780 89.30112457]
[177.86711121 88.54138947]
[192.84786987 87.78165436]
[206.23843384 79.35531616]
[219.34126282 86.43805695]
[234.32200623 85.67832184]
[247.71258545 77.25198364]
[260.81539917 84.33472443]
[275.79614258 83.57498932]
[290.77691650 82.81525421]
[299.98437500 73.78698730]
[312.47454834 73.46022797]
[321.53997803 81.46501923]
[336.53015137 80.92224121]
[351.52032471 80.37945557]
[362.25192261 69.08917999]
[377.46182251 68.75225830]
[388.15924072 79.05278778]
[403.14944458 78.51000214]
[411.60775757 75.07341003]
[418.36019897 78.06945801]
[433.35665894 77.74373627]
[448.35314941 77.41802216]
[463.34960938 77.09230804]
[478.34606934 76.76659393]
[493.34252930 76.44087982]
[506.45544434 61.21268463]
[526.23492432 60.55517197]
[539.90148926 74.44349670]
[554.86968994 73.46696472]
[569.83782959 72.49043274]
[584.80603027 71.51390076]
[599.77423096 70.53736877]
[614.74237061 69.56083679]
[630.98962402 57.62313461]
[647.93804932 66.93637848]
[662.87170410 65.52691650]
[677.80535889 64.11745453]
[683.16900635 49.86992264]
[694.14208984 39.40670395]
[708.51110840 34.76435089]
[723.40960693 36.81267929]
[735.88983154 45.09235001]
[743.50604248 57.91650009]
[758.43969727 56.50703812]
[773.36273193 54.98951340]
[788.27441406 53.36400604]
[803.18603516 51.73849869]
[818.09771729 50.11299133]
[833.00939941 48.48748398]
[848.10003662 40.76031113]
[859.70269775 53.12209702]
[851.03594971 67.69343567]
[834.63488770 63.39914703]
[819.72320557 65.02465820]
[804.81158447 66.65016174]
[789.89990234 68.27567291]
[774.98822021 69.90117645]
[768.68231201 73.74916077]
[759.84918213 71.44067383]
[744.91552734 72.85013580]
[739.83319092 86.87280273]
[729.12243652 97.34127808]
[714.87023926 102.14089966]
[699.88635254 100.26892090]
[687.14947510 92.04349518]
[679.21478271 79.05108643]
[664.28118896 80.46054840]
[649.34753418 81.87001038]
[643.57128906 90.29233551]
[633.91058350 94.22985840]
[623.46185303 92.16003418]
[615.71893311 84.52901459]
[600.75073242 85.50554657]
[585.78253174 86.48207855]
[570.81439209 87.45861053]
[555.84619141 88.43514252]
[540.87799072 89.41167450]
[536.44000244 98.65917969]
[528.50329590 105.28369141]
[518.45562744 108.03969574]
[508.09039307 106.36583710]
[499.28659058 100.49772644]
[493.66824341 91.43733978]
[478.67178345 91.76305389]
[463.67532349 92.08877563]
[448.67886353 92.41448975]
[433.68240356 92.74020386]
[418.68591309 93.06591797]
[403.69219971 93.50018311]
[388.70202637 94.04296112]
[378.77761841 105.09019470]
[363.58316040 105.85419464]
[352.06311035 95.36962891]
[337.07293701 95.91241455]
[322.08276367 96.45520020]
[307.73330688 106.56101990]
[291.53665161 97.79599762]
[276.55587769 98.55574036]
[261.57513428 99.31547546]
[249.25608826 107.68746948]
[235.08174133 100.65906525]
[220.10099792 101.41880798]
[207.78195190 109.79080200]
[193.60760498 102.76239777]
[178.62686157 103.52213287]
[163.64610291 104.28187561]
[148.66535950 105.04161072]
[145.75500488 117.32670593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 80]
[9 79]
[12 76]
[13 75]
[14 74]
[15 73]
[16 72]
[19 69]
[20 68]
[25 67]
[26 66]
[27 65]
[28 64]
[29 63]
[30 62]
[32 60]
[33 59]
[34 58]
[35 57]
[36 56]
[38 55]
[39 54]
[40 53]
[41 51]
[42 50]
[43 49]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[107 215]
[108 214]
[109 213]
[110 212]
[112 210]
[113 209]
[115 207]
[116 206]
[117 205]
[120 203]
[121 202]
[122 201]
[125 198]
[126 197]
[128 196]
[129 195]
[130 194]
[131 193]
[132 192]
[133 191]
[136 185]
[137 184]
[138 183]
[139 182]
[140 181]
[141 180]
[143 176]
[144 175]
[145 174]
[151 168]
[152 167]
[153 165]
[154 164]
[155 163]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
