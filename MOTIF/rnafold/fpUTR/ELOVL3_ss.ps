%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUUGGAUAGCGGCGGGGCGCAGGAAAGAGGUCGCGCCAGCCCGGGCAGGCAGCUUUGCAAGUCCGCGUUAUAUAUCGCAGUGGCUGCGCCCGGGAUAGCUGGCUGCGCCGCCGCGCACAUGCCUAGGUUCGACGCCCUCCUCCCUUUGCCCAGGAGUUCCUUCUGUCCCGGCUCUGUUCCGUCUCGCCCCGAGGUUCACGCCAUCCUCGGAGCCCCAGCCUUUCACCCAGCGCCUCCAAGCUUUGGACCUUG\
ACUUCUGCAAAACUAG\
) } def
/len { sequence length } bind def

/coor [
[458.04357910 330.34045410]
[445.76736450 321.72103882]
[433.49111938 313.10162354]
[421.21490479 304.48223877]
[408.93865967 295.86282349]
[394.07641602 294.88171387]
[387.22821045 280.61941528]
[374.95196533 272.00003052]
[362.67575073 263.38061523]
[350.39950562 254.76119995]
[338.12329102 246.14178467]
[325.84707642 237.52238464]
[318.59368896 236.25541687]
[313.47961426 228.73185730]
[301.30374146 219.97123718]
[289.12789917 211.21061707]
[276.90164185 202.52046204]
[264.62539673 193.90104675]
[252.34918213 185.28163147]
[240.07295227 176.66223145]
[227.79672241 168.04281616]
[215.52049255 159.42341614]
[197.96717834 158.79792786]
[190.38047791 142.00083923]
[178.00552368 133.52378845]
[165.63055420 125.04674530]
[153.25559998 116.56969452]
[140.88063049 108.09265137]
[124.97947693 128.35331726]
[102.33998108 133.81993103]
[83.44961548 125.03871918]
[75.31270599 108.55516052]
[60.37669373 107.17113495]
[51.57996368 109.48958588]
[45.27650833 105.68389893]
[30.35747528 104.12745667]
[15.43844509 102.57101440]
[0.51067400 101.10076141]
[-14.42533875 99.71673584]
[-29.36135101 98.33271027]
[-44.29736328 96.94868469]
[-59.23337555 95.56465912]
[-74.16938782 94.18063354]
[-89.13338470 93.14196777]
[-104.11737823 92.44921112]
[-119.10137177 91.75646210]
[-134.08537292 91.06371307]
[-149.06936646 90.37095642]
[-164.05335999 89.67820740]
[-170.03768921 92.34772491]
[-175.63943481 91.71572113]
[-179.37426758 88.79244232]
[-194.33825684 87.75377655]
[-209.30226135 86.71511078]
[-224.26625061 85.67644501]
[-239.23025513 84.63777924]
[-254.19424438 83.59911346]
[-269.16400146 82.64688110]
[-284.13897705 81.78111267]
[-299.11398315 80.91534424]
[-314.08895874 80.04958344]
[-319.56939697 94.14994049]
[-329.14041138 105.86535645]
[-341.86431885 114.04807281]
[-356.49462891 117.89642334]
[-371.59793091 117.03339386]
[-385.69464111 111.54352570]
[-397.40362549 101.96466827]
[-405.57781982 89.23526001]
[-409.41635132 74.60239410]
[-408.54321289 59.49965668]
[-403.04391479 45.40665054]
[-393.45721436 33.70407104]
[-380.72232056 25.53841782]
[-366.08688354 21.70967484]
[-350.98474121 22.59294701]
[-336.89541626 28.10169792]
[-325.19924927 37.69623947]
[-317.04214478 50.43659210]
[-313.22320557 65.07458496]
[-298.24819946 65.94035339]
[-283.27322388 66.80612183]
[-268.29821777 67.67189026]
[-261.46429443 64.93067169]
[-253.15557861 68.63511658]
[-238.19158936 69.67378235]
[-223.22758484 70.71244812]
[-208.26359558 71.75111389]
[-193.29959106 72.78977966]
[-178.33560181 73.82844543]
[-163.36061096 74.69421387]
[-148.37661743 75.38696289]
[-133.39262390 76.07971954]
[-118.40862274 76.77246857]
[-103.42462921 77.46521759]
[-88.44063568 78.15797424]
[-86.29444122 76.40872192]
[-83.33847809 75.38840485]
[-79.84133911 75.40506744]
[-76.17655945 76.66598511]
[-72.78536224 79.24462128]
[-57.84934998 80.62864685]
[-42.91333771 82.01267242]
[-27.97732544 83.39669800]
[-13.04131317 84.78072357]
[1.89469945 86.16474915]
[8.81948948 83.66192627]
[16.99488449 87.65198517]
[31.91391563 89.20842743]
[46.83294678 90.76486206]
[61.76071930 92.23512268]
[76.69673157 93.61914825]
[86.01033020 81.86087799]
[81.24345398 67.63846588]
[76.47658539 53.41605759]
[60.66567230 45.88989639]
[55.31271744 29.57301903]
[63.27307510 14.73984718]
[58.34225845 0.57344210]
[45.58297348 -9.72863102]
[48.39215088 -25.88537979]
[63.87994766 -31.27612877]
[76.11384583 -20.35533524]
[72.50866699 -4.35737610]
[77.43948364 9.80902863]
[89.69158173 13.72946930]
[97.57532501 24.13951111]
[98.04225159 37.38407135]
[90.69898987 48.64918518]
[95.46586609 62.87159348]
[100.23273468 77.09400177]
[107.73261261 77.05068970]
[107.64598846 62.05094147]
[107.55936432 47.05119324]
[107.47298431 32.05144119]
[122.47274017 31.96531487]
[122.55911255 46.96456909]
[122.64573669 61.96431732]
[122.73236084 76.96406555]
[130.23223877 76.92075348]
[134.83451843 62.64423752]
[139.43681335 48.36772156]
[144.03910828 34.09120560]
[148.64138794 19.81468773]
[138.27857971 8.47855949]
[134.98786926 -6.52366543]
[139.65441895 -21.15646362]
[151.02297974 -31.48368645]
[166.03544617 -34.72736359]
[180.65354919 -30.01495934]
[190.94508362 -18.61408806]
[194.14169312 -3.59152913]
[189.38348389 11.01172733]
[177.95040894 21.26747704]
[162.91790771 24.41697693]
[158.31561279 38.69349289]
[153.71333313 52.97000885]
[149.11103821 67.24652863]
[144.50875854 81.52304840]
[149.35768127 95.71768951]
[161.73263550 104.19473267]
[174.10760498 112.67178345]
[186.48255920 121.14882660]
[198.85752869 129.62586975]
[211.63197327 128.02543640]
[221.75726318 135.31094360]
[224.13989258 147.14718628]
[236.41612244 155.76658630]
[248.69235229 164.38600159]
[260.96859741 173.00541687]
[273.24481201 181.62481689]
[285.52105713 190.24423218]
[294.30758667 192.60093689]
[297.88851929 199.03475952]
[310.06436157 207.79537964]
[322.24023438 216.55599976]
[334.46646118 225.24615479]
[346.74270630 233.86557007]
[359.01892090 242.48497009]
[371.29516602 251.10438538]
[383.57138062 259.72378540]
[395.84762573 268.34320068]
[411.58795166 269.94082642]
[417.55807495 283.58657837]
[429.83432007 292.20599365]
[442.11053467 300.82540894]
[454.38677979 309.44482422]
[466.66299438 318.06420898]
[481.04202271 322.33551025]
[496.03302002 321.81588745]
[509.55685425 313.60513306]
[522.54455566 320.89688110]
[537.53552246 320.37722778]
[552.52648926 319.85760498]
[567.51751709 319.33795166]
[582.50848389 318.81829834]
[597.49951172 318.29867554]
[604.64263916 304.70190430]
[617.63568115 296.51190186]
[632.98358154 295.93173218]
[646.55786133 303.11740112]
[654.70715332 316.13607788]
[655.23919678 331.48574829]
[648.01098633 345.03744507]
[634.96685791 353.14584351]
[619.61560059 353.62979126]
[606.08660889 346.35916138]
[598.01916504 333.28967285]
[583.02813721 333.80929565]
[568.03717041 334.32894897]
[553.04614258 334.84860229]
[538.05517578 335.36822510]
[523.06414795 335.88787842]
[510.61257935 344.06146240]
[496.55264282 336.80688477]
[481.56164551 337.32650757]
[478.69152832 344.25561523]
[492.54971313 349.99588013]
[506.40792847 355.73611450]
[520.26611328 361.47637939]
[534.12432861 367.21661377]
[549.07806396 368.39370728]
[552.57934570 382.97933960]
[539.78948975 390.81631470]
[528.38403320 381.07479858]
[514.52587891 375.33456421]
[500.66766357 369.59429932]
[486.80947876 363.85406494]
[472.95126343 358.11380005]
[470.08114624 365.04290771]
[480.31393433 376.01058960]
[490.54672241 386.97827148]
[500.77951050 397.94595337]
[515.85113525 402.75805664]
[518.87615967 417.34225464]
[529.10894775 428.30993652]
[544.91046143 428.60687256]
[555.81347656 440.04800415]
[555.34948730 455.84548950]
[543.79376221 466.62695312]
[528.00207520 465.99594116]
[517.34338379 454.32684326]
[518.14129639 438.54272461]
[507.90850830 427.57504272]
[493.56878662 423.54739380]
[489.81185913 408.17874146]
[479.57904053 397.21105957]
[469.34625244 386.24337769]
[459.11346436 375.27569580]
[462.83541870 389.80661011]
[457.85351562 403.95513916]
[449.68554688 416.53622437]
[438.78921509 426.84494019]
[425.77502441 434.30361938]
[411.37231445 438.49426270]
[396.38809204 439.18209839]
[381.66201782 436.32855225]
[368.01925659 430.09356689]
[356.22430420 420.82647705]
[346.93807983 409.04656982]
[340.68093872 395.41397095]
[337.80346680 380.69253540]
[338.46697998 365.70724487]
[342.63424683 351.29772949]
[350.07174683 338.27145386]
[360.36276245 327.35836792]
[372.93057251 319.16998291]
[387.07101440 314.16513062]
[401.99163818 312.62426758]
[416.85644531 314.63369751]
[430.83242798 320.08087158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 184]
[7 182]
[8 181]
[9 180]
[10 179]
[11 178]
[12 177]
[14 176]
[15 175]
[16 174]
[17 172]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[24 164]
[25 163]
[26 162]
[27 161]
[28 160]
[32 112]
[33 111]
[35 110]
[36 109]
[37 108]
[38 106]
[39 105]
[40 104]
[41 103]
[42 102]
[43 101]
[44 96]
[45 95]
[46 94]
[47 93]
[48 92]
[49 91]
[52 90]
[53 89]
[54 88]
[55 87]
[56 86]
[57 85]
[58 83]
[59 82]
[60 81]
[61 80]
[113 131]
[114 130]
[115 129]
[118 125]
[119 124]
[140 159]
[141 158]
[142 157]
[143 156]
[144 155]
[189 216]
[190 215]
[192 213]
[193 212]
[194 211]
[195 210]
[196 209]
[197 208]
[230 249]
[231 248]
[232 247]
[233 246]
[235 244]
[236 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
