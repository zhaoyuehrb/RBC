%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGAGGGGGCAGUCCACGAACUUUUGUCAUUCAGCCUGGGAGACCACGGUGACAUUCCUGUCUGCGCUGCGGGCAGGCCAGCCUCUCCGGCCCUGGACUAGGGGGCGCCGCCGAGAGAAGCCGCCGCAGGCUGCAGAGUCGCCGACCGCGCUGUUCGCAGGCAGACCCCGGGCUGCCCACCGCGGCCUAGCGCGCGCCGG\
) } def
/len { sequence length } bind def

/coor [
[-65.58393097 659.22241211]
[-66.04360962 644.22949219]
[-66.50328064 629.23651123]
[-66.96295166 614.24359131]
[-61.62875366 602.63049316]
[-53.93066025 594.12420654]
[-45.00592804 589.10437012]
[-36.02008438 587.59753418]
[-28.06695175 589.28936768]
[-30.58359146 574.50201416]
[-33.21346283 559.73431396]
[-35.95641327 544.98724365]
[-38.69936371 530.24017334]
[-41.44231415 515.49310303]
[-44.18526459 500.74603271]
[-46.92821503 485.99896240]
[-49.67116547 471.25186157]
[-52.41411591 456.50479126]
[-55.15706253 441.75772095]
[-61.45230484 437.68096924]
[-66.11526489 451.93777466]
[-67.20730591 466.89797974]
[-78.97504425 476.19961548]
[-93.78305054 473.80737305]
[-102.02323914 461.27343750]
[-98.34900665 446.73040771]
[-85.14471436 439.61444092]
[-74.04278564 429.52746582]
[-80.33802795 425.45068359]
[-94.91683960 428.98031616]
[-109.49565887 432.50991821]
[-124.07447052 436.03955078]
[-112.84315491 445.98223877]
[-113.45694733 460.96969604]
[-125.46366882 469.96072388]
[-140.01806641 466.33169556]
[-146.39801025 452.75613403]
[-139.90412903 439.23556519]
[-154.71035767 441.63882446]
[-169.51658630 444.04208374]
[-184.30397034 446.55871582]
[-199.07162476 449.18859863]
[-213.83927917 451.81848145]
[-226.02845764 462.78915405]
[-241.53814697 457.46176147]
[-244.41333008 441.31661987]
[-231.69624329 430.96249390]
[-216.46916199 437.05081177]
[-201.70149231 434.42092896]
[-186.93383789 431.79107666]
[-180.89689636 427.52139282]
[-171.91984558 429.23587036]
[-157.11361694 426.83261108]
[-142.30738831 424.42935181]
[-127.60408020 421.46072388]
[-113.02526855 417.93112183]
[-98.44645691 414.40148926]
[-83.86763763 410.87188721]
[-84.99680328 396.01379395]
[-80.96124268 382.15710449]
[-72.59028625 370.98031616]
[-61.21595001 363.71682739]
[-48.47031021 361.02114868]
[-36.05494690 362.91940308]
[-29.60592651 349.37649536]
[-23.15690613 335.83358765]
[-16.70788574 322.29067993]
[-10.25886631 308.74780273]
[-3.80984640 295.20489502]
[-3.77232409 287.81076050]
[2.84317136 281.50503540]
[9.49896908 268.06253052]
[16.15476608 254.62005615]
[22.81056404 241.17758179]
[29.46636200 227.73509216]
[36.12215805 214.29261780]
[42.77795792 200.85012817]
[49.43375397 187.40763855]
[56.08955383 173.96516418]
[62.74534988 160.52267456]
[69.29795074 147.02958679]
[75.74697113 133.48669434]
[63.10471725 118.66296387]
[58.65419769 99.69555664]
[63.38354492 80.79575348]
[76.24271393 66.15979767]
[94.37664032 59.03726578]
[95.06600952 44.05311584]
[95.75538635 29.06896400]
[96.44476318 14.08481312]
[97.13414001 -0.89933687]
[97.59381104 -15.89229202]
[97.82367706 -30.89052963]
[98.05353546 -45.88877106]
[98.28340149 -60.88700867]
[98.39833832 -75.88656616]
[98.39833832 -90.88656616]
[98.39833832 -105.88656616]
[85.76607513 -114.89798737]
[80.87508392 -129.62408447]
[85.60604095 -144.40235901]
[98.13980103 -153.55027771]
[113.65687561 -153.55027771]
[126.19063568 -144.40235901]
[130.92158508 -129.62408447]
[126.03059387 -114.89798737]
[113.39833832 -105.88656616]
[113.39833832 -90.88656616]
[113.39833832 -75.88656616]
[116.54345703 -69.19455719]
[113.28163910 -60.65714264]
[113.05177307 -45.65890503]
[112.82191467 -30.66066742]
[112.59204865 -15.66242790]
[115.21824646 -11.66825199]
[115.35997009 -5.98098278]
[112.11828613 -0.20996186]
[111.42890930 14.77418804]
[110.73954010 29.75833893]
[110.05016327 44.74248886]
[109.36078644 59.72663879]
[116.09239960 58.88778305]
[123.24029541 59.20307922]
[134.28434753 49.05276108]
[145.32839966 38.90243912]
[156.37245178 28.75212097]
[156.78779602 12.95329189]
[168.31030273 2.13629270]
[184.10386658 2.71865821]
[194.79843140 14.35488129]
[194.04911804 30.14139748]
[182.30047607 40.71234512]
[166.52276611 39.79616928]
[155.47871399 49.94649124]
[144.43466187 60.09680939]
[133.39062500 70.24713135]
[141.35023499 82.96107483]
[155.30532837 77.46058655]
[161.37353516 62.86769867]
[176.01478577 56.91714859]
[190.54270935 63.13929367]
[196.33813477 77.84265137]
[189.96273804 92.30397034]
[175.19892883 97.94361877]
[160.80581665 91.41567993]
[146.85072327 96.91616821]
[144.57939148 111.41604614]
[138.02592468 124.21920013]
[128.00915527 134.12721252]
[115.66071320 140.27784729]
[102.29917145 142.21856689]
[89.28987122 139.93571472]
[82.84085083 153.47860718]
[81.97576141 162.57687378]
[76.18783569 167.17848206]
[69.53203583 180.62095642]
[62.87623596 194.06344604]
[56.22043991 207.50592041]
[49.56464386 220.94841003]
[42.90884399 234.39089966]
[36.25304794 247.83337402]
[29.59724998 261.27584839]
[22.94145203 274.71835327]
[16.28565407 288.16082764]
[9.73305321 301.65390015]
[3.28403354 315.19680786]
[-3.16498661 328.73971558]
[-9.61400700 342.28262329]
[-16.06302643 355.82550049]
[-22.51204681 369.36840820]
[-8.95078850 385.53121948]
[-6.86888695 407.70343018]
[-18.32024002 428.15759277]
[-40.40998840 439.01477051]
[-37.66703796 453.76184082]
[-34.92408752 468.50891113]
[-32.18114090 483.25601196]
[-29.43818855 498.00308228]
[-26.69524002 512.75012207]
[-23.95228958 527.49725342]
[-21.20933914 542.24432373]
[-18.46638870 556.99139404]
[-13.81843281 564.86053467]
[-15.79621506 571.98535156]
[-13.27957535 586.77270508]
[-8.97344875 601.14135742]
[-2.94247794 614.87548828]
[3.08849263 628.60968018]
[17.90310478 634.11450195]
[24.41008759 648.51708984]
[18.74896431 663.27264404]
[4.27838039 669.62701416]
[-10.41652584 663.81018066]
[-16.61752510 649.27325439]
[-10.64567566 634.64062500]
[-16.67664719 620.90649414]
[-22.70761681 607.17230225]
[-30.02321243 608.82519531]
[-51.97000122 613.78387451]
[-51.51032639 628.77685547]
[-51.05065155 643.76977539]
[-50.59098053 658.76275635]
[-44.06209183 674.40917969]
[-57.28964996 685.01428223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[9 185]
[10 184]
[11 182]
[12 181]
[13 180]
[14 179]
[15 178]
[16 177]
[17 176]
[18 175]
[19 174]
[29 58]
[30 57]
[31 56]
[32 55]
[38 54]
[39 53]
[40 52]
[41 50]
[42 49]
[43 48]
[64 170]
[65 169]
[66 168]
[67 167]
[68 166]
[69 165]
[71 164]
[72 163]
[73 162]
[74 161]
[75 160]
[76 159]
[77 158]
[78 157]
[79 156]
[80 155]
[81 153]
[82 152]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 114]
[93 113]
[94 112]
[95 111]
[96 109]
[97 108]
[98 107]
[123 136]
[124 135]
[125 134]
[126 133]
[137 146]
[138 145]
[186 197]
[187 196]
[188 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
