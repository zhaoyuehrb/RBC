%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPRR2D)
} def

/sequence { (\
AACUCCUGGUACUCUAGCACCGAUCUGCUUUGGAGAACCUGAUCCUGAGACUCCAGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.056098859 ubox
3 9 0.058157653 ubox
3 17 0.012427029 ubox
3 35 0.108279919 ubox
3 49 0.040422612 ubox
3 59 0.120309540 ubox
3 60 0.016865805 ubox
4 8 0.052421574 ubox
4 16 0.011094996 ubox
4 23 0.164746799 ubox
4 34 0.108937675 ubox
4 36 0.003249421 ubox
4 42 0.379018197 ubox
4 48 0.040613398 ubox
4 50 0.003290352 ubox
4 58 0.117835783 ubox
4 59 0.012943131 ubox
4 60 0.005870578 ubox
5 22 0.174113286 ubox
5 33 0.109003547 ubox
5 35 0.003273524 ubox
5 41 0.404824489 ubox
5 47 0.040521183 ubox
5 49 0.003480406 ubox
5 59 0.009106695 ubox
5 60 0.105158774 ubox
6 17 0.427287369 ubox
6 32 0.108891149 ubox
6 49 0.005765899 ubox
6 56 0.123372536 ubox
6 59 0.107300820 ubox
6 60 0.008198007 ubox
7 16 0.432082300 ubox
7 19 0.063228029 ubox
7 22 0.526104863 ubox
7 41 0.031508188 ubox
7 48 0.005756591 ubox
7 55 0.123600543 ubox
7 58 0.105119285 ubox
7 59 0.004207817 ubox
8 14 0.016123992 ubox
8 15 0.432765186 ubox
8 18 0.069111808 ubox
8 21 0.658276042 ubox
8 29 0.078264407 ubox
8 30 0.019990375 ubox
8 31 0.010777518 ubox
8 39 0.562057639 ubox
8 40 0.008548511 ubox
8 45 0.005813911 ubox
8 52 0.006201675 ubox
8 53 0.003334781 ubox
8 54 0.123277788 ubox
8 57 0.086107417 ubox
9 13 0.010642405 ubox
9 14 0.431562960 ubox
9 18 0.061545483 ubox
9 20 0.658527668 ubox
9 28 0.079877366 ubox
9 29 0.008099563 ubox
9 30 0.013153554 ubox
9 38 0.565732858 ubox
9 39 0.008059123 ubox
9 44 0.005716953 ubox
9 51 0.013944148 ubox
9 53 0.122486903 ubox
9 57 0.007626748 ubox
10 16 0.065001997 ubox
10 17 0.061315509 ubox
10 19 0.651788007 ubox
10 27 0.079615913 ubox
10 37 0.558197788 ubox
10 50 0.020851260 ubox
10 56 0.009884558 ubox
11 15 0.059166822 ubox
11 26 0.074550330 ubox
12 33 0.016139448 ubox
12 35 0.573549283 ubox
12 49 0.109798086 ubox
13 23 0.072225734 ubox
13 32 0.015968253 ubox
13 33 0.007854682 ubox
13 34 0.574473318 ubox
13 36 0.009262266 ubox
13 48 0.110531643 ubox
13 50 0.041552056 ubox
14 22 0.073922999 ubox
14 32 0.016315013 ubox
14 33 0.574316522 ubox
14 35 0.009636164 ubox
14 47 0.110220785 ubox
14 49 0.043315025 ubox
15 27 0.003850502 ubox
15 32 0.552006029 ubox
15 34 0.009558586 ubox
15 41 0.007195767 ubox
15 47 0.011124677 ubox
15 48 0.041195443 ubox
16 26 0.005844052 ubox
16 29 0.493489798 ubox
16 30 0.048979446 ubox
16 31 0.279442662 ubox
16 40 0.007339510 ubox
16 46 0.035402783 ubox
17 25 0.006343618 ubox
17 28 0.591016400 ubox
17 29 0.010002617 ubox
17 30 0.039467288 ubox
17 39 0.007332925 ubox
17 45 0.035552361 ubox
18 27 0.592215387 ubox
18 41 0.013825624 ubox
18 47 0.009066818 ubox
19 26 0.533523435 ubox
19 40 0.013616142 ubox
19 46 0.008941914 ubox
20 33 0.027420944 ubox
20 60 0.017406865 ubox
21 27 0.015772165 ubox
21 32 0.027650077 ubox
21 41 0.006560096 ubox
21 59 0.015707056 ubox
22 26 0.010239709 ubox
22 31 0.027882916 ubox
22 40 0.006343883 ubox
22 44 0.035936322 ubox
23 30 0.027543998 ubox
23 43 0.035968114 ubox
24 34 0.006488990 ubox
24 36 0.011177676 ubox
24 42 0.035945597 ubox
24 60 0.516048373 ubox
25 33 0.006576658 ubox
25 35 0.011465510 ubox
25 41 0.035915726 ubox
25 56 0.007298759 ubox
25 59 0.796786659 ubox
25 60 0.011053096 ubox
26 32 0.006421256 ubox
26 34 0.011440771 ubox
26 55 0.007330004 ubox
26 58 0.798337081 ubox
26 59 0.006597687 ubox
27 40 0.003164259 ubox
27 54 0.007316614 ubox
27 57 0.798786824 ubox
28 35 0.012785919 ubox
28 49 0.013148684 ubox
28 56 0.795448710 ubox
28 59 0.014121847 ubox
29 34 0.011838288 ubox
29 36 0.005203604 ubox
29 37 0.013199529 ubox
29 42 0.003454953 ubox
29 48 0.015401593 ubox
29 49 0.005995623 ubox
29 50 0.003817577 ubox
29 55 0.538148188 ubox
29 56 0.018405820 ubox
29 58 0.014073258 ubox
30 35 0.005009660 ubox
30 36 0.013896193 ubox
30 37 0.010301263 ubox
30 41 0.004489722 ubox
30 42 0.007916913 ubox
30 47 0.018429723 ubox
30 48 0.014549128 ubox
30 49 0.005980726 ubox
30 50 0.006669622 ubox
30 55 0.090857985 ubox
30 56 0.075530759 ubox
31 35 0.012597015 ubox
31 36 0.010846423 ubox
31 41 0.008405261 ubox
31 47 0.014521138 ubox
31 48 0.004852710 ubox
31 49 0.006611983 ubox
31 55 0.544112421 ubox
32 39 0.016963213 ubox
32 40 0.009549674 ubox
32 45 0.113826058 ubox
32 46 0.011911421 ubox
32 52 0.003369271 ubox
32 54 0.799690322 ubox
33 38 0.016897075 ubox
33 39 0.009627078 ubox
33 44 0.114031449 ubox
33 45 0.012114885 ubox
33 51 0.003432070 ubox
33 53 0.801101286 ubox
34 40 0.004355899 ubox
34 43 0.113659412 ubox
34 46 0.005232147 ubox
34 52 0.800908855 ubox
35 39 0.005012347 ubox
35 44 0.018248324 ubox
35 45 0.005589587 ubox
35 51 0.799584215 ubox
36 43 0.019298785 ubox
36 52 0.004149672 ubox
38 60 0.142602474 ubox
39 49 0.734984571 ubox
39 56 0.026751748 ubox
39 59 0.146723984 ubox
40 47 0.050032655 ubox
40 48 0.732599913 ubox
40 55 0.028879412 ubox
40 58 0.151384248 ubox
40 59 0.009066736 ubox
41 46 0.062035776 ubox
41 53 0.018604743 ubox
41 54 0.027995655 ubox
41 57 0.152107386 ubox
42 52 0.020274320 ubox
43 50 0.094511235 ubox
43 60 0.027479045 ubox
44 49 0.095055937 ubox
44 59 0.040698078 ubox
44 60 0.514266073 ubox
45 56 0.231945367 ubox
45 59 0.525885735 ubox
45 60 0.005039229 ubox
46 55 0.234042528 ubox
46 58 0.525633915 ubox
46 59 0.004647096 ubox
47 53 0.027720756 ubox
47 54 0.233722661 ubox
47 57 0.524192635 ubox
48 52 0.029984738 ubox
51 59 0.017225853 ubox
51 60 0.009989008 ubox
52 58 0.016568046 ubox
52 59 0.009511567 ubox
52 60 0.004199784 ubox
53 59 0.007302184 ubox
53 60 0.043800190 ubox
54 59 0.044770395 ubox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
32 54 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
showpage
end
%%EOF
