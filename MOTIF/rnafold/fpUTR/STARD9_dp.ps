%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (STARD9)
} def

/sequence { (\
GGGGGCCUGGGAUGCUGCCGCUGAGCUGACCCGCUGGACUUGGGUUGUGGCAGACGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.336278100 ubox
1 8 0.160037427 ubox
1 16 0.008148037 ubox
1 19 0.549527737 ubox
1 22 0.191983957 ubox
1 32 0.006916199 ubox
2 6 0.331430970 ubox
2 7 0.168679304 ubox
2 8 0.061530866 ubox
2 15 0.008918327 ubox
2 16 0.009609043 ubox
2 18 0.555455844 ubox
2 19 0.028158423 ubox
2 21 0.204099208 ubox
2 22 0.023352648 ubox
2 31 0.006934973 ubox
3 7 0.063250900 ubox
3 15 0.010373689 ubox
3 16 0.012215859 ubox
3 18 0.028445193 ubox
3 19 0.006627331 ubox
3 21 0.024592476 ubox
3 30 0.006916699 ubox
4 15 0.012639136 ubox
4 16 0.559825686 ubox
4 18 0.006019014 ubox
4 19 0.213098573 ubox
4 22 0.007752531 ubox
4 27 0.006119157 ubox
5 15 0.562744829 ubox
5 18 0.213331344 ubox
5 21 0.008177480 ubox
5 26 0.006669345 ubox
5 51 0.006802447 ubox
6 14 0.562025347 ubox
6 17 0.212591398 ubox
6 20 0.008128554 ubox
6 25 0.005955100 ubox
6 37 0.003867857 ubox
6 50 0.006810152 ubox
6 57 0.086370930 ubox
7 25 0.004129570 ubox
7 36 0.003886908 ubox
7 49 0.006797279 ubox
7 56 0.087480382 ubox
7 57 0.106916936 ubox
8 14 0.012856801 ubox
8 17 0.019000149 ubox
8 20 0.006109165 ubox
8 24 0.005111864 ubox
8 33 0.003467444 ubox
8 56 0.109064897 ubox
9 13 0.024257548 ubox
9 16 0.185553932 ubox
9 19 0.011278763 ubox
9 32 0.005057016 ubox
9 55 0.108542544 ubox
10 15 0.200043346 ubox
10 16 0.027099491 ubox
10 18 0.011337396 ubox
10 19 0.007767170 ubox
10 22 0.005057510 ubox
10 31 0.005064028 ubox
11 15 0.026997018 ubox
11 18 0.007812120 ubox
11 21 0.004989954 ubox
11 30 0.005048684 ubox
13 20 0.003964278 ubox
13 52 0.036685517 ubox
13 56 0.425184479 ubox
14 19 0.003877755 ubox
14 26 0.006844330 ubox
14 51 0.036860963 ubox
14 55 0.603482193 ubox
15 25 0.006856456 ubox
15 50 0.036834963 ubox
15 53 0.792978785 ubox
16 24 0.006826854 ubox
16 49 0.036641258 ubox
16 52 0.794885883 ubox
17 26 0.003328156 ubox
17 48 0.036313044 ubox
17 51 0.795955277 ubox
18 25 0.003329628 ubox
18 47 0.036259776 ubox
18 50 0.795963364 ubox
18 57 0.097061578 ubox
19 49 0.795937379 ubox
19 56 0.126663244 ubox
20 26 0.035221407 ubox
20 45 0.024275893 ubox
20 48 0.793237425 ubox
20 51 0.214276945 ubox
20 55 0.315909254 ubox
21 25 0.035046995 ubox
21 43 0.020213374 ubox
21 44 0.022723335 ubox
21 47 0.791052132 ubox
21 50 0.214459405 ubox
21 53 0.463259297 ubox
21 57 0.162155869 ubox
22 28 0.004682983 ubox
22 42 0.025479730 ubox
22 43 0.020287792 ubox
22 47 0.005022678 ubox
22 49 0.205018171 ubox
22 52 0.463361284 ubox
22 56 0.166886849 ubox
23 27 0.007602484 ubox
23 41 0.028278965 ubox
23 46 0.162848591 ubox
23 48 0.083688342 ubox
23 51 0.456567415 ubox
23 55 0.171331571 ubox
24 35 0.025893874 ubox
24 40 0.030530251 ubox
24 41 0.013197995 ubox
24 45 0.171529422 ubox
24 46 0.046572246 ubox
25 34 0.026674403 ubox
25 39 0.031435405 ubox
25 40 0.008938487 ubox
25 45 0.050467602 ubox
25 48 0.379186448 ubox
25 51 0.324630728 ubox
26 33 0.026651329 ubox
26 37 0.031426594 ubox
26 43 0.176849763 ubox
26 44 0.049159483 ubox
26 47 0.383727304 ubox
26 50 0.327342337 ubox
26 53 0.035796435 ubox
26 57 0.003826249 ubox
27 36 0.031216021 ubox
27 42 0.175939489 ubox
27 43 0.047196268 ubox
27 47 0.246748764 ubox
27 49 0.306656005 ubox
27 52 0.035920533 ubox
27 56 0.003922610 ubox
28 35 0.022167443 ubox
28 41 0.169805937 ubox
28 46 0.948881050 ubox
28 48 0.079738157 ubox
28 51 0.035331569 ubox
28 55 0.003764120 ubox
29 40 0.159268922 ubox
29 45 0.978463573 ubox
29 48 0.004228429 ubox
30 37 0.141638448 ubox
30 43 0.005095915 ubox
30 44 0.981001964 ubox
30 47 0.004024343 ubox
30 50 0.022967167 ubox
30 57 0.004036529 ubox
31 36 0.141382245 ubox
31 37 0.107927705 ubox
31 42 0.005204132 ubox
31 43 0.981056007 ubox
31 44 0.005805955 ubox
31 49 0.021947723 ubox
31 50 0.022009833 ubox
31 56 0.003824782 ubox
31 57 0.026049514 ubox
32 36 0.107379324 ubox
32 42 0.980809430 ubox
32 43 0.006697598 ubox
32 47 0.017315754 ubox
32 49 0.023129468 ubox
32 56 0.026547350 ubox
33 41 0.815929730 ubox
33 45 0.016508227 ubox
33 46 0.012257018 ubox
33 48 0.024047790 ubox
33 51 0.007726272 ubox
33 55 0.026634497 ubox
34 43 0.004781045 ubox
34 44 0.020408707 ubox
34 47 0.024010643 ubox
34 50 0.007744765 ubox
34 53 0.026966516 ubox
35 42 0.005225487 ubox
35 43 0.020246503 ubox
35 49 0.007624761 ubox
35 52 0.026961771 ubox
36 41 0.023248251 ubox
36 48 0.003613489 ubox
36 51 0.026914689 ubox
37 46 0.024292933 ubox
38 45 0.026002360 ubox
38 48 0.023362801 ubox
39 44 0.026048191 ubox
39 47 0.023689511 ubox
39 50 0.005982626 ubox
40 49 0.006022288 ubox
44 55 0.004361575 ubox
45 54 0.004353308 ubox
46 53 0.004280605 ubox
46 56 0.008091545 ubox
47 55 0.018210133 ubox
48 54 0.018163514 ubox
48 56 0.009161412 ubox
49 55 0.012993339 ubox
15 53 0.9500000 lbox
16 52 0.9500000 lbox
17 51 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
21 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
showpage
end
%%EOF
