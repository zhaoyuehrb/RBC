%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUUUCCCGCCGCGGGUGAAUGAGUCCGACUGCGCUGCCGCCGCCGCCGCCGCCCGCAUCGAAGCUCCGGCCGCGUCCCCCGCGCCAGCCCCGGGAGCCUGCGCGCCGAGACCCCUGCGUGUCUGCGAACAGACCUCCGGCCUCGGGCCAUCACCCCGGGCAGACGCUGCAGCCCCUGUCCGGGCCUCUUGCCUGCCGCCCCC\
) } def
/len { sequence length } bind def

/coor [
[84.15904236 215.10916138]
[80.53514099 229.66482544]
[76.91124725 244.22048950]
[73.28735352 258.77615356]
[69.66345978 273.33181763]
[76.66538239 287.76623535]
[69.61601257 302.17755127]
[53.92301178 305.51062012]
[41.62471390 295.20861816]
[42.15531921 279.17434692]
[55.10779190 269.70791626]
[58.73168945 255.15226746]
[62.35558319 240.59660339]
[65.97947693 226.04092407]
[69.60337830 211.48526001]
[72.89337921 196.85052490]
[75.84777832 182.14434814]
[78.80216980 167.43817139]
[81.75656128 152.73199463]
[84.71096039 138.02581787]
[77.01834869 133.93466187]
[70.36437225 128.30984497]
[65.04976654 121.40559387]
[61.31471634 113.53391266]
[46.48881149 115.81262970]
[31.66290665 118.09133911]
[16.83700180 120.37004852]
[2.74739838 132.22320557]
[-13.34657097 125.23091888]
[-28.13600159 127.73545074]
[-42.92543411 130.23999023]
[-50.86781311 134.75997925]
[-57.95936203 132.66816711]
[-72.78526306 134.94686890]
[-87.61117554 137.22558594]
[-102.40060425 139.73011780]
[-117.15012360 142.45989990]
[-129.31176758 152.57943726]
[-143.23458862 147.28752136]
[-157.98410034 150.01730347]
[-170.14575195 160.13682556]
[-184.06857300 154.84490967]
[-198.81809998 157.57469177]
[-210.93270874 168.62765503]
[-226.47811890 163.40536499]
[-229.46252441 147.28005981]
[-216.81584167 136.84008789]
[-201.54788208 142.82518005]
[-186.79835510 140.09539795]
[-175.69169617 130.17111206]
[-160.71389771 135.26777649]
[-145.96437073 132.53799438]
[-134.85771179 122.61372375]
[-119.87990570 127.71038818]
[-105.13038635 124.98060608]
[-101.73233795 121.61956787]
[-96.18554688 120.35996246]
[-89.88988495 122.39967346]
[-75.06398010 120.12096405]
[-60.23807144 117.84225464]
[-45.42997360 115.45056152]
[-30.64054108 112.94602203]
[-15.85110950 110.44148254]
[-8.59049320 100.76316071]
[3.71323371 98.55742645]
[14.55829048 105.54414368]
[29.38419533 103.26543427]
[44.21010208 100.98671722]
[59.03600693 98.70800781]
[61.51110458 85.91728210]
[67.87535095 74.54956055]
[58.02104568 63.24059677]
[48.16674042 51.93163300]
[40.16630173 47.51522827]
[38.24999237 40.37425232]
[28.56929016 28.91632652]
[18.88858986 17.45840263]
[3.08674026 14.68692207]
[-4.47193336 0.53609204]
[2.01093602 -14.13878250]
[17.56224632 -18.08039474]
[30.25236320 -8.26507473]
[30.34651375 7.77770185]
[40.02721405 19.23562622]
[49.70791626 30.69355202]
[59.47570419 42.07732773]
[69.33000946 53.38628769]
[79.18431854 64.69525146]
[93.77390289 59.49131393]
[109.25284576 60.07378387]
[115.25621796 46.32752991]
[121.25959015 32.58127213]
[120.67399597 27.38643074]
[122.00852966 22.93309021]
[124.65830994 19.82905960]
[127.86476898 18.35352516]
[134.49055481 4.89622164]
[141.11633301 -8.56108284]
[147.74211121 -22.01838684]
[146.09849548 -40.35722351]
[161.04959106 -49.54268646]
[167.46937561 -63.09946823]
[173.88916016 -76.65625000]
[168.80764771 -91.38092041]
[175.51135254 -105.03797150]
[189.58038330 -109.79167938]
[196.00016785 -123.34845734]
[202.41996765 -136.90524292]
[201.33337402 -152.68908691]
[213.77333069 -160.88035583]
[220.19311523 -174.43713379]
[219.10653687 -190.22099304]
[231.54649353 -198.41226196]
[237.96627808 -211.96903992]
[232.41371155 -226.76580811]
[239.02633667 -241.12020874]
[253.88098145 -246.51603699]
[268.16467285 -239.75201416]
[273.40313721 -224.84114075]
[266.48849487 -210.62977600]
[251.52305603 -205.54925537]
[245.10327148 -191.99247742]
[246.64903259 -177.17829895]
[233.74989319 -168.01734924]
[227.33010864 -154.46057129]
[228.87588501 -139.64639282]
[215.97674561 -130.48545837]
[209.55696106 -116.92867279]
[203.13716125 -103.37188721]
[208.37455750 -89.47565460]
[202.05709839 -75.63570404]
[187.44595337 -70.23645782]
[181.02615356 -56.67967987]
[174.60636902 -43.12289810]
[178.37960815 -31.62728500]
[173.13893127 -20.27906036]
[161.19941711 -15.39260578]
[154.57363892 -1.93530214]
[147.94784546 11.52200222]
[141.32206726 24.97930527]
[135.00584412 38.58464432]
[129.00247192 52.33089828]
[122.99909973 66.07715607]
[135.18408203 78.98098755]
[140.77130127 95.82633209]
[138.71302795 113.45433044]
[151.74137878 120.88819122]
[164.76971436 128.32206726]
[177.79804993 135.75593567]
[190.82638550 143.18978882]
[202.85864258 133.94313049]
[217.47499084 130.01817322]
[232.44006348 131.98292542]
[245.47747803 139.50711060]
[254.61608887 151.41722107]
[258.48803711 165.87936401]
[256.53335571 180.68167114]
[269.56170654 188.11553955]
[282.59005737 195.54940796]
[295.61837769 202.98327637]
[308.64672852 210.41714478]
[321.67504883 217.85101318]
[334.70339966 225.28488159]
[347.73175049 232.71875000]
[360.76007080 240.15260315]
[375.82907104 236.20756531]
[388.93576050 243.93214417]
[392.60388184 258.32244873]
[405.63223267 265.75631714]
[422.01950073 265.13189697]
[430.52365112 279.15371704]
[422.39639282 293.39727783]
[405.99832153 293.21005249]
[398.19836426 278.78463745]
[385.17001343 271.35076904]
[370.91519165 275.51437378]
[357.59671021 268.16094971]
[353.32620239 253.18095398]
[340.29788208 245.74708557]
[327.26953125 238.31321716]
[314.24118042 230.87934875]
[301.21286011 223.44548035]
[288.18450928 216.01161194]
[275.15618896 208.57774353]
[262.12783813 201.14387512]
[249.09950256 193.71000671]
[237.35072327 202.92388916]
[222.93034363 206.94856262]
[208.02743530 205.14076233]
[194.91671753 197.74505615]
[185.61134338 185.86128235]
[181.55384827 171.28117371]
[183.39251709 156.21813965]
[170.36418152 148.78427124]
[157.33584595 141.35040283]
[144.30751038 133.91653442]
[131.27915955 126.48266602]
[116.97381592 137.30426025]
[99.41713715 140.98020935]
[96.46273804 155.68638611]
[93.50834656 170.39256287]
[90.55394745 185.09873962]
[87.59955597 199.80491638]
[89.27257538 204.75772095]
[88.91194916 209.39271545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[16 203]
[17 202]
[18 201]
[19 200]
[20 199]
[24 69]
[25 68]
[26 67]
[27 66]
[29 63]
[30 62]
[31 61]
[33 60]
[34 59]
[35 58]
[36 55]
[37 54]
[39 52]
[40 51]
[42 49]
[43 48]
[71 88]
[72 87]
[73 86]
[75 85]
[76 84]
[77 83]
[90 143]
[91 142]
[92 141]
[96 140]
[97 139]
[98 138]
[99 137]
[101 134]
[102 133]
[103 132]
[106 129]
[107 128]
[108 127]
[110 125]
[111 124]
[113 122]
[114 121]
[146 197]
[147 196]
[148 195]
[149 194]
[150 193]
[157 186]
[158 185]
[159 184]
[160 183]
[161 182]
[162 181]
[163 180]
[164 179]
[165 178]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
