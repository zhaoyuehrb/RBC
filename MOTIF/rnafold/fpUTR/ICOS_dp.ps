%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ICOS)
} def

/sequence { (\
CGAGAGCCUGAAUUCACUGUCAGCUUUGAACACUGAACGCGAGGACUGUUAACUGUUUCUGGCAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.026168530 ubox
1 28 0.322025973 ubox
1 35 0.035336153 ubox
1 48 0.007374231 ubox
1 55 0.010144795 ubox
1 61 0.009817797 ubox
2 9 0.021517705 ubox
2 15 0.019941361 ubox
2 21 0.030574218 ubox
2 26 0.018749123 ubox
2 27 0.237899404 ubox
2 34 0.034676986 ubox
2 38 0.016339724 ubox
2 47 0.005402866 ubox
2 50 0.267141961 ubox
2 54 0.006420618 ubox
2 57 0.004524124 ubox
2 59 0.013334387 ubox
2 60 0.005584649 ubox
3 9 0.019629391 ubox
3 14 0.019754046 ubox
3 18 0.003695265 ubox
3 20 0.030577383 ubox
3 25 0.020276906 ubox
3 26 0.207051015 ubox
3 27 0.656066415 ubox
3 34 0.013420884 ubox
3 47 0.022524883 ubox
3 49 0.280212954 ubox
3 50 0.017171880 ubox
3 54 0.007841645 ubox
3 56 0.004812031 ubox
3 58 0.013028524 ubox
3 60 0.012903668 ubox
4 8 0.019992207 ubox
4 13 0.017718709 ubox
4 14 0.003950221 ubox
4 15 0.031256493 ubox
4 17 0.003885628 ubox
4 21 0.005103526 ubox
4 24 0.020851909 ubox
4 25 0.130845795 ubox
4 26 0.713450633 ubox
4 27 0.029515042 ubox
4 33 0.013211332 ubox
4 46 0.024625942 ubox
4 49 0.016510497 ubox
4 50 0.004016063 ubox
4 53 0.008279933 ubox
4 57 0.012574925 ubox
4 59 0.013498381 ubox
5 13 0.005102189 ubox
5 14 0.031164243 ubox
5 18 0.030901809 ubox
5 20 0.005059531 ubox
5 25 0.737353837 ubox
5 26 0.030211217 ubox
5 27 0.004210357 ubox
5 47 0.298519062 ubox
5 54 0.005347209 ubox
5 56 0.008305104 ubox
5 58 0.012860012 ubox
6 13 0.024596724 ubox
6 17 0.030890557 ubox
6 24 0.749076911 ubox
6 25 0.027356320 ubox
6 26 0.003706289 ubox
6 46 0.303133683 ubox
6 53 0.005496963 ubox
6 57 0.010716678 ubox
6 63 0.555330844 ubox
7 23 0.531680045 ubox
7 44 0.315565629 ubox
7 62 0.555905871 ubox
8 23 0.531290810 ubox
8 43 0.315659147 ubox
8 44 0.007060873 ubox
8 61 0.554448197 ubox
9 16 0.026176216 ubox
9 19 0.003604297 ubox
9 22 0.748665417 ubox
9 39 0.006685044 ubox
9 41 0.148813143 ubox
9 42 0.280377027 ubox
9 43 0.006296502 ubox
9 61 0.003225581 ubox
10 15 0.028320381 ubox
10 18 0.003357201 ubox
10 21 0.751035016 ubox
10 38 0.030662136 ubox
10 40 0.294918111 ubox
10 57 0.005912974 ubox
10 58 0.100585428 ubox
10 59 0.536034497 ubox
10 60 0.004727678 ubox
11 20 0.727586742 ubox
11 56 0.006022148 ubox
11 57 0.113074200 ubox
11 58 0.535860142 ubox
12 20 0.142501549 ubox
12 56 0.123079674 ubox
12 57 0.516086805 ubox
13 19 0.199939415 ubox
13 30 0.003210769 ubox
13 36 0.003977253 ubox
13 37 0.339096113 ubox
13 43 0.007671160 ubox
13 52 0.028046295 ubox
13 55 0.129827445 ubox
14 29 0.003904566 ubox
14 36 0.354834588 ubox
14 42 0.009547007 ubox
14 44 0.003221910 ubox
14 51 0.027778029 ubox
15 28 0.003974759 ubox
15 35 0.356188078 ubox
15 41 0.009794257 ubox
15 43 0.003297224 ubox
15 48 0.004764309 ubox
15 55 0.269969404 ubox
16 27 0.003671032 ubox
16 34 0.352376398 ubox
16 47 0.004455592 ubox
16 49 0.043126185 ubox
16 54 0.260384318 ubox
16 56 0.140235965 ubox
17 48 0.044910658 ubox
17 55 0.140912167 ubox
18 32 0.348676161 ubox
18 39 0.008300802 ubox
18 51 0.203812435 ubox
18 64 0.048470777 ubox
19 31 0.352231333 ubox
19 33 0.004589445 ubox
19 38 0.023028169 ubox
19 46 0.047365166 ubox
19 49 0.082209728 ubox
19 50 0.184830366 ubox
19 53 0.149829194 ubox
19 63 0.052486548 ubox
19 67 0.003863592 ubox
20 29 0.251639208 ubox
20 30 0.251106258 ubox
20 32 0.003521561 ubox
20 36 0.027979299 ubox
20 37 0.016285850 ubox
20 42 0.004117414 ubox
20 44 0.003933979 ubox
20 45 0.047484491 ubox
20 48 0.003256306 ubox
20 52 0.148906913 ubox
20 62 0.052476196 ubox
20 66 0.003892737 ubox
21 28 0.352291231 ubox
21 35 0.033492802 ubox
21 41 0.004321454 ubox
21 43 0.006923077 ubox
21 44 0.046848180 ubox
21 48 0.547006428 ubox
21 61 0.052495595 ubox
22 27 0.317437939 ubox
22 34 0.033526459 ubox
22 47 0.547699389 ubox
22 50 0.006845750 ubox
22 60 0.052471905 ubox
23 33 0.033391000 ubox
23 40 0.047188769 ubox
23 46 0.547765443 ubox
23 49 0.007366565 ubox
23 56 0.003378663 ubox
23 59 0.052358484 ubox
23 63 0.026333002 ubox
24 39 0.047239725 ubox
24 43 0.008931683 ubox
24 44 0.547730948 ubox
24 48 0.007114501 ubox
24 55 0.004386300 ubox
24 62 0.026396564 ubox
25 36 0.007122210 ubox
25 37 0.026813953 ubox
25 42 0.008865542 ubox
25 43 0.547364207 ubox
25 44 0.009057858 ubox
25 45 0.007227276 ubox
25 61 0.025900048 ubox
26 35 0.008366882 ubox
26 36 0.027890947 ubox
26 37 0.036452998 ubox
26 41 0.008061535 ubox
26 42 0.547147656 ubox
26 43 0.009405368 ubox
26 44 0.007110244 ubox
27 35 0.028270091 ubox
27 36 0.040962606 ubox
27 39 0.011633277 ubox
27 41 0.546794122 ubox
27 42 0.009618856 ubox
27 43 0.006479261 ubox
27 64 0.003494940 ubox
28 34 0.025289994 ubox
28 38 0.035679227 ubox
28 40 0.543169575 ubox
28 58 0.062283579 ubox
28 59 0.016489151 ubox
28 63 0.003617789 ubox
29 50 0.008663300 ubox
29 57 0.065021351 ubox
29 58 0.013892251 ubox
30 49 0.009174568 ubox
30 56 0.066080994 ubox
30 57 0.010438874 ubox
31 48 0.009322110 ubox
31 55 0.066764339 ubox
31 61 0.005349960 ubox
32 47 0.008791852 ubox
32 54 0.064703452 ubox
32 56 0.005189116 ubox
32 60 0.005090027 ubox
33 43 0.010807498 ubox
33 44 0.008446061 ubox
33 55 0.005290946 ubox
33 62 0.005077144 ubox
34 41 0.005873510 ubox
34 42 0.010686895 ubox
34 43 0.008448698 ubox
34 51 0.007241533 ubox
34 61 0.004822978 ubox
34 64 0.015877315 ubox
35 40 0.009434596 ubox
35 50 0.006665030 ubox
35 58 0.005689546 ubox
35 59 0.007565393 ubox
35 63 0.011282958 ubox
36 49 0.004856152 ubox
36 50 0.064739095 ubox
36 57 0.006323747 ubox
36 58 0.007452006 ubox
37 49 0.066162789 ubox
37 56 0.007616009 ubox
37 57 0.006945431 ubox
38 48 0.066408199 ubox
38 55 0.008090847 ubox
38 61 0.011614066 ubox
39 47 0.055240186 ubox
39 49 0.016688543 ubox
39 54 0.006040785 ubox
39 56 0.019469186 ubox
39 60 0.011459642 ubox
39 63 0.764504138 ubox
40 48 0.017386601 ubox
40 55 0.020220430 ubox
40 61 0.014245970 ubox
40 62 0.765194480 ubox
41 47 0.015273827 ubox
41 50 0.005277458 ubox
41 54 0.011084823 ubox
41 59 0.035854495 ubox
41 60 0.015668397 ubox
42 49 0.005404645 ubox
42 50 0.003452054 ubox
42 54 0.021749462 ubox
42 58 0.034487809 ubox
42 60 0.763030580 ubox
43 49 0.003556448 ubox
43 53 0.023956853 ubox
43 54 0.006801124 ubox
43 57 0.026476860 ubox
43 58 0.072701000 ubox
43 59 0.763033705 ubox
43 60 0.011306432 ubox
44 50 0.003304098 ubox
44 53 0.008091455 ubox
44 56 0.015538046 ubox
44 57 0.434220471 ubox
44 58 0.626605856 ubox
44 59 0.013271436 ubox
45 56 0.614208492 ubox
45 57 0.455117580 ubox
45 58 0.012502864 ubox
46 55 0.749154847 ubox
47 55 0.073546578 ubox
47 64 0.082106641 ubox
48 54 0.067807902 ubox
48 56 0.013451279 ubox
48 63 0.113947136 ubox
48 67 0.022603296 ubox
49 55 0.026850062 ubox
49 62 0.113898838 ubox
49 66 0.022912195 ubox
50 61 0.113359712 ubox
50 65 0.022605599 ubox
51 57 0.005591176 ubox
51 58 0.008036222 ubox
51 60 0.111985595 ubox
52 56 0.005665145 ubox
52 57 0.008299394 ubox
53 62 0.051438308 ubox
54 61 0.050184341 ubox
54 64 0.199118215 ubox
55 60 0.028145736 ubox
55 63 0.215102872 ubox
55 67 0.055821207 ubox
56 62 0.212840949 ubox
56 65 0.007537037 ubox
56 66 0.056595410 ubox
57 61 0.156577673 ubox
57 64 0.007900432 ubox
57 65 0.056424045 ubox
57 66 0.007469511 ubox
58 64 0.052363191 ubox
58 65 0.008117341 ubox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
8 61 0.9500000 lbox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
12 57 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
showpage
end
%%EOF
