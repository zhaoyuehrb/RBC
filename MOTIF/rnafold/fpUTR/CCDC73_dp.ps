%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC73)
} def

/sequence { (\
GGUGAACCGGAAGGGCCAACAGGAGCUAGAGGCGCGCUUCGCUGAGGAAAUAAAUAUUAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.207042541 ubox
1 17 0.377543427 ubox
1 27 0.010395537 ubox
1 38 0.453079649 ubox
1 39 0.015329047 ubox
1 40 0.033729437 ubox
1 43 0.441360015 ubox
1 58 0.018432850 ubox
2 7 0.205945379 ubox
2 16 0.377886807 ubox
2 20 0.197294894 ubox
2 26 0.011023905 ubox
2 33 0.004684826 ubox
2 35 0.101787721 ubox
2 37 0.642349388 ubox
2 39 0.008022305 ubox
2 42 0.467767624 ubox
2 51 0.028618061 ubox
2 55 0.014974765 ubox
2 57 0.021226355 ubox
2 61 0.009700989 ubox
3 9 0.007096328 ubox
3 15 0.371645267 ubox
3 18 0.252763436 ubox
3 19 0.156675796 ubox
3 21 0.011764308 ubox
3 25 0.010398630 ubox
3 34 0.101760419 ubox
3 36 0.643309528 ubox
3 41 0.467478394 ubox
3 44 0.003791484 ubox
3 50 0.028918494 ubox
3 52 0.006953740 ubox
3 54 0.014921907 ubox
3 56 0.021099190 ubox
3 59 0.015714265 ubox
3 60 0.009955602 ubox
4 8 0.009250583 ubox
4 17 0.300603851 ubox
4 20 0.013001834 ubox
4 33 0.098204556 ubox
4 35 0.644433101 ubox
4 40 0.465800943 ubox
4 43 0.004452063 ubox
4 51 0.006818152 ubox
4 55 0.017408086 ubox
4 58 0.017027693 ubox
5 38 0.006758722 ubox
5 39 0.462863455 ubox
5 57 0.015949959 ubox
5 58 0.007508802 ubox
6 38 0.424585694 ubox
6 57 0.007135722 ubox
7 14 0.548931886 ubox
7 15 0.158883973 ubox
7 23 0.017630186 ubox
7 32 0.679574409 ubox
7 47 0.069065948 ubox
8 13 0.549226311 ubox
8 14 0.160668421 ubox
8 22 0.017704859 ubox
8 31 0.679656412 ubox
8 34 0.173130597 ubox
8 36 0.295961959 ubox
8 41 0.036581807 ubox
8 44 0.045873064 ubox
8 46 0.069066269 ubox
9 17 0.051084031 ubox
9 27 0.016207762 ubox
9 33 0.173637232 ubox
9 35 0.293254052 ubox
9 38 0.078182015 ubox
9 40 0.034594879 ubox
9 43 0.044332772 ubox
10 16 0.051165942 ubox
10 26 0.016621719 ubox
10 37 0.090390053 ubox
10 38 0.004555852 ubox
10 39 0.026482155 ubox
10 40 0.234409457 ubox
10 42 0.035918912 ubox
11 38 0.021685523 ubox
11 39 0.237047323 ubox
12 27 0.600251565 ubox
12 38 0.240194674 ubox
12 39 0.004879494 ubox
12 43 0.009267036 ubox
13 26 0.618613660 ubox
13 27 0.128979453 ubox
13 37 0.241430939 ubox
13 38 0.007554723 ubox
13 39 0.023963576 ubox
13 40 0.003254430 ubox
13 42 0.008771981 ubox
13 43 0.007103545 ubox
14 26 0.132897560 ubox
14 27 0.355624448 ubox
14 37 0.008510637 ubox
14 38 0.025403462 ubox
14 40 0.003842384 ubox
14 42 0.005600639 ubox
14 43 0.058897760 ubox
15 26 0.359838332 ubox
15 33 0.263102588 ubox
15 35 0.231774085 ubox
15 37 0.027807901 ubox
15 42 0.062434814 ubox
16 23 0.675817941 ubox
16 25 0.356842656 ubox
16 32 0.264390602 ubox
16 34 0.228682539 ubox
16 36 0.027548410 ubox
16 41 0.062588372 ubox
16 47 0.165087817 ubox
17 22 0.678391833 ubox
17 31 0.264794622 ubox
17 44 0.049581063 ubox
17 46 0.165288156 ubox
18 39 0.010418434 ubox
18 43 0.051054973 ubox
18 58 0.004954088 ubox
19 38 0.008611248 ubox
19 57 0.005158868 ubox
20 44 0.293180948 ubox
21 27 0.134199404 ubox
21 38 0.036410372 ubox
21 39 0.034232011 ubox
21 43 0.292282012 ubox
21 58 0.003463182 ubox
22 26 0.135355151 ubox
22 37 0.043368282 ubox
22 38 0.050444996 ubox
22 40 0.355120037 ubox
22 42 0.278079682 ubox
22 43 0.005290958 ubox
22 57 0.003455849 ubox
23 37 0.056470531 ubox
23 38 0.003480185 ubox
23 39 0.384143733 ubox
23 40 0.228699700 ubox
23 42 0.005545041 ubox
23 58 0.005201938 ubox
24 38 0.421328420 ubox
24 39 0.169296743 ubox
24 43 0.207814507 ubox
24 57 0.005022403 ubox
25 33 0.287252326 ubox
25 35 0.098605058 ubox
25 37 0.450121644 ubox
25 38 0.030201955 ubox
25 42 0.213783134 ubox
26 32 0.287500219 ubox
26 34 0.098859818 ubox
26 36 0.450233590 ubox
26 41 0.213122714 ubox
26 46 0.061592164 ubox
26 47 0.105191684 ubox
27 31 0.259135766 ubox
27 44 0.012557279 ubox
27 45 0.058455668 ubox
27 46 0.102232447 ubox
27 52 0.006448259 ubox
27 56 0.005075928 ubox
27 59 0.003266568 ubox
28 38 0.025561160 ubox
28 39 0.020731537 ubox
28 43 0.014604993 ubox
28 51 0.006704365 ubox
28 55 0.005338806 ubox
28 58 0.003334605 ubox
29 37 0.026310982 ubox
29 38 0.016191582 ubox
29 39 0.091386889 ubox
29 40 0.193418966 ubox
29 42 0.013921473 ubox
29 58 0.004082937 ubox
30 38 0.097922977 ubox
30 39 0.194321598 ubox
30 43 0.035463998 ubox
30 57 0.004205063 ubox
31 37 0.099967896 ubox
31 38 0.193631232 ubox
31 40 0.013491887 ubox
31 42 0.025951348 ubox
31 43 0.134918492 ubox
32 37 0.192224185 ubox
32 39 0.010726994 ubox
32 42 0.141541778 ubox
33 41 0.143591461 ubox
33 44 0.016058079 ubox
34 40 0.139259938 ubox
34 42 0.112372817 ubox
34 43 0.006258033 ubox
35 41 0.112658759 ubox
35 44 0.006158110 ubox
36 40 0.105425459 ubox
36 42 0.025902388 ubox
36 43 0.003406037 ubox
37 41 0.025772994 ubox
37 46 0.024583754 ubox
37 47 0.093995235 ubox
38 45 0.025921034 ubox
38 46 0.101755866 ubox
38 47 0.007774955 ubox
38 48 0.167056601 ubox
38 49 0.343985867 ubox
38 50 0.019571274 ubox
38 53 0.005294605 ubox
38 54 0.003744089 ubox
39 44 0.023908092 ubox
39 45 0.112375581 ubox
39 46 0.010084025 ubox
39 47 0.203152086 ubox
39 48 0.478190035 ubox
39 49 0.020946384 ubox
39 52 0.004340987 ubox
39 53 0.003893140 ubox
40 44 0.112582080 ubox
40 46 0.218161011 ubox
40 47 0.490349091 ubox
43 52 0.023549110 ubox
43 56 0.008020120 ubox
43 59 0.068705561 ubox
44 51 0.022441075 ubox
44 55 0.008097529 ubox
44 58 0.076618694 ubox
45 57 0.076443551 ubox
45 58 0.025659800 ubox
46 57 0.026518407 ubox
46 58 0.012237809 ubox
47 57 0.009575954 ubox
47 58 0.055877286 ubox
48 57 0.056875156 ubox
48 58 0.030849586 ubox
49 57 0.030281323 ubox
49 58 0.105273264 ubox
50 57 0.110604852 ubox
50 61 0.036594903 ubox
51 56 0.103598467 ubox
51 59 0.082794631 ubox
51 60 0.040348686 ubox
52 58 0.086922297 ubox
53 57 0.066966234 ubox
54 61 0.034432566 ubox
55 60 0.036690048 ubox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
7 32 0.9500000 lbox
8 31 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
showpage
end
%%EOF
