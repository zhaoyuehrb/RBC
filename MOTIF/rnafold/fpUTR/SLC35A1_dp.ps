%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC35A1)
} def

/sequence { (\
ACAAGGGGCGGUCCCCGGUGUCCUGCGCGGGGGCGCGGAGGGGGCGGGCGUCAGUUCCGCGGGGGGCUGUCGGGGAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.009612573 ubox
2 11 0.018089455 ubox
5 14 0.007815869 ubox
5 15 0.006833101 ubox
5 16 0.017423217 ubox
5 52 0.038325101 ubox
5 71 0.005453768 ubox
5 79 0.043697277 ubox
6 13 0.007968520 ubox
6 14 0.007675506 ubox
6 15 0.017606181 ubox
6 51 0.038187916 ubox
6 52 0.003573493 ubox
6 71 0.017930667 ubox
6 78 0.043726593 ubox
6 79 0.056564654 ubox
7 12 0.007447300 ubox
7 13 0.007710759 ubox
7 14 0.017668759 ubox
7 52 0.025374134 ubox
7 70 0.012731702 ubox
7 71 0.275340624 ubox
7 78 0.056370006 ubox
7 79 0.167138955 ubox
8 12 0.005039763 ubox
8 13 0.017386305 ubox
8 49 0.039445597 ubox
8 51 0.025595897 ubox
8 70 0.276829982 ubox
8 78 0.168873590 ubox
9 48 0.039432062 ubox
9 50 0.025643735 ubox
9 69 0.277309832 ubox
10 49 0.025105618 ubox
10 68 0.277118215 ubox
10 79 0.918555604 ubox
11 45 0.040213182 ubox
11 49 0.004855215 ubox
11 67 0.277321170 ubox
11 78 0.925184387 ubox
12 44 0.040238625 ubox
12 47 0.008083661 ubox
12 48 0.005678014 ubox
12 65 0.023981573 ubox
12 66 0.276099760 ubox
12 75 0.005204181 ubox
12 76 0.696674342 ubox
12 77 0.653355756 ubox
13 43 0.040270743 ubox
13 46 0.008111674 ubox
13 47 0.005794689 ubox
13 48 0.007143281 ubox
13 64 0.034021832 ubox
13 65 0.275142788 ubox
13 66 0.006670770 ubox
13 74 0.006366380 ubox
13 75 0.959086209 ubox
14 42 0.040272161 ubox
14 44 0.007902372 ubox
14 46 0.005773813 ubox
14 47 0.007049593 ubox
14 48 0.021671986 ubox
14 63 0.041606612 ubox
14 64 0.274105238 ubox
14 65 0.006702682 ubox
14 73 0.006309086 ubox
14 74 0.959175106 ubox
14 75 0.016598173 ubox
15 41 0.040268264 ubox
15 43 0.007919751 ubox
15 46 0.006881024 ubox
15 47 0.022572003 ubox
15 48 0.021482228 ubox
15 62 0.047999499 ubox
15 63 0.273050607 ubox
15 64 0.006733106 ubox
15 73 0.959003643 ubox
15 74 0.016433239 ubox
16 40 0.040191416 ubox
16 42 0.007912895 ubox
16 46 0.023198198 ubox
16 47 0.041196861 ubox
16 61 0.053618733 ubox
16 62 0.271666925 ubox
16 63 0.006753631 ubox
16 72 0.958322052 ubox
16 73 0.016140929 ubox
17 23 0.003660463 ubox
17 45 0.017728105 ubox
17 58 0.004545126 ubox
17 60 0.053484816 ubox
17 68 0.003887293 ubox
17 71 0.956450119 ubox
18 22 0.003931502 ubox
18 28 0.003652318 ubox
18 34 0.006923634 ubox
18 36 0.033183702 ubox
18 45 0.159976591 ubox
18 60 0.136783578 ubox
18 67 0.007849384 ubox
18 70 0.917550856 ubox
19 27 0.003668694 ubox
19 33 0.007134298 ubox
19 35 0.033324930 ubox
19 44 0.162886057 ubox
19 46 0.005449913 ubox
19 59 0.132518330 ubox
19 61 0.006339783 ubox
19 66 0.007827490 ubox
19 69 0.273898839 ubox
20 26 0.003678280 ubox
20 34 0.036820114 ubox
20 45 0.020557238 ubox
20 58 0.112139722 ubox
20 60 0.004699744 ubox
20 67 0.952351835 ubox
20 68 0.008178642 ubox
21 25 0.003441276 ubox
21 31 0.007114687 ubox
21 32 0.003255857 ubox
21 33 0.037014481 ubox
21 39 0.046403716 ubox
21 41 0.023396059 ubox
21 42 0.242107694 ubox
21 43 0.020823420 ubox
21 44 0.020315929 ubox
21 59 0.004211663 ubox
21 64 0.007291118 ubox
21 65 0.003518042 ubox
21 66 0.952582346 ubox
22 30 0.007216957 ubox
22 31 0.004201700 ubox
22 32 0.037219192 ubox
22 38 0.048005036 ubox
22 40 0.041193914 ubox
22 41 0.286331694 ubox
22 42 0.024522785 ubox
22 43 0.019923059 ubox
22 63 0.007359653 ubox
22 64 0.004360291 ubox
22 65 0.953014461 ubox
22 66 0.004646909 ubox
23 29 0.007212457 ubox
23 30 0.004326681 ubox
23 31 0.037205812 ubox
23 37 0.047330093 ubox
23 38 0.066700623 ubox
23 40 0.287144302 ubox
23 41 0.022075056 ubox
23 42 0.019245649 ubox
23 62 0.007356115 ubox
23 63 0.004993151 ubox
23 64 0.953030503 ubox
23 65 0.004084438 ubox
24 29 0.004159860 ubox
24 30 0.036876209 ubox
24 37 0.068556107 ubox
24 39 0.286225158 ubox
24 40 0.018458079 ubox
24 41 0.016657263 ubox
24 61 0.007195729 ubox
24 62 0.005025703 ubox
24 63 0.949938278 ubox
24 64 0.003370965 ubox
25 36 0.086877933 ubox
25 60 0.007141267 ubox
26 35 0.086903510 ubox
26 37 0.287282632 ubox
26 59 0.007123284 ubox
26 61 0.952890461 ubox
27 34 0.087147816 ubox
27 36 0.287378691 ubox
27 58 0.006666114 ubox
27 60 0.953019465 ubox
28 33 0.087121745 ubox
28 35 0.287376708 ubox
28 59 0.953018308 ubox
29 34 0.286091447 ubox
29 57 0.009481785 ubox
29 58 0.952792532 ubox
30 52 0.045652486 ubox
30 55 0.005739008 ubox
30 56 0.011344010 ubox
30 57 0.951067972 ubox
30 58 0.018267920 ubox
31 51 0.136340107 ubox
31 52 0.082958142 ubox
31 55 0.055418613 ubox
31 56 0.906184424 ubox
31 57 0.025783730 ubox
32 51 0.081353871 ubox
32 52 0.872179526 ubox
32 55 0.328452322 ubox
32 56 0.022912173 ubox
33 45 0.004136968 ubox
33 49 0.274845693 ubox
33 51 0.910156610 ubox
33 55 0.022533768 ubox
34 44 0.004139244 ubox
34 46 0.032092099 ubox
34 48 0.274900379 ubox
34 50 0.911012762 ubox
34 54 0.024685828 ubox
34 61 0.008490509 ubox
35 45 0.036873805 ubox
35 49 0.910917398 ubox
35 51 0.036780331 ubox
35 60 0.020076531 ubox
36 44 0.037229797 ubox
36 46 0.280716098 ubox
36 48 0.908887281 ubox
36 50 0.038148056 ubox
36 59 0.020234712 ubox
37 45 0.308553222 ubox
37 49 0.038086110 ubox
37 58 0.021052192 ubox
38 52 0.004467937 ubox
38 57 0.021099921 ubox
39 51 0.004422718 ubox
39 56 0.021063507 ubox
40 55 0.019735417 ubox
40 58 0.005391869 ubox
41 57 0.005177000 ubox
41 58 0.064049817 ubox
42 56 0.004576635 ubox
42 57 0.085294136 ubox
42 58 0.012679914 ubox
43 52 0.044898281 ubox
43 56 0.086169193 ubox
43 57 0.013374802 ubox
43 58 0.010034796 ubox
44 51 0.045266455 ubox
44 55 0.087238833 ubox
44 56 0.009867810 ubox
44 57 0.009933127 ubox
44 60 0.210565362 ubox
45 50 0.045284459 ubox
45 54 0.087736532 ubox
45 59 0.213056919 ubox
46 52 0.016980679 ubox
46 57 0.113587069 ubox
46 58 0.222527977 ubox
46 60 0.005969321 ubox
47 51 0.011348078 ubox
47 56 0.116667424 ubox
47 57 0.221952304 ubox
47 58 0.012714055 ubox
47 70 0.003630275 ubox
47 71 0.008422092 ubox
48 55 0.190937071 ubox
48 56 0.159439810 ubox
48 57 0.012691540 ubox
48 60 0.062932996 ubox
48 70 0.009992135 ubox
49 54 0.243249204 ubox
49 59 0.063013955 ubox
49 61 0.012533409 ubox
49 69 0.008589978 ubox
49 72 0.048113674 ubox
50 58 0.062277377 ubox
50 60 0.012676101 ubox
50 68 0.004191970 ubox
50 70 0.018914298 ubox
50 71 0.062834552 ubox
51 59 0.012395815 ubox
52 69 0.110416056 ubox
53 68 0.111448654 ubox
54 67 0.111639704 ubox
54 78 0.046127731 ubox
55 66 0.111523219 ubox
55 77 0.046257210 ubox
56 65 0.111228313 ubox
56 74 0.004142644 ubox
56 76 0.046320024 ubox
57 64 0.111539682 ubox
57 65 0.004477646 ubox
57 73 0.004631119 ubox
57 75 0.046331584 ubox
58 63 0.111503104 ubox
58 64 0.004486813 ubox
58 72 0.004698782 ubox
58 74 0.046317584 ubox
59 70 0.009540382 ubox
59 71 0.004814906 ubox
60 69 0.010909368 ubox
60 72 0.045783869 ubox
61 68 0.011119981 ubox
61 71 0.045581474 ubox
62 67 0.011584269 ubox
62 68 0.003384875 ubox
62 70 0.043338789 ubox
62 71 0.003521425 ubox
63 67 0.004082872 ubox
63 70 0.004618922 ubox
72 79 0.227928737 ubox
73 78 0.229475078 ubox
73 79 0.028714342 ubox
74 78 0.028623281 ubox
10 79 0.9500000 lbox
11 78 0.9500000 lbox
12 77 0.9500000 lbox
13 75 0.9500000 lbox
14 74 0.9500000 lbox
15 73 0.9500000 lbox
16 72 0.9500000 lbox
17 71 0.9500000 lbox
18 70 0.9500000 lbox
20 67 0.9500000 lbox
21 66 0.9500000 lbox
22 65 0.9500000 lbox
23 64 0.9500000 lbox
24 63 0.9500000 lbox
26 61 0.9500000 lbox
27 60 0.9500000 lbox
28 59 0.9500000 lbox
29 58 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
showpage
end
%%EOF
