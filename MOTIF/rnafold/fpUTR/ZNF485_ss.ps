%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUUCCGCUUCCGGUCCAGCCUGUCUCCGCGUGGUGCGAGCGCUGCACCAGCCCCUGGCUGGUGGUUACUGUCCGAACGGCGUGGUGUGGUCGCUGACUCUCUGGGCGUGCAGCUCCGCAGCCCUGCCGGCUCGGUUCGGUUCGUGAGCGGCCGGGAUUGACUUACGCAGGAUUCUCAGCCCUUGCCUGGGAGAACAGUUCAGGAGACAG\
) } def
/len { sequence length } bind def

/coor [
[74.07838440 270.63128662]
[75.23608398 285.68032837]
[70.55660248 299.98730469]
[60.78261185 311.38177490]
[47.42715836 318.14767456]
[32.53947067 319.28173828]
[27.94651794 333.56124878]
[23.35356331 347.84078979]
[27.33770752 363.74859619]
[15.36664391 374.95687866]
[-0.24482301 369.93551636]
[-3.43695426 353.85003662]
[9.07404041 343.24783325]
[13.66699505 328.96829224]
[18.25994873 314.68878174]
[6.82503653 305.08816528]
[-0.08172175 291.80499268]
[-1.38021529 276.84912109]
[3.15844989 262.49682617]
[12.87234306 250.94459534]
[26.30505562 243.97285461]
[41.42399979 242.67160034]
[46.01695251 228.39207458]
[50.60990906 214.11254883]
[55.20286179 199.83303833]
[59.79581451 185.55351257]
[64.38877106 171.27398682]
[68.98171997 156.99446106]
[73.57467651 142.71493530]
[62.13976669 133.00706482]
[48.79491043 139.85650635]
[35.45005417 146.70594788]
[22.10519600 153.55538940]
[18.80932617 168.84169006]
[6.42705154 178.39225769]
[-9.19509506 177.69760132]
[-20.68081284 167.08570862]
[-22.60689926 151.56718445]
[-14.06391335 138.46942139]
[0.91440719 133.97677612]
[15.25575829 140.21052551]
[28.60061455 133.36108398]
[41.94546890 126.51165009]
[55.29032516 119.66221619]
[54.95813751 114.11938477]
[55.28401947 108.74928284]
[56.22526169 103.62731171]
[41.28451538 102.29537201]
[26.34376717 100.96343231]
[11.40301895 99.63149261]
[-3.53772831 98.29956055]
[-18.47847557 96.96762085]
[-33.41922379 95.63568115]
[-48.35997009 94.30374146]
[-64.67342377 98.91974640]
[-73.62505341 84.52166748]
[-62.26770782 71.93408966]
[-47.02803421 79.36299133]
[-32.08728409 80.69493103]
[-17.14653778 82.02687073]
[-2.20578980 83.35881042]
[12.73495770 84.69075012]
[27.67570496 86.02268982]
[42.61645126 87.35462189]
[57.55720139 88.68656158]
[62.35864639 77.36123657]
[70.11221313 67.81140900]
[80.20980072 60.78606033]
[91.85948944 56.83615875]
[91.63721466 41.83780670]
[91.41493988 26.83945274]
[91.19266510 11.84109974]
[81.38604736 -3.74494100]
[90.52669525 -18.72582626]
[90.08219147 -33.71923828]
[89.63769531 -48.71265030]
[89.19319153 -63.70606232]
[79.15668488 -79.14507294]
[88.07434082 -94.25976562]
[87.40771484 -109.24494171]
[86.74108124 -124.23012543]
[86.07445526 -139.21530151]
[85.40782928 -154.20048523]
[77.06486511 -167.64315796]
[84.22889709 -180.70172119]
[83.56227112 -195.68688965]
[82.78462982 -210.66673279]
[81.89602661 -225.64038086]
[81.00741577 -240.61404419]
[80.11880493 -255.58769226]
[79.23019409 -270.56134033]
[70.12167358 -279.69287109]
[69.68940735 -292.18225098]
[77.62006378 -301.31570435]
[76.95343018 -316.30087280]
[76.28680420 -331.28604126]
[75.62017822 -346.27124023]
[74.84253693 -361.25106812]
[73.95392609 -376.22470093]
[65.41268158 -389.54229736]
[72.38242340 -402.70556641]
[71.49381256 -417.67922974]
[64.51977539 -433.13235474]
[77.43837738 -444.11169434]
[91.56487274 -434.73733521]
[86.46746826 -418.56784058]
[87.35607910 -403.59417725]
[95.83376312 -391.34762573]
[88.92758179 -377.11331177]
[89.81619263 -362.13967896]
[93.35012817 -355.64932251]
[90.60535431 -346.93786621]
[91.27198792 -331.95266724]
[91.93861389 -316.96749878]
[92.60523987 -301.98233032]
[102.82978821 -287.71917725]
[94.20384979 -271.44995117]
[95.09246063 -256.47628784]
[95.98107147 -241.50263977]
[96.86968231 -226.52899170]
[97.75828552 -211.55532837]
[101.29222870 -205.06498718]
[98.54745483 -196.35353088]
[99.21408081 -181.36834717]
[107.50936127 -168.99751282]
[100.39300537 -154.86711121]
[101.05963898 -139.88192749]
[101.72626495 -124.89675140]
[102.39289093 -109.91156769]
[103.05951691 -94.92639160]
[111.76985931 -86.53324127]
[112.44830322 -74.05480957]
[104.18660736 -64.15056610]
[104.63110352 -49.15715027]
[105.07560730 -34.16373825]
[105.52010345 -19.17032623]
[114.10511017 -10.64902496]
[114.59857941 1.83808744]
[106.19102478 11.61882496]
[106.41329956 26.61717796]
[106.63557434 41.61553192]
[106.85784149 56.61388397]
[128.74053955 64.66018677]
[144.12004089 83.29160309]
[148.14956665 107.96779633]
[162.82791138 111.05747223]
[177.50625610 114.14715576]
[192.18460083 117.23683167]
[206.86296082 120.32651520]
[215.90438843 119.03187561]
[221.73518372 123.57225800]
[236.36613464 126.87910461]
[250.99708557 130.18595886]
[266.16345215 125.68135834]
[276.87185669 136.03410339]
[291.50280762 139.34095764]
[306.13375854 142.64779663]
[320.76470947 145.95465088]
[330.42013550 136.11839294]
[343.57058716 132.36706543]
[356.75201416 135.57760620]
[366.54693604 144.80755615]
[370.47036743 157.56834412]
[385.05072021 161.09162903]
[399.43643188 153.99018860]
[413.89608765 160.93988037]
[417.33746338 176.60948181]
[407.12060547 188.97862244]
[391.08306885 188.55876160]
[381.52743530 175.67196655]
[366.94708252 172.14868164]
[354.79556274 183.18634033]
[338.29412842 184.82221985]
[323.92681885 176.21446228]
[317.45788574 160.58560181]
[302.82693481 157.27874756]
[288.19595337 153.97190857]
[273.56500244 150.66505432]
[259.44512939 155.40618896]
[247.69023132 144.81690979]
[233.05928040 141.51005554]
[218.42832947 138.20321655]
[203.77326965 135.00485229]
[189.09492493 131.91517639]
[174.41658020 128.82550049]
[159.73823547 125.73582458]
[145.05989075 122.64614105]
[136.40573120 134.89790344]
[144.22425842 147.69911194]
[152.04277039 160.50030518]
[167.46183777 163.96842957]
[175.84172058 177.36817932]
[172.21076965 192.74971008]
[158.72317505 200.98745728]
[143.38088989 197.19409180]
[135.28620911 183.62014771]
[139.24156189 168.31883240]
[131.42304993 155.51762390]
[123.60453033 142.71641541]
[116.90243530 145.79205322]
[109.81238556 147.82321167]
[102.49611664 148.76319885]
[95.12060547 148.59022522]
[87.85420227 147.30789185]
[83.26124573 161.58741760]
[78.66828918 175.86694336]
[74.07534027 190.14646912]
[69.48238373 204.42599487]
[64.88942719 218.70550537]
[60.29647446 232.98503113]
[55.70352173 247.26455688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 15]
[7 14]
[8 13]
[22 211]
[23 210]
[24 209]
[25 208]
[26 207]
[27 206]
[28 205]
[29 204]
[30 44]
[31 43]
[32 42]
[33 41]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[54 58]
[69 142]
[70 141]
[71 140]
[72 139]
[74 136]
[75 135]
[76 134]
[77 133]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[85 124]
[86 123]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[94 115]
[95 114]
[96 113]
[97 112]
[98 110]
[99 109]
[101 107]
[102 106]
[145 187]
[146 186]
[147 185]
[148 184]
[149 183]
[151 182]
[152 181]
[153 180]
[155 178]
[156 177]
[157 176]
[158 175]
[163 171]
[164 170]
[188 199]
[189 198]
[190 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
