%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TSPAN7)
} def

/sequence { (\
GCCUCUUCCCCCUCCCGCGCGCCCGCCCGCCGCCUGCCGCCGCCGCCGCCGCCGCCGGAGCUCUGUAGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.012842133 ubox
1 20 0.008595812 ubox
1 61 0.057019924 ubox
1 66 0.040953810 ubox
1 69 0.090603755 ubox
2 17 0.012831405 ubox
2 19 0.008587666 ubox
2 60 0.050448790 ubox
2 65 0.042354092 ubox
2 68 0.096581236 ubox
3 58 0.003643289 ubox
3 60 0.014382091 ubox
3 68 0.231675287 ubox
4 59 0.017267338 ubox
4 67 0.225124548 ubox
5 57 0.003222831 ubox
5 58 0.016491779 ubox
5 60 0.006830588 ubox
5 68 0.336110026 ubox
6 57 0.014299271 ubox
6 59 0.006138050 ubox
6 60 0.011981249 ubox
6 67 0.335531000 ubox
6 68 0.032796786 ubox
7 58 0.004555571 ubox
7 59 0.017424613 ubox
7 67 0.036544790 ubox
8 57 0.004469517 ubox
8 58 0.017809769 ubox
9 57 0.017707657 ubox
9 58 0.004128070 ubox
10 57 0.004266787 ubox
10 58 0.005463531 ubox
11 57 0.005477810 ubox
11 58 0.008638564 ubox
12 57 0.008666384 ubox
12 58 0.004017401 ubox
12 60 0.981693126 ubox
12 68 0.009934105 ubox
13 57 0.003926274 ubox
13 59 0.994715466 ubox
13 67 0.009368818 ubox
14 58 0.994637865 ubox
15 57 0.992639514 ubox
15 58 0.078904619 ubox
16 29 0.005657047 ubox
16 32 0.016752648 ubox
16 51 0.009050613 ubox
16 54 0.073920630 ubox
16 57 0.095378915 ubox
16 65 0.005561138 ubox
17 26 0.014098470 ubox
17 28 0.006324026 ubox
17 30 0.006831900 ubox
17 31 0.017844210 ubox
17 33 0.058720834 ubox
17 40 0.018850614 ubox
17 41 0.003236505 ubox
17 43 0.003182912 ubox
17 49 0.005100582 ubox
17 50 0.008841407 ubox
17 52 0.045628862 ubox
17 53 0.070668043 ubox
17 55 0.987176753 ubox
17 56 0.099523376 ubox
17 64 0.005392874 ubox
17 66 0.025223041 ubox
17 69 0.009975022 ubox
18 25 0.014137821 ubox
18 29 0.006949460 ubox
18 32 0.058941029 ubox
18 39 0.018996708 ubox
18 42 0.003247205 ubox
18 48 0.005521376 ubox
18 51 0.052966683 ubox
18 54 0.988612063 ubox
18 65 0.025940539 ubox
18 68 0.010655947 ubox
19 24 0.013494504 ubox
19 26 0.009791444 ubox
19 28 0.006408899 ubox
19 30 0.029967445 ubox
19 31 0.055889139 ubox
19 33 0.011151426 ubox
19 37 0.004212073 ubox
19 38 0.019149374 ubox
19 40 0.005662660 ubox
19 46 0.004173125 ubox
19 47 0.005039048 ubox
19 49 0.028028615 ubox
19 50 0.051428867 ubox
19 52 0.448777172 ubox
19 53 0.882630287 ubox
19 55 0.093215551 ubox
19 61 0.012244389 ubox
19 64 0.025397622 ubox
19 66 0.012113892 ubox
19 69 0.004776111 ubox
20 25 0.009945464 ubox
20 29 0.035545713 ubox
20 32 0.011378425 ubox
20 36 0.004564277 ubox
20 39 0.006123983 ubox
20 45 0.004926291 ubox
20 48 0.032771277 ubox
20 51 0.630933775 ubox
20 54 0.093227040 ubox
20 60 0.012248319 ubox
20 65 0.012621609 ubox
20 68 0.005101830 ubox
21 28 0.034512281 ubox
21 30 0.054287776 ubox
21 31 0.008404501 ubox
21 33 0.003309749 ubox
21 35 0.004248310 ubox
21 37 0.023282570 ubox
21 38 0.004695773 ubox
21 43 0.003838518 ubox
21 44 0.004619294 ubox
21 46 0.010065834 ubox
21 47 0.032095767 ubox
21 49 0.268756333 ubox
21 50 0.581054713 ubox
21 52 0.753420461 ubox
21 53 0.085476353 ubox
21 61 0.029648117 ubox
21 64 0.010692377 ubox
21 66 0.007942638 ubox
22 29 0.054764079 ubox
22 32 0.003345865 ubox
22 36 0.023662018 ubox
22 42 0.004235092 ubox
22 45 0.012111720 ubox
22 48 0.359177494 ubox
22 51 0.753014981 ubox
22 58 0.008432294 ubox
22 60 0.029660533 ubox
22 65 0.008192854 ubox
23 57 0.008370722 ubox
23 58 0.029996551 ubox
24 32 0.008875091 ubox
24 42 0.006998751 ubox
24 45 0.083898190 ubox
24 48 0.409330318 ubox
24 51 0.043693425 ubox
24 57 0.030021083 ubox
25 31 0.009009887 ubox
25 33 0.039663028 ubox
25 37 0.003922554 ubox
25 40 0.010709735 ubox
25 41 0.006592578 ubox
25 43 0.031400262 ubox
25 44 0.082959781 ubox
25 46 0.603175737 ubox
25 47 0.376843708 ubox
25 49 0.659770108 ubox
25 50 0.061059211 ubox
25 52 0.052104759 ubox
25 55 0.009524543 ubox
25 56 0.029494958 ubox
25 61 0.021352043 ubox
26 32 0.039680328 ubox
26 36 0.003971456 ubox
26 39 0.011077556 ubox
26 42 0.034607807 ubox
26 45 0.625245094 ubox
26 48 0.660035749 ubox
26 51 0.052091280 ubox
26 54 0.010709892 ubox
26 58 0.008142522 ubox
26 60 0.021381213 ubox
27 57 0.008204559 ubox
27 58 0.022770578 ubox
28 39 0.013461762 ubox
28 42 0.098791929 ubox
28 45 0.269120124 ubox
28 48 0.043968174 ubox
28 51 0.006573462 ubox
28 54 0.007401520 ubox
28 57 0.022788706 ubox
29 37 0.019885342 ubox
29 38 0.011876174 ubox
29 40 0.056763067 ubox
29 41 0.096742220 ubox
29 43 0.747784521 ubox
29 44 0.218569673 ubox
29 46 0.594162196 ubox
29 47 0.044869527 ubox
29 49 0.096639519 ubox
29 50 0.008700119 ubox
29 52 0.014362090 ubox
29 53 0.007267982 ubox
29 55 0.031948616 ubox
29 56 0.018964338 ubox
29 61 0.007067601 ubox
30 36 0.020966681 ubox
30 39 0.059665487 ubox
30 42 0.765186612 ubox
30 45 0.594655000 ubox
30 48 0.096744881 ubox
30 51 0.014312790 ubox
30 54 0.034310386 ubox
30 58 0.003869342 ubox
30 60 0.007069490 ubox
31 39 0.095526284 ubox
31 42 0.146262751 ubox
31 45 0.043987973 ubox
31 48 0.008979784 ubox
31 51 0.006865485 ubox
31 54 0.013285183 ubox
31 57 0.003943276 ubox
32 38 0.094643178 ubox
32 40 0.771022958 ubox
32 41 0.125550014 ubox
32 43 0.593358739 ubox
32 44 0.045756661 ubox
32 46 0.100891229 ubox
32 47 0.009720491 ubox
32 49 0.015017858 ubox
32 50 0.007504475 ubox
32 52 0.038216209 ubox
32 53 0.012193750 ubox
32 55 0.003378742 ubox
32 56 0.003966131 ubox
32 61 0.009999421 ubox
33 39 0.774793842 ubox
33 42 0.593919705 ubox
33 45 0.100938517 ubox
33 48 0.015037285 ubox
33 51 0.038630372 ubox
33 54 0.003432780 ubox
33 58 0.015459081 ubox
33 60 0.009913268 ubox
34 57 0.017121921 ubox
34 58 0.012579080 ubox
34 60 0.008340173 ubox
34 68 0.035038876 ubox
35 42 0.012960951 ubox
35 57 0.012533095 ubox
35 59 0.008558697 ubox
35 67 0.035287328 ubox
36 41 0.043158331 ubox
36 43 0.109395860 ubox
36 44 0.004658789 ubox
36 46 0.013500637 ubox
36 47 0.004346143 ubox
36 49 0.054733634 ubox
36 50 0.003821258 ubox
36 52 0.008275707 ubox
36 55 0.048378204 ubox
36 56 0.010826289 ubox
36 61 0.007735829 ubox
36 66 0.035311083 ubox
37 42 0.109303063 ubox
37 45 0.012873547 ubox
37 48 0.054861885 ubox
37 51 0.008221986 ubox
37 54 0.049202966 ubox
37 58 0.012688099 ubox
37 60 0.007707711 ubox
37 65 0.035217006 ubox
38 45 0.007394617 ubox
38 48 0.003826008 ubox
38 51 0.003286989 ubox
38 54 0.006699161 ubox
38 57 0.012809129 ubox
39 44 0.008270070 ubox
39 46 0.055946861 ubox
39 47 0.003418523 ubox
39 49 0.009327920 ubox
39 50 0.003946429 ubox
39 52 0.052257877 ubox
39 53 0.005508400 ubox
39 55 0.005664479 ubox
39 56 0.012379416 ubox
39 61 0.031083555 ubox
40 45 0.055895525 ubox
40 48 0.008898585 ubox
40 51 0.052417467 ubox
40 54 0.006323315 ubox
40 58 0.014107947 ubox
40 60 0.030811767 ubox
41 48 0.006072802 ubox
41 51 0.003896073 ubox
41 54 0.009169879 ubox
41 57 0.014857495 ubox
42 47 0.006566973 ubox
42 49 0.053706923 ubox
42 50 0.003439063 ubox
42 52 0.006976207 ubox
42 53 0.009150571 ubox
42 55 0.022547658 ubox
42 56 0.011751928 ubox
42 61 0.007402497 ubox
43 48 0.053666456 ubox
43 51 0.006761562 ubox
43 54 0.024410537 ubox
43 58 0.032691335 ubox
43 60 0.007327500 ubox
44 51 0.008743144 ubox
44 54 0.006686424 ubox
44 57 0.032764141 ubox
45 50 0.008961808 ubox
45 52 0.025889466 ubox
45 53 0.005233423 ubox
45 55 0.005459936 ubox
45 56 0.032242596 ubox
46 51 0.026187133 ubox
46 54 0.006850760 ubox
46 58 0.007706291 ubox
47 54 0.028949607 ubox
47 57 0.007725870 ubox
48 53 0.027703283 ubox
48 55 0.014929922 ubox
48 56 0.005977987 ubox
49 54 0.015710764 ubox
49 58 0.003730205 ubox
50 57 0.003803466 ubox
51 56 0.003693717 ubox
56 65 0.007474375 ubox
57 64 0.007613049 ubox
58 63 0.007616475 ubox
60 66 0.022037016 ubox
60 69 0.063979216 ubox
61 65 0.034937942 ubox
61 68 0.154292263 ubox
62 67 0.139723717 ubox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
showpage
end
%%EOF
