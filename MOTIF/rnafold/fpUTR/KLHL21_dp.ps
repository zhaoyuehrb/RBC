%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KLHL21)
} def

/sequence { (\
AUUUAUAGCAGCGGUGCCUAGCGCGCCGCGUCUCUCCGCAGGCCCCGGCCGCGGCGUCCUCGACAACCUAUCGAAGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.005952487 ubox
2 8 0.011078766 ubox
2 30 0.006499955 ubox
3 7 0.013212738 ubox
3 10 0.011382486 ubox
4 10 0.010504585 ubox
4 20 0.010517278 ubox
5 19 0.010555294 ubox
5 31 0.020296651 ubox
6 20 0.034601877 ubox
6 30 0.021041680 ubox
7 19 0.036512849 ubox
7 33 0.556871199 ubox
7 35 0.166515814 ubox
8 15 0.003216443 ubox
8 17 0.065143457 ubox
8 18 0.026250135 ubox
8 29 0.016505995 ubox
8 31 0.509697570 ubox
8 32 0.598884542 ubox
8 34 0.178552996 ubox
8 39 0.017137353 ubox
8 49 0.013356890 ubox
8 52 0.103026295 ubox
8 55 0.004052844 ubox
8 78 0.003268294 ubox
8 80 0.037656546 ubox
9 14 0.003405405 ubox
9 16 0.070133983 ubox
9 28 0.016299303 ubox
9 30 0.580314177 ubox
9 38 0.017039356 ubox
9 48 0.013358237 ubox
9 51 0.103040473 ubox
9 54 0.003962390 ubox
9 77 0.003214621 ubox
9 79 0.036749042 ubox
10 15 0.067250886 ubox
10 33 0.021976519 ubox
10 35 0.006188565 ubox
11 17 0.007324422 ubox
11 22 0.005082764 ubox
11 24 0.004665216 ubox
11 26 0.015460858 ubox
11 29 0.991861816 ubox
11 32 0.010515526 ubox
11 39 0.009313842 ubox
11 49 0.066836071 ubox
11 52 0.053739796 ubox
12 16 0.007368058 ubox
12 21 0.005091534 ubox
12 23 0.004670543 ubox
12 25 0.015447050 ubox
12 28 0.992556616 ubox
12 38 0.009322380 ubox
12 47 0.050368780 ubox
12 48 0.049153910 ubox
12 51 0.053801432 ubox
13 22 0.004650921 ubox
13 24 0.011787571 ubox
13 27 0.992795983 ubox
13 37 0.009325357 ubox
13 45 0.016126471 ubox
13 46 0.067697939 ubox
13 50 0.052289746 ubox
13 81 0.032993660 ubox
14 22 0.004929399 ubox
14 24 0.019041511 ubox
14 26 0.992805469 ubox
14 36 0.009318352 ubox
14 44 0.016530667 ubox
14 45 0.067559336 ubox
14 49 0.050413545 ubox
14 80 0.033235497 ubox
15 21 0.004923317 ubox
15 23 0.022168420 ubox
15 25 0.992399328 ubox
15 47 0.003206616 ubox
15 48 0.049452648 ubox
15 79 0.033223276 ubox
16 22 0.027051757 ubox
16 24 0.992818136 ubox
16 43 0.081076743 ubox
16 49 0.006546515 ubox
16 78 0.033234573 ubox
17 21 0.027093542 ubox
17 23 0.991618617 ubox
17 42 0.081151841 ubox
17 48 0.008812667 ubox
17 77 0.033234977 ubox
18 41 0.081148909 ubox
18 47 0.008986663 ubox
18 76 0.033225841 ubox
19 40 0.080512063 ubox
19 75 0.032092925 ubox
20 33 0.022756801 ubox
20 35 0.005886803 ubox
20 60 0.014919484 ubox
21 29 0.008580323 ubox
21 31 0.016078524 ubox
21 32 0.022694925 ubox
21 34 0.005222665 ubox
21 39 0.073071370 ubox
21 52 0.071038849 ubox
21 59 0.022796639 ubox
22 28 0.008592365 ubox
22 30 0.028333457 ubox
22 38 0.073037937 ubox
22 47 0.017401326 ubox
22 51 0.071128701 ubox
22 53 0.006640099 ubox
23 27 0.008096528 ubox
23 29 0.028922054 ubox
23 31 0.017428556 ubox
23 37 0.068925600 ubox
23 39 0.015228199 ubox
23 46 0.017563975 ubox
23 50 0.071070876 ubox
23 52 0.011540462 ubox
23 57 0.031337619 ubox
24 28 0.028818227 ubox
24 30 0.029339341 ubox
24 38 0.015242841 ubox
24 51 0.011546876 ubox
24 56 0.032190064 ubox
25 29 0.027489326 ubox
25 31 0.013716993 ubox
25 37 0.014875694 ubox
25 43 0.031236163 ubox
25 49 0.072600770 ubox
25 50 0.008168515 ubox
25 55 0.032227540 ubox
26 30 0.013870546 ubox
26 42 0.031299840 ubox
26 48 0.073076299 ubox
26 54 0.032228282 ubox
27 41 0.031287588 ubox
27 47 0.073074170 ubox
27 53 0.032229136 ubox
28 39 0.040122656 ubox
28 46 0.072568690 ubox
28 52 0.032210351 ubox
28 80 0.003651449 ubox
29 38 0.040379157 ubox
29 51 0.032204389 ubox
29 79 0.003827827 ubox
30 37 0.056830124 ubox
30 39 0.050590544 ubox
30 43 0.078478244 ubox
30 49 0.015602707 ubox
30 50 0.028014531 ubox
30 52 0.010595430 ubox
30 55 0.004720923 ubox
30 78 0.006401807 ubox
30 80 0.005302091 ubox
31 38 0.048849068 ubox
31 42 0.078578965 ubox
31 48 0.020166842 ubox
31 51 0.010485827 ubox
31 77 0.006385017 ubox
32 41 0.078675681 ubox
32 42 0.003844256 ubox
32 47 0.020086306 ubox
32 48 0.015843375 ubox
32 76 0.006377128 ubox
33 40 0.074370709 ubox
33 42 0.008022232 ubox
33 47 0.014864807 ubox
33 75 0.005807488 ubox
34 41 0.009927129 ubox
34 42 0.004786850 ubox
34 47 0.003884590 ubox
34 48 0.003502918 ubox
34 53 0.006436935 ubox
35 40 0.009612824 ubox
35 41 0.004502092 ubox
35 42 0.003631448 ubox
35 47 0.003294103 ubox
35 54 0.003245410 ubox
36 41 0.004239392 ubox
36 42 0.021180967 ubox
36 48 0.025259804 ubox
36 53 0.028055215 ubox
36 54 0.277656996 ubox
37 41 0.021068048 ubox
37 47 0.025494338 ubox
37 51 0.007148012 ubox
37 53 0.666616219 ubox
38 46 0.025037834 ubox
38 49 0.013105156 ubox
38 50 0.003890538 ubox
38 52 0.979556385 ubox
39 48 0.013373733 ubox
39 51 0.976930076 ubox
41 50 0.991594813 ubox
42 49 0.992137577 ubox
42 52 0.008901336 ubox
43 48 0.988914920 ubox
43 51 0.008901071 ubox
46 53 0.005125812 ubox
47 52 0.007080264 ubox
53 59 0.003955160 ubox
53 81 0.738609564 ubox
54 58 0.003898857 ubox
54 80 0.959098327 ubox
55 79 0.996921898 ubox
56 64 0.006656347 ubox
56 78 0.998944441 ubox
56 80 0.022739722 ubox
57 63 0.006665194 ubox
57 77 0.933590813 ubox
57 79 0.022580322 ubox
58 62 0.006614461 ubox
58 76 0.928923092 ubox
58 77 0.355607100 ubox
59 76 0.357806161 ubox
60 74 0.954258448 ubox
60 75 0.254220665 ubox
61 73 0.999755442 ubox
62 72 0.999171212 ubox
63 71 0.951338767 ubox
67 77 0.005845408 ubox
68 76 0.005902840 ubox
69 75 0.005775382 ubox
11 29 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
53 81 0.9500000 lbox
54 80 0.9500000 lbox
55 79 0.9500000 lbox
56 78 0.9500000 lbox
57 77 0.9500000 lbox
58 76 0.9500000 lbox
60 74 0.9500000 lbox
61 73 0.9500000 lbox
62 72 0.9500000 lbox
63 71 0.9500000 lbox
showpage
end
%%EOF
