%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIF7)
} def

/sequence { (\
CUGGGGAUGGAAACCUGACUGCCUGGCCCGGGACGGCGCUUGCAGCCAGGCAGGGCCCAGAGCAGUCCUCCCUCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 60 0.003842453 ubox
1 76 0.933106012 ubox
2 17 0.003766613 ubox
2 59 0.003901158 ubox
2 75 0.949847135 ubox
3 15 0.005673740 ubox
3 16 0.031248139 ubox
3 58 0.003908794 ubox
3 70 0.006580328 ubox
3 71 0.023058845 ubox
3 72 0.045652851 ubox
3 73 0.260809458 ubox
3 74 0.956551973 ubox
4 14 0.005657591 ubox
4 15 0.033006607 ubox
4 16 0.007101925 ubox
4 57 0.003904975 ubox
4 69 0.006745960 ubox
4 70 0.023219304 ubox
4 71 0.045448602 ubox
4 72 0.789961086 ubox
4 73 0.608251906 ubox
4 74 0.022144454 ubox
5 14 0.033021562 ubox
5 15 0.007741901 ubox
5 56 0.003894060 ubox
5 68 0.007667579 ubox
5 69 0.022956567 ubox
5 70 0.045030220 ubox
5 71 0.792741828 ubox
5 72 0.605127521 ubox
5 73 0.022791605 ubox
5 74 0.003775240 ubox
6 14 0.007920447 ubox
6 15 0.003828250 ubox
6 67 0.007518281 ubox
6 68 0.028295369 ubox
6 69 0.034967274 ubox
6 70 0.795323189 ubox
6 71 0.593665017 ubox
6 72 0.023435774 ubox
6 73 0.003235316 ubox
6 74 0.028325871 ubox
7 66 0.007100653 ubox
7 69 0.777109734 ubox
7 73 0.028081586 ubox
8 17 0.008256947 ubox
8 59 0.012224857 ubox
8 64 0.004600427 ubox
8 65 0.005728531 ubox
9 15 0.317216155 ubox
9 16 0.164039491 ubox
9 58 0.013032900 ubox
9 63 0.005038730 ubox
9 67 0.043098960 ubox
9 68 0.841682833 ubox
9 69 0.166110724 ubox
9 70 0.044496753 ubox
9 71 0.101982253 ubox
9 72 0.006579671 ubox
10 14 0.312879368 ubox
10 15 0.175154092 ubox
10 57 0.013022647 ubox
10 66 0.023423594 ubox
10 67 0.768563645 ubox
10 68 0.193694758 ubox
10 69 0.036593220 ubox
10 70 0.139423169 ubox
10 71 0.006649049 ubox
10 74 0.003328071 ubox
11 66 0.602200554 ubox
11 69 0.137037376 ubox
11 73 0.003264354 ubox
13 66 0.018458129 ubox
14 50 0.016028465 ubox
14 54 0.011294641 ubox
14 55 0.028671034 ubox
14 65 0.024485882 ubox
15 49 0.016126842 ubox
15 53 0.010626952 ubox
15 54 0.028959508 ubox
15 55 0.008467437 ubox
15 60 0.186491619 ubox
15 62 0.088658003 ubox
15 65 0.083846747 ubox
16 48 0.016130529 ubox
16 52 0.008094994 ubox
16 53 0.011837211 ubox
16 54 0.008047733 ubox
16 59 0.187077583 ubox
16 61 0.087838324 ubox
16 64 0.083315543 ubox
17 47 0.016111423 ubox
17 51 0.004324514 ubox
17 58 0.183391988 ubox
17 63 0.081147288 ubox
17 67 0.636257426 ubox
18 66 0.794155417 ubox
19 45 0.016193277 ubox
19 53 0.216662468 ubox
19 54 0.033434075 ubox
19 55 0.011478243 ubox
19 60 0.027711661 ubox
19 62 0.065570843 ubox
19 65 0.971332553 ubox
20 44 0.016255026 ubox
20 52 0.220021851 ubox
20 53 0.016501358 ubox
20 54 0.007819149 ubox
20 59 0.027689627 ubox
20 61 0.062414647 ubox
20 64 0.971647912 ubox
21 43 0.016266230 ubox
21 51 0.221140226 ubox
21 56 0.029671155 ubox
21 58 0.026977774 ubox
21 63 0.972037889 ubox
22 32 0.003506205 ubox
22 42 0.016257076 ubox
22 50 0.221178564 ubox
22 55 0.029846188 ubox
22 62 0.971926894 ubox
23 31 0.003533573 ubox
23 49 0.221177216 ubox
23 53 0.003380746 ubox
23 54 0.029821093 ubox
23 60 0.972006339 ubox
23 62 0.007815991 ubox
24 30 0.003521101 ubox
24 48 0.221125713 ubox
24 52 0.003516527 ubox
24 53 0.027598288 ubox
24 59 0.970122012 ubox
24 61 0.010806353 ubox
25 29 0.003355992 ubox
25 40 0.016044943 ubox
25 47 0.221174656 ubox
25 57 0.567282637 ubox
25 58 0.792384567 ubox
26 37 0.007584826 ubox
26 39 0.016481678 ubox
26 46 0.221096886 ubox
26 51 0.029732196 ubox
26 56 0.797233875 ubox
26 57 0.560499502 ubox
27 36 0.007731859 ubox
27 38 0.016722920 ubox
27 45 0.220813496 ubox
27 50 0.029991200 ubox
27 55 0.974279252 ubox
28 35 0.008255629 ubox
28 36 0.047633511 ubox
28 49 0.029960693 ubox
28 54 0.974299471 ubox
28 55 0.020842642 ubox
29 35 0.048642662 ubox
29 38 0.012601969 ubox
29 42 0.211586757 ubox
29 53 0.973958962 ubox
29 54 0.020856195 ubox
30 34 0.046936618 ubox
30 37 0.055091893 ubox
30 40 0.018780369 ubox
30 41 0.212860639 ubox
30 47 0.041137255 ubox
31 39 0.021066856 ubox
31 40 0.213952592 ubox
31 41 0.007916889 ubox
31 46 0.041133549 ubox
31 47 0.015976557 ubox
32 39 0.213454960 ubox
32 40 0.006631764 ubox
32 41 0.009619525 ubox
32 46 0.016025485 ubox
33 40 0.009021878 ubox
34 42 0.004137725 ubox
35 41 0.003872124 ubox
35 47 0.968861389 ubox
35 57 0.008284363 ubox
36 43 0.048813923 ubox
36 46 0.970478147 ubox
36 51 0.005997577 ubox
36 56 0.011384638 ubox
37 42 0.049000992 ubox
37 45 0.970314086 ubox
37 50 0.006010545 ubox
37 55 0.011452943 ubox
38 46 0.021244607 ubox
38 51 0.075964581 ubox
38 56 0.003984182 ubox
39 45 0.022258023 ubox
39 50 0.076279353 ubox
39 53 0.003965320 ubox
39 54 0.012378428 ubox
39 55 0.003351438 ubox
40 44 0.022990291 ubox
40 49 0.076212417 ubox
40 53 0.012798712 ubox
41 48 0.075989364 ubox
41 52 0.020016080 ubox
42 47 0.075176943 ubox
42 51 0.021010077 ubox
43 50 0.020991218 ubox
45 51 0.005379172 ubox
46 50 0.005346131 ubox
52 69 0.011056531 ubox
53 68 0.013774505 ubox
54 67 0.014492353 ubox
55 63 0.055597286 ubox
55 66 0.015039160 ubox
56 62 0.056226242 ubox
56 65 0.015644586 ubox
60 67 0.004586890 ubox
60 70 0.008715881 ubox
61 66 0.004593225 ubox
61 69 0.008756219 ubox
62 68 0.008706121 ubox
67 76 0.004082900 ubox
68 75 0.005878049 ubox
68 76 0.003594191 ubox
69 75 0.003354106 ubox
69 76 0.003362779 ubox
70 75 0.004464214 ubox
70 76 0.008850491 ubox
71 75 0.008896036 ubox
1 76 0.9500000 lbox
2 75 0.9500000 lbox
3 74 0.9500000 lbox
4 72 0.9500000 lbox
5 71 0.9500000 lbox
6 70 0.9500000 lbox
7 69 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
11 66 0.9500000 lbox
19 65 0.9500000 lbox
20 64 0.9500000 lbox
21 63 0.9500000 lbox
22 62 0.9500000 lbox
23 60 0.9500000 lbox
24 59 0.9500000 lbox
25 58 0.9500000 lbox
26 57 0.9500000 lbox
27 55 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
showpage
end
%%EOF
