%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VPS72)
} def

/sequence { (\
GUGGCCACCCGCAGGUAGUGAUGUCGAGCGUCGAGCUCCCAAAACCGAGCUGGUGAGGGGCUGCAGGUGGCGGCGCAGUCUCGGUAGGCGGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.005620067 ubox
1 74 0.995818336 ubox
1 76 0.064301558 ubox
2 11 0.005621480 ubox
2 72 0.004393728 ubox
2 73 0.994987322 ubox
2 75 0.063959955 ubox
2 91 0.009055400 ubox
3 10 0.005624342 ubox
3 71 0.004276811 ubox
3 74 0.061831705 ubox
3 76 0.003362108 ubox
4 9 0.005555867 ubox
4 71 0.999772970 ubox
4 74 0.003673536 ubox
4 89 0.013233923 ubox
5 70 0.999875091 ubox
5 73 0.004045356 ubox
5 88 0.013255414 ubox
6 69 0.999867967 ubox
6 72 0.004027764 ubox
6 87 0.013238681 ubox
7 68 0.999669139 ubox
7 85 0.005890318 ubox
8 67 0.999619024 ubox
8 84 0.005584881 ubox
9 66 0.998913592 ubox
9 67 0.022302234 ubox
9 70 0.003437933 ubox
9 83 0.005214313 ubox
9 84 0.011828243 ubox
10 20 0.013449928 ubox
10 26 0.005044851 ubox
10 30 0.009864552 ubox
10 63 0.004468133 ubox
10 66 0.031446465 ubox
10 69 0.003722939 ubox
10 83 0.011999588 ubox
11 19 0.016708047 ubox
11 24 0.005346056 ubox
11 25 0.005008771 ubox
11 29 0.010219660 ubox
11 61 0.003338329 ubox
11 64 0.998447136 ubox
11 68 0.003988054 ubox
11 82 0.012092109 ubox
12 18 0.017331180 ubox
12 23 0.007653183 ubox
12 28 0.010209883 ubox
12 60 0.003364402 ubox
12 63 0.999196475 ubox
12 67 0.003998991 ubox
13 19 0.014257499 ubox
13 22 0.007955689 ubox
13 37 0.008363886 ubox
13 62 0.936951509 ubox
13 81 0.011986127 ubox
14 25 0.015561414 ubox
14 32 0.007688245 ubox
14 36 0.012560277 ubox
14 37 0.160016569 ubox
14 38 0.005578980 ubox
14 39 0.004934864 ubox
14 40 0.006848492 ubox
14 46 0.004650576 ubox
14 61 0.900274803 ubox
14 62 0.034684375 ubox
14 80 0.012020669 ubox
15 22 0.029176462 ubox
15 24 0.019328017 ubox
15 29 0.015393346 ubox
15 31 0.007142848 ubox
15 36 0.745217573 ubox
15 37 0.027796903 ubox
15 38 0.023367928 ubox
15 39 0.007280652 ubox
15 45 0.004664996 ubox
15 61 0.069338281 ubox
15 64 0.008609172 ubox
15 79 0.010911250 ubox
16 21 0.029185101 ubox
16 23 0.035128957 ubox
16 28 0.015358476 ubox
16 35 0.745710824 ubox
16 44 0.004545899 ubox
16 60 0.086920550 ubox
16 63 0.008628290 ubox
16 78 0.003953409 ubox
17 22 0.038059244 ubox
17 37 0.206353418 ubox
17 62 0.009806309 ubox
18 24 0.005348977 ubox
18 29 0.016293602 ubox
18 36 0.230482473 ubox
18 45 0.003578274 ubox
18 61 0.010987989 ubox
18 76 0.009300814 ubox
19 23 0.004271120 ubox
19 26 0.031726477 ubox
19 28 0.016250176 ubox
19 33 0.864959294 ubox
19 35 0.207688297 ubox
19 41 0.003959992 ubox
19 44 0.003642519 ubox
19 55 0.004561307 ubox
19 60 0.010397735 ubox
19 75 0.009285279 ubox
19 77 0.007429995 ubox
20 25 0.058239436 ubox
20 29 0.004260271 ubox
20 32 0.968426835 ubox
20 38 0.042567408 ubox
20 40 0.003965569 ubox
20 74 0.009037056 ubox
20 76 0.007535653 ubox
21 31 0.968731572 ubox
21 37 0.050497768 ubox
22 30 0.968146967 ubox
22 33 0.031324672 ubox
22 41 0.006762183 ubox
22 72 0.006987617 ubox
22 75 0.007534040 ubox
23 29 0.967837027 ubox
23 32 0.031782430 ubox
23 36 0.047151251 ubox
23 40 0.007330370 ubox
23 61 0.009190615 ubox
23 71 0.009108380 ubox
23 74 0.007743282 ubox
24 28 0.905430423 ubox
24 34 0.116956113 ubox
24 35 0.024788930 ubox
24 56 0.004275218 ubox
24 58 0.005933212 ubox
24 60 0.011277869 ubox
24 70 0.009104571 ubox
24 73 0.007760629 ubox
25 33 0.126269377 ubox
25 55 0.004289194 ubox
25 57 0.006061066 ubox
25 59 0.011351528 ubox
25 69 0.009052341 ubox
25 72 0.007760344 ubox
26 32 0.126261131 ubox
26 38 0.179989137 ubox
26 68 0.007574278 ubox
26 71 0.007705178 ubox
27 31 0.109851544 ubox
27 37 0.203221949 ubox
28 36 0.207209438 ubox
28 54 0.005440241 ubox
28 64 0.005836626 ubox
28 68 0.008584426 ubox
29 35 0.207196206 ubox
29 53 0.005363408 ubox
29 55 0.010995826 ubox
29 63 0.005839018 ubox
29 67 0.008880004 ubox
30 36 0.007288219 ubox
30 54 0.010425221 ubox
30 64 0.006660238 ubox
31 35 0.006827750 ubox
31 53 0.010936349 ubox
31 56 0.004083866 ubox
31 63 0.005679736 ubox
32 52 0.012171802 ubox
32 55 0.004309543 ubox
32 63 0.004664633 ubox
33 51 0.006220405 ubox
33 54 0.004106684 ubox
33 62 0.007477977 ubox
34 51 0.077525548 ubox
34 62 0.330249776 ubox
35 50 0.079966144 ubox
35 61 0.388526084 ubox
35 64 0.010310156 ubox
36 49 0.080011366 ubox
36 57 0.026815892 ubox
36 59 0.009591739 ubox
36 60 0.415319371 ubox
36 63 0.010317709 ubox
37 48 0.079999548 ubox
37 56 0.027274656 ubox
37 58 0.007893929 ubox
37 59 0.320796218 ubox
37 60 0.490357053 ubox
38 47 0.079975292 ubox
38 55 0.027335999 ubox
38 57 0.007925083 ubox
38 58 0.320779356 ubox
38 59 0.719182548 ubox
38 60 0.572129321 ubox
39 53 0.027172465 ubox
39 57 0.319563105 ubox
39 58 0.722700829 ubox
39 59 0.603137543 ubox
39 60 0.055051118 ubox
40 52 0.027262817 ubox
40 55 0.138095470 ubox
40 57 0.721929236 ubox
40 58 0.603027245 ubox
40 59 0.055379342 ubox
41 51 0.025748565 ubox
41 54 0.093818337 ubox
44 54 0.985948365 ubox
44 85 0.003485816 ubox
44 92 0.005211169 ubox
45 53 0.996008985 ubox
45 58 0.004632697 ubox
45 59 0.004790697 ubox
45 60 0.003791642 ubox
45 84 0.003599138 ubox
45 91 0.005784824 ubox
46 52 0.995630822 ubox
46 57 0.004672297 ubox
46 58 0.004805745 ubox
46 59 0.003817485 ubox
46 83 0.003601376 ubox
46 90 0.005789697 ubox
47 51 0.614300652 ubox
47 82 0.003602228 ubox
47 89 0.005744487 ubox
48 62 0.005819823 ubox
48 81 0.003600396 ubox
49 61 0.006818084 ubox
49 80 0.003563782 ubox
50 57 0.004518757 ubox
50 60 0.006882957 ubox
50 78 0.003524385 ubox
50 87 0.005693106 ubox
51 56 0.004963032 ubox
51 59 0.006893098 ubox
51 77 0.003482790 ubox
51 86 0.005697278 ubox
52 62 0.007190069 ubox
52 85 0.005691493 ubox
53 61 0.009401858 ubox
54 60 0.010190320 ubox
54 83 0.005438164 ubox
55 82 0.005382098 ubox
56 81 0.005290427 ubox
57 80 0.005142269 ubox
57 82 0.005056999 ubox
58 79 0.003341155 ubox
58 81 0.005179809 ubox
59 80 0.005346677 ubox
60 74 0.006455443 ubox
60 79 0.005690756 ubox
61 73 0.006528450 ubox
61 78 0.005794293 ubox
62 72 0.006534225 ubox
62 77 0.005794278 ubox
63 71 0.006561202 ubox
63 76 0.005794983 ubox
64 70 0.006557300 ubox
64 75 0.005777228 ubox
67 74 0.004396087 ubox
68 73 0.004371217 ubox
72 80 0.010111563 ubox
73 79 0.010143403 ubox
73 89 0.007282001 ubox
73 92 0.008043034 ubox
74 78 0.010102775 ubox
74 88 0.007294399 ubox
74 90 0.030314275 ubox
74 91 0.008495227 ubox
75 82 0.007027512 ubox
75 85 0.024032394 ubox
75 89 0.093187163 ubox
75 92 0.742781953 ubox
76 84 0.024777727 ubox
76 88 0.093069778 ubox
76 91 0.792147432 ubox
78 85 0.017812817 ubox
78 89 0.956524275 ubox
78 92 0.012927642 ubox
79 84 0.009373105 ubox
79 88 0.957400348 ubox
79 91 0.024718716 ubox
80 87 0.956448000 ubox
80 88 0.036955343 ubox
80 90 0.032922861 ubox
80 91 0.053223157 ubox
81 86 0.861703354 ubox
81 87 0.029607271 ubox
81 88 0.045121870 ubox
81 90 0.016197282 ubox
81 91 0.182844561 ubox
82 87 0.061986838 ubox
82 90 0.238011865 ubox
83 89 0.238613569 ubox
1 74 0.9500000 lbox
2 73 0.9500000 lbox
4 71 0.9500000 lbox
5 70 0.9500000 lbox
6 69 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
24 28 0.9500000 lbox
38 60 0.9500000 lbox
39 59 0.9500000 lbox
40 58 0.9500000 lbox
44 54 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
75 92 0.9500000 lbox
76 91 0.9500000 lbox
78 89 0.9500000 lbox
79 88 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
