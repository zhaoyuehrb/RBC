%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAMP2)
} def

/sequence { (\
GGAUAUAGGCGCCCCCACACCCGGGCCCGGCUCAGCGCCGCCGCCGCUCCUCGCCUCCUUGCUGCACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.003745029 ubox
1 21 0.004066450 ubox
1 22 0.009487820 ubox
1 28 0.014756321 ubox
1 32 0.010622729 ubox
1 33 0.008744971 ubox
1 39 0.021241196 ubox
1 42 0.114007578 ubox
1 45 0.055062524 ubox
1 48 0.008665822 ubox
1 49 0.011462909 ubox
1 50 0.611237784 ubox
1 51 0.018510788 ubox
1 52 0.056586591 ubox
1 55 0.080602173 ubox
1 56 0.007200795 ubox
1 57 0.018629868 ubox
1 58 0.617979507 ubox
1 59 0.025504242 ubox
1 60 0.009544059 ubox
1 63 0.119050946 ubox
2 15 0.003736831 ubox
2 20 0.004088364 ubox
2 21 0.009472721 ubox
2 27 0.014756439 ubox
2 31 0.012680120 ubox
2 32 0.007310739 ubox
2 33 0.022873032 ubox
2 38 0.021242860 ubox
2 41 0.113715663 ubox
2 44 0.054987517 ubox
2 47 0.010340525 ubox
2 48 0.010217799 ubox
2 49 0.612273050 ubox
2 50 0.024150901 ubox
2 51 0.050157747 ubox
2 52 0.066316786 ubox
2 54 0.080534371 ubox
2 55 0.008393744 ubox
2 56 0.014248567 ubox
2 57 0.618883603 ubox
2 58 0.029071773 ubox
2 59 0.009684933 ubox
2 60 0.026906929 ubox
2 62 0.125913737 ubox
3 32 0.022609078 ubox
3 48 0.599360585 ubox
3 51 0.065020474 ubox
3 56 0.546719365 ubox
3 59 0.027118771 ubox
4 61 0.053480708 ubox
4 64 0.006767092 ubox
5 60 0.053559489 ubox
5 63 0.006999373 ubox
6 61 0.010112149 ubox
6 64 0.010691532 ubox
7 32 0.024331761 ubox
7 48 0.007228865 ubox
7 51 0.099642084 ubox
7 56 0.312863187 ubox
7 59 0.023800710 ubox
7 60 0.009351576 ubox
7 63 0.011493570 ubox
8 14 0.005283726 ubox
8 15 0.009193579 ubox
8 16 0.007884879 ubox
8 27 0.028865594 ubox
8 28 0.603202467 ubox
8 31 0.025944270 ubox
8 32 0.019285377 ubox
8 33 0.007421966 ubox
8 39 0.054235060 ubox
8 42 0.210907863 ubox
8 45 0.605709988 ubox
8 47 0.005673606 ubox
8 48 0.052557029 ubox
8 49 0.011021449 ubox
8 50 0.102681742 ubox
8 51 0.005095372 ubox
8 52 0.008557578 ubox
8 55 0.439113486 ubox
8 57 0.003335507 ubox
8 58 0.024765863 ubox
8 59 0.006390890 ubox
8 62 0.008573679 ubox
8 63 0.037304812 ubox
9 13 0.005223325 ubox
9 14 0.009108292 ubox
9 15 0.007844550 ubox
9 26 0.027944360 ubox
9 27 0.605143946 ubox
9 31 0.020644218 ubox
9 32 0.006327490 ubox
9 36 0.005384660 ubox
9 38 0.054298267 ubox
9 41 0.211019068 ubox
9 44 0.605912839 ubox
9 47 0.058755231 ubox
9 49 0.101952126 ubox
9 50 0.005358016 ubox
9 51 0.005576429 ubox
9 54 0.439221300 ubox
9 57 0.024348353 ubox
9 58 0.006308535 ubox
9 62 0.040594016 ubox
9 65 0.028577108 ubox
10 25 0.026275492 ubox
10 29 0.026365929 ubox
10 30 0.020314851 ubox
10 35 0.005388321 ubox
10 37 0.054292532 ubox
10 40 0.207932203 ubox
10 43 0.604696261 ubox
10 46 0.059313598 ubox
10 53 0.438808137 ubox
10 61 0.040843533 ubox
10 64 0.028581163 ubox
11 26 0.940178922 ubox
11 28 0.033269311 ubox
11 31 0.090687295 ubox
11 36 0.050710154 ubox
11 39 0.007921836 ubox
11 41 0.041828853 ubox
11 42 0.200616013 ubox
11 44 0.011148445 ubox
11 45 0.022462334 ubox
11 47 0.092822679 ubox
11 52 0.213694620 ubox
11 54 0.005236650 ubox
11 60 0.006060971 ubox
11 62 0.008456457 ubox
11 63 0.004511540 ubox
12 24 0.025616188 ubox
12 25 0.952159925 ubox
12 30 0.092187295 ubox
12 35 0.050043662 ubox
12 37 0.004187745 ubox
12 40 0.056461367 ubox
12 43 0.015093040 ubox
12 46 0.092575987 ubox
12 53 0.005239780 ubox
12 61 0.008616411 ubox
13 23 0.027306216 ubox
13 24 0.951973924 ubox
13 25 0.091340605 ubox
13 29 0.092460511 ubox
13 30 0.013370721 ubox
14 23 0.951321193 ubox
14 24 0.096820825 ubox
14 25 0.210669267 ubox
14 29 0.010609207 ubox
15 23 0.101398381 ubox
15 24 0.214295138 ubox
15 25 0.012245581 ubox
15 30 0.005010555 ubox
16 23 0.216703421 ubox
16 24 0.012293144 ubox
16 29 0.005013270 ubox
20 30 0.003311744 ubox
21 30 0.019482788 ubox
22 29 0.019589028 ubox
22 40 0.005716757 ubox
22 43 0.044724640 ubox
22 46 0.075204099 ubox
22 53 0.003905330 ubox
23 28 0.019395860 ubox
23 33 0.014482678 ubox
23 39 0.005845840 ubox
23 42 0.044573892 ubox
23 45 0.075578087 ubox
23 48 0.003388589 ubox
23 49 0.076948644 ubox
23 50 0.045456419 ubox
23 51 0.083092226 ubox
23 52 0.004641912 ubox
23 56 0.004877755 ubox
24 32 0.014625678 ubox
24 38 0.005832655 ubox
24 41 0.044006846 ubox
24 42 0.028546915 ubox
24 44 0.073861479 ubox
24 45 0.114409570 ubox
24 48 0.077934250 ubox
24 49 0.045285446 ubox
24 50 0.084109692 ubox
24 55 0.005342528 ubox
25 31 0.015270629 ubox
25 36 0.005901136 ubox
25 41 0.030887281 ubox
25 44 0.117988049 ubox
25 47 0.091868236 ubox
25 48 0.010904630 ubox
25 49 0.084118459 ubox
25 54 0.005359275 ubox
26 30 0.015290717 ubox
26 35 0.005926491 ubox
26 40 0.029217567 ubox
26 43 0.119241453 ubox
26 46 0.092554401 ubox
26 53 0.005357500 ubox
28 37 0.012881012 ubox
28 40 0.611091836 ubox
28 43 0.239108027 ubox
28 46 0.213889256 ubox
28 53 0.005514323 ubox
28 64 0.005973295 ubox
28 68 0.008728129 ubox
29 36 0.014118617 ubox
29 39 0.717069777 ubox
29 42 0.350428331 ubox
29 45 0.232955936 ubox
29 48 0.075362379 ubox
29 49 0.020837194 ubox
29 50 0.102377155 ubox
29 51 0.022369300 ubox
29 52 0.023137188 ubox
29 55 0.518078918 ubox
29 58 0.006534385 ubox
29 63 0.015181141 ubox
29 67 0.034246244 ubox
30 36 0.017783316 ubox
30 38 0.717307260 ubox
30 41 0.350641209 ubox
30 44 0.232981577 ubox
30 47 0.084414440 ubox
30 48 0.004191014 ubox
30 49 0.102348386 ubox
30 50 0.025293573 ubox
30 51 0.019461869 ubox
30 54 0.518722967 ubox
30 57 0.006390256 ubox
30 62 0.015835538 ubox
30 65 0.027265018 ubox
31 35 0.017861126 ubox
31 37 0.716766523 ubox
31 40 0.350557353 ubox
31 43 0.232840618 ubox
31 46 0.084518839 ubox
31 53 0.518087518 ubox
31 61 0.015826088 ubox
31 64 0.025031934 ubox
33 61 0.005680109 ubox
33 64 0.056477303 ubox
34 48 0.520023170 ubox
34 51 0.028226476 ubox
34 56 0.006390385 ubox
34 60 0.005335044 ubox
34 63 0.060976057 ubox
35 41 0.210254145 ubox
35 44 0.097361018 ubox
35 47 0.536809165 ubox
35 50 0.027270662 ubox
35 54 0.016247250 ubox
35 55 0.005442180 ubox
35 62 0.061648758 ubox
35 65 0.011604742 ubox
36 40 0.208822152 ubox
36 43 0.097480597 ubox
36 46 0.536775187 ubox
36 53 0.016729162 ubox
36 61 0.061630071 ubox
36 64 0.011613031 ubox
37 42 0.093030638 ubox
37 44 0.337600219 ubox
37 45 0.414810710 ubox
37 47 0.036839517 ubox
37 52 0.016600038 ubox
37 54 0.005955088 ubox
37 60 0.054570697 ubox
37 62 0.008004073 ubox
37 63 0.007740083 ubox
37 65 0.011817949 ubox
38 43 0.475881528 ubox
38 46 0.035087470 ubox
38 53 0.005887828 ubox
38 61 0.008077739 ubox
38 64 0.011819997 ubox
39 46 0.015961614 ubox
39 61 0.006242182 ubox
39 68 0.007851896 ubox
40 45 0.021657276 ubox
40 47 0.163957574 ubox
40 54 0.023807873 ubox
40 60 0.005831561 ubox
40 62 0.018862767 ubox
40 65 0.065613304 ubox
40 67 0.035035941 ubox
41 46 0.165336285 ubox
41 53 0.021838371 ubox
41 61 0.018802583 ubox
41 64 0.065573034 ubox
42 53 0.015734065 ubox
42 61 0.003276872 ubox
42 64 0.003893925 ubox
42 68 0.011788967 ubox
43 52 0.028886310 ubox
43 54 0.096729030 ubox
43 60 0.003168959 ubox
43 62 0.065596528 ubox
43 63 0.003704940 ubox
43 65 0.270563388 ubox
43 67 0.012626865 ubox
44 53 0.095524607 ubox
44 61 0.065169111 ubox
44 64 0.270626497 ubox
45 53 0.028340741 ubox
45 61 0.007707685 ubox
45 64 0.008212224 ubox
45 68 0.004734712 ubox
46 52 0.043162631 ubox
46 54 0.154404699 ubox
46 60 0.006454831 ubox
46 62 0.276882002 ubox
46 63 0.003177254 ubox
46 65 0.065355747 ubox
46 67 0.006088193 ubox
47 53 0.154634944 ubox
47 61 0.276977741 ubox
47 64 0.065384219 ubox
52 61 0.039746697 ubox
52 64 0.071070096 ubox
52 68 0.030220284 ubox
53 60 0.031591678 ubox
53 62 0.450462378 ubox
53 63 0.019158787 ubox
53 65 0.213880364 ubox
53 67 0.031047735 ubox
54 61 0.450034785 ubox
54 64 0.213616560 ubox
60 66 0.065244937 ubox
60 68 0.046713112 ubox
61 65 0.072412014 ubox
61 67 0.079091751 ubox
1 50 0.9500000 lbox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
8 45 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
53 62 0.9500000 lbox
54 61 0.9500000 lbox
showpage
end
%%EOF
