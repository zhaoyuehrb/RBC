%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RIMBP3B)
} def

/sequence { (\
GAGACCCCCAGGGGGCGCCGGAAGGGGCGCGCCGGGCGGUCGGCGGCGGCCGUUGGCGAGCUGAGGCCUGCCAGGCGAAGUCUGGAGACCAGCCGGGCCGCGGCCGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 41 0.020644390 ubox
2 40 0.015803012 ubox
3 41 0.994999902 ubox
4 40 0.998352183 ubox
5 13 0.007317121 ubox
5 14 0.036804443 ubox
5 15 0.018552523 ubox
5 36 0.003771322 ubox
5 39 0.998929374 ubox
6 12 0.007340347 ubox
6 13 0.036876241 ubox
6 14 0.019738033 ubox
6 35 0.003916323 ubox
6 36 0.008922750 ubox
6 38 0.998665605 ubox
6 39 0.013863180 ubox
7 11 0.007296364 ubox
7 12 0.036858200 ubox
7 13 0.019743185 ubox
7 34 0.003916214 ubox
7 35 0.011566200 ubox
7 36 0.965498914 ubox
7 38 0.018185371 ubox
8 12 0.019602498 ubox
8 34 0.011751871 ubox
8 35 0.965520583 ubox
8 36 0.255637488 ubox
9 34 0.960591355 ubox
9 35 0.255869916 ubox
11 33 0.241035985 ubox
12 32 0.200663526 ubox
12 33 0.961765646 ubox
13 32 0.975521601 ubox
13 33 0.075570089 ubox
14 32 0.075768141 ubox
15 28 0.012718178 ubox
15 30 0.999560856 ubox
16 27 0.012754862 ubox
16 29 0.999887311 ubox
17 28 0.999892438 ubox
18 25 0.013718183 ubox
18 26 0.036061416 ubox
18 27 0.999247834 ubox
19 24 0.014898587 ubox
19 25 0.050837742 ubox
19 26 0.998385766 ubox
30 45 0.023073428 ubox
31 44 0.042413792 ubox
32 43 0.042445202 ubox
33 42 0.042444668 ubox
34 41 0.042363342 ubox
35 40 0.038165579 ubox
36 53 0.004114555 ubox
37 52 0.006578769 ubox
38 51 0.006653386 ubox
39 50 0.006653778 ubox
39 107 0.004692538 ubox
40 49 0.006651620 ubox
41 48 0.006653298 ubox
41 52 0.010656472 ubox
41 55 0.007776997 ubox
41 106 0.065262877 ubox
42 47 0.006905829 ubox
42 51 0.051692539 ubox
42 54 0.018180660 ubox
42 105 0.371267378 ubox
43 50 0.051744333 ubox
43 53 0.020820096 ubox
43 104 0.371643643 ubox
43 107 0.033018139 ubox
44 49 0.051727353 ubox
44 52 0.021011862 ubox
44 55 0.003498471 ubox
44 103 0.371491450 ubox
44 106 0.032765339 ubox
45 51 0.021014922 ubox
45 54 0.003516616 ubox
45 105 0.031247579 ubox
46 50 0.020675685 ubox
46 53 0.003534407 ubox
46 101 0.371511906 ubox
46 104 0.030633055 ubox
46 107 0.924880382 ubox
47 52 0.003532949 ubox
47 100 0.371678063 ubox
47 103 0.030080051 ubox
47 106 0.926015510 ubox
48 99 0.371763629 ubox
48 105 0.926111380 ubox
49 76 0.003887848 ubox
49 98 0.371749740 ubox
49 101 0.028350001 ubox
49 104 0.926139505 ubox
50 75 0.003905875 ubox
50 96 0.024118470 ubox
50 97 0.370962501 ubox
50 100 0.028132526 ubox
50 103 0.926149834 ubox
51 74 0.003881625 ubox
51 77 0.017065460 ubox
51 95 0.034069924 ubox
51 96 0.369265742 ubox
51 102 0.926144074 ubox
52 57 0.006858466 ubox
52 61 0.028065942 ubox
52 71 0.035877460 ubox
52 76 0.029333566 ubox
52 89 0.004015055 ubox
52 93 0.092552157 ubox
52 94 0.030889966 ubox
52 98 0.018769813 ubox
52 99 0.003445828 ubox
52 101 0.925194502 ubox
53 60 0.028029671 ubox
53 64 0.008717866 ubox
53 70 0.035075288 ubox
53 74 0.034769944 ubox
53 75 0.022028678 ubox
53 88 0.004005696 ubox
53 92 0.095675250 ubox
53 96 0.012859253 ubox
53 97 0.018364735 ubox
53 100 0.652968650 ubox
54 59 0.027373056 ubox
54 63 0.009607816 ubox
54 73 0.207649836 ubox
54 74 0.010090840 ubox
54 87 0.003805199 ubox
54 91 0.095732227 ubox
54 95 0.120581706 ubox
54 96 0.014148445 ubox
54 100 0.648957928 ubox
54 108 0.004739076 ubox
55 62 0.010551208 ubox
55 68 0.052261464 ubox
55 72 0.224100274 ubox
55 90 0.095221886 ubox
55 94 0.148286203 ubox
55 99 0.922284439 ubox
55 107 0.004346876 ubox
56 61 0.010605457 ubox
56 67 0.056124655 ubox
56 71 0.224177551 ubox
56 89 0.092688567 ubox
56 93 0.147307992 ubox
56 98 0.922617952 ubox
56 101 0.031147284 ubox
56 107 0.056054391 ubox
57 63 0.009800549 ubox
57 66 0.057970917 ubox
57 70 0.227013936 ubox
57 84 0.037508031 ubox
57 92 0.146053112 ubox
57 95 0.269165980 ubox
57 97 0.913623313 ubox
57 100 0.034152800 ubox
57 106 0.056291083 ubox
58 62 0.007927075 ubox
58 69 0.219396555 ubox
58 82 0.015096943 ubox
58 83 0.035839781 ubox
58 94 0.386190130 ubox
58 99 0.035588958 ubox
58 105 0.056289936 ubox
59 69 0.021919968 ubox
59 81 0.013059605 ubox
59 83 0.030052973 ubox
60 67 0.239145377 ubox
60 68 0.019326886 ubox
60 71 0.007554780 ubox
60 76 0.004524184 ubox
60 81 0.044145931 ubox
60 82 0.030384598 ubox
60 93 0.941788529 ubox
60 98 0.035660069 ubox
60 104 0.056358959 ubox
61 66 0.239002247 ubox
61 70 0.009731379 ubox
61 75 0.004497648 ubox
61 80 0.055002929 ubox
61 85 0.009990542 ubox
61 87 0.024677851 ubox
61 92 0.944079580 ubox
61 96 0.101567232 ubox
61 97 0.035855560 ubox
61 103 0.056366206 ubox
62 74 0.004441383 ubox
62 79 0.054379120 ubox
62 84 0.009451453 ubox
62 86 0.024386294 ubox
62 91 0.902404552 ubox
62 95 0.101090379 ubox
62 96 0.035582614 ubox
62 102 0.056318950 ubox
63 82 0.004571599 ubox
63 83 0.003530037 ubox
63 90 0.588911899 ubox
63 94 0.097096081 ubox
63 101 0.055908963 ubox
64 81 0.004087422 ubox
64 83 0.015268553 ubox
65 72 0.004895389 ubox
65 82 0.015718101 ubox
65 90 0.755730630 ubox
65 94 0.082815927 ubox
65 99 0.057275663 ubox
66 71 0.004925913 ubox
66 76 0.066343383 ubox
66 81 0.015098505 ubox
66 89 0.849716811 ubox
66 93 0.083381731 ubox
66 98 0.057405680 ubox
67 75 0.066385925 ubox
67 80 0.015014147 ubox
67 85 0.005827506 ubox
67 92 0.073189678 ubox
67 97 0.057404943 ubox
68 74 0.066367629 ubox
68 84 0.005266511 ubox
68 87 0.935609278 ubox
68 92 0.040060263 ubox
68 96 0.057357179 ubox
69 73 0.059790357 ubox
69 77 0.013603639 ubox
69 86 0.934406804 ubox
69 91 0.056743756 ubox
69 95 0.057166713 ubox
70 76 0.015016285 ubox
70 90 0.056905800 ubox
70 93 0.004171795 ubox
70 94 0.055094566 ubox
70 98 0.022748722 ubox
71 75 0.014912244 ubox
71 85 0.969952575 ubox
71 92 0.004303520 ubox
71 96 0.004579366 ubox
71 97 0.022906378 ubox
72 84 0.971000304 ubox
72 95 0.013273207 ubox
72 96 0.022877695 ubox
73 83 0.970790161 ubox
74 82 0.970956290 ubox
74 94 0.221408064 ubox
74 99 0.032560874 ubox
75 81 0.967587512 ubox
75 82 0.003370970 ubox
75 93 0.222237310 ubox
75 98 0.032605858 ubox
75 101 0.011793848 ubox
76 80 0.961916572 ubox
76 92 0.222055679 ubox
76 95 0.018279421 ubox
76 97 0.032592516 ubox
76 100 0.012066015 ubox
77 94 0.018440920 ubox
77 99 0.011862541 ubox
80 89 0.222965486 ubox
80 93 0.039894294 ubox
80 98 0.018890348 ubox
81 88 0.223580533 ubox
81 92 0.005790819 ubox
81 97 0.018975094 ubox
82 87 0.222789432 ubox
82 92 0.050232430 ubox
82 96 0.024715840 ubox
83 91 0.056344074 ubox
83 95 0.025141408 ubox
84 90 0.057268057 ubox
84 94 0.025504539 ubox
85 89 0.056350863 ubox
85 93 0.025470227 ubox
89 96 0.013670967 ubox
90 95 0.014956498 ubox
3 41 0.9500000 lbox
4 40 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 36 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
12 33 0.9500000 lbox
13 32 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
46 107 0.9500000 lbox
47 106 0.9500000 lbox
48 105 0.9500000 lbox
49 104 0.9500000 lbox
50 103 0.9500000 lbox
51 102 0.9500000 lbox
52 101 0.9500000 lbox
53 100 0.9500000 lbox
55 99 0.9500000 lbox
56 98 0.9500000 lbox
57 97 0.9500000 lbox
60 93 0.9500000 lbox
61 92 0.9500000 lbox
62 91 0.9500000 lbox
65 90 0.9500000 lbox
66 89 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
71 85 0.9500000 lbox
72 84 0.9500000 lbox
73 83 0.9500000 lbox
74 82 0.9500000 lbox
75 81 0.9500000 lbox
76 80 0.9500000 lbox
showpage
end
%%EOF
