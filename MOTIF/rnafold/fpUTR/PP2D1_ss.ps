%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGUGAACAUUCCACACAGGGAGCUCUACCAUCAAGUGAGGGGAAUGCCCACCAUCGCUAUCAUCACCAUCACCACUACUUCUGCCACAGCCAUCACAUUCACCUCUACCUCCACCAUCACCAUCACUACUCAAGUUGGAGAAAUAGAGGCCAGGGGAAGGGGAUAAAGGGAGGGCAAAGAAAGGUAAUUCCAAAGGAAC\
) } def
/len { sequence length } bind def

/coor [
[79.90261841 114.33903503]
[65.62242889 118.92989349]
[51.34222794 123.52075195]
[37.06203079 128.11161804]
[22.78183556 132.70246887]
[8.50163937 137.29333496]
[8.43764877 160.55816650]
[-2.01933146 182.01644897]
[-21.25419235 197.15290833]
[-45.75263977 202.53251648]
[-70.73850250 196.56774902]
[-78.50624847 209.39982605]
[-86.27399445 222.23188782]
[-94.04174042 235.06396484]
[-90.02579498 250.34950256]
[-98.06663513 263.95541382]
[-113.39378357 267.80950928]
[-126.91390228 259.62527466]
[-130.60575867 244.25823975]
[-122.27902222 230.82539368]
[-106.87380981 227.29621887]
[-99.10606384 214.46415710]
[-91.33832550 201.63208008]
[-83.57057953 188.80000305]
[-87.50422668 182.41435242]
[-100.27551270 190.28164673]
[-113.04679108 198.14894104]
[-125.81807709 206.01623535]
[-135.53318787 217.44500732]
[-149.40470886 211.73706055]
[-148.26263428 196.78059387]
[-133.68536377 193.24494934]
[-120.91408539 185.37765503]
[-108.14279938 177.51037598]
[-95.37152100 169.64308167]
[-99.30516815 163.25743103]
[-114.25983429 164.42268372]
[-129.21450806 165.58795166]
[-144.16917419 166.75320435]
[-159.12385559 167.91845703]
[-174.06900024 169.19998169]
[-189.00373840 170.59767151]
[-203.92716980 172.11145020]
[-218.83836365 173.74122620]
[-229.96354675 185.30020142]
[-245.92311096 183.66567993]
[-254.47425842 170.09153748]
[-249.05726624 154.99069214]
[-233.82760620 149.94720459]
[-220.46813965 158.83003235]
[-205.55694580 157.20025635]
[-199.24470520 153.34562683]
[-190.40142822 155.66291809]
[-175.46669006 154.26524353]
[-169.09527588 150.50924683]
[-160.28910828 152.96379089]
[-145.33444214 151.79853821]
[-130.37976074 150.63328552]
[-115.42509460 149.46801758]
[-100.47042084 148.30276489]
[-99.52512360 137.79299927]
[-96.71301270 127.70792389]
[-92.15590668 118.37348938]
[-86.03152466 110.08578491]
[-78.56666565 103.10157013]
[-70.02894592 97.63043213]
[-60.71725845 93.82849884]
[-50.95132446 91.79413605]
[-41.06075668 91.56555939]
[-31.37393188 93.12055969]
[-22.20708275 96.37818909]
[-13.85398197 101.20241547]
[-6.57653570 107.40758514]
[-0.59659034 114.76538086]
[3.91078019 123.01313019]
[18.19097710 118.42227173]
[32.47117233 113.83141327]
[46.75136948 109.24055481]
[61.03156662 104.64969635]
[75.31175995 100.05883789]
[79.94271088 82.88359833]
[95.65583038 72.29097748]
[115.62205505 74.70867920]
[129.92262268 90.45976257]
[141.97508240 81.53013611]
[154.02752686 72.60050201]
[166.07998657 63.67086792]
[164.92655945 49.93138123]
[170.66880798 37.51540375]
[181.70899963 29.62275314]
[195.09967041 28.22902679]
[207.33026123 33.59203720]
[219.52012634 24.85092163]
[231.50277710 15.82783699]
[243.27168274 6.52769375]
[255.04060364 -2.77244949]
[254.54924011 -18.16935730]
[263.11810303 -30.75616455]
[277.28787231 -35.82386017]
[291.55389404 -31.62632179]
[303.32278442 -40.92646408]
[315.09170532 -50.22660828]
[319.88909912 -58.00854111]
[327.11672974 -59.57816315]
[339.02886963 -68.69415283]
[350.94097900 -77.81014252]
[350.68914795 -93.21282959]
[359.45272827 -105.66485596]
[373.69958496 -110.51157379]
[387.89859009 -106.09268188]
[399.81069946 -115.20867157]
[411.72283936 -124.32466125]
[423.63494873 -133.44065857]
[421.10968018 -147.20277405]
[424.74447632 -160.64576721]
[433.77456665 -171.15975952]
[446.39355469 -176.72908020]
[460.11459351 -176.31848145]
[472.26031494 -170.06515503]
[484.31277466 -178.99479675]
[490.79507446 -193.42704773]
[505.62750244 -194.78681946]
[517.67993164 -203.71644592]
[529.73242188 -212.64608765]
[532.71612549 -218.55909729]
[537.51916504 -221.61386108]
[542.30145264 -221.65907288]
[554.62573242 -230.20956421]
[566.95007324 -238.76004028]
[571.20764160 -254.22785950]
[586.01147461 -260.41049194]
[600.00543213 -252.56518555]
[602.45452881 -236.71015930]
[591.47998047 -225.00805664]
[575.50054932 -226.43571472]
[563.17626953 -217.88522339]
[550.85192871 -209.33474731]
[538.66204834 -200.59362793]
[526.60955811 -191.66400146]
[514.55712891 -182.73435974]
[508.93688965 -168.94081116]
[493.24240112 -166.94233704]
[481.18994141 -158.01271057]
[483.42153931 -142.01193237]
[477.24572754 -126.98175812]
[464.25976562 -117.05849457]
[447.94885254 -115.02448273]
[432.75094604 -121.52852631]
[420.83883667 -112.41253662]
[408.92669678 -103.29654694]
[397.01458740 -94.18055725]
[397.56939697 -79.32019806]
[389.16809082 -66.83493805]
[374.85864258 -61.62985611]
[360.05697632 -65.89801788]
[348.14486694 -56.78203201]
[336.23272705 -47.66603851]
[324.39184570 -38.45769501]
[312.62295532 -29.15755081]
[300.85403442 -19.85740852]
[301.63989258 -5.00747919]
[293.43377686 7.60693026]
[279.20700073 13.03392124]
[264.34075928 8.99646473]
[252.57183838 18.29660797]
[240.80291748 27.59675026]
[240.03318787 31.04465675]
[237.55090332 34.28952026]
[233.47044373 36.52855301]
[228.26124573 37.04079056]
[216.07136536 45.78190613]
[216.49656677 62.18885040]
[206.96524048 75.75366974]
[191.06991577 81.01918030]
[175.00961304 75.72332001]
[162.95716858 84.65295410]
[150.90470886 93.58258820]
[138.85226440 102.51222229]
[150.99084473 93.70004272]
[165.79170227 91.26390839]
[180.11430359 95.72073364]
[190.91960144 106.12483978]
[195.91487122 120.26864624]
[194.04022217 135.15104675]
[185.69338989 147.61421204]
[172.64546204 155.01364136]
[157.66502380 155.77931213]
[143.93067932 149.74874878]
[134.35665894 138.20153809]
[130.97441101 123.58802795]
[134.21467590 138.23387146]
[137.45494080 152.87971497]
[140.69522095 167.52554321]
[150.02032471 181.68460083]
[138.99607849 194.56489563]
[123.56732178 187.53709412]
[126.04936981 170.76582336]
[122.80910492 156.11997986]
[119.56884003 141.47413635]
[116.32856750 126.82829285]
[101.38398743 129.13436890]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 80]
[2 79]
[3 78]
[4 77]
[5 76]
[6 75]
[11 24]
[12 23]
[13 22]
[14 21]
[36 60]
[37 59]
[38 58]
[39 57]
[40 56]
[41 54]
[42 53]
[43 51]
[44 50]
[84 178]
[85 177]
[86 176]
[87 175]
[92 171]
[93 170]
[94 166]
[95 165]
[96 164]
[100 160]
[101 159]
[102 158]
[104 157]
[105 156]
[106 155]
[110 151]
[111 150]
[112 149]
[113 148]
[119 143]
[120 142]
[122 140]
[123 139]
[124 138]
[127 137]
[128 136]
[129 135]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
