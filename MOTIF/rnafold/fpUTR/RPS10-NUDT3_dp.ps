%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPS10-NUDT3)
} def

/sequence { (\
GGCGGGGGGCGGGUCCACGCCAGCCCGGAAGAGACGCAGCACCGCGCAUGCUCCUUCCUUUCCAGCCCCGGUACCGGACCCUGCAGCCGCAGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.008376121 ubox
1 63 0.018561137 ubox
1 67 0.931313287 ubox
1 68 0.018852791 ubox
1 69 0.023966062 ubox
1 75 0.112487901 ubox
1 80 0.066387584 ubox
1 81 0.005924479 ubox
1 88 0.102377651 ubox
2 20 0.008382542 ubox
2 62 0.018365638 ubox
2 66 0.934465488 ubox
2 67 0.014755434 ubox
2 68 0.023454118 ubox
2 72 0.032072212 ubox
2 74 0.112325608 ubox
2 79 0.066247674 ubox
2 80 0.007046783 ubox
2 84 0.179798258 ubox
2 87 0.101025602 ubox
2 90 0.220543297 ubox
3 19 0.008382451 ubox
3 27 0.017250600 ubox
3 65 0.932452250 ubox
3 70 0.124077485 ubox
3 71 0.032930851 ubox
3 76 0.083141133 ubox
3 83 0.180698897 ubox
3 86 0.099709218 ubox
3 89 0.220798590 ubox
4 18 0.008337779 ubox
4 25 0.031394207 ubox
4 26 0.259274183 ubox
4 60 0.004381001 ubox
4 61 0.005108674 ubox
4 62 0.022200394 ubox
4 63 0.583861679 ubox
4 67 0.022372053 ubox
4 68 0.023606217 ubox
4 69 0.130928747 ubox
4 75 0.084525863 ubox
4 80 0.013411391 ubox
4 81 0.069437302 ubox
4 82 0.187003880 ubox
4 88 0.218868505 ubox
5 16 0.006383821 ubox
5 24 0.031523061 ubox
5 25 0.259553536 ubox
5 26 0.075909272 ubox
5 59 0.003619007 ubox
5 60 0.004972542 ubox
5 61 0.020215611 ubox
5 62 0.584958517 ubox
5 63 0.672712248 ubox
5 66 0.022155411 ubox
5 67 0.024750819 ubox
5 68 0.130874213 ubox
5 69 0.022401725 ubox
5 74 0.084460360 ubox
5 75 0.003738391 ubox
5 79 0.013365832 ubox
5 80 0.070515307 ubox
5 81 0.187325595 ubox
5 82 0.016876064 ubox
5 87 0.216691713 ubox
5 88 0.028802210 ubox
6 15 0.006384930 ubox
6 16 0.004943248 ubox
6 24 0.259452545 ubox
6 25 0.077544412 ubox
6 26 0.043403717 ubox
6 59 0.010945246 ubox
6 60 0.028118049 ubox
6 61 0.485687861 ubox
6 62 0.673821071 ubox
6 63 0.038181890 ubox
6 66 0.025079756 ubox
6 67 0.130611113 ubox
6 68 0.021128319 ubox
6 69 0.123774722 ubox
6 74 0.003671585 ubox
6 79 0.070463000 ubox
6 80 0.186975789 ubox
6 81 0.019377799 ubox
6 82 0.019393768 ubox
6 87 0.040139307 ubox
6 88 0.004533640 ubox
7 14 0.005969754 ubox
7 15 0.005024906 ubox
7 21 0.005042345 ubox
7 24 0.077256516 ubox
7 25 0.040737445 ubox
7 26 0.905451357 ubox
7 59 0.003981346 ubox
7 60 0.047015920 ubox
7 61 0.062796979 ubox
7 62 0.025763149 ubox
7 66 0.082134503 ubox
7 67 0.017987891 ubox
7 68 0.124128031 ubox
7 79 0.172604616 ubox
7 80 0.019216459 ubox
7 81 0.019595163 ubox
7 87 0.004907410 ubox
8 14 0.004788253 ubox
8 20 0.003600194 ubox
8 21 0.291065122 ubox
8 24 0.032854914 ubox
8 25 0.911154302 ubox
8 26 0.011015931 ubox
8 59 0.017314554 ubox
8 60 0.016939482 ubox
8 61 0.006943643 ubox
8 63 0.007066324 ubox
8 66 0.014627721 ubox
8 67 0.127094791 ubox
8 79 0.019070630 ubox
8 80 0.019585006 ubox
9 20 0.292022971 ubox
9 24 0.911373977 ubox
9 25 0.008070409 ubox
9 58 0.015130786 ubox
9 59 0.012275344 ubox
9 60 0.005042806 ubox
9 62 0.007006773 ubox
9 66 0.127337717 ubox
9 79 0.019482758 ubox
9 84 0.198906748 ubox
10 19 0.292052425 ubox
10 23 0.908249228 ubox
10 27 0.017984829 ubox
10 65 0.127389971 ubox
10 76 0.157634561 ubox
10 83 0.199059151 ubox
11 18 0.291603800 ubox
11 21 0.211887604 ubox
11 26 0.131420760 ubox
11 63 0.006786583 ubox
11 75 0.157689840 ubox
11 81 0.194129173 ubox
11 82 0.055631128 ubox
12 20 0.211706288 ubox
12 21 0.882913094 ubox
12 25 0.131574612 ubox
12 62 0.005883278 ubox
12 63 0.004703928 ubox
12 74 0.157631897 ubox
12 75 0.007138354 ubox
12 80 0.196874694 ubox
12 81 0.045491909 ubox
13 20 0.886120700 ubox
13 24 0.131587940 ubox
13 61 0.004887750 ubox
13 62 0.004702072 ubox
13 74 0.008291814 ubox
13 79 0.199473424 ubox
13 80 0.032242827 ubox
14 19 0.837025193 ubox
14 23 0.130631241 ubox
14 71 0.003899223 ubox
14 73 0.009190514 ubox
14 78 0.202013164 ubox
15 70 0.004223467 ubox
15 71 0.157716958 ubox
15 77 0.202043100 ubox
16 70 0.157394894 ubox
16 76 0.201629138 ubox
17 72 0.021017835 ubox
18 70 0.005763103 ubox
18 71 0.021092966 ubox
19 26 0.005264739 ubox
19 66 0.154972396 ubox
19 69 0.006981135 ubox
19 72 0.194560051 ubox
19 75 0.005238084 ubox
20 65 0.155016410 ubox
20 71 0.198990944 ubox
21 70 0.198887981 ubox
22 60 0.005633050 ubox
22 61 0.019835700 ubox
23 59 0.006037273 ubox
23 60 0.020057719 ubox
23 66 0.198191303 ubox
23 72 0.009517451 ubox
24 65 0.198022683 ubox
24 71 0.009651112 ubox
25 70 0.009575139 ubox
27 54 0.003598547 ubox
27 57 0.004281716 ubox
27 58 0.993353751 ubox
27 59 0.009702820 ubox
27 62 0.063600200 ubox
27 63 0.076277260 ubox
28 53 0.003604069 ubox
28 56 0.003554059 ubox
28 57 0.994996458 ubox
28 58 0.007463251 ubox
28 61 0.063230559 ubox
28 62 0.076297760 ubox
29 55 0.003658537 ubox
29 56 0.994679633 ubox
29 60 0.065084551 ubox
29 61 0.074323605 ubox
30 55 0.994424895 ubox
30 56 0.005213437 ubox
30 59 0.066495586 ubox
30 60 0.069448812 ubox
30 61 0.004215373 ubox
31 53 0.046867996 ubox
31 54 0.993642446 ubox
31 55 0.006911133 ubox
31 56 0.047668176 ubox
31 57 0.031726066 ubox
31 58 0.064711533 ubox
31 59 0.042693080 ubox
31 60 0.005874880 ubox
32 52 0.065547481 ubox
32 55 0.067357183 ubox
32 56 0.031719536 ubox
32 59 0.007017573 ubox
33 51 0.062641899 ubox
33 53 0.991234149 ubox
33 54 0.069810829 ubox
33 55 0.017562992 ubox
33 56 0.022437693 ubox
33 57 0.051486707 ubox
33 58 0.006943370 ubox
34 52 0.987679038 ubox
34 55 0.023797911 ubox
34 56 0.050082547 ubox
35 46 0.057963141 ubox
35 50 0.037929349 ubox
36 45 0.059127965 ubox
36 47 0.034905376 ubox
36 49 0.028884877 ubox
36 51 0.995684820 ubox
37 44 0.059083885 ubox
37 46 0.035097772 ubox
37 50 0.995967214 ubox
38 49 0.989630430 ubox
38 52 0.035344206 ubox
39 45 0.085262146 ubox
39 47 0.986922857 ubox
39 51 0.037652923 ubox
40 44 0.084721711 ubox
40 46 0.987712561 ubox
40 50 0.037654403 ubox
41 49 0.034846366 ubox
58 65 0.004203823 ubox
59 64 0.014269846 ubox
59 65 0.008878721 ubox
59 85 0.004824380 ubox
59 86 0.005414467 ubox
60 64 0.012020310 ubox
60 85 0.006731255 ubox
60 86 0.021491096 ubox
61 78 0.027535905 ubox
61 85 0.028458034 ubox
62 71 0.029299036 ubox
62 77 0.029769633 ubox
63 70 0.029570492 ubox
63 76 0.029752743 ubox
63 83 0.069029770 ubox
64 82 0.069501957 ubox
65 72 0.023119406 ubox
65 81 0.069266889 ubox
65 84 0.027032896 ubox
66 71 0.023241597 ubox
66 77 0.013592377 ubox
66 83 0.027021057 ubox
67 76 0.013604042 ubox
67 77 0.017309899 ubox
68 76 0.016203058 ubox
68 77 0.907135104 ubox
69 76 0.909300537 ubox
69 89 0.111581197 ubox
70 75 0.896880484 ubox
70 80 0.243528193 ubox
70 81 0.023456393 ubox
70 88 0.116122890 ubox
71 79 0.244443020 ubox
71 80 0.023960524 ubox
71 84 0.012767430 ubox
71 87 0.116148928 ubox
72 78 0.239063986 ubox
72 83 0.012741083 ubox
72 86 0.115689072 ubox
73 82 0.012456907 ubox
75 83 0.115577063 ubox
75 89 0.005383016 ubox
76 82 0.114984099 ubox
76 88 0.005810957 ubox
77 81 0.112542316 ubox
77 87 0.005798716 ubox
81 92 0.942043864 ubox
81 94 0.006859911 ubox
82 91 0.945130354 ubox
82 93 0.005003634 ubox
83 90 0.945910997 ubox
84 89 0.944550704 ubox
1 67 0.9500000 lbox
2 66 0.9500000 lbox
3 65 0.9500000 lbox
5 63 0.9500000 lbox
6 62 0.9500000 lbox
7 26 0.9500000 lbox
8 25 0.9500000 lbox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
27 58 0.9500000 lbox
28 57 0.9500000 lbox
29 56 0.9500000 lbox
30 55 0.9500000 lbox
31 54 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
70 75 0.9500000 lbox
81 92 0.9500000 lbox
82 91 0.9500000 lbox
83 90 0.9500000 lbox
84 89 0.9500000 lbox
showpage
end
%%EOF
