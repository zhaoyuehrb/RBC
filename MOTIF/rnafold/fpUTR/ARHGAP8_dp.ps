%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ARHGAP8)
} def

/sequence { (\
ACGUCCGGGGAGGGGCCAGGUGAGCGGCAGACCCGGCACGCAGGUGGGGGCCGGCGGGGUCCGUGGCCAGAGCUGCAGAGAGACAAGGCGGCGGCGGCUGCUGUGCUGGGUGCAGUGAGGAAGAGGCCCUCGGUGGUGCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 45 0.029548110 ubox
2 40 0.973450057 ubox
2 44 0.025646929 ubox
3 16 0.008688683 ubox
3 37 0.085622519 ubox
3 39 0.992405515 ubox
3 41 0.039150659 ubox
4 14 0.004695954 ubox
4 15 0.008774050 ubox
4 36 0.013716316 ubox
4 38 0.989264500 ubox
4 40 0.038843832 ubox
5 13 0.006027937 ubox
5 14 0.010204321 ubox
5 35 0.009909822 ubox
5 36 0.999530980 ubox
5 136 0.003362700 ubox
6 12 0.006042430 ubox
6 13 0.010203220 ubox
6 35 0.999803613 ubox
6 135 0.003367312 ubox
7 34 0.999093599 ubox
8 33 0.998347347 ubox
8 34 0.039732051 ubox
9 32 0.997258003 ubox
9 33 0.055601947 ubox
10 32 0.067748931 ubox
13 32 0.003235227 ubox
13 129 0.003225794 ubox
14 128 0.003597641 ubox
15 25 0.045713407 ubox
15 28 0.998421198 ubox
15 37 0.004126322 ubox
15 45 0.006643190 ubox
15 127 0.003933585 ubox
16 24 0.045670229 ubox
16 27 0.998812029 ubox
16 36 0.004140725 ubox
16 44 0.006954607 ubox
16 126 0.004197150 ubox
17 26 0.998610574 ubox
17 35 0.004149171 ubox
17 43 0.007206949 ubox
17 125 0.004189506 ubox
19 33 0.004189667 ubox
20 28 0.003210416 ubox
20 32 0.004196100 ubox
20 39 0.005534391 ubox
20 41 0.007476993 ubox
21 27 0.003196507 ubox
21 31 0.004154861 ubox
21 38 0.005539816 ubox
21 40 0.007475386 ubox
22 37 0.005533494 ubox
22 39 0.007402223 ubox
24 37 0.006956544 ubox
24 41 0.005428505 ubox
24 116 0.003481744 ubox
25 35 0.007582095 ubox
25 36 0.005339430 ubox
25 40 0.005434782 ubox
25 115 0.003490896 ubox
26 34 0.008785838 ubox
26 39 0.005414459 ubox
26 140 0.003903843 ubox
27 33 0.008727925 ubox
27 37 0.005388314 ubox
27 113 0.003598488 ubox
27 139 0.003924863 ubox
28 36 0.005388917 ubox
28 112 0.003606188 ubox
28 138 0.003925162 ubox
29 137 0.003463056 ubox
31 111 0.005565077 ubox
32 110 0.006195814 ubox
33 109 0.006200069 ubox
34 108 0.006200114 ubox
35 107 0.006198805 ubox
36 106 0.006211730 ubox
37 44 0.005128733 ubox
37 46 0.054813642 ubox
37 105 0.006213256 ubox
38 45 0.073366346 ubox
38 104 0.006207751 ubox
39 44 0.075017884 ubox
39 103 0.006200663 ubox
40 45 0.003600238 ubox
40 76 0.006264203 ubox
40 101 0.003714690 ubox
41 75 0.006326846 ubox
41 100 0.003800288 ubox
42 74 0.006182704 ubox
42 99 0.003774607 ubox
43 73 0.005728386 ubox
43 98 0.003682595 ubox
43 140 0.009164405 ubox
43 141 0.008447532 ubox
44 139 0.009170987 ubox
44 140 0.006094779 ubox
45 72 0.003580530 ubox
45 96 0.003530860 ubox
45 138 0.009135955 ubox
46 95 0.003401498 ubox
46 140 0.010650551 ubox
46 141 0.985439270 ubox
47 139 0.008931814 ubox
47 140 0.998199242 ubox
47 141 0.055067741 ubox
48 139 0.998193420 ubox
48 140 0.055656384 ubox
48 141 0.007077224 ubox
49 68 0.007018627 ubox
49 139 0.055487212 ubox
49 140 0.007163174 ubox
50 67 0.007038647 ubox
50 137 0.998070704 ubox
50 139 0.006974175 ubox
51 66 0.007053726 ubox
51 136 0.999943046 ubox
51 138 0.005227853 ubox
52 65 0.007035182 ubox
52 135 0.999922571 ubox
53 64 0.004959824 ubox
53 134 0.995411478 ubox
54 64 0.005439536 ubox
54 134 0.009246511 ubox
55 63 0.007403120 ubox
55 132 0.999666576 ubox
55 133 0.010872770 ubox
56 62 0.007421279 ubox
56 130 0.093999342 ubox
56 131 0.995251917 ubox
57 61 0.007301512 ubox
57 129 0.559670964 ubox
57 130 0.828081886 ubox
58 128 0.561822748 ubox
58 129 0.827195564 ubox
59 127 0.563862660 ubox
59 128 0.824913022 ubox
60 121 0.004184969 ubox
60 124 0.004482735 ubox
60 126 0.301974173 ubox
61 120 0.004997451 ubox
61 123 0.005410794 ubox
61 125 0.294306030 ubox
61 126 0.951945122 ubox
62 119 0.005084311 ubox
62 125 0.954030311 ubox
63 98 0.003917066 ubox
63 101 0.003489304 ubox
63 127 0.007618547 ubox
64 97 0.003942933 ubox
64 100 0.003533385 ubox
64 126 0.007605446 ubox
65 99 0.003927712 ubox
65 128 0.004635210 ubox
66 95 0.004108463 ubox
66 98 0.004010047 ubox
66 127 0.006508505 ubox
67 94 0.004113362 ubox
67 97 0.004015027 ubox
67 120 0.995571523 ubox
67 126 0.006510321 ubox
68 93 0.004109751 ubox
68 96 0.004009342 ubox
68 117 0.005133608 ubox
68 119 0.994337021 ubox
68 125 0.006497450 ubox
69 116 0.004032186 ubox
72 92 0.006454309 ubox
72 116 0.996091686 ubox
73 91 0.006458630 ubox
73 115 0.999913122 ubox
74 90 0.006453842 ubox
74 114 0.999707179 ubox
75 89 0.006458994 ubox
75 113 0.999943225 ubox
76 88 0.006453436 ubox
76 112 0.999925104 ubox
77 111 0.993606634 ubox
79 107 0.029759544 ubox
80 106 0.031221843 ubox
81 107 0.988581374 ubox
82 106 0.994386294 ubox
83 104 0.203782622 ubox
83 111 0.010941851 ubox
84 103 0.203781744 ubox
84 105 0.937452251 ubox
84 108 0.018658956 ubox
84 110 0.014936112 ubox
85 102 0.137985343 ubox
85 104 0.880643526 ubox
85 107 0.018175864 ubox
86 99 0.004928989 ubox
86 102 0.052441645 ubox
86 107 0.003394419 ubox
87 98 0.005183029 ubox
87 99 0.004140960 ubox
87 101 0.043874874 ubox
87 102 0.958518916 ubox
87 106 0.003995328 ubox
87 107 0.016434825 ubox
88 98 0.004175135 ubox
88 101 0.998478775 ubox
88 104 0.021087879 ubox
88 106 0.016605387 ubox
89 96 0.005368698 ubox
89 97 0.003934808 ubox
89 100 0.999523347 ubox
89 103 0.022267461 ubox
89 105 0.016574965 ubox
90 95 0.005526314 ubox
90 99 0.998804122 ubox
90 102 0.022316805 ubox
90 104 0.011659845 ubox
91 98 0.999550718 ubox
91 101 0.022366607 ubox
91 104 0.011638336 ubox
92 97 0.999223825 ubox
92 100 0.022366151 ubox
92 103 0.016490232 ubox
93 99 0.022195863 ubox
93 102 0.016537956 ubox
94 98 0.021720820 ubox
94 101 0.016555696 ubox
95 100 0.016531934 ubox
100 116 0.003955812 ubox
101 115 0.004043567 ubox
102 114 0.004086737 ubox
103 113 0.004095050 ubox
104 112 0.004085567 ubox
105 111 0.004064466 ubox
105 116 0.003907694 ubox
106 110 0.004067792 ubox
106 115 0.003993560 ubox
107 114 0.003993495 ubox
108 113 0.003991037 ubox
108 141 0.004464747 ubox
109 140 0.004525479 ubox
110 139 0.004526000 ubox
111 138 0.004510525 ubox
112 137 0.004009810 ubox
113 135 0.005230293 ubox
114 134 0.005901901 ubox
116 132 0.005986724 ubox
117 131 0.006127273 ubox
118 130 0.006132173 ubox
119 129 0.006122700 ubox
120 128 0.006103019 ubox
2 40 0.9500000 lbox
3 39 0.9500000 lbox
4 38 0.9500000 lbox
5 36 0.9500000 lbox
6 35 0.9500000 lbox
7 34 0.9500000 lbox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
15 28 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
46 141 0.9500000 lbox
47 140 0.9500000 lbox
48 139 0.9500000 lbox
50 137 0.9500000 lbox
51 136 0.9500000 lbox
52 135 0.9500000 lbox
53 134 0.9500000 lbox
55 132 0.9500000 lbox
56 131 0.9500000 lbox
57 130 0.9500000 lbox
58 129 0.9500000 lbox
59 128 0.9500000 lbox
61 126 0.9500000 lbox
62 125 0.9500000 lbox
67 120 0.9500000 lbox
68 119 0.9500000 lbox
72 116 0.9500000 lbox
73 115 0.9500000 lbox
74 114 0.9500000 lbox
75 113 0.9500000 lbox
76 112 0.9500000 lbox
77 111 0.9500000 lbox
81 107 0.9500000 lbox
82 106 0.9500000 lbox
84 105 0.9500000 lbox
85 104 0.9500000 lbox
87 102 0.9500000 lbox
88 101 0.9500000 lbox
89 100 0.9500000 lbox
90 99 0.9500000 lbox
91 98 0.9500000 lbox
92 97 0.9500000 lbox
showpage
end
%%EOF
