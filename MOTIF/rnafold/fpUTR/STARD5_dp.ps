%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (STARD5)
} def

/sequence { (\
GAGCUCCAGCCUCCAGGCACCCGGGAUCCAGCGCCGCCGCUCAUAACACCCGCGACCCCGCAGCUAAGCGCAGCUCCCGACGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.166631935 ubox
1 28 0.007332030 ubox
1 42 0.018268476 ubox
1 76 0.232584832 ubox
2 12 0.166991870 ubox
2 27 0.006872495 ubox
2 41 0.018281043 ubox
2 65 0.028101692 ubox
2 75 0.233440986 ubox
3 10 0.124540105 ubox
3 11 0.130940113 ubox
3 18 0.076010882 ubox
3 40 0.018283388 ubox
3 64 0.028978689 ubox
3 69 0.006234821 ubox
3 74 0.233577931 ubox
3 83 0.594068994 ubox
4 9 0.161431019 ubox
4 16 0.009333691 ubox
4 17 0.075560041 ubox
4 25 0.007353947 ubox
4 39 0.018251967 ubox
4 63 0.028974069 ubox
4 68 0.006244889 ubox
4 73 0.233511750 ubox
4 82 0.593987016 ubox
5 15 0.009479620 ubox
5 16 0.069909520 ubox
5 17 0.003253591 ubox
5 24 0.007188687 ubox
5 25 0.013864977 ubox
5 26 0.014896937 ubox
5 62 0.027080542 ubox
5 67 0.006005899 ubox
5 72 0.219466882 ubox
5 80 0.129845105 ubox
6 16 0.018264780 ubox
6 17 0.044718088 ubox
6 23 0.007719984 ubox
6 24 0.028385731 ubox
6 25 0.021252698 ubox
6 79 0.117969858 ubox
7 16 0.046941248 ubox
7 23 0.028433479 ubox
7 24 0.021187412 ubox
8 65 0.010154144 ubox
8 75 0.008890157 ubox
9 18 0.969361666 ubox
9 32 0.006009168 ubox
9 34 0.008584897 ubox
9 64 0.010504644 ubox
9 69 0.050896411 ubox
9 71 0.079823333 ubox
9 74 0.008980510 ubox
9 83 0.011270150 ubox
10 17 0.970351833 ubox
10 25 0.005279594 ubox
10 31 0.005983926 ubox
10 33 0.008595741 ubox
10 63 0.010268686 ubox
10 68 0.047553242 ubox
10 70 0.079840316 ubox
10 73 0.008931316 ubox
10 82 0.011189703 ubox
11 16 0.967226677 ubox
11 17 0.008944359 ubox
11 24 0.005266591 ubox
11 25 0.006868331 ubox
11 31 0.008254981 ubox
11 63 0.009375514 ubox
11 68 0.078107093 ubox
12 16 0.010055513 ubox
12 23 0.004946231 ubox
12 24 0.003758636 ubox
12 25 0.013041811 ubox
12 26 0.040876295 ubox
12 30 0.005294439 ubox
12 62 0.009241589 ubox
12 67 0.079038736 ubox
12 80 0.008656917 ubox
13 23 0.003880953 ubox
13 24 0.017046760 ubox
13 25 0.044112067 ubox
13 79 0.008105370 ubox
14 23 0.017076079 ubox
14 24 0.043946878 ubox
15 65 0.009814670 ubox
16 22 0.048626512 ubox
16 35 0.003367950 ubox
16 38 0.004801703 ubox
16 57 0.008792365 ubox
16 58 0.012472359 ubox
16 59 0.010431797 ubox
16 64 0.008800404 ubox
16 65 0.087274402 ubox
17 21 0.048088523 ubox
17 34 0.003371306 ubox
17 37 0.004810563 ubox
17 56 0.008808975 ubox
17 57 0.012499506 ubox
17 58 0.010389949 ubox
17 61 0.007354887 ubox
17 64 0.088836937 ubox
17 83 0.172505123 ubox
18 33 0.003359972 ubox
18 36 0.004737383 ubox
18 60 0.007202995 ubox
18 63 0.088847148 ubox
18 82 0.172476685 ubox
22 33 0.005755255 ubox
22 36 0.020623453 ubox
22 39 0.005469016 ubox
22 52 0.112449905 ubox
22 54 0.006480038 ubox
22 60 0.078344457 ubox
22 79 0.954414996 ubox
22 82 0.004972980 ubox
23 29 0.048065457 ubox
23 32 0.006078160 ubox
23 35 0.021529496 ubox
23 38 0.006387004 ubox
23 50 0.027527259 ubox
23 51 0.203405022 ubox
23 53 0.005747398 ubox
23 58 0.022752033 ubox
23 59 0.081466825 ubox
23 77 0.003717123 ubox
23 78 0.970816838 ubox
24 28 0.047338735 ubox
24 34 0.021498715 ubox
24 35 0.006771607 ubox
24 37 0.006330340 ubox
24 49 0.027649752 ubox
24 50 0.203549309 ubox
24 51 0.009245185 ubox
24 57 0.022955769 ubox
24 58 0.081443701 ubox
24 76 0.003881295 ubox
24 77 0.970867059 ubox
24 78 0.005041309 ubox
25 34 0.006905856 ubox
25 42 0.003680906 ubox
25 49 0.203217769 ubox
25 50 0.009221931 ubox
25 56 0.023101204 ubox
25 57 0.081292101 ubox
25 76 0.970744541 ubox
25 77 0.005115994 ubox
26 41 0.003262838 ubox
26 44 0.059518002 ubox
26 75 0.905061765 ubox
27 43 0.057984521 ubox
27 55 0.075710658 ubox
28 54 0.076317245 ubox
30 41 0.257611080 ubox
30 65 0.006905052 ubox
30 75 0.286821130 ubox
31 37 0.016092132 ubox
31 40 0.270180970 ubox
31 53 0.060675880 ubox
31 61 0.040353983 ubox
31 64 0.007236859 ubox
31 69 0.028538980 ubox
31 71 0.834300926 ubox
31 74 0.466407422 ubox
31 83 0.005292591 ubox
32 36 0.016013125 ubox
32 39 0.270206504 ubox
32 52 0.060893335 ubox
32 54 0.012605776 ubox
32 60 0.040395620 ubox
32 63 0.007234097 ubox
32 68 0.028532398 ubox
32 70 0.835312012 ubox
32 73 0.466377900 ubox
32 82 0.005297988 ubox
33 38 0.257272082 ubox
33 40 0.032998697 ubox
33 51 0.058158568 ubox
33 53 0.013907448 ubox
33 59 0.040119399 ubox
33 61 0.006523236 ubox
33 64 0.019866052 ubox
33 69 0.835220778 ubox
33 71 0.233982298 ubox
33 74 0.049826788 ubox
33 81 0.005263501 ubox
34 39 0.033296597 ubox
34 52 0.013399707 ubox
34 60 0.006374314 ubox
34 63 0.020024051 ubox
34 68 0.834344933 ubox
34 70 0.166681558 ubox
34 73 0.049754744 ubox
35 52 0.003902647 ubox
35 54 0.026687423 ubox
35 60 0.019102640 ubox
35 70 0.434030296 ubox
35 79 0.005116821 ubox
36 51 0.007051580 ubox
36 53 0.027000546 ubox
36 59 0.019056715 ubox
36 61 0.031145577 ubox
36 64 0.414404098 ubox
36 69 0.466739364 ubox
36 71 0.044273473 ubox
36 74 0.006276366 ubox
36 78 0.005015509 ubox
37 52 0.025884957 ubox
37 60 0.031138039 ubox
37 63 0.414351542 ubox
37 68 0.466584337 ubox
37 70 0.032150368 ubox
37 73 0.006269037 ubox
38 52 0.009131951 ubox
38 54 0.143522674 ubox
38 60 0.029375756 ubox
38 70 0.034150447 ubox
39 51 0.019783385 ubox
39 53 0.144185200 ubox
39 59 0.029717086 ubox
39 61 0.373080147 ubox
39 64 0.859784289 ubox
39 69 0.046126772 ubox
39 71 0.004478525 ubox
39 74 0.005469461 ubox
40 52 0.144071867 ubox
40 60 0.372896014 ubox
40 63 0.860631614 ubox
40 68 0.046134305 ubox
40 70 0.004474848 ubox
40 73 0.005476402 ubox
41 55 0.153612399 ubox
41 62 0.851853697 ubox
41 67 0.044317939 ubox
41 72 0.005206784 ubox
42 54 0.154561570 ubox
44 66 0.022112069 ubox
45 65 0.022547437 ubox
51 60 0.020871803 ubox
51 70 0.006767872 ubox
51 79 0.003375655 ubox
52 59 0.025155229 ubox
52 61 0.900549024 ubox
52 64 0.011858286 ubox
52 69 0.008030024 ubox
52 71 0.014009559 ubox
52 74 0.025823221 ubox
52 78 0.003420335 ubox
52 83 0.014549103 ubox
53 60 0.901432221 ubox
53 63 0.011911171 ubox
53 68 0.008055546 ubox
53 70 0.014102352 ubox
53 73 0.025855212 ubox
53 82 0.014605014 ubox
54 59 0.889380305 ubox
54 69 0.013495677 ubox
54 76 0.004395516 ubox
54 81 0.014490911 ubox
55 75 0.004345134 ubox
59 70 0.101784116 ubox
59 79 0.009952919 ubox
60 69 0.106688925 ubox
60 71 0.051734829 ubox
60 74 0.020502597 ubox
60 78 0.010024924 ubox
61 68 0.106641287 ubox
61 70 0.051804456 ubox
61 73 0.020531208 ubox
62 75 0.110096781 ubox
63 69 0.076289514 ubox
63 71 0.160231398 ubox
63 74 0.156134569 ubox
64 68 0.075812270 ubox
64 70 0.160278756 ubox
64 73 0.156314115 ubox
65 72 0.149885699 ubox
67 75 0.018325761 ubox
68 74 0.024292031 ubox
68 83 0.026806411 ubox
69 73 0.024140142 ubox
69 82 0.026833172 ubox
70 81 0.026463785 ubox
70 83 0.006128021 ubox
71 82 0.006130208 ubox
73 83 0.010708355 ubox
74 82 0.010712890 ubox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
11 16 0.9500000 lbox
22 79 0.9500000 lbox
23 78 0.9500000 lbox
24 77 0.9500000 lbox
25 76 0.9500000 lbox
26 75 0.9500000 lbox
31 71 0.9500000 lbox
32 70 0.9500000 lbox
33 69 0.9500000 lbox
34 68 0.9500000 lbox
39 64 0.9500000 lbox
40 63 0.9500000 lbox
41 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
