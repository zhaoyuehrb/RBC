%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUGGCCAAGGCCGGGCGGCCGCCUUGCCCCCGCUUCCUUUCACGCUGUCGCUGCCCGUAGGUGGUUGUGGCCACUGUGCCCGGAGGGAGGCGGCGGUGGCCAGUA\
) } def
/len { sequence length } bind def

/coor [
[41.10265350 246.54173279]
[33.22800446 259.30850220]
[32.56858444 275.11593628]
[19.30171967 281.88644409]
[11.42707062 294.65319824]
[3.55242181 307.41995239]
[-4.32222700 320.18667603]
[-4.25807571 336.58572388]
[-18.56224632 344.60586548]
[-32.51983261 335.99670410]
[-31.77246857 319.61459351]
[-17.08897781 312.31204224]
[-9.21432877 299.54528809]
[-1.33967972 286.77853394]
[6.53496885 274.01177979]
[6.63114357 259.11749268]
[20.46125603 251.43383789]
[28.33590508 238.66709900]
[35.26213455 225.36192322]
[41.20333099 211.58868408]
[47.14452744 197.81544495]
[53.08572388 184.04220581]
[59.02692032 170.26896667]
[64.96811676 156.49572754]
[70.90930939 142.72247314]
[69.94344330 137.90002441]
[72.10908508 132.43322754]
[77.61734009 128.33706665]
[84.34932709 114.93257904]
[91.08131409 101.52809143]
[90.32730103 97.56740570]
[91.40615845 93.29646301]
[94.41139221 89.57963562]
[99.02932739 87.28734589]
[106.90397644 74.52059174]
[114.77862549 61.75384521]
[122.65327454 48.98709488]
[130.52792358 36.22034454]
[138.40257263 23.45359421]
[146.27722168 10.68684387]
[154.15187073 -2.07990599]
[162.02651978 -14.84665585]
[169.90116882 -27.61340523]
[169.42425537 -47.66246414]
[186.57353210 -56.39373398]
[193.69253540 -69.59675598]
[200.81155396 -82.79977417]
[200.55073547 -98.61883545]
[213.40148926 -106.14926910]
[220.52049255 -119.35228729]
[220.25967407 -135.17134094]
[233.11042786 -142.70178223]
[240.22943115 -155.90480042]
[247.34843445 -169.10781860]
[254.46743774 -182.31085205]
[261.58645630 -195.51387024]
[268.31842041 -208.91835022]
[274.65771484 -222.51296997]
[269.01748657 -237.27655029]
[275.54486084 -251.66992188]
[290.36724854 -257.15374756]
[304.69079590 -250.47456360]
[310.01760864 -235.59501648]
[303.18734741 -221.34288025]
[288.25231934 -216.17370605]
[281.91305542 -202.57908630]
[282.73825073 -197.73057556]
[280.41452026 -192.32907104]
[274.78945923 -188.39486694]
[267.67047119 -175.19183350]
[260.55145264 -161.98881531]
[253.43244934 -148.78579712]
[246.31344604 -135.58277893]
[247.08345032 -120.70809174]
[233.72351074 -112.23328400]
[226.60450745 -99.03026581]
[227.37451172 -84.15557861]
[214.01457214 -75.68077087]
[206.89556885 -62.47774887]
[199.77655029 -49.27472687]
[203.62127686 -39.60337448]
[201.37864685 -29.21358109]
[193.56831360 -21.68136787]
[182.66792297 -19.73875809]
[174.79327393 -6.97200727]
[166.91862488 5.79474258]
[159.04397583 18.56149292]
[151.16932678 31.32824326]
[143.29467773 44.09499359]
[135.42002869 56.86174393]
[127.54537964 69.62849426]
[119.67073059 82.39524078]
[111.79608154 95.16199493]
[104.48580170 108.26007843]
[97.75381470 121.66456604]
[91.02182770 135.06906128]
[84.68255615 148.66368103]
[78.74135590 162.43692017]
[72.80016327 176.21015930]
[66.85896301 189.98339844]
[60.91777039 203.75663757]
[54.97657013 217.52987671]
[49.03537369 231.30313110]
[63.88084030 229.15553284]
[75.01737213 239.20429993]
[74.40154266 254.19165039]
[62.47814941 263.29290771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[2 17]
[4 15]
[5 14]
[6 13]
[7 12]
[19 103]
[20 102]
[21 101]
[22 100]
[23 99]
[24 98]
[25 97]
[28 96]
[29 95]
[30 94]
[34 93]
[35 92]
[36 91]
[37 90]
[38 89]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[45 80]
[46 79]
[47 78]
[49 76]
[50 75]
[52 73]
[53 72]
[54 71]
[55 70]
[56 69]
[57 66]
[58 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
