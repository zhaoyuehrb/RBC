%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAACCCGGAAGUGGAACUCUGAGCCAUUCAGCGUUUGGGUGAAGACGGAGGCGGGUUCUACAGAGACGUAGGCUGUCAGGGAGUGUUUAUUUCGCGUCCGCUUCUGUUUCUCCGCGCCCCUGUGCUGCCCCGACUCACAUACUCGUCCAGAACCGGCCUCAGCCUCUCCGCGCAGAAGUUUCCCGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[75.63302612 407.47262573]
[62.46751785 399.56283569]
[55.03480148 386.12219238]
[55.33423615 370.76623535]
[63.28527069 357.62557983]
[76.74912262 350.23504639]
[76.99455261 335.23703003]
[77.23997498 320.23904419]
[77.48540497 305.24105835]
[75.61816406 303.12979126]
[74.48165894 300.14581299]
[74.41472626 296.56622314]
[75.64874268 292.78637695]
[78.26958466 289.27874756]
[79.49539948 274.32891846]
[80.72121429 259.37908936]
[81.94702911 244.42924500]
[83.17284393 229.47943115]
[84.39865875 214.52960205]
[85.50212860 199.57023621]
[86.48317719 184.60235596]
[87.46422577 169.63447571]
[80.57588959 156.42840576]
[89.19920349 143.16381836]
[90.18025208 128.19593811]
[77.70820618 119.86238861]
[64.25511169 126.49671936]
[50.80202103 133.13104248]
[37.34893036 139.76538086]
[23.89583969 146.39970398]
[10.44274902 153.03404236]
[3.94506907 167.70236206]
[-11.61021233 171.62826538]
[-24.29041481 161.80015564]
[-24.36837196 145.75727844]
[-11.78428173 135.80639648]
[3.80841851 139.58094788]
[17.26150894 132.94660950]
[30.71460152 126.31228638]
[44.16769028 119.67795563]
[57.62078476 113.04362488]
[71.07387543 106.40929413]
[79.85941315 84.33782959]
[99.34041595 78.61054230]
[104.16200256 64.40658569]
[108.98359680 50.20263672]
[99.95893097 33.55945969]
[105.84828186 15.90220165]
[122.47702026 8.27493858]
[126.83129120 -6.07916689]
[131.18556213 -20.43327141]
[135.53982544 -34.78737640]
[139.89410400 -49.14148331]
[136.49594116 -64.59344482]
[147.59461975 -74.52666473]
[151.94888306 -88.88076782]
[156.30314636 -103.23487091]
[160.65742493 -117.58898163]
[165.01168823 -131.94308472]
[169.36596680 -146.29719543]
[157.39440918 -160.13195801]
[156.95143127 -179.31298828]
[169.36958313 -195.08892822]
[189.85852051 -199.54666138]
[192.05947876 -214.38430786]
[194.26043701 -229.22195435]
[188.63177490 -244.00805664]
[198.15281677 -255.46228027]
[200.35377502 -270.29992676]
[193.30734253 -281.11575317]
[195.45642090 -293.43740845]
[205.10945129 -300.74423218]
[207.55288696 -315.54388428]
[209.99630737 -330.34353638]
[204.61033630 -345.21975708]
[214.31752014 -356.51666260]
[216.76094055 -371.31631470]
[219.08322144 -386.13543701]
[221.28417969 -400.97308350]
[223.48513794 -415.81072998]
[225.68609619 -430.64837646]
[227.88703918 -445.48602295]
[226.04904175 -454.45046997]
[230.24731445 -460.54766846]
[232.69075012 -475.34732056]
[235.13418579 -490.14694214]
[237.57760620 -504.94659424]
[225.26148987 -512.11602783]
[216.15348816 -523.03765869]
[211.33314514 -536.38500977]
[211.36090088 -550.54620361]
[216.21301270 -563.81848145]
[225.28686523 -574.61273193]
[237.47569275 -581.64428711]
[251.30361938 -584.08514404]
[253.98887634 -598.84283447]
[256.67413330 -613.60052490]
[245.85913086 -624.72772217]
[243.68336487 -640.09155273]
[250.98345947 -653.78417969]
[264.95239258 -660.54052734]
[280.21878052 -657.76275635]
[290.91244507 -646.51885986]
[292.92141724 -631.13238525]
[285.47320557 -617.51971436]
[271.43182373 -610.91528320]
[268.74658203 -596.15759277]
[266.06130981 -581.39990234]
[279.50503540 -573.02380371]
[288.73019409 -560.10058594]
[292.30163574 -544.58984375]
[289.64428711 -528.85754395]
[281.13543701 -515.31518555]
[268.05166626 -506.04992676]
[252.37725830 -502.50317383]
[249.93383789 -487.70352173]
[247.49040222 -472.90386963]
[245.04696655 -458.10421753]
[242.72470093 -443.28506470]
[240.52374268 -428.44741821]
[238.32278442 -413.60977173]
[236.12182617 -398.77212524]
[233.92086792 -383.93447876]
[236.05273438 -376.84530640]
[231.56059265 -368.87286377]
[229.11715698 -354.07321167]
[234.67790222 -340.25558472]
[224.79595947 -327.90008545]
[222.35252380 -313.10043335]
[219.90910339 -298.30078125]
[226.97096252 -282.24288940]
[215.19142151 -268.09896851]
[212.99046326 -253.26132202]
[218.77653503 -239.53651428]
[209.09808350 -227.02099609]
[206.89712524 -212.18334961]
[204.69616699 -197.34570312]
[214.76954651 -186.23144531]
[229.75148010 -186.96745300]
[240.17794800 -198.84449768]
[255.95411682 -199.78683472]
[267.72027588 -189.23536682]
[268.49575806 -173.45011902]
[257.82049561 -161.79618835]
[242.02790833 -161.18763733]
[230.48750305 -171.98551941]
[215.50556946 -171.24951172]
[210.68107605 -154.92610168]
[198.62335205 -144.32321167]
[183.72006226 -141.94291687]
[179.36579895 -127.58881378]
[175.01152039 -113.23471069]
[170.65725708 -98.88059998]
[166.30299377 -84.52649689]
[161.94871521 -70.17239380]
[165.65832520 -55.74713516]
[154.24819946 -44.78721237]
[149.89393616 -30.43310738]
[145.53967285 -16.07900238]
[141.18539429 -1.72489679]
[136.83113098 12.62920856]
[144.27259827 21.30212212]
[146.62045288 32.60870743]
[143.17646790 43.75659561]
[134.68760681 51.93520737]
[123.18754578 55.02422714]
[118.36595917 69.22817993]
[113.54436493 83.43212891]
[123.95415497 96.99172211]
[121.63463593 115.96076202]
[105.14813232 129.17698669]
[104.16708374 144.14486694]
[110.98524475 158.42153931]
[102.43210602 170.61552429]
[101.45105743 185.58340454]
[100.47001648 200.55128479]
[103.03444672 209.33552551]
[99.34848785 215.75541687]
[98.12267303 230.70524597]
[96.89685822 245.65507507]
[95.67104340 260.60488892]
[94.44522858 275.55471802]
[93.21940613 290.50454712]
[92.48339081 305.48648071]
[92.23796844 320.48446655]
[91.99254608 335.48248291]
[91.74711609 350.48046875]
[104.96195221 358.30758667]
[112.47878265 371.70135498]
[112.27561951 387.05889893]
[104.40711212 400.24911499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[14 183]
[15 182]
[16 181]
[17 180]
[18 179]
[19 178]
[20 176]
[21 175]
[22 174]
[24 172]
[25 171]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[44 168]
[45 167]
[46 166]
[49 161]
[50 160]
[51 159]
[52 158]
[53 157]
[55 155]
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[64 137]
[65 136]
[66 135]
[68 133]
[69 132]
[72 130]
[73 129]
[74 128]
[76 126]
[77 125]
[78 123]
[79 122]
[80 121]
[81 120]
[82 119]
[84 118]
[85 117]
[86 116]
[87 115]
[95 108]
[96 107]
[97 106]
[138 147]
[139 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
