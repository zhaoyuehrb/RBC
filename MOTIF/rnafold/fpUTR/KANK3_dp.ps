%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KANK3)
} def

/sequence { (\
GGGCUCGGGUGCGGGCGCGGCUGGGGCUGCGGCUUCAGGGUGCCUCUGACAGCUGCUGCAGGAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.006919103 ubox
1 28 0.613383096 ubox
1 44 0.006284289 ubox
1 45 0.008517357 ubox
1 57 0.007880618 ubox
2 21 0.006586640 ubox
2 22 0.071416036 ubox
2 27 0.649971905 ubox
2 28 0.345491787 ubox
2 43 0.006098395 ubox
2 44 0.012367259 ubox
2 54 0.027093162 ubox
2 56 0.007130761 ubox
2 57 0.034975323 ubox
3 10 0.004179447 ubox
3 12 0.070999059 ubox
3 16 0.130686382 ubox
3 21 0.075103502 ubox
3 27 0.363477736 ubox
3 41 0.005001871 ubox
3 43 0.012280327 ubox
3 53 0.028623518 ubox
3 56 0.036714104 ubox
3 59 0.156287767 ubox
4 9 0.004304090 ubox
4 11 0.071038390 ubox
4 15 0.130819564 ubox
4 20 0.074752781 ubox
4 24 0.022474451 ubox
4 25 0.901396514 ubox
4 26 0.355547718 ubox
4 40 0.005311044 ubox
4 42 0.012260009 ubox
4 52 0.028623788 ubox
4 55 0.035773669 ubox
4 58 0.156412969 ubox
4 61 0.012049103 ubox
4 62 0.006354999 ubox
5 14 0.130768688 ubox
5 19 0.013835256 ubox
5 20 0.010363786 ubox
5 24 0.905873747 ubox
5 25 0.346475192 ubox
5 39 0.005380099 ubox
5 40 0.005075929 ubox
5 49 0.022910066 ubox
5 51 0.020174794 ubox
5 60 0.011813584 ubox
5 61 0.005883481 ubox
5 63 0.004254969 ubox
6 13 0.131762003 ubox
6 17 0.005509918 ubox
6 19 0.074348581 ubox
6 23 0.910757398 ubox
6 24 0.337627507 ubox
6 38 0.005368947 ubox
6 39 0.005306143 ubox
6 48 0.028358715 ubox
6 55 0.156549643 ubox
6 58 0.008501891 ubox
6 62 0.004431389 ubox
7 12 0.131251140 ubox
7 16 0.005521137 ubox
7 18 0.075392551 ubox
7 22 0.913632838 ubox
7 47 0.028502810 ubox
7 54 0.159563789 ubox
7 57 0.008576978 ubox
8 21 0.915156435 ubox
8 22 0.324790301 ubox
8 36 0.003447809 ubox
8 46 0.028461450 ubox
8 47 0.006330007 ubox
8 53 0.160134744 ubox
8 54 0.011471447 ubox
8 56 0.008526020 ubox
8 57 0.005393823 ubox
9 16 0.075425721 ubox
9 18 0.011549969 ubox
9 21 0.325673722 ubox
9 35 0.003329118 ubox
9 45 0.014846717 ubox
9 46 0.006593145 ubox
9 50 0.023015047 ubox
9 53 0.011640667 ubox
9 56 0.005490389 ubox
10 15 0.074543906 ubox
10 17 0.011671830 ubox
10 19 0.930915086 ubox
10 20 0.256044976 ubox
10 37 0.012078351 ubox
10 48 0.004003557 ubox
10 49 0.022826675 ubox
10 51 0.159693853 ubox
10 52 0.009671492 ubox
10 55 0.005348161 ubox
10 60 0.003362874 ubox
11 16 0.011921821 ubox
11 18 0.954629867 ubox
11 21 0.006260470 ubox
11 36 0.012252826 ubox
11 47 0.006895757 ubox
11 50 0.159848808 ubox
11 53 0.009980018 ubox
11 59 0.003661730 ubox
12 17 0.953450476 ubox
12 19 0.173150623 ubox
12 20 0.006230127 ubox
12 48 0.145459622 ubox
12 52 0.010008325 ubox
12 58 0.003660499 ubox
13 18 0.175380972 ubox
13 34 0.013253996 ubox
13 44 0.004293619 ubox
13 45 0.132397248 ubox
13 46 0.071494095 ubox
13 47 0.077468886 ubox
13 57 0.003398905 ubox
14 33 0.013549626 ubox
14 44 0.173093395 ubox
14 45 0.012112967 ubox
14 46 0.052172020 ubox
15 43 0.176355721 ubox
15 44 0.018889718 ubox
15 45 0.036324006 ubox
15 59 0.004362456 ubox
16 31 0.014022182 ubox
16 42 0.176841990 ubox
16 58 0.004451393 ubox
17 27 0.010705234 ubox
17 30 0.023339636 ubox
17 41 0.176784619 ubox
17 43 0.053214320 ubox
17 56 0.079842249 ubox
17 59 0.043793222 ubox
18 26 0.010749898 ubox
18 29 0.023667438 ubox
18 40 0.176724700 ubox
18 42 0.053274785 ubox
18 55 0.079953804 ubox
18 58 0.043833423 ubox
19 28 0.027463773 ubox
19 41 0.051546387 ubox
19 44 0.005227493 ubox
19 54 0.079910562 ubox
19 57 0.042731466 ubox
20 27 0.028135700 ubox
20 43 0.005233936 ubox
20 53 0.079975138 ubox
20 56 0.042428919 ubox
21 26 0.028050349 ubox
21 38 0.181770719 ubox
21 39 0.031855718 ubox
21 42 0.004645817 ubox
21 52 0.079975082 ubox
21 55 0.042342267 ubox
21 61 0.057575122 ubox
21 62 0.025357957 ubox
22 37 0.184099819 ubox
22 38 0.016172770 ubox
22 51 0.079924975 ubox
22 60 0.057819347 ubox
22 61 0.024344457 ubox
23 36 0.184861231 ubox
23 46 0.008051789 ubox
23 47 0.003237434 ubox
23 50 0.079303067 ubox
23 59 0.056005366 ubox
24 34 0.004384900 ubox
24 35 0.187721489 ubox
24 45 0.015234790 ubox
24 46 0.007739462 ubox
24 47 0.006422571 ubox
24 54 0.003694636 ubox
25 33 0.003545902 ubox
25 34 0.197916948 ubox
25 44 0.015766323 ubox
25 45 0.006877264 ubox
25 46 0.006912227 ubox
25 47 0.019242878 ubox
25 54 0.040949244 ubox
25 57 0.050696031 ubox
26 33 0.199320047 ubox
26 43 0.015754649 ubox
26 44 0.006894638 ubox
26 45 0.006419857 ubox
26 46 0.019915556 ubox
26 53 0.041632986 ubox
26 56 0.045726691 ubox
26 59 0.625337772 ubox
27 32 0.199315758 ubox
27 42 0.015650085 ubox
27 52 0.041742029 ubox
27 55 0.044172769 ubox
27 58 0.624705221 ubox
27 61 0.066634732 ubox
27 62 0.010667571 ubox
28 51 0.041730809 ubox
28 58 0.015908909 ubox
28 60 0.073247398 ubox
28 61 0.011360038 ubox
29 41 0.012470852 ubox
29 43 0.022636995 ubox
29 50 0.041705489 ubox
29 53 0.019056644 ubox
29 56 0.971877986 ubox
29 57 0.008599859 ubox
29 59 0.080339085 ubox
30 40 0.012914472 ubox
30 42 0.022670761 ubox
30 48 0.023300967 ubox
30 52 0.019090550 ubox
30 55 0.973950211 ubox
30 58 0.079751929 ubox
31 41 0.022392782 ubox
31 44 0.027163798 ubox
31 47 0.012602166 ubox
31 54 0.974746205 ubox
31 57 0.072366522 ubox
32 41 0.006989015 ubox
32 43 0.027353041 ubox
32 46 0.012263050 ubox
32 53 0.975711971 ubox
32 56 0.069964392 ubox
33 39 0.022307455 ubox
33 40 0.007953390 ubox
33 42 0.027393505 ubox
33 52 0.975726082 ubox
33 55 0.069192950 ubox
34 38 0.020101025 ubox
34 39 0.007369824 ubox
34 49 0.008007088 ubox
34 51 0.962140300 ubox
34 52 0.013530677 ubox
35 49 0.971853760 ubox
35 51 0.007156641 ubox
36 42 0.003464008 ubox
36 48 0.981635293 ubox
37 45 0.015236781 ubox
37 47 0.981393203 ubox
38 44 0.018461733 ubox
38 45 0.011401072 ubox
38 46 0.981370640 ubox
38 47 0.012232859 ubox
38 54 0.005150061 ubox
39 43 0.018933228 ubox
39 44 0.098532423 ubox
39 45 0.970112734 ubox
39 46 0.017056682 ubox
39 47 0.004043789 ubox
39 53 0.005271800 ubox
40 44 0.949235767 ubox
40 45 0.015113388 ubox
40 46 0.004532437 ubox
41 51 0.005299344 ubox
42 50 0.005304548 ubox
44 62 0.011862362 ubox
45 62 0.046246971 ubox
45 63 0.017526113 ubox
46 61 0.082056995 ubox
46 62 0.020642824 ubox
47 60 0.082419224 ubox
47 61 0.019915946 ubox
48 59 0.082493208 ubox
50 58 0.084755581 ubox
51 57 0.084569206 ubox
52 56 0.082717151 ubox
52 59 0.012905659 ubox
53 58 0.012947548 ubox
53 61 0.004918404 ubox
54 60 0.005049377 ubox
55 59 0.005164206 ubox
56 62 0.008353898 ubox
57 61 0.012028692 ubox
1 28 0.9500000 lbox
2 27 0.9500000 lbox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
29 56 0.9500000 lbox
30 55 0.9500000 lbox
31 54 0.9500000 lbox
32 53 0.9500000 lbox
33 52 0.9500000 lbox
34 51 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
40 44 0.9500000 lbox
showpage
end
%%EOF
