%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGGCGAGGGGCGUGGCUUGGCUGUCAGGUCUCUUCGCCUUUUGUUCGGUUACUGAGUUGCUGCCUUGGCCAGAGUCCGGAGCAGCCGCCGCCCGACCACGCCGAGCUCAGUUCGCUGUCCGCGCCGGCUCCCACCCCGGCCCGACCCCGACCCGGCCCGGUCAGGCCCCAUACUCAGGUGCGGGCUAUCGGGGGCGCAGUAGCCACG\
) } def
/len { sequence length } bind def

/coor [
[22.53167534 230.24969482]
[12.24403954 241.16593933]
[1.95640492 252.08219910]
[3.61464381 272.10614014]
[-9.78212547 286.66830444]
[-29.26388931 286.68164062]
[-39.05622101 298.04431152]
[-48.84855270 309.40698242]
[-58.64088440 320.76965332]
[-68.43321991 332.13232422]
[-78.22554779 343.49499512]
[-88.01788330 354.85766602]
[-97.72575378 366.29257202]
[-107.34863281 377.79910278]
[-116.97151184 389.30563354]
[-119.88938141 404.85543823]
[-133.98954773 409.65487671]
[-143.61242676 421.16140747]
[-153.23530579 432.66793823]
[-162.85818481 444.17443848]
[-161.20536804 459.89208984]
[-171.21546936 472.12210083]
[-186.94969177 473.60864258]
[-199.07319641 463.46978760]
[-200.39331055 447.72073364]
[-190.12684631 435.70510864]
[-174.36471558 434.55157471]
[-164.74183655 423.04504395]
[-155.11895752 411.53851318]
[-145.49607849 400.03198242]
[-143.26649475 385.30520630]
[-128.47804260 379.68273926]
[-118.85516357 368.17620850]
[-109.23227692 356.66967773]
[-107.35275269 349.52261353]
[-99.38054657 345.06533813]
[-89.58821869 333.70266724]
[-79.79588318 322.33999634]
[-70.00355530 310.97732544]
[-60.21121979 299.61465454]
[-50.41888809 288.25198364]
[-40.62655640 276.88931274]
[-44.11551285 267.23678589]
[-43.27682877 256.92636108]
[-38.19501495 247.82360840]
[-29.72836685 241.60336304]
[-19.36464882 239.44183350]
[-8.95984745 241.79455566]
[1.32778716 230.87831116]
[11.61542225 219.96205139]
[21.57505417 208.74574280]
[31.19793510 197.23921204]
[40.82081604 185.73268127]
[50.44369888 174.22616577]
[60.06657791 162.71963501]
[69.68946075 151.21310425]
[79.31233978 139.70658875]
[88.93522644 128.20005798]
[88.21392059 120.73481750]
[73.28343201 122.17717743]
[71.84132385 107.24665833]
[86.77131653 105.80435181]
[86.05001831 98.33911896]
[74.40216064 88.88780212]
[62.75429916 79.43648529]
[51.10644150 69.98516083]
[39.45858383 60.53384781]
[27.74101830 51.16909027]
[15.95438671 41.89141464]
[0.32493848 39.43562317]
[-4.89022684 25.48387337]
[-16.67685890 16.20619392]
[-28.46348953 6.92851591]
[-44.76307678 5.12420273]
[-51.10160065 -10.00045109]
[-40.95853043 -22.88649750]
[-24.76819038 -20.27787781]
[-19.18581009 -4.85811567]
[-7.39917946 4.41956282]
[4.38745165 13.69724178]
[19.17384148 15.48943043]
[25.23206520 30.10478210]
[37.01869583 39.38246155]
[44.21832657 41.04936981]
[48.90990067 48.88599014]
[60.55776215 58.33730698]
[72.20561981 67.78862762]
[83.85347748 77.23994446]
[95.50133514 86.69126129]
[110.36812592 88.68587494]
[124.09531403 82.63902283]
[137.82249451 76.59217072]
[151.54968262 70.54531860]
[158.14097595 64.22248077]
[165.52536011 64.51225281]
[179.34065247 58.66947556]
[193.15592957 52.82670212]
[206.97120667 46.98392868]
[220.78648376 41.14115143]
[221.18820190 31.98333359]
[224.42724609 23.47551346]
[230.13783264 16.46702576]
[237.70965576 11.64410210]
[246.35292053 9.46277142]
[248.78721619 -5.33838415]
[247.09204102 -14.31334114]
[251.36880493 -20.34015846]
[254.02215576 -35.10361481]
[256.67550659 -49.86707687]
[259.32885742 -64.63053131]
[256.17965698 -81.28942871]
[271.31573486 -88.92720795]
[282.84509277 -76.49700165]
[274.09231567 -61.97718048]
[271.43896484 -47.21372223]
[268.78561401 -32.45026398]
[266.13226318 -17.68680382]
[263.58837891 -2.90409088]
[261.15408325 11.89706516]
[269.54818726 17.90815163]
[275.18029785 26.56112671]
[290.07501221 24.78702927]
[304.96972656 23.01293182]
[319.86444092 21.23883438]
[334.75915527 19.46473503]
[349.65386963 17.69063759]
[364.54858398 15.91654110]
[379.44329834 14.14244366]
[394.33801270 12.36834526]
[408.02001953 6.21995068]
[419.23635864 -3.73968124]
[419.92230225 -19.52907753]
[431.62841797 -30.14709473]
[447.40966797 -29.29425240]
[457.90332031 -17.47652626]
[456.88369751 -1.70516419]
[444.95568848 8.66296482]
[429.19598389 7.47663450]
[417.97967529 17.43626595]
[420.90106201 24.34390640]
[426.74383545 38.15918732]
[429.66522217 45.06682968]
[444.62405396 43.95643234]
[459.58288574 42.84603500]
[474.54174805 41.73564148]
[487.73129272 32.99799347]
[500.99639893 39.77191162]
[515.95526123 38.66151428]
[530.91406250 37.55111694]
[545.87292480 36.44072342]
[560.80340576 34.99811935]
[575.69812012 33.22402191]
[590.59283447 31.44992447]
[605.60565186 23.57267952]
[617.33105469 35.81817245]
[608.80999756 50.47519684]
[592.36694336 46.34463882]
[577.47222900 48.11873627]
[562.57751465 49.89283752]
[560.12139893 52.42163467]
[556.31872559 53.88681030]
[551.68255615 53.66855621]
[546.98333740 51.39956665]
[532.02447510 52.50996399]
[517.06561279 53.62035751]
[502.10681152 54.73075485]
[489.98721313 63.38898087]
[475.65213013 56.69448471]
[460.69329834 57.80488205]
[445.73443604 58.91527557]
[430.77560425 60.02567291]
[427.22482300 74.59934235]
[417.52468872 86.04083252]
[403.72842407 91.92838287]
[388.75622559 91.01579285]
[375.77716064 83.49623871]
[367.53845215 70.96134186]
[365.78393555 56.06430435]
[370.88500977 41.95831299]
[381.76196289 31.62911224]
[396.11212158 27.26306152]
[381.21740723 29.03715897]
[366.32269287 30.81125641]
[351.42797852 32.58535385]
[336.53326416 34.35945129]
[321.63854980 36.13354874]
[306.74383545 37.90764618]
[291.84912109 39.68174362]
[276.95440674 41.45584106]
[266.29315186 59.78543091]
[245.60935974 65.48312378]
[226.62927246 54.95643234]
[212.81398010 60.79920959]
[198.99870300 66.64198303]
[185.18342590 72.48475647]
[171.36813354 78.32752991]
[157.59652710 84.27250671]
[143.86933899 90.31935883]
[130.14216614 96.36621094]
[116.41497803 102.41306305]
[100.44174957 137.82293701]
[90.81887054 149.32946777]
[81.19598389 160.83598328]
[71.57310486 172.34251404]
[61.95022583 183.84904480]
[52.32734299 195.35557556]
[42.70446014 206.86209106]
[33.08158112 218.36862183]
[32.48749542 222.66815186]
[30.73296928 226.20008850]
[28.20166588 228.69393921]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[3 48]
[6 42]
[7 41]
[8 40]
[9 39]
[10 38]
[11 37]
[12 36]
[13 34]
[14 33]
[15 32]
[17 30]
[18 29]
[19 28]
[20 27]
[51 208]
[52 207]
[53 206]
[54 205]
[55 204]
[56 203]
[57 202]
[58 201]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 83]
[69 82]
[71 80]
[72 79]
[73 78]
[90 200]
[91 199]
[92 198]
[93 197]
[95 196]
[96 195]
[97 194]
[98 193]
[99 192]
[104 119]
[105 118]
[107 117]
[108 116]
[109 115]
[110 114]
[121 189]
[122 188]
[123 187]
[124 186]
[125 185]
[126 184]
[127 183]
[128 182]
[129 181]
[130 139]
[131 138]
[142 171]
[143 170]
[144 169]
[145 168]
[147 166]
[148 165]
[149 164]
[150 163]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
