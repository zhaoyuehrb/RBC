%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PCDHGA4)
} def

/sequence { (\
UCACAAGAUUUCUGCAGCACAAAGCACUGGCUCUGGAGCUUUAUGAAAGCUUCAAGCGGAAGCCCUGAGAGCUCUGGCUGUGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.253090840 ubox
1 83 0.121161626 ubox
2 7 0.276474800 ubox
2 14 0.011484163 ubox
2 82 0.149473546 ubox
3 13 0.012484683 ubox
3 81 0.145148486 ubox
4 14 0.036503600 ubox
4 80 0.143071738 ubox
4 82 0.020916885 ubox
5 11 0.022188644 ubox
5 13 0.032470144 ubox
5 79 0.116760429 ubox
5 81 0.011960068 ubox
6 10 0.019420179 ubox
6 13 0.199706835 ubox
6 28 0.008003863 ubox
6 32 0.007801564 ubox
6 34 0.006712405 ubox
6 66 0.005912538 ubox
6 73 0.004595154 ubox
6 75 0.075782923 ubox
6 79 0.017313767 ubox
7 12 0.210668764 ubox
7 27 0.008276341 ubox
7 31 0.008259032 ubox
7 33 0.007250759 ubox
7 65 0.006128614 ubox
7 72 0.004579987 ubox
7 74 0.076637152 ubox
7 78 0.023866936 ubox
8 32 0.007168692 ubox
8 73 0.076030916 ubox
9 30 0.006696504 ubox
9 61 0.004943718 ubox
9 62 0.016277454 ubox
9 70 0.007268088 ubox
9 71 0.003663180 ubox
9 77 0.003995340 ubox
9 83 0.041059429 ubox
10 22 0.003460352 ubox
10 29 0.008316358 ubox
10 60 0.006090139 ubox
10 61 0.067267893 ubox
10 69 0.007786815 ubox
10 71 0.070271487 ubox
10 76 0.003584967 ubox
10 82 0.045654085 ubox
10 83 0.058659413 ubox
11 21 0.003293199 ubox
11 29 0.003474960 ubox
11 30 0.004377606 ubox
11 59 0.004990249 ubox
11 60 0.088916136 ubox
11 68 0.007864824 ubox
11 70 0.075946143 ubox
11 82 0.061207461 ubox
11 83 0.391176978 ubox
12 24 0.003826358 ubox
12 29 0.008726817 ubox
12 30 0.003524846 ubox
12 58 0.005017109 ubox
12 59 0.090960753 ubox
12 67 0.007865800 ubox
12 69 0.076087336 ubox
12 77 0.007399445 ubox
12 82 0.456754568 ubox
13 19 0.004760205 ubox
13 21 0.008204520 ubox
13 23 0.003866188 ubox
13 26 0.049235225 ubox
13 29 0.003494411 ubox
13 58 0.090871832 ubox
13 68 0.075343027 ubox
13 76 0.007342994 ubox
13 82 0.567180105 ubox
14 18 0.005138184 ubox
14 20 0.008993528 ubox
14 25 0.059208712 ubox
14 31 0.007167567 ubox
14 57 0.090843172 ubox
14 63 0.004792878 ubox
14 72 0.005517720 ubox
14 75 0.006324920 ubox
14 78 0.007090237 ubox
14 81 0.965823923 ubox
15 24 0.059255493 ubox
15 29 0.017921673 ubox
15 30 0.006144326 ubox
15 56 0.090731865 ubox
15 62 0.004788577 ubox
15 67 0.071229126 ubox
15 71 0.005512027 ubox
15 77 0.006848529 ubox
15 80 0.988403011 ubox
15 82 0.003981909 ubox
16 28 0.018135820 ubox
16 32 0.080031338 ubox
16 66 0.070819204 ubox
16 73 0.009085023 ubox
16 75 0.003507269 ubox
16 79 0.988716331 ubox
17 25 0.040994799 ubox
17 27 0.016408945 ubox
17 31 0.085625198 ubox
17 33 0.003704759 ubox
17 63 0.005681224 ubox
17 65 0.067665113 ubox
17 72 0.009328737 ubox
17 74 0.003475261 ubox
17 78 0.989329148 ubox
18 24 0.041421527 ubox
18 29 0.008047941 ubox
18 30 0.085498817 ubox
18 62 0.005970454 ubox
18 71 0.009327975 ubox
18 76 0.016038945 ubox
18 77 0.988444469 ubox
18 82 0.028538848 ubox
19 28 0.008806009 ubox
19 75 0.022101084 ubox
19 81 0.028616894 ubox
20 29 0.084978754 ubox
20 35 0.033049612 ubox
20 67 0.012616076 ubox
20 76 0.974316142 ubox
20 80 0.028540011 ubox
20 82 0.008936737 ubox
21 28 0.079640030 ubox
21 34 0.033696395 ubox
21 66 0.012505002 ubox
21 75 0.960053883 ubox
21 79 0.019856891 ubox
21 81 0.008628779 ubox
22 41 0.003465865 ubox
23 32 0.072377708 ubox
23 40 0.003499523 ubox
23 66 0.003285481 ubox
23 73 0.968060402 ubox
23 75 0.011155043 ubox
23 79 0.022239565 ubox
24 31 0.076047429 ubox
24 39 0.003504729 ubox
24 63 0.050529551 ubox
24 65 0.003307279 ubox
24 72 0.986819819 ubox
24 74 0.015539232 ubox
24 78 0.030589818 ubox
25 30 0.075936685 ubox
25 38 0.003499479 ubox
25 62 0.050520205 ubox
25 67 0.013148706 ubox
25 71 0.985529147 ubox
25 76 0.009270604 ubox
25 77 0.030562245 ubox
25 82 0.023724796 ubox
26 66 0.025219753 ubox
26 75 0.009207736 ubox
26 81 0.024301065 ubox
27 36 0.003398097 ubox
27 59 0.037824711 ubox
27 62 0.010431030 ubox
27 69 0.943126831 ubox
27 71 0.008107314 ubox
27 77 0.004890376 ubox
27 80 0.024247390 ubox
28 35 0.003316167 ubox
28 58 0.035782423 ubox
28 61 0.010005916 ubox
28 67 0.067614248 ubox
28 68 0.930651638 ubox
28 70 0.015857608 ubox
28 76 0.004758234 ubox
28 80 0.008076909 ubox
29 57 0.028156015 ubox
29 64 0.947154119 ubox
29 65 0.103165155 ubox
29 66 0.026460039 ubox
29 73 0.040427837 ubox
29 74 0.009783372 ubox
29 79 0.038399595 ubox
30 57 0.264842986 ubox
30 63 0.950407406 ubox
30 64 0.076061533 ubox
30 65 0.014199235 ubox
30 72 0.043086756 ubox
30 78 0.047299054 ubox
30 81 0.003829459 ubox
31 56 0.266866489 ubox
31 59 0.018030239 ubox
31 62 0.952754277 ubox
31 69 0.017648830 ubox
31 71 0.043134497 ubox
31 77 0.047102972 ubox
31 80 0.003967876 ubox
32 55 0.263282602 ubox
32 58 0.026897041 ubox
32 59 0.064765376 ubox
32 60 0.596871777 ubox
32 61 0.733693436 ubox
32 68 0.017812603 ubox
32 70 0.043220429 ubox
32 76 0.041355504 ubox
33 56 0.390120753 ubox
33 58 0.130641906 ubox
33 59 0.843870084 ubox
33 62 0.004153071 ubox
33 67 0.017808638 ubox
33 69 0.043195515 ubox
33 76 0.019806510 ubox
33 77 0.039835957 ubox
34 54 0.657240551 ubox
34 55 0.278979381 ubox
34 58 0.684724407 ubox
34 61 0.003354537 ubox
34 68 0.037263542 ubox
34 76 0.048594692 ubox
35 52 0.003933652 ubox
35 53 0.870329517 ubox
35 57 0.479787918 ubox
35 65 0.017694602 ubox
35 66 0.008145386 ubox
35 75 0.075739757 ubox
36 51 0.005548158 ubox
36 52 0.980369228 ubox
36 53 0.151367231 ubox
36 64 0.017739259 ubox
36 65 0.008626824 ubox
36 74 0.086098623 ubox
37 51 0.988991041 ubox
37 52 0.107551189 ubox
37 73 0.086154801 ubox
38 50 0.995841409 ubox
38 51 0.015450769 ubox
38 57 0.012504438 ubox
38 63 0.019581578 ubox
38 72 0.086179287 ubox
39 49 0.995941659 ubox
39 56 0.012884191 ubox
39 62 0.019585874 ubox
39 71 0.086178620 ubox
40 46 0.007502051 ubox
40 47 0.030776505 ubox
40 48 0.992839449 ubox
40 49 0.006006764 ubox
40 55 0.012748076 ubox
40 61 0.019476038 ubox
40 69 0.003915042 ubox
40 70 0.086010385 ubox
41 45 0.011387777 ubox
41 46 0.038088118 ubox
41 47 0.970516747 ubox
41 48 0.037804936 ubox
41 54 0.007073947 ubox
41 60 0.019193415 ubox
41 68 0.006384012 ubox
41 69 0.085523352 ubox
42 46 0.808595925 ubox
42 47 0.048883114 ubox
42 48 0.004215813 ubox
42 59 0.017884015 ubox
42 67 0.007349367 ubox
42 68 0.082569804 ubox
43 66 0.008433869 ubox
44 54 0.017762904 ubox
44 58 0.004255188 ubox
44 67 0.016726397 ubox
45 53 0.020218382 ubox
45 57 0.004570667 ubox
45 66 0.016650203 ubox
46 52 0.019950321 ubox
47 51 0.015205489 ubox
49 57 0.009202461 ubox
49 63 0.086159020 ubox
50 56 0.009274662 ubox
50 62 0.086288011 ubox
51 55 0.008362425 ubox
51 60 0.003289020 ubox
51 61 0.086184558 ubox
52 59 0.004623720 ubox
52 60 0.086147591 ubox
53 58 0.006834759 ubox
53 59 0.085985769 ubox
55 66 0.016050478 ubox
55 73 0.003281050 ubox
55 79 0.005495853 ubox
56 63 0.043564423 ubox
56 65 0.016455949 ubox
56 72 0.003475534 ubox
56 78 0.006560364 ubox
57 62 0.043717927 ubox
57 67 0.025930030 ubox
57 71 0.003469533 ubox
57 76 0.018151478 ubox
57 77 0.005264532 ubox
58 64 0.070396129 ubox
58 65 0.242962796 ubox
58 66 0.042481173 ubox
58 75 0.020976949 ubox
59 63 0.069500104 ubox
59 64 0.242462610 ubox
59 65 0.043786590 ubox
59 74 0.021563036 ubox
60 73 0.015257352 ubox
61 73 0.017116335 ubox
61 79 0.061760453 ubox
62 72 0.023336230 ubox
62 78 0.097431721 ubox
63 71 0.023310335 ubox
63 77 0.097217202 ubox
64 76 0.096551584 ubox
64 77 0.018702731 ubox
65 71 0.007239247 ubox
65 76 0.021728802 ubox
66 70 0.008132666 ubox
67 74 0.092440767 ubox
68 73 0.086549377 ubox
68 75 0.025790067 ubox
69 74 0.026151315 ubox
70 79 0.011308228 ubox
71 78 0.013168049 ubox
72 77 0.013137417 ubox
14 81 0.9500000 lbox
15 80 0.9500000 lbox
16 79 0.9500000 lbox
17 78 0.9500000 lbox
18 77 0.9500000 lbox
20 76 0.9500000 lbox
21 75 0.9500000 lbox
23 73 0.9500000 lbox
24 72 0.9500000 lbox
25 71 0.9500000 lbox
27 69 0.9500000 lbox
28 68 0.9500000 lbox
29 64 0.9500000 lbox
30 63 0.9500000 lbox
31 62 0.9500000 lbox
32 61 0.9500000 lbox
33 59 0.9500000 lbox
34 58 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
37 51 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
42 46 0.9500000 lbox
showpage
end
%%EOF
