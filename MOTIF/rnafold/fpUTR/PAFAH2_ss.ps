%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGAAGUGCUUCCAAGCGUCCAUUUUGAGCCUUGGAAACUACGACGACCAAAGGGCCACGGGUUCAUGGGUCGUUUCUCAUUUCCGUCGAGUUAAACGUCUGGGGCUGCUUCUGAGGAAUCAGCUUGACUGGCCAGCAAGUUCAGCUCCGGCAAGUCAUUUGAUUCACCCGGUGAUGAA\
) } def
/len { sequence length } bind def

/coor [
[209.59739685 176.08036804]
[209.59408569 169.18286133]
[210.79548645 162.38327026]
[197.35440063 155.72462463]
[183.91333008 149.06597900]
[170.47225952 142.40734863]
[157.03118896 135.74870300]
[143.59010315 129.09005737]
[130.09175110 122.54830933]
[116.53713989 116.12395477]
[102.98252106 109.69960022]
[94.90544891 109.36419678]
[89.24987793 103.04431152]
[75.80880737 96.38566589]
[62.36773300 89.72702789]
[46.56712723 90.53417206]
[38.59724045 77.95124054]
[25.15616798 71.29259491]
[11.71509361 64.63395691]
[-1.72598064 57.97531128]
[-14.51553345 66.36426544]
[-29.68673134 67.21955872]
[-43.15953064 60.41146851]
[-51.36078644 47.85776901]
[-52.17177200 32.98471069]
[-65.61284637 26.32606888]
[-79.05392456 19.66742516]
[-92.49499512 13.00878239]
[-105.93606567 6.35013962]
[-110.31730652 6.79139757]
[-114.21170807 5.89068222]
[-117.25371552 3.97015572]
[-119.22183228 1.43828940]
[-120.05433655 -1.26529002]
[-133.00111389 -8.84032154]
[-145.94787598 -16.41535378]
[-158.89465332 -23.99038506]
[-171.84141541 -31.56541634]
[-184.78819275 -39.14044571]
[-199.05680847 -30.81120491]
[-215.48480225 -30.80628395]
[-229.59631348 -39.03250504]
[-237.59425354 -53.16696167]
[-237.38183594 -69.31214142]
[-250.45812988 -76.66133118]
[-263.53442383 -84.01052094]
[-276.61071777 -91.35970306]
[-289.68701172 -98.70889282]
[-302.76330566 -106.05807495]
[-315.83959961 -113.40726471]
[-329.89343262 -107.09886932]
[-344.79293823 -110.23873901]
[-354.86743164 -121.41767120]
[-356.40905762 -136.20825195]
[-369.48535156 -143.55743408]
[-382.56164551 -150.90663147]
[-395.63793945 -158.25581360]
[-408.71423340 -165.60499573]
[-425.48440552 -168.09440613]
[-427.73474121 -184.89834595]
[-412.21047974 -191.71252441]
[-401.36505127 -178.68128967]
[-388.28875732 -171.33210754]
[-375.21246338 -163.98292542]
[-362.13616943 -156.63372803]
[-349.05987549 -149.28454590]
[-335.62390137 -155.65736389]
[-320.83679199 -152.86349487]
[-310.40832520 -141.76844788]
[-308.49041748 -126.48355865]
[-295.41412354 -119.13436890]
[-282.33782959 -111.78518677]
[-269.26153564 -104.43599701]
[-256.18524170 -97.08681488]
[-243.10894775 -89.73762512]
[-230.03265381 -82.38843536]
[-218.75637817 -90.11861420]
[-205.18353271 -92.24065399]
[-191.95899963 -88.28324890]
[-181.68478394 -78.96542358]
[-176.40798950 -66.06665802]
[-177.21316528 -52.08721924]
[-164.26638794 -44.51218796]
[-151.31962585 -36.93715668]
[-138.37284851 -29.36212540]
[-125.42607880 -21.78709412]
[-112.47930145 -14.21206188]
[-99.27742767 -7.09093428]
[-85.83634949 -0.43229160]
[-72.39527893 6.22635126]
[-58.95420456 12.88499355]
[-45.51313019 19.54363632]
[-33.18951035 11.17739773]
[-18.23337173 10.09576035]
[-4.65418291 16.68909073]
[3.85744715 29.27674103]
[4.93266201 44.53423691]
[18.37373543 51.19287872]
[31.81480980 57.85152054]
[45.25588608 64.51016235]
[60.09509277 63.22674561]
[69.02637482 76.28594971]
[82.46744537 82.94459534]
[95.90852356 89.60323334]
[109.40687561 96.14498138]
[122.96149445 102.56933594]
[136.51611328 108.99369812]
[145.63835144 109.84665680]
[150.24874878 115.64898682]
[163.68981934 122.30762482]
[177.13090515 128.96626282]
[190.57197571 135.62490845]
[204.01304626 142.28355408]
[217.45411682 148.94219971]
[237.70811462 135.19415283]
[262.05957031 136.07441711]
[281.09249878 151.11024475]
[287.52566528 174.38099670]
[302.11575317 177.86369324]
[316.70587158 181.34637451]
[331.29595947 184.82907104]
[345.88604736 188.31176758]
[360.47613525 191.79444885]
[375.06625366 195.27714539]
[386.46072388 189.19572449]
[398.55404663 192.41551208]
[404.98895264 202.67843628]
[419.51638794 206.41381836]
[434.04385376 210.14921570]
[448.57128906 213.88461304]
[463.09875488 217.61999512]
[478.39096069 213.56304932]
[488.79049683 224.22602844]
[503.31793213 227.96141052]
[517.84539795 231.69680786]
[532.43548584 235.17950439]
[547.08380127 238.40844727]
[561.73217773 241.63737488]
[574.01568604 231.96009827]
[589.64410400 232.49423218]
[601.23828125 242.98756409]
[603.32366943 258.48547363]
[594.91571045 271.67031860]
[579.98431396 276.31661987]
[565.57971191 270.23052979]
[558.50323486 256.28573608]
[543.85485840 253.05677795]
[529.20654297 249.82783508]
[524.75067139 251.61358643]
[519.12420654 250.60003662]
[514.10998535 246.22425842]
[499.58255005 242.48887634]
[485.05508423 238.75347900]
[470.80197144 243.07760620]
[459.36334229 232.14744568]
[444.83590698 228.41206360]
[430.30844116 224.67666626]
[415.78100586 220.94128418]
[401.25354004 217.20588684]
[384.64285278 222.83169556]
[371.58355713 209.86723328]
[356.99346924 206.38455200]
[342.40335083 202.90185547]
[327.81326294 199.41917419]
[313.22317505 195.93647766]
[298.63308716 192.45378113]
[284.04296875 188.97109985]
[280.72607422 194.89158630]
[276.42242432 200.14833069]
[271.26202393 204.57843018]
[265.40148926 208.04406738]
[259.01928711 210.43669128]
[252.31021118 211.68048096]
[245.47964478 211.73477173]
[238.73704529 210.59529114]
[232.28967285 208.29444885]
[226.33616638 204.90039062]
[221.06040955 200.51495361]
[216.62588501 195.27067566]
[213.17057800 189.32675171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 114]
[4 113]
[5 112]
[6 111]
[7 110]
[8 109]
[9 107]
[10 106]
[11 105]
[13 104]
[14 103]
[15 102]
[17 100]
[18 99]
[19 98]
[20 97]
[25 92]
[26 91]
[27 90]
[28 89]
[29 88]
[34 87]
[35 86]
[36 85]
[37 84]
[38 83]
[39 82]
[44 76]
[45 75]
[46 74]
[47 73]
[48 72]
[49 71]
[50 70]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
[118 167]
[119 166]
[120 165]
[121 164]
[122 163]
[123 162]
[124 161]
[127 159]
[128 158]
[129 157]
[130 156]
[131 155]
[133 153]
[134 152]
[135 151]
[136 148]
[137 147]
[138 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
