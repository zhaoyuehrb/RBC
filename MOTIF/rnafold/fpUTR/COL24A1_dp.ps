%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COL24A1)
} def

/sequence { (\
UACCUGCACCCUAAGCAGUUCAGAGUUGGCUUCUGUUUUCCGUUAGCGCUUUGCUGCACGGACAAAUGCAUACAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.009331350 ubox
1 68 0.012431014 ubox
1 72 0.030330355 ubox
2 19 0.158987221 ubox
2 26 0.052434199 ubox
2 27 0.007639210 ubox
2 36 0.004329391 ubox
2 67 0.012637137 ubox
2 71 0.031066707 ubox
3 18 0.121876750 ubox
3 25 0.057711950 ubox
3 29 0.008549073 ubox
3 35 0.004224432 ubox
3 61 0.006159788 ubox
4 15 0.013862913 ubox
4 18 0.930457237 ubox
4 23 0.185148685 ubox
4 28 0.008363457 ubox
4 60 0.006161306 ubox
5 14 0.014204971 ubox
5 17 0.944897994 ubox
5 22 0.185554384 ubox
5 58 0.006036968 ubox
5 64 0.010347653 ubox
5 70 0.225660238 ubox
5 74 0.006599610 ubox
6 16 0.946388043 ubox
6 19 0.005661475 ubox
6 21 0.185320958 ubox
6 26 0.006147373 ubox
6 30 0.004694034 ubox
6 36 0.004186300 ubox
6 57 0.006078201 ubox
6 63 0.011106116 ubox
6 69 0.250332760 ubox
6 73 0.006826199 ubox
7 15 0.945886422 ubox
7 18 0.008055874 ubox
7 25 0.006336644 ubox
7 29 0.004576971 ubox
7 35 0.004467761 ubox
7 56 0.006073617 ubox
7 68 0.250326048 ubox
8 19 0.180686929 ubox
8 26 0.005966141 ubox
8 34 0.004301660 ubox
8 36 0.005063049 ubox
8 55 0.005184310 ubox
8 67 0.221848587 ubox
9 18 0.184125718 ubox
9 25 0.006604956 ubox
9 29 0.008543037 ubox
9 35 0.006472903 ubox
9 61 0.060671043 ubox
10 28 0.008583047 ubox
10 29 0.010970741 ubox
10 60 0.060435797 ubox
10 61 0.064274725 ubox
11 18 0.031384006 ubox
11 23 0.010385200 ubox
11 28 0.011141578 ubox
11 29 0.009279434 ubox
11 60 0.064375014 ubox
11 61 0.058074977 ubox
12 17 0.030272013 ubox
12 22 0.010178371 ubox
12 28 0.009339448 ubox
12 35 0.003592129 ubox
12 60 0.057356022 ubox
12 72 0.013830928 ubox
13 20 0.010991727 ubox
13 27 0.008495801 ubox
13 32 0.026350049 ubox
13 37 0.005854675 ubox
13 38 0.177905995 ubox
13 39 0.005540652 ubox
13 51 0.004332610 ubox
13 71 0.014509872 ubox
14 19 0.011285898 ubox
14 20 0.005247160 ubox
14 26 0.006979753 ubox
14 27 0.016529083 ubox
14 31 0.030227997 ubox
14 34 0.029615724 ubox
14 36 0.004929121 ubox
14 37 0.204584436 ubox
14 38 0.008032526 ubox
14 50 0.004462286 ubox
14 55 0.008120181 ubox
15 19 0.003895777 ubox
15 26 0.019151837 ubox
15 30 0.030675700 ubox
15 33 0.030722691 ubox
15 36 0.215444064 ubox
15 37 0.006378647 ubox
15 49 0.004489272 ubox
15 54 0.008674374 ubox
15 57 0.109528944 ubox
15 69 0.038296506 ubox
16 25 0.019838902 ubox
16 28 0.010196660 ubox
16 29 0.029192878 ubox
16 35 0.216676146 ubox
16 48 0.004476394 ubox
16 53 0.008671535 ubox
16 56 0.109664980 ubox
16 68 0.038329024 ubox
17 27 0.013615835 ubox
17 31 0.033490233 ubox
17 32 0.003853813 ubox
17 34 0.216369724 ubox
17 37 0.005109488 ubox
17 38 0.010022691 ubox
17 39 0.007358848 ubox
17 52 0.008614592 ubox
17 55 0.109636535 ubox
17 67 0.034551831 ubox
18 26 0.012718434 ubox
18 30 0.035937225 ubox
18 31 0.005027385 ubox
18 33 0.215878569 ubox
18 36 0.005536303 ubox
18 37 0.012823795 ubox
18 38 0.017635182 ubox
18 47 0.004162478 ubox
18 51 0.008215206 ubox
18 54 0.109472266 ubox
18 63 0.004744456 ubox
18 67 0.005150270 ubox
18 69 0.007923714 ubox
18 73 0.007253165 ubox
19 25 0.009689170 ubox
19 29 0.029234518 ubox
19 46 0.004147195 ubox
19 53 0.100339871 ubox
19 62 0.003663245 ubox
19 65 0.012270206 ubox
19 66 0.009859643 ubox
19 68 0.007904562 ubox
19 70 0.003453397 ubox
19 72 0.007325078 ubox
19 75 0.014601870 ubox
20 24 0.012975257 ubox
20 28 0.017228801 ubox
20 29 0.157317242 ubox
20 45 0.003900090 ubox
20 64 0.013061052 ubox
20 65 0.009697437 ubox
20 74 0.019342668 ubox
21 28 0.180123929 ubox
21 35 0.463700194 ubox
21 53 0.042682502 ubox
21 68 0.005328774 ubox
22 27 0.162426753 ubox
22 31 0.093355810 ubox
22 32 0.008011995 ubox
22 34 0.473022335 ubox
22 50 0.084891916 ubox
22 51 0.005823407 ubox
22 52 0.050012159 ubox
22 67 0.004477258 ubox
23 30 0.096123269 ubox
23 31 0.006532975 ubox
23 32 0.092784595 ubox
23 33 0.474546593 ubox
23 37 0.003357731 ubox
23 38 0.003710206 ubox
23 49 0.088880653 ubox
23 50 0.004516805 ubox
23 51 0.052782752 ubox
24 31 0.155947745 ubox
24 32 0.455155264 ubox
24 34 0.021263263 ubox
24 36 0.003245771 ubox
24 37 0.003739674 ubox
24 38 0.003692496 ubox
24 50 0.053000665 ubox
25 30 0.197740079 ubox
25 31 0.381590664 ubox
25 33 0.022224111 ubox
25 37 0.003540250 ubox
25 47 0.096795393 ubox
25 49 0.052846267 ubox
25 69 0.013490692 ubox
25 71 0.017619492 ubox
25 73 0.807534155 ubox
26 46 0.096918721 ubox
26 48 0.050226364 ubox
26 65 0.008853515 ubox
26 66 0.003175664 ubox
26 68 0.013195720 ubox
26 70 0.016212330 ubox
26 72 0.805937417 ubox
26 75 0.073932387 ubox
27 35 0.004345609 ubox
27 42 0.004139898 ubox
27 45 0.097254202 ubox
27 48 0.006894651 ubox
27 64 0.010501077 ubox
27 70 0.053572631 ubox
27 72 0.044165789 ubox
27 74 0.101974765 ubox
28 34 0.008699486 ubox
28 37 0.029908637 ubox
28 41 0.004502668 ubox
28 44 0.097294217 ubox
28 47 0.007255593 ubox
28 63 0.010712554 ubox
28 69 0.048555546 ubox
28 71 0.051025251 ubox
28 73 0.105881677 ubox
29 33 0.009153836 ubox
29 36 0.041078090 ubox
29 40 0.004438092 ubox
29 43 0.097372903 ubox
29 47 0.050805421 ubox
29 69 0.825426672 ubox
30 35 0.042345188 ubox
30 42 0.097342225 ubox
30 46 0.051367664 ubox
30 68 0.825479601 ubox
31 45 0.050792503 ubox
31 65 0.014002805 ubox
31 66 0.171566480 ubox
31 75 0.003762659 ubox
32 62 0.003197770 ubox
32 64 0.010164091 ubox
32 65 0.172054154 ubox
32 74 0.005209912 ubox
33 46 0.003320943 ubox
33 61 0.003375361 ubox
34 42 0.040007055 ubox
34 45 0.003789526 ubox
34 60 0.003359659 ubox
34 64 0.591753439 ubox
34 68 0.074050597 ubox
34 70 0.072876973 ubox
34 72 0.004112059 ubox
34 74 0.014980320 ubox
35 41 0.042687756 ubox
35 44 0.004794941 ubox
35 59 0.003359544 ubox
35 63 0.609083399 ubox
35 67 0.432054382 ubox
35 69 0.085441949 ubox
35 71 0.004265316 ubox
35 73 0.017106920 ubox
36 58 0.003330506 ubox
36 62 0.396928454 ubox
36 65 0.365386951 ubox
36 66 0.457446407 ubox
36 68 0.083540996 ubox
36 70 0.004667696 ubox
36 72 0.016510338 ubox
37 61 0.081136935 ubox
37 62 0.026278818 ubox
37 64 0.359583981 ubox
37 65 0.466597638 ubox
37 66 0.054701329 ubox
37 75 0.003747248 ubox
38 60 0.023313729 ubox
38 61 0.007780707 ubox
38 62 0.038798881 ubox
38 64 0.455563871 ubox
38 65 0.057194334 ubox
38 66 0.032733970 ubox
38 74 0.004996020 ubox
39 60 0.003310483 ubox
39 61 0.008420019 ubox
39 62 0.886345302 ubox
39 64 0.023385631 ubox
39 65 0.013975571 ubox
40 60 0.008844096 ubox
40 61 0.990256375 ubox
41 60 0.993433583 ubox
42 57 0.019857785 ubox
42 59 0.993471411 ubox
42 73 0.003423683 ubox
43 56 0.014892928 ubox
43 58 0.986257539 ubox
43 72 0.003364688 ubox
44 56 0.973651729 ubox
45 55 0.987476911 ubox
46 54 0.988823994 ubox
46 57 0.092161201 ubox
46 69 0.004090761 ubox
47 53 0.988428942 ubox
47 56 0.092401547 ubox
47 68 0.004095032 ubox
48 52 0.609853532 ubox
48 54 0.067623817 ubox
48 55 0.049738721 ubox
48 57 0.035203992 ubox
48 67 0.004003402 ubox
49 53 0.068660848 ubox
49 56 0.035209744 ubox
50 66 0.004732365 ubox
51 65 0.004856592 ubox
52 64 0.004877041 ubox
53 63 0.004883382 ubox
54 61 0.004775704 ubox
55 60 0.004468768 ubox
55 70 0.008661062 ubox
56 69 0.009752782 ubox
57 68 0.009755393 ubox
58 67 0.009463939 ubox
67 74 0.084616354 ubox
68 73 0.093739842 ubox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
25 73 0.9500000 lbox
26 72 0.9500000 lbox
29 69 0.9500000 lbox
30 68 0.9500000 lbox
34 64 0.9500000 lbox
35 63 0.9500000 lbox
39 62 0.9500000 lbox
40 61 0.9500000 lbox
41 60 0.9500000 lbox
42 59 0.9500000 lbox
43 58 0.9500000 lbox
44 56 0.9500000 lbox
45 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
showpage
end
%%EOF
