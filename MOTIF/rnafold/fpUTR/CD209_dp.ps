%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CD209)
} def

/sequence { (\
AUCACAGGGUGGGAAAUAAAAGCUGUGGCCCCCAGGAGUUCUGGACACUGGGGGAGAGUGGGGUGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.014390556 ubox
1 59 0.014531869 ubox
1 64 0.027658618 ubox
2 9 0.014990294 ubox
2 12 0.052627165 ubox
2 13 0.005870592 ubox
2 14 0.013486745 ubox
2 28 0.720017228 ubox
2 55 0.005002242 ubox
2 57 0.019384821 ubox
2 58 0.013797948 ubox
2 61 0.023414611 ubox
2 62 0.008112881 ubox
2 63 0.028143771 ubox
2 66 0.098131041 ubox
3 8 0.015385276 ubox
3 11 0.071649840 ubox
3 12 0.008593408 ubox
3 13 0.013915976 ubox
3 27 0.980818090 ubox
3 56 0.020095475 ubox
3 60 0.031450195 ubox
3 61 0.009538432 ubox
3 62 0.025261300 ubox
3 65 0.107292110 ubox
4 10 0.071659491 ubox
4 26 0.981805536 ubox
4 59 0.029882785 ubox
4 64 0.105980321 ubox
5 9 0.070971582 ubox
5 11 0.015995505 ubox
5 25 0.982098748 ubox
5 27 0.131016111 ubox
5 58 0.024864452 ubox
5 60 0.004247344 ubox
5 63 0.102240058 ubox
5 65 0.003331232 ubox
6 10 0.013082377 ubox
6 24 0.980602514 ubox
6 26 0.135840867 ubox
6 59 0.003412041 ubox
6 64 0.003265758 ubox
7 23 0.978389100 ubox
7 24 0.024960164 ubox
7 31 0.008344573 ubox
8 23 0.049019484 ubox
8 24 0.142334796 ubox
8 30 0.008391509 ubox
9 17 0.070636064 ubox
9 23 0.148895836 ubox
9 29 0.008411686 ubox
9 59 0.005055661 ubox
10 16 0.080094926 ubox
10 18 0.375151206 ubox
10 22 0.150341794 ubox
10 25 0.006208095 ubox
10 28 0.008280288 ubox
10 60 0.008401709 ubox
11 17 0.374204328 ubox
11 24 0.013006957 ubox
11 31 0.012148042 ubox
12 23 0.014615757 ubox
12 24 0.006423822 ubox
12 30 0.012254430 ubox
13 23 0.007092346 ubox
13 29 0.012305309 ubox
16 26 0.014462185 ubox
16 64 0.039863846 ubox
17 25 0.014547610 ubox
17 60 0.003922487 ubox
17 63 0.040434146 ubox
17 65 0.015353836 ubox
18 24 0.013987934 ubox
18 64 0.018150960 ubox
22 29 0.003251173 ubox
22 59 0.114683690 ubox
22 64 0.031322477 ubox
23 28 0.004206019 ubox
23 56 0.005592479 ubox
23 58 0.116395151 ubox
23 61 0.018333075 ubox
23 62 0.015903941 ubox
23 63 0.032861034 ubox
24 55 0.005562950 ubox
24 57 0.115700333 ubox
24 60 0.018118836 ubox
24 61 0.015906032 ubox
24 62 0.032721638 ubox
25 59 0.013381178 ubox
25 67 0.012595665 ubox
26 58 0.008488671 ubox
26 60 0.025711724 ubox
26 66 0.012876191 ubox
27 59 0.010807186 ubox
28 59 0.013354040 ubox
28 64 0.050832175 ubox
29 53 0.007100832 ubox
29 54 0.994461757 ubox
29 58 0.008854636 ubox
29 62 0.003561921 ubox
29 63 0.053532099 ubox
30 52 0.006236191 ubox
30 53 0.997713634 ubox
30 54 0.009306171 ubox
30 61 0.003216054 ubox
30 62 0.053193844 ubox
30 63 0.035653192 ubox
31 51 0.005200377 ubox
31 52 0.997750703 ubox
31 53 0.008573546 ubox
31 61 0.052717060 ubox
31 62 0.036227352 ubox
32 44 0.051795622 ubox
32 50 0.003753941 ubox
32 51 0.997770775 ubox
32 52 0.007735019 ubox
32 60 0.016966363 ubox
32 61 0.036593742 ubox
33 43 0.052101043 ubox
33 50 0.997779616 ubox
33 51 0.006760471 ubox
33 60 0.036948988 ubox
34 42 0.052101501 ubox
34 49 0.997252295 ubox
34 59 0.037052696 ubox
35 41 0.052035211 ubox
35 42 0.005213070 ubox
35 48 0.996371242 ubox
35 49 0.023153288 ubox
36 40 0.033740423 ubox
36 41 0.012538713 ubox
36 48 0.046112699 ubox
37 49 0.005293754 ubox
38 46 0.925850459 ubox
38 48 0.007457171 ubox
39 45 0.920807560 ubox
39 47 0.008546874 ubox
39 52 0.003345912 ubox
39 53 0.028151857 ubox
39 54 0.019306296 ubox
39 55 0.015639317 ubox
39 56 0.009326338 ubox
40 44 0.829839228 ubox
40 51 0.003430386 ubox
40 52 0.029016038 ubox
40 53 0.020036032 ubox
40 54 0.015628365 ubox
40 55 0.009597800 ubox
41 50 0.003483094 ubox
41 51 0.029363954 ubox
41 52 0.020218938 ubox
41 53 0.015551078 ubox
41 54 0.009607642 ubox
42 50 0.029301518 ubox
42 51 0.020120501 ubox
42 52 0.015280483 ubox
42 53 0.009488733 ubox
43 49 0.029225500 ubox
44 48 0.028781607 ubox
45 59 0.003846546 ubox
46 58 0.003938883 ubox
46 60 0.051674817 ubox
47 59 0.051852208 ubox
48 56 0.004353482 ubox
48 58 0.051874751 ubox
49 55 0.004430441 ubox
49 57 0.051671178 ubox
58 64 0.010434290 ubox
58 67 0.281812066 ubox
59 63 0.009017450 ubox
59 65 0.017886539 ubox
59 66 0.283345719 ubox
60 64 0.014291390 ubox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
33 50 0.9500000 lbox
34 49 0.9500000 lbox
35 48 0.9500000 lbox
38 46 0.9500000 lbox
39 45 0.9500000 lbox
40 44 0.9500000 lbox
showpage
end
%%EOF
