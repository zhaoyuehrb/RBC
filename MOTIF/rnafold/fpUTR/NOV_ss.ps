%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGCCAUGGCAACCCCGGGGUUCGUUCCACUUCCCCACCCAGCCGAUCUCCCCCCUCCUCCCUGCACUGCAGCCAACCGGCUUGUGCGCGUCCCAGGAGCGCGCUAUAAAACCUGUGCUGGGCGUGAUCGGCAAGCACCGGACCAGGGGGAAGGCGAGCAGUGCCAAUCUACAGCGAAGAAAGUCUCGUUUGGUAAAAGCGAGAGGGGAAAGCCUGAGC\
) } def
/len { sequence length } bind def

/coor [
[113.32657623 377.69284058]
[98.52931213 383.89129639]
[84.52700043 376.06091309]
[82.06101990 360.20849609]
[93.02305603 348.49468994]
[93.87168121 333.51870728]
[94.61432648 318.53710938]
[95.25093842 303.55062866]
[92.39666748 296.73995972]
[96.00408936 288.35702515]
[96.85271454 273.38104248]
[97.70133972 258.40505981]
[85.97455597 246.34507751]
[86.61498260 229.19769287]
[99.71443939 217.59777832]
[100.35105896 202.61129761]
[100.98767853 187.62481689]
[101.62429047 172.63832092]
[87.95586395 166.45980835]
[77.12652588 176.83888245]
[66.29718018 187.21797180]
[55.46784210 197.59706116]
[60.25096130 212.09135437]
[58.26304626 227.22445679]
[49.89880753 239.99168396]
[36.81896591 247.85810852]
[21.62053490 249.26182556]
[7.32117176 243.92413330]
[-3.23997259 232.90483093]
[-7.96597528 218.39181519]
[-5.91848612 203.26664734]
[2.49596572 190.53245544]
[15.60668373 182.71760559]
[30.81052589 181.37374878]
[45.08875656 186.76771545]
[55.91809845 176.38862610]
[66.74744415 166.00955200]
[77.57678223 155.63046265]
[60.48023224 140.63262939]
[51.06007385 121.32440948]
[49.92659760 101.12983704]
[56.30729294 83.26393127]
[68.30211639 70.22299194]
[83.30792236 63.43732071]
[79.73404694 48.86929703]
[76.05718231 34.32692337]
[72.27751160 19.81092834]
[67.09068298 12.30199718]
[68.54860687 5.06276131]
[64.97473145 -9.50526524]
[61.40085220 -24.07329178]
[50.59836197 -35.63256454]
[55.08045959 -49.83679199]
[51.50658035 -64.40481567]
[47.93270111 -78.97284698]
[44.35882568 -93.54087067]
[40.78494644 -108.10889435]
[37.21106720 -122.67692566]
[23.97769356 -130.89370728]
[20.56080055 -145.71867371]
[28.47580528 -158.28402710]
[24.90192604 -172.85206604]
[21.32804871 -187.42008972]
[8.28129005 -200.42010498]
[13.84549904 -217.06723022]
[10.06582737 -231.58322144]
[6.28615665 -246.09921265]
[-4.41893101 -253.28448486]
[-7.27129507 -265.44665527]
[-1.27357543 -275.94580078]
[-4.84745407 -290.51382446]
[-8.42133331 -305.08184814]
[-16.64425278 -317.62710571]
[-28.57678413 -326.71636963]
[-40.50931549 -335.80563354]
[-52.44184494 -344.89489746]
[-68.76803589 -346.44003296]
[-75.34603119 -361.46209717]
[-65.40895844 -374.50765991]
[-49.17921829 -372.15655518]
[-43.35258102 -356.82742310]
[-31.42005157 -347.73815918]
[-19.48752022 -338.64889526]
[-7.55498886 -329.55963135]
[5.64243078 -336.68902588]
[4.58196735 -351.65148926]
[-7.07241011 -361.98654175]
[-7.93472481 -377.17572021]
[1.98998678 -388.22268677]
[0.92952335 -403.18515015]
[-0.13094015 -418.14761353]
[-1.19140363 -433.11010742]
[-2.25186706 -448.07257080]
[-3.31233072 -463.03503418]
[-4.37279415 -477.99749756]
[-6.91893721 -481.49227905]
[-8.10618305 -485.23837280]
[-8.02181625 -488.77923584]
[-6.89199305 -491.73321533]
[-5.04544306 -493.83218384]
[-5.25770617 -508.83068848]
[-5.46996880 -523.82916260]
[-5.68223143 -538.82769775]
[-5.89449406 -553.82617188]
[-6.10675669 -568.82464600]
[-19.55423546 -576.24499512]
[-27.47619629 -589.40313721]
[-27.74167442 -604.75976562]
[-20.27925682 -618.18389893]
[-7.09629536 -626.06457520]
[8.26105881 -626.28192139]
[21.66175461 -618.77746582]
[29.50107384 -605.56988525]
[29.67027473 -590.21191406]
[22.12384796 -576.83483887]
[8.89174175 -569.03692627]
[9.10400391 -554.03845215]
[9.31626701 -539.03991699]
[9.52852917 -524.04144287]
[9.74079227 -509.04293823]
[9.95305443 -494.04443359]
[10.58967304 -479.05795288]
[11.65013599 -464.09548950]
[12.71059990 -449.13302612]
[13.77106285 -434.17056274]
[14.83152676 -419.20809937]
[15.89199066 -404.24563599]
[16.95245361 -389.28314209]
[28.33603477 -379.74639893]
[29.62464142 -364.58743286]
[19.54443359 -352.71194458]
[20.60489845 -337.74948120]
[6.14669323 -308.65573120]
[9.72057247 -294.08770752]
[13.29445076 -279.51968384]
[26.10224533 -267.51770020]
[20.80215073 -249.87889099]
[24.58182144 -235.36289978]
[28.36149216 -220.84689331]
[38.62860870 -214.46014404]
[41.89961243 -202.40380859]
[35.89607620 -190.99397278]
[39.46995163 -176.42593384]
[43.04383087 -161.85791016]
[55.87538910 -154.38217163]
[59.70734024 -139.65902710]
[51.77909088 -126.25080109]
[55.35297012 -111.68277740]
[58.92684937 -97.11474609]
[62.50072861 -82.54672241]
[66.07460785 -67.97869873]
[69.64848328 -53.41067123]
[80.19535065 -42.89339828]
[75.96887970 -27.64717102]
[79.54275513 -13.07914352]
[83.11663818 1.48888242]
[86.79350281 16.03125572]
[90.57317352 30.54725075]
[95.29665375 36.22359085]
[94.30207062 45.29541779]
[97.87595367 59.86344528]
[125.72087097 60.91566467]
[150.07662964 81.50196838]
[157.62603760 116.63695526]
[172.50454712 118.54222107]
[187.38305664 120.44748688]
[197.22567749 108.56782532]
[211.93534851 103.91712952]
[226.81828308 107.97940826]
[237.12536621 119.45841217]
[239.56765747 134.69123840]
[233.36582947 148.81712341]
[220.49887085 157.32858276]
[205.07257080 157.50961304]
[192.00939941 149.30245972]
[185.47778320 135.32598877]
[170.59928894 133.42073059]
[155.72077942 131.51545715]
[152.24981689 138.16395569]
[165.54679871 145.10586548]
[180.33815002 147.59904480]
[182.53775024 162.43690491]
[169.10581970 169.11396790]
[158.60488892 158.40284729]
[145.30790710 151.46093750]
[141.83694458 158.10943604]
[151.90541077 169.22814941]
[161.97389221 180.34687805]
[172.04235840 191.46559143]
[182.11082458 202.58432007]
[192.17929077 213.70303345]
[202.24775696 224.82176208]
[212.31622314 235.94047546]
[228.20393372 238.16766357]
[236.24409485 252.05058289]
[230.26901245 266.93942261]
[214.86222839 271.41275024]
[201.84252930 262.03903198]
[201.19750977 246.00894165]
[191.12904358 234.89022827]
[181.06056213 223.77149963]
[170.99209595 212.65278625]
[160.92362976 201.53405762]
[150.85516357 190.41534424]
[140.78669739 179.29661560]
[130.71823120 168.17790222]
[116.61077881 173.27494812]
[115.97415924 188.26142883]
[115.33753967 203.24790955]
[114.70092010 218.23439026]
[124.89044189 227.03543091]
[128.10621643 239.90953064]
[123.39223480 252.10530090]
[112.67731476 259.25369263]
[111.82868958 274.22967529]
[110.98006439 289.20565796]
[110.23742676 304.18725586]
[109.60080719 319.17373657]
[112.36149597 327.87234497]
[108.84765625 334.36734009]
[107.99903107 349.34332275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 221]
[6 220]
[7 218]
[8 217]
[10 216]
[11 215]
[12 214]
[15 210]
[16 209]
[17 208]
[18 207]
[19 38]
[20 37]
[21 36]
[22 35]
[44 161]
[45 160]
[46 158]
[47 157]
[49 156]
[50 155]
[51 154]
[53 152]
[54 151]
[55 150]
[56 149]
[57 148]
[58 147]
[61 144]
[62 143]
[63 142]
[65 139]
[66 138]
[67 137]
[70 135]
[71 134]
[72 133]
[73 84]
[74 83]
[75 82]
[76 81]
[85 132]
[86 131]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[100 121]
[101 120]
[102 119]
[103 118]
[104 117]
[105 116]
[164 178]
[165 177]
[166 176]
[186 206]
[187 205]
[188 204]
[189 203]
[190 202]
[191 201]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
