%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PIKFYVE)
} def

/sequence { (\
CAACCAUGUAAGCAGCUUCGCUUCCUGCCGCAACCGUCCGCGGCCUGAGGAGCCCACCGCCGCUCUCGGGGGCCGACUUCCGGGGGCUGAGCCGUUGAAGCGGAGGCUGGGGCGGGGGGCAGCCGGCGCGGCCGGGGCAGGAGGCGCAGACUCAUGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.023183533 ubox
1 156 0.011291172 ubox
2 7 0.020382794 ubox
2 155 0.010016287 ubox
3 9 0.018712708 ubox
4 8 0.019213798 ubox
5 156 0.982119110 ubox
6 155 0.984031254 ubox
7 14 0.018396722 ubox
7 154 0.984156206 ubox
7 156 0.012714025 ubox
8 13 0.023430797 ubox
8 16 0.008925295 ubox
8 151 0.019166321 ubox
8 153 0.982228618 ubox
8 155 0.027362820 ubox
9 15 0.009373289 ubox
9 150 0.022712223 ubox
9 154 0.028140339 ubox
9 156 0.019882033 ubox
10 18 0.007637864 ubox
10 155 0.020264341 ubox
11 17 0.008825572 ubox
11 152 0.432613106 ubox
12 16 0.008815373 ubox
12 147 0.026423293 ubox
12 151 0.464371177 ubox
13 146 0.024211951 ubox
13 156 0.026078993 ubox
14 152 0.759166138 ubox
14 155 0.019547515 ubox
15 145 0.003902228 ubox
15 147 0.082083943 ubox
15 151 0.765569179 ubox
16 144 0.003833406 ubox
16 146 0.075088261 ubox
16 149 0.981897840 ubox
17 143 0.003485438 ubox
17 148 0.963193494 ubox
17 149 0.102973440 ubox
17 150 0.033085334 ubox
18 148 0.116543522 ubox
18 149 0.030327033 ubox
18 150 0.005824182 ubox
19 146 0.995262966 ubox
19 149 0.005015596 ubox
20 145 0.999964356 ubox
21 144 0.999978393 ubox
22 143 0.999072300 ubox
23 142 0.999422682 ubox
24 141 0.999990910 ubox
25 140 0.999987721 ubox
26 139 0.999754488 ubox
27 138 0.999977410 ubox
28 136 0.003310338 ubox
28 137 0.999965309 ubox
29 135 0.003386728 ubox
29 136 0.999306319 ubox
30 37 0.004786681 ubox
30 41 0.004191045 ubox
30 120 0.011027260 ubox
30 138 0.004794407 ubox
31 36 0.005127649 ubox
31 40 0.004285704 ubox
31 47 0.003375678 ubox
31 119 0.011034741 ubox
31 137 0.005389487 ubox
32 46 0.003284914 ubox
34 43 0.009174134 ubox
34 115 0.008982415 ubox
34 116 0.006538081 ubox
34 131 0.011319614 ubox
34 135 0.998902792 ubox
34 136 0.004028861 ubox
35 42 0.009223459 ubox
35 114 0.009504526 ubox
35 115 0.005758866 ubox
35 130 0.011334645 ubox
35 134 0.999529311 ubox
35 135 0.004696914 ubox
36 41 0.008986915 ubox
36 113 0.009996337 ubox
36 129 0.011239142 ubox
36 132 0.052763750 ubox
36 133 0.996318388 ubox
37 51 0.006797991 ubox
37 112 0.009698344 ubox
37 128 0.009303879 ubox
37 131 0.015062556 ubox
38 50 0.007424029 ubox
38 111 0.009697754 ubox
38 112 0.005421870 ubox
38 130 0.012792965 ubox
38 131 0.998412720 ubox
38 136 0.003174957 ubox
39 49 0.007415445 ubox
39 110 0.009689456 ubox
39 111 0.005428921 ubox
39 128 0.011615022 ubox
39 130 0.999651908 ubox
39 135 0.004472514 ubox
40 127 0.012464486 ubox
40 129 0.999681034 ubox
40 132 0.004401604 ubox
41 47 0.005832165 ubox
41 109 0.011059121 ubox
41 125 0.013158895 ubox
41 126 0.008851944 ubox
41 128 0.998066314 ubox
41 131 0.004575324 ubox
41 134 0.006173443 ubox
42 46 0.003630321 ubox
42 108 0.011097754 ubox
42 124 0.021149024 ubox
42 127 0.710842587 ubox
42 133 0.007002488 ubox
43 107 0.011107534 ubox
43 123 0.022220172 ubox
43 127 0.702249278 ubox
43 129 0.004595690 ubox
43 132 0.007028780 ubox
44 50 0.010921539 ubox
44 106 0.011107082 ubox
44 122 0.019881897 ubox
44 126 0.991141391 ubox
44 128 0.004610345 ubox
44 131 0.007028796 ubox
45 49 0.011053687 ubox
45 105 0.011105284 ubox
45 122 0.014004593 ubox
45 125 0.990027081 ubox
45 126 0.080040714 ubox
45 130 0.007024675 ubox
46 51 0.013108341 ubox
46 104 0.010884590 ubox
46 121 0.018498212 ubox
46 125 0.086135760 ubox
46 128 0.006391075 ubox
47 120 0.010022366 ubox
47 124 0.191228463 ubox
47 127 0.006752342 ubox
49 58 0.006168578 ubox
49 124 0.950052500 ubox
50 57 0.006152386 ubox
50 123 0.950429513 ubox
52 60 0.003361966 ubox
52 101 0.006051561 ubox
52 120 0.992218558 ubox
53 59 0.003391149 ubox
53 100 0.006045515 ubox
53 118 0.123903547 ubox
53 119 0.992181463 ubox
54 117 0.131668147 ubox
54 118 0.991188177 ubox
54 119 0.006699726 ubox
55 97 0.005096512 ubox
55 116 0.138844805 ubox
55 117 0.974383158 ubox
55 118 0.007054011 ubox
56 95 0.004456243 ubox
56 96 0.004172567 ubox
57 94 0.005375275 ubox
57 115 0.993602525 ubox
57 116 0.063297463 ubox
57 117 0.005822020 ubox
58 114 0.998843299 ubox
58 115 0.044920730 ubox
58 116 0.007226401 ubox
58 117 0.003605015 ubox
59 92 0.006766435 ubox
59 113 0.999846596 ubox
60 91 0.007178548 ubox
60 110 0.003576795 ubox
60 111 0.026283122 ubox
60 112 0.999512673 ubox
60 115 0.009574880 ubox
61 89 0.010694955 ubox
61 109 0.005277862 ubox
61 110 0.036965342 ubox
61 111 0.998038693 ubox
61 114 0.010503400 ubox
62 87 0.997892334 ubox
62 88 0.005612494 ubox
62 113 0.010550009 ubox
63 85 0.004986954 ubox
63 86 0.999798009 ubox
63 110 0.008443280 ubox
63 112 0.010513941 ubox
64 84 0.003969297 ubox
64 85 0.999184276 ubox
64 109 0.007481018 ubox
64 111 0.007477499 ubox
65 83 0.004324941 ubox
65 84 0.999828354 ubox
65 85 0.003462944 ubox
65 110 0.007638317 ubox
65 111 0.007793758 ubox
66 83 0.999248103 ubox
66 110 0.008900663 ubox
67 82 0.999782330 ubox
67 83 0.003454202 ubox
67 109 0.011857586 ubox
68 80 0.008927137 ubox
68 81 0.999840426 ubox
68 108 0.011963891 ubox
69 78 0.003491663 ubox
69 79 0.012571442 ubox
69 80 0.999762805 ubox
69 81 0.005626591 ubox
69 107 0.011971885 ubox
70 77 0.013781416 ubox
70 78 0.086664573 ubox
70 79 0.992782084 ubox
70 80 0.007483785 ubox
71 77 0.122808009 ubox
71 78 0.987642466 ubox
71 79 0.008275958 ubox
72 77 0.980352995 ubox
72 78 0.007635409 ubox
73 103 0.012161037 ubox
74 102 0.012230420 ubox
75 101 0.012227523 ubox
77 100 0.012235950 ubox
78 99 0.012227792 ubox
79 98 0.012188946 ubox
80 97 0.009450004 ubox
81 97 0.007774866 ubox
82 96 0.010898806 ubox
83 95 0.011299789 ubox
85 93 0.012373753 ubox
85 108 0.009117257 ubox
86 92 0.012379505 ubox
86 107 0.010248940 ubox
87 91 0.012295757 ubox
87 106 0.010411535 ubox
87 110 0.031168641 ubox
87 111 0.019920584 ubox
88 94 0.003456469 ubox
88 97 0.006134377 ubox
88 105 0.010734947 ubox
88 109 0.059219592 ubox
88 110 0.819613568 ubox
89 93 0.004327009 ubox
89 96 0.008751765 ubox
89 108 0.026800357 ubox
90 95 0.008740562 ubox
90 108 0.985231542 ubox
91 107 0.995090892 ubox
92 103 0.094871783 ubox
92 106 0.994369331 ubox
92 110 0.028226340 ubox
93 102 0.104125020 ubox
93 105 0.993237548 ubox
93 109 0.028295985 ubox
93 114 0.003237561 ubox
94 101 0.136014768 ubox
94 107 0.012058152 ubox
94 108 0.012819196 ubox
94 113 0.003288967 ubox
95 100 0.129558129 ubox
95 103 0.861121570 ubox
95 104 0.264219577 ubox
95 106 0.012031316 ubox
95 112 0.003280086 ubox
96 102 0.866007268 ubox
96 103 0.271781087 ubox
96 104 0.021275903 ubox
96 105 0.011889506 ubox
96 110 0.003527473 ubox
97 101 0.829856107 ubox
99 108 0.039601497 ubox
100 107 0.042427623 ubox
101 106 0.042418767 ubox
123 135 0.016505539 ubox
124 134 0.016554240 ubox
125 133 0.016558004 ubox
126 132 0.016557656 ubox
127 131 0.016437194 ubox
147 156 0.012464639 ubox
148 155 0.012235235 ubox
5 156 0.9500000 lbox
6 155 0.9500000 lbox
7 154 0.9500000 lbox
8 153 0.9500000 lbox
14 152 0.9500000 lbox
15 151 0.9500000 lbox
16 149 0.9500000 lbox
17 148 0.9500000 lbox
19 146 0.9500000 lbox
20 145 0.9500000 lbox
21 144 0.9500000 lbox
22 143 0.9500000 lbox
23 142 0.9500000 lbox
24 141 0.9500000 lbox
25 140 0.9500000 lbox
26 139 0.9500000 lbox
27 138 0.9500000 lbox
28 137 0.9500000 lbox
29 136 0.9500000 lbox
34 135 0.9500000 lbox
35 134 0.9500000 lbox
36 133 0.9500000 lbox
38 131 0.9500000 lbox
39 130 0.9500000 lbox
40 129 0.9500000 lbox
41 128 0.9500000 lbox
42 127 0.9500000 lbox
44 126 0.9500000 lbox
45 125 0.9500000 lbox
49 124 0.9500000 lbox
50 123 0.9500000 lbox
52 120 0.9500000 lbox
53 119 0.9500000 lbox
54 118 0.9500000 lbox
55 117 0.9500000 lbox
57 115 0.9500000 lbox
58 114 0.9500000 lbox
59 113 0.9500000 lbox
60 112 0.9500000 lbox
61 111 0.9500000 lbox
62 87 0.9500000 lbox
63 86 0.9500000 lbox
64 85 0.9500000 lbox
65 84 0.9500000 lbox
66 83 0.9500000 lbox
67 82 0.9500000 lbox
68 81 0.9500000 lbox
69 80 0.9500000 lbox
70 79 0.9500000 lbox
71 78 0.9500000 lbox
72 77 0.9500000 lbox
90 108 0.9500000 lbox
91 107 0.9500000 lbox
92 106 0.9500000 lbox
93 105 0.9500000 lbox
95 103 0.9500000 lbox
96 102 0.9500000 lbox
97 101 0.9500000 lbox
showpage
end
%%EOF
