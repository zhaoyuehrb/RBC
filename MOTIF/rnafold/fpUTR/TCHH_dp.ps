%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TCHH)
} def

/sequence { (\
GUUACCCAGUACACUUGCCUGUGGUGUCAGCAAGCACUGUCGACUUCUUCCUCUGGUGAAGUGGGUUUACUUGAACUUGAAGGAAAGAAAAAAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.027122783 ubox
1 14 0.005277245 ubox
1 31 0.020124731 ubox
1 35 0.006752923 ubox
1 40 0.004548622 ubox
1 44 0.800588854 ubox
1 70 0.015031816 ubox
1 76 0.003742297 ubox
2 11 0.025299555 ubox
2 13 0.005285386 ubox
2 24 0.004094914 ubox
2 30 0.020061939 ubox
2 34 0.006638010 ubox
2 43 0.800340410 ubox
2 69 0.014870783 ubox
2 75 0.003724534 ubox
2 85 0.003569456 ubox
2 86 0.004452560 ubox
2 88 0.003784361 ubox
2 89 0.004352717 ubox
2 90 0.008313540 ubox
2 91 0.014209855 ubox
2 92 0.014244986 ubox
2 93 0.014254146 ubox
2 94 0.014258369 ubox
2 95 0.008764705 ubox
3 11 0.018450638 ubox
3 23 0.005623942 ubox
3 26 0.044106979 ubox
3 29 0.013838635 ubox
3 33 0.004613913 ubox
3 42 0.763335522 ubox
3 74 0.003561393 ubox
3 84 0.004026276 ubox
3 85 0.004801263 ubox
3 87 0.003855628 ubox
3 88 0.004080596 ubox
3 89 0.007585656 ubox
3 90 0.015269712 ubox
3 91 0.015297933 ubox
3 92 0.015303207 ubox
3 93 0.015297868 ubox
3 94 0.011124523 ubox
4 10 0.021831038 ubox
4 22 0.005969973 ubox
4 25 0.202144503 ubox
4 27 0.007284632 ubox
4 40 0.124478238 ubox
4 66 0.021935006 ubox
5 9 0.021814161 ubox
5 21 0.005900552 ubox
5 24 0.212344203 ubox
5 26 0.007342800 ubox
5 39 0.095858215 ubox
5 65 0.023526120 ubox
5 83 0.011457678 ubox
6 23 0.212394495 ubox
6 24 0.016500869 ubox
6 64 0.023487362 ubox
6 82 0.011418691 ubox
6 83 0.003786777 ubox
7 17 0.005117363 ubox
7 21 0.212081614 ubox
7 23 0.016692413 ubox
7 26 0.015324370 ubox
7 39 0.963484018 ubox
7 63 0.023036379 ubox
7 82 0.003453502 ubox
8 15 0.003185830 ubox
8 16 0.004922385 ubox
8 20 0.211650878 ubox
8 22 0.015823653 ubox
8 25 0.019416208 ubox
8 38 0.971838826 ubox
8 45 0.025345987 ubox
8 62 0.018628614 ubox
9 14 0.003813779 ubox
9 15 0.004177073 ubox
9 18 0.119768905 ubox
9 19 0.175305082 ubox
9 31 0.004063277 ubox
9 35 0.007263583 ubox
9 37 0.973011703 ubox
9 44 0.032513889 ubox
10 17 0.166967312 ubox
10 21 0.004398538 ubox
10 23 0.020741088 ubox
10 30 0.003967299 ubox
10 34 0.004297170 ubox
10 36 0.963176043 ubox
10 39 0.003187863 ubox
10 43 0.031395139 ubox
11 16 0.145730277 ubox
11 20 0.004582339 ubox
11 22 0.024032192 ubox
11 25 0.005273845 ubox
11 27 0.022518367 ubox
11 38 0.003424930 ubox
11 40 0.038403644 ubox
12 21 0.024500408 ubox
12 23 0.042865653 ubox
12 24 0.004005874 ubox
12 26 0.022995548 ubox
12 39 0.040927420 ubox
12 58 0.017775979 ubox
13 20 0.022075146 ubox
13 22 0.043493154 ubox
13 25 0.023267733 ubox
13 38 0.040322998 ubox
13 40 0.015643873 ubox
13 57 0.017825784 ubox
14 21 0.043559838 ubox
14 24 0.023298316 ubox
14 34 0.973275811 ubox
14 39 0.016158296 ubox
14 56 0.017827133 ubox
14 61 0.003198062 ubox
14 87 0.005633060 ubox
15 23 0.023032421 ubox
15 33 0.973991091 ubox
15 55 0.017515519 ubox
15 86 0.005655060 ubox
16 32 0.974154196 ubox
16 36 0.023894278 ubox
16 85 0.004023495 ubox
17 25 0.010752486 ubox
17 31 0.974590294 ubox
17 35 0.027028844 ubox
17 57 0.003575386 ubox
18 24 0.011640683 ubox
18 30 0.700008649 ubox
18 34 0.026975564 ubox
18 56 0.003656773 ubox
18 83 0.005769745 ubox
19 23 0.012156559 ubox
19 30 0.678133405 ubox
19 55 0.003658363 ubox
19 82 0.005781800 ubox
20 26 0.013198260 ubox
20 29 0.958646758 ubox
20 32 0.024999769 ubox
20 42 0.007751008 ubox
20 81 0.005664024 ubox
21 25 0.007253134 ubox
21 27 0.025530429 ubox
21 28 0.960073470 ubox
21 31 0.025269633 ubox
21 41 0.009666369 ubox
22 26 0.061942315 ubox
22 29 0.105578436 ubox
22 30 0.023135779 ubox
22 39 0.010681128 ubox
23 28 0.107374372 ubox
23 38 0.016556253 ubox
23 45 0.004255651 ubox
23 47 0.015144483 ubox
23 48 0.005805922 ubox
23 51 0.003276307 ubox
23 77 0.003886500 ubox
24 31 0.003966540 ubox
24 35 0.003802413 ubox
24 37 0.022394784 ubox
24 44 0.011031545 ubox
24 46 0.013040246 ubox
24 47 0.006083400 ubox
24 50 0.003258685 ubox
24 76 0.003999209 ubox
25 30 0.003936853 ubox
25 34 0.003810121 ubox
25 36 0.022539854 ubox
25 42 0.019262568 ubox
25 43 0.009190502 ubox
25 75 0.003942431 ubox
26 35 0.022940245 ubox
26 41 0.048585913 ubox
26 44 0.206650185 ubox
27 34 0.022248497 ubox
27 43 0.208796863 ubox
27 74 0.003825209 ubox
27 80 0.004183941 ubox
28 39 0.057347671 ubox
28 42 0.208766262 ubox
28 73 0.004025063 ubox
28 79 0.004481813 ubox
29 38 0.058018764 ubox
29 72 0.003309918 ubox
29 78 0.004238527 ubox
30 37 0.057755224 ubox
30 40 0.207820530 ubox
30 70 0.003539898 ubox
30 77 0.003850655 ubox
31 39 0.209132481 ubox
31 73 0.006491785 ubox
32 38 0.199123902 ubox
32 68 0.003828952 ubox
32 72 0.006532955 ubox
33 67 0.004121400 ubox
33 71 0.006571977 ubox
34 40 0.003522719 ubox
34 66 0.004151289 ubox
34 70 0.006560710 ubox
35 39 0.003923626 ubox
35 65 0.004106711 ubox
39 66 0.003732758 ubox
40 64 0.003585886 ubox
40 65 0.023604927 ubox
40 84 0.007086725 ubox
40 88 0.033443935 ubox
41 63 0.005796220 ubox
41 64 0.033771447 ubox
41 83 0.007519157 ubox
41 87 0.035714240 ubox
42 62 0.003469542 ubox
43 62 0.038301247 ubox
44 61 0.039079361 ubox
44 82 0.038042530 ubox
44 87 0.050276893 ubox
45 60 0.039072907 ubox
45 81 0.038249983 ubox
45 84 0.043426971 ubox
45 85 0.015413971 ubox
45 86 0.049730051 ubox
45 87 0.023105802 ubox
45 88 0.091908955 ubox
45 89 0.870808781 ubox
45 90 0.058614141 ubox
45 91 0.022410610 ubox
45 92 0.015661871 ubox
45 93 0.011220606 ubox
45 94 0.008141772 ubox
46 59 0.039072316 ubox
46 80 0.038313179 ubox
46 83 0.045922684 ubox
46 84 0.017063773 ubox
46 85 0.034186562 ubox
46 86 0.026009887 ubox
46 87 0.092047522 ubox
46 88 0.967758286 ubox
46 89 0.047195089 ubox
46 90 0.010906709 ubox
46 91 0.007618425 ubox
46 92 0.005311674 ubox
46 93 0.003922978 ubox
47 58 0.039048246 ubox
47 79 0.038309344 ubox
47 82 0.047079049 ubox
47 83 0.017201556 ubox
47 87 0.978541421 ubox
48 81 0.047166163 ubox
48 82 0.016747219 ubox
48 84 0.013621379 ubox
48 85 0.586036318 ubox
48 86 0.796229868 ubox
48 87 0.003888781 ubox
49 56 0.016090513 ubox
49 80 0.047065823 ubox
49 81 0.014017864 ubox
49 83 0.016118471 ubox
49 84 0.819947298 ubox
49 85 0.561081900 ubox
50 55 0.018462983 ubox
50 56 0.030331625 ubox
50 64 0.003277283 ubox
50 79 0.046969009 ubox
50 82 0.019255766 ubox
50 83 0.996561636 ubox
51 55 0.030135922 ubox
51 63 0.003461465 ubox
51 82 0.996475745 ubox
51 83 0.016985950 ubox
52 59 0.004562226 ubox
52 74 0.067055290 ubox
52 80 0.676082698 ubox
52 81 0.723317972 ubox
52 82 0.012086883 ubox
52 83 0.004294219 ubox
52 84 0.008258951 ubox
53 58 0.006667257 ubox
53 61 0.007241601 ubox
53 73 0.074874783 ubox
53 79 0.956214961 ubox
53 82 0.007997968 ubox
53 83 0.008498760 ubox
54 60 0.007320016 ubox
54 73 0.003196036 ubox
54 79 0.060495782 ubox
54 81 0.008317412 ubox
54 82 0.008431393 ubox
55 71 0.079678273 ubox
55 77 0.936792997 ubox
55 78 0.059144196 ubox
56 70 0.084033500 ubox
56 76 0.990827755 ubox
56 77 0.024328905 ubox
57 69 0.084056646 ubox
57 73 0.013342709 ubox
57 75 0.978347033 ubox
58 68 0.084146368 ubox
58 72 0.033300186 ubox
59 67 0.083975550 ubox
59 71 0.024976889 ubox
59 72 0.918909930 ubox
59 78 0.016089751 ubox
60 66 0.081848947 ubox
60 71 0.980631963 ubox
60 72 0.102897490 ubox
60 77 0.016489982 ubox
61 70 0.990232389 ubox
61 71 0.027150987 ubox
61 76 0.016596813 ubox
62 69 0.982988623 ubox
62 73 0.008478837 ubox
62 75 0.016294094 ubox
62 79 0.007836177 ubox
63 68 0.898679618 ubox
63 71 0.084567896 ubox
63 72 0.021508749 ubox
63 78 0.018674427 ubox
64 70 0.087259722 ubox
64 71 0.025135123 ubox
64 77 0.020979449 ubox
65 70 0.025451346 ubox
65 76 0.024062760 ubox
66 75 0.024111344 ubox
66 81 0.003206260 ubox
66 85 0.004062634 ubox
66 86 0.013189569 ubox
66 87 0.006612785 ubox
66 90 0.005699374 ubox
66 91 0.006888041 ubox
67 74 0.023874242 ubox
67 80 0.003800420 ubox
67 84 0.004790025 ubox
67 85 0.015814363 ubox
67 86 0.008608165 ubox
67 89 0.006834107 ubox
67 90 0.008255680 ubox
68 73 0.022353841 ubox
68 79 0.003862876 ubox
68 83 0.004369037 ubox
68 84 0.010764126 ubox
68 85 0.008558342 ubox
68 88 0.007014983 ubox
68 89 0.008147345 ubox
69 78 0.003791731 ubox
70 82 0.020211288 ubox
70 83 0.015352353 ubox
70 87 0.014532248 ubox
71 81 0.020243168 ubox
71 82 0.015399031 ubox
71 86 0.014574202 ubox
71 91 0.003927554 ubox
71 92 0.005687880 ubox
71 93 0.003244295 ubox
72 80 0.020132414 ubox
72 81 0.015397111 ubox
72 85 0.014407785 ubox
72 90 0.004290428 ubox
72 91 0.006237744 ubox
72 92 0.003546249 ubox
76 82 0.012381163 ubox
76 83 0.004768468 ubox
76 87 0.019997438 ubox
77 81 0.011178274 ubox
77 82 0.004438576 ubox
77 86 0.020113442 ubox
78 85 0.019909356 ubox
1 44 0.9500000 lbox
2 43 0.9500000 lbox
3 42 0.9500000 lbox
7 39 0.9500000 lbox
8 38 0.9500000 lbox
9 37 0.9500000 lbox
10 36 0.9500000 lbox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
18 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
45 89 0.9500000 lbox
46 88 0.9500000 lbox
47 87 0.9500000 lbox
48 86 0.9500000 lbox
49 85 0.9500000 lbox
50 83 0.9500000 lbox
51 82 0.9500000 lbox
52 80 0.9500000 lbox
53 79 0.9500000 lbox
55 77 0.9500000 lbox
56 76 0.9500000 lbox
57 75 0.9500000 lbox
59 72 0.9500000 lbox
60 71 0.9500000 lbox
61 70 0.9500000 lbox
62 69 0.9500000 lbox
63 68 0.9500000 lbox
showpage
end
%%EOF
