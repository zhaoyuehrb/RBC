%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAUGGCGGCGGCGGCGGCGGCGGCGGCGGCCGCUGCCAUUGCCCGGAGAUGGCCGGCAGAGCCGCCGAGACGCCGAAGAGCCCGCCGCCCGCGCGAGGUGUAGACGGGGCACUGCCUUCAGAGCAGGUCCUGCCAGCCUCGCUGGAGAGGAUGCCCUCGUGUCCGUG\
) } def
/len { sequence length } bind def

/coor [
[75.05134583 159.22764587]
[60.31326675 156.43676758]
[48.73471069 146.90068054]
[43.17071152 132.97077942]
[44.99323654 118.08191681]
[53.75289536 105.90536499]
[67.28972626 99.44361877]
[82.26466370 100.28964233]
[68.03326416 95.54968262]
[53.80186844 90.80971527]
[39.57046890 86.06974792]
[25.29612732 81.46070862]
[10.98005295 76.98298645]
[-3.33602214 72.50526428]
[-17.65209770 68.02754211]
[-31.96817207 63.54982376]
[-46.32477570 59.20379639]
[-60.72069168 54.98982620]
[-76.94342804 64.71674347]
[-94.82910919 59.62267685]
[-103.20061493 43.37382126]
[-117.74162292 39.69153976]
[-132.28262329 36.00925827]
[-146.82362366 32.32697678]
[-161.36462402 28.64469337]
[-180.45936584 35.02815628]
[-193.77374268 21.03671646]
[-208.44020081 17.89109230]
[-223.10665894 14.74546528]
[-237.77311707 11.59984016]
[-252.43957520 8.45421410]
[-267.10604858 5.30858850]
[-281.77249146 2.16296291]
[-293.03088379 8.50753784]
[-305.20065308 5.55965614]
[-311.86547852 -4.56377935]
[-326.47164917 -7.97830963]
[-341.07785034 -11.39284039]
[-355.68405151 -14.80737019]
[-370.29025269 -18.22190094]
[-379.22460938 -11.93457890]
[-389.92510986 -11.63024616]
[-398.82849121 -17.16744804]
[-403.10351562 -26.49959183]
[-417.57440186 -30.44838333]
[-432.04531860 -34.39717484]
[-444.79196167 -25.33866501]
[-460.37493896 -26.64436340]
[-471.43643188 -37.69775772]
[-472.75354004 -53.27977371]
[-463.70434570 -66.03306580]
[-448.56164551 -69.93590546]
[-434.47531128 -63.14550400]
[-428.09652710 -48.86807632]
[-413.62561035 -44.91928482]
[-399.15472412 -40.97049332]
[-380.89862061 -47.27510071]
[-366.87573242 -32.82809830]
[-352.26953125 -29.41356659]
[-337.66333008 -25.99903679]
[-323.05712891 -22.58450699]
[-308.45092773 -19.16997719]
[-291.97442627 -25.16354561]
[-278.62686157 -12.50349712]
[-263.96041870 -9.35787106]
[-249.29396057 -6.21224546]
[-234.62750244 -3.06661963]
[-219.96102905 0.07900605]
[-205.29457092 3.22463179]
[-190.62811279 6.37025738]
[-182.54151917 0.04794141]
[-172.08920288 -0.77650505]
[-162.72633362 4.41289663]
[-157.68234253 14.10369015]
[-143.14134216 17.78597260]
[-128.60034180 21.46825409]
[-114.05933380 25.15053749]
[-99.51833344 28.83281898]
[-91.17971039 20.98120880]
[-79.96618652 18.11709976]
[-68.65124512 21.06883812]
[-60.09173965 29.21127319]
[-56.50672531 40.59391022]
[-42.11080551 44.80787659]
[-34.78002930 43.66480255]
[-27.49044991 49.23374939]
[-13.17437458 53.71147156]
[1.14170003 58.18919373]
[15.45777512 62.66691589]
[29.77384949 67.14463806]
[37.12438965 66.13642883]
[44.31043243 71.83834839]
[58.54183197 76.57831573]
[72.77323151 81.31828308]
[87.00463104 86.05824280]
[114.12219238 78.91974640]
[128.51811218 74.70577240]
[142.91403198 70.49180603]
[157.30995178 66.27783966]
[171.70587158 62.06387329]
[186.10177612 57.84990311]
[200.49769592 53.63593674]
[203.13360596 41.37186050]
[210.70205688 31.45900345]
[221.70986938 25.75150299]
[234.02816772 25.28372765]
[245.30403137 30.08333015]
[253.40994263 39.17772293]
[267.95095825 35.49544144]
[282.49194336 31.81315994]
[297.03295898 28.13087654]
[311.57397461 24.44859505]
[326.11495972 20.76631355]
[333.70025635 15.60738754]
[340.95693970 17.15256310]
[355.56314087 13.73803425]
[370.16931152 10.32350349]
[384.77551270 6.90897322]
[391.67449951 -7.12448931]
[406.00076294 -13.39283943]
[420.98989868 -8.93635368]
[429.56445312 4.14075184]
[427.67584229 19.66386795]
[416.21575928 30.30345345]
[400.59533691 31.03582001]
[388.19006348 21.51516914]
[373.58386230 24.92970085]
[358.97766113 28.34423065]
[344.37145996 31.75876045]
[329.79724121 35.30731583]
[315.25625610 38.98959732]
[300.71524048 42.67188263]
[286.17422485 46.35416412]
[271.63323975 50.03644562]
[257.09222412 53.71872711]
[251.33377075 70.38163757]
[236.61238098 80.36387634]
[218.68824768 79.53275299]
[204.71166992 68.03185272]
[190.31575012 72.24581909]
[175.91983032 76.45979309]
[161.52391052 80.67375946]
[147.12799072 84.88772583]
[132.73207092 89.10169220]
[118.33615875 93.31566620]
[112.69152069 107.21307373]
[120.07187653 120.27179718]
[127.45223236 133.33052063]
[134.83258057 146.38925171]
[142.56996155 159.23965454]
[150.65849304 171.87199402]
[158.74700928 184.50431824]
[166.83554077 197.13665771]
[181.63992310 204.19088745]
[182.66305542 220.55809021]
[168.85243225 229.40107727]
[154.41523743 221.62295532]
[154.20321655 205.22517395]
[146.11468506 192.59284973]
[138.02615356 179.96051025]
[129.93763733 167.32818604]
[126.55114746 166.22422791]
[123.54137421 163.40327454]
[121.71942902 159.06538391]
[121.77385712 153.76960754]
[114.39350128 140.71087646]
[107.01314545 127.65215302]
[99.63278961 114.59342957]
[103.33397675 129.12963867]
[99.58665466 143.65400696]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 95]
[9 94]
[10 93]
[11 92]
[12 90]
[13 89]
[14 88]
[15 87]
[16 86]
[17 84]
[18 83]
[21 78]
[22 77]
[23 76]
[24 75]
[25 74]
[27 70]
[28 69]
[29 68]
[30 67]
[31 66]
[32 65]
[33 64]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[44 56]
[45 55]
[46 54]
[96 145]
[97 144]
[98 143]
[99 142]
[100 141]
[101 140]
[102 139]
[108 135]
[109 134]
[110 133]
[111 132]
[112 131]
[113 130]
[115 129]
[116 128]
[117 127]
[118 126]
[146 168]
[147 167]
[148 166]
[149 165]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
