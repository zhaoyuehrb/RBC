%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGAGCGAUUCGCGUCCCGGAAGCGGCGGUGGCGGCCGCGGCGUAGGCGGAGGAGAUUUUCGGACCUGCGACUUCCGAACAACCCUGGCAGGAGGAGCGGCGUUCAGCCGGGGGAGGCCUGAAGAAACGCUCCGGGGCCCAGUGGCUCUACCCCUGCUCCUGCCCGACCCUGCCGCCUCCCUCACGGAGCCAGCGGCCGGGUAGG\
) } def
/len { sequence length } bind def

/coor [
[316.26464844 402.19732666]
[306.91021729 383.13259888]
[311.00125122 362.15682983]
[300.03869629 351.91854858]
[289.07617188 341.68023682]
[278.11361694 331.44195557]
[267.15109253 321.20364380]
[252.56842041 318.17129517]
[247.76387024 303.09725952]
[236.80133057 292.85894775]
[225.83879089 282.62066650]
[213.14739990 284.85791016]
[201.30844116 279.29290771]
[194.74049377 267.75506592]
[196.03669739 254.34664917]
[185.23080444 243.94316101]
[174.42489624 233.53967285]
[163.61900330 223.13619995]
[152.81311035 212.73271179]
[142.00720215 202.32922363]
[131.20130920 191.92573547]
[120.39540863 181.52224731]
[113.39434814 179.14697266]
[109.50597382 170.87792969]
[98.85920715 160.31164551]
[88.21243286 149.74536133]
[73.30950165 148.04165649]
[60.55272293 155.93244934]
[47.79594040 163.82324219]
[35.03916168 171.71401978]
[22.28238106 179.60481262]
[14.99841785 194.29753113]
[-1.38273263 195.06561279]
[-10.00954628 181.11892700]
[-2.00749779 166.80462646]
[14.39159203 166.84803772]
[27.14837265 158.95724487]
[39.90515518 151.06645203]
[52.66193390 143.17567444]
[65.41871643 135.28488159]
[63.94855881 127.93038177]
[61.00825119 113.22138214]
[59.53809738 105.86688232]
[44.72815323 103.48664856]
[29.91820908 101.10640717]
[15.10826302 98.72617340]
[0.29831845 96.34593201]
[-14.51162624 93.96569061]
[-29.35598946 91.81048584]
[-44.23134995 89.88081360]
[-59.10670853 87.95113373]
[-73.98207092 86.02146149]
[-88.85742950 84.09178162]
[-102.39302063 92.70382690]
[-117.51805878 87.35472870]
[-122.62991333 72.14787292]
[-113.80719757 58.74864578]
[-97.81794739 57.43579483]
[-86.92775726 69.21642303]
[-72.05239105 71.14609528]
[-57.17703247 73.07577515]
[-42.30167389 75.00544739]
[-27.42631149 76.93512726]
[-23.16114616 74.77997589]
[-17.49648094 75.28348541]
[-12.13138771 79.15574646]
[2.67855668 81.53598785]
[17.48850060 83.91622162]
[32.29844666 86.29646301]
[47.10839081 88.67670441]
[61.91833496 91.05693817]
[75.13393402 79.94842529]
[89.35543060 77.63456726]
[87.31292725 62.77428055]
[85.27043152 47.91399002]
[83.22792816 33.05369949]
[68.43978119 29.80777550]
[55.67839432 21.71339607]
[46.47364426 9.76380062]
[41.92119980 -4.58699369]
[42.55210876 -19.60110092]
[48.27094269 -33.46722794]
[58.36963272 -44.51917648]
[71.61508179 -51.43606949]
[69.57257843 -66.29635620]
[67.53008270 -81.15664673]
[65.48757935 -96.01693726]
[63.44507980 -110.87722778]
[61.40258026 -125.73751068]
[59.36008072 -140.59780884]
[49.57186508 -149.00057983]
[48.17807388 -161.42198181]
[55.38396454 -171.14048767]
[53.56722260 -186.03007507]
[51.75048065 -200.91964722]
[38.11978912 -208.33474731]
[31.48123360 -222.36006165]
[34.38747406 -237.60253906]
[45.72100449 -248.20117188]
[61.12384796 -250.08053589]
[74.67329407 -242.51799011]
[81.15931702 -228.42149353]
[78.08789062 -213.21144104]
[66.64006042 -202.73638916]
[68.45680237 -187.84681702]
[70.27354431 -172.95722961]
[81.56474304 -159.52485657]
[74.22036743 -142.64030457]
[76.26287079 -127.78001404]
[78.30536652 -112.91972351]
[80.34786987 -98.05943298]
[82.39036560 -83.19914246]
[84.43286896 -68.33885956]
[86.47537231 -53.47856903]
[101.09579468 -50.39175034]
[113.80178070 -42.47423172]
[123.04957581 -30.66522408]
[127.70784760 -16.37809753]
[127.19601440 -1.33123386]
[121.55656433 12.65864944]
[111.45223999 23.89584923]
[98.08821869 31.01119995]
[100.13072205 45.87149048]
[102.17321777 60.73177719]
[104.21572113 75.59207153]
[122.58577728 82.85449219]
[131.78028870 103.22490692]
[123.40750122 126.73033905]
[98.77871704 139.09858704]
[109.42548370 149.66487122]
[120.07225800 160.23115540]
[130.79890442 170.71633911]
[141.60479736 181.11982727]
[152.41069031 191.52331543]
[163.21659851 201.92680359]
[174.02249146 212.33029175]
[184.82838440 222.73377991]
[195.63429260 233.13726807]
[206.44018555 243.54075623]
[223.91990662 242.88786316]
[236.22254944 254.84234619]
[236.07708740 271.65811157]
[247.03962708 281.89642334]
[258.00216675 292.13470459]
[273.36895752 295.89938354]
[277.38937378 310.24111938]
[288.35192871 320.47940063]
[299.31445312 330.71771240]
[310.27700806 340.95599365]
[321.23953247 351.19430542]
[329.62521362 347.17669678]
[338.76797485 345.61599731]
[347.96496582 346.61920166]
[356.51281738 350.09658813]
[363.76132202 355.76983643]
[369.16287231 363.19396973]
[372.31396484 371.79257202]
[372.98516846 380.90222168]
[371.13787842 389.82388306]
[366.92620850 397.87646484]
[376.91232300 409.06921387]
[386.89840698 420.26196289]
[396.88452148 431.45471191]
[406.87063599 442.64746094]
[416.85671997 453.84024048]
[426.84283447 465.03298950]
[436.82891846 476.22573853]
[440.29281616 461.63116455]
[453.79583740 455.09902954]
[467.38854980 461.44241333]
[471.05541992 475.98730469]
[462.09463501 488.01660156]
[447.10812378 488.66650391]
[456.21694946 500.58410645]
[465.32577515 512.50170898]
[474.43460083 524.41931152]
[483.54342651 536.33691406]
[492.92117310 548.04406738]
[502.56298828 559.53472900]
[512.20483398 571.02545166]
[521.84661865 582.51611328]
[537.63897705 585.34112549]
[545.14965820 599.51745605]
[538.61712646 614.17028809]
[523.05255127 618.05920410]
[510.39575195 608.20092773]
[510.35595703 592.15789795]
[500.71414185 580.66723633]
[491.07232666 569.17657471]
[481.43051147 557.68591309]
[477.96560669 557.01678467]
[474.65325928 554.63433838]
[472.29608154 550.62872314]
[471.62582397 545.44573975]
[462.51699829 533.52813721]
[453.40817261 521.61053467]
[444.29934692 509.69293213]
[435.19052124 497.77532959]
[425.63616943 486.21185303]
[415.65008545 475.01907349]
[405.66397095 463.82632446]
[395.67785645 452.63357544]
[385.69177246 441.44082642]
[375.70565796 430.24807739]
[365.71957397 419.05529785]
[355.73345947 407.86254883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[9 144]
[10 143]
[11 142]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[24 131]
[25 130]
[26 129]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[43 71]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[73 125]
[74 124]
[75 123]
[76 122]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[93 106]
[94 105]
[95 104]
[160 206]
[161 205]
[162 204]
[163 203]
[164 202]
[165 201]
[166 200]
[167 199]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[178 190]
[179 189]
[180 188]
[181 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
