%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:48:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANKAR)
} def

/sequence { (\
CUCACAAGAAGCUGAGCAGAUGCUGGUGCCAUGCUUGUACAGCCUGCAGAAUUAAGCUUCAAAAAGGACACACUAGAUUUAAUUAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.012130841 ubox
1 11 0.005810133 ubox
1 16 0.010713980 ubox
1 66 0.185807848 ubox
1 67 0.239031252 ubox
1 76 0.033681602 ubox
1 86 0.035691164 ubox
2 7 0.020546532 ubox
2 9 0.018675566 ubox
2 10 0.004617569 ubox
2 15 0.017482294 ubox
2 65 0.180224838 ubox
2 66 0.229763682 ubox
2 67 0.102497210 ubox
2 68 0.179345220 ubox
2 75 0.031170877 ubox
2 77 0.067277543 ubox
2 85 0.033182609 ubox
2 87 0.086134157 ubox
3 8 0.020688202 ubox
3 14 0.018052846 ubox
3 66 0.126531245 ubox
3 67 0.193543462 ubox
3 76 0.071840981 ubox
3 86 0.090234529 ubox
4 13 0.017568067 ubox
4 38 0.004233974 ubox
5 14 0.005184266 ubox
5 37 0.004440185 ubox
6 13 0.004829315 ubox
6 36 0.004347748 ubox
6 79 0.008024839 ubox
6 80 0.011187054 ubox
6 84 0.012155712 ubox
7 35 0.004068465 ubox
7 45 0.004292275 ubox
7 74 0.004119655 ubox
7 78 0.008005617 ubox
7 79 0.011078662 ubox
7 80 0.006030946 ubox
7 83 0.011539115 ubox
7 84 0.006533391 ubox
8 34 0.003975083 ubox
8 44 0.004490161 ubox
8 59 0.004836980 ubox
8 60 0.996794959 ubox
9 36 0.005073443 ubox
9 58 0.003760823 ubox
9 59 0.997915480 ubox
10 35 0.005792097 ubox
10 58 0.998096950 ubox
11 34 0.005941887 ubox
11 43 0.010443057 ubox
11 57 0.998706219 ubox
12 33 0.005957932 ubox
12 42 0.010659426 ubox
12 49 0.008926818 ubox
12 56 0.998625287 ubox
12 76 0.003207298 ubox
12 86 0.039570970 ubox
13 31 0.006204416 ubox
13 37 0.003453731 ubox
13 41 0.010645455 ubox
13 48 0.012661393 ubox
13 54 0.450455001 ubox
13 55 0.879640366 ubox
13 75 0.003173577 ubox
13 85 0.039725606 ubox
14 30 0.007697007 ubox
14 36 0.025990596 ubox
14 40 0.010283418 ubox
14 47 0.007580127 ubox
14 53 0.639450742 ubox
14 84 0.039687208 ubox
15 24 0.015086461 ubox
15 35 0.032291688 ubox
15 52 0.658042571 ubox
15 53 0.255876977 ubox
15 83 0.039460266 ubox
16 23 0.015627104 ubox
16 29 0.009478782 ubox
16 34 0.034411294 ubox
16 38 0.006581241 ubox
16 47 0.969654000 ubox
16 52 0.077015757 ubox
17 22 0.015611545 ubox
17 25 0.003525682 ubox
17 28 0.009486392 ubox
17 33 0.034422120 ubox
17 37 0.006688188 ubox
17 46 0.971027804 ubox
18 24 0.003545417 ubox
18 27 0.009418397 ubox
18 32 0.034078332 ubox
18 36 0.006085437 ubox
18 45 0.970548284 ubox
18 80 0.035789321 ubox
19 23 0.003476858 ubox
19 34 0.003641457 ubox
19 35 0.004462145 ubox
19 44 0.959463462 ubox
19 52 0.003946279 ubox
19 53 0.003185701 ubox
19 79 0.037368098 ubox
19 80 0.013235496 ubox
20 32 0.007994944 ubox
20 52 0.003748451 ubox
20 78 0.037500032 ubox
20 79 0.013801497 ubox
21 31 0.008927373 ubox
21 39 0.017081102 ubox
21 41 0.012728883 ubox
21 46 0.003526943 ubox
21 48 0.228588052 ubox
21 77 0.037304973 ubox
22 29 0.035561926 ubox
22 30 0.006555712 ubox
22 34 0.005504344 ubox
22 38 0.018668242 ubox
22 40 0.012227422 ubox
22 43 0.966652630 ubox
22 47 0.230437002 ubox
23 28 0.036139600 ubox
23 33 0.005520479 ubox
23 37 0.019297505 ubox
23 42 0.970900026 ubox
23 46 0.229891482 ubox
23 49 0.003372308 ubox
23 76 0.040388428 ubox
24 31 0.005013135 ubox
24 39 0.004181044 ubox
24 41 0.954063204 ubox
24 48 0.003341081 ubox
24 75 0.040452542 ubox
25 30 0.005300039 ubox
25 35 0.023788817 ubox
25 36 0.003441945 ubox
25 38 0.004483371 ubox
25 40 0.736989703 ubox
25 44 0.226103770 ubox
25 45 0.022845127 ubox
25 47 0.003249502 ubox
25 74 0.040437706 ubox
26 32 0.003277280 ubox
26 34 0.039355301 ubox
26 35 0.013904827 ubox
26 38 0.023519947 ubox
26 40 0.632641852 ubox
26 43 0.226274151 ubox
26 44 0.024341940 ubox
26 52 0.003249413 ubox
26 71 0.003310245 ubox
26 73 0.040389592 ubox
27 33 0.038761872 ubox
27 37 0.027161159 ubox
27 39 0.875854109 ubox
27 41 0.059833300 ubox
27 42 0.216173151 ubox
27 48 0.012250907 ubox
27 70 0.003946928 ubox
27 72 0.040289113 ubox
28 32 0.018038926 ubox
28 34 0.228170403 ubox
28 36 0.016757465 ubox
28 38 0.900850456 ubox
28 40 0.073650541 ubox
28 43 0.024848267 ubox
28 47 0.013607418 ubox
28 69 0.004652324 ubox
28 71 0.040067709 ubox
29 33 0.226648545 ubox
29 37 0.821749129 ubox
29 42 0.024990814 ubox
29 46 0.011588230 ubox
29 67 0.019441947 ubox
30 37 0.455611968 ubox
30 46 0.009665479 ubox
30 66 0.019417346 ubox
31 36 0.566512578 ubox
31 38 0.069794452 ubox
31 45 0.012158333 ubox
32 37 0.068626098 ubox
32 39 0.020996015 ubox
32 41 0.046137423 ubox
32 48 0.014312566 ubox
32 70 0.014351906 ubox
33 38 0.018758037 ubox
33 40 0.046668849 ubox
33 43 0.020906620 ubox
33 47 0.015769203 ubox
33 57 0.011134916 ubox
33 69 0.014533590 ubox
34 42 0.021111046 ubox
34 46 0.015769050 ubox
34 56 0.011158739 ubox
34 66 0.025240765 ubox
34 67 0.015675439 ubox
35 41 0.020257435 ubox
35 49 0.011116584 ubox
35 55 0.011022495 ubox
35 62 0.012082542 ubox
35 64 0.003359906 ubox
35 65 0.025132465 ubox
35 66 0.015483222 ubox
36 48 0.021339532 ubox
36 54 0.010355079 ubox
36 61 0.013440823 ubox
36 63 0.004109583 ubox
36 64 0.024498023 ubox
36 65 0.014773342 ubox
36 70 0.006162303 ubox
37 43 0.014291856 ubox
37 47 0.030445254 ubox
37 53 0.009868547 ubox
37 60 0.013648675 ubox
37 69 0.006303259 ubox
38 42 0.013382944 ubox
38 46 0.030381458 ubox
38 68 0.006249813 ubox
39 45 0.028429701 ubox
40 46 0.004581150 ubox
41 45 0.003756781 ubox
41 58 0.029642666 ubox
41 59 0.003296852 ubox
42 57 0.030786870 ubox
43 56 0.029703044 ubox
43 67 0.011376960 ubox
44 56 0.009019192 ubox
44 66 0.011593445 ubox
44 86 0.003505812 ubox
45 54 0.022996630 ubox
45 55 0.011953398 ubox
45 65 0.011511546 ubox
45 85 0.003500250 ubox
46 53 0.021698895 ubox
46 57 0.015064409 ubox
47 56 0.015102993 ubox
49 57 0.003381788 ubox
49 60 0.019650372 ubox
49 80 0.008791054 ubox
50 59 0.019632891 ubox
50 79 0.009141683 ubox
50 84 0.020485576 ubox
51 58 0.017413054 ubox
51 78 0.009223807 ubox
51 83 0.021830507 ubox
52 77 0.009220443 ubox
52 82 0.022067721 ubox
53 76 0.008932620 ubox
53 81 0.022158776 ubox
54 80 0.022130751 ubox
55 74 0.008620194 ubox
55 79 0.021971573 ubox
56 73 0.008821698 ubox
56 78 0.021261392 ubox
57 66 0.007537006 ubox
57 67 0.005103513 ubox
57 76 0.019717127 ubox
58 65 0.007591549 ubox
58 66 0.005097771 ubox
58 68 0.009212505 ubox
58 75 0.019412119 ubox
58 76 0.003664853 ubox
59 64 0.006664946 ubox
59 65 0.004648863 ubox
59 67 0.010775328 ubox
59 68 0.012897255 ubox
59 75 0.003714081 ubox
59 77 0.007791424 ubox
60 66 0.012163033 ubox
60 67 0.014508670 ubox
60 76 0.008286082 ubox
61 79 0.032138721 ubox
61 80 0.086982646 ubox
61 84 0.010746099 ubox
62 78 0.033292253 ubox
62 79 0.094563821 ubox
62 80 0.072861467 ubox
62 83 0.010451057 ubox
62 84 0.012760271 ubox
63 78 0.093347660 ubox
63 79 0.077380131 ubox
63 80 0.052954330 ubox
63 83 0.012499670 ubox
63 84 0.013177043 ubox
64 78 0.076183529 ubox
64 79 0.056232741 ubox
64 80 0.034423066 ubox
64 83 0.013085571 ubox
64 84 0.016670433 ubox
65 74 0.468890614 ubox
65 78 0.050645925 ubox
65 79 0.035480493 ubox
65 80 0.014291231 ubox
65 83 0.016762641 ubox
65 84 0.011463747 ubox
66 73 0.485544915 ubox
66 74 0.121145410 ubox
66 78 0.033616338 ubox
66 79 0.014581876 ubox
66 80 0.025708311 ubox
66 83 0.011778896 ubox
66 84 0.005680485 ubox
67 73 0.125363173 ubox
67 78 0.010752467 ubox
67 79 0.028397637 ubox
67 80 0.018461896 ubox
67 83 0.004533154 ubox
67 84 0.011900122 ubox
68 78 0.026730303 ubox
68 79 0.017866681 ubox
68 83 0.011267343 ubox
73 86 0.586669566 ubox
74 81 0.046269341 ubox
74 85 0.590147584 ubox
75 80 0.046699994 ubox
75 84 0.585197796 ubox
76 83 0.413957799 ubox
76 84 0.098395288 ubox
77 83 0.112391480 ubox
78 82 0.110472217 ubox
78 86 0.022468314 ubox
78 87 0.076023795 ubox
78 88 0.058927247 ubox
79 85 0.032601525 ubox
79 86 0.080816862 ubox
79 87 0.077039116 ubox
79 88 0.024927090 ubox
80 85 0.069282105 ubox
80 86 0.077265406 ubox
80 87 0.032051347 ubox
8 60 0.9500000 lbox
9 59 0.9500000 lbox
10 58 0.9500000 lbox
11 57 0.9500000 lbox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
16 47 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
19 44 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
24 41 0.9500000 lbox
25 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
showpage
end
%%EOF
