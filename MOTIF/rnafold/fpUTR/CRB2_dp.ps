%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRB2)
} def

/sequence { (\
AUUAGUGCUGGUUGGAGGGACGAGGGGGGUGCGGAGCCAGCCAGGCCGCCCUCCCGUUCUCACAGCAGCCGAGCAGAGCGCAGAGCGGGCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.004855153 ubox
2 11 0.005385943 ubox
2 72 0.164116272 ubox
2 73 0.007180236 ubox
2 77 0.011605569 ubox
2 78 0.013361273 ubox
3 10 0.006320701 ubox
3 71 0.174729033 ubox
3 72 0.078305947 ubox
3 76 0.011726772 ubox
3 77 0.016659533 ubox
3 92 0.004247030 ubox
4 9 0.006031535 ubox
4 91 0.004698142 ubox
5 63 0.006023365 ubox
5 69 0.043795195 ubox
5 74 0.017746366 ubox
5 79 0.017281434 ubox
5 81 0.004435559 ubox
5 90 0.004731500 ubox
5 93 0.004862895 ubox
6 62 0.006027328 ubox
6 67 0.067837923 ubox
6 68 0.026346878 ubox
6 71 0.130403015 ubox
6 73 0.017729349 ubox
6 75 0.078895775 ubox
6 78 0.014610428 ubox
6 80 0.004434708 ubox
6 89 0.004242854 ubox
6 92 0.004376358 ubox
7 61 0.005973722 ubox
7 66 0.077288009 ubox
7 69 0.975127852 ubox
7 70 0.122831440 ubox
7 74 0.088528280 ubox
7 79 0.005581155 ubox
8 65 0.077344076 ubox
8 68 0.985438363 ubox
8 73 0.088663265 ubox
8 76 0.007243117 ubox
8 78 0.005568598 ubox
9 64 0.076899731 ubox
9 67 0.966001580 ubox
9 71 0.092294405 ubox
9 72 0.077096768 ubox
9 75 0.007315919 ubox
9 77 0.004991656 ubox
10 63 0.074435223 ubox
10 66 0.708611509 ubox
10 70 0.134057916 ubox
10 74 0.007284582 ubox
11 63 0.019625043 ubox
11 66 0.687117795 ubox
11 69 0.133879255 ubox
12 62 0.022635908 ubox
12 65 0.950178532 ubox
12 68 0.133303974 ubox
12 72 0.006601625 ubox
13 62 0.039582739 ubox
13 64 0.982494041 ubox
13 67 0.128521772 ubox
13 71 0.006600275 ubox
14 59 0.045529363 ubox
14 60 0.010663257 ubox
14 61 0.041578400 ubox
14 63 0.984247623 ubox
14 66 0.127607128 ubox
14 70 0.006605223 ubox
15 58 0.045618745 ubox
15 59 0.011195821 ubox
15 60 0.020436518 ubox
15 61 0.415512641 ubox
15 69 0.006558344 ubox
16 57 0.045607277 ubox
16 58 0.010390793 ubox
16 60 0.402657248 ubox
17 55 0.007349548 ubox
17 57 0.007860445 ubox
17 59 0.340736444 ubox
17 60 0.899551862 ubox
17 61 0.134961504 ubox
18 54 0.007370009 ubox
18 55 0.046087032 ubox
18 58 0.260894688 ubox
18 59 0.931382213 ubox
18 60 0.116033459 ubox
18 61 0.007970540 ubox
19 53 0.006744059 ubox
19 54 0.045856744 ubox
19 57 0.145042341 ubox
19 58 0.955219625 ubox
19 59 0.116136575 ubox
19 60 0.004011838 ubox
19 61 0.012950662 ubox
20 52 0.005284063 ubox
20 57 0.982434737 ubox
20 58 0.094866453 ubox
20 60 0.012780152 ubox
21 56 0.995173609 ubox
22 53 0.065835757 ubox
22 55 0.977921387 ubox
22 58 0.011274063 ubox
22 59 0.006325194 ubox
23 52 0.072691033 ubox
23 57 0.013738701 ubox
23 58 0.005995813 ubox
24 51 0.073898714 ubox
24 52 0.004281366 ubox
24 53 0.013636500 ubox
24 54 0.974046197 ubox
24 55 0.193807084 ubox
25 50 0.073901405 ubox
25 51 0.006419002 ubox
25 52 0.012309623 ubox
25 53 0.973820155 ubox
25 54 0.212196987 ubox
25 55 0.013714520 ubox
26 49 0.073890282 ubox
26 50 0.006469499 ubox
26 51 0.012846929 ubox
26 52 0.972885013 ubox
26 53 0.213836319 ubox
26 54 0.014429429 ubox
27 49 0.006488290 ubox
27 50 0.012212303 ubox
27 51 0.973285701 ubox
27 52 0.214726867 ubox
27 53 0.014436394 ubox
28 47 0.074186892 ubox
28 49 0.010097496 ubox
28 50 0.972942111 ubox
28 51 0.216467039 ubox
28 52 0.012596546 ubox
29 46 0.074213815 ubox
29 49 0.969254670 ubox
29 50 0.217876795 ubox
29 51 0.012638576 ubox
30 45 0.074052766 ubox
30 48 0.965374665 ubox
31 41 0.017264045 ubox
31 46 0.105660679 ubox
31 47 0.954117868 ubox
31 49 0.234189763 ubox
32 40 0.017624953 ubox
32 45 0.148052217 ubox
32 48 0.246954208 ubox
33 42 0.158180853 ubox
33 47 0.250855918 ubox
34 41 0.158364602 ubox
34 46 0.173826212 ubox
36 46 0.968147029 ubox
37 45 0.983079997 ubox
38 44 0.982607147 ubox
40 46 0.010298614 ubox
41 45 0.010298266 ubox
65 93 0.036830587 ubox
66 92 0.037041136 ubox
67 91 0.037600463 ubox
68 74 0.003450021 ubox
68 90 0.037724309 ubox
68 93 0.004736202 ubox
69 73 0.003441536 ubox
69 89 0.037629552 ubox
69 92 0.004667289 ubox
70 87 0.003891485 ubox
70 88 0.037489620 ubox
70 92 0.010853595 ubox
71 86 0.004595072 ubox
71 91 0.005489387 ubox
72 91 0.039542939 ubox
73 79 0.015225346 ubox
73 81 0.009290193 ubox
73 86 0.034191817 ubox
73 90 0.040976514 ubox
73 93 0.991477833 ubox
74 78 0.015150079 ubox
74 80 0.009308428 ubox
74 85 0.034184231 ubox
74 89 0.040949044 ubox
74 92 0.993845748 ubox
75 91 0.993624690 ubox
76 90 0.993078598 ubox
77 91 0.015130768 ubox
78 86 0.102855399 ubox
78 90 0.016532657 ubox
78 93 0.009475552 ubox
79 85 0.102992640 ubox
79 87 0.988524727 ubox
79 89 0.016410195 ubox
79 92 0.009475866 ubox
80 86 0.989409455 ubox
80 90 0.009475564 ubox
80 93 0.091222840 ubox
81 85 0.982227708 ubox
81 89 0.009699192 ubox
81 92 0.091407890 ubox
82 91 0.091379684 ubox
83 90 0.091051873 ubox
85 93 0.004689301 ubox
86 92 0.004698643 ubox
87 94 0.008697342 ubox
88 93 0.008848375 ubox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
12 65 0.9500000 lbox
13 64 0.9500000 lbox
14 63 0.9500000 lbox
17 60 0.9500000 lbox
18 59 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
21 56 0.9500000 lbox
22 55 0.9500000 lbox
24 54 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
73 93 0.9500000 lbox
74 92 0.9500000 lbox
75 91 0.9500000 lbox
76 90 0.9500000 lbox
79 87 0.9500000 lbox
80 86 0.9500000 lbox
81 85 0.9500000 lbox
showpage
end
%%EOF
