%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C10orf128)
} def

/sequence { (\
CAGAGCCUUGGGUCACAUGGCUCAUUGUGCCUGCGCUGCCAGCAGCCAGGAGCCAGGAGCCAAGAGCAGAGCGCCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 14 0.005688032 ubox
3 23 0.017547824 ubox
4 13 0.005008406 ubox
4 22 0.017568006 ubox
5 13 0.006719864 ubox
5 21 0.017573570 ubox
5 67 0.984527031 ubox
5 72 0.043607756 ubox
5 74 0.102792753 ubox
5 78 0.017736034 ubox
6 12 0.008246431 ubox
6 20 0.017573654 ubox
6 66 0.985454452 ubox
6 71 0.042564907 ubox
6 73 0.103016984 ubox
6 77 0.017772740 ubox
7 11 0.008193257 ubox
7 19 0.017534129 ubox
7 64 0.993414623 ubox
7 66 0.003671106 ubox
7 69 0.015207860 ubox
7 71 0.101414013 ubox
7 77 0.003410605 ubox
8 63 0.993195660 ubox
8 64 0.005760133 ubox
8 65 0.004135328 ubox
8 68 0.012544247 ubox
8 69 0.030369524 ubox
8 70 0.101352185 ubox
8 71 0.006074573 ubox
8 77 0.009091476 ubox
9 17 0.017439303 ubox
9 62 0.993243219 ubox
9 63 0.004615637 ubox
9 68 0.035256118 ubox
9 69 0.099856094 ubox
9 70 0.006422408 ubox
9 76 0.013265532 ubox
10 16 0.017809542 ubox
10 61 0.993690344 ubox
10 67 0.037331930 ubox
10 75 0.014041360 ubox
11 60 0.993383813 ubox
11 61 0.016714415 ubox
11 74 0.013998148 ubox
12 60 0.022441895 ubox
12 67 0.036114305 ubox
12 72 0.012085770 ubox
12 74 0.003217145 ubox
13 57 0.018051034 ubox
13 58 0.988477393 ubox
13 59 0.025590970 ubox
13 65 0.101481919 ubox
13 66 0.031121321 ubox
13 70 0.008030919 ubox
13 71 0.009305475 ubox
14 56 0.031160176 ubox
14 57 0.986980019 ubox
14 64 0.102492031 ubox
14 69 0.009231575 ubox
18 55 0.953294239 ubox
18 62 0.107719534 ubox
19 54 0.993714427 ubox
19 61 0.109371177 ubox
20 53 0.993835192 ubox
20 60 0.109383332 ubox
21 52 0.993824787 ubox
21 59 0.109388287 ubox
22 50 0.004113750 ubox
22 51 0.993083909 ubox
22 58 0.109364722 ubox
23 29 0.016913848 ubox
23 49 0.008979991 ubox
23 50 0.973162692 ubox
23 57 0.109278330 ubox
24 28 0.014196273 ubox
25 49 0.849080204 ubox
25 50 0.003624286 ubox
25 51 0.013603945 ubox
25 56 0.044167408 ubox
25 77 0.004533270 ubox
26 48 0.956281127 ubox
26 49 0.018924374 ubox
26 50 0.021128350 ubox
26 51 0.003860503 ubox
26 55 0.049423477 ubox
26 76 0.005881236 ubox
27 34 0.003832072 ubox
27 46 0.037344162 ubox
27 47 0.958949599 ubox
27 53 0.097805048 ubox
27 54 0.040146950 ubox
27 74 0.014157608 ubox
27 75 0.004340104 ubox
28 33 0.003687933 ubox
28 44 0.053280705 ubox
28 45 0.028874915 ubox
28 48 0.061618591 ubox
28 52 0.097279738 ubox
28 73 0.014816641 ubox
29 43 0.056931961 ubox
29 46 0.936864319 ubox
29 47 0.069469903 ubox
29 53 0.019952371 ubox
29 72 0.014869815 ubox
30 42 0.052410915 ubox
30 45 0.665544561 ubox
30 50 0.218933157 ubox
30 52 0.015756845 ubox
30 71 0.014863590 ubox
31 42 0.058555742 ubox
31 45 0.696611284 ubox
31 49 0.258171035 ubox
31 50 0.008404629 ubox
31 69 0.014858966 ubox
32 41 0.063032822 ubox
32 44 0.959161963 ubox
32 48 0.258272252 ubox
32 49 0.007466441 ubox
32 68 0.014859421 ubox
33 39 0.052370005 ubox
33 40 0.058631738 ubox
33 43 0.962036900 ubox
33 46 0.011219426 ubox
33 47 0.258238729 ubox
33 67 0.014862089 ubox
34 38 0.056570989 ubox
34 42 0.961886798 ubox
34 45 0.012669294 ubox
34 66 0.014848915 ubox
35 43 0.028965113 ubox
35 46 0.258974563 ubox
35 53 0.003533410 ubox
35 60 0.011635468 ubox
36 42 0.029727411 ubox
36 45 0.259003216 ubox
36 52 0.003534161 ubox
36 59 0.011639129 ubox
36 64 0.007989112 ubox
37 41 0.029004457 ubox
37 44 0.258809100 ubox
37 51 0.003520587 ubox
37 58 0.011592156 ubox
37 63 0.007655444 ubox
38 43 0.257267651 ubox
39 50 0.003561532 ubox
39 57 0.011466907 ubox
40 49 0.003567172 ubox
40 56 0.011476505 ubox
42 53 0.011465245 ubox
42 60 0.007125667 ubox
43 52 0.011477161 ubox
43 59 0.007127886 ubox
45 53 0.004047056 ubox
46 52 0.004046729 ubox
46 57 0.007246649 ubox
47 56 0.007265388 ubox
56 75 0.008389313 ubox
57 74 0.008384893 ubox
59 72 0.008390679 ubox
60 71 0.008393002 ubox
66 72 0.039720675 ubox
66 74 0.069464547 ubox
66 78 0.020177781 ubox
67 71 0.039491252 ubox
67 73 0.069622138 ubox
67 77 0.020374687 ubox
71 78 0.775157596 ubox
72 77 0.781529949 ubox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 64 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
13 58 0.9500000 lbox
14 57 0.9500000 lbox
18 55 0.9500000 lbox
19 54 0.9500000 lbox
20 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
71 78 0.9500000 lbox
72 77 0.9500000 lbox
showpage
end
%%EOF
