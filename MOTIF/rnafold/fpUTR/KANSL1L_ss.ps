%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGGGCAGCGGGCGGACUGUUAAACCGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCGGCCGGGGCGGGAGCGGGGCGCGCUCUGGAGACGAGUCAGCGGCGCCCCGGGUGGGGGAGGCGGGCGGGCAGCUAGAGAUCACCUCAGCAGCCCCCACCACGGCCGGACCGAAGGUGCGGCGGCGGAGGGGAGCCAGGGCGCCCCAGCAGGUUUCCAAUACUUAUCUACAGGAAUCGCC\
) } def
/len { sequence length } bind def

/coor [
[101.68800354 271.16632080]
[99.08328247 285.93844604]
[96.47856140 300.71057129]
[93.87384033 315.48266602]
[101.86088562 329.39620972]
[95.82893372 344.26211548]
[80.40516663 348.67654419]
[67.42138672 339.25311279]
[66.83763885 323.22067261]
[79.10172272 312.87796021]
[81.70644379 298.10583496]
[84.31116486 283.33374023]
[86.91589355 268.56161499]
[89.33625793 253.75816345]
[91.57189178 238.92570496]
[93.80752563 224.09324646]
[96.04315948 209.26078796]
[87.70008087 191.80033875]
[100.57514954 176.26690674]
[102.44030762 161.38331604]
[104.30546570 146.49972534]
[106.17061615 131.61613464]
[100.57830048 126.61854553]
[90.58291626 137.80300903]
[79.39861298 127.80744171]
[89.39366913 116.62334442]
[83.80135345 111.62574768]
[69.22018433 115.14560699]
[57.62094879 125.90518188]
[43.43343353 121.37046814]
[28.85226059 124.89032745]
[14.27108860 128.41018677]
[-0.31008393 131.93005371]
[-11.90931511 142.68962097]
[-26.09683228 138.15490723]
[-40.67800522 141.67477417]
[-52.27723694 152.43434143]
[-66.46475220 147.89962769]
[-81.04592896 151.41949463]
[-92.64515686 162.17906189]
[-106.83267212 157.64434814]
[-121.41384888 161.16421509]
[-133.01307678 171.92378235]
[-147.20059204 167.38908386]
[-161.78176880 170.90893555]
[-173.38099670 181.66851807]
[-187.56851196 177.13380432]
[-202.14968872 180.65365601]
[-213.74891663 191.41323853]
[-227.93643188 186.87852478]
[-242.51760864 190.39837646]
[-254.01962280 202.08750916]
[-269.82363892 197.70965576]
[-273.67181396 181.76840210]
[-261.60549927 170.66273499]
[-246.03747559 175.81721497]
[-231.45629883 172.29734802]
[-220.90000916 161.78953552]
[-205.66955566 166.07249451]
[-191.08837891 162.55262756]
[-180.53208923 152.04481506]
[-165.30162048 156.32777405]
[-150.72045898 152.80790710]
[-140.16416931 142.30009460]
[-124.93370819 146.58303833]
[-110.35253143 143.06318665]
[-99.79624939 132.55537415]
[-84.56578827 136.83831787]
[-69.98461151 133.31846619]
[-59.42832565 122.81065369]
[-44.19786453 127.09359741]
[-29.61669350 123.57373810]
[-19.06040573 113.06593323]
[-3.82994485 117.34887695]
[10.75122738 113.82901764]
[25.33239937 110.30915833]
[39.91357040 106.78929138]
[50.46986008 96.28148651]
[65.70031738 100.56443024]
[80.28149414 97.04457092]
[81.99594116 89.74315643]
[85.42485046 75.14032745]
[87.13929749 67.83891296]
[75.64863586 58.19710159]
[64.15796661 48.55528641]
[52.66730118 38.91347122]
[41.17663193 29.27165794]
[29.68596649 19.62984467]
[13.64296341 19.59006119]
[3.78469348 6.93328190]
[7.67357922 -8.63129711]
[22.32639885 -15.16386223]
[36.50276566 -7.65318918]
[39.32778168 8.13917732]
[50.81844711 17.78099060]
[62.30911255 27.42280579]
[73.79978180 37.06462097]
[85.29045105 46.70643234]
[96.78111267 56.34824753]
[111.77062225 56.90911484]
[123.94969177 48.15296173]
[136.12876892 39.39680481]
[148.30783081 30.64064980]
[160.48690796 21.88449478]
[172.66596985 13.12834072]
[175.34574890 -2.21625233]
[187.82179260 -10.92274284]
[202.43400574 -8.27341843]
[214.61308289 -17.02957344]
[213.65444946 -30.76489449]
[219.55480957 -43.08549118]
[230.67959595 -50.82544708]
[244.06755066 -52.05455017]
[256.21856689 -46.55868149]
[268.50585938 -55.16233063]
[280.79312134 -63.76597595]
[293.08041382 -72.36962128]
[305.36767578 -80.97326660]
[317.65496826 -89.57691193]
[329.94226074 -98.18056488]
[340.14483643 -109.17633820]
[347.80621338 -122.07221222]
[355.38702393 -135.01559448]
[362.88702393 -148.00598145]
[370.38702393 -160.99635315]
[377.88702393 -173.98674011]
[385.38702393 -186.97711182]
[392.88702393 -199.96749878]
[400.38702393 -212.95788574]
[407.88702393 -225.94825745]
[404.01861572 -241.03710938]
[411.80975342 -254.10435486]
[426.21850586 -257.69931030]
[433.71850586 -270.68966675]
[423.03201294 -285.70861816]
[430.09161377 -309.07263184]
[435.57171631 -323.03573608]
[441.05181885 -336.99884033]
[435.98007202 -352.21911621]
[444.83804321 -365.59506226]
[460.83068848 -366.86578369]
[471.68981934 -355.05651855]
[469.08523560 -339.22628784]
[455.01492310 -331.51873779]
[449.53482056 -317.55563354]
[444.05471802 -303.59252930]
[450.54989624 -299.84252930]
[470.03546143 -288.59252930]
[479.38781738 -300.31997681]
[488.74017334 -312.04745483]
[488.37997437 -328.08645630]
[500.78704834 -338.25720215]
[516.44372559 -334.75756836]
[523.33959961 -320.27218628]
[516.18463135 -305.91296387]
[500.46762085 -302.69509888]
[491.11529541 -290.96765137]
[481.76293945 -279.24017334]
[465.05892944 -261.44436646]
[446.70889282 -263.18966675]
[439.20889282 -250.19929504]
[443.29995728 -235.92349243]
[435.87893677 -222.64254761]
[420.87741089 -218.44825745]
[413.37741089 -205.45788574]
[405.87741089 -192.46749878]
[398.37741089 -179.47711182]
[390.87741089 -166.48674011]
[383.37741089 -153.49635315]
[375.87741089 -140.50598145]
[368.37741089 -127.51559448]
[367.75643921 -120.17105865]
[360.70208740 -114.41085815]
[353.04071045 -101.51497650]
[361.25729370 -88.96556091]
[376.14086914 -90.83071899]
[391.02447510 -92.69587708]
[405.90805054 -94.56102753]
[418.63903809 -103.95424652]
[432.22961426 -97.85955048]
[447.11322021 -99.72470856]
[461.99679565 -101.58985901]
[476.96118164 -109.55877686]
[488.76123047 -97.38521576]
[480.32998657 -82.67635345]
[463.86196899 -86.70627594]
[448.97836304 -84.84111786]
[434.09478760 -82.97595978]
[422.42837524 -73.71615601]
[407.77322388 -79.67744446]
[392.88961792 -77.81228638]
[378.00604248 -75.94712830]
[363.12243652 -74.08197784]
[361.90829468 -59.13119507]
[376.29586792 -54.88890076]
[390.68347168 -50.64660263]
[402.89962769 -60.21451950]
[418.40777588 -60.74099731]
[431.24468994 -52.02360153]
[436.47433472 -37.41434097]
[432.08581543 -22.53078079]
[419.76657104 -13.09595108]
[404.25363159 -12.73773575]
[391.51202393 -21.59387589]
[386.44116211 -36.25900650]
[372.05358887 -40.50130463]
[357.66598511 -44.74359894]
[340.99124146 -64.20800781]
[338.54589844 -85.89328003]
[326.25860596 -77.28963470]
[313.97134399 -68.68598938]
[301.68405151 -60.08234024]
[289.39675903 -51.47869492]
[277.10949707 -42.87504959]
[264.82220459 -34.27140045]
[265.05606079 -17.84520912]
[255.34785461 -4.38714457]
[239.36949158 0.67345405]
[223.36923218 -4.85050344]
[211.19017029 3.90565181]
[209.04774475 18.60073853]
[196.82116699 27.65422058]
[181.42213440 25.30741119]
[169.24305725 34.06356430]
[157.06399536 42.81972122]
[144.88491821 51.57587433]
[132.70585632 60.33203125]
[120.52677917 69.08818817]
[133.83871460 62.17499542]
[148.75166321 60.56121063]
[163.23432922 64.46664429]
[175.31405640 73.35934448]
[183.34548950 86.02804565]
[186.23468018 100.74716949]
[183.58810425 115.51184082]
[175.76622009 128.31098938]
[163.83447266 137.40127563]
[149.41802979 141.54450989]
[134.48056030 140.17634583]
[121.05420685 133.48129272]
[119.18904877 148.36488342]
[117.32389832 163.24847412]
[115.45874023 178.13206482]
[122.59912109 186.29290771]
[124.05430603 196.81718445]
[119.58435822 206.21330261]
[110.87561798 211.49641418]
[108.63998413 226.32887268]
[106.40435028 241.16134644]
[104.16871643 255.99380493]
[106.21134186 262.23699951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[14 250]
[15 249]
[16 248]
[17 247]
[19 243]
[20 242]
[21 241]
[22 240]
[27 80]
[28 79]
[30 77]
[31 76]
[32 75]
[33 74]
[35 72]
[36 71]
[38 69]
[39 68]
[41 66]
[42 65]
[44 63]
[45 62]
[47 60]
[48 59]
[50 57]
[51 56]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[100 228]
[101 227]
[102 226]
[103 225]
[104 224]
[105 223]
[108 220]
[109 219]
[114 215]
[115 214]
[116 213]
[117 212]
[118 211]
[119 210]
[120 209]
[121 174]
[122 173]
[123 171]
[124 170]
[125 169]
[126 168]
[127 167]
[128 166]
[129 165]
[130 164]
[133 161]
[134 160]
[136 146]
[137 145]
[138 144]
[148 158]
[149 157]
[150 156]
[175 193]
[176 192]
[177 191]
[178 190]
[180 188]
[181 187]
[182 186]
[194 207]
[195 206]
[196 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
