%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGUCCCCGCCGCCGCUGCCCGCCGCCACCGGCCGCCCGCCCGCCCGGCUCCUCCGGCCGCCUCCGCUGCGCUGCGCUGCGCUGCCUGCACCCAGGGCUCGGGAGGGGGCCGCGGAGGAGUCGCCCCCCGCGCCCGGCCCCCGCCCGCCGCGCCCGGGCCCGCGCCAUGGGGCUCUGGCUGUCGCCGCCCCCCGCGCCGCCGGGCUAGGGCGAUGCGGGCGCCCCCGGCGGGCGGCCCCGGCGGGCACC\
) } def
/len { sequence length } bind def

/coor [
[90.29402161 487.65225220]
[76.05150604 480.26779175]
[73.08633423 464.50112915]
[83.67313385 452.44711304]
[84.04858398 437.45181274]
[76.63227081 424.53485107]
[84.71257019 410.93267822]
[85.08802032 395.93737793]
[85.46346283 380.94207764]
[85.83891296 365.94677734]
[86.21436310 350.95147705]
[86.58981323 335.95617676]
[86.96526337 320.96087646]
[76.54598999 310.37908936]
[76.71313477 295.16638184]
[87.88294220 284.30941772]
[88.25839233 269.31411743]
[88.63384247 254.31881714]
[89.00929260 239.32351685]
[89.38474274 224.32821655]
[89.76019287 209.33291626]
[90.13564301 194.33761597]
[90.51108551 179.34231567]
[90.88653564 164.34701538]
[91.26198578 149.35171509]
[91.63743591 134.35641479]
[82.36467743 130.64785767]
[74.49870300 124.49448395]
[68.66699982 116.38715363]
[65.33476257 106.97260284]
[64.76781464 97.00184631]
[67.01137543 87.27024841]
[54.48097229 79.02470398]
[41.95056534 70.77916718]
[29.42015839 62.53363037]
[16.88975334 54.28808975]
[1.60081637 57.26906204]
[-10.98933697 48.72841263]
[-13.73701572 34.13437653]
[-26.26742172 25.88883781]
[-38.79782867 17.64329720]
[-52.69788742 26.12377548]
[-68.84748840 27.68166924]
[-84.00309753 22.05516243]
[-95.14308929 10.42026234]
[-100.07014465 -4.85459375]
[-97.84458923 -20.69055748]
[-110.47721100 -28.77862167]
[-123.10984039 -36.86668396]
[-135.74246216 -44.95474625]
[-148.37509155 -53.04281235]
[-161.00772095 -61.13087463]
[-173.64033508 -69.21893311]
[-186.27296448 -77.30699921]
[-198.90559387 -85.39506531]
[-211.53822327 -93.48312378]
[-224.27108765 -101.41244507]
[-237.10220337 -109.18177795]
[-249.93330383 -116.95111847]
[-262.76443481 -124.72045135]
[-278.57678223 -125.24977875]
[-285.45620728 -138.46049500]
[-298.28732300 -146.22982788]
[-311.11840820 -153.99916077]
[-323.94952393 -161.76849365]
[-336.78063965 -169.53782654]
[-351.03164673 -163.68846130]
[-365.82147217 -167.30981445]
[-375.52819824 -178.80953979]
[-376.58941650 -193.64233398]
[-389.42053223 -201.41166687]
[-405.23287964 -201.94100952]
[-412.11230469 -215.15170288]
[-424.94342041 -222.92105103]
[-437.77453613 -230.69038391]
[-450.38198853 -225.99478149]
[-463.20675659 -229.36041260]
[-471.63287354 -239.34463501]
[-472.76107788 -252.16528320]
[-485.49392700 -260.09460449]
[-498.22680664 -268.02392578]
[-510.95968628 -275.95324707]
[-526.84869385 -273.73556519]
[-538.38958740 -284.87951660]
[-536.72912598 -300.83642578]
[-523.14111328 -309.36547852]
[-508.04907227 -303.92395020]
[-503.03036499 -288.68609619]
[-490.29748535 -280.75677490]
[-477.56460571 -272.82745361]
[-464.83175659 -264.89813232]
[-448.61517334 -269.39849854]
[-433.87744141 -260.59362793]
[-430.00518799 -243.52148438]
[-417.17407227 -235.75215149]
[-404.34295654 -227.98281860]
[-389.44839478 -228.00920105]
[-381.65118408 -214.24278259]
[-368.82006836 -206.47344971]
[-355.18453979 -212.40724182]
[-340.49581909 -209.13534546]
[-330.43258667 -197.70797729]
[-329.01132202 -182.36894226]
[-316.18020630 -174.59960938]
[-303.34909058 -166.83027649]
[-290.51797485 -159.06092834]
[-277.68685913 -151.29159546]
[-262.79226685 -151.31797791]
[-254.99508667 -137.55155945]
[-242.16397095 -129.78222656]
[-229.33285522 -122.01289368]
[-216.50175476 -114.24356079]
[-211.75552368 -114.48533630]
[-206.80252075 -111.76577759]
[-203.45014954 -106.11575317]
[-190.81753540 -98.02768707]
[-178.18490601 -89.93962860]
[-165.55227661 -81.85156250]
[-152.91964722 -73.76349640]
[-140.28703308 -65.67543793]
[-127.65440369 -57.58737183]
[-115.02177429 -49.49930954]
[-102.38914490 -41.41124725]
[-89.75652313 -33.32318497]
[-78.33219910 -41.17040253]
[-64.73795319 -44.08452225]
[-51.01575089 -41.59410477]
[-39.23963928 -34.04206467]
[-31.20226860 -22.53886604]
[-28.14201736 -8.79934788]
[-30.55228996 5.11289167]
[-18.02188301 13.35843086]
[-5.49147701 21.60396957]
[8.99880981 18.35324860]
[21.82388496 26.53689766]
[25.13529205 41.75768280]
[37.66569901 50.00322342]
[50.19610596 58.24876022]
[62.72650909 66.49430084]
[75.25691986 74.73983765]
[96.03644562 64.86331940]
[118.49401855 69.86252594]
[133.12182617 87.62095642]
[147.96670532 85.46934509]
[162.81158447 83.31772614]
[177.65647888 81.16611481]
[192.50135803 79.01449585]
[207.34623718 76.86288452]
[222.19111633 74.71126556]
[231.64639282 62.33243179]
[246.73185730 60.36185837]
[258.47491455 69.45230103]
[273.31979370 67.30068207]
[288.16470337 65.14907074]
[303.00958252 62.99745178]
[317.85446167 60.84583664]
[330.40206909 51.20904160]
[344.10757446 57.04071426]
[358.95245361 54.88909912]
[373.79733276 52.73748398]
[388.64221191 50.58586884]
[403.48712158 48.43425369]
[418.27349854 45.91174698]
[432.99209595 43.01992416]
[447.71069336 40.12810516]
[462.42929077 37.23628235]
[468.59173584 25.27714157]
[480.34127808 19.13302040]
[493.29333496 20.84434891]
[502.75787354 29.56583023]
[517.51153564 26.85845375]
[532.26519775 24.15107727]
[547.01879883 21.44370079]
[561.77246094 18.73632431]
[565.70904541 15.38735390]
[570.09649658 14.00398064]
[574.11688232 14.43149376]
[577.13012695 16.21516418]
[591.97497559 14.06354809]
[606.81988525 11.91193295]
[619.35693359 1.34057879]
[634.68652344 7.16606045]
[637.03881836 23.39562225]
[623.99401855 33.33368301]
[608.97149658 26.75681686]
[594.12658691 28.90843201]
[579.28173828 31.06004715]
[564.47985840 33.48997116]
[549.72619629 36.19734955]
[534.97253418 38.90472412]
[520.21893311 41.61210251]
[505.46527100 44.31947708]
[496.50244141 58.56373596]
[479.67678833 61.97320938]
[465.32113647 51.95488739]
[450.60250854 54.84671021]
[435.88391113 57.73853302]
[421.16531372 60.63035202]
[419.49548340 62.85137558]
[416.85659790 64.55361938]
[413.43875122 65.36885834]
[409.56027222 65.00322723]
[405.63873291 63.27913666]
[390.79385376 65.43075562]
[375.94894409 67.58236694]
[361.10406494 69.73398590]
[346.25918579 71.88559723]
[334.77337646 81.36849976]
[320.00607300 75.69071960]
[305.16119385 77.84233856]
[290.31631470 79.99394989]
[275.47143555 82.14556885]
[260.62652588 84.29718018]
[251.94763184 96.34757996]
[236.92346191 98.74109650]
[224.34274292 89.55615234]
[209.49784851 91.70776367]
[194.65296936 93.85938263]
[179.80809021 96.01099396]
[164.96321106 98.16261292]
[150.11831665 100.31422424]
[135.27343750 102.46584320]
[133.42568970 111.53337860]
[129.28857422 119.81098175]
[123.14545441 126.73170471]
[115.41706085 131.82153320]
[106.63273621 134.73187256]
[106.25728607 149.72717285]
[105.88183594 164.72247314]
[105.50639343 179.71777344]
[105.13094330 194.71307373]
[104.75549316 209.70837402]
[104.38004303 224.70367432]
[104.00459290 239.69897461]
[103.62914276 254.69427490]
[103.25369263 269.68957520]
[102.87824249 284.68487549]
[113.49071503 296.08718872]
[112.89634705 311.28921509]
[101.96056366 321.33633423]
[101.58511353 336.33163452]
[101.20966339 351.32693481]
[100.83421326 366.32223511]
[100.45877075 381.31753540]
[100.08332062 396.31283569]
[99.70787048 411.30813599]
[107.09732819 425.29763794]
[99.04388428 437.82727051]
[98.66843414 452.82257080]
[108.63873291 465.39129639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 249]
[5 248]
[7 246]
[8 245]
[9 244]
[10 243]
[11 242]
[12 241]
[13 240]
[16 237]
[17 236]
[18 235]
[19 234]
[20 233]
[21 232]
[22 231]
[23 230]
[24 229]
[25 228]
[26 227]
[32 140]
[33 139]
[34 138]
[35 137]
[36 136]
[39 133]
[40 132]
[41 131]
[47 124]
[48 123]
[49 122]
[50 121]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
[56 115]
[57 112]
[58 111]
[59 110]
[60 109]
[62 107]
[63 106]
[64 105]
[65 104]
[66 103]
[70 99]
[71 98]
[73 96]
[74 95]
[75 94]
[79 91]
[80 90]
[81 89]
[82 88]
[143 222]
[144 221]
[145 220]
[146 219]
[147 218]
[148 217]
[149 216]
[152 213]
[153 212]
[154 211]
[155 210]
[156 209]
[158 207]
[159 206]
[160 205]
[161 204]
[162 203]
[163 198]
[164 197]
[165 196]
[166 195]
[170 192]
[171 191]
[172 190]
[173 189]
[174 188]
[178 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
