%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM35B)
} def

/sequence { (\
GGGUUUUCGGCGGGGCCAACCCACGGUGGGGGGAGCGCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.009983655 ubox
1 8 0.191205201 ubox
1 17 0.012194467 ubox
1 22 0.224165021 ubox
1 42 0.113123455 ubox
2 6 0.010313332 ubox
2 7 0.151019466 ubox
2 8 0.111896786 ubox
2 16 0.011950964 ubox
2 17 0.042118110 ubox
2 21 0.224341241 ubox
2 41 0.111943414 ubox
2 42 0.514669574 ubox
3 7 0.072911192 ubox
3 11 0.024861438 ubox
3 16 0.042246032 ubox
3 20 0.224339979 ubox
3 36 0.231126671 ubox
3 38 0.037921236 ubox
3 41 0.521114547 ubox
4 10 0.024622849 ubox
4 14 0.010819562 ubox
4 15 0.041989644 ubox
4 19 0.222704313 ubox
4 29 0.003591207 ubox
4 30 0.003302472 ubox
4 31 0.006326463 ubox
4 32 0.106103221 ubox
4 33 0.025604266 ubox
4 34 0.019665692 ubox
4 35 0.230306722 ubox
4 37 0.036776127 ubox
4 40 0.508199896 ubox
5 9 0.018565822 ubox
5 13 0.010549523 ubox
5 14 0.040293887 ubox
5 15 0.004388057 ubox
5 18 0.214052112 ubox
5 19 0.016023720 ubox
5 28 0.004589467 ubox
5 29 0.003179931 ubox
5 30 0.007807344 ubox
5 31 0.155975494 ubox
5 32 0.038482221 ubox
5 33 0.022056368 ubox
5 34 0.224331925 ubox
5 35 0.017215569 ubox
5 39 0.438131898 ubox
5 40 0.034415090 ubox
6 12 0.009287761 ubox
6 13 0.037096180 ubox
6 14 0.006682948 ubox
6 15 0.029348830 ubox
6 18 0.019203743 ubox
6 19 0.013489354 ubox
6 29 0.006366421 ubox
6 30 0.189476051 ubox
6 31 0.046162467 ubox
6 32 0.023586273 ubox
6 33 0.216751601 ubox
6 34 0.021789269 ubox
6 35 0.026267368 ubox
6 39 0.041747433 ubox
6 40 0.020364870 ubox
7 12 0.028313613 ubox
7 13 0.008303052 ubox
7 14 0.036477050 ubox
7 15 0.018478190 ubox
7 18 0.028366405 ubox
7 26 0.011819857 ubox
7 29 0.220712822 ubox
7 30 0.056452517 ubox
7 31 0.022295559 ubox
7 32 0.189214320 ubox
7 33 0.022104988 ubox
7 34 0.027653261 ubox
7 39 0.034005806 ubox
7 40 0.186066772 ubox
8 12 0.009038524 ubox
8 13 0.039764401 ubox
8 14 0.020546093 ubox
8 25 0.027798970 ubox
8 28 0.235092107 ubox
8 29 0.061516090 ubox
8 30 0.022461013 ubox
8 31 0.176449011 ubox
8 32 0.021900015 ubox
8 33 0.027554593 ubox
8 37 0.042594566 ubox
8 39 0.306235489 ubox
9 17 0.258991608 ubox
9 24 0.028224830 ubox
9 27 0.244952941 ubox
9 36 0.036078188 ubox
9 38 0.246499605 ubox
9 42 0.678523042 ubox
10 16 0.259199544 ubox
10 27 0.064952667 ubox
10 36 0.175888548 ubox
10 38 0.558695937 ubox
10 41 0.683443543 ubox
11 15 0.257315185 ubox
11 25 0.267461515 ubox
11 26 0.055202246 ubox
11 28 0.008722245 ubox
11 35 0.177287010 ubox
11 37 0.589867951 ubox
11 39 0.130725914 ubox
11 40 0.671558439 ubox
12 21 0.004902559 ubox
12 22 0.061503229 ubox
12 24 0.268360595 ubox
12 27 0.005856611 ubox
12 36 0.586966971 ubox
12 38 0.181296279 ubox
12 42 0.009212362 ubox
13 20 0.004961526 ubox
13 21 0.062123603 ubox
13 22 0.270376263 ubox
13 41 0.009253559 ubox
13 42 0.004500865 ubox
14 20 0.062153348 ubox
14 21 0.270603039 ubox
14 22 0.012646637 ubox
14 41 0.003748467 ubox
14 42 0.057282695 ubox
15 20 0.268930775 ubox
15 21 0.012758492 ubox
15 27 0.006421402 ubox
15 36 0.655169256 ubox
15 38 0.048136135 ubox
15 41 0.058104140 ubox
16 26 0.006470799 ubox
16 29 0.052721722 ubox
16 30 0.102564141 ubox
16 31 0.062899849 ubox
16 32 0.453792344 ubox
16 33 0.434682236 ubox
16 35 0.651623151 ubox
16 37 0.047913283 ubox
16 40 0.058162119 ubox
17 25 0.006468229 ubox
17 28 0.052891114 ubox
17 29 0.102327251 ubox
17 30 0.060939886 ubox
17 31 0.451483615 ubox
17 32 0.440348903 ubox
17 39 0.058061437 ubox
18 27 0.038179163 ubox
19 27 0.122314739 ubox
20 26 0.134081264 ubox
20 29 0.122787414 ubox
20 30 0.737821042 ubox
20 31 0.472612332 ubox
20 32 0.210059848 ubox
20 33 0.154879887 ubox
21 25 0.133116731 ubox
21 28 0.121769148 ubox
21 29 0.740284337 ubox
21 30 0.472315027 ubox
21 31 0.209573610 ubox
21 32 0.154901076 ubox
21 40 0.004998771 ubox
22 28 0.740912416 ubox
22 29 0.471052286 ubox
22 30 0.208886177 ubox
22 31 0.154786269 ubox
22 39 0.005366799 ubox
23 27 0.601114081 ubox
24 37 0.022765442 ubox
24 39 0.118185467 ubox
25 36 0.022769618 ubox
25 38 0.106611101 ubox
25 42 0.073146491 ubox
26 36 0.088572811 ubox
26 38 0.173317733 ubox
26 41 0.073557439 ubox
27 35 0.088196508 ubox
27 37 0.181282028 ubox
27 39 0.027621271 ubox
27 40 0.067730642 ubox
28 36 0.182805163 ubox
28 38 0.039057354 ubox
28 42 0.016971922 ubox
29 41 0.017189751 ubox
29 42 0.020848062 ubox
30 41 0.021184509 ubox
30 42 0.027863335 ubox
31 41 0.028365416 ubox
31 42 0.080814497 ubox
32 41 0.082622760 ubox
32 42 0.036216021 ubox
33 41 0.036833592 ubox
35 41 0.067274688 ubox
36 40 0.067002606 ubox
9 42 0.9500000 lbox
10 41 0.9500000 lbox
11 40 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
showpage
end
%%EOF
