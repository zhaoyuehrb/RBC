%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:15:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DMRTC1B)
} def

/sequence { (\
AGAACGCCUCAGGGUCUUGCCUGCUGUGAGUGCCUUGAAGAGGGAGCAGCGGGCACGAUCAAAGAGACACCUGGCUCAAGGACCAAUAAGGAGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.048874473 ubox
1 72 0.019072560 ubox
1 76 0.012763055 ubox
2 8 0.058379120 ubox
2 10 0.026905424 ubox
2 71 0.021963481 ubox
2 75 0.013977172 ubox
2 77 0.261716985 ubox
3 9 0.026869590 ubox
3 76 0.249704895 ubox
4 94 0.366743489 ubox
5 73 0.006901043 ubox
5 93 0.404987501 ubox
6 15 0.009907179 ubox
6 72 0.006027063 ubox
6 75 0.542567455 ubox
6 94 0.047198222 ubox
7 13 0.005939538 ubox
7 14 0.011347180 ubox
7 74 0.537033686 ubox
7 81 0.298469927 ubox
7 91 0.442802079 ubox
7 93 0.049215168 ubox
8 12 0.006594695 ubox
8 13 0.011457176 ubox
8 64 0.040624569 ubox
8 66 0.463734642 ubox
8 73 0.474973249 ubox
8 74 0.099885031 ubox
8 80 0.299407273 ubox
8 81 0.017668010 ubox
8 90 0.443225824 ubox
8 91 0.018857905 ubox
8 93 0.070231646 ubox
9 63 0.038340031 ubox
9 65 0.466273393 ubox
9 67 0.023083666 ubox
9 73 0.019507453 ubox
9 74 0.281519006 ubox
9 79 0.254269677 ubox
9 80 0.015041507 ubox
9 82 0.003825728 ubox
9 89 0.421786723 ubox
9 90 0.017123875 ubox
9 91 0.008765724 ubox
9 92 0.071195001 ubox
10 64 0.464934092 ubox
10 66 0.025427887 ubox
10 73 0.608353639 ubox
10 80 0.003203995 ubox
10 81 0.004287505 ubox
10 90 0.010657642 ubox
10 91 0.070342402 ubox
11 72 0.752277057 ubox
12 60 0.029337290 ubox
12 71 0.774952955 ubox
12 72 0.013060533 ubox
12 77 0.006480031 ubox
12 84 0.030783905 ubox
13 59 0.021096089 ubox
13 60 0.490956902 ubox
13 70 0.774179777 ubox
13 71 0.013399623 ubox
13 76 0.006442144 ubox
13 83 0.028064198 ubox
13 84 0.390273356 ubox
14 59 0.496262799 ubox
14 68 0.773151306 ubox
14 70 0.012933659 ubox
14 75 0.006450563 ubox
14 83 0.390448950 ubox
15 58 0.497583196 ubox
15 65 0.012036953 ubox
15 67 0.774049883 ubox
15 69 0.009057855 ubox
15 74 0.006375101 ubox
15 81 0.011725707 ubox
15 82 0.389968358 ubox
16 57 0.497018943 ubox
16 64 0.015561684 ubox
16 66 0.774087690 ubox
16 73 0.006246601 ubox
16 80 0.022241305 ubox
16 81 0.388906341 ubox
17 58 0.013196779 ubox
17 62 0.009169902 ubox
17 63 0.018608564 ubox
17 64 0.032972665 ubox
17 65 0.769067189 ubox
17 79 0.027683948 ubox
17 80 0.376945752 ubox
18 55 0.822016119 ubox
18 57 0.013026710 ubox
18 61 0.010001128 ubox
18 62 0.013143465 ubox
18 63 0.021762411 ubox
18 64 0.472225182 ubox
18 65 0.007055741 ubox
18 78 0.022314786 ubox
18 79 0.271437867 ubox
18 80 0.004735377 ubox
19 54 0.999759764 ubox
19 56 0.005606887 ubox
19 60 0.005642096 ubox
20 53 0.999991566 ubox
21 52 0.999986261 ubox
22 51 0.999237873 ubox
23 50 0.999968260 ubox
24 49 0.999989003 ubox
25 48 0.999653458 ubox
26 47 0.998242712 ubox
27 46 0.989719144 ubox
27 48 0.010234374 ubox
28 36 0.006771663 ubox
28 47 0.014900237 ubox
29 35 0.006819800 ubox
30 34 0.006692343 ubox
30 47 0.055744249 ubox
31 46 0.065440935 ubox
31 48 0.003399933 ubox
32 47 0.004822560 ubox
33 43 0.950733468 ubox
33 44 0.305496267 ubox
33 46 0.004940708 ubox
34 40 0.017849889 ubox
34 42 0.950972142 ubox
34 43 0.307417111 ubox
34 44 0.007607565 ubox
34 46 0.003489335 ubox
35 39 0.016567673 ubox
35 41 0.942389833 ubox
35 42 0.306214310 ubox
35 43 0.007636521 ubox
35 45 0.004111334 ubox
36 40 0.849224275 ubox
36 41 0.302883468 ubox
36 42 0.008748424 ubox
36 44 0.004080022 ubox
56 73 0.007976708 ubox
57 72 0.006655340 ubox
57 77 0.067241527 ubox
58 76 0.066595460 ubox
59 65 0.024288051 ubox
59 67 0.028836223 ubox
59 74 0.054073629 ubox
59 82 0.006606264 ubox
60 64 0.033421280 ubox
60 66 0.032961711 ubox
60 73 0.056819533 ubox
60 80 0.010972557 ubox
60 81 0.008973589 ubox
61 72 0.050414573 ubox
63 72 0.062197385 ubox
63 76 0.011965188 ubox
64 71 0.067335478 ubox
64 75 0.012644575 ubox
64 77 0.379961550 ubox
65 72 0.044418712 ubox
65 76 0.380348842 ubox
66 71 0.047778134 ubox
66 75 0.380119231 ubox
66 77 0.029668083 ubox
67 76 0.029233707 ubox
67 94 0.206616202 ubox
68 93 0.225484958 ubox
69 94 0.014583986 ubox
70 81 0.329264728 ubox
70 91 0.293794397 ubox
70 93 0.015295076 ubox
71 80 0.331296456 ubox
71 81 0.011945694 ubox
71 90 0.294656141 ubox
71 91 0.019410217 ubox
71 93 0.006523076 ubox
72 78 0.027518401 ubox
72 79 0.328369594 ubox
72 80 0.011786689 ubox
72 85 0.263319133 ubox
72 88 0.015075531 ubox
72 89 0.215821167 ubox
72 90 0.014066801 ubox
72 92 0.005461878 ubox
73 77 0.037126855 ubox
73 84 0.345099758 ubox
73 87 0.011351116 ubox
74 83 0.346972683 ubox
74 94 0.328669403 ubox
75 81 0.251047651 ubox
75 90 0.014015917 ubox
75 91 0.012560737 ubox
75 93 0.373508427 ubox
76 80 0.226347789 ubox
76 82 0.173487963 ubox
76 89 0.013740890 ubox
76 90 0.011487805 ubox
76 91 0.027171373 ubox
76 92 0.375970340 ubox
77 81 0.174492184 ubox
77 90 0.037963194 ubox
77 91 0.373337478 ubox
82 94 0.036512299 ubox
83 91 0.560539830 ubox
83 93 0.036646335 ubox
84 90 0.563547589 ubox
86 94 0.019762300 ubox
87 93 0.021011844 ubox
10 73 0.9500000 lbox
11 72 0.9500000 lbox
12 71 0.9500000 lbox
13 70 0.9500000 lbox
14 68 0.9500000 lbox
15 67 0.9500000 lbox
16 66 0.9500000 lbox
17 65 0.9500000 lbox
18 55 0.9500000 lbox
19 54 0.9500000 lbox
20 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
25 48 0.9500000 lbox
26 47 0.9500000 lbox
27 46 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
74 94 0.9500000 lbox
75 93 0.9500000 lbox
76 92 0.9500000 lbox
77 91 0.9500000 lbox
showpage
end
%%EOF
