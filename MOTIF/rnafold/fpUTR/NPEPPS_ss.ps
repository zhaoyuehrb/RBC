%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGCCGCGCACGCAGCCGCCGCCACCACUUCCCCCUCUCCCUCCCUCCUUGCGGGCCCUCCUCCCCUUCCCUCCCCUCCGCCCCCUUCCCCGUAGGCAGCCCGCCCGCCAGUCCGCCCGCACCGCCUCCUUCCCAGCCCCUAGCGCUCCGGCUGGGUCUCUCCCCCGCCCCCCAGGCUCCCCCGGUCGCUCUCCUCCGGCGGUCGCCCGCGCUCGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-232.20462036 146.91496277]
[-237.94487000 160.77314758]
[-243.68513489 174.63134766]
[-249.42538452 188.48953247]
[-255.16563416 202.34773254]
[-260.80856323 216.24583435]
[-266.35388184 230.18316650]
[-271.89923096 244.12049866]
[-269.81182861 259.80340576]
[-281.70611572 268.76861572]
[-287.25146484 282.70596313]
[-284.34899902 298.84622192]
[-297.04858398 309.22183228]
[-312.28591919 303.15924072]
[-314.38619995 286.89514160]
[-301.18878174 277.16064453]
[-295.64346313 263.22329712]
[-298.12750244 248.53729248]
[-285.83654785 238.57518005]
[-280.29122925 224.63783264]
[-274.74591064 210.70050049]
[-275.19326782 203.33052063]
[-269.02383423 196.60748291]
[-263.28356934 182.74928284]
[-257.54333496 168.89109802]
[-251.80307007 155.03289795]
[-246.06282043 141.17471313]
[-257.74432373 150.58439636]
[-269.42584229 159.99407959]
[-281.10736084 169.40376282]
[-286.92529297 183.22952271]
[-295.85354614 195.28300476]
[-307.38360596 204.87767029]
[-320.85876465 211.46705627]
[-335.51153564 214.67584229]
[-350.50735474 214.32127380]
[-364.99209595 210.42355347]
[-378.14077759 203.20466614]
[-389.20449829 193.07579041]
[-397.55310059 180.61381531]
[-402.71105957 166.52853394]
[-404.38467407 151.62219238]
[-402.47854614 136.74378967]
[-397.10125732 122.74076080]
[-388.55908203 110.41065979]
[-377.33856201 100.45575714]
[-364.07879639 93.44305420]
[-349.53494263 89.77197266]
[-334.53543091 89.65158844]
[-319.93453979 93.08876801]
[-306.56390381 99.88774109]
[-295.18453979 109.66182709]
[-280.53079224 112.86604309]
[-265.87701416 116.07025909]
[-251.22323608 119.27448273]
[-262.54693604 109.43712616]
[-273.87066650 99.59976196]
[-285.19436646 89.76240540]
[-296.51806641 79.92504883]
[-307.84179688 70.08769226]
[-321.07400513 72.57184601]
[-333.14596558 67.06462860]
[-339.74664307 55.77886963]
[-338.66119385 42.94492722]
[-349.84582520 32.94972610]
[-361.03045654 22.95452881]
[-372.99618530 32.07691956]
[-386.47219849 38.76969147]
[-400.97140503 42.79090118]
[-415.96960449 43.99518585]
[-430.92465210 42.33900833]
[-445.29592896 37.88224411]
[-458.56393433 30.78599739]
[-470.24902344 21.30679512]
[-479.92877197 9.78730392]
[-487.25332642 -3.35605264]
[-491.95782471 -17.64815140]
[-493.87225342 -32.57234192]
[-492.92739868 -47.58912277]
[-489.15740967 -62.15565109]
[-482.69857788 -75.74535370]
[-473.78436279 -87.86696625]
[-462.73706055 -98.08230591]
[-449.95596313 -106.02209473]
[-435.90313721 -111.39930725]
[-421.08654785 -114.01956940]
[-406.04187012 -113.78816223]
[-391.31289673 -110.71343994]
[-377.43209839 -104.90655518]
[-364.90124512 -96.57743073]
[-354.17330933 -86.02715302]
[-345.63613892 -73.63710785]
[-339.59832764 -59.85519028]
[-336.27813721 -45.17960358]
[-335.79559326 -30.14086533]
[-338.16812134 -15.28261566]
[-343.30996704 -1.14196968]
[-351.03527832 11.76989651]
[-339.85064697 21.76509476]
[-328.66601562 31.76029396]
[-311.92578125 30.10308647]
[-298.91326904 41.28969193]
[-298.00442505 58.76398468]
[-286.68072510 68.60134125]
[-275.35702515 78.43869781]
[-264.03329468 88.27605438]
[-252.70959473 98.11341095]
[-241.38587952 107.95076752]
[-227.19323730 112.80554962]
[-212.21684265 111.96449280]
[-197.24043274 111.12343597]
[-182.26403809 110.28237915]
[-167.28762817 109.44132233]
[-152.31748962 108.49526215]
[-137.35435486 107.44425201]
[-122.39122772 106.39324188]
[-110.23736572 97.78319550]
[-95.92897797 104.53453827]
[-80.96584320 103.48352814]
[-71.42190552 92.10597229]
[-56.26213074 90.82694244]
[-44.39301682 100.91464996]
[-29.42988205 99.86363983]
[-22.98386955 96.26284790]
[-14.24979115 98.90431213]
[0.72661078 98.06325531]
[15.70301342 97.22219849]
[30.67941475 96.38114166]
[45.65581894 95.54008484]
[60.63222122 94.69902802]
[62.07628632 78.69989777]
[70.23549652 63.27907181]
[84.75791168 51.28705215]
[104.08842468 45.33787918]
[125.61843109 47.31016159]
[146.03713989 57.93535614]
[158.73800659 49.95487595]
[171.43887329 41.97439575]
[184.13973999 33.99391174]
[196.84060669 26.01343155]
[209.54145813 18.03295135]
[222.24232483 10.05247021]
[220.99105835 -5.20180559]
[226.98280334 -19.28575134]
[238.84071350 -28.96298218]
[253.83990479 -32.00973892]
[268.53369141 -27.72589874]
[279.54553223 -17.09585953]
[284.34500122 -2.56232381]
[281.82922363 12.53500652]
[272.57629395 24.72687721]
[258.71246338 31.21168327]
[243.42352295 30.49926567]
[230.22280884 22.75333214]
[217.52194214 30.73381424]
[204.82107544 38.71429443]
[192.12022400 46.69477463]
[179.41935730 54.67525864]
[166.71849060 62.65573883]
[154.01762390 70.63622284]
[155.27392578 78.03025055]
[170.06199646 75.51766205]
[184.85005188 73.00506592]
[199.63812256 70.49246979]
[214.42622375 67.98012543]
[216.93832397 82.76827240]
[202.15071106 85.28054047]
[187.36265564 87.79312897]
[172.57458496 90.30572510]
[157.78651428 92.81832123]
[159.04281616 100.21234894]
[173.66673279 103.55016327]
[188.29064941 106.88797760]
[202.58502197 99.60439301]
[217.13177490 106.36985016]
[220.77189636 121.99448395]
[210.71298218 134.49240112]
[194.67138672 134.27627563]
[184.95283508 121.51189423]
[170.32891846 118.17407990]
[155.70500183 114.83626556]
[152.35643005 121.54723358]
[165.77835083 128.24438477]
[179.20016479 134.94175720]
[172.50257874 148.36346436]
[159.08120728 141.66630554]
[145.65927124 134.96916199]
[142.31069946 141.68013000]
[153.77125549 151.35771179]
[169.14776611 148.51217651]
[182.73037720 156.26115417]
[188.10581970 170.94578552]
[182.73594666 185.63247681]
[169.15626526 193.38658142]
[153.77867126 190.54687500]
[143.86401367 178.45416260]
[144.09367371 162.81826782]
[132.63311768 153.14068604]
[104.63574982 156.51144409]
[80.73537445 147.26676941]
[65.72941589 129.75056458]
[61.47327805 109.67543030]
[46.49687576 110.51648712]
[31.52047157 111.35754395]
[16.54406929 112.19860077]
[1.56766748 113.03965759]
[-13.40873432 113.88071442]
[-28.37887001 114.82677460]
[-43.34200668 115.87778473]
[-53.68441391 127.52562714]
[-68.87413025 128.37834167]
[-79.91483307 118.44665527]
[-94.87796783 119.49767303]
[-108.10209656 128.18289185]
[-121.34021759 121.35637665]
[-136.30334473 122.40738678]
[-151.26647949 123.45839691]
[-159.59854126 127.17838287]
[-166.44657898 124.41772461]
[-181.42297363 125.25878143]
[-196.39938354 126.09983826]
[-211.37577820 126.94089508]
[-226.35218811 127.78195190]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[6 21]
[7 20]
[8 19]
[10 17]
[11 16]
[55 108]
[56 107]
[57 106]
[58 105]
[59 104]
[60 103]
[64 100]
[65 99]
[66 98]
[109 223]
[110 222]
[111 221]
[112 220]
[113 219]
[114 217]
[115 216]
[116 215]
[118 213]
[119 212]
[122 209]
[123 208]
[125 207]
[126 206]
[127 205]
[128 204]
[129 203]
[130 202]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[142 154]
[171 181]
[172 180]
[173 179]
[188 198]
[189 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
