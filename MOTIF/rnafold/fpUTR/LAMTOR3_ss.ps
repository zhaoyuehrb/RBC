%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGGGAGGGGCGCGGCCGCCGGACGCGCCCUCGCAGCUUCCGCCGGGCCCCUCCGGAAAUCCCGUAUCGUAGGGCGACGGCGGCUUAGAAAGUGCUUCCUGGAGCGCAGACGAGGUCAUGAAUCAUGUGACGGUGGCUUGAGGAGGAACCUGUCUUUAAAGCUGUCCCUGAAGUGACAGCGGAGAGAACCAGGCAGCCCAGAAACCCCAGGCGUGGAGAUUGAUCCUGCGAGAGAAGGGGGUUCAUC\
) } def
/len { sequence length } bind def

/coor [
[-26.07061577 357.78622437]
[-38.70470810 365.87197876]
[-53.70034409 366.23385620]
[-66.70973206 358.76687622]
[-73.96098328 345.63601685]
[-73.35243988 330.65072632]
[-83.89218903 341.32376099]
[-94.43193817 351.99679565]
[-104.97168732 362.66983032]
[-115.51143646 373.34286499]
[-126.05118561 384.01589966]
[-136.59094238 394.68893433]
[-147.13069153 405.36196899]
[-151.32200623 420.61788940]
[-165.77020264 424.23718262]
[-176.30995178 434.91021729]
[-186.84970093 445.58325195]
[-197.38945007 456.25628662]
[-198.32852173 460.43716431]
[-200.33609009 463.77691650]
[-203.02116394 466.04467773]
[-205.95800781 467.15850830]
[-208.73712158 467.18405151]
[-219.79981995 477.31402588]
[-230.86251831 487.44403076]
[-235.81507874 502.47009277]
[-250.42684937 505.35888672]
[-261.48956299 515.48889160]
[-272.48837280 525.68817139]
[-283.42291260 535.95635986]
[-287.64221191 551.80346680]
[-303.54412842 555.81115723]
[-314.77011108 543.85668945]
[-309.77185059 528.23779297]
[-293.69113159 525.02185059]
[-282.75659180 514.75366211]
[-280.03903198 507.90130615]
[-271.61953735 504.42617798]
[-260.55685425 494.29620361]
[-256.39556885 479.99468994]
[-240.99250793 476.38134766]
[-229.92980957 466.25134277]
[-218.86711121 456.12133789]
[-208.06248474 445.71655273]
[-197.52273560 435.04351807]
[-186.98298645 424.37048340]
[-176.44323730 413.69744873]
[-173.00578308 399.20492554]
[-157.80372620 394.82223511]
[-147.26397705 384.14920044]
[-136.72422791 373.47616577]
[-126.18447113 362.80313110]
[-115.64472198 352.13009644]
[-105.10497284 341.45706177]
[-94.56522369 330.78402710]
[-84.02547455 320.11096191]
[-81.36667633 309.41021729]
[-70.04410553 304.45169067]
[-60.62873840 292.77474976]
[-51.21336746 281.09780884]
[-49.24776459 266.33346558]
[-34.56232071 260.44720459]
[-25.14694977 248.77026367]
[-15.73157883 237.09332275]
[-6.31620836 225.41639709]
[-11.70455742 208.57775879]
[-5.83632851 191.73330688]
[9.11001968 181.71206665]
[27.23583603 182.69705200]
[36.35478973 170.78720093]
[45.47374344 158.87734985]
[54.59270096 146.96748352]
[63.71165466 135.05763245]
[72.83060455 123.14778137]
[81.94956207 111.23792267]
[78.31057739 96.68602753]
[64.65898132 90.47039032]
[48.39682007 92.58559418]
[38.65019608 79.39714050]
[45.44560242 64.47217560]
[61.79250717 63.16423035]
[70.87461853 76.81880188]
[84.52620697 83.03443146]
[98.57445526 77.77642059]
[104.79009247 64.12483215]
[111.00572205 50.47323990]
[117.22135925 36.82165146]
[112.49211121 32.03850174]
[108.90829468 26.36962318]
[106.62929535 20.08293152]
[105.75308228 13.47341156]
[106.31201172 6.84928417]
[108.27170563 0.51763356]
[111.53304291 -5.22983027]
[115.93716431 -10.13021088]
[121.27313995 -13.96144485]
[127.28812408 -16.55236244]
[126.34626770 -31.52276421]
[125.40441132 -46.49316406]
[124.46254730 -61.46356583]
[123.52069092 -76.43396759]
[122.57883453 -91.40436554]
[113.99028015 -104.69148254]
[120.91316223 -117.87946320]
[119.97130585 -132.84986877]
[119.02944946 -147.82026672]
[118.08758545 -162.79066467]
[114.43347931 -171.13403320]
[117.22915649 -177.95487976]
[116.47549438 -192.93594360]
[107.75531769 -197.05731201]
[101.16436005 -204.01972961]
[97.57039642 -212.84553528]
[97.42439270 -222.31613159]
[100.70433807 -231.14021301]
[106.92393494 -238.12979126]
[115.20425415 -242.36019897]
[115.20425415 -257.36019897]
[115.20425415 -272.36019897]
[115.20425415 -287.36019897]
[115.20425415 -302.36019897]
[103.10967255 -312.27258301]
[100.26705170 -327.64962769]
[108.01859283 -341.23077393]
[122.70425415 -346.60342407]
[137.38990784 -341.23077393]
[145.14144897 -327.64962769]
[142.29882812 -312.27258301]
[130.20425415 -302.36019897]
[130.20425415 -287.36019897]
[130.20425415 -272.36019897]
[130.20425415 -257.36019897]
[130.20425415 -242.36019897]
[145.81047058 -229.12818909]
[146.53059387 -208.38456726]
[131.45654297 -193.68960571]
[132.21020508 -178.70855713]
[133.05798340 -163.73252869]
[133.99984741 -148.76213074]
[134.94171143 -133.79171753]
[135.88356018 -118.82132721]
[144.40475464 -106.60499573]
[137.54924011 -92.34622192]
[138.49108887 -77.37582397]
[139.43295288 -62.40542221]
[140.37480164 -47.43502426]
[141.31666565 -32.46462250]
[142.25852966 -17.49422073]
[149.63816833 -15.08770466]
[156.16569519 -10.88745594]
[161.41381836 -5.16839409]
[175.42875671 -10.51457214]
[189.44369507 -15.86075020]
[203.45861816 -21.20692825]
[217.40527344 -26.72879601]
[231.28143311 -32.42548370]
[245.15759277 -38.12216949]
[259.03375244 -43.81885529]
[272.90991211 -49.51554108]
[276.63122559 -62.44446564]
[286.96337891 -70.75456238]
[300.00143433 -71.59219360]
[310.98022461 -64.87535095]
[324.92687988 -70.39721680]
[338.87353516 -75.91909027]
[352.82019043 -81.44095612]
[366.76681519 -86.96282196]
[380.71347046 -92.48469543]
[384.44183350 -107.54719543]
[396.33331299 -117.51576233]
[411.81539917 -118.55728149]
[424.93490601 -110.27126312]
[430.64712524 -95.84384918]
[426.75558472 -80.82267761]
[414.75665283 -70.98369598]
[399.26419067 -70.11019135]
[386.23535156 -78.53804779]
[372.28869629 -73.01617432]
[358.34204102 -67.49430847]
[344.39538574 -61.97244263]
[330.44876099 -56.45057297]
[316.50210571 -50.92870331]
[310.47738647 -35.21484375]
[294.63500977 -28.60143852]
[278.60659790 -35.63938522]
[264.73043823 -29.94269753]
[250.85427856 -24.24601173]
[236.97811890 -18.54932594]
[223.10195923 -12.85263824]
[220.47404480 -8.89234734]
[215.34165955 -6.52703953]
[208.80479431 -7.19199419]
[194.78987122 -1.84581625]
[180.77493286 3.50036192]
[166.75999451 8.84654045]
[157.61717224 34.84500122]
[130.87294006 43.03728485]
[124.65731049 56.68887329]
[118.44168091 70.34046173]
[112.22604370 83.99205017]
[124.22570038 74.99159241]
[134.47630310 64.04055023]
[149.25402832 61.46786880]
[162.60235596 68.31052399]
[169.14093018 81.81041718]
[166.23420715 96.52609253]
[155.05380249 106.52602386]
[140.10653687 107.77957153]
[125.28279114 105.48682404]
[137.19265747 114.60578156]
[149.10250854 123.72473145]
[165.42480469 125.31053925]
[171.96536255 140.34892273]
[161.99581909 153.36968994]
[145.77198792 150.97817993]
[139.98355103 135.63458252]
[128.07369995 126.51563263]
[116.16384125 117.39668274]
[122.24386597 131.10920715]
[130.74955750 143.46449280]
[129.58561707 158.41926575]
[119.27070618 169.30973816]
[104.40108490 171.28317261]
[91.60260773 163.46020508]
[86.57820129 149.32672119]
[91.56667328 135.18061829]
[93.85942078 120.35688019]
[84.74046326 132.26673889]
[75.62151337 144.17658997]
[66.50255585 156.08644104]
[57.38360214 167.99630737]
[48.26464462 179.90615845]
[39.14569092 191.81600952]
[44.24801636 203.19624329]
[44.03911972 215.59411621]
[38.61966705 226.66650391]
[29.06929970 234.34678650]
[17.23210907 237.23046875]
[5.36072636 234.83175659]
[-4.05464411 246.50869751]
[-13.47001457 258.18563843]
[-22.88538551 269.86257935]
[-25.52443695 285.46212769]
[-39.53643417 290.51318359]
[-48.95180130 302.19012451]
[-58.36717224 313.86706543]
[-43.54386520 311.57150269]
[-29.67905235 317.29574585]
[-20.79265022 329.38009644]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 56]
[7 55]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[15 47]
[16 46]
[17 45]
[18 44]
[23 43]
[24 42]
[25 41]
[27 39]
[28 38]
[29 36]
[30 35]
[58 246]
[59 245]
[60 244]
[62 242]
[63 241]
[64 240]
[65 239]
[69 233]
[70 232]
[71 231]
[72 230]
[73 229]
[74 228]
[75 227]
[76 83]
[77 82]
[84 200]
[85 199]
[86 198]
[87 197]
[97 148]
[98 147]
[99 146]
[100 145]
[101 144]
[102 143]
[104 141]
[105 140]
[106 139]
[107 138]
[109 137]
[110 136]
[117 133]
[118 132]
[119 131]
[120 130]
[121 129]
[151 195]
[152 194]
[153 193]
[154 192]
[155 189]
[156 188]
[157 187]
[158 186]
[159 185]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
[168 177]
[209 218]
[210 217]
[211 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
