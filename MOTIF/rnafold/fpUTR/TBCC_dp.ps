%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TBCC)
} def

/sequence { (\
CGCGUUGGUGGGAGGCCUCACGGACAGCGCGCCCGGAGGAAGGAAGACAAGAGAGAGGAAGCUUGAAGCCAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.040611218 ubox
1 29 0.407265238 ubox
1 31 0.843315260 ubox
1 35 0.008815106 ubox
1 65 0.006557632 ubox
2 9 0.041014353 ubox
2 16 0.005405639 ubox
2 28 0.436793455 ubox
2 30 0.895040808 ubox
2 32 0.020088867 ubox
2 34 0.003815912 ubox
2 62 0.003766627 ubox
2 69 0.015599622 ubox
3 8 0.041049617 ubox
3 15 0.006809142 ubox
3 27 0.436671255 ubox
3 29 0.895139629 ubox
3 31 0.020126427 ubox
3 61 0.003765308 ubox
3 68 0.015607024 ubox
4 25 0.446340813 ubox
4 28 0.889788084 ubox
4 30 0.017318808 ubox
4 73 0.057569290 ubox
5 13 0.006726590 ubox
5 24 0.455420304 ubox
5 27 0.885907815 ubox
5 29 0.015227870 ubox
5 50 0.003958551 ubox
5 72 0.062178605 ubox
6 12 0.006678924 ubox
6 20 0.003440080 ubox
6 22 0.007726860 ubox
6 23 0.472731624 ubox
6 26 0.872491818 ubox
6 49 0.004565157 ubox
6 71 0.064125435 ubox
7 17 0.004019523 ubox
7 19 0.003789306 ubox
7 21 0.007602939 ubox
7 25 0.871478146 ubox
7 48 0.004636913 ubox
7 70 0.064478786 ubox
8 16 0.004631866 ubox
8 18 0.004230870 ubox
8 21 0.993361582 ubox
8 25 0.008099288 ubox
8 69 0.064457178 ubox
9 15 0.004667530 ubox
9 20 0.994504731 ubox
9 22 0.036742532 ubox
9 24 0.009554759 ubox
9 68 0.063220236 ubox
10 17 0.029512942 ubox
10 18 0.032435482 ubox
10 19 0.994695632 ubox
10 21 0.039346247 ubox
10 34 0.004113038 ubox
10 63 0.004274250 ubox
10 64 0.011389749 ubox
10 70 0.003567164 ubox
11 16 0.031080789 ubox
11 17 0.182812601 ubox
11 18 0.976083195 ubox
11 19 0.018245997 ubox
11 33 0.004121112 ubox
11 62 0.004305706 ubox
11 63 0.011868348 ubox
11 69 0.003566697 ubox
11 70 0.006363061 ubox
12 16 0.180548337 ubox
12 17 0.972233416 ubox
12 18 0.015241852 ubox
12 19 0.039543585 ubox
12 32 0.004119581 ubox
12 62 0.012085645 ubox
12 64 0.025790059 ubox
12 69 0.006342434 ubox
13 18 0.037892769 ubox
13 63 0.026036101 ubox
13 64 0.042925298 ubox
14 62 0.025744020 ubox
14 63 0.043667551 ubox
14 70 0.009409971 ubox
15 30 0.004218952 ubox
15 62 0.043745228 ubox
15 69 0.009396042 ubox
16 23 0.003917128 ubox
16 29 0.004215153 ubox
16 39 0.063124270 ubox
16 58 0.026925564 ubox
16 61 0.034059789 ubox
16 68 0.007357920 ubox
17 22 0.003967446 ubox
17 27 0.003984713 ubox
17 38 0.069455125 ubox
17 39 0.006288089 ubox
17 53 0.003811555 ubox
17 55 0.006257427 ubox
17 57 0.029601107 ubox
18 26 0.003814297 ubox
18 37 0.069496932 ubox
18 38 0.006106337 ubox
18 52 0.003819991 ubox
18 54 0.006270010 ubox
18 56 0.029597749 ubox
18 59 0.012703294 ubox
19 36 0.069446217 ubox
19 51 0.003815102 ubox
19 53 0.006265237 ubox
19 55 0.029536608 ubox
19 58 0.012858503 ubox
21 29 0.021511176 ubox
21 31 0.016876177 ubox
21 35 0.068993765 ubox
22 28 0.021912776 ubox
22 30 0.017170933 ubox
22 33 0.012069561 ubox
22 34 0.069033133 ubox
23 32 0.013369342 ubox
23 33 0.068693733 ubox
26 63 0.008429173 ubox
27 62 0.009106531 ubox
27 69 0.007763801 ubox
28 35 0.007109266 ubox
28 61 0.009104893 ubox
28 65 0.003162719 ubox
28 68 0.007774952 ubox
29 34 0.008591859 ubox
29 62 0.060957208 ubox
29 64 0.003459107 ubox
29 69 0.035705108 ubox
30 61 0.061607126 ubox
30 65 0.005737597 ubox
30 68 0.036300661 ubox
31 62 0.042873096 ubox
31 69 0.096640670 ubox
32 39 0.538951503 ubox
32 43 0.195324545 ubox
32 58 0.027665049 ubox
32 61 0.042886605 ubox
32 68 0.097123006 ubox
33 38 0.538805057 ubox
33 39 0.333179776 ubox
33 42 0.195021976 ubox
33 43 0.442522326 ubox
33 57 0.027233315 ubox
33 58 0.117691134 ubox
34 38 0.331859634 ubox
34 42 0.443858349 ubox
34 57 0.118013594 ubox
34 65 0.014179003 ubox
35 63 0.003522929 ubox
35 64 0.010918771 ubox
35 70 0.169561629 ubox
36 62 0.003895460 ubox
36 63 0.005986022 ubox
36 64 0.062938042 ubox
36 69 0.169653522 ubox
37 63 0.064296619 ubox
37 64 0.013519880 ubox
38 62 0.064456889 ubox
38 63 0.014109631 ubox
38 70 0.139217579 ubox
39 62 0.014244813 ubox
39 64 0.010061994 ubox
39 69 0.139277004 ubox
40 63 0.007973014 ubox
40 64 0.137594423 ubox
41 63 0.139758107 ubox
41 64 0.077056057 ubox
42 62 0.140039736 ubox
42 63 0.079104488 ubox
42 64 0.006529773 ubox
42 70 0.784051564 ubox
43 62 0.079128496 ubox
43 63 0.004903384 ubox
43 64 0.013841208 ubox
43 69 0.784568947 ubox
44 63 0.011988602 ubox
44 64 0.121912908 ubox
45 63 0.124257790 ubox
45 64 0.006789361 ubox
46 62 0.124280041 ubox
46 63 0.005516261 ubox
46 64 0.011820904 ubox
47 63 0.010442742 ubox
48 65 0.846461848 ubox
49 64 0.847714646 ubox
50 63 0.845978197 ubox
50 64 0.016247348 ubox
51 62 0.843220262 ubox
51 63 0.011871448 ubox
51 64 0.168359319 ubox
52 63 0.178957587 ubox
52 64 0.010671725 ubox
53 62 0.181866598 ubox
53 63 0.007610995 ubox
53 64 0.109786384 ubox
54 63 0.119453527 ubox
54 64 0.014455827 ubox
55 62 0.120982500 ubox
55 63 0.010558265 ubox
55 64 0.186986150 ubox
56 63 0.201128557 ubox
56 64 0.034456809 ubox
57 62 0.203387220 ubox
57 63 0.036965121 ubox
57 64 0.005529176 ubox
57 70 0.120572935 ubox
58 62 0.036687520 ubox
58 63 0.005453968 ubox
58 64 0.006204658 ubox
58 69 0.116260458 ubox
59 63 0.005821151 ubox
61 69 0.293963688 ubox
62 68 0.296009635 ubox
63 67 0.266684956 ubox
63 72 0.092502379 ubox
64 71 0.109166120 ubox
65 70 0.114250330 ubox
1 31 0.9500000 lbox
2 30 0.9500000 lbox
3 29 0.9500000 lbox
4 28 0.9500000 lbox
5 27 0.9500000 lbox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
42 70 0.9500000 lbox
43 69 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
showpage
end
%%EOF
