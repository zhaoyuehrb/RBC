%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGUCCGUCACGUGCGGCCGCCCGGCCUCUCGGCCUUGCCGCGCGCCUGGCGGGGUUGGGGGGGCGGGGACCAAGAUCUGCUGCGCCUGCGUUGUGGGCGUUCUCGGGGAGCUGCUGCCGUAGCUGCCGCCGCCGCUACCACCGCGUUCGGGUGUAGAAUUUGGAAUCCCUGCGCCGCGUUAACA\
) } def
/len { sequence length } bind def

/coor [
[-119.50634766 338.88504028]
[-128.38189697 350.97738647]
[-142.91967773 354.67236328]
[-156.49198914 348.28546143]
[-162.91125488 334.72842407]
[-159.25013733 320.18063354]
[-172.15615845 327.82489014]
[-185.06217957 335.46914673]
[-197.96821594 343.11337280]
[-210.87423706 350.75762939]
[-223.78025818 358.40188599]
[-236.68627930 366.04614258]
[-249.46276855 373.90496826]
[-262.10614014 381.97619629]
[-274.74954224 390.04745483]
[-287.39291382 398.11868286]
[-300.03631592 406.18991089]
[-312.67968750 414.26113892]
[-325.32305908 422.33239746]
[-337.96646118 430.40362549]
[-337.59588623 441.10073853]
[-341.67791748 450.90774536]
[-349.41046143 458.07275391]
[-359.34603882 461.34616089]
[-369.66244507 460.19848633]
[-378.49691772 454.90463257]
[-391.52886963 462.33215332]
[-404.56082153 469.75967407]
[-417.59280396 477.18719482]
[-425.39974976 491.60882568]
[-441.79791260 491.78805542]
[-449.91827393 477.54052734]
[-441.40725708 463.52285767]
[-425.02032471 464.15524292]
[-411.98837280 456.72772217]
[-398.95639038 449.30020142]
[-385.92443848 441.87268066]
[-382.19540405 422.76882935]
[-365.37649536 412.37985229]
[-346.03768921 417.76022339]
[-333.39431763 409.68899536]
[-320.75091553 401.61776733]
[-308.10754395 393.54653931]
[-295.46414185 385.47528076]
[-282.82077026 377.40405273]
[-270.17739868 369.33282471]
[-257.53399658 361.26159668]
[-255.64559937 356.85522461]
[-250.95838928 353.59753418]
[-244.33053589 353.14010620]
[-231.42449951 345.49584961]
[-218.51847839 337.85159302]
[-205.61245728 330.20736694]
[-192.70643616 322.56311035]
[-179.80041504 314.91885376]
[-166.89439392 307.27459717]
[-154.45726013 298.88903809]
[-142.53158569 289.79077148]
[-130.60589600 280.69253540]
[-118.68020630 271.59429932]
[-106.75452423 262.49606323]
[-100.65414429 244.15956116]
[-80.64269257 241.84004211]
[-69.02767944 232.34838867]
[-64.06851196 218.30360413]
[-48.48658371 215.56242371]
[-36.87157440 206.07077026]
[-25.25656700 196.57911682]
[-13.64155769 187.08744812]
[-2.02654934 177.59579468]
[9.58845901 168.10414124]
[21.20346832 158.61247253]
[32.65824890 148.92805481]
[43.94960785 139.05358887]
[55.24096680 129.17910767]
[66.53232574 119.30464172]
[77.82368469 109.43016815]
[75.90909576 99.41234589]
[78.30985260 89.49978638]
[84.59591675 81.46810150]
[93.64127350 76.75599670]
[103.82565308 76.20753479]
[113.32476044 79.92095947]
[125.09674835 70.62471008]
[136.86874390 61.32846451]
[148.64073181 52.03221512]
[160.41271973 42.73596573]
[172.18470764 33.43972015]
[183.95669556 24.14347076]
[195.72869873 14.84722233]
[207.34370422 5.35556412]
[218.79849243 -4.32885361]
[230.25326538 -14.01327133]
[241.70805359 -23.69768906]
[247.25115967 -38.51607132]
[261.96578979 -40.82454681]
[273.42056274 -50.50896454]
[284.87536621 -60.19338226]
[296.33013916 -69.87779999]
[307.62149048 -79.75227356]
[318.74627686 -89.81404114]
[329.87106323 -99.87581635]
[329.08355713 -109.30745697]
[332.68203735 -117.91198730]
[339.73800659 -123.79835510]
[348.57916260 -125.73678589]
[357.18463135 -123.41422272]
[368.79962158 -132.90588379]
[380.41464233 -142.39753723]
[391.94995117 -151.98591614]
[403.40472412 -161.67033386]
[414.77819824 -171.45011902]
[426.06954956 -181.32458496]
[437.36090088 -191.19906616]
[448.65228271 -201.07353210]
[459.94363403 -210.94801331]
[471.23498535 -220.82247925]
[476.01293945 -236.51016235]
[492.04681396 -239.95208740]
[502.84234619 -227.60751343]
[497.29400635 -212.17547607]
[481.10946655 -209.53111267]
[469.81808472 -199.65664673]
[458.52673340 -189.78218079]
[447.23538208 -179.90769958]
[435.94403076 -170.03323364]
[424.65267944 -160.15875244]
[421.68136597 -153.37530518]
[413.08914185 -150.21554565]
[401.63436890 -140.53112793]
[398.55010986 -133.79827881]
[389.90631104 -130.78253174]
[378.29129028 -121.29087067]
[366.67626953 -111.79920959]
[361.11114502 -91.93569946]
[339.93283081 -88.75102997]
[328.80804443 -78.68926239]
[317.68325806 -68.62748718]
[316.55407715 -63.96839905]
[312.47399902 -59.97648239]
[306.01455688 -58.42301559]
[294.55978394 -48.73859787]
[283.10498047 -39.05418015]
[271.65020752 -29.36976242]
[266.92642212 -15.24407578]
[251.39247131 -12.24290657]
[239.93768311 -2.55848837]
[228.48291016 7.12592936]
[217.02812195 16.81034660]
[215.74388123 21.42910576]
[211.53269958 25.28245544]
[205.02494812 26.61921310]
[193.25294495 35.91546249]
[181.48095703 45.21170807]
[169.70896912 54.50795746]
[157.93698120 63.80420685]
[146.16499329 73.10045624]
[134.39299011 82.39670563]
[122.62100983 91.69295502]
[121.51166534 110.86119080]
[106.74623871 123.13450623]
[87.69815826 120.72152710]
[76.40679932 130.59599304]
[65.11544037 140.47047424]
[53.82408142 150.34494019]
[42.53272247 160.21942139]
[40.02898026 166.37319946]
[35.47080994 169.80911255]
[30.69512558 170.22749329]
[19.08011818 179.71914673]
[7.46510887 189.21080017]
[-4.14989948 198.70246887]
[-15.76490784 208.19412231]
[-27.37991714 217.68577576]
[-38.99492645 227.17742920]
[-44.78487778 241.90112305]
[-59.53602600 243.96339417]
[-71.15103149 253.45506287]
[-71.61555481 264.34719849]
[-77.87831879 273.00094604]
[-87.66829681 276.69119263]
[-97.65628052 274.42175293]
[-109.58196259 283.51998901]
[-121.50765228 292.61822510]
[-133.43333435 301.71646118]
[-145.35902405 310.81469727]
[-130.50114441 312.87472534]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 56]
[7 55]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[13 47]
[14 46]
[15 45]
[16 44]
[17 43]
[18 42]
[19 41]
[20 40]
[26 37]
[27 36]
[28 35]
[29 34]
[57 186]
[58 185]
[59 184]
[60 183]
[61 182]
[63 178]
[64 177]
[66 175]
[67 174]
[68 173]
[69 172]
[70 171]
[71 170]
[72 169]
[73 166]
[74 165]
[75 164]
[76 163]
[77 162]
[83 159]
[84 158]
[85 157]
[86 156]
[87 155]
[88 154]
[89 153]
[90 152]
[91 149]
[92 148]
[93 147]
[94 146]
[96 144]
[97 143]
[98 142]
[99 141]
[100 138]
[101 137]
[102 136]
[107 134]
[108 133]
[109 132]
[110 130]
[111 129]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
