%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR51Q1)
} def

/sequence { (\
UUGGAUUAAAUGGGGCAAAGAGAUAUUAUUUCUAAUGUUUCUUUUUCUCCCUGAGUGAAGAUCCUGAAUCUGAAGACACAUUCAUCAGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.017643218 ubox
1 10 0.027864427 ubox
1 54 0.012777021 ubox
1 58 0.015193730 ubox
1 59 0.024793115 ubox
1 60 0.026031196 ubox
1 61 0.027808116 ubox
1 67 0.149985337 ubox
1 68 0.047499694 ubox
1 73 0.017232510 ubox
1 88 0.020747606 ubox
2 8 0.019909076 ubox
2 9 0.033099307 ubox
2 53 0.013701251 ubox
2 57 0.015952223 ubox
2 58 0.027882307 ubox
2 59 0.031503305 ubox
2 60 0.030470308 ubox
2 66 0.150333895 ubox
2 67 0.048616961 ubox
2 72 0.018556617 ubox
2 84 0.013612251 ubox
2 87 0.026711746 ubox
3 7 0.016878603 ubox
3 11 0.006428364 ubox
3 50 0.031266929 ubox
3 51 0.022773608 ubox
3 52 0.015238507 ubox
3 56 0.011769479 ubox
3 63 0.026432242 ubox
3 64 0.932812416 ubox
3 65 0.024177886 ubox
3 71 0.022400313 ubox
3 83 0.014975725 ubox
3 86 0.026317834 ubox
3 90 0.008496981 ubox
4 49 0.031305439 ubox
4 50 0.022749349 ubox
4 51 0.015302387 ubox
4 62 0.025113403 ubox
4 63 0.944006309 ubox
4 64 0.018744432 ubox
4 70 0.023877342 ubox
4 82 0.014827587 ubox
4 85 0.016142223 ubox
4 86 0.017199972 ubox
4 89 0.006706829 ubox
4 90 0.026896488 ubox
5 11 0.012116670 ubox
5 48 0.029890490 ubox
5 56 0.077790013 ubox
5 62 0.943233000 ubox
5 69 0.023907661 ubox
5 81 0.014507464 ubox
5 85 0.016863077 ubox
5 89 0.026812483 ubox
6 10 0.011110067 ubox
6 54 0.049320211 ubox
6 55 0.080104905 ubox
6 58 0.230579067 ubox
6 59 0.054079988 ubox
6 60 0.070779291 ubox
6 61 0.909229675 ubox
6 68 0.023518163 ubox
6 80 0.013053426 ubox
6 84 0.013470571 ubox
6 88 0.024447353 ubox
7 53 0.055097233 ubox
7 54 0.081322134 ubox
7 57 0.296814649 ubox
7 58 0.079211815 ubox
7 59 0.091007517 ubox
7 60 0.850069329 ubox
7 66 0.003682815 ubox
7 67 0.022311668 ubox
7 87 0.020439648 ubox
8 45 0.026632124 ubox
8 52 0.059629317 ubox
8 56 0.371490668 ubox
8 65 0.003779708 ubox
9 44 0.026686933 ubox
10 43 0.024740051 ubox
10 56 0.648387401 ubox
10 62 0.003547526 ubox
11 53 0.261977452 ubox
11 55 0.629522034 ubox
11 57 0.042773314 ubox
11 61 0.003945767 ubox
11 66 0.003574805 ubox
12 41 0.027294577 ubox
12 47 0.006727361 ubox
12 48 0.021471532 ubox
12 49 0.150816377 ubox
12 50 0.335992931 ubox
12 51 0.740337435 ubox
12 52 0.536018929 ubox
12 56 0.008658083 ubox
12 64 0.003775898 ubox
12 65 0.004621276 ubox
13 40 0.027443013 ubox
13 46 0.006687541 ubox
13 47 0.024355604 ubox
13 48 0.152707662 ubox
13 49 0.337294334 ubox
13 50 0.740844113 ubox
13 51 0.556148512 ubox
13 52 0.051106186 ubox
13 63 0.003723508 ubox
13 64 0.004834573 ubox
14 39 0.027439064 ubox
14 45 0.005993407 ubox
14 46 0.024479841 ubox
14 47 0.179339985 ubox
14 48 0.325258885 ubox
14 49 0.740165607 ubox
14 50 0.556141626 ubox
14 51 0.052012722 ubox
14 52 0.004340054 ubox
14 63 0.004830858 ubox
15 38 0.027595021 ubox
15 44 0.005068829 ubox
15 45 0.035782322 ubox
15 46 0.181293823 ubox
15 47 0.413046797 ubox
15 48 0.668438440 ubox
15 49 0.554713047 ubox
15 50 0.051743976 ubox
15 51 0.004327220 ubox
15 62 0.003538645 ubox
16 37 0.027629011 ubox
17 36 0.026731459 ubox
17 43 0.016194463 ubox
17 44 0.908709477 ubox
17 45 0.189257600 ubox
17 46 0.154784711 ubox
18 42 0.012119801 ubox
18 43 0.966052761 ubox
18 44 0.161215749 ubox
18 45 0.131123099 ubox
18 46 0.050304497 ubox
19 33 0.026110751 ubox
19 42 0.985909160 ubox
19 43 0.114535313 ubox
19 44 0.098792108 ubox
19 45 0.026513319 ubox
20 32 0.026944013 ubox
20 41 0.995590951 ubox
20 42 0.014317526 ubox
20 43 0.087256814 ubox
20 44 0.009752087 ubox
21 31 0.026920283 ubox
21 33 0.005997348 ubox
21 40 0.995165703 ubox
21 42 0.086966946 ubox
21 43 0.008427028 ubox
22 30 0.026817147 ubox
22 32 0.006115173 ubox
22 39 0.994773139 ubox
22 41 0.085957630 ubox
22 42 0.003970874 ubox
23 29 0.026435913 ubox
23 31 0.006047721 ubox
23 38 0.996265082 ubox
23 39 0.008467605 ubox
23 40 0.075271172 ubox
24 28 0.023443482 ubox
24 37 0.997718055 ubox
25 36 0.997666766 ubox
25 38 0.031370031 ubox
26 35 0.997268074 ubox
26 37 0.028959025 ubox
27 34 0.985870043 ubox
27 37 0.022523518 ubox
28 33 0.912910714 ubox
28 36 0.027115118 ubox
29 35 0.027405205 ubox
30 34 0.023079913 ubox
43 59 0.005197207 ubox
44 58 0.007030374 ubox
45 55 0.004996029 ubox
45 57 0.007285681 ubox
45 58 0.003923504 ubox
45 59 0.005694973 ubox
46 54 0.006692942 ubox
46 57 0.003760130 ubox
46 58 0.006171828 ubox
47 53 0.006858568 ubox
47 55 0.011010980 ubox
47 57 0.006156778 ubox
48 54 0.011281556 ubox
49 53 0.011310739 ubox
49 57 0.003251145 ubox
51 60 0.086850649 ubox
51 88 0.189094597 ubox
52 59 0.095984022 ubox
52 78 0.005070586 ubox
52 80 0.009042238 ubox
52 84 0.064369791 ubox
52 87 0.194785772 ubox
53 63 0.038514742 ubox
53 70 0.005402847 ubox
53 77 0.005782926 ubox
53 79 0.010725337 ubox
53 83 0.072842304 ubox
53 86 0.195841112 ubox
53 90 0.134297948 ubox
54 62 0.038082607 ubox
54 65 0.026007744 ubox
54 69 0.005333208 ubox
54 82 0.072789324 ubox
54 85 0.170094238 ubox
54 89 0.135820435 ubox
55 62 0.020648021 ubox
55 64 0.027433068 ubox
55 69 0.006860770 ubox
55 77 0.019113921 ubox
55 79 0.019095102 ubox
55 81 0.072394488 ubox
55 85 0.098353382 ubox
56 61 0.022805761 ubox
56 68 0.007389959 ubox
56 76 0.019067632 ubox
56 78 0.019176729 ubox
56 80 0.072382076 ubox
56 84 0.184134964 ubox
56 87 0.136483317 ubox
57 63 0.031681123 ubox
57 70 0.003400923 ubox
57 77 0.019018209 ubox
57 79 0.071802093 ubox
57 82 0.006919339 ubox
57 83 0.191942874 ubox
57 86 0.136927996 ubox
57 90 0.013231007 ubox
58 62 0.027622600 ubox
58 69 0.003305561 ubox
58 81 0.007590278 ubox
58 82 0.191646435 ubox
58 85 0.135562806 ubox
58 89 0.013341956 ubox
59 65 0.012848356 ubox
59 71 0.069108001 ubox
59 81 0.185652984 ubox
60 64 0.013113311 ubox
60 70 0.075593920 ubox
60 81 0.003764855 ubox
60 82 0.005420932 ubox
60 83 0.066265848 ubox
60 86 0.024530620 ubox
60 90 0.054282665 ubox
61 69 0.075310810 ubox
61 81 0.007816152 ubox
61 82 0.065668166 ubox
61 85 0.024585405 ubox
61 89 0.053157749 ubox
62 68 0.072236883 ubox
62 73 0.036273218 ubox
62 76 0.053044182 ubox
62 80 0.008442202 ubox
62 84 0.013958158 ubox
62 88 0.030790840 ubox
63 72 0.037052934 ubox
63 75 0.044824323 ubox
64 75 0.176656452 ubox
64 88 0.231143215 ubox
65 72 0.007263884 ubox
65 74 0.179640743 ubox
65 78 0.043513230 ubox
65 80 0.048630962 ubox
65 84 0.446173956 ubox
65 87 0.361981826 ubox
66 71 0.007911858 ubox
66 77 0.044702494 ubox
66 79 0.050091723 ubox
66 83 0.492458829 ubox
66 86 0.379516484 ubox
66 90 0.205524531 ubox
67 82 0.492359601 ubox
67 85 0.375800332 ubox
67 89 0.196930100 ubox
68 81 0.490619447 ubox
68 85 0.031476158 ubox
68 89 0.129674163 ubox
69 76 0.064346467 ubox
69 80 0.467689268 ubox
69 84 0.023976352 ubox
69 88 0.036615936 ubox
70 75 0.066643673 ubox
70 88 0.702242488 ubox
71 78 0.476446153 ubox
71 80 0.061031700 ubox
71 84 0.425832413 ubox
71 87 0.710161142 ubox
72 77 0.477182517 ubox
72 79 0.071110187 ubox
72 82 0.003691807 ubox
72 83 0.441345818 ubox
72 86 0.711496071 ubox
72 90 0.003734110 ubox
73 81 0.004798868 ubox
73 82 0.441085530 ubox
73 85 0.700752282 ubox
73 89 0.003659221 ubox
74 81 0.428518004 ubox
74 82 0.018870036 ubox
75 81 0.017367632 ubox
75 82 0.041375883 ubox
75 83 0.695657602 ubox
75 86 0.017374737 ubox
75 90 0.047618234 ubox
76 81 0.048240663 ubox
76 82 0.662815944 ubox
76 85 0.017172579 ubox
76 89 0.048079817 ubox
77 88 0.048080304 ubox
78 89 0.014634470 ubox
79 88 0.015732168 ubox
80 89 0.004929997 ubox
81 88 0.005137243 ubox
82 87 0.004361777 ubox
3 64 0.9500000 lbox
4 63 0.9500000 lbox
5 62 0.9500000 lbox
6 61 0.9500000 lbox
7 60 0.9500000 lbox
10 56 0.9500000 lbox
11 55 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
17 44 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
20 41 0.9500000 lbox
21 40 0.9500000 lbox
22 39 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
70 88 0.9500000 lbox
71 87 0.9500000 lbox
72 86 0.9500000 lbox
73 85 0.9500000 lbox
75 83 0.9500000 lbox
76 82 0.9500000 lbox
showpage
end
%%EOF
