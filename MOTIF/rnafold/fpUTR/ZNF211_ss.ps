%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGCGGGACUUGUGGCGUCUUCGCAGCGGUCAUUUUGGCUGCCCUCCCGGAGGUCCGUUCUGUCUGUCAGCCGCUUUGGUACGCUGCAUCGGGAUCGAAGUGACGGACCGUGAAGGCGCGAGAGUCAGGUCUGAGGGUCGGGGGCAGAGCCGCCCGCGAGGCCGGCCUGGGGAUAGCG\
) } def
/len { sequence length } bind def

/coor [
[303.47491455 387.64834595]
[301.14126587 372.83099365]
[298.80758667 358.01364136]
[296.47393799 343.19628906]
[286.85076904 331.82772827]
[292.34686279 316.99185181]
[290.01321411 302.17446899]
[287.67956543 287.35711670]
[281.02090454 273.91604614]
[270.64691162 263.08184814]
[260.27291870 252.24763489]
[249.89891052 241.41342163]
[239.52490234 230.57920837]
[226.71432495 232.10298157]
[215.19729614 225.86968994]
[209.29397583 213.96231079]
[211.36503601 200.63713074]
[201.18063354 189.62449646]
[190.99624634 178.61187744]
[180.81184387 167.59924316]
[170.62744141 156.58662415]
[160.44303894 145.57398987]
[150.25863647 134.56135559]
[140.07423401 123.54873657]
[129.88983154 112.53610229]
[119.70543671 101.52347565]
[110.92542267 120.99906158]
[85.95956421 123.73648834]
[71.72624207 128.47067261]
[57.49291611 133.20486450]
[43.25959396 137.93904114]
[29.02627182 142.67323303]
[14.79294968 147.40742493]
[0.55962652 152.14160156]
[-12.56163883 162.87792969]
[-26.51071358 153.24156189]
[-21.11242485 137.17001343]
[-4.17456007 137.90827942]
[10.05876255 133.17410278]
[24.29208565 128.43991089]
[38.52540970 123.70572662]
[52.75873184 118.97154236]
[66.99205017 114.23735046]
[81.22537994 109.50316620]
[79.66608429 94.58443451]
[64.76144409 92.89572906]
[49.95079422 99.93680573]
[36.60309982 90.40941620]
[38.44932556 74.11452484]
[53.59022903 67.81491089]
[66.45014954 77.99108887]
[81.35478973 79.67979431]
[96.78059387 76.54875183]
[108.94358826 82.37509155]
[104.83128357 67.94980621]
[100.71897125 53.52451706]
[96.60665894 39.09923172]
[92.49435425 24.67394447]
[88.38204193 10.24865627]
[84.26972961 -4.17663050]
[67.59226990 5.61135769]
[43.75388336 1.23201704]
[32.83005142 -9.04757118]
[21.90622330 -19.32715988]
[5.89143753 -20.27910233]
[-3.23120165 -33.47595978]
[1.53641355 -48.79422760]
[16.53697777 -54.48304749]
[30.26334000 -46.17844009]
[32.18581009 -30.25098991]
[43.10964203 -19.97140121]
[54.03347015 -9.69181347]
[67.64393616 -15.99858379]
[81.25318909 -22.30477905]
[80.47248077 -37.28445053]
[79.69178009 -52.26411819]
[78.91107178 -67.24378967]
[78.13036346 -82.22345734]
[77.34966278 -97.20312500]
[76.56895447 -112.18280029]
[75.78824615 -127.16246796]
[75.00754547 -142.14213562]
[64.62466431 -157.33485413]
[73.16781616 -172.65081787]
[72.12724304 -187.61468506]
[60.04059219 -197.79742432]
[58.77759171 -213.55117798]
[69.08756256 -225.52949524]
[84.85377502 -226.62585449]
[96.72241974 -216.18983459]
[97.65203857 -200.41290283]
[87.09110260 -188.65525818]
[88.13168335 -173.69139099]
[97.05838013 -165.50300598]
[98.03305054 -153.02641296]
[89.98721313 -142.92283630]
[90.76791382 -127.94316864]
[91.54862213 -112.96350098]
[92.32933044 -97.98383331]
[93.11003876 -83.00416565]
[93.89073944 -68.02449036]
[94.67144775 -53.04482651]
[95.45215607 -38.06515503]
[96.23285675 -23.08548546]
[98.69502258 -8.28894043]
[102.80732727 6.13634729]
[106.91963959 20.56163406]
[111.03195190 34.98692322]
[115.14425659 49.41220856]
[119.25656891 63.83749771]
[123.36887360 78.26278687]
[130.71806335 91.33908081]
[140.90246582 102.35170746]
[151.08686829 113.36433411]
[161.27127075 124.37696075]
[171.45567322 135.38958740]
[181.64006042 146.40222168]
[191.82446289 157.41484070]
[202.00886536 168.42747498]
[212.19326782 179.44010925]
[222.37767029 190.45272827]
[239.85458374 190.80767822]
[251.44931030 203.43495178]
[250.35911560 220.20521545]
[260.73312378 231.03942871]
[271.10711670 241.87362671]
[281.48110962 252.70783997]
[291.85513306 263.54205322]
[287.94528198 249.06057739]
[284.56967163 234.44532776]
[287.46020508 219.72647095]
[296.11230469 207.47326660]
[309.01571655 199.82456970]
[323.91802979 198.11550903]
[338.21798706 202.64442444]
[349.41946411 212.62075806]
[355.56713867 226.30308533]
[355.58792114 241.30307007]
[349.47750854 255.00332642]
[334.47860718 254.82292175]
[347.55490112 262.17208862]
[360.63119507 269.52130127]
[376.45239258 269.53759766]
[383.75656128 282.51831055]
[396.83285522 289.86749268]
[409.90914917 297.21667480]
[422.98544312 304.56585693]
[438.13327026 300.05825806]
[451.99182129 307.65539551]
[456.33901978 322.85003662]
[448.59576416 336.62747192]
[433.35601807 340.81378174]
[419.66119385 332.92532349]
[415.63626099 317.64215088]
[402.55996704 310.29296875]
[389.48367310 302.94378662]
[376.40737915 295.59460449]
[361.52148438 296.10394287]
[353.28198242 282.59759521]
[340.20568848 275.24838257]
[327.12939453 267.89920044]
[320.97128296 272.18026733]
[308.65502930 280.74240112]
[302.49691772 285.02346802]
[304.83056641 299.84082031]
[307.16421509 314.65817261]
[316.95431519 327.08657837]
[311.29129028 340.86260986]
[313.62496948 355.67996216]
[315.95861816 370.49731445]
[318.29226685 385.31469727]
[332.65487671 390.75631714]
[342.36001587 402.66033936]
[344.79705811 417.82464600]
[339.31045532 432.17010498]
[327.37603760 441.83789062]
[312.20416260 444.22738647]
[297.87597656 438.69583130]
[288.24563599 426.73120117]
[285.90371704 411.55191040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 171]
[2 170]
[3 169]
[4 168]
[6 166]
[7 165]
[8 164]
[9 128]
[10 127]
[11 126]
[12 125]
[13 124]
[17 121]
[18 120]
[19 119]
[20 118]
[21 117]
[22 116]
[23 115]
[24 114]
[25 113]
[26 112]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
[34 38]
[45 52]
[46 51]
[54 111]
[55 110]
[56 109]
[57 108]
[58 107]
[59 106]
[60 105]
[62 72]
[63 71]
[64 70]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[84 93]
[85 92]
[140 161]
[141 160]
[142 159]
[144 157]
[145 156]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
