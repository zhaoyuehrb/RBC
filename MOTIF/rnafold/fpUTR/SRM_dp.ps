%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SRM)
} def

/sequence { (\
GCGGGCGGCGGGCGGAGCUGGUCCCGUUGUGCUGCGGCGCCGCGCGGCCUGCAGUCCCGGGCCCGCGCCCCGCGCCGCCCGCCCGCCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 82 0.004464772 ubox
1 86 0.042621039 ubox
1 90 0.995649171 ubox
2 81 0.004479378 ubox
2 85 0.042759645 ubox
2 89 0.998881340 ubox
3 80 0.004480878 ubox
3 84 0.042766161 ubox
3 88 0.999004256 ubox
4 79 0.004480991 ubox
4 83 0.042767145 ubox
4 87 0.999020126 ubox
4 91 0.009604267 ubox
5 78 0.004481030 ubox
5 82 0.042767435 ubox
5 86 0.999019768 ubox
5 90 0.009731228 ubox
6 77 0.004480997 ubox
6 81 0.042760669 ubox
6 85 0.998855621 ubox
6 89 0.009746131 ubox
7 76 0.004481135 ubox
7 79 0.024869409 ubox
7 80 0.034913253 ubox
7 83 0.576737078 ubox
7 84 0.815492219 ubox
7 87 0.005946219 ubox
7 88 0.007957130 ubox
8 75 0.004481203 ubox
8 78 0.035074921 ubox
8 79 0.024694329 ubox
8 82 0.815666630 ubox
8 83 0.576750952 ubox
8 86 0.008272080 ubox
8 87 0.005627619 ubox
9 74 0.004480442 ubox
9 77 0.042908538 ubox
9 81 0.998843926 ubox
9 85 0.010062148 ubox
10 73 0.004384332 ubox
10 76 0.042915805 ubox
10 80 0.998989966 ubox
10 84 0.010354795 ubox
11 33 0.004262701 ubox
11 71 0.004369058 ubox
11 75 0.042878710 ubox
11 79 0.998995843 ubox
11 83 0.010421826 ubox
12 27 0.011501028 ubox
12 32 0.020125229 ubox
12 70 0.004372351 ubox
12 73 0.042965342 ubox
12 78 0.998726839 ubox
12 82 0.010488150 ubox
13 26 0.012233036 ubox
13 31 0.020203777 ubox
13 72 0.043060181 ubox
13 77 0.998701832 ubox
13 81 0.010488633 ubox
14 24 0.014265359 ubox
14 25 0.012820427 ubox
14 30 0.020119159 ubox
14 35 0.025417728 ubox
14 69 0.006188406 ubox
14 70 0.004143936 ubox
14 71 0.043320190 ubox
14 76 0.998205124 ubox
14 80 0.010486304 ubox
15 23 0.014672056 ubox
15 24 0.012587069 ubox
15 68 0.006531912 ubox
15 69 0.004893820 ubox
15 70 0.043311509 ubox
15 75 0.996216112 ubox
15 79 0.010461979 ubox
16 22 0.014739402 ubox
16 28 0.023950707 ubox
16 33 0.062046205 ubox
17 27 0.024567396 ubox
17 30 0.005278406 ubox
17 32 0.064967896 ubox
17 35 0.006096946 ubox
17 43 0.012090089 ubox
17 45 0.024890917 ubox
17 52 0.014174918 ubox
17 66 0.037718288 ubox
17 68 0.046467786 ubox
17 73 0.989454124 ubox
17 75 0.007557275 ubox
18 26 0.024609725 ubox
18 29 0.005564137 ubox
18 31 0.064956463 ubox
18 34 0.006067076 ubox
18 42 0.011883962 ubox
18 44 0.024914790 ubox
18 51 0.014164580 ubox
18 65 0.038563567 ubox
18 67 0.046619436 ubox
18 72 0.989930447 ubox
18 74 0.010176705 ubox
19 26 0.013803256 ubox
19 29 0.011525553 ubox
19 42 0.070593827 ubox
19 65 0.101723781 ubox
19 67 0.006130391 ubox
19 72 0.025677675 ubox
20 25 0.019217971 ubox
20 28 0.013700333 ubox
20 30 0.005093094 ubox
20 33 0.011179351 ubox
20 41 0.949757804 ubox
20 49 0.019180073 ubox
20 63 0.067084412 ubox
20 64 0.109897413 ubox
20 66 0.003500086 ubox
20 69 0.077128254 ubox
20 70 0.230045633 ubox
20 71 0.113130399 ubox
21 27 0.011622610 ubox
21 32 0.012198172 ubox
21 38 0.005514298 ubox
21 40 0.951643684 ubox
21 48 0.019232031 ubox
21 62 0.067508980 ubox
21 63 0.109745399 ubox
21 66 0.006649340 ubox
21 68 0.078116861 ubox
21 69 0.226077720 ubox
21 70 0.111200812 ubox
22 26 0.005577834 ubox
22 31 0.012072037 ubox
22 39 0.940536287 ubox
22 47 0.017802761 ubox
22 61 0.016506895 ubox
22 65 0.007843196 ubox
22 67 0.076336881 ubox
23 37 0.029326071 ubox
23 46 0.017714072 ubox
23 47 0.007376710 ubox
23 60 0.014788440 ubox
23 61 0.149413090 ubox
24 36 0.022889454 ubox
24 37 0.956960123 ubox
24 46 0.007430834 ubox
24 59 0.012805071 ubox
24 60 0.149766425 ubox
25 34 0.013144836 ubox
25 36 0.958087821 ubox
25 39 0.085587480 ubox
25 42 0.008740111 ubox
25 44 0.020041112 ubox
25 59 0.149953014 ubox
25 67 0.006568413 ubox
26 32 0.008712667 ubox
26 33 0.009829314 ubox
26 35 0.958237242 ubox
26 38 0.090508752 ubox
26 40 0.005238882 ubox
26 41 0.036114952 ubox
26 43 0.025660687 ubox
26 58 0.149171976 ubox
26 66 0.003872633 ubox
26 68 0.005789445 ubox
27 31 0.008399644 ubox
27 34 0.948354445 ubox
27 37 0.090465684 ubox
27 39 0.004609122 ubox
27 42 0.025581314 ubox
27 54 0.005693950 ubox
27 65 0.003586630 ubox
27 67 0.003852216 ubox
28 34 0.023647805 ubox
28 36 0.090210544 ubox
28 39 0.003915911 ubox
28 53 0.005991149 ubox
29 33 0.015888466 ubox
29 35 0.090552227 ubox
29 38 0.004988404 ubox
29 40 0.209989182 ubox
29 41 0.016083348 ubox
29 52 0.006020752 ubox
29 55 0.006830627 ubox
29 58 0.005398353 ubox
29 76 0.003716731 ubox
30 34 0.084737173 ubox
30 37 0.004940197 ubox
30 39 0.211083962 ubox
30 51 0.005775255 ubox
31 38 0.211934787 ubox
31 40 0.004913459 ubox
31 48 0.006012109 ubox
31 55 0.148170369 ubox
31 68 0.003967974 ubox
31 75 0.005775334 ubox
32 37 0.211905651 ubox
32 39 0.004921633 ubox
32 47 0.006037444 ubox
32 54 0.150780383 ubox
32 67 0.003881599 ubox
32 74 0.006266108 ubox
33 46 0.006034741 ubox
33 53 0.150768184 ubox
33 74 0.020016304 ubox
34 45 0.006114839 ubox
34 52 0.150805384 ubox
34 66 0.004195635 ubox
34 73 0.062299042 ubox
34 78 0.025694790 ubox
35 44 0.006114751 ubox
35 51 0.150801623 ubox
35 65 0.004199103 ubox
35 72 0.062360586 ubox
35 77 0.026054272 ubox
36 43 0.006053879 ubox
36 49 0.014278762 ubox
36 50 0.150007000 ubox
36 64 0.004204790 ubox
36 70 0.004028432 ubox
36 71 0.062365422 ubox
36 76 0.039202033 ubox
37 48 0.014475700 ubox
37 49 0.150057393 ubox
37 63 0.004196287 ubox
37 68 0.003325583 ubox
37 69 0.005344210 ubox
37 70 0.062258229 ubox
37 73 0.007873180 ubox
37 75 0.039455338 ubox
38 46 0.008597503 ubox
38 47 0.012470458 ubox
38 67 0.003362750 ubox
38 72 0.008287762 ubox
38 74 0.041003895 ubox
39 45 0.011584445 ubox
39 48 0.150025351 ubox
39 62 0.004189664 ubox
39 68 0.080500073 ubox
39 71 0.010405060 ubox
39 73 0.041104354 ubox
40 44 0.011516949 ubox
40 47 0.150040783 ubox
40 61 0.004189528 ubox
40 67 0.057049743 ubox
40 72 0.041074689 ubox
41 46 0.149824632 ubox
41 60 0.004185278 ubox
41 67 0.109204935 ubox
42 66 0.161648376 ubox
42 68 0.970116236 ubox
42 71 0.006216967 ubox
43 59 0.004156260 ubox
43 65 0.161832251 ubox
43 67 0.974256922 ubox
44 58 0.004178936 ubox
44 64 0.161817759 ubox
44 66 0.974565738 ubox
45 65 0.974424509 ubox
46 56 0.003608466 ubox
46 63 0.586160465 ubox
46 64 0.795527122 ubox
47 55 0.003626299 ubox
47 62 0.812559199 ubox
47 63 0.562579706 ubox
48 54 0.003912213 ubox
48 60 0.004312010 ubox
48 61 0.988249375 ubox
49 59 0.004842041 ubox
49 60 0.988271148 ubox
49 61 0.007344577 ubox
50 59 0.987127543 ubox
50 60 0.007118453 ubox
51 58 0.965994762 ubox
51 62 0.005856330 ubox
52 61 0.005859356 ubox
54 73 0.008533334 ubox
55 72 0.008465007 ubox
58 72 0.005030770 ubox
59 70 0.021299793 ubox
59 71 0.005004887 ubox
60 69 0.021684543 ubox
60 70 0.004235667 ubox
61 68 0.022211449 ubox
61 69 0.003285582 ubox
62 67 0.022384103 ubox
64 74 0.054109949 ubox
65 71 0.005379129 ubox
65 73 0.059929317 ubox
65 75 0.022284422 ubox
66 72 0.059966393 ubox
66 74 0.033203562 ubox
67 71 0.057065113 ubox
67 73 0.047636534 ubox
67 75 0.003822185 ubox
68 72 0.047319271 ubox
68 74 0.004877273 ubox
1 90 0.9500000 lbox
2 89 0.9500000 lbox
3 88 0.9500000 lbox
4 87 0.9500000 lbox
5 86 0.9500000 lbox
6 85 0.9500000 lbox
7 84 0.9500000 lbox
8 83 0.9500000 lbox
9 81 0.9500000 lbox
10 80 0.9500000 lbox
11 79 0.9500000 lbox
12 78 0.9500000 lbox
13 77 0.9500000 lbox
14 76 0.9500000 lbox
15 75 0.9500000 lbox
17 73 0.9500000 lbox
18 72 0.9500000 lbox
20 41 0.9500000 lbox
21 40 0.9500000 lbox
22 39 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
42 68 0.9500000 lbox
43 67 0.9500000 lbox
44 66 0.9500000 lbox
45 65 0.9500000 lbox
46 64 0.9500000 lbox
47 63 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
showpage
end
%%EOF
