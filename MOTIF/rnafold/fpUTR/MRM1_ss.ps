%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGACCCACGUGGGAGCCUGGGAGCGGGUGGUCGUAGCUCGGUAGUCCAGUUGUGGGUAAUCGGGGCUGUUUGUUCCUGUCCGAGAGAGCUCGGCGGAGACGGCUGUCGAGUACCCUUCACCUCGGUGUUGGGAGCCUGGGAGCGAACUGCGGCGCGGGUUACCGCUCCCGGGGACGCAGCAAGGGGCAUCGAGUCCCUGGCGGGAGCUGCGCC\
) } def
/len { sequence length } bind def

/coor [
[-65.42083740 306.66345215]
[-76.04972076 318.83078003]
[-90.86757660 325.12130737]
[-106.88727570 324.32211304]
[-120.90336609 316.64389038]
[-132.93521118 325.60125732]
[-144.96705627 334.55865479]
[-156.99891663 343.51602173]
[-169.03076172 352.47338867]
[-181.06260681 361.43078613]
[-193.09445190 370.38815308]
[-204.99475098 379.51959229]
[-216.76098633 388.82312012]
[-228.52722168 398.12664795]
[-240.29345703 407.43017578]
[-246.69522095 424.69757080]
[-264.14697266 426.55755615]
[-275.77664185 436.03121948]
[-287.40634155 445.50491333]
[-293.21905518 460.21960449]
[-307.97338867 462.25906372]
[-319.60305786 471.73272705]
[-321.35394287 487.21084595]
[-333.28305054 496.65283203]
[-348.02828979 494.88824463]
[-359.65795898 504.36193848]
[-371.28765869 513.83563232]
[-382.91732788 523.30926514]
[-388.24081421 538.82031250]
[-404.38522339 541.69958496]
[-414.74255371 528.98510742]
[-408.65811157 513.75646973]
[-392.39099121 511.67959595]
[-380.76132202 502.20593262]
[-369.13165283 492.73223877]
[-357.50195312 483.25857544]
[-356.24835205 468.46115112]
[-344.58914185 458.68780518]
[-329.07675171 460.10305786]
[-317.44705200 450.62939453]
[-312.46615601 436.59228516]
[-296.88000488 433.87521362]
[-285.25033569 424.40155029]
[-273.62063599 414.92785645]
[-272.08065796 402.93212891]
[-262.47259521 394.94409180]
[-249.59698486 395.66394043]
[-237.83074951 386.36041260]
[-226.06451416 377.05688477]
[-214.29829407 367.75335693]
[-212.86405945 363.20147705]
[-208.55732727 359.50076294]
[-202.05183411 358.35629272]
[-190.01998901 349.39892578]
[-177.98814392 340.44155884]
[-165.95628357 331.48416138]
[-153.92443848 322.52679443]
[-141.89259338 313.56942749]
[-129.86074829 304.61203003]
[-133.16317749 291.13955688]
[-131.07536316 277.38244629]
[-123.87980652 265.42214966]
[-112.63433075 257.08102417]
[-99.01667023 253.64456177]
[-85.07420349 255.66348267]
[-72.91616058 262.86572266]
[-60.75530624 254.08428955]
[-48.59445572 245.30284119]
[-45.01327896 238.84103394]
[-36.19227219 236.48364258]
[-23.90499306 227.87998962]
[-21.49747276 216.02784729]
[-11.33441925 208.75903320]
[1.45484734 210.41249084]
[13.86595917 201.98846436]
[26.27707100 193.56442261]
[38.68818283 185.14039612]
[51.09929276 176.71636963]
[63.51040649 168.29232788]
[75.92151642 159.86830139]
[88.33262634 151.44427490]
[100.74374390 143.02023315]
[86.70005035 139.51283264]
[75.04553986 131.71520996]
[66.98493958 120.79850769]
[63.22523499 108.23100281]
[63.92005539 95.58435822]
[68.68447876 84.33816528]
[76.67489624 75.70687103]
[86.72048187 70.50932312]
[83.90119171 55.77665329]
[81.08189392 41.04397964]
[78.26260376 26.31130981]
[75.44331360 11.57863903]
[72.62402344 -3.15403199]
[69.80473328 -17.88670349]
[66.98544312 -32.61937332]
[64.16614532 -47.35204697]
[50.95045090 -56.01927567]
[47.81604385 -71.50962830]
[56.62251282 -84.63294983]
[72.14514160 -87.60340881]
[85.17462158 -78.65868378]
[87.98080444 -63.10552216]
[78.89881897 -50.17133713]
[81.71810913 -35.43866730]
[84.53739929 -20.70599365]
[87.35669708 -5.97332335]
[90.17598724 8.75934792]
[92.99527740 23.49201775]
[95.81456757 38.22468948]
[98.63385773 52.95735931]
[101.45314789 67.69003296]
[104.68747711 67.99885559]
[107.87450409 68.63062286]
[114.80072784 55.32545853]
[121.72695923 42.02029800]
[117.20407867 27.11454964]
[124.41779327 13.71988869]
[138.65602112 9.49987125]
[145.58224487 -3.80529094]
[152.50848389 -17.11045265]
[151.25297546 -33.46147156]
[164.93661499 -42.49972916]
[179.48283386 -34.92744827]
[179.92773438 -18.53433609]
[165.81364441 -10.18422413]
[158.88740540 3.12093830]
[151.96118164 16.42610168]
[156.67105103 30.50987434]
[149.83641052 44.10186768]
[135.03211975 48.94652557]
[128.10589600 62.25168610]
[121.17966461 75.55684662]
[130.91470337 81.74140167]
[138.59692383 91.76659393]
[142.75151062 104.85820770]
[157.48419189 102.03891754]
[172.21685791 99.21961975]
[186.94952393 96.40032959]
[201.68220520 93.58103943]
[216.41487122 90.76174927]
[231.14753723 87.94245911]
[245.88021851 85.12316895]
[260.61288452 82.30387878]
[275.34555054 79.48458099]
[285.73748779 62.28496170]
[305.13003540 58.33994675]
[320.92050171 69.75476074]
[335.51617432 66.29551697]
[350.11184692 62.83628082]
[364.70751953 59.37704468]
[378.72534180 49.84093094]
[391.76928711 60.67105484]
[384.97332764 76.20332336]
[368.16677856 73.97271729]
[353.57110596 77.43195343]
[338.97543335 80.89119720]
[324.37976074 84.35043335]
[321.54571533 94.20977783]
[314.82382202 102.06582642]
[305.37503052 106.45870972]
[294.87451172 106.53574371]
[285.21487427 102.21605682]
[278.16485596 94.21725464]
[263.43215942 97.03654480]
[248.69950867 99.85583496]
[233.96682739 102.67513275]
[219.23416138 105.49442291]
[204.50149536 108.31371307]
[189.76881409 111.13300323]
[175.03614807 113.95229340]
[160.30348206 116.77158356]
[145.57080078 119.59087372]
[143.05697632 126.65704346]
[157.33775330 131.24609375]
[171.61853027 135.83515930]
[186.56910706 137.05175781]
[190.55102539 151.51358032]
[178.33032227 160.21153259]
[165.97012329 151.71231079]
[151.99972534 146.25083923]
[138.02931213 140.78936768]
[135.51548767 147.85552979]
[145.15728760 159.34619141]
[154.79910278 170.83685303]
[164.44091797 182.32752991]
[174.08273315 193.81819153]
[183.72454834 205.30885315]
[199.51692200 208.13388062]
[207.02758789 222.31024170]
[200.49502563 236.96305847]
[184.93045044 240.85194397]
[172.27366638 230.99368286]
[172.23388672 214.95066833]
[162.59207153 203.46000671]
[152.95025635 191.96934509]
[143.30844116 180.47866821]
[133.66662598 168.98800659]
[124.02481079 157.49734497]
[109.16777039 155.43135071]
[96.75666046 163.85537720]
[84.34555054 172.27941895]
[71.93444061 180.70344543]
[59.52332687 189.12747192]
[47.11221313 197.55151367]
[34.70110321 205.97554016]
[22.28999138 214.39956665]
[9.87887859 222.82360840]
[2.23941827 239.58021545]
[-15.30134678 240.16728210]
[-27.58862686 248.77091980]
[-39.81301498 257.46368408]
[-51.97386551 266.24514771]
[-64.13471985 275.02658081]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 59]
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[11 53]
[12 50]
[13 49]
[14 48]
[15 47]
[17 44]
[18 43]
[19 42]
[21 40]
[22 39]
[25 36]
[26 35]
[27 34]
[28 33]
[66 215]
[67 214]
[68 213]
[70 212]
[71 211]
[74 209]
[75 208]
[76 207]
[77 206]
[78 205]
[79 204]
[80 203]
[81 202]
[82 201]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[115 134]
[116 133]
[117 132]
[120 129]
[121 128]
[122 127]
[137 174]
[138 173]
[139 172]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[149 159]
[150 158]
[151 157]
[152 156]
[184 200]
[185 199]
[186 198]
[187 197]
[188 196]
[189 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
