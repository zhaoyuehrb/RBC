%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCAGGGCAGCGCGGAGCCGCUAGCGUCUCCCGGCGCGGCUGCCCGAGGCCGGCGAAGCCAUGGGCGCCGGGACCCCGCCGCCGCCGCCGCCGCCGCCGUCUGGCCCCAGGAAGAGAAGUUAAACUUCUAGAGAAACCUAACAGACAAUAUCCACAACAGGUGGUAACAGAAAACAAUCCAG\
) } def
/len { sequence length } bind def

/coor [
[3.85286546 125.64543152]
[16.34548187 117.34275055]
[30.39200401 112.08012390]
[45.26472092 110.13019562]
[60.19906616 111.59525299]
[74.69118500 107.72505188]
[89.18330383 103.85484314]
[74.60979462 100.30337524]
[60.03628922 96.75190735]
[44.79657745 101.00182343]
[34.26309586 90.47115326]
[19.68959236 86.91968536]
[5.11608505 83.36822510]
[-9.48720837 79.94129944]
[-24.11922455 76.63916016]
[-38.75123978 73.33702850]
[-56.18861771 79.22033691]
[-68.61967468 66.84781647]
[-83.30593872 63.79597473]
[-98.39167023 68.56371307]
[-109.27853394 58.39880753]
[-123.96479797 55.34696579]
[-135.17341614 61.76041031]
[-147.35470581 58.89999008]
[-154.09014893 48.83408356]
[-168.72216797 45.53195190]
[-183.35418701 42.22981644]
[-197.95674133 51.84155655]
[-214.66664124 48.00565720]
[-223.26947021 33.56722260]
[-237.95573425 30.51538277]
[-252.64199829 27.46354294]
[-267.32824707 24.41170311]
[-282.01452637 21.35986328]
[-296.70077515 18.30802345]
[-311.38705444 15.25618267]
[-326.07330322 12.20434189]
[-340.75955200 9.15250206]
[-355.54144287 6.60384655]
[-370.40173340 4.56134653]
[-385.26202393 2.51884675]
[-400.12231445 0.47634712]
[-413.85214233 11.29818058]
[-430.82827759 8.90103436]
[-440.63085938 -4.75129318]
[-455.52386475 -6.53978491]
[-470.41687012 -8.32827663]
[-485.27432251 -1.38655162]
[-498.55792236 -11.00312042]
[-496.60260010 -27.28528214]
[-481.41983032 -33.48334503]
[-468.62835693 -23.22127151]
[-453.73538208 -21.43277931]
[-438.84237671 -19.64428902]
[-429.91116333 -28.95128059]
[-417.05694580 -31.44479752]
[-404.93841553 -25.99253654]
[-398.07983398 -14.38394165]
[-383.21954346 -12.34144211]
[-368.35925293 -10.29894257]
[-353.49896240 -8.25644302]
[-351.17541504 -9.86483192]
[-348.06732178 -10.63843822]
[-344.49356079 -10.27097225]
[-340.87887573 -8.57867718]
[-337.70773315 -5.53375912]
[-323.02145386 -2.48191905]
[-308.33520508 0.56992120]
[-293.64892578 3.62176132]
[-278.96267700 6.67360163]
[-264.27642822 9.72544193]
[-249.59014893 12.77728176]
[-234.90390015 15.82912254]
[-220.21763611 18.88096237]
[-210.52537537 10.36938953]
[-197.50537109 8.98097706]
[-185.89584351 15.44667912]
[-180.05204773 27.59779930]
[-165.42002869 30.89993477]
[-150.78802490 34.20206833]
[-134.35006714 28.08615112]
[-120.91295624 40.66070557]
[-106.22669220 43.71254349]
[-92.19142914 38.72651672]
[-80.25409698 49.10971069]
[-65.56783295 52.16155243]
[-55.26941681 45.78729248]
[-42.99686050 48.22660828]
[-35.44910812 58.70501328]
[-20.81709099 62.00714493]
[-6.18507385 65.30928040]
[1.04912245 63.71098328]
[8.66755104 68.79471588]
[23.24105835 72.34618378]
[37.81456375 75.89765167]
[52.01187897 71.39370728]
[63.58775711 82.17840576]
[78.16126251 85.72987366]
[92.73477173 89.28133392]
[107.61195374 87.36576843]
[120.81047058 80.23841858]
[134.00898743 73.11106110]
[147.20750427 65.98371124]
[160.40602112 58.85635757]
[156.45547485 43.78641891]
[156.21580505 28.21783638]
[159.69671631 13.05043888]
[166.69296265 -0.84012991]
[176.79649353 -12.65295601]
[189.42021179 -21.70803833]
[203.83215332 -27.48543739]
[219.19781494 -29.65512085]
[234.62861633 -28.09581375]
[249.23313904 -22.90177727]
[262.16876221 -14.37711716]
[272.69015503 -3.01797676]
[285.76507568 -10.36962986]
[298.83996582 -17.72128296]
[311.91488647 -25.07293701]
[324.98977661 -32.42459106]
[338.06469727 -39.77624130]
[348.90768433 -52.80952072]
[364.43322754 -45.99826431]
[362.18606567 -29.19390106]
[345.41635132 -26.70133591]
[332.34143066 -19.34968185]
[319.26654053 -11.99802971]
[306.19161987 -4.64637613]
[293.11672974 2.70527697]
[280.04180908 10.05693054]
[284.11203003 23.93761063]
[284.98211670 38.38407898]
[282.60488892 52.66777420]
[277.09695435 66.06761169]
[268.73300171 77.90634155]
[257.93228149 87.58483887]
[245.23733521 94.61235046]
[231.28697205 98.63144684]
[216.78398132 99.43615723]
[202.45979309 96.98252869]
[189.03755188 91.39102936]
[177.19563293 82.94062805]
[167.53337097 72.05487823]
[154.33485413 79.18222809]
[141.13633728 86.30957794]
[127.93782043 93.43693542]
[114.73930359 100.56428528]
[113.90866089 108.01815033]
[128.60011292 104.99140930]
[136.01860046 118.02851105]
[125.91200256 129.11257935]
[112.24737549 122.92586517]
[111.41673279 130.37973022]
[122.72242737 140.23777771]
[134.02812195 150.09584045]
[145.33381653 159.95388794]
[161.37318420 160.29800415]
[170.98957825 173.13951111]
[166.80613708 188.62751770]
[152.03202820 194.88095093]
[138.00068665 187.10270691]
[135.47576904 171.25958252]
[124.17006683 161.40153503]
[112.86437225 151.54347229]
[101.55867767 141.68542480]
[106.75415039 155.75692749]
[111.94963074 169.82841492]
[111.65095520 184.82543945]
[107.96869659 199.36645508]
[101.09362793 212.69812012]
[91.38191986 224.12977600]
[79.33671570 233.06918335]
[65.58202362 239.05320740]
[50.83044815 241.77185059]
[35.84621811 241.08424377]
[21.40561676 237.02604675]
[8.25677013 229.80746460]
[-2.91911888 219.80249023]
[-11.54306316 207.52944946]
[-17.16828346 193.62416077]
[-19.50335312 178.80703735]
[-18.42729950 163.84567261]
[-13.99586868 149.51519775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 99]
[8 98]
[9 97]
[11 95]
[12 94]
[13 93]
[14 91]
[15 90]
[16 89]
[18 86]
[19 85]
[21 83]
[22 82]
[25 80]
[26 79]
[27 78]
[30 74]
[31 73]
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[37 67]
[38 66]
[39 61]
[40 60]
[41 59]
[42 58]
[45 54]
[46 53]
[47 52]
[100 147]
[101 146]
[102 145]
[103 144]
[104 143]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
