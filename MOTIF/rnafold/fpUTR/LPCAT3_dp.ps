%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:15:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LPCAT3)
} def

/sequence { (\
AAUGCGCACGCCGUGGGCGGGCCCCGAGCCGGAAUUGGGGGUGAAGCGAUAGCGUUUUGCCCGCAUUCGGGGCGCGCGGAGCUGGGGGGUCCCUGUGGGGCUCCCGGAGUUAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 111 0.010231117 ubox
2 14 0.039716912 ubox
2 110 0.010227804 ubox
3 10 0.007267596 ubox
3 13 0.040243019 ubox
3 15 0.051076717 ubox
3 19 0.022368967 ubox
3 76 0.007692009 ubox
3 78 0.680321146 ubox
3 109 0.009321556 ubox
3 112 0.007948088 ubox
4 9 0.010201608 ubox
4 11 0.076826486 ubox
4 12 0.030751371 ubox
4 14 0.091862919 ubox
4 18 0.076961460 ubox
4 22 0.003819300 ubox
4 75 0.010881257 ubox
4 77 0.964388813 ubox
4 82 0.009520147 ubox
4 110 0.008290586 ubox
4 111 0.004931842 ubox
5 10 0.081731450 ubox
5 13 0.093917593 ubox
5 15 0.155330372 ubox
5 17 0.078725669 ubox
5 21 0.003830121 ubox
5 74 0.010879469 ubox
5 76 0.964893973 ubox
5 78 0.073650332 ubox
5 81 0.009533893 ubox
5 84 0.006717662 ubox
5 109 0.008756149 ubox
6 12 0.091922512 ubox
6 14 0.156580171 ubox
6 22 0.021325857 ubox
6 73 0.006425827 ubox
6 75 0.964852584 ubox
6 77 0.074415664 ubox
6 82 0.017906006 ubox
6 83 0.003856141 ubox
6 110 0.008142132 ubox
7 13 0.156640554 ubox
7 15 0.114128741 ubox
7 21 0.021093789 ubox
7 72 0.006081402 ubox
7 74 0.963836577 ubox
7 76 0.074367068 ubox
7 81 0.017993073 ubox
7 84 0.022275491 ubox
7 109 0.008455216 ubox
8 14 0.114074323 ubox
8 83 0.022147503 ubox
8 110 0.030553152 ubox
9 13 0.112973894 ubox
9 15 0.010387293 ubox
9 19 0.951608421 ubox
9 74 0.055962513 ubox
9 78 0.004909215 ubox
9 84 0.008529213 ubox
9 106 0.004080613 ubox
9 109 0.032475695 ubox
10 14 0.006456178 ubox
10 18 0.960283289 ubox
10 22 0.003569232 ubox
10 73 0.056892464 ubox
10 77 0.003962729 ubox
10 82 0.028100996 ubox
10 83 0.005189817 ubox
11 17 0.960295517 ubox
11 20 0.108656803 ubox
11 21 0.003706514 ubox
11 70 0.004536373 ubox
11 72 0.056878519 ubox
11 76 0.003529474 ubox
11 79 0.049392045 ubox
11 81 0.028120270 ubox
11 85 0.005021824 ubox
11 107 0.035223524 ubox
12 16 0.953317904 ubox
12 19 0.108955464 ubox
12 20 0.004364075 ubox
12 26 0.013760223 ubox
12 69 0.004563767 ubox
12 71 0.055563524 ubox
12 78 0.049694781 ubox
12 84 0.010304205 ubox
12 106 0.035265638 ubox
13 18 0.106144669 ubox
13 25 0.022597043 ubox
13 68 0.004628510 ubox
13 77 0.026175847 ubox
13 82 0.041273164 ubox
13 105 0.005228401 ubox
14 26 0.021010008 ubox
14 69 0.041188650 ubox
14 76 0.018058493 ubox
14 78 0.009149559 ubox
14 81 0.041116931 ubox
15 23 0.004000640 ubox
15 24 0.027091952 ubox
15 25 0.027563180 ubox
15 30 0.003690153 ubox
15 68 0.040937958 ubox
15 75 0.008820431 ubox
15 77 0.006282763 ubox
16 22 0.004013642 ubox
16 23 0.027204025 ubox
16 24 0.027511239 ubox
16 29 0.003698975 ubox
16 30 0.005472844 ubox
16 66 0.005664157 ubox
16 67 0.033787416 ubox
16 82 0.003235450 ubox
17 22 0.027101152 ubox
17 23 0.027302680 ubox
17 29 0.005496240 ubox
17 64 0.040314857 ubox
17 66 0.006185630 ubox
17 73 0.006418338 ubox
17 75 0.010144123 ubox
17 77 0.235606550 ubox
18 26 0.006701235 ubox
18 28 0.005380725 ubox
18 31 0.006590408 ubox
18 63 0.040528692 ubox
18 72 0.004983183 ubox
18 74 0.010386453 ubox
18 76 0.237127434 ubox
19 25 0.007497807 ubox
19 30 0.006518231 ubox
19 62 0.040519974 ubox
19 73 0.004296362 ubox
19 75 0.249427109 ubox
20 24 0.007389804 ubox
20 29 0.006357321 ubox
20 30 0.006276808 ubox
20 61 0.040466579 ubox
20 83 0.023796830 ubox
21 29 0.006460744 ubox
21 42 0.004237789 ubox
21 60 0.035115712 ubox
21 73 0.996808383 ubox
21 82 0.025048141 ubox
22 28 0.006620899 ubox
22 40 0.031790793 ubox
22 41 0.010892607 ubox
22 59 0.022652121 ubox
22 72 0.997666318 ubox
22 79 0.006734509 ubox
22 81 0.025082677 ubox
23 39 0.037406228 ubox
23 40 0.014765959 ubox
23 41 0.005434987 ubox
23 71 0.997690783 ubox
23 78 0.006902526 ubox
23 79 0.032890526 ubox
24 38 0.037459510 ubox
24 39 0.014725514 ubox
24 40 0.005454451 ubox
24 70 0.997629933 ubox
24 78 0.032924118 ubox
24 79 0.009119555 ubox
25 37 0.037482034 ubox
25 38 0.014656616 ubox
25 39 0.005437158 ubox
25 69 0.997547570 ubox
25 76 0.033588170 ubox
25 78 0.009131369 ubox
26 30 0.007252474 ubox
26 36 0.037316082 ubox
26 67 0.004783962 ubox
26 68 0.994467661 ubox
26 75 0.033511592 ubox
26 77 0.009021691 ubox
27 35 0.037212373 ubox
27 36 0.014287122 ubox
27 66 0.026341336 ubox
27 67 0.987978832 ubox
28 35 0.014508264 ubox
28 64 0.047364041 ubox
28 66 0.945490229 ubox
28 73 0.035220523 ubox
29 38 0.198424739 ubox
29 39 0.007012796 ubox
29 63 0.045190312 ubox
29 70 0.038257734 ubox
29 71 0.016898876 ubox
29 72 0.033627127 ubox
30 37 0.199692061 ubox
30 38 0.020302915 ubox
30 63 0.007403008 ubox
30 69 0.039951361 ubox
30 70 0.020959079 ubox
30 71 0.031861316 ubox
31 36 0.152343194 ubox
31 62 0.004391285 ubox
31 67 0.014703442 ubox
31 68 0.045058140 ubox
32 66 0.045279474 ubox
32 67 0.052838155 ubox
32 68 0.083481154 ubox
33 66 0.066955173 ubox
33 67 0.097259555 ubox
34 66 0.142546546 ubox
35 65 0.113063278 ubox
36 65 0.961948824 ubox
37 64 0.977082107 ubox
38 62 0.011872456 ubox
39 61 0.010152059 ubox
39 62 0.998906223 ubox
40 60 0.008022936 ubox
40 61 0.999110601 ubox
41 60 0.999325823 ubox
42 59 0.997283584 ubox
43 56 0.004978775 ubox
43 57 0.006831763 ubox
43 58 0.994638734 ubox
44 55 0.005184663 ubox
44 56 0.008884333 ubox
44 57 0.998612962 ubox
44 58 0.004125233 ubox
45 55 0.009474717 ubox
45 56 0.997606811 ubox
45 57 0.003765604 ubox
46 53 0.035777525 ubox
46 55 0.998827933 ubox
47 52 0.035955820 ubox
47 54 0.999291527 ubox
48 53 0.980400113 ubox
74 82 0.008659964 ubox
75 81 0.008703472 ubox
76 82 0.006271325 ubox
77 81 0.006267805 ubox
78 104 0.006728114 ubox
78 111 0.069704323 ubox
79 103 0.006767759 ubox
79 110 0.087000739 ubox
79 111 0.126239996 ubox
80 102 0.006785518 ubox
80 110 0.123803891 ubox
80 111 0.863886349 ubox
81 101 0.006787098 ubox
81 110 0.945582580 ubox
82 100 0.006770730 ubox
82 107 0.250694933 ubox
82 109 0.953189785 ubox
83 99 0.006577563 ubox
83 106 0.247793962 ubox
83 108 0.937531598 ubox
83 112 0.003385831 ubox
84 94 0.005480290 ubox
84 105 0.233519016 ubox
84 111 0.003631799 ubox
85 93 0.005523243 ubox
85 104 0.213855151 ubox
85 105 0.970303490 ubox
86 92 0.005523409 ubox
86 103 0.192122491 ubox
86 104 0.975567486 ubox
86 105 0.049519007 ubox
87 91 0.005434386 ubox
87 102 0.166727944 ubox
87 103 0.980059535 ubox
87 104 0.049443023 ubox
88 101 0.137906920 ubox
88 102 0.983948782 ubox
88 103 0.049282201 ubox
89 101 0.990368715 ubox
89 102 0.007002768 ubox
90 99 0.093651337 ubox
90 100 0.993043785 ubox
91 98 0.094686406 ubox
91 99 0.993852945 ubox
91 100 0.055931380 ubox
92 97 0.094362942 ubox
92 98 0.993831744 ubox
92 99 0.056259555 ubox
93 97 0.986606611 ubox
93 98 0.056375415 ubox
4 77 0.9500000 lbox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
12 16 0.9500000 lbox
21 73 0.9500000 lbox
22 72 0.9500000 lbox
23 71 0.9500000 lbox
24 70 0.9500000 lbox
25 69 0.9500000 lbox
26 68 0.9500000 lbox
27 67 0.9500000 lbox
28 66 0.9500000 lbox
36 65 0.9500000 lbox
37 64 0.9500000 lbox
39 62 0.9500000 lbox
40 61 0.9500000 lbox
41 60 0.9500000 lbox
42 59 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
80 111 0.9500000 lbox
81 110 0.9500000 lbox
82 109 0.9500000 lbox
83 108 0.9500000 lbox
85 105 0.9500000 lbox
86 104 0.9500000 lbox
87 103 0.9500000 lbox
88 102 0.9500000 lbox
89 101 0.9500000 lbox
90 100 0.9500000 lbox
91 99 0.9500000 lbox
92 98 0.9500000 lbox
93 97 0.9500000 lbox
showpage
end
%%EOF
