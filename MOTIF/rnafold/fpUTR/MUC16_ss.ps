%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCGUUGCACAAUUCCCCCAACCUCCAUACAUACGGCAGCUCUUCUAGACACAGGUUUUCCCAGGUCAAAUGCGGGGACCCCAGCCAUAUCUCCCACCCUGAGAAAUUUUGGAGUUUCAGGGAGCUCAGAAGCUCUGCAGAGGCCACCCUCUCUGAGGGGAUUCUUCUUAGACCUCCAUCCAGAGGCAAAUGUUGACCUGUCC\
) } def
/len { sequence length } bind def

/coor [
[-15.33829689 239.66191101]
[-25.05815125 251.08663940]
[-34.77800369 262.51138306]
[-37.82727432 278.03594971]
[-51.96752930 282.71597290]
[-61.68738174 294.14068604]
[-71.40723419 305.56542969]
[-81.12709045 316.99014282]
[-90.84693909 328.41488647]
[-81.73744965 340.40783691]
[-75.41947174 354.07888794]
[-72.18851471 368.78857422]
[-72.19570160 383.84890747]
[-75.44068909 398.55551147]
[-81.77170563 412.22052002]
[-90.89263916 424.20480347]
[-102.37688446 433.94778442]
[-115.68730927 440.99383545]
[-130.20135498 445.01336670]
[-145.24017334 445.81838989]
[-160.10037231 443.37121582]
[-174.08691406 437.78634644]
[-186.54560852 429.32501221]
[-196.89376831 418.38290405]
[-204.64738464 405.47183228]
[-209.44378662 391.19567871]
[-211.05865479 376.22213745]
[-209.41644287 361.25161743]
[-204.59399414 346.98422241]
[-196.81681824 334.08734131]
[-186.44869995 323.16415405]
[-173.97456360 314.72555542]
[-159.97784424 309.16622925]
[-145.11320496 306.74621582]
[-130.07588196 307.57867432]
[-115.56920624 311.62469482]
[-102.27166748 318.69503784]
[-92.55181885 307.27029419]
[-82.83196259 295.84558105]
[-73.11211395 284.42083740]
[-63.39225769 272.99612427]
[-61.03821564 258.28869629]
[-46.20273209 252.79151917]
[-36.48287964 241.36679077]
[-26.76302719 229.94206238]
[-29.13524055 222.82710266]
[-43.14252090 228.19329834]
[-57.14980316 233.55949402]
[-69.86087036 241.52371216]
[-81.83763123 232.49281311]
[-77.67672729 218.08146667]
[-62.72958755 216.82411194]
[-48.30462646 212.71064758]
[-33.87966919 208.59719849]
[-36.25188446 201.48223877]
[-50.88307571 198.17645264]
[-66.37388611 203.55851746]
[-78.60166931 192.63087463]
[-74.98752594 176.63493347]
[-59.24938202 172.02595520]
[-47.57728577 183.54525757]
[-32.94609451 186.85104370]
[-18.31490326 183.54525757]
[-6.52625990 174.27012634]
[5.26238346 164.99501038]
[17.05102730 155.71989441]
[28.83967018 146.44476318]
[40.62831116 137.16964722]
[52.41695404 127.89452362]
[64.20559692 118.61940002]
[55.26861572 80.31936646]
[85.12554169 44.56964111]
[77.26358032 31.79507637]
[70.09703827 26.12342834]
[69.38074493 18.76395988]
[61.71546936 5.87041664]
[54.05018616 -7.02312756]
[46.38490677 -19.91667175]
[38.71962738 -32.81021500]
[23.43916321 -31.93499184]
[9.50704575 -38.27176285]
[0.12477250 -50.36438751]
[-2.55167890 -65.43406677]
[2.09272075 -80.01789856]
[12.99072266 -90.76462555]
[27.63804626 -95.20472717]
[42.66884232 -92.31790161]
[54.62914276 -82.76752472]
[60.77056503 -68.74819946]
[59.68184662 -53.48146057]
[51.61317062 -40.47549438]
[59.27845383 -27.58195114]
[66.94373322 -14.68840790]
[74.60900879 -1.79486358]
[82.27429199 11.09868050]
[90.03813934 23.93311119]
[97.90010834 36.70767593]
[112.72431183 34.41793823]
[116.36553192 19.86659622]
[120.00675201 5.31525612]
[123.64796448 -9.23608494]
[127.28918457 -23.78742599]
[130.93040466 -38.33876801]
[134.57162476 -52.89011002]
[138.21284485 -67.44145203]
[127.11803436 -78.06221771]
[122.83543396 -92.81196594]
[126.51705170 -107.72307587]
[137.17254639 -118.78453827]
[151.93563843 -123.02088165]
[166.83514404 -119.29254150]
[177.86315918 -108.60243225]
[182.05319214 -93.82612610]
[178.27816772 -78.93838501]
[167.55354309 -67.94393921]
[152.76419067 -63.80023193]
[149.12297058 -49.24888992]
[145.48175049 -34.69754791]
[141.84053040 -20.14620781]
[138.19931030 -5.59486675]
[134.55809021 8.95647430]
[130.91687012 23.50781631]
[127.27565765 38.05915833]
[140.16920471 45.72443771]
[151.21324158 35.57411957]
[162.25729370 25.42379951]
[173.30134583 15.27347946]
[177.69039917 -0.52741379]
[193.63438416 -4.36428070]
[204.73149109 7.70991850]
[199.56596375 23.27428246]
[183.45166016 26.31752968]
[172.40760803 36.46784973]
[161.36357117 46.61816788]
[150.31951904 56.76848602]
[155.71292114 70.76531982]
[170.71247864 70.88024902]
[185.71203613 70.99518585]
[194.32215881 67.93046570]
[200.94012451 71.22856903]
[215.93615723 71.57334900]
[230.93218994 71.91812897]
[245.92822266 72.26290894]
[260.92425537 72.60768890]
[270.99209595 59.01879120]
[287.01614380 54.15500641]
[302.62582397 59.74304962]
[311.73803711 73.39492035]
[326.73757935 73.50985718]
[341.73715210 73.62479401]
[356.73669434 73.73973083]
[371.73626709 73.85466766]
[387.62127686 67.92987061]
[397.71191406 81.55392456]
[387.41366577 95.02175140]
[371.62133789 88.85422516]
[356.62176514 88.73928833]
[341.62222290 88.62435150]
[326.62265015 88.50942230]
[311.62310791 88.39448547]
[304.72219849 99.82646179]
[292.97888184 106.40745544]
[279.40924072 106.32458496]
[267.55957031 99.49252319]
[260.57949829 87.60372162]
[245.58345032 87.25894928]
[230.58741760 86.91416931]
[215.59136963 86.56938934]
[200.59533691 86.22460938]
[185.59710693 85.99474335]
[170.59753418 85.87981415]
[155.59797668 85.76487732]
[147.97958374 109.28351593]
[132.53266907 123.86517334]
[142.76731873 134.83113098]
[153.00195312 145.79707336]
[163.23660278 156.76303101]
[179.03814697 157.05731201]
[189.94311523 168.49659729]
[189.48178101 184.29414368]
[177.92785645 195.07756042]
[162.13606262 194.44923401]
[151.47540283 182.78193665]
[152.27064514 166.99766541]
[142.03601074 156.03172302]
[131.80136108 145.06576538]
[121.56671906 134.09982300]
[115.00036621 137.45544434]
[107.93296051 139.55995178]
[100.60057831 140.34303284]
[93.24813080 139.77854919]
[86.12120819 137.88536072]
[79.45788574 134.72668457]
[73.48072052 130.40803528]
[61.69207764 139.68316650]
[49.90343475 148.95828247]
[38.11479187 158.23341370]
[26.32614899 167.50852966]
[14.53750610 176.78366089]
[2.74886250 186.05877686]
[-9.03978062 195.33389282]
[-4.19177389 201.65890503]
[-1.65302050 210.32025146]
[-2.36233926 220.40646362]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[55 62]
[56 61]
[63 201]
[64 200]
[65 199]
[66 198]
[67 197]
[68 196]
[69 195]
[70 194]
[72 97]
[73 96]
[75 95]
[76 94]
[77 93]
[78 92]
[79 91]
[98 123]
[99 122]
[100 121]
[101 120]
[102 119]
[103 118]
[104 117]
[105 116]
[124 135]
[125 134]
[126 133]
[127 132]
[136 172]
[137 171]
[138 170]
[140 169]
[141 168]
[142 167]
[143 166]
[144 165]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
[174 187]
[175 186]
[176 185]
[177 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
