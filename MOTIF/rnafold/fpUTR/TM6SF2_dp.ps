%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TM6SF2)
} def

/sequence { (\
GCGCCCUGGAGAACGCGUCGGGGCUGAGCCGGGGUCCAGCAGCCGCCGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.043426665 ubox
1 18 0.036627132 ubox
1 24 0.020293427 ubox
1 29 0.204169814 ubox
1 40 0.101509484 ubox
1 43 0.013981158 ubox
1 46 0.045129029 ubox
1 49 0.059992785 ubox
2 8 0.006304340 ubox
2 15 0.043460526 ubox
2 17 0.040082521 ubox
2 23 0.019638050 ubox
2 26 0.279884773 ubox
2 28 0.204599021 ubox
2 39 0.101527561 ubox
2 42 0.014021159 ubox
2 45 0.045266666 ubox
2 48 0.059395534 ubox
3 7 0.003925924 ubox
3 14 0.042887060 ubox
3 16 0.040490892 ubox
3 24 0.985614239 ubox
3 25 0.060282930 ubox
3 35 0.114212626 ubox
3 40 0.003763814 ubox
3 43 0.029454525 ubox
3 44 0.034581678 ubox
3 46 0.008218114 ubox
3 47 0.019828893 ubox
4 15 0.040380976 ubox
4 21 0.007580970 ubox
4 22 0.017442967 ubox
4 23 0.988515170 ubox
4 34 0.117311353 ubox
4 39 0.003326564 ubox
4 42 0.040607350 ubox
4 45 0.011491581 ubox
5 20 0.007549325 ubox
5 21 0.017471593 ubox
5 22 0.988519210 ubox
5 23 0.015860608 ubox
5 33 0.117352913 ubox
6 20 0.017424590 ubox
6 21 0.988482459 ubox
6 22 0.017708925 ubox
6 32 0.117355139 ubox
6 39 0.047277850 ubox
6 42 0.006226026 ubox
7 15 0.009034898 ubox
7 17 0.010614383 ubox
7 20 0.985893804 ubox
7 21 0.019277216 ubox
7 31 0.117266867 ubox
7 38 0.047549501 ubox
7 41 0.006226890 ubox
7 45 0.003275384 ubox
8 14 0.025225319 ubox
8 16 0.017961247 ubox
8 19 0.978971303 ubox
8 30 0.117351576 ubox
8 37 0.047596537 ubox
8 40 0.006197417 ubox
8 44 0.003527618 ubox
9 18 0.918619420 ubox
9 19 0.128680552 ubox
9 29 0.117286898 ubox
9 36 0.047591290 ubox
9 43 0.003519134 ubox
10 18 0.169343347 ubox
10 25 0.004548173 ubox
10 35 0.040234733 ubox
11 19 0.027542815 ubox
11 24 0.004434523 ubox
12 18 0.028836994 ubox
14 20 0.005698302 ubox
14 26 0.031947577 ubox
14 31 0.032071517 ubox
15 19 0.005497982 ubox
15 24 0.116582569 ubox
15 25 0.008717727 ubox
15 29 0.007589657 ubox
15 30 0.031454349 ubox
15 35 0.026034687 ubox
15 49 0.049265784 ubox
16 23 0.116910145 ubox
16 28 0.009983513 ubox
16 34 0.034951181 ubox
16 48 0.049328852 ubox
17 24 0.006314934 ubox
17 29 0.007369602 ubox
17 46 0.003862106 ubox
17 47 0.049215454 ubox
17 49 0.036708567 ubox
18 23 0.006017143 ubox
18 27 0.031998428 ubox
18 28 0.004340027 ubox
18 32 0.035039682 ubox
18 48 0.008047190 ubox
19 26 0.032287962 ubox
19 31 0.035404651 ubox
19 45 0.049443417 ubox
19 48 0.057420303 ubox
20 25 0.024602978 ubox
20 30 0.035239907 ubox
20 44 0.049549722 ubox
20 47 0.059742251 ubox
21 29 0.035111613 ubox
21 30 0.003978051 ubox
21 43 0.049521325 ubox
21 46 0.059699370 ubox
22 29 0.004751788 ubox
22 30 0.003505501 ubox
22 44 0.059848752 ubox
23 29 0.003811799 ubox
23 40 0.049711699 ubox
23 43 0.059919734 ubox
24 28 0.003985251 ubox
24 39 0.049762439 ubox
24 42 0.059922166 ubox
25 38 0.049866056 ubox
25 41 0.058137424 ubox
25 48 0.016275568 ubox
26 30 0.005814137 ubox
26 36 0.005027614 ubox
26 37 0.049640028 ubox
26 40 0.046057499 ubox
26 47 0.024255182 ubox
27 35 0.006645705 ubox
27 50 0.839783174 ubox
28 35 0.047920418 ubox
28 40 0.044863061 ubox
28 46 0.029978605 ubox
28 49 0.918822261 ubox
29 34 0.048572465 ubox
29 39 0.048582501 ubox
29 45 0.023241724 ubox
29 48 0.654451972 ubox
30 45 0.059156153 ubox
30 48 0.731865796 ubox
31 37 0.061684622 ubox
31 44 0.063215095 ubox
31 47 0.981597160 ubox
31 50 0.003771070 ubox
32 36 0.060755639 ubox
32 43 0.063130757 ubox
32 44 0.015302896 ubox
32 46 0.980974075 ubox
32 47 0.006724071 ubox
32 49 0.004178585 ubox
33 43 0.015632242 ubox
33 44 0.985214632 ubox
33 46 0.006321388 ubox
33 47 0.009010878 ubox
33 50 0.003337072 ubox
34 40 0.042779495 ubox
34 43 0.986032393 ubox
34 46 0.009029738 ubox
34 49 0.003674089 ubox
35 39 0.040208700 ubox
35 42 0.956192303 ubox
35 45 0.008771642 ubox
35 48 0.003663515 ubox
38 50 0.030035106 ubox
39 46 0.028206594 ubox
39 49 0.033345100 ubox
40 45 0.028249808 ubox
40 48 0.033341329 ubox
41 50 0.090053086 ubox
42 49 0.099959199 ubox
43 48 0.099727780 ubox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
showpage
end
%%EOF
