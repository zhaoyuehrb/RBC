%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCGGAGCCGCGGUGUACAACGGAACUUGUAGUCUCCUCGUGGCUAGUUCAGGCGGAAGGAGCAGUCCUCUGAAGCUUGAGGAGCCUCUAGAACUAUGAGCCCGAGGCCUUCCCCUCUCCCAGAGCGCAGAGGCUUUGAAGGCUACCUCUGGGAAGCCGCUCACCGUCGGAAGCUGCGGGAGCUGAAACUGCGCCAUCGUCACUGUCGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[35.04004288 848.44482422]
[27.28428078 833.99560547]
[36.14864731 820.19873047]
[36.36580276 805.20025635]
[36.58295441 790.20184326]
[34.40568161 787.43383789]
[33.45855331 783.47515869]
[34.28594589 778.91436768]
[37.14931107 774.56066895]
[38.01746750 759.58581543]
[38.88562775 744.61096191]
[39.75378418 729.63610840]
[40.51352310 714.65533447]
[41.16479874 699.66949463]
[41.81607819 684.68365479]
[42.46735382 669.69781494]
[43.11863327 654.71191406]
[40.26991272 647.89605713]
[43.88936996 639.51428223]
[44.75752640 624.53942871]
[33.13665009 615.26080322]
[29.16070366 600.74682617]
[34.55659103 586.50823975]
[47.45100403 578.07965088]
[48.31916046 563.10479736]
[46.56253433 560.92572021]
[45.56124878 557.92102051]
[45.63349533 554.37420654]
[46.98933029 550.67852783]
[49.69583511 547.29614258]
[51.42924118 532.39660645]
[53.16264343 517.49713135]
[54.89604950 502.59759521]
[56.62945557 487.69808960]
[58.36285782 472.79858398]
[59.55598068 457.84609985]
[60.20726013 442.86026001]
[60.85853577 427.87442017]
[61.50981522 412.88854980]
[58.66109848 406.07266235]
[62.28055191 397.69091797]
[63.14870834 382.71606445]
[64.01686859 367.74121094]
[64.88502502 352.76635742]
[65.75318146 337.79150391]
[66.62133789 322.81665039]
[67.48949432 307.84179688]
[65.43446350 304.98184204]
[64.66010284 300.98577881]
[65.68473816 296.46524048]
[68.73443604 292.23995972]
[70.25196075 277.31689453]
[63.84195328 263.87216187]
[72.93569946 250.92556763]
[74.45322418 236.00253296]
[75.97074890 221.07948303]
[77.48827362 206.15644836]
[79.00579834 191.23341370]
[71.86559296 183.93147278]
[69.87915802 173.69006348]
[73.93875122 163.84219360]
[82.92819214 157.72865295]
[84.87711334 142.85580444]
[86.82603455 127.98294830]
[88.77495575 113.11009979]
[67.65895844 77.33917236]
[64.63948059 62.64622116]
[59.84866714 54.87435532]
[61.68426132 47.71877670]
[58.87780762 32.98365402]
[56.07135391 18.24853325]
[53.26490402 3.51341057]
[50.45845032 -11.22171116]
[47.65199661 -25.95683289]
[37.44662476 -33.83955765]
[35.41052246 -46.16701126]
[42.09683990 -56.24428558]
[39.50399780 -71.01849365]
[36.91115952 -85.79270172]
[34.31831741 -100.56690979]
[21.66333008 -109.64925385]
[19.24428558 -124.66933441]
[27.98090744 -136.67796326]
[25.38806534 -151.45216370]
[22.79522514 -166.22637939]
[19.24605179 -180.80044556]
[14.75560570 -195.11253357]
[10.26515865 -209.42462158]
[5.77471209 -223.73670959]
[1.28426516 -238.04879761]
[-13.86277008 -239.01406860]
[-27.63661766 -245.38946533]
[-38.17447662 -256.31274414]
[-44.05119324 -270.30661011]
[-44.47198105 -285.47854614]
[-39.37994003 -299.77664185]
[-29.46372414 -311.26721191]
[-16.06441879 -318.39624023]
[-0.99417102 -320.19958496]
[13.70889187 -316.43338013]
[26.05630112 -307.60693359]
[34.37817001 -294.91400146]
[37.54903793 -280.07113647]
[35.14006805 -265.08578491]
[27.47705269 -251.98452759]
[15.59635353 -242.53924561]
[20.08680153 -228.22715759]
[24.57724762 -213.91506958]
[29.06769371 -199.60298157]
[33.55813980 -185.29089355]
[38.88977432 -199.31135559]
[50.89331818 -208.30664062]
[65.84676361 -209.48750305]
[79.11341858 -202.48779297]
[86.57961273 -189.47795105]
[85.93025970 -174.49200439]
[77.36671448 -162.17674255]
[63.54431915 -156.35081482]
[48.74906158 -158.82070923]
[37.56943130 -168.81921387]
[40.16227341 -154.04501343]
[42.75511169 -139.27079773]
[55.05868149 -130.95468140]
[57.89865494 -116.00847626]
[49.09252548 -103.15974426]
[51.68536377 -88.38554382]
[54.27820587 -73.61133575]
[56.87104416 -58.83712769]
[68.84877014 -46.00872040]
[62.38711929 -28.76328659]
[65.19357300 -14.02816486]
[68.00002289 0.70695734]
[70.80648041 15.44207954]
[73.61293030 30.17720222]
[76.41938782 44.91232300]
[79.33242798 59.62674332]
[82.35190582 74.31969452]
[88.85612488 78.05400848]
[91.93941498 63.37431717]
[106.85341644 61.77045059]
[112.98744965 75.45890045]
[101.86456299 85.52264404]
[108.36878204 89.25695801]
[122.57999420 84.45679474]
[136.79119873 79.65663147]
[151.00241089 74.85646057]
[161.60086060 63.10982895]
[176.13487244 66.36738586]
[190.34608459 61.56722260]
[200.76519775 48.90333939]
[216.89540100 51.86116791]
[222.14331055 67.39794159]
[211.11033630 79.53076935]
[195.14624023 75.77842712]
[180.93504333 80.57859039]
[171.35307312 91.98188782]
[155.80256653 89.06767273]
[141.59136963 93.86783600]
[127.38015747 98.66799927]
[113.16895294 103.46817017]
[103.64780426 115.05902100]
[101.69888306 129.93186951]
[99.74996185 144.80471802]
[97.80104065 159.67756653]
[106.35620880 177.93379211]
[93.92884064 192.75093079]
[92.41131592 207.67398071]
[90.89378357 222.59701538]
[89.37625885 237.52005005]
[87.85873413 252.44309998]
[94.16020203 266.95523071]
[85.17500305 278.83444214]
[83.65747833 293.75747681]
[82.46435547 308.70996094]
[81.59619904 323.68481445]
[80.72803497 338.65966797]
[79.85987854 353.63452148]
[78.99172211 368.60937500]
[78.12356567 383.58422852]
[77.25540924 398.55908203]
[76.49566650 413.53982544]
[75.84439087 428.52569580]
[75.19311523 443.51153564]
[74.54183960 458.49740601]
[87.18014526 450.41821289]
[101.42391205 455.12088013]
[106.76736450 469.13684082]
[99.26934052 482.12835693]
[84.46015167 484.51327515]
[73.26236725 474.53198242]
[71.52896118 489.43148804]
[69.79555511 504.33099365]
[68.06214905 519.23052979]
[66.32875061 534.13000488]
[64.59534454 549.02954102]
[63.29401398 563.97296143]
[62.42585754 578.94781494]
[74.25988007 588.80999756]
[77.97419739 603.57672119]
[72.34764862 617.53405762]
[59.73238373 625.40759277]
[58.86422348 640.38244629]
[58.10448837 655.36322021]
[57.45320892 670.34906006]
[56.80193329 685.33489990]
[56.15065384 700.32080078]
[55.49937820 715.30664062]
[58.25229645 724.01153564]
[54.72864151 730.50427246]
[53.86048126 745.47912598]
[52.99232483 760.45397949]
[52.12416840 775.42883301]
[51.58138275 790.41900635]
[51.36423111 805.41741943]
[51.14707565 820.41583252]
[59.60829926 834.46362305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 215]
[4 214]
[5 213]
[9 212]
[10 211]
[11 210]
[12 209]
[13 207]
[14 206]
[15 205]
[16 204]
[17 203]
[19 202]
[20 201]
[24 197]
[25 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[36 184]
[37 183]
[38 182]
[39 181]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[51 173]
[52 172]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[62 164]
[63 163]
[64 162]
[65 161]
[66 137]
[67 136]
[69 135]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[77 128]
[78 127]
[79 126]
[80 125]
[83 122]
[84 121]
[85 120]
[86 110]
[87 109]
[88 108]
[89 107]
[90 106]
[143 160]
[144 159]
[145 158]
[146 157]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
