%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SOHLH1)
} def

/sequence { (\
GGGGGCGGGGCUGCCUGCGGAAGGGGCCGUGCGCGUGGGGUCGCUCCGCAGCUGCGAGUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.008997329 ubox
1 15 0.137427984 ubox
1 16 0.008266035 ubox
1 47 0.004213262 ubox
1 53 0.045761124 ubox
1 60 0.014710104 ubox
1 61 0.189264400 ubox
2 11 0.010226695 ubox
2 12 0.006531398 ubox
2 14 0.144072061 ubox
2 15 0.010519917 ubox
2 16 0.004239234 ubox
2 46 0.004303614 ubox
2 47 0.006895578 ubox
2 52 0.048404631 ubox
2 53 0.020676711 ubox
2 59 0.017937864 ubox
2 60 0.197145898 ubox
2 61 0.114373882 ubox
3 11 0.007277737 ubox
3 12 0.011087316 ubox
3 14 0.010756349 ubox
3 15 0.004500606 ubox
3 16 0.048238115 ubox
3 45 0.003792027 ubox
3 46 0.007107860 ubox
3 52 0.021693355 ubox
3 53 0.005951528 ubox
3 59 0.190956756 ubox
3 60 0.112334861 ubox
3 61 0.770792011 ubox
4 11 0.012312179 ubox
4 12 0.146649306 ubox
4 14 0.003646181 ubox
4 15 0.060000085 ubox
4 45 0.006869930 ubox
4 52 0.006140368 ubox
4 53 0.006512527 ubox
4 59 0.106355831 ubox
4 60 0.813477185 ubox
4 61 0.045903071 ubox
5 11 0.147861429 ubox
5 14 0.061520546 ubox
5 18 0.035082893 ubox
5 32 0.085915758 ubox
5 44 0.006311041 ubox
5 49 0.060007583 ubox
5 52 0.006788064 ubox
5 55 0.093769280 ubox
5 59 0.834997843 ubox
5 60 0.039481227 ubox
6 10 0.146799086 ubox
6 13 0.061569484 ubox
6 17 0.035130274 ubox
6 31 0.086104680 ubox
6 43 0.006316719 ubox
6 48 0.060045351 ubox
6 51 0.006766155 ubox
6 54 0.093841831 ubox
6 56 0.316039249 ubox
6 58 0.837112492 ubox
7 12 0.046911846 ubox
7 15 0.005797421 ubox
7 16 0.035535653 ubox
7 30 0.085812483 ubox
7 42 0.006136508 ubox
7 47 0.060050727 ubox
7 53 0.092130794 ubox
7 55 0.322148331 ubox
7 60 0.007823485 ubox
7 61 0.041948031 ubox
8 14 0.005986290 ubox
8 15 0.035941925 ubox
8 41 0.005160615 ubox
8 46 0.060050144 ubox
8 52 0.090213177 ubox
8 53 0.007046290 ubox
8 59 0.007377087 ubox
8 60 0.037762425 ubox
8 61 0.325797832 ubox
9 14 0.037842301 ubox
9 15 0.005953639 ubox
9 28 0.086501883 ubox
9 45 0.059983261 ubox
9 52 0.009122716 ubox
9 53 0.322737066 ubox
9 59 0.032124089 ubox
9 60 0.344048598 ubox
9 61 0.014467156 ubox
10 14 0.006326391 ubox
10 27 0.086510291 ubox
10 44 0.060020276 ubox
10 52 0.323593801 ubox
10 55 0.847283558 ubox
10 59 0.353438427 ubox
10 60 0.010924455 ubox
11 26 0.086498795 ubox
11 38 0.003872951 ubox
11 43 0.059965894 ubox
11 51 0.312196393 ubox
11 54 0.845709539 ubox
11 58 0.354923459 ubox
12 25 0.077702075 ubox
12 35 0.006187139 ubox
12 37 0.003663776 ubox
12 50 0.265481391 ubox
12 54 0.010970460 ubox
12 56 0.176098162 ubox
12 57 0.308355759 ubox
13 34 0.009983058 ubox
13 41 0.057120816 ubox
13 42 0.005115382 ubox
13 49 0.209788176 ubox
13 52 0.828373350 ubox
13 53 0.061559042 ubox
13 55 0.354922535 ubox
14 24 0.086169826 ubox
14 25 0.007543304 ubox
14 33 0.009988808 ubox
14 38 0.004531091 ubox
14 39 0.014393169 ubox
14 40 0.057307380 ubox
14 48 0.191704129 ubox
14 51 0.588859141 ubox
14 54 0.353748856 ubox
15 23 0.086490319 ubox
15 24 0.007824398 ubox
15 37 0.004578416 ubox
15 38 0.016256117 ubox
15 39 0.056801819 ubox
15 51 0.718943528 ubox
16 22 0.086105846 ubox
16 23 0.007695664 ubox
16 31 0.014188405 ubox
16 33 0.003369583 ubox
16 35 0.013821487 ubox
16 37 0.017634457 ubox
16 38 0.053240957 ubox
16 50 0.951611772 ubox
17 30 0.051101044 ubox
17 32 0.005792471 ubox
17 34 0.027312516 ubox
17 36 0.017848291 ubox
17 44 0.004000462 ubox
17 47 0.004469730 ubox
17 49 0.971269776 ubox
18 29 0.051516033 ubox
18 31 0.005457590 ubox
18 33 0.027262829 ubox
18 35 0.018633198 ubox
18 43 0.004004267 ubox
18 48 0.974994194 ubox
19 28 0.052033189 ubox
19 32 0.026874270 ubox
19 34 0.018459624 ubox
19 42 0.003798152 ubox
19 46 0.003962619 ubox
19 47 0.993610353 ubox
20 27 0.051942491 ubox
20 41 0.003308670 ubox
20 46 0.993563201 ubox
20 61 0.003627242 ubox
21 45 0.705163544 ubox
21 60 0.003660071 ubox
22 45 0.696942038 ubox
22 59 0.003466566 ubox
23 42 0.004093312 ubox
23 44 0.987130049 ubox
23 45 0.016848359 ubox
23 47 0.004285377 ubox
23 61 0.004808794 ubox
24 42 0.095699529 ubox
24 44 0.028271385 ubox
24 46 0.004293352 ubox
24 60 0.004648564 ubox
24 61 0.031084210 ubox
25 41 0.093191480 ubox
25 42 0.988509321 ubox
25 45 0.004277018 ubox
25 59 0.004363151 ubox
25 60 0.032820006 ubox
26 32 0.003920347 ubox
26 34 0.003472492 ubox
26 41 0.988832945 ubox
26 44 0.004308070 ubox
26 55 0.003863454 ubox
26 59 0.033724622 ubox
27 31 0.003916160 ubox
27 33 0.003502205 ubox
27 38 0.014186430 ubox
27 39 0.096175890 ubox
27 40 0.988938185 ubox
27 43 0.003818409 ubox
27 54 0.003800506 ubox
27 58 0.033860427 ubox
28 35 0.010418900 ubox
28 37 0.016845060 ubox
28 38 0.099459938 ubox
28 39 0.988433374 ubox
28 56 0.034049582 ubox
29 34 0.023301701 ubox
29 36 0.019867279 ubox
29 55 0.034107218 ubox
30 35 0.019959868 ubox
30 37 0.831071004 ubox
30 54 0.033385259 ubox
30 56 0.007124286 ubox
31 36 0.424804863 ubox
31 41 0.003928416 ubox
31 44 0.004746543 ubox
31 52 0.025458282 ubox
31 53 0.020972952 ubox
31 55 0.012569025 ubox
32 40 0.004036532 ubox
32 43 0.004759895 ubox
32 51 0.025647418 ubox
32 54 0.012611232 ubox
32 56 0.005119439 ubox
33 41 0.003777391 ubox
33 42 0.004762708 ubox
33 44 0.014628492 ubox
33 49 0.027368366 ubox
33 52 0.078522793 ubox
33 53 0.003792998 ubox
33 55 0.018008492 ubox
33 59 0.015540396 ubox
34 40 0.005979711 ubox
34 43 0.014783552 ubox
34 48 0.027419253 ubox
34 51 0.078625805 ubox
34 54 0.018011630 ubox
34 56 0.003632677 ubox
34 58 0.016207800 ubox
35 42 0.014723265 ubox
35 47 0.027360274 ubox
35 49 0.083771202 ubox
35 52 0.006256443 ubox
35 53 0.008518310 ubox
35 55 0.003662461 ubox
36 48 0.084064024 ubox
36 50 0.016408076 ubox
36 51 0.003958251 ubox
36 54 0.003564324 ubox
36 56 0.016068016 ubox
37 45 0.004192595 ubox
37 46 0.027116030 ubox
37 47 0.084289675 ubox
37 49 0.017450602 ubox
37 55 0.016372890 ubox
37 61 0.012052258 ubox
38 44 0.004376144 ubox
38 45 0.027122221 ubox
38 46 0.084278921 ubox
38 47 0.004675352 ubox
38 60 0.012704344 ubox
39 44 0.030820321 ubox
39 45 0.082449212 ubox
39 46 0.004783197 ubox
39 47 0.017245979 ubox
39 53 0.016384840 ubox
39 59 0.012919731 ubox
40 44 0.080677465 ubox
40 45 0.003561914 ubox
40 46 0.017227746 ubox
40 52 0.016442776 ubox
41 51 0.016333456 ubox
41 57 0.013191508 ubox
42 56 0.013223904 ubox
43 49 0.016327918 ubox
43 55 0.013220320 ubox
43 59 0.005782806 ubox
44 48 0.016221463 ubox
44 54 0.013215428 ubox
44 58 0.006129842 ubox
45 57 0.006602803 ubox
46 56 0.004760384 ubox
47 56 0.013607975 ubox
48 55 0.017045991 ubox
49 54 0.017029617 ubox
50 60 0.046655459 ubox
51 59 0.076909238 ubox
52 58 0.078900954 ubox
53 57 0.071109965 ubox
3 61 0.9500000 lbox
4 60 0.9500000 lbox
5 59 0.9500000 lbox
6 58 0.9500000 lbox
10 55 0.9500000 lbox
11 54 0.9500000 lbox
13 52 0.9500000 lbox
14 51 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
showpage
end
%%EOF
