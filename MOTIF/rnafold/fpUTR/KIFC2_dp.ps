%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIFC2)
} def

/sequence { (\
GGCACUGCGGCGGGCGGGCGCCGAGUCUGGGCGCGGGGACGCGGGGCGGCGCGAAGCGGGGCCCUCUGCCGCCCCGCGCUCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.126709646 ubox
1 27 0.062919354 ubox
1 28 0.329011741 ubox
1 82 0.009522558 ubox
1 83 0.029690063 ubox
2 8 0.016424524 ubox
2 11 0.029884240 ubox
2 15 0.114390911 ubox
2 19 0.079538999 ubox
2 21 0.126802091 ubox
2 26 0.055307131 ubox
2 27 0.348282732 ubox
2 32 0.053801599 ubox
2 34 0.062170677 ubox
2 81 0.007059706 ubox
2 82 0.022475188 ubox
3 7 0.016384151 ubox
3 10 0.029880474 ubox
3 14 0.114405520 ubox
3 18 0.081291900 ubox
3 20 0.126646780 ubox
3 25 0.052592517 ubox
3 29 0.013177613 ubox
3 31 0.053815854 ubox
3 33 0.062179683 ubox
4 26 0.392516781 ubox
4 28 0.010769573 ubox
5 13 0.114163103 ubox
5 14 0.005568615 ubox
5 17 0.899175556 ubox
5 18 0.028772193 ubox
5 25 0.399502192 ubox
5 30 0.022404407 ubox
5 31 0.054665201 ubox
5 36 0.016702753 ubox
6 12 0.113944051 ubox
6 13 0.005752070 ubox
6 16 0.901140344 ubox
6 17 0.021104436 ubox
6 24 0.398708663 ubox
6 29 0.021946603 ubox
6 30 0.054128130 ubox
6 35 0.018614840 ubox
7 11 0.108583786 ubox
7 15 0.903276696 ubox
7 26 0.006492756 ubox
7 28 0.019296385 ubox
7 34 0.021411228 ubox
8 14 0.903173816 ubox
8 16 0.019041569 ubox
8 23 0.404568917 ubox
8 25 0.005715972 ubox
8 29 0.011432317 ubox
8 33 0.021407566 ubox
8 35 0.003751850 ubox
9 15 0.019368952 ubox
9 22 0.406532849 ubox
9 27 0.054236290 ubox
9 28 0.010189241 ubox
9 32 0.020356805 ubox
10 21 0.406543461 ubox
10 26 0.054406209 ubox
10 27 0.010138021 ubox
10 32 0.006560519 ubox
10 34 0.019445614 ubox
11 18 0.003420597 ubox
11 20 0.406537156 ubox
11 25 0.055065503 ubox
11 29 0.015449268 ubox
11 31 0.009063977 ubox
11 33 0.019627927 ubox
12 19 0.405419013 ubox
12 28 0.015529534 ubox
12 32 0.019493320 ubox
13 22 0.055247610 ubox
13 27 0.015541770 ubox
14 21 0.055329918 ubox
14 26 0.015274171 ubox
15 20 0.055264844 ubox
15 23 0.006188786 ubox
15 25 0.014662845 ubox
15 29 0.024389285 ubox
15 35 0.005609976 ubox
16 22 0.009294761 ubox
16 28 0.024855398 ubox
16 34 0.007455617 ubox
17 21 0.009171231 ubox
17 27 0.024924863 ubox
18 26 0.024929810 ubox
18 32 0.011547528 ubox
18 34 0.897986888 ubox
19 25 0.024937749 ubox
19 31 0.011547389 ubox
19 33 0.898930588 ubox
20 32 0.902355475 ubox
21 30 0.051687778 ubox
21 31 0.900995676 ubox
21 36 0.005533960 ubox
22 29 0.071805501 ubox
22 30 0.899503888 ubox
22 35 0.006263077 ubox
23 28 0.066666514 ubox
23 34 0.009296055 ubox
25 32 0.011260922 ubox
25 34 0.006556891 ubox
26 31 0.010737483 ubox
26 33 0.006333786 ubox
27 36 0.010447546 ubox
28 35 0.012258132 ubox
29 34 0.018044223 ubox
29 80 0.003654664 ubox
29 81 0.362430355 ubox
29 82 0.190903812 ubox
29 83 0.022405751 ubox
30 80 0.368708443 ubox
30 81 0.190849643 ubox
30 82 0.021759807 ubox
31 79 0.415800997 ubox
31 80 0.021238733 ubox
31 81 0.014995590 ubox
32 78 0.416615050 ubox
33 77 0.416627979 ubox
34 76 0.416627997 ubox
35 75 0.416626030 ubox
35 81 0.006655575 ubox
35 82 0.579665014 ubox
35 83 0.477630638 ubox
36 74 0.416632110 ubox
36 80 0.006456530 ubox
36 81 0.581050251 ubox
36 82 0.480052535 ubox
36 83 0.501030218 ubox
37 73 0.416630751 ubox
37 79 0.006829928 ubox
37 80 0.580865807 ubox
37 81 0.478958563 ubox
37 82 0.508061685 ubox
37 83 0.003688627 ubox
38 72 0.416527465 ubox
38 79 0.602529294 ubox
38 80 0.421683568 ubox
38 81 0.508919580 ubox
38 82 0.003347071 ubox
39 80 0.508081834 ubox
40 68 0.019940612 ubox
40 71 0.210207728 ubox
40 78 0.908346317 ubox
41 67 0.019807309 ubox
41 69 0.387534043 ubox
41 70 0.150319504 ubox
41 77 0.909053216 ubox
42 68 0.414607930 ubox
42 76 0.909055511 ubox
43 65 0.135876281 ubox
43 66 0.077749288 ubox
43 67 0.381892442 ubox
43 75 0.909053216 ubox
44 64 0.181282675 ubox
44 65 0.012904829 ubox
44 66 0.374748444 ubox
44 67 0.005295259 ubox
44 74 0.909068264 ubox
45 63 0.186401217 ubox
45 64 0.022681779 ubox
45 65 0.371537876 ubox
45 66 0.005767798 ubox
45 73 0.909068296 ubox
46 62 0.187116111 ubox
46 63 0.017507132 ubox
46 64 0.371549627 ubox
46 65 0.005777420 ubox
46 72 0.909068985 ubox
47 61 0.187423432 ubox
47 71 0.909056265 ubox
48 63 0.371526005 ubox
48 64 0.009186495 ubox
48 70 0.909034431 ubox
49 57 0.039102305 ubox
49 62 0.371552655 ubox
49 63 0.010002751 ubox
49 69 0.908958925 ubox
50 56 0.039273927 ubox
50 58 0.188160359 ubox
50 61 0.368724407 ubox
50 68 0.908656050 ubox
51 57 0.226931239 ubox
51 62 0.288738933 ubox
51 67 0.799772753 ubox
51 69 0.005369320 ubox
52 56 0.225381585 ubox
52 58 0.260720356 ubox
52 61 0.291322585 ubox
52 68 0.007236571 ubox
53 57 0.244674054 ubox
53 66 0.722331536 ubox
53 67 0.011706666 ubox
54 65 0.699045064 ubox
55 65 0.137197460 ubox
55 67 0.215598437 ubox
56 62 0.675955535 ubox
56 64 0.174087443 ubox
56 66 0.249512801 ubox
56 69 0.011450653 ubox
57 61 0.672113753 ubox
57 68 0.015632114 ubox
58 64 0.394052007 ubox
58 65 0.057830579 ubox
58 66 0.096035230 ubox
58 67 0.048956756 ubox
59 63 0.388262394 ubox
59 64 0.072918562 ubox
59 65 0.095930530 ubox
59 66 0.054344695 ubox
59 67 0.029690375 ubox
60 64 0.094771645 ubox
60 65 0.042540873 ubox
60 66 0.032860042 ubox
60 67 0.010730119 ubox
60 70 0.005260747 ubox
61 65 0.021346779 ubox
61 66 0.011586764 ubox
61 69 0.005493949 ubox
62 68 0.005557601 ubox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
35 82 0.9500000 lbox
36 81 0.9500000 lbox
37 80 0.9500000 lbox
38 79 0.9500000 lbox
40 78 0.9500000 lbox
41 77 0.9500000 lbox
42 76 0.9500000 lbox
43 75 0.9500000 lbox
44 74 0.9500000 lbox
45 73 0.9500000 lbox
46 72 0.9500000 lbox
47 71 0.9500000 lbox
48 70 0.9500000 lbox
49 69 0.9500000 lbox
50 68 0.9500000 lbox
51 67 0.9500000 lbox
53 66 0.9500000 lbox
54 65 0.9500000 lbox
56 62 0.9500000 lbox
57 61 0.9500000 lbox
showpage
end
%%EOF
