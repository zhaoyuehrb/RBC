%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DFFA)
} def

/sequence { (\
ACAUCUCCCGGCAGGCUGCGGAAGGGGGUCGAGUAGAAGGACCGCCGCUCCGGCCUCCCGCGACUUCUCGAAGGUGGGCAGGUCCCACCUUGUGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 94 0.003986335 ubox
3 93 0.003921561 ubox
4 63 0.180581512 ubox
4 92 0.003691019 ubox
4 98 0.154118743 ubox
5 62 0.197275671 ubox
5 97 0.237893477 ubox
5 98 0.006203056 ubox
6 63 0.840285677 ubox
6 96 0.238277130 ubox
7 62 0.905961714 ubox
7 95 0.238278639 ubox
7 98 0.005699058 ubox
8 94 0.237467518 ubox
8 95 0.006722539 ubox
8 97 0.005632384 ubox
8 98 0.003248804 ubox
9 60 0.988962022 ubox
9 62 0.014597352 ubox
9 70 0.006397930 ubox
9 92 0.080180858 ubox
9 94 0.008684118 ubox
10 58 0.084403420 ubox
10 59 0.996144073 ubox
10 61 0.010943580 ubox
10 69 0.006527039 ubox
10 91 0.003174700 ubox
11 57 0.092732897 ubox
11 58 0.994596066 ubox
11 61 0.014028459 ubox
11 68 0.005925504 ubox
11 93 0.003867463 ubox
12 60 0.014545117 ubox
12 92 0.004082099 ubox
13 56 0.977947413 ubox
13 66 0.006387929 ubox
14 55 0.999916967 ubox
14 58 0.005975304 ubox
14 65 0.006572199 ubox
15 54 0.999931393 ubox
15 57 0.005988663 ubox
15 64 0.006588991 ubox
16 53 0.998013311 ubox
17 52 0.744849441 ubox
17 62 0.006700397 ubox
18 48 0.012037576 ubox
18 51 0.661535616 ubox
18 54 0.005586884 ubox
18 61 0.007020441 ubox
19 47 0.012543313 ubox
19 52 0.651934695 ubox
19 53 0.004191514 ubox
19 60 0.007021314 ubox
20 46 0.008567344 ubox
20 49 0.337289640 ubox
20 50 0.540259511 ubox
20 51 0.747887776 ubox
20 59 0.006998502 ubox
21 45 0.007301370 ubox
21 48 0.349794914 ubox
21 49 0.500240834 ubox
21 50 0.756349548 ubox
21 58 0.005199473 ubox
22 49 0.742054536 ubox
23 49 0.063591479 ubox
24 43 0.003971142 ubox
24 46 0.954469483 ubox
24 48 0.088149434 ubox
24 49 0.003807004 ubox
24 58 0.005029994 ubox
25 42 0.003960364 ubox
25 45 0.954636517 ubox
25 46 0.296587479 ubox
25 48 0.005758961 ubox
25 57 0.006868979 ubox
26 43 0.013496661 ubox
26 45 0.296404654 ubox
26 46 0.012201580 ubox
26 56 0.006889137 ubox
27 42 0.012571917 ubox
27 43 0.999618607 ubox
27 45 0.008896553 ubox
27 46 0.006068253 ubox
27 55 0.007033939 ubox
28 42 0.999849517 ubox
28 45 0.006139380 ubox
28 54 0.007041838 ubox
29 37 0.010637224 ubox
29 40 0.054007811 ubox
29 41 0.998216947 ubox
29 53 0.007047023 ubox
30 36 0.013560798 ubox
30 39 0.103229329 ubox
30 40 0.994288705 ubox
30 44 0.006545222 ubox
30 52 0.007038818 ubox
31 43 0.006690957 ubox
31 50 0.004865142 ubox
31 51 0.005104174 ubox
32 49 0.006865602 ubox
33 42 0.006679451 ubox
33 48 0.006877766 ubox
34 41 0.006486075 ubox
34 47 0.006828749 ubox
39 46 0.006662415 ubox
40 45 0.006635637 ubox
59 70 0.011117592 ubox
60 69 0.011375949 ubox
61 70 0.227186068 ubox
62 69 0.230038451 ubox
63 68 0.207250578 ubox
63 93 0.005794580 ubox
64 92 0.005932185 ubox
64 95 0.003621712 ubox
64 97 0.384089093 ubox
64 98 0.868021727 ubox
65 94 0.003533500 ubox
65 96 0.380394500 ubox
65 97 0.881442095 ubox
65 98 0.004678861 ubox
66 95 0.375479054 ubox
66 96 0.889048637 ubox
66 97 0.004033927 ubox
66 98 0.045880921 ubox
67 94 0.373241673 ubox
67 95 0.891953064 ubox
67 97 0.074430906 ubox
68 94 0.874804679 ubox
68 95 0.019334636 ubox
68 96 0.074197735 ubox
69 92 0.376316105 ubox
69 94 0.132956385 ubox
69 95 0.072387058 ubox
70 91 0.279651550 ubox
70 93 0.119738101 ubox
71 90 0.197289730 ubox
71 91 0.951201828 ubox
72 90 0.978827269 ubox
72 91 0.010148258 ubox
73 89 0.999969810 ubox
74 88 0.999987423 ubox
75 87 0.999788530 ubox
76 85 0.012290228 ubox
76 86 0.999898727 ubox
77 84 0.017318973 ubox
77 85 0.999801735 ubox
77 86 0.004901093 ubox
78 83 0.014369680 ubox
78 84 0.992494641 ubox
78 85 0.006758563 ubox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
9 60 0.9500000 lbox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
13 56 0.9500000 lbox
14 55 0.9500000 lbox
15 54 0.9500000 lbox
16 53 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
64 98 0.9500000 lbox
65 97 0.9500000 lbox
66 96 0.9500000 lbox
67 95 0.9500000 lbox
68 94 0.9500000 lbox
71 91 0.9500000 lbox
72 90 0.9500000 lbox
73 89 0.9500000 lbox
74 88 0.9500000 lbox
75 87 0.9500000 lbox
76 86 0.9500000 lbox
77 85 0.9500000 lbox
78 84 0.9500000 lbox
showpage
end
%%EOF
