%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:54:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAUGCGCACUGACUGCGGAACUGGGCGAACCCGGGGGUUCGUUUCUGCUGACUCCAGUGUCCCGAGAGGCGCCGCUUCUUCCGCUUUCUCGUCAGGCUCCUGCGCCCCAGGCAUGAACCAAGGUUUCUGAACUACUGGGCGGGAGCCAACGUCUCUUCUUUCUCCCGCUCUGGCGGAGGCUUUGUCGCUGCGGGCUGGGCCCCAGGGUGUCCCCC\
) } def
/len { sequence length } bind def

/coor [
[318.70343018 72.19263458]
[303.70379639 72.30022430]
[288.70419312 72.40781403]
[273.70458984 72.51540375]
[258.70495605 72.62298584]
[250.20173645 84.82270813]
[235.97706604 89.73417664]
[221.41767883 85.27573395]
[212.16838074 72.95677948]
[197.16876221 73.06436920]
[190.50665283 76.25371552]
[181.95358276 73.06436920]
[166.95396423 72.95677948]
[151.95436096 72.84919739]
[136.95474243 72.74160767]
[121.95512390 72.63401794]
[138.93251038 113.84932709]
[99.64775848 147.55903625]
[87.10887909 155.79167175]
[74.56999207 164.02432251]
[62.03111267 172.25697327]
[49.49222946 180.48960876]
[36.95335007 188.72225952]
[35.14549637 192.65536499]
[32.45294952 195.52326965]
[29.31803322 197.17884827]
[26.18550682 197.63330078]
[23.45081711 197.04331970]
[10.46043587 204.54331970]
[-2.52994490 212.04331970]
[-15.52032566 219.54331970]
[-28.51070786 227.04331970]
[-41.50108719 234.54331970]
[-54.49147034 242.04331970]
[-62.21798325 256.50820923]
[-78.61489868 256.77877808]
[-86.81447601 242.57670593]
[-78.38169098 228.51185608]
[-61.99147034 229.05293274]
[-49.00108719 221.55293274]
[-36.01070786 214.05293274]
[-23.02032661 206.55293274]
[-10.02994537 199.05293274]
[2.96043611 191.55293274]
[15.95081711 184.05293274]
[28.72070312 176.18338013]
[41.25958633 167.95072937]
[53.79846954 159.71807861]
[66.33734894 151.48544312]
[78.87623596 143.25279236]
[91.41511536 135.02015686]
[89.65643311 127.72926331]
[84.38037109 105.85660553]
[69.46710205 104.24588776]
[54.55383682 102.63516998]
[42.40182877 112.73983002]
[26.67185783 111.20896912]
[16.69623566 98.95080566]
[18.39332008 83.23789978]
[30.75626373 73.39243317]
[46.45035172 75.25555420]
[56.16455460 87.72190094]
[71.07782745 89.33261871]
[85.99109650 90.94333649]
[89.02194977 84.08302307]
[95.08365631 70.36239624]
[98.11450958 63.50207901]
[86.88136292 53.56143570]
[75.64821625 43.62079239]
[64.41506958 33.68014908]
[53.18192291 23.73950386]
[41.87776566 13.87968636]
[30.50317764 4.10120153]
[19.12858963 -5.67728329]
[4.66092587 -0.52148414]
[-10.44343662 -3.30604649]
[-22.12150192 -13.28193665]
[-27.23192596 -27.76569176]
[-24.40003204 -42.86125183]
[-14.38758564 -54.50798798]
[0.11211573 -59.57299042]
[15.19872570 -56.69379044]
[26.81402206 -46.64488602]
[31.83354759 -32.12938309]
[28.90707588 -17.05187035]
[40.28166199 -7.27338552]
[51.65625000 2.50509953]
[58.77331161 4.48072624]
[63.12256622 12.50635719]
[74.35571289 22.44700050]
[85.58885956 32.38764572]
[96.82200623 42.32828903]
[108.05515289 52.26893234]
[122.06271362 57.63440704]
[137.06233215 57.74199295]
[152.06195068 57.84958267]
[167.06155396 57.95716858]
[182.06117249 58.06475830]
[197.06117249 58.06475830]
[212.06079102 57.95716858]
[221.13243103 45.50680542]
[235.62635803 40.83997726]
[249.92002869 45.54688644]
[258.59738159 57.62337494]
[273.59698486 57.51578903]
[288.59661865 57.40819931]
[303.59622192 57.30061340]
[318.59582520 57.19302368]
[333.47097778 55.26180267]
[348.00082397 51.53562164]
[362.53063965 47.80944061]
[377.06045532 44.08326340]
[391.59027100 40.35708237]
[406.03652954 36.31914139]
[420.39260864 31.97130394]
[434.74865723 27.62347031]
[449.07315063 23.17277718]
[463.36535645 18.61945724]
[477.65756226 14.06613636]
[482.37762451 9.45030403]
[487.89221191 8.10802269]
[492.42550659 9.59356499]
[506.84243774 5.45211029]
[521.25939941 1.31065559]
[535.67633057 -2.83079910]
[550.09326172 -6.97225380]
[564.51025391 -11.11370850]
[578.92718506 -15.25516319]
[593.34411621 -19.39661789]
[607.76104736 -23.53807259]
[622.17803955 -27.67952728]
[636.59497070 -31.82098198]
[641.44549561 -36.29951096]
[646.99627686 -37.48304749]
[651.48510742 -35.86807251]
[666.01495361 -39.59425354]
[680.54473877 -43.32043457]
[685.52172852 -47.65797806]
[691.10424805 -48.68179321]
[695.54486084 -46.93871689]
[710.17559814 -50.24655151]
[724.80633545 -53.55438995]
[739.43707275 -56.86222839]
[754.06774902 -60.17006683]
[768.69848633 -63.47790527]
[783.32922363 -66.78574371]
[797.95996094 -70.09358215]
[812.59069824 -73.40142059]
[814.48168945 -88.44136047]
[821.40545654 -101.92609406]
[832.52575684 -112.22727203]
[846.49981689 -118.10097504]
[861.64025879 -118.83793640]
[876.11877441 -114.34914398]
[888.18695068 -105.17666626]
[896.38757324 -92.42810059]
[899.73034668 -77.64291382]
[897.81158447 -62.60648346]
[890.86303711 -49.13453293]
[879.72375488 -38.85386658]
[865.73883057 -33.00592041]
[850.59710693 -32.29687119]
[836.12689209 -36.81232834]
[824.07562256 -46.00703812]
[815.89849854 -58.77069092]
[801.26782227 -55.46285248]
[786.63708496 -52.15501404]
[772.00634766 -48.84717560]
[757.37561035 -45.53934097]
[742.74487305 -42.23150253]
[728.11413574 -38.92366409]
[713.48339844 -35.61582565]
[698.85272217 -32.30798721]
[684.27093506 -28.79061699]
[669.74108887 -25.06443596]
[655.21130371 -21.33825684]
[640.73638916 -17.40403366]
[626.31945801 -13.26257992]
[611.90252686 -9.12112522]
[597.48559570 -4.97967052]
[583.06860352 -0.83821607]
[568.65167236 3.30323863]
[554.23474121 7.44469309]
[539.81781006 11.58614731]
[525.40081787 15.72760201]
[510.98388672 19.86905670]
[496.56695557 24.01051140]
[482.21090698 28.35834694]
[467.91867065 32.91166687]
[453.62646484 37.46498871]
[448.21069336 42.48743820]
[439.09649658 41.97952652]
[424.74041748 46.32736206]
[410.38436890 50.67519379]
[408.40850830 53.58877182]
[404.92608643 55.69252014]
[400.33190918 56.28999329]
[395.31643677 54.88689804]
[380.78662109 58.61307907]
[366.25680542 62.33926010]
[351.72698975 66.06543732]
[337.19717407 69.79161835]
[352.16918945 70.70720673]
[361.59146118 82.37860107]
[359.32949829 97.20706940]
[346.85604858 105.53848267]
[332.29193115 101.94863129]
[325.11926270 88.77514648]
[327.90039062 103.51507568]
[330.68151855 118.25499725]
[341.77661133 130.33105469]
[336.60845947 145.89456177]
[320.49365234 148.93508911]
[310.00970459 136.32482910]
[315.94158936 121.03611755]
[313.16046143 106.29619598]
[310.37936401 91.55627441]
[311.77886963 84.14949036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 108]
[2 107]
[3 106]
[4 105]
[5 104]
[9 100]
[10 99]
[12 98]
[13 97]
[14 96]
[15 95]
[16 94]
[18 51]
[19 50]
[20 49]
[21 48]
[22 47]
[23 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[53 64]
[54 63]
[55 62]
[67 93]
[68 92]
[69 91]
[70 90]
[71 89]
[72 87]
[73 86]
[74 85]
[109 202]
[110 201]
[111 200]
[112 199]
[113 198]
[114 194]
[115 193]
[116 192]
[117 190]
[118 189]
[119 188]
[122 187]
[123 186]
[124 185]
[125 184]
[126 183]
[127 182]
[128 181]
[129 180]
[130 179]
[131 178]
[132 177]
[135 176]
[136 175]
[137 174]
[140 173]
[141 172]
[142 171]
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[148 165]
[208 217]
[209 216]
[210 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
