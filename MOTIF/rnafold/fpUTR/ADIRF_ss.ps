%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGCCAGCCCUGGGGCGCCUUAAAAACCGGAGCUGGCGCUUGGCAUCGCCACUCUGGGCAGGAUCCAACGUCGCUCCAGCUGCUCUUGACGACUCCACAGAUACCCCGAAGCC\
) } def
/len { sequence length } bind def

/coor [
[240.90469360 286.65261841]
[231.43836975 275.01696777]
[221.97204590 263.38128662]
[212.50573730 251.74562073]
[195.83105469 246.46514893]
[192.90182495 228.34942627]
[183.12121582 216.97666931]
[173.34059143 205.60391235]
[163.55998230 194.23115540]
[158.82015991 192.98728943]
[154.86489868 188.66979980]
[153.57652283 181.95982361]
[144.43156433 170.06993103]
[135.28660583 158.18003845]
[126.14163971 146.29013062]
[116.99668121 134.40023804]
[107.85172272 122.51033783]
[98.70675659 110.62043762]
[88.17284393 99.94164276]
[76.40895844 90.63513947]
[64.64508057 81.32862854]
[55.46392822 85.31112671]
[45.51879120 85.59449768]
[36.23560715 82.18162537]
[28.92925835 75.60224152]
[24.61733437 66.83119202]
[23.87853432 57.14420700]
[26.77533913 47.93233871]
[16.09654617 37.39841843]
[5.41775417 26.86450386]
[-5.26103783 16.33058739]
[-15.93982983 5.79667044]
[-26.61862183 -4.73724604]
[-35.04636002 -8.60697460]
[-37.44029617 -15.70775414]
[-47.82737350 -26.52943039]
[-58.21444702 -37.35110474]
[-68.60152435 -48.17277908]
[-78.98860168 -58.99445724]
[-94.34223175 -56.74821472]
[-108.06822205 -63.98540497]
[-114.88864136 -77.92317963]
[-112.18090057 -93.20217896]
[-100.98618317 -103.94731140]
[-85.60908508 -106.02686310]
[-71.96241760 -98.64119720]
[-65.29359436 -84.63025665]
[-68.16692352 -69.38153076]
[-57.77985001 -58.55985641]
[-47.39277267 -47.73818207]
[-37.00569916 -36.91650391]
[-26.61862183 -26.09482956]
[-16.08470535 -15.41603851]
[-5.40591335 -4.88212156]
[5.27287912 5.65179491]
[15.95167065 16.18571091]
[26.63046265 26.71962738]
[37.30925369 37.25354385]
[57.52445602 35.19391632]
[73.09550476 48.69017410]
[73.95158386 69.56475067]
[85.71546936 78.87125397]
[97.47934723 88.17776489]
[95.24935150 73.34445190]
[101.21546173 59.58198547]
[113.56603241 51.06944275]
[128.55072021 50.39171982]
[141.61929321 57.75461960]
[148.80339050 70.92233276]
[147.92150879 85.89638519]
[139.24142456 98.12979126]
[125.39892578 103.90778351]
[110.59665680 101.47547913]
[119.74161530 113.36537170]
[128.88658142 125.25527191]
[138.03153992 137.14517212]
[147.17649841 149.03506470]
[156.32145691 160.92497253]
[165.46643066 172.81486511]
[174.93273926 184.45053101]
[184.71334839 195.82328796]
[194.49397278 207.19604492]
[204.27458191 218.56880188]
[217.13952637 220.34358215]
[225.04864502 230.13165283]
[224.14140320 242.27929688]
[233.60772705 253.91497803]
[243.07403564 265.55062866]
[252.54035950 277.18630981]
[266.04583740 270.51174927]
[280.69805908 267.01031494]
[295.76208496 266.85760498]
[310.48226929 270.06127930]
[324.12030029 276.46066284]
[335.99206543 285.73477173]
[345.50210571 297.41836548]
[352.17337036 310.92547607]
[355.67126465 325.57855225]
[355.82034302 340.64260864]
[352.61309814 355.36199951]
[346.21038818 368.99847412]
[336.93344116 380.86801147]
[325.24749756 390.37521362]
[311.73880005 397.04321289]
[297.08486938 400.53756714]
[282.02078247 400.68298340]
[267.30215454 397.47216797]
[253.66723633 391.06616211]
[241.79995728 381.78631592]
[232.29557800 370.09808350]
[225.63084412 356.58776855]
[222.14006042 341.93301392]
[221.99829102 326.86889648]
[225.21267700 312.15103149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 89]
[2 88]
[3 87]
[4 86]
[6 83]
[7 82]
[8 81]
[9 80]
[12 79]
[13 78]
[14 77]
[15 76]
[16 75]
[17 74]
[18 73]
[19 63]
[20 62]
[21 61]
[28 58]
[29 57]
[30 56]
[31 55]
[32 54]
[33 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
