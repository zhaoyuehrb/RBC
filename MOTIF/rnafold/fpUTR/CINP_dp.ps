%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CINP)
} def

/sequence { (\
GCAAAUGCGUUUCCGGUGGGGUGGGCGGGGCUUCGCGUCUCCUUCUACGGAUAUCUGUGGACCUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.804656315 ubox
1 10 0.078344820 ubox
1 17 0.022171107 ubox
1 22 0.018579889 ubox
1 26 0.035179362 ubox
1 31 0.056443636 ubox
1 36 0.049406050 ubox
1 38 0.006286872 ubox
1 58 0.138781625 ubox
2 7 0.804159046 ubox
2 9 0.085715758 ubox
2 16 0.022963092 ubox
2 18 0.021020092 ubox
2 21 0.019237983 ubox
2 23 0.007853881 ubox
2 25 0.035164297 ubox
2 30 0.056507006 ubox
2 35 0.049379945 ubox
2 37 0.006785561 ubox
2 57 0.143853467 ubox
2 59 0.080696123 ubox
3 11 0.010526220 ubox
3 12 0.022708646 ubox
3 17 0.019174142 ubox
3 22 0.007808695 ubox
3 33 0.012216487 ubox
3 44 0.004329596 ubox
3 56 0.141143650 ubox
3 58 0.078198270 ubox
3 65 0.011157455 ubox
4 10 0.010860738 ubox
4 11 0.025077570 ubox
4 12 0.021550979 ubox
4 32 0.011076988 ubox
4 33 0.034647838 ubox
4 43 0.007081986 ubox
4 64 0.011978643 ubox
4 65 0.010051070 ubox
5 10 0.020313623 ubox
5 11 0.023713627 ubox
5 17 0.026306244 ubox
5 22 0.020490854 ubox
5 32 0.034201249 ubox
5 38 0.211694498 ubox
5 43 0.003302529 ubox
5 52 0.025420248 ubox
5 54 0.127362340 ubox
5 58 0.093089584 ubox
5 64 0.010752268 ubox
6 15 0.019897827 ubox
6 16 0.025017593 ubox
6 18 0.037283731 ubox
6 21 0.017684479 ubox
6 23 0.016227912 ubox
6 27 0.070885282 ubox
6 37 0.220617100 ubox
6 51 0.025792970 ubox
6 53 0.131216934 ubox
6 57 0.095314184 ubox
6 59 0.086149312 ubox
7 14 0.029973689 ubox
7 17 0.091449710 ubox
7 22 0.031619337 ubox
7 26 0.271372175 ubox
7 31 0.045454847 ubox
7 36 0.229628267 ubox
7 38 0.013655378 ubox
7 52 0.129465055 ubox
7 56 0.083839588 ubox
7 58 0.155183196 ubox
8 15 0.091622430 ubox
8 16 0.092927689 ubox
8 18 0.012857773 ubox
8 21 0.032171524 ubox
8 23 0.017342356 ubox
8 25 0.271554636 ubox
8 27 0.058495700 ubox
8 30 0.045379826 ubox
8 35 0.229645836 ubox
8 37 0.014346401 ubox
8 49 0.026994064 ubox
8 57 0.158700544 ubox
8 59 0.015634182 ubox
9 14 0.108132233 ubox
9 17 0.012069167 ubox
9 22 0.018132441 ubox
9 26 0.128524149 ubox
9 31 0.011514421 ubox
9 34 0.228572773 ubox
9 36 0.014343557 ubox
9 48 0.027041023 ubox
9 52 0.019469965 ubox
9 54 0.252905590 ubox
9 56 0.130957239 ubox
9 58 0.012232838 ubox
9 62 0.117824263 ubox
10 16 0.010156053 ubox
10 19 0.028142551 ubox
10 21 0.009772893 ubox
10 24 0.049235488 ubox
10 25 0.127200948 ubox
10 28 0.040971167 ubox
10 29 0.003387142 ubox
10 30 0.010961682 ubox
10 35 0.014141662 ubox
10 47 0.026730268 ubox
10 51 0.012000365 ubox
10 53 0.263266626 ubox
10 57 0.003734060 ubox
10 60 0.005582023 ubox
10 61 0.115221176 ubox
11 15 0.009243779 ubox
11 18 0.028347950 ubox
11 19 0.003216465 ubox
11 20 0.011241684 ubox
11 21 0.045139423 ubox
11 23 0.052703232 ubox
11 24 0.116651242 ubox
11 25 0.004267120 ubox
11 27 0.037629147 ubox
11 28 0.003205236 ubox
11 29 0.007576026 ubox
11 30 0.118411707 ubox
11 50 0.005073518 ubox
11 51 0.017634663 ubox
11 59 0.007859966 ubox
11 60 0.111002009 ubox
11 61 0.022580426 ubox
12 18 0.004509276 ubox
12 19 0.014416668 ubox
12 20 0.059781081 ubox
12 21 0.295921237 ubox
12 23 0.083319377 ubox
12 25 0.056200059 ubox
12 29 0.133389133 ubox
12 30 0.156086246 ubox
12 49 0.004193058 ubox
12 50 0.005543657 ubox
12 51 0.438002519 ubox
12 59 0.065071102 ubox
12 60 0.026171632 ubox
12 61 0.047963000 ubox
13 18 0.021905868 ubox
13 19 0.081960719 ubox
13 20 0.337433798 ubox
13 21 0.141573601 ubox
13 24 0.078933251 ubox
13 25 0.026422862 ubox
13 28 0.136370590 ubox
13 29 0.183290058 ubox
13 30 0.028171037 ubox
13 49 0.005321684 ubox
13 50 0.455365986 ubox
13 59 0.028913230 ubox
13 60 0.052138635 ubox
14 18 0.082054078 ubox
14 19 0.338179812 ubox
14 20 0.141727576 ubox
14 23 0.079261882 ubox
14 24 0.026395432 ubox
14 27 0.136431597 ubox
14 28 0.183398945 ubox
14 29 0.027108501 ubox
14 37 0.014652667 ubox
14 49 0.455240098 ubox
14 57 0.066868317 ubox
14 59 0.052010450 ubox
15 22 0.073395220 ubox
15 26 0.133307523 ubox
15 36 0.010949695 ubox
15 39 0.005545125 ubox
15 41 0.021395159 ubox
15 42 0.479592167 ubox
15 43 0.037380552 ubox
15 44 0.015164549 ubox
15 45 0.021013944 ubox
15 46 0.031226912 ubox
15 48 0.428919418 ubox
15 55 0.049578006 ubox
15 56 0.060204130 ubox
15 58 0.025574515 ubox
15 63 0.419250040 ubox
15 64 0.023420767 ubox
15 65 0.008968650 ubox
16 22 0.017537142 ubox
16 26 0.186472651 ubox
16 36 0.053662441 ubox
16 40 0.020344141 ubox
16 41 0.479526200 ubox
16 42 0.039334694 ubox
16 43 0.029381564 ubox
16 44 0.025601494 ubox
16 45 0.050910021 ubox
16 48 0.150358141 ubox
16 54 0.051899641 ubox
16 55 0.059969250 ubox
16 62 0.419398598 ubox
16 63 0.024722489 ubox
16 64 0.010403265 ubox
17 21 0.005279893 ubox
17 23 0.013030173 ubox
17 25 0.187740579 ubox
17 27 0.012324257 ubox
17 35 0.054717662 ubox
17 37 0.003878288 ubox
17 47 0.211126464 ubox
17 49 0.004329030 ubox
17 51 0.003632041 ubox
17 53 0.066631409 ubox
17 61 0.374355816 ubox
18 22 0.008463164 ubox
18 26 0.013608194 ubox
18 34 0.054980273 ubox
18 36 0.004212894 ubox
18 39 0.477518655 ubox
18 40 0.036369737 ubox
18 41 0.039061742 ubox
18 42 0.330809455 ubox
18 43 0.217230012 ubox
18 44 0.310560250 ubox
18 45 0.329261537 ubox
18 46 0.210078929 ubox
18 48 0.004885625 ubox
18 52 0.066108524 ubox
18 55 0.004842775 ubox
18 56 0.012121052 ubox
18 63 0.061053828 ubox
18 64 0.054059092 ubox
18 65 0.078936375 ubox
19 33 0.054843087 ubox
19 38 0.475665436 ubox
19 39 0.038474865 ubox
19 40 0.039683889 ubox
19 41 0.331356912 ubox
19 42 0.232539516 ubox
19 43 0.447668436 ubox
19 44 0.325471091 ubox
19 45 0.208086590 ubox
19 46 0.022170481 ubox
19 54 0.003587947 ubox
19 55 0.012306983 ubox
19 62 0.060285025 ubox
19 63 0.058483795 ubox
19 64 0.112451039 ubox
19 65 0.004257996 ubox
20 32 0.054926586 ubox
20 34 0.004183901 ubox
20 38 0.034544825 ubox
20 39 0.042666543 ubox
20 40 0.328968406 ubox
20 41 0.232080947 ubox
20 42 0.475458320 ubox
20 43 0.330044491 ubox
20 44 0.178897979 ubox
20 45 0.025010295 ubox
20 46 0.012575343 ubox
20 54 0.012025601 ubox
20 55 0.003279326 ubox
20 62 0.057814247 ubox
20 63 0.117336711 ubox
20 64 0.004342324 ubox
21 31 0.054994543 ubox
21 33 0.003299098 ubox
21 36 0.482910727 ubox
21 38 0.036382779 ubox
21 39 0.327982054 ubox
21 40 0.190263637 ubox
21 41 0.475915094 ubox
21 42 0.340451322 ubox
21 43 0.133429287 ubox
21 44 0.023265906 ubox
21 45 0.015875019 ubox
21 48 0.081099234 ubox
21 62 0.117454360 ubox
21 63 0.005416082 ubox
22 30 0.054747963 ubox
22 35 0.482606876 ubox
22 37 0.034047982 ubox
22 47 0.081182609 ubox
22 61 0.101632708 ubox
23 32 0.011996879 ubox
23 33 0.037955349 ubox
23 34 0.480177706 ubox
23 36 0.015763526 ubox
23 39 0.286838053 ubox
23 40 0.509588306 ubox
23 41 0.111788934 ubox
23 42 0.136566602 ubox
23 43 0.200652322 ubox
23 44 0.046919972 ubox
23 45 0.005902405 ubox
23 46 0.081114681 ubox
23 63 0.036881238 ubox
23 64 0.040890583 ubox
24 31 0.019039402 ubox
24 32 0.315599744 ubox
24 33 0.359340438 ubox
24 34 0.006701825 ubox
24 38 0.259936012 ubox
24 39 0.543778152 ubox
24 40 0.070909758 ubox
24 41 0.136219838 ubox
24 42 0.218356681 ubox
24 43 0.083933407 ubox
24 44 0.008740155 ubox
24 45 0.081122473 ubox
24 62 0.036676760 ubox
24 63 0.044416592 ubox
24 64 0.003481921 ubox
25 31 0.447060950 ubox
25 32 0.143640499 ubox
25 33 0.005607370 ubox
25 36 0.473257864 ubox
25 38 0.544918566 ubox
25 39 0.071464590 ubox
25 40 0.127234902 ubox
25 41 0.218241048 ubox
25 42 0.090240618 ubox
25 43 0.014121363 ubox
25 44 0.077877789 ubox
25 58 0.006491605 ubox
25 62 0.044146044 ubox
25 63 0.003593593 ubox
26 30 0.445746846 ubox
26 35 0.473882236 ubox
26 37 0.550294458 ubox
26 57 0.006670036 ubox
27 33 0.003462555 ubox
27 34 0.472168537 ubox
27 36 0.549429730 ubox
27 39 0.253030838 ubox
27 40 0.021890463 ubox
27 41 0.232424720 ubox
27 42 0.215689244 ubox
27 43 0.020910831 ubox
27 56 0.006641992 ubox
27 63 0.010063318 ubox
27 64 0.013752435 ubox
27 65 0.039698840 ubox
28 32 0.009865921 ubox
28 33 0.371596809 ubox
28 34 0.214641025 ubox
28 38 0.251207075 ubox
28 39 0.022917993 ubox
28 40 0.240403550 ubox
28 41 0.215901373 ubox
28 42 0.024460328 ubox
28 43 0.007968194 ubox
28 55 0.006629246 ubox
28 62 0.009940902 ubox
28 63 0.016165787 ubox
28 64 0.072850573 ubox
28 65 0.007085785 ubox
29 33 0.139940270 ubox
29 38 0.020922659 ubox
29 39 0.285804756 ubox
29 40 0.152830087 ubox
29 41 0.024196509 ubox
29 42 0.008484276 ubox
29 54 0.006330043 ubox
29 62 0.015979621 ubox
29 63 0.076048785 ubox
29 64 0.008883444 ubox
30 36 0.255854716 ubox
30 38 0.286279725 ubox
30 39 0.152042341 ubox
30 40 0.014346299 ubox
30 41 0.008364408 ubox
30 62 0.076062742 ubox
30 63 0.009144342 ubox
31 35 0.254156620 ubox
31 37 0.310267016 ubox
31 60 0.015603555 ubox
32 59 0.015030370 ubox
32 61 0.076513810 ubox
33 51 0.006011198 ubox
33 60 0.077338112 ubox
34 50 0.006091563 ubox
34 57 0.014983508 ubox
34 59 0.077688416 ubox
35 56 0.014534364 ubox
35 58 0.077698164 ubox
36 49 0.006252348 ubox
36 57 0.077639298 ubox
37 48 0.006288317 ubox
37 52 0.010674793 ubox
37 54 0.037726840 ubox
37 56 0.062050047 ubox
37 62 0.010918004 ubox
38 47 0.006189245 ubox
38 51 0.012742616 ubox
38 53 0.046123809 ubox
38 61 0.010082217 ubox
39 50 0.012725658 ubox
39 60 0.009427602 ubox
40 49 0.012332398 ubox
40 51 0.075895376 ubox
40 59 0.007694710 ubox
40 61 0.010571221 ubox
41 50 0.077427372 ubox
41 60 0.011604476 ubox
42 49 0.077352965 ubox
42 59 0.011474295 ubox
43 61 0.035166277 ubox
44 51 0.013550589 ubox
44 60 0.023285082 ubox
44 61 0.721623440 ubox
45 50 0.013919468 ubox
45 59 0.025242113 ubox
45 60 0.879374265 ubox
46 59 0.880516375 ubox
47 58 0.881753168 ubox
48 57 0.882166331 ubox
49 55 0.020362189 ubox
49 56 0.879625899 ubox
49 63 0.008140396 ubox
50 54 0.013477803 ubox
50 55 0.876341201 ubox
50 62 0.008138733 ubox
51 58 0.008734323 ubox
51 64 0.003347590 ubox
52 57 0.009398272 ubox
52 59 0.010243817 ubox
53 58 0.009767974 ubox
54 60 0.011155375 ubox
54 61 0.053999216 ubox
55 59 0.019108961 ubox
55 60 0.061399346 ubox
59 65 0.006460625 ubox
60 64 0.006043683 ubox
1 8 0.9500000 lbox
2 7 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
21 36 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
44 61 0.9500000 lbox
45 60 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
showpage
end
%%EOF
