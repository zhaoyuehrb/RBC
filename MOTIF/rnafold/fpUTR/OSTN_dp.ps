%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OSTN)
} def

/sequence { (\
AGGGCUGAGUUUUGGAGAAACUGCAGAGACAGUACUCUAAAGUUAGAAUCUCCUGAUCUUUCACGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.004890068 ubox
1 13 0.033871412 ubox
1 36 0.016974608 ubox
1 38 0.017884054 ubox
1 51 0.108957764 ubox
1 54 0.260036213 ubox
1 59 0.008774027 ubox
1 60 0.012644503 ubox
1 61 0.011723316 ubox
2 11 0.006973469 ubox
2 12 0.039683390 ubox
2 13 0.003769176 ubox
2 35 0.026159330 ubox
2 36 0.010102297 ubox
2 37 0.018921571 ubox
2 38 0.003635234 ubox
2 50 0.171704278 ubox
2 51 0.067638104 ubox
2 52 0.093566452 ubox
2 53 0.290118081 ubox
2 54 0.064383035 ubox
2 58 0.009988549 ubox
2 59 0.017794508 ubox
2 60 0.015991367 ubox
2 61 0.008703415 ubox
2 62 0.112193733 ubox
3 10 0.007470390 ubox
3 11 0.042201193 ubox
3 12 0.004594194 ubox
3 35 0.013594118 ubox
3 36 0.017478089 ubox
3 37 0.003762625 ubox
3 44 0.027688143 ubox
3 49 0.184814443 ubox
3 50 0.085433629 ubox
3 51 0.094721750 ubox
3 52 0.289958827 ubox
3 53 0.074660676 ubox
3 54 0.004722270 ubox
3 57 0.007973517 ubox
3 58 0.018290430 ubox
3 59 0.017521495 ubox
3 60 0.007321972 ubox
3 61 0.109958739 ubox
3 62 0.140069394 ubox
4 10 0.043793712 ubox
4 11 0.003921454 ubox
4 24 0.006184390 ubox
4 33 0.050869459 ubox
4 35 0.015411249 ubox
4 43 0.030772361 ubox
4 49 0.076003439 ubox
4 50 0.143957061 ubox
4 51 0.261872702 ubox
4 52 0.074757441 ubox
4 53 0.005174019 ubox
4 57 0.013889158 ubox
4 58 0.017504389 ubox
4 59 0.005337688 ubox
4 60 0.069665672 ubox
4 61 0.126126164 ubox
5 9 0.043716593 ubox
5 23 0.006171804 ubox
5 26 0.028396522 ubox
5 32 0.055410048 ubox
5 42 0.030963614 ubox
5 46 0.918490420 ubox
5 67 0.028258945 ubox
6 25 0.028557505 ubox
6 31 0.055367064 ubox
6 34 0.004115572 ubox
6 41 0.027024522 ubox
6 45 0.921579249 ubox
6 63 0.157008245 ubox
6 65 0.016318721 ubox
6 66 0.027510415 ubox
7 13 0.003531983 ubox
7 24 0.028580013 ubox
7 30 0.054998497 ubox
7 33 0.004102806 ubox
7 37 0.005058595 ubox
7 44 0.918978035 ubox
7 50 0.011493492 ubox
7 52 0.008307789 ubox
7 58 0.094840571 ubox
7 60 0.262220400 ubox
7 61 0.021015190 ubox
7 62 0.176720626 ubox
7 64 0.017784441 ubox
8 22 0.029539243 ubox
8 36 0.005067165 ubox
8 43 0.912928081 ubox
8 44 0.087149422 ubox
8 49 0.011083714 ubox
8 51 0.008565336 ubox
8 57 0.091691901 ubox
8 59 0.286454238 ubox
8 60 0.024396870 ubox
8 61 0.170837004 ubox
9 21 0.029764678 ubox
9 30 0.008234384 ubox
9 35 0.005066114 ubox
9 43 0.096230068 ubox
9 49 0.005026092 ubox
9 50 0.008587955 ubox
9 57 0.062641145 ubox
9 58 0.291804288 ubox
9 59 0.021466403 ubox
9 60 0.146049394 ubox
9 64 0.007984611 ubox
10 20 0.029671890 ubox
10 27 0.018966545 ubox
10 28 0.046280166 ubox
10 29 0.008240022 ubox
10 34 0.004886579 ubox
10 40 0.006090664 ubox
10 41 0.438072001 ubox
10 42 0.715834052 ubox
10 47 0.004812814 ubox
10 48 0.006638108 ubox
10 56 0.089348339 ubox
10 63 0.007443652 ubox
11 19 0.029525472 ubox
11 26 0.015536571 ubox
11 27 0.051544982 ubox
11 28 0.007042893 ubox
11 39 0.004881018 ubox
11 40 0.360601654 ubox
11 41 0.806073819 ubox
11 42 0.010107723 ubox
11 46 0.004480221 ubox
11 47 0.006584956 ubox
11 55 0.089061990 ubox
11 56 0.268565535 ubox
12 18 0.029092466 ubox
12 25 0.011078634 ubox
12 26 0.053222943 ubox
12 27 0.006070625 ubox
12 39 0.257210839 ubox
12 40 0.849304215 ubox
12 41 0.009836959 ubox
12 46 0.006269661 ubox
12 55 0.248286132 ubox
12 56 0.055565311 ubox
12 66 0.003821944 ubox
13 17 0.026227026 ubox
13 18 0.003332441 ubox
13 25 0.054683968 ubox
13 26 0.003963176 ubox
13 31 0.003230213 ubox
13 39 0.888402676 ubox
13 40 0.007970391 ubox
13 45 0.005562367 ubox
13 55 0.053440549 ubox
13 65 0.003890759 ubox
14 24 0.055927467 ubox
14 30 0.003237883 ubox
14 37 0.011753025 ubox
14 38 0.924710552 ubox
14 44 0.004104070 ubox
14 53 0.365829961 ubox
14 54 0.007577145 ubox
15 21 0.003201840 ubox
15 36 0.006711682 ubox
15 37 0.928173307 ubox
15 52 0.366113512 ubox
15 53 0.005467192 ubox
16 22 0.055169633 ubox
16 36 0.927941390 ubox
16 38 0.009286155 ubox
16 51 0.366101322 ubox
17 21 0.054123893 ubox
17 35 0.925015870 ubox
17 37 0.009489819 ubox
17 50 0.366137525 ubox
18 36 0.009358446 ubox
18 44 0.003556281 ubox
18 49 0.364051679 ubox
19 43 0.006142003 ubox
19 44 0.347382877 ubox
20 33 0.903545455 ubox
20 43 0.353126522 ubox
21 28 0.012461553 ubox
21 32 0.927620136 ubox
21 42 0.353643426 ubox
21 46 0.089175904 ubox
22 27 0.012451866 ubox
22 31 0.927556232 ubox
22 34 0.029791744 ubox
22 41 0.352411326 ubox
22 45 0.087840429 ubox
23 30 0.924248598 ubox
23 33 0.030368869 ubox
23 43 0.059362130 ubox
23 44 0.068404489 ubox
24 32 0.030382114 ubox
24 42 0.079209187 ubox
25 38 0.341458769 ubox
26 37 0.347090067 ubox
26 60 0.003379811 ubox
27 36 0.347024440 ubox
27 38 0.116307847 ubox
27 59 0.005103195 ubox
28 35 0.345247162 ubox
28 37 0.117830365 ubox
28 58 0.005283709 ubox
29 36 0.117687446 ubox
29 57 0.005266327 ubox
30 55 0.005378993 ubox
31 54 0.005378411 ubox
32 53 0.005356612 ubox
34 43 0.005976833 ubox
35 42 0.006461264 ubox
35 67 0.030277884 ubox
36 41 0.005986030 ubox
36 47 0.039955031 ubox
36 66 0.030962626 ubox
37 46 0.043451855 ubox
37 65 0.031084009 ubox
38 45 0.043263032 ubox
39 44 0.040873869 ubox
39 60 0.004271280 ubox
39 61 0.034275420 ubox
40 59 0.004748463 ubox
40 60 0.036401115 ubox
41 59 0.036989028 ubox
42 57 0.021561237 ubox
42 58 0.036738896 ubox
42 64 0.010187850 ubox
43 56 0.042668895 ubox
43 63 0.009960183 ubox
44 55 0.043544760 ubox
45 54 0.043639176 ubox
45 59 0.017149288 ubox
45 61 0.006414165 ubox
46 52 0.003840304 ubox
46 53 0.043449918 ubox
46 58 0.018874130 ubox
46 59 0.003375568 ubox
46 60 0.007013444 ubox
46 62 0.008660972 ubox
47 51 0.004580033 ubox
47 57 0.013682683 ubox
47 59 0.008752328 ubox
47 60 0.004017190 ubox
47 61 0.009056895 ubox
48 57 0.060575861 ubox
48 60 0.006834485 ubox
49 56 0.066580984 ubox
49 66 0.040907943 ubox
50 55 0.067385052 ubox
50 65 0.043679701 ubox
50 67 0.817068096 ubox
51 66 0.851847959 ubox
52 65 0.857126068 ubox
53 67 0.015122985 ubox
54 63 0.870824011 ubox
54 65 0.017418828 ubox
54 66 0.013744357 ubox
55 61 0.008283141 ubox
55 62 0.891647689 ubox
55 64 0.029906543 ubox
56 60 0.014039139 ubox
56 61 0.871891905 ubox
57 66 0.086207170 ubox
58 65 0.092437664 ubox
58 67 0.055704196 ubox
59 66 0.057001377 ubox
59 67 0.008372952 ubox
60 65 0.052303169 ubox
60 66 0.013884218 ubox
60 67 0.005463652 ubox
61 65 0.013380529 ubox
61 66 0.007959162 ubox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
8 43 0.9500000 lbox
10 42 0.9500000 lbox
11 41 0.9500000 lbox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
52 65 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
