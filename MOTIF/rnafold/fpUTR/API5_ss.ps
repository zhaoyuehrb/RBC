%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUUUACGUAGACGUCGGGGGCGCAGCCGCGCUGUGCGCGGUGACUGGCGGCUGCACUGGCGGCAGCUGGAGGUGUAAUAGUGCGGGUAGUGGGUUUGGAGAAGUUCCGAGGCGGCGGUGGCGCCGGUCAGGACAAGGAUAGCGGAACCGGGCCCUGGGCUUGUCGCUCACC\
) } def
/len { sequence length } bind def

/coor [
[93.34783936 132.24026489]
[87.04950714 145.85389709]
[80.75116730 159.46752930]
[74.45283508 173.08116150]
[68.15449524 186.69479370]
[61.85615921 200.30842590]
[55.68097687 213.97836304]
[49.62944794 227.70347595]
[43.57791901 241.42860413]
[45.88792801 257.66424561]
[32.81726456 267.56826782]
[17.81191063 260.95227051]
[16.30808640 244.62222290]
[29.85279655 235.37707520]
[35.90432358 221.65194702]
[41.95585251 207.92683411]
[41.77661896 200.51225281]
[48.24252701 194.01008606]
[54.54086304 180.39645386]
[60.83919907 166.78282166]
[67.13753510 153.16918945]
[73.43587494 139.55555725]
[79.73420715 125.94192505]
[74.21673584 120.46726990]
[70.13665009 113.85157776]
[67.72142029 106.46367645]
[67.10569000 98.71543121]
[68.32378387 91.03879547]
[55.20011139 83.77455139]
[42.07644272 76.51029968]
[28.95277405 69.24605560]
[15.82910347 61.98180771]
[2.70543361 54.71755981]
[-10.41823673 47.45331192]
[-23.54190636 40.18906403]
[-36.66557693 32.92481995]
[-49.85429001 25.77934074]
[-63.10696793 18.75321388]
[-76.35964966 11.72708702]
[-89.61232758 4.70096016]
[-98.76105499 10.30587959]
[-109.33283234 11.57919884]
[-119.39657593 8.35625839]
[-127.14225006 1.28754783]
[-131.20634460 -8.29128838]
[-130.91165161 -18.61146355]
[-143.76451111 -26.34477234]
[-156.61735535 -34.07807922]
[-169.47021484 -41.81138611]
[-182.32307434 -49.54469681]
[-198.13685608 -50.02966690]
[-205.05331421 -63.22102356]
[-217.90617371 -70.95433044]
[-230.75901794 -78.68763733]
[-243.61187744 -86.42094421]
[-256.46475220 -94.15425110]
[-272.86206055 -93.90916443]
[-281.03955078 -108.12397766]
[-272.58489990 -122.17570496]
[-256.19552612 -121.60913849]
[-248.73143005 -107.00711060]
[-235.87857056 -99.27380371]
[-223.02571106 -91.54049683]
[-210.17285156 -83.80718994]
[-197.32000732 -76.07388306]
[-182.42555237 -76.14204407]
[-174.58976746 -62.39755249]
[-161.73690796 -54.66424561]
[-148.88404846 -46.93093872]
[-136.03120422 -39.19762802]
[-123.17833710 -31.46432114]
[-104.70892334 -37.56811905]
[-87.41268158 -28.02198410]
[-82.58620453 -8.55172062]
[-69.33352661 -1.52559376]
[-56.08084106 5.50053310]
[-42.82816315 12.52665997]
[-35.41997528 12.88291264]
[-29.40132904 19.80114937]
[-16.27765846 27.06539536]
[-3.15398908 34.32964325]
[9.96968079 41.59389114]
[23.09335136 48.85813904]
[36.21702194 56.12238312]
[49.34069061 63.38663101]
[62.46435928 70.65087891]
[75.58802795 77.91513062]
[90.83014679 68.38355255]
[108.80686951 68.28052521]
[124.15723419 77.63677216]
[132.30351257 93.66210175]
[147.29373169 94.20363617]
[162.28395081 94.74517822]
[177.27416992 95.28671265]
[192.26440430 95.82824707]
[207.25462341 96.36978149]
[211.92506409 93.88755035]
[216.60891724 93.50704956]
[220.49557495 94.87580872]
[223.03544617 97.36834717]
[237.97436523 98.72064972]
[252.41587830 92.25897980]
[264.39376831 101.11217499]
[279.33270264 102.46446991]
[294.27160645 103.81677246]
[309.21054077 105.16906738]
[318.07452393 102.82050323]
[324.40612793 106.68301392]
[339.31820679 108.30480194]
[354.23025513 109.92658997]
[368.78610229 103.72670746]
[380.60220337 112.79470825]
[395.51428223 114.41649628]
[410.42633057 116.03827667]
[420.97100830 108.57125854]
[433.37734985 110.25074768]
[441.04833984 119.63195801]
[455.92868042 121.52270508]
[470.80905151 123.41345215]
[485.68942261 125.30419922]
[498.10699463 115.89986420]
[513.17083740 118.02932739]
[522.05993652 129.92555237]
[536.94030762 131.81629944]
[551.82061768 133.70704651]
[562.49841309 126.43161011]
[574.87237549 128.33480835]
[582.37274170 137.85298157]
[597.21655273 140.01208496]
[612.06036377 142.17117310]
[622.79620361 130.96754456]
[638.07293701 128.24714661]
[652.01635742 135.05601501]
[659.26495361 148.77600098]
[657.03143311 164.13150024]
[646.17468262 175.21798706]
[630.86932373 177.77250671]
[617.00054932 170.81277466]
[609.90124512 157.01496887]
[595.05743408 154.85588074]
[580.21368408 152.69679260]
[564.30499268 160.06997681]
[549.92987061 148.58740234]
[535.04956055 146.69665527]
[520.16918945 144.80590820]
[508.58746338 154.10104370]
[493.46972656 152.39553833]
[483.79867554 140.18455505]
[468.91830444 138.29380798]
[454.03793335 136.40306091]
[439.15759277 134.51231384]
[423.38461304 142.17152405]
[408.80456543 130.95034790]
[393.89248657 129.32856750]
[378.98040771 127.70677948]
[365.49121094 134.02265930]
[352.60848999 124.83865356]
[337.69641113 123.21687317]
[322.78433228 121.59508514]
[307.85824585 120.10798645]
[292.91931152 118.75569153]
[277.98040771 117.40338898]
[263.04147339 116.05109406]
[249.66850281 122.60948944]
[236.62205505 113.65956879]
[221.68315125 112.30726624]
[206.71308899 111.36000824]
[191.72286987 110.81846619]
[176.73263550 110.27693176]
[161.74241638 109.73539734]
[146.75219727 109.19386292]
[131.76197815 108.65232086]
[123.66227722 122.88629150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 19]
[6 18]
[7 16]
[8 15]
[9 14]
[28 87]
[29 86]
[30 85]
[31 84]
[32 83]
[33 82]
[34 81]
[35 80]
[36 79]
[37 77]
[38 76]
[39 75]
[40 74]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[91 172]
[92 171]
[93 170]
[94 169]
[95 168]
[96 167]
[100 166]
[101 165]
[103 163]
[104 162]
[105 161]
[106 160]
[108 159]
[109 158]
[110 157]
[112 155]
[113 154]
[114 153]
[117 151]
[118 150]
[119 149]
[120 148]
[123 145]
[124 144]
[125 143]
[128 141]
[129 140]
[130 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
