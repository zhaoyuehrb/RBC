%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPINK9)
} def

/sequence { (\
GGACACCAGGUCACUUCUUUUCCCUACAUCUGACUGCCUUGGCCACUUCAGUACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.100127197 ubox
1 12 0.011794962 ubox
1 15 0.003741741 ubox
1 17 0.009483655 ubox
1 18 0.011613433 ubox
1 22 0.017714638 ubox
1 23 0.134193561 ubox
1 24 0.043168215 ubox
1 25 0.009411474 ubox
1 31 0.018912173 ubox
1 38 0.130479496 ubox
1 39 0.009666769 ubox
1 44 0.830665434 ubox
1 47 0.113931818 ubox
1 48 0.012417479 ubox
1 49 0.248888435 ubox
1 55 0.019282137 ubox
2 6 0.098600080 ubox
2 11 0.008374983 ubox
2 12 0.136351562 ubox
2 14 0.003505323 ubox
2 16 0.007114917 ubox
2 17 0.013333609 ubox
2 20 0.003437245 ubox
2 21 0.017783104 ubox
2 22 0.134879444 ubox
2 23 0.042270711 ubox
2 24 0.009909334 ubox
2 30 0.020232729 ubox
2 37 0.130674060 ubox
2 38 0.011400771 ubox
2 40 0.004747725 ubox
2 43 0.825534512 ubox
2 46 0.131155284 ubox
2 47 0.015754793 ubox
2 48 0.247576410 ubox
2 49 0.081363066 ubox
2 54 0.022548365 ubox
3 11 0.136819121 ubox
3 15 0.006300202 ubox
3 16 0.013124899 ubox
3 19 0.003968219 ubox
3 20 0.019118489 ubox
3 21 0.131763679 ubox
3 29 0.019870430 ubox
3 39 0.005846973 ubox
3 47 0.239206511 ubox
3 48 0.079817152 ubox
3 52 0.032197139 ubox
4 10 0.136838220 ubox
4 36 0.103078870 ubox
4 41 0.485996992 ubox
4 51 0.032714007 ubox
5 11 0.005469065 ubox
5 35 0.096367534 ubox
5 40 0.476179313 ubox
5 52 0.007803179 ubox
6 10 0.005633721 ubox
6 42 0.785629320 ubox
6 51 0.007675784 ubox
7 32 0.131994371 ubox
7 36 0.186493866 ubox
7 41 0.786964649 ubox
8 15 0.091156982 ubox
8 16 0.040540350 ubox
8 18 0.079104318 ubox
8 19 0.049650869 ubox
8 20 0.006751134 ubox
8 21 0.003798800 ubox
8 25 0.045576583 ubox
8 31 0.132422084 ubox
8 35 0.174301740 ubox
8 39 0.396262892 ubox
8 40 0.706355810 ubox
8 47 0.006051862 ubox
8 48 0.004374949 ubox
9 14 0.094808209 ubox
9 15 0.044855686 ubox
9 16 0.006025813 ubox
9 17 0.081834793 ubox
9 18 0.057154601 ubox
9 19 0.005927264 ubox
9 20 0.006285234 ubox
9 22 0.004494506 ubox
9 23 0.027206672 ubox
9 24 0.047728438 ubox
9 25 0.003301194 ubox
9 30 0.132422471 ubox
9 31 0.007730426 ubox
9 34 0.129709523 ubox
9 35 0.520422236 ubox
9 38 0.528908591 ubox
9 39 0.572385443 ubox
9 44 0.147294690 ubox
9 46 0.003574026 ubox
9 47 0.003785792 ubox
9 54 0.003329775 ubox
9 55 0.013332173 ubox
10 14 0.044290333 ubox
10 15 0.005563849 ubox
10 16 0.077308260 ubox
10 17 0.057814505 ubox
10 18 0.004355357 ubox
10 19 0.006523344 ubox
10 21 0.004300650 ubox
10 22 0.027546450 ubox
10 23 0.047410423 ubox
10 24 0.003619894 ubox
10 27 0.008682262 ubox
10 29 0.128405088 ubox
10 30 0.008224229 ubox
10 34 0.549956550 ubox
10 37 0.527853373 ubox
10 38 0.561629708 ubox
10 43 0.147485965 ubox
10 46 0.003820396 ubox
10 54 0.014809953 ubox
11 26 0.008435185 ubox
11 28 0.123194012 ubox
11 33 0.576018439 ubox
11 36 0.364405605 ubox
11 42 0.147416601 ubox
11 45 0.003729109 ubox
11 53 0.014692020 ubox
12 32 0.583685629 ubox
12 36 0.645251178 ubox
12 41 0.147301044 ubox
13 31 0.525853914 ubox
13 35 0.624629912 ubox
13 40 0.136056420 ubox
13 52 0.020787121 ubox
14 42 0.003581519 ubox
14 51 0.021371419 ubox
15 33 0.214717524 ubox
15 41 0.003538756 ubox
15 50 0.020455088 ubox
16 32 0.177684033 ubox
16 33 0.623916760 ubox
17 32 0.645058018 ubox
18 33 0.038557462 ubox
19 32 0.040094298 ubox
19 33 0.035823100 ubox
20 32 0.037048863 ubox
20 33 0.024820050 ubox
21 32 0.023927370 ubox
21 33 0.071017788 ubox
22 32 0.072931349 ubox
22 42 0.009122152 ubox
23 41 0.009129088 ubox
23 42 0.022492445 ubox
24 41 0.022621081 ubox
24 42 0.005313160 ubox
24 51 0.003927924 ubox
25 32 0.012906443 ubox
25 36 0.005509122 ubox
25 41 0.005331901 ubox
25 50 0.003739144 ubox
25 53 0.030206277 ubox
26 31 0.015438893 ubox
26 35 0.008890751 ubox
26 40 0.005350644 ubox
26 52 0.032140860 ubox
27 36 0.029830268 ubox
27 41 0.007792345 ubox
27 51 0.026131591 ubox
28 35 0.028330761 ubox
28 40 0.007732894 ubox
28 52 0.037963883 ubox
29 51 0.006557503 ubox
30 41 0.004096776 ubox
30 42 0.006784555 ubox
30 51 0.193921438 ubox
31 41 0.006861272 ubox
31 45 0.013072418 ubox
31 50 0.197281535 ubox
31 53 0.007565530 ubox
32 40 0.007100280 ubox
32 44 0.014489681 ubox
32 48 0.006006437 ubox
32 49 0.197697855 ubox
32 52 0.005975535 ubox
33 39 0.007128784 ubox
33 47 0.021233098 ubox
33 48 0.192429290 ubox
33 52 0.069479672 ubox
34 42 0.026064628 ubox
34 51 0.071906839 ubox
35 41 0.025453974 ubox
35 45 0.083240917 ubox
35 50 0.071804285 ubox
35 53 0.018445044 ubox
36 40 0.011873543 ubox
36 43 0.182320246 ubox
36 44 0.067354186 ubox
36 49 0.069981861 ubox
36 52 0.021584088 ubox
37 42 0.189648419 ubox
37 51 0.021228760 ubox
38 51 0.012662880 ubox
39 50 0.010882990 ubox
39 51 0.061999124 ubox
40 50 0.078938183 ubox
40 53 0.004861379 ubox
41 47 0.024858831 ubox
41 48 0.011161794 ubox
41 49 0.081830150 ubox
41 52 0.004844905 ubox
41 55 0.008931765 ubox
42 46 0.025389850 ubox
42 47 0.009150939 ubox
42 48 0.068104928 ubox
42 52 0.028173099 ubox
42 54 0.010256717 ubox
43 51 0.032427846 ubox
45 52 0.166612959 ubox
46 51 0.174203606 ubox
1 44 0.9500000 lbox
2 43 0.9500000 lbox
4 41 0.9500000 lbox
5 40 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
showpage
end
%%EOF
