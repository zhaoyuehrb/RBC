%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUUAAUGCUUACAGCUGAGAAGCAGGUCAGUCAGGUUCCUGGGCGCUCUGUUACACAAGCAAGAUACAGCCAGCCCCACCUAAUUUUGUUUCCCUGGCACCCUCCUGCUCAGUGCGACAUUGUCACACUUAACCCAUCUGUUUUCUCUAAUGCACGACAGAUUCCUUUCAGACAGGACAACUGUGAUAUUUCAGUUCCUGAUUGUAAAUACCUCCUAAGCCUGAAGCUUCUGUUACUAGCCAUUGUGAGCUUC\
AGUUUCUUCAUCUGCAAA\
) } def
/len { sequence length } bind def

/coor [
[139.73641968 836.24468994]
[137.50395203 821.36169434]
[138.21820068 806.32922363]
[141.85171509 791.72497559]
[148.26483154 778.11035156]
[157.21105957 766.00866699]
[168.34651184 755.88500977]
[181.24317932 748.12860107]
[195.40534973 743.03747559]
[193.17781067 728.20379639]
[190.95027161 713.37011719]
[188.72273254 698.53643799]
[186.49520874 683.70275879]
[184.26766968 668.86907959]
[182.04013062 654.03540039]
[179.55781555 639.24224854]
[176.82147217 624.49395752]
[174.08511353 609.74560547]
[169.79127502 603.76489258]
[171.40295410 594.81262207]
[168.83587646 580.03387451]
[159.03460693 568.81854248]
[164.29602051 553.89782715]
[161.72894287 539.11914062]
[159.16186523 524.34039307]
[156.59478760 509.56170654]
[154.02770996 494.78298950]
[151.46063232 480.00430298]
[137.43034363 475.00262451]
[127.72281647 463.57373047]
[125.02145386 448.72216797]
[130.15026855 434.41860962]
[141.82612610 424.53823853]
[139.25904846 409.75952148]
[136.69197083 394.98083496]
[134.12489319 380.20211792]
[131.55781555 365.42340088]
[128.99075317 350.64471436]
[126.42366791 335.86599731]
[123.13369751 332.45092773]
[121.93071747 326.94467163]
[123.97122955 320.71929932]
[121.74369812 305.88562012]
[119.51615906 291.05194092]
[117.28862762 276.21826172]
[103.56867981 273.36041260]
[91.61968231 265.98052979]
[82.88410187 254.94560242]
[78.42463684 241.56524658]
[78.79493713 227.43634033]
[83.97096252 214.25241089]
[93.35143280 203.60063171]
[105.82760620 196.77082825]
[103.77029419 181.91258240]
[101.71298218 167.05433655]
[99.65566254 152.19609070]
[97.59835052 137.33784485]
[77.98461914 130.25236511]
[65.21041870 113.76836395]
[63.24432373 93.00693512]
[49.36973190 87.30642700]
[35.49514389 81.60592651]
[21.62055206 75.90541840]
[5.91533613 77.81768036]
[-2.91660810 65.82409668]
[-16.79119873 60.12359619]
[-28.96153069 69.38806152]
[-44.03551483 71.30424500]
[-57.95222092 65.45687866]
[-67.01292419 53.50867462]
[-68.86402130 38.72899246]
[-82.73860931 33.02848816]
[-96.61319733 27.32798195]
[-110.48779297 21.62747765]
[-124.36238098 15.92697239]
[-136.53271484 25.19143486]
[-151.60670471 27.10762405]
[-165.52340698 21.26025963]
[-174.58410645 9.31204987]
[-176.43521118 -5.46763229]
[-190.30979919 -11.16813660]
[-203.44578552 -2.90828419]
[-218.92576599 -3.98065829]
[-230.79734802 -13.97290897]
[-234.49568176 -29.04281235]
[-228.59867859 -43.39568329]
[-215.37384033 -51.51255035]
[-199.90641785 -50.27230835]
[-188.14392090 -40.15186310]
[-184.60928345 -25.04272652]
[-170.73469543 -19.34222221]
[-159.02755737 -28.55137634]
[-144.18397522 -30.67828369]
[-130.17617798 -25.05260849]
[-120.80348969 -13.09227753]
[-118.66187286 2.05238247]
[-104.78728485 7.75288725]
[-90.91269684 13.45339203]
[-77.03810883 19.15389633]
[-63.16351700 24.85440063]
[-51.45637894 15.64524651]
[-36.61278534 13.51833916]
[-22.60499763 19.14401436]
[-13.23231030 31.10434532]
[-11.09069347 46.24900436]
[2.78389645 51.94950867]
[17.49670982 49.62950897]
[27.32105827 62.03083038]
[41.19564819 67.73133850]
[55.07023621 73.43183899]
[68.94482422 79.13234711]
[67.07157898 64.49829865]
[70.65299988 48.32347107]
[65.59458923 34.20212173]
[60.53618240 20.08077049]
[55.47777557 5.95942211]
[43.53990555 -4.42315388]
[46.53199768 -19.01413155]
[41.47359085 -33.13548279]
[36.41518402 -47.25683212]
[25.38163185 -60.12916946]
[34.69652176 -74.29494476]
[50.88731003 -69.26555634]
[50.53653336 -52.31523895]
[55.59494019 -38.19388962]
[60.65334702 -24.07254028]
[72.22940826 -14.70001793]
[69.59912109 0.90101415]
[74.65753174 15.02236366]
[79.71594238 29.14371300]
[84.77434540 43.26506424]
[92.27385712 43.17907333]
[92.10187531 28.18005753]
[91.93012238 13.18104076]
[106.92914581 13.00952339]
[107.10088348 28.00807571]
[107.27286530 43.00709152]
[114.77237701 42.92110062]
[119.50566101 28.68747711]
[124.23894501 14.45385456]
[128.97222900 0.22023207]
[133.70552063 -14.01339054]
[138.43879700 -28.24701309]
[143.17208862 -42.48063660]
[131.89675903 -52.71717834]
[125.76574707 -66.65743256]
[125.84130096 -81.88616180]
[132.11032104 -95.76489258]
[143.48664856 -105.88906097]
[157.99929810 -110.50459290]
[173.13383484 -108.81180573]
[186.26812744 -101.10400391]
[195.12657166 -88.71659088]
[198.17439270 -73.79577637]
[194.88352966 -58.92668152]
[185.82415771 -46.68545532]
[172.56585693 -39.19297409]
[157.40570068 -37.74735260]
[152.67242432 -23.51372910]
[147.93913269 -9.28010559]
[143.20585632 4.95351696]
[138.47256470 19.18713951]
[133.73928833 33.42076111]
[129.00599670 47.65438461]
[134.48854065 52.77216721]
[144.72410583 41.80707550]
[154.95967102 30.84198570]
[165.19523621 19.87689400]
[175.43098450 8.91197300]
[186.39573669 19.14790154]
[176.16032410 30.11245918]
[165.92475891 41.07754898]
[155.68919373 52.04264069]
[145.45362854 63.00773239]
[150.93617249 68.12551117]
[164.81077576 62.42501068]
[178.68536377 56.72450638]
[192.55995178 51.02399826]
[206.43453979 45.32349396]
[210.73051453 40.37741470]
[216.07377625 38.58420181]
[220.69320679 39.65538406]
[234.69485474 34.27451324]
[248.69651794 28.89364052]
[262.69815063 23.51276970]
[266.57830811 8.48865223]
[278.56976318 -1.35942781]
[294.06155396 -2.24468303]
[307.09680176 6.17328548]
[312.66314697 20.65759659]
[308.62026978 35.63873672]
[296.52267456 45.35615540]
[281.02218628 46.07329941]
[268.07904053 37.51441956]
[254.07737732 42.89529037]
[240.07572937 48.27616119]
[226.07408142 53.65703201]
[212.13504028 59.19808578]
[198.26045227 64.89859009]
[184.38586426 70.59909821]
[170.51127625 76.29959869]
[156.63668823 82.00010681]
[150.99638367 110.62006378]
[133.69395447 129.45376587]
[112.45659637 135.28053284]
[114.51390839 150.13877869]
[116.57122803 164.99702454]
[118.62854004 179.85527039]
[120.68585205 194.71351624]
[136.28535461 198.67903137]
[149.13320923 208.31028748]
[157.27514648 222.10520935]
[159.48695374 237.93125916]
[155.45846558 253.35513306]
[145.83676147 266.01681519]
[132.12229919 273.99072266]
[134.34983826 288.82440186]
[136.57737732 303.65808105]
[138.80491638 318.49176025]
[141.20237732 333.29891968]
[143.76945496 348.07763672]
[146.33653259 362.85632324]
[148.90361023 377.63504028]
[151.47067261 392.41375732]
[154.03775024 407.19244385]
[156.60482788 421.97116089]
[170.92868042 427.33535767]
[180.58062744 439.07147217]
[183.04585266 453.96408081]
[177.76107788 467.99713135]
[166.23934937 477.43722534]
[168.80641174 492.21591187]
[171.37348938 506.99462891]
[173.94056702 521.77331543]
[176.50764465 536.55206299]
[179.07472229 551.33074951]
[189.05961609 563.60314941]
[183.61459351 577.46685791]
[186.18165588 592.24554443]
[188.83341980 607.00927734]
[191.56977844 621.75756836]
[194.30612183 636.50585938]
[197.64721680 640.41937256]
[199.03916931 644.78454590]
[198.63249207 648.79241943]
[196.87380981 651.80786133]
[199.10134888 666.64154053]
[201.32888794 681.47521973]
[203.55641174 696.30889893]
[205.78395081 711.14257812]
[208.01148987 725.97625732]
[210.23902893 740.80993652]
[225.27186584 741.51690674]
[239.87786865 745.14331055]
[253.49562073 751.54986572]
[265.60165405 760.49017334]
[275.73071289 771.62072754]
[283.49337769 784.51361084]
[288.59136963 798.67333984]
[290.82864380 813.55554199]
[290.11926270 828.58825684]
[286.49047852 843.19366455]
[280.08175659 856.81042480]
[271.13946533 868.91497803]
[260.00729370 879.04223633]
[247.11312866 886.80285645]
[232.95260620 891.89849854]
[218.07002258 894.13342285]
[203.03739929 893.42156982]
[188.43257141 889.79040527]
[174.81690979 883.37951660]
[162.71374512 874.43524170]
[152.58831787 863.30145264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 252]
[10 251]
[11 250]
[12 249]
[13 248]
[14 247]
[15 246]
[16 242]
[17 241]
[18 240]
[20 239]
[21 238]
[23 236]
[24 235]
[25 234]
[26 233]
[27 232]
[28 231]
[33 226]
[34 225]
[35 224]
[36 223]
[37 222]
[38 221]
[39 220]
[42 219]
[43 218]
[44 217]
[45 216]
[53 209]
[54 208]
[55 207]
[56 206]
[57 205]
[60 111]
[61 110]
[62 109]
[63 108]
[65 106]
[66 105]
[71 100]
[72 99]
[73 98]
[74 97]
[75 96]
[80 91]
[81 90]
[113 131]
[114 130]
[115 129]
[116 128]
[118 126]
[119 125]
[120 124]
[138 164]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[144 158]
[175 202]
[176 201]
[177 200]
[178 199]
[179 198]
[182 197]
[183 196]
[184 195]
[185 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
