%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:32:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPTN)
} def

/sequence { (\
AUCCUCUCUGACUCCUGAAUCUUCUGCUCCUUCCUCCUCAAGCAGGUUCACCCGUACUUGUCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 61 0.004399517 ubox
2 11 0.060282967 ubox
2 18 0.005489219 ubox
2 60 0.004687357 ubox
3 10 0.068997194 ubox
3 17 0.005860636 ubox
3 46 0.005321130 ubox
4 45 0.005333545 ubox
5 11 0.034370650 ubox
5 18 0.023168244 ubox
5 44 0.005212605 ubox
6 10 0.038411375 ubox
6 17 0.024329332 ubox
6 42 0.005349677 ubox
7 18 0.052049331 ubox
7 41 0.005539499 ubox
7 46 0.004365298 ubox
8 17 0.054687106 ubox
8 45 0.005777330 ubox
9 40 0.018422773 ubox
9 44 0.005803606 ubox
9 50 0.023351546 ubox
9 54 0.022849183 ubox
9 56 0.049122818 ubox
9 60 0.010783923 ubox
9 63 0.832140311 ubox
10 16 0.003931932 ubox
10 21 0.018428132 ubox
10 24 0.005718634 ubox
10 29 0.005465171 ubox
10 33 0.004296933 ubox
10 36 0.004116530 ubox
10 39 0.019845921 ubox
10 43 0.005811005 ubox
10 48 0.003999663 ubox
10 49 0.026375892 ubox
10 53 0.029689256 ubox
10 55 0.046542296 ubox
10 59 0.016141018 ubox
10 62 0.899247443 ubox
11 20 0.018117525 ubox
11 23 0.005411707 ubox
11 28 0.005298150 ubox
11 32 0.004148120 ubox
11 35 0.003995989 ubox
11 38 0.019218954 ubox
11 47 0.005356731 ubox
11 48 0.025879371 ubox
11 55 0.261712302 ubox
11 58 0.013710452 ubox
11 61 0.898790871 ubox
12 42 0.005786134 ubox
12 46 0.006038736 ubox
12 54 0.272554539 ubox
12 60 0.897015483 ubox
13 41 0.005553969 ubox
14 46 0.026938182 ubox
15 45 0.026915202 ubox
16 40 0.015305900 ubox
16 44 0.026591001 ubox
16 50 0.866323849 ubox
16 54 0.168441501 ubox
16 56 0.153269851 ubox
16 63 0.019172617 ubox
17 23 0.006457573 ubox
17 24 0.027066059 ubox
17 29 0.007936636 ubox
17 33 0.019789338 ubox
17 36 0.004867739 ubox
17 39 0.016581511 ubox
17 43 0.026170041 ubox
17 48 0.008602639 ubox
17 49 0.908985547 ubox
17 53 0.182345275 ubox
17 55 0.148340922 ubox
17 59 0.008249564 ubox
17 62 0.020701501 ubox
18 22 0.006325180 ubox
18 23 0.025706095 ubox
18 28 0.007688853 ubox
18 32 0.019683217 ubox
18 35 0.004692259 ubox
18 38 0.015909487 ubox
18 47 0.011098199 ubox
18 48 0.908480399 ubox
18 58 0.007933634 ubox
18 59 0.004274733 ubox
18 61 0.020141745 ubox
19 31 0.017753966 ubox
19 47 0.903152566 ubox
19 55 0.014973056 ubox
19 58 0.003974018 ubox
20 46 0.805072655 ubox
20 54 0.015115340 ubox
21 42 0.012140443 ubox
21 45 0.605052165 ubox
21 46 0.115645826 ubox
22 41 0.012102806 ubox
22 44 0.500261804 ubox
22 45 0.054169202 ubox
22 46 0.028756411 ubox
23 40 0.010868092 ubox
23 41 0.003988906 ubox
23 44 0.035671825 ubox
23 45 0.008887419 ubox
23 46 0.548098096 ubox
24 42 0.383329859 ubox
24 45 0.787866876 ubox
24 46 0.017167165 ubox
25 40 0.054241862 ubox
25 41 0.378706614 ubox
25 44 0.855217640 ubox
25 45 0.008655343 ubox
25 50 0.014852217 ubox
25 56 0.006199403 ubox
25 63 0.003954071 ubox
26 39 0.073518581 ubox
26 43 0.917977191 ubox
26 47 0.008107837 ubox
26 49 0.015600517 ubox
26 55 0.006714617 ubox
26 62 0.004262915 ubox
27 42 0.917773936 ubox
27 45 0.014138239 ubox
27 46 0.008023788 ubox
27 54 0.006730451 ubox
28 41 0.879517000 ubox
28 44 0.014034155 ubox
28 45 0.007514522 ubox
29 46 0.017017586 ubox
30 42 0.025686289 ubox
30 45 0.017033161 ubox
31 41 0.038529717 ubox
31 44 0.016203683 ubox
32 40 0.059984345 ubox
32 41 0.015687044 ubox
32 44 0.003264098 ubox
33 46 0.008346260 ubox
34 42 0.015183501 ubox
34 45 0.008391416 ubox
35 41 0.015846533 ubox
35 44 0.008285918 ubox
36 46 0.006319153 ubox
37 45 0.006356252 ubox
38 44 0.006101943 ubox
39 60 0.012918134 ubox
40 59 0.013337323 ubox
41 58 0.013363762 ubox
42 55 0.007110677 ubox
42 57 0.013140643 ubox
42 61 0.071315264 ubox
43 54 0.008147993 ubox
43 60 0.074289859 ubox
44 59 0.075201335 ubox
45 52 0.018562140 ubox
45 53 0.022834963 ubox
45 58 0.077135311 ubox
46 51 0.021548144 ubox
46 52 0.024600364 ubox
46 55 0.003925045 ubox
46 57 0.096471244 ubox
47 54 0.004284455 ubox
47 56 0.096352607 ubox
47 64 0.005945833 ubox
48 63 0.006434060 ubox
49 60 0.010605509 ubox
50 59 0.016250895 ubox
50 61 0.024316467 ubox
51 60 0.030450080 ubox
53 60 0.065552383 ubox
54 59 0.072813317 ubox
54 61 0.005066005 ubox
55 60 0.005393844 ubox
58 64 0.013182126 ubox
58 65 0.023204755 ubox
59 63 0.012178285 ubox
59 64 0.032194799 ubox
9 63 0.9500000 lbox
10 62 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
showpage
end
%%EOF
