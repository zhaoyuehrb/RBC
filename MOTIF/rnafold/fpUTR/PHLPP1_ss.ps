%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCGACCCGGGCGGGGAGGGCGUGUGUCGGGGGGGCGGUGGCGGCGAGGCGGGCGCGCGGGAUGGAACACUGAGACACCGACGGAAUGCUCCGAAUCGCCACAUAAUCCCCUGGAACGGCCGCGCACAACGCCAUUGGCUUCUCCCUUCUCCGCGCGCCGCCGCCGUCUCCCACCUCCGCCUCAUCGCCUCCCUCUCCGCCCGCUGCCUCCGGAGCUGGGGGGGAAACGCGAAGCCCCACUGCA\
) } def
/len { sequence length } bind def

/coor [
[480.91851807 1092.57934570]
[490.06756592 1082.71350098]
[487.77783203 1067.88928223]
[485.48809814 1053.06506348]
[483.19836426 1038.24084473]
[470.02627563 1024.06701660]
[477.67364502 1005.39929199]
[475.00604248 990.63842773]
[470.57165527 976.30883789]
[464.43563843 962.62127686]
[458.29959106 948.93371582]
[452.16357422 935.24621582]
[446.02752686 921.55865479]
[439.89151001 907.87109375]
[433.75546265 894.18353271]
[427.61944580 880.49597168]
[421.48342896 866.80841064]
[415.34738159 853.12084961]
[409.21136475 839.43328857]
[403.07531738 825.74572754]
[396.93930054 812.05822754]
[384.38720703 809.20721436]
[375.63299561 799.50714111]
[374.03317261 786.34332275]
[380.39285278 774.48602295]
[374.43212891 760.72119141]
[368.47137451 746.95642090]
[354.56997681 741.73272705]
[348.32885742 727.85821533]
[353.90219116 713.31256104]
[347.94143677 699.54772949]
[341.98071289 685.78295898]
[336.01998901 672.01812744]
[323.86221313 663.41357422]
[325.47845459 647.67517090]
[319.51770020 633.91033936]
[307.35995483 625.30578613]
[308.97616577 609.56738281]
[303.01544189 595.80255127]
[297.05468750 582.03778076]
[291.09396362 568.27294922]
[285.13323975 554.50817871]
[270.49661255 544.80865479]
[272.79074097 526.52716064]
[266.65469360 512.83959961]
[260.51867676 499.15206909]
[254.38264465 485.46450806]
[239.62335205 475.95266724]
[241.68380737 457.64340210]
[235.37348938 444.03533936]
[229.06317139 430.42724609]
[222.75283813 416.81918335]
[216.44252014 403.21109009]
[210.79049683 398.47619629]
[210.13973999 389.38870239]
[204.00370789 375.70114136]
[197.86767578 362.01361084]
[191.73164368 348.32604980]
[185.59561157 334.63848877]
[179.45959473 320.95092773]
[173.32356262 307.26339722]
[167.10025024 293.61529541]
[160.78993225 280.00720215]
[148.41639709 271.71594238]
[149.63014221 255.94137573]
[143.31982422 242.33329773]
[137.29672241 256.07092285]
[123.36728668 261.63604736]
[109.53627014 255.83062744]
[103.75186920 241.99079895]
[109.33818054 228.06983948]
[123.08494568 222.06762695]
[137.09223938 227.43330383]
[131.84211731 213.38209534]
[126.59199524 199.33090210]
[121.34187317 185.27969360]
[107.72533417 179.35302734]
[102.20079803 165.17790222]
[108.50955200 150.93580627]
[103.25942993 136.88461304]
[98.00930786 122.83340454]
[92.75919342 108.78220367]
[84.05124664 96.56861877]
[72.47891235 87.02497864]
[60.90657043 77.48134613]
[49.33423233 67.93770599]
[33.07995605 65.76274872]
[27.08743858 50.49769592]
[37.52127075 37.84593201]
[53.64802170 40.82250214]
[58.87786865 56.36537170]
[70.45021057 65.90900421]
[82.02254486 75.45264435]
[93.59488678 84.99627686]
[99.75678253 80.72064972]
[91.20570374 68.39672089]
[103.52976227 59.84584045]
[112.08057404 72.16938782]
[118.24246979 67.89375305]
[113.35291290 53.71305466]
[108.46335602 39.53235626]
[98.93613434 37.99739456]
[90.66548920 33.13855743]
[84.75807953 25.65463257]
[81.98661804 16.59223938]
[82.68897247 7.19954729]
[86.72753143 -1.24561346]
[93.51367950 -7.60959053]
[89.35457611 -22.02145576]
[85.19547272 -36.43331909]
[74.99442291 -49.97492218]
[85.18289185 -63.52599716]
[101.02482605 -57.48701096]
[99.60733795 -40.59242630]
[103.76644135 -26.18056107]
[107.92554474 -11.76869678]
[126.58856964 -3.38670468]
[133.03964233 16.33942795]
[122.64405060 34.64279938]
[127.53360748 48.82349777]
[132.42317200 63.00419617]
[139.88406372 62.23928452]
[162.26673889 59.94455719]
[164.17713928 45.06670761]
[166.08753967 30.18885994]
[157.45797729 16.66443443]
[162.78746033 1.53247952]
[177.98768616 -3.59906554]
[191.39833069 5.20628214]
[192.73190308 21.19381332]
[180.96539307 32.09926224]
[179.05499268 46.97711182]
[177.14459229 61.85495758]
[159.28729248 91.24218750]
[133.33720398 105.58167267]
[106.81039429 103.53208160]
[112.06050873 117.58328247]
[117.31063080 131.63449097]
[122.56075287 145.68568420]
[136.66287231 152.30142212]
[141.78707886 166.62612915]
[135.39308167 180.02957153]
[140.64318848 194.08078003]
[145.89331055 208.13197327]
[151.14343262 222.18318176]
[156.92790222 236.02296448]
[163.23822021 249.63105774]
[176.06311035 258.89566040]
[174.39801025 273.69689941]
[180.70832825 287.30496216]
[187.14254761 293.75527954]
[187.01110840 301.12734985]
[193.14714050 314.81491089]
[199.28317261 328.50247192]
[205.41920471 342.19003296]
[211.55523682 355.87756348]
[217.69126892 369.56512451]
[223.82728577 383.25268555]
[230.05059814 396.90078735]
[236.36091614 410.50885010]
[242.67124939 424.11694336]
[248.98156738 437.72500610]
[255.29188538 451.33309937]
[267.09948730 456.48608398]
[272.08090210 467.93154907]
[268.07019043 479.32849121]
[274.20620728 493.01605225]
[280.34225464 506.70358276]
[286.47827148 520.39117432]
[298.21911621 525.69451904]
[303.05395508 537.20263672]
[298.89804077 548.54742432]
[304.85876465 562.31225586]
[310.81948853 576.07702637]
[316.78024292 589.84185791]
[322.74096680 603.60662842]
[335.32507324 613.19573975]
[333.28250122 627.94964600]
[339.24322510 641.71441650]
[351.82733154 651.30352783]
[349.78475952 666.05743408]
[355.74551392 679.82220459]
[361.70623779 693.58703613]
[367.66696167 707.35180664]
[382.08850098 713.23883057]
[387.93743896 727.28320312]
[382.23617554 740.99566650]
[388.19689941 754.76049805]
[394.15765381 768.52526855]
[410.54742432 774.67187500]
[417.27752686 790.46392822]
[410.62686157 805.92218018]
[416.76287842 819.60974121]
[422.89892578 833.29730225]
[429.03494263 846.98486328]
[435.17095947 860.67236328]
[441.30700684 874.35992432]
[447.44302368 888.04748535]
[453.57907104 901.73504639]
[459.71508789 915.42260742]
[465.85113525 929.11016846]
[471.98715210 942.79772949]
[478.12316895 956.48529053]
[484.25921631 970.17285156]
[489.78775024 966.67694092]
[497.06500244 965.19305420]
[505.36157227 966.34973145]
[513.75360107 970.52008057]
[524.29223633 981.19421387]
[534.83093262 991.86834717]
[545.36956787 1002.54241943]
[555.90820312 1013.21655273]
[566.44689941 1023.89068604]
[582.39459229 1027.71203613]
[586.79901123 1043.50866699]
[575.12927246 1055.03027344]
[559.39013672 1050.42456055]
[555.77276611 1034.42932129]
[545.23413086 1023.75518799]
[534.69543457 1013.08111572]
[524.15679932 1002.40698242]
[513.61816406 991.73284912]
[503.07946777 981.05877686]
[489.76693726 987.97082520]
[492.43453979 1002.73168945]
[501.69070435 1008.38848877]
[506.22406006 1018.00170898]
[504.76159668 1028.30773926]
[498.02258301 1035.95117188]
[500.31231689 1050.77539062]
[502.60205078 1065.59948730]
[504.89178467 1080.42370605]
[519.19696045 1090.51171875]
[521.71893311 1107.49182129]
[511.37854004 1120.76831055]
[513.85742188 1135.56213379]
[526.86975098 1144.53173828]
[529.64617920 1160.09020996]
[520.53948975 1173.00695801]
[504.95248413 1175.61877441]
[492.13269043 1166.37597656]
[489.68585205 1150.76232910]
[499.06362915 1138.04101562]
[496.58477783 1123.24719238]
[485.16018677 1117.31750488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 232]
[3 231]
[4 230]
[5 229]
[7 225]
[8 224]
[9 204]
[10 203]
[11 202]
[12 201]
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[25 189]
[26 188]
[27 187]
[30 184]
[31 183]
[32 182]
[33 181]
[35 179]
[36 178]
[38 176]
[39 175]
[40 174]
[41 173]
[42 172]
[44 169]
[45 168]
[46 167]
[47 166]
[49 163]
[50 162]
[51 161]
[52 160]
[53 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 154]
[60 153]
[61 152]
[62 150]
[63 149]
[65 147]
[66 146]
[73 145]
[74 144]
[75 143]
[76 142]
[79 139]
[80 138]
[81 137]
[82 136]
[83 94]
[84 93]
[85 92]
[86 91]
[99 121]
[100 120]
[101 119]
[108 116]
[109 115]
[110 114]
[123 133]
[124 132]
[125 131]
[208 223]
[209 222]
[210 221]
[211 220]
[212 219]
[213 218]
[235 244]
[236 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
