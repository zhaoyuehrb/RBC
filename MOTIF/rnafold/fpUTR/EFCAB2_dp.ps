%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EFCAB2)
} def

/sequence { (\
GCCAGGCUCGCCGCGGGGCGCUGAGCAGGCCGGGACACCGCGGCCGAGGUUAUCGUUAGGCAUCUCCCAGGCGACCGGCUCCGCAGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.038140385 ubox
1 11 0.003820223 ubox
1 19 0.028045450 ubox
1 26 0.021874173 ubox
1 30 0.015457408 ubox
1 61 0.003351210 ubox
1 72 0.007010989 ubox
1 79 0.987347037 ubox
1 84 0.077663984 ubox
1 87 0.019115944 ubox
2 6 0.037960359 ubox
2 10 0.003831590 ubox
2 18 0.028061582 ubox
2 25 0.021888422 ubox
2 29 0.015508912 ubox
2 60 0.003353731 ubox
2 71 0.007016456 ubox
2 78 0.989092769 ubox
2 83 0.077564389 ubox
2 86 0.018975274 ubox
3 17 0.028042218 ubox
3 23 0.021796081 ubox
3 28 0.015507135 ubox
3 59 0.003350379 ubox
3 70 0.007007994 ubox
3 77 0.985531204 ubox
4 22 0.021786466 ubox
4 51 0.007519760 ubox
4 80 0.004935777 ubox
5 12 0.009775013 ubox
5 21 0.021698380 ubox
5 22 0.005712206 ubox
5 50 0.008450302 ubox
5 68 0.003504497 ubox
5 76 0.989931049 ubox
5 79 0.004499384 ubox
5 80 0.074599772 ubox
5 81 0.009401462 ubox
5 82 0.005731845 ubox
6 11 0.009726971 ubox
6 14 0.028080894 ubox
6 19 0.020305355 ubox
6 21 0.005934662 ubox
6 26 0.021499560 ubox
6 75 0.990223691 ubox
6 79 0.076967958 ubox
6 81 0.004638075 ubox
6 84 0.003457164 ubox
6 87 0.021720332 ubox
7 13 0.028067710 ubox
7 18 0.020296639 ubox
7 20 0.005593737 ubox
7 25 0.021550781 ubox
7 48 0.014043120 ubox
7 78 0.077012882 ubox
7 83 0.003453114 ubox
7 86 0.021745188 ubox
7 90 0.051765138 ubox
8 17 0.020253136 ubox
8 24 0.021509729 ubox
8 47 0.014171433 ubox
8 74 0.989551858 ubox
8 77 0.047359992 ubox
8 85 0.021494040 ubox
8 89 0.052980045 ubox
9 16 0.020221962 ubox
9 20 0.013236456 ubox
9 23 0.020076569 ubox
9 46 0.014203277 ubox
9 73 0.993920412 ubox
9 83 0.006995216 ubox
10 19 0.019338198 ubox
10 21 0.004373441 ubox
10 22 0.015227093 ubox
10 44 0.010280527 ubox
10 45 0.010039612 ubox
10 72 0.993979091 ubox
10 82 0.006964201 ubox
10 84 0.005321130 ubox
10 87 0.096154298 ubox
11 18 0.019414948 ubox
11 20 0.003300433 ubox
11 43 0.014374976 ubox
11 71 0.993992343 ubox
11 83 0.005272683 ubox
11 86 0.096229100 ubox
12 17 0.019413631 ubox
12 20 0.015597245 ubox
12 42 0.014381406 ubox
12 70 0.993681646 ubox
13 19 0.016349458 ubox
13 21 0.015371904 ubox
13 26 0.007694013 ubox
13 41 0.014458242 ubox
13 56 0.004819901 ubox
13 61 0.013567821 ubox
13 79 0.008601619 ubox
13 84 0.098988877 ubox
14 18 0.016232045 ubox
14 20 0.015392935 ubox
14 23 0.010079298 ubox
14 25 0.007598290 ubox
14 40 0.014458309 ubox
14 55 0.004992977 ubox
14 60 0.013553727 ubox
14 78 0.008571288 ubox
14 83 0.099075946 ubox
15 19 0.014402392 ubox
15 22 0.010954156 ubox
15 39 0.014426671 ubox
15 54 0.004991508 ubox
15 64 0.005470733 ubox
15 65 0.020723065 ubox
15 66 0.323673168 ubox
15 67 0.510683162 ubox
15 68 0.783327963 ubox
15 82 0.099080684 ubox
16 21 0.011084176 ubox
16 38 0.014414425 ubox
16 53 0.004823096 ubox
16 63 0.004545147 ubox
16 64 0.022793694 ubox
16 65 0.327404742 ubox
16 66 0.512163129 ubox
16 67 0.783842439 ubox
16 68 0.048396299 ubox
16 76 0.008479143 ubox
16 81 0.099072731 ubox
17 31 0.011089599 ubox
17 57 0.023569476 ubox
17 63 0.021701152 ubox
17 64 0.404758614 ubox
17 65 0.454534574 ubox
17 66 0.779684482 ubox
17 67 0.048833875 ubox
17 75 0.008422557 ubox
17 80 0.098818986 ubox
18 26 0.156321390 ubox
18 30 0.011299824 ubox
18 56 0.132853291 ubox
18 61 0.173643775 ubox
18 63 0.413560437 ubox
18 64 0.507993314 ubox
18 65 0.669795166 ubox
18 66 0.041886296 ubox
18 79 0.098682122 ubox
19 25 0.156669459 ubox
19 29 0.011292300 ubox
19 32 0.004206947 ubox
19 55 0.149733905 ubox
19 60 0.176542056 ubox
19 73 0.009237759 ubox
19 77 0.008519292 ubox
19 78 0.098156677 ubox
20 26 0.080396209 ubox
20 30 0.008002268 ubox
20 50 0.036258150 ubox
20 54 0.149492499 ubox
20 56 0.023991764 ubox
20 61 0.946190167 ubox
20 72 0.012137924 ubox
20 76 0.010403678 ubox
20 79 0.007360585 ubox
20 84 0.018613082 ubox
20 87 0.022762035 ubox
21 25 0.079896375 ubox
21 28 0.009106845 ubox
21 29 0.008545334 ubox
21 33 0.008412562 ubox
21 48 0.003566017 ubox
21 49 0.038154528 ubox
21 55 0.024176884 ubox
21 59 0.209789676 ubox
21 60 0.942837114 ubox
21 70 0.007044124 ubox
21 71 0.010572739 ubox
21 78 0.007999402 ubox
21 83 0.018632223 ubox
21 86 0.022790138 ubox
22 27 0.009046453 ubox
22 28 0.008461263 ubox
22 32 0.008413665 ubox
22 47 0.003313780 ubox
22 48 0.037991290 ubox
22 52 0.147522175 ubox
22 55 0.088804102 ubox
22 58 0.225792621 ubox
22 59 0.900393041 ubox
22 62 0.012479272 ubox
22 69 0.009292060 ubox
22 70 0.008186639 ubox
22 77 0.009929194 ubox
22 85 0.022689372 ubox
23 31 0.008393575 ubox
23 51 0.166993403 ubox
23 54 0.174329084 ubox
23 57 0.220594337 ubox
23 61 0.012699709 ubox
23 64 0.024416703 ubox
23 68 0.009894143 ubox
23 76 0.010541758 ubox
23 81 0.020122967 ubox
23 84 0.021082105 ubox
24 50 0.165929503 ubox
24 51 0.113674361 ubox
24 53 0.166299247 ubox
24 56 0.206892282 ubox
24 57 0.680773799 ubox
24 63 0.024320400 ubox
24 80 0.020973373 ubox
25 44 0.007121086 ubox
25 50 0.216897718 ubox
25 56 0.897591466 ubox
25 61 0.025404587 ubox
25 72 0.043534734 ubox
25 79 0.020999008 ubox
25 84 0.005590560 ubox
26 43 0.007132049 ubox
26 49 0.220168606 ubox
26 55 0.899542651 ubox
26 60 0.025410572 ubox
26 71 0.043493379 ubox
26 78 0.020971563 ubox
26 83 0.005962104 ubox
27 51 0.036452287 ubox
28 45 0.997530750 ubox
28 50 0.004312217 ubox
28 51 0.013961441 ubox
28 54 0.012772595 ubox
28 80 0.019510411 ubox
28 81 0.004685341 ubox
29 41 0.010568998 ubox
29 44 0.999247834 ubox
29 50 0.014450052 ubox
29 61 0.003513420 ubox
29 72 0.011868458 ubox
29 79 0.020774765 ubox
30 40 0.007487579 ubox
30 43 0.999241720 ubox
30 49 0.014500665 ubox
30 60 0.003520580 ubox
30 71 0.012041509 ubox
30 78 0.020845299 ubox
31 40 0.059751472 ubox
31 42 0.997447750 ubox
31 48 0.014117435 ubox
31 59 0.003512493 ubox
31 70 0.012039348 ubox
31 77 0.020874207 ubox
31 83 0.003912448 ubox
32 39 0.136315487 ubox
32 41 0.987018246 ubox
32 45 0.006542742 ubox
32 68 0.012114869 ubox
32 76 0.020853530 ubox
32 82 0.004068213 ubox
33 38 0.148652348 ubox
33 39 0.863317463 ubox
33 44 0.006563747 ubox
33 45 0.012075199 ubox
33 67 0.012160794 ubox
33 75 0.020814836 ubox
33 81 0.004050434 ubox
34 38 0.850116762 ubox
34 44 0.012062664 ubox
34 51 0.007678098 ubox
34 66 0.012157897 ubox
34 80 0.003838485 ubox
35 50 0.007917436 ubox
35 65 0.011913031 ubox
36 49 0.007943412 ubox
37 50 0.007130430 ubox
38 49 0.007533143 ubox
38 60 0.006168227 ubox
38 71 0.014635319 ubox
38 78 0.004675628 ubox
39 46 0.007948081 ubox
39 48 0.007538008 ubox
39 59 0.006170341 ubox
39 70 0.014653322 ubox
39 73 0.007266674 ubox
39 77 0.004681034 ubox
40 45 0.007588374 ubox
40 61 0.009512618 ubox
40 72 0.007486225 ubox
40 76 0.004616836 ubox
40 84 0.009555613 ubox
40 87 0.010452079 ubox
41 60 0.009522637 ubox
41 71 0.007477802 ubox
41 83 0.009683679 ubox
41 86 0.010554550 ubox
42 51 0.004160346 ubox
42 57 0.004499317 ubox
42 68 0.014653183 ubox
42 80 0.003543669 ubox
42 82 0.009315447 ubox
43 50 0.005168083 ubox
43 56 0.005202481 ubox
43 61 0.010825285 ubox
43 67 0.014597800 ubox
43 72 0.009651438 ubox
43 79 0.005818033 ubox
43 81 0.008270139 ubox
43 84 0.011035339 ubox
44 49 0.005324623 ubox
44 55 0.003748533 ubox
44 60 0.010861819 ubox
44 71 0.009781197 ubox
44 78 0.006990445 ubox
44 83 0.011023280 ubox
45 55 0.030791730 ubox
45 59 0.010790479 ubox
45 70 0.009783235 ubox
45 77 0.007002788 ubox
46 54 0.833409596 ubox
46 57 0.016328713 ubox
46 64 0.104979812 ubox
46 66 0.088336718 ubox
46 76 0.004385889 ubox
46 81 0.022033525 ubox
46 82 0.005201268 ubox
47 53 0.826066933 ubox
47 56 0.017159609 ubox
47 57 0.008117610 ubox
47 63 0.100070345 ubox
47 65 0.109711538 ubox
47 80 0.022086376 ubox
48 54 0.181804808 ubox
48 56 0.008816350 ubox
48 57 0.006152269 ubox
48 64 0.112233218 ubox
48 65 0.020403856 ubox
48 67 0.008029887 ubox
48 76 0.076610099 ubox
48 79 0.021823311 ubox
48 80 0.007119094 ubox
49 53 0.118528596 ubox
49 56 0.005443903 ubox
49 61 0.103736682 ubox
49 63 0.110542992 ubox
49 64 0.021747682 ubox
49 66 0.008050772 ubox
49 75 0.076736992 ubox
49 79 0.008244623 ubox
50 59 0.049313200 ubox
50 60 0.098876369 ubox
50 62 0.106656023 ubox
50 74 0.054150824 ubox
50 78 0.008807054 ubox
51 58 0.064991720 ubox
51 59 0.087084750 ubox
51 73 0.028329846 ubox
51 77 0.008311901 ubox
52 57 0.068123899 ubox
52 63 0.008193161 ubox
53 60 0.096500230 ubox
53 62 0.008423406 ubox
53 71 0.019501789 ubox
53 74 0.074816082 ubox
54 59 0.108798188 ubox
54 70 0.020406899 ubox
54 73 0.090532277 ubox
55 61 0.034587983 ubox
55 63 0.004597155 ubox
55 72 0.092601371 ubox
56 60 0.032391238 ubox
56 62 0.004786308 ubox
56 70 0.009126363 ubox
56 71 0.091951777 ubox
57 69 0.011860908 ubox
57 70 0.073429279 ubox
58 65 0.043798385 ubox
59 64 0.047357564 ubox
59 65 0.018393310 ubox
59 66 0.009721871 ubox
59 67 0.031269367 ubox
59 68 0.087787751 ubox
60 64 0.019246130 ubox
60 65 0.007562667 ubox
60 66 0.031215207 ubox
60 67 0.087464170 ubox
60 72 0.003431113 ubox
61 71 0.003428592 ubox
68 77 0.004691807 ubox
70 76 0.011360451 ubox
70 80 0.004140051 ubox
71 75 0.011192874 ubox
71 79 0.004544851 ubox
71 84 0.005566244 ubox
72 78 0.004556376 ubox
72 83 0.005575733 ubox
73 82 0.005544432 ubox
77 82 0.003593279 ubox
78 84 0.012738116 ubox
78 87 0.058319737 ubox
79 83 0.012784030 ubox
79 86 0.059185981 ubox
79 90 0.005341467 ubox
80 85 0.056733208 ubox
80 89 0.020815279 ubox
1 79 0.9500000 lbox
2 78 0.9500000 lbox
3 77 0.9500000 lbox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
8 74 0.9500000 lbox
9 73 0.9500000 lbox
10 72 0.9500000 lbox
11 71 0.9500000 lbox
12 70 0.9500000 lbox
15 68 0.9500000 lbox
16 67 0.9500000 lbox
17 66 0.9500000 lbox
18 65 0.9500000 lbox
20 61 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
24 57 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 39 0.9500000 lbox
34 38 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
showpage
end
%%EOF
