%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCACGUGAGGGCCGCGCUGGGUGCGCGGGGCUAGCUGCGCCUGCUGCGCUCCGCGGGCUCUCAGAGCGCUGGGCACCGGCCGGGCUGUGGUCCCCGCGCGCCGCCGUCGCCUCUCGAGCGGGCUCGGCUCACAGCGACCGGCGGCCGGGGAGAUGUGAGCUGGGGCCGGCGGGCGCGGCCGGACCGCCGCG\
) } def
/len { sequence length } bind def

/coor [
[218.50801086 107.79785919]
[203.50849915 107.91869354]
[188.50898743 108.03952026]
[173.50947571 108.16034698]
[158.50996399 108.28118134]
[143.51045227 108.40200806]
[128.51094055 108.52283478]
[113.51142120 108.64366913]
[83.66684723 137.34367371]
[69.64160156 142.66275024]
[55.61635971 147.98181152]
[41.59111404 153.30088806]
[27.56587219 158.61996460]
[13.54062748 163.93904114]
[-0.48461583 169.25810242]
[-14.50985909 174.57717896]
[-21.43539047 180.55418396]
[-28.80413246 179.86697388]
[-42.91324615 184.95941162]
[-57.02236176 190.05184937]
[-67.37612915 202.01470947]
[-81.97427368 199.05780029]
[-96.08338928 204.15023804]
[-110.19250488 209.24267578]
[-124.30162048 214.33511353]
[-138.41073608 219.42755127]
[-152.51985168 224.51998901]
[-166.58747864 229.72590637]
[-180.61273193 235.04498291]
[-194.63796997 240.36404419]
[-208.66320801 245.68312073]
[-222.68846130 251.00219727]
[-236.67039490 256.43408203]
[-250.60812378 261.97839355]
[-258.25085449 276.08401489]
[-274.06890869 278.76144409]
[-285.92803955 267.95678711]
[-284.73092651 251.95846558]
[-271.39590454 243.03901672]
[-256.15246582 248.04067993]
[-242.21472168 242.49633789]
[-237.15484619 237.09558105]
[-228.00752258 236.97695923]
[-213.98228455 231.65788269]
[-199.95704651 226.33880615]
[-185.93179321 221.01972961]
[-171.90655518 215.70066833]
[-166.76033020 210.38211060]
[-157.61227417 210.41087341]
[-143.50317383 205.31843567]
[-129.39405823 200.22599792]
[-115.28494263 195.13356018]
[-101.17582703 190.04112244]
[-87.06671143 184.94868469]
[-77.72212219 173.35006714]
[-62.11479568 175.94273376]
[-48.00568008 170.85029602]
[-33.89656830 165.75785828]
[-19.82893372 160.55194092]
[-5.80368900 155.23286438]
[8.22155476 149.91378784]
[22.24679756 144.59472656]
[36.27204132 139.27565002]
[50.29728699 133.95657349]
[64.32253265 128.63749695]
[78.34777069 123.31842804]
[80.66539764 116.18550110]
[66.39962769 111.55002594]
[71.03531647 97.28432465]
[85.30065155 101.91965485]
[87.61828613 94.78672791]
[79.39809418 82.23967743]
[71.17790985 69.69262695]
[57.14321899 62.38933182]
[56.64053726 47.50321198]
[48.42034912 34.95615768]
[40.20016098 22.40910721]
[25.32281494 15.51007938]
[24.12857246 -0.84552616]
[37.84597015 -9.83246422]
[52.36372375 -2.20574331]
[52.74721146 14.18892002]
[60.96739960 26.73597145]
[69.18759155 39.28302383]
[82.63431549 45.68886948]
[83.72496033 61.47243881]
[91.94514465 74.01949310]
[100.16533661 86.56654358]
[113.39059448 93.64414978]
[128.39010620 93.52332306]
[143.38961792 93.40249634]
[158.38912964 93.28166199]
[173.38864136 93.16083527]
[188.38815308 93.04000854]
[203.38766479 92.91918182]
[218.38719177 92.79834747]
[232.12458801 84.95013428]
[244.91377258 92.58466339]
[259.91326904 92.46383667]
[274.91278076 92.34300232]
[289.91232300 92.22217560]
[304.91036987 91.98052216]
[319.90597534 91.61807251]
[334.89382935 91.01407623]
[349.86996460 90.16871643]
[364.84613037 89.32334900]
[379.81500244 88.35737610]
[394.77560425 87.27085114]
[409.73620605 86.18433380]
[418.08166504 82.43721771]
[424.94622803 85.20278931]
[439.92236328 84.35742950]
[454.89852905 83.51206207]
[469.87469482 82.66669464]
[474.26150513 79.78890991]
[478.85388184 78.97248077]
[482.82907104 79.94866180]
[485.59143066 82.16010284]
[500.59097290 82.03927612]
[510.18496704 73.40544891]
[522.68902588 73.62104034]
[531.40167236 82.02451324]
[546.40118408 82.14533997]
[561.40069580 82.26617432]
[575.26275635 74.64028168]
[587.92730713 82.47985840]
[602.92681885 82.60068512]
[617.92633057 82.72151184]
[632.92584229 82.84234619]
[647.92535400 82.96317291]
[662.92486572 83.08399963]
[677.92437744 83.20483398]
[692.92388916 83.32566071]
[707.92340088 83.44648743]
[722.92291260 83.56732178]
[737.92242432 83.68814850]
[746.15240479 69.35462952]
[760.40429688 61.17083740]
[776.74438477 61.28641510]
[790.71759033 69.57524109]
[798.56170654 83.69560242]
[813.56121826 83.57477570]
[828.56072998 83.45394897]
[843.56024170 83.33311462]
[859.35015869 77.15938568]
[869.65368652 90.62316132]
[859.56835938 104.25118256]
[843.68103027 98.33263397]
[828.68151855 98.45346069]
[813.68200684 98.57428741]
[798.68249512 98.69512177]
[792.74310303 111.00100708]
[782.02777100 119.58628845]
[768.59393311 122.72944641]
[755.05267334 119.76097107]
[744.06121826 111.20496368]
[737.80157471 98.68766022]
[722.80206299 98.56683350]
[707.80255127 98.44600677]
[692.80303955 98.32517242]
[677.80352783 98.20434570]
[662.80401611 98.08351898]
[647.80450439 97.96268463]
[632.80499268 97.84185791]
[617.80548096 97.72103119]
[602.80596924 97.60019684]
[587.80645752 97.47937012]
[575.01727295 105.11389923]
[561.27984619 97.26568604]
[546.28033447 97.14485168]
[531.28082275 97.02402496]
[516.50933838 106.48820496]
[500.71179199 97.03878784]
[485.71228027 97.15961456]
[470.72006226 97.64286041]
[455.74389648 98.48822021]
[440.76773071 99.33358765]
[425.79159546 100.17895508]
[410.82272339 101.14492798]
[395.86212158 102.23145294]
[380.90151978 103.31797028]
[374.44937134 106.94290924]
[365.69149780 104.29950714]
[350.71533203 105.14487457]
[335.73919678 105.99024200]
[331.93853760 108.90232849]
[326.26498413 109.44892120]
[320.26843262 106.61368561]
[305.27282715 106.97614288]
[298.65304565 110.28511810]
[290.03314209 107.22168732]
[275.03363037 107.34252167]
[260.03411865 107.46334839]
[245.03459167 107.58417511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 96]
[2 95]
[3 94]
[4 93]
[5 92]
[6 91]
[7 90]
[8 89]
[9 66]
[10 65]
[11 64]
[12 63]
[13 62]
[14 61]
[15 60]
[16 59]
[18 58]
[19 57]
[20 56]
[22 54]
[23 53]
[24 52]
[25 51]
[26 50]
[27 49]
[28 47]
[29 46]
[30 45]
[31 44]
[32 43]
[33 41]
[34 40]
[71 88]
[72 87]
[73 86]
[75 84]
[76 83]
[77 82]
[98 194]
[99 193]
[100 192]
[101 191]
[102 189]
[103 188]
[104 185]
[105 184]
[106 183]
[107 181]
[108 180]
[109 179]
[111 178]
[112 177]
[113 176]
[114 175]
[118 174]
[119 173]
[122 171]
[123 170]
[124 169]
[126 167]
[127 166]
[128 165]
[129 164]
[130 163]
[131 162]
[132 161]
[133 160]
[134 159]
[135 158]
[136 157]
[141 151]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
