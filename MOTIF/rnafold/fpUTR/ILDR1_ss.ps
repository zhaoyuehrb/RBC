%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGUGGGGAGCGCCGCAGGUGGGGACGAGCCGGGCGGCACCUGCCCCGGGACCAGAGCGGACGCUCCCUCCCCGCUGCGCCGAGGGAGGGGAAACCCGAGGGGUUCCUUGGAGAAGGUGGUGCGUCCUGGGGCGGCAGCUGAGGAAGAAAGACGCAGUGCCCCGAAGCCCCUGAGCUGAAAAGGGCCAGAAAGGGGGCGGC\
) } def
/len { sequence length } bind def

/coor [
[88.59870148 196.71856689]
[91.08583832 177.49711609]
[91.31683350 162.49888611]
[91.54782104 147.50067139]
[77.22474670 142.22311401]
[65.34406281 132.77758789]
[57.06839752 120.15763092]
[53.18577576 105.66380310]
[39.19869232 111.08242798]
[25.21161079 116.50105286]
[11.22452736 121.91967773]
[-2.76255631 127.33830261]
[-16.74963951 132.75692749]
[-30.73672295 138.17555237]
[-44.68166733 143.70172119]
[-58.58365250 149.33509827]
[-72.48563385 154.96846008]
[-86.38761139 160.60183716]
[-98.04522705 177.04312134]
[-117.06122589 173.55680847]
[-130.78312683 179.61563110]
[-144.50503540 185.67443848]
[-158.08334351 192.04858398]
[-171.51078796 198.73466492]
[-184.93823242 205.42074585]
[-198.36569214 212.10681152]
[-204.65711975 218.73706055]
[-212.05178833 218.79067993]
[-225.58061218 225.26918030]
[-236.20396423 242.39694214]
[-255.39851379 240.08787537]
[-268.72140503 246.97993469]
[-282.04431152 253.87199402]
[-290.43063354 267.96459961]
[-306.82254028 267.47763062]
[-314.35745239 252.91201782]
[-305.28411865 239.25163269]
[-288.93637085 240.54910278]
[-275.61346436 233.65704346]
[-262.29058838 226.76498413]
[-260.07891846 216.78195190]
[-252.57781982 209.51380920]
[-242.09840393 207.53630066]
[-232.05911255 211.74035645]
[-218.53030396 205.26185608]
[-205.05175781 198.67936707]
[-191.62431335 191.99328613]
[-178.19686890 185.30722046]
[-164.76940918 178.62113953]
[-163.30827332 175.40640259]
[-160.21446228 172.74150085]
[-155.76423645 171.38740540]
[-150.56385803 171.95254517]
[-136.84194946 165.89372253]
[-123.12004089 159.83489990]
[-120.29799652 150.00697327]
[-112.36370850 143.21438599]
[-101.78243256 141.88574219]
[-92.02098846 146.69985962]
[-78.11900330 141.06648254]
[-64.21702576 135.43310547]
[-50.31504440 129.79972839]
[-45.29366684 124.37113190]
[-36.15534973 124.18846893]
[-22.16826439 118.76984406]
[-8.18118095 113.35121918]
[5.80590200 107.93259430]
[19.79298592 102.51396942]
[33.78006744 97.09534454]
[47.76715088 91.67671967]
[52.20424271 77.34799957]
[43.72719955 64.97303772]
[35.25015259 52.59807587]
[26.77310562 40.22311401]
[18.29605865 27.84815216]
[4.11382627 20.83567429]
[3.30443478 5.96307755]
[-5.17261124 -6.41188478]
[-20.68687439 -6.70733213]
[-33.04418182 -16.09224129]
[-37.49290085 -30.95792389]
[-32.32240677 -45.58822250]
[-19.52085876 -54.35748672]
[-4.01071453 -53.89375687]
[8.24405956 -44.37534714]
[12.53125191 -29.46227837]
[7.20235062 -14.88893127]
[15.67939663 -2.51396871]
[29.25529480 3.61336827]
[30.67102242 19.37110519]
[39.14806747 31.74606705]
[47.62511444 44.12102890]
[56.10216141 56.49599075]
[64.57920837 68.87095642]
[71.93083191 63.39560699]
[80.03601074 59.55964661]
[88.54437256 57.44311905]
[97.10382080 57.05374146]
[98.71768951 42.14081192]
[100.33155823 27.22788239]
[101.94541931 12.31495476]
[103.55928802 -2.59797406]
[105.17315674 -17.51090240]
[98.05782318 -32.28601837]
[107.51808167 -45.68136978]
[123.82203674 -43.91696930]
[130.19757080 -28.80787849]
[120.08608246 -15.89703655]
[118.47221375 -0.98410779]
[116.85835266 13.92882061]
[115.24448395 28.84174919]
[113.63061523 43.75467682]
[112.01675415 58.66760635]
[117.88422394 60.84743118]
[123.37351227 63.85518265]
[128.36854553 67.62725830]
[132.76368713 72.08388519]
[136.46601868 77.13083649]
[150.36799622 71.49745941]
[164.26997375 65.86408234]
[178.17196655 60.23070908]
[188.05613708 47.87702179]
[202.75756836 50.26810837]
[216.65954590 44.63473511]
[230.56152344 39.00135803]
[244.46350098 33.36798477]
[258.36547852 27.73460960]
[272.26748657 22.10123634]
[285.89443970 15.83183002]
[299.21734619 8.93977356]
[304.09997559 -5.85203457]
[317.70947266 -12.65177059]
[331.78112793 -7.90576315]
[345.10400391 -14.79782009]
[358.42691040 -21.68987656]
[366.81320190 -35.78249359]
[383.20513916 -35.29551697]
[390.74005127 -20.72990799]
[381.66671753 -7.06951571]
[365.31896973 -8.36698055]
[351.99606323 -1.47492373]
[338.67315674 5.41713285]
[334.41662598 19.64447975]
[321.00347900 26.82379532]
[306.10940552 22.26267052]
[292.78649902 29.15472603]
[306.70117188 34.75671768]
[312.71005249 48.50056458]
[307.37365723 62.51922226]
[293.74652100 68.78834534]
[279.62893677 63.71945953]
[273.10183716 50.21401596]
[277.90084839 36.00321579]
[263.99887085 41.63659286]
[250.09687805 47.26996613]
[236.19490051 52.90333939]
[222.29292297 58.53671646]
[208.39094543 64.17008972]
[199.50112915 76.12084198]
[183.80532837 74.13269043]
[169.90335083 79.76606750]
[156.00137329 85.39944458]
[142.09939575 91.03281403]
[143.87590027 98.24536133]
[144.40072632 105.80143738]
[143.60905457 113.48123169]
[141.47506714 121.05298615]
[138.01408386 128.28001404]
[133.28346252 134.92797852]
[141.76051331 147.30294800]
[150.23756409 159.67791748]
[158.71459961 172.05287170]
[167.19165039 184.42784119]
[175.66870117 196.80279541]
[191.06332397 197.36116028]
[203.03733826 206.76734924]
[207.12825012 221.24934387]
[201.96888733 235.19635010]
[210.44593811 247.57131958]
[218.92298889 259.94628906]
[234.43725586 260.24172974]
[246.79455566 269.62664795]
[251.24327087 284.49230957]
[246.07278442 299.12261963]
[233.27124023 307.89187622]
[217.76109314 307.42816162]
[205.50631714 297.90972900]
[201.21911621 282.99667358]
[206.54801941 268.42330933]
[198.07098389 256.04837036]
[189.59393311 243.67340088]
[174.72496033 243.44612122]
[162.69869995 234.39994812]
[158.25320435 219.83660889]
[163.29373169 205.27984619]
[154.81668091 192.90487671]
[146.33964539 180.52992249]
[137.86259460 168.15495300]
[129.38554382 155.77999878]
[120.90850067 143.40502930]
[106.54604340 147.73165894]
[106.31504822 162.72988892]
[106.08406067 177.72810364]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[8 70]
[9 69]
[10 68]
[11 67]
[12 66]
[13 65]
[14 64]
[15 62]
[16 61]
[17 60]
[18 59]
[20 55]
[21 54]
[22 53]
[23 49]
[24 48]
[25 47]
[26 46]
[28 45]
[29 44]
[31 40]
[32 39]
[33 38]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[77 88]
[78 87]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[118 163]
[119 162]
[120 161]
[121 160]
[123 158]
[124 157]
[125 156]
[126 155]
[127 154]
[128 153]
[129 146]
[130 145]
[133 142]
[134 141]
[135 140]
[169 200]
[170 199]
[171 198]
[172 197]
[173 196]
[174 195]
[178 191]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
