%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KY)
} def

/sequence { (\
GGGGCAGCUGCGCGCACGGGGCCAUUUGCAGCGCAAGCAGCCUAGCGUGCGGCCGCGGCGCCCAGGUCGGAAAGGAGGCGGCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 62 0.016787885 ubox
1 63 0.123170979 ubox
1 68 0.003523622 ubox
1 85 0.015853066 ubox
2 61 0.016918490 ubox
2 62 0.108777261 ubox
2 63 0.990669561 ubox
3 61 0.091974437 ubox
3 62 0.993579459 ubox
3 63 0.008792678 ubox
4 56 0.029244192 ubox
4 59 0.059165838 ubox
4 61 0.995272039 ubox
4 62 0.008228052 ubox
5 55 0.029275460 ubox
5 58 0.058978204 ubox
5 60 0.993724953 ubox
7 53 0.035494726 ubox
7 56 0.058137618 ubox
7 59 0.997159440 ubox
7 82 0.004838184 ubox
8 52 0.035597262 ubox
8 55 0.058286110 ubox
8 58 0.997615833 ubox
8 65 0.004962315 ubox
8 81 0.004842892 ubox
9 51 0.035679752 ubox
9 57 0.996867429 ubox
9 64 0.004984837 ubox
9 80 0.004838464 ubox
10 50 0.035727954 ubox
10 53 0.059425708 ubox
10 54 0.005459306 ubox
10 56 0.997511151 ubox
10 63 0.004989000 ubox
10 79 0.004839301 ubox
11 49 0.035729004 ubox
11 52 0.059543410 ubox
11 55 0.997373619 ubox
11 78 0.004834094 ubox
12 48 0.035726794 ubox
12 50 0.003423534 ubox
12 53 0.383356175 ubox
12 54 0.902909106 ubox
12 61 0.006979601 ubox
13 47 0.035760051 ubox
13 49 0.003623664 ubox
13 51 0.904668744 ubox
13 52 0.383886757 ubox
13 60 0.006999565 ubox
14 46 0.035760646 ubox
14 48 0.003635541 ubox
14 50 0.998772673 ubox
14 53 0.009200074 ubox
14 59 0.007006468 ubox
15 45 0.035701021 ubox
15 47 0.003631177 ubox
15 49 0.999279150 ubox
15 52 0.008431082 ubox
15 58 0.007001330 ubox
16 48 0.999100638 ubox
17 47 0.999161398 ubox
17 51 0.004115637 ubox
17 57 0.006980259 ubox
18 43 0.009953406 ubox
18 46 0.984969580 ubox
18 50 0.004118067 ubox
18 56 0.007005434 ubox
19 42 0.018167689 ubox
19 43 0.926622258 ubox
20 41 0.015503885 ubox
20 42 0.999281446 ubox
20 43 0.014348882 ubox
20 54 0.007025239 ubox
21 38 0.004725034 ubox
21 41 0.999756008 ubox
21 42 0.011379498 ubox
21 53 0.007030174 ubox
22 37 0.004783554 ubox
22 40 0.998826590 ubox
22 52 0.007029826 ubox
23 51 0.006971227 ubox
25 36 0.037067638 ubox
25 37 0.907873016 ubox
26 35 0.026928112 ubox
26 36 0.979173816 ubox
26 37 0.013375472 ubox
26 39 0.008515251 ubox
26 40 0.012866221 ubox
27 33 0.003440915 ubox
27 35 0.990658370 ubox
27 36 0.012012012 ubox
27 39 0.119030468 ubox
27 47 0.003492245 ubox
28 32 0.003545536 ubox
28 34 0.992299111 ubox
28 38 0.120426961 ubox
28 41 0.005501281 ubox
28 46 0.003644459 ubox
28 50 0.005932530 ubox
29 33 0.985089058 ubox
29 37 0.120355513 ubox
29 40 0.005624466 ubox
29 45 0.003646986 ubox
29 49 0.005926871 ubox
30 43 0.003503672 ubox
30 48 0.004811611 ubox
31 38 0.021099825 ubox
31 42 0.003510647 ubox
31 48 0.003467621 ubox
32 37 0.021175014 ubox
32 47 0.005885533 ubox
33 41 0.003667370 ubox
33 46 0.005911716 ubox
34 40 0.003666412 ubox
34 45 0.005908096 ubox
36 43 0.005336342 ubox
37 42 0.005351635 ubox
55 82 0.005220184 ubox
56 81 0.005225100 ubox
57 85 0.009467201 ubox
58 79 0.005423291 ubox
58 82 0.010904402 ubox
58 84 0.009702416 ubox
59 78 0.005426154 ubox
59 80 0.012651939 ubox
59 81 0.008047787 ubox
60 79 0.014782701 ubox
60 82 0.016143114 ubox
61 78 0.014756552 ubox
61 81 0.016117853 ubox
62 70 0.003851133 ubox
62 75 0.005741790 ubox
62 77 0.014658062 ubox
62 78 0.003355906 ubox
62 80 0.016059907 ubox
63 69 0.003903945 ubox
63 74 0.005841429 ubox
63 77 0.003566639 ubox
65 85 0.039153928 ubox
66 79 0.351324499 ubox
66 82 0.931441632 ubox
66 84 0.014020412 ubox
67 75 0.014762364 ubox
67 76 0.043226097 ubox
67 78 0.351373844 ubox
67 81 0.932134214 ubox
67 83 0.010977632 ubox
68 74 0.019045419 ubox
68 75 0.046628587 ubox
68 77 0.351519858 ubox
68 80 0.933193616 ubox
69 79 0.931134004 ubox
75 85 0.007483430 ubox
76 84 0.007545855 ubox
77 85 0.003527565 ubox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
4 61 0.9500000 lbox
5 60 0.9500000 lbox
7 59 0.9500000 lbox
8 58 0.9500000 lbox
9 57 0.9500000 lbox
10 56 0.9500000 lbox
11 55 0.9500000 lbox
12 54 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
29 33 0.9500000 lbox
66 82 0.9500000 lbox
67 81 0.9500000 lbox
68 80 0.9500000 lbox
69 79 0.9500000 lbox
showpage
end
%%EOF
