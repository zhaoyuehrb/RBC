%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRMT6)
} def

/sequence { (\
AGAAGCCCCCGUUUCCUGGAGCCCGCGCCGUGCCGCGCUACGCCCGCCGGGAGCCGGGCAGAGCGGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.003417218 ubox
2 15 0.032690149 ubox
3 14 0.032968054 ubox
4 13 0.032974760 ubox
5 12 0.033008044 ubox
5 22 0.006950740 ubox
5 59 0.037933538 ubox
5 64 0.028512637 ubox
5 67 0.342703527 ubox
6 11 0.032951388 ubox
6 21 0.006962419 ubox
6 58 0.037114381 ubox
6 63 0.028502069 ubox
6 66 0.331294420 ubox
7 57 0.036217505 ubox
7 58 0.011479247 ubox
7 65 0.316268173 ubox
7 66 0.027146485 ubox
8 19 0.006502444 ubox
8 56 0.035266354 ubox
8 57 0.013642104 ubox
8 58 0.179175986 ubox
8 65 0.030577658 ubox
8 66 0.077854571 ubox
9 18 0.006478858 ubox
9 19 0.005825741 ubox
9 56 0.014927213 ubox
9 57 0.179845098 ubox
9 65 0.066343558 ubox
9 66 0.929627328 ubox
10 18 0.005871451 ubox
10 56 0.180002382 ubox
10 65 0.943438225 ubox
11 17 0.004918522 ubox
11 54 0.040075681 ubox
11 55 0.179113997 ubox
11 59 0.004603843 ubox
11 64 0.965406184 ubox
12 53 0.041046028 ubox
12 61 0.078245466 ubox
12 62 0.207721002 ubox
12 63 0.953495516 ubox
13 52 0.037589413 ubox
13 53 0.165899354 ubox
13 60 0.089624885 ubox
13 61 0.229658667 ubox
13 62 0.939556314 ubox
13 63 0.013004263 ubox
14 51 0.033804710 ubox
14 52 0.179922489 ubox
14 58 0.010707672 ubox
14 60 0.265520636 ubox
14 61 0.851516897 ubox
14 62 0.017666749 ubox
15 50 0.033802320 ubox
15 51 0.180945492 ubox
15 57 0.016113661 ubox
15 58 0.979062809 ubox
15 61 0.013096401 ubox
16 49 0.033686088 ubox
16 50 0.180952687 ubox
16 56 0.016093786 ubox
16 57 0.982120991 ubox
16 58 0.005446247 ubox
16 61 0.006374042 ubox
16 66 0.005200832 ubox
16 71 0.006983459 ubox
17 25 0.003898190 ubox
17 30 0.009802654 ubox
17 46 0.027277844 ubox
17 49 0.180682197 ubox
17 56 0.981459584 ubox
17 57 0.003841518 ubox
17 60 0.006785623 ubox
17 65 0.005258013 ubox
17 69 0.019531351 ubox
17 70 0.005748487 ubox
18 24 0.005498319 ubox
18 29 0.012964218 ubox
18 45 0.035448876 ubox
18 48 0.180633450 ubox
18 55 0.982342787 ubox
18 59 0.003200880 ubox
18 64 0.005292432 ubox
18 68 0.021499445 ubox
19 23 0.005413195 ubox
19 28 0.012912234 ubox
19 44 0.035666634 ubox
19 47 0.180426808 ubox
19 54 0.982337872 ubox
19 67 0.021263760 ubox
20 39 0.011202283 ubox
21 28 0.005426038 ubox
21 38 0.011313676 ubox
21 43 0.179417739 ubox
21 47 0.005174250 ubox
21 59 0.012624809 ubox
21 67 0.008680202 ubox
22 27 0.005522961 ubox
22 37 0.011115413 ubox
22 42 0.179404928 ubox
22 46 0.006921335 ubox
22 50 0.005402214 ubox
22 51 0.982322218 ubox
22 58 0.013023232 ubox
22 66 0.007957852 ubox
23 49 0.006336583 ubox
23 50 0.982349643 ubox
23 57 0.013024862 ubox
23 65 0.006306125 ubox
23 66 0.022020980 ubox
24 35 0.010072994 ubox
24 37 0.025411084 ubox
24 42 0.015009758 ubox
24 46 0.008795062 ubox
24 49 0.982185108 ubox
24 56 0.013021973 ubox
24 65 0.022484134 ubox
25 33 0.005688751 ubox
25 34 0.009937445 ubox
25 36 0.026710363 ubox
25 38 0.183359352 ubox
25 41 0.007572018 ubox
25 43 0.028661422 ubox
25 45 0.010078640 ubox
25 47 0.504019052 ubox
25 48 0.841709389 ubox
25 54 0.008056047 ubox
25 55 0.010188185 ubox
25 64 0.022875001 ubox
26 32 0.006212407 ubox
26 35 0.026740579 ubox
26 37 0.184370710 ubox
26 42 0.030081358 ubox
26 46 0.712672119 ubox
26 53 0.011363092 ubox
26 63 0.022862294 ubox
26 65 0.004107470 ubox
27 31 0.003843398 ubox
27 33 0.016027706 ubox
27 34 0.024450340 ubox
27 36 0.184448697 ubox
27 38 0.009790907 ubox
27 41 0.029922071 ubox
27 43 0.081477122 ubox
27 45 0.704385920 ubox
27 47 0.664534906 ubox
27 48 0.005954997 ubox
27 54 0.004834657 ubox
27 64 0.006138009 ubox
27 67 0.003478725 ubox
28 32 0.018498108 ubox
28 35 0.182386538 ubox
28 37 0.009873518 ubox
28 42 0.068170727 ubox
28 46 0.620179661 ubox
28 50 0.010117568 ubox
28 51 0.006871396 ubox
28 53 0.004667659 ubox
28 63 0.006169297 ubox
28 66 0.003489200 ubox
29 35 0.027437386 ubox
29 37 0.034232931 ubox
29 42 0.840515471 ubox
29 46 0.249456149 ubox
29 49 0.010402095 ubox
29 50 0.006788686 ubox
29 65 0.003488462 ubox
30 34 0.035357229 ubox
30 36 0.034616994 ubox
30 38 0.037567249 ubox
30 41 0.846807556 ubox
30 43 0.295913595 ubox
30 45 0.343597909 ubox
30 47 0.059469544 ubox
30 48 0.010933373 ubox
30 64 0.003480594 ubox
31 35 0.032389690 ubox
31 37 0.037806759 ubox
31 40 0.835948267 ubox
31 42 0.296303701 ubox
31 46 0.059641132 ubox
31 60 0.023389230 ubox
31 69 0.003818368 ubox
32 36 0.037008390 ubox
32 38 0.683723176 ubox
32 39 0.461588642 ubox
32 41 0.293906288 ubox
32 43 0.364304915 ubox
32 45 0.068918983 ubox
32 47 0.027775669 ubox
32 59 0.023690626 ubox
32 67 0.016393037 ubox
33 37 0.691520380 ubox
33 42 0.352265133 ubox
33 46 0.027331510 ubox
33 50 0.004508670 ubox
33 57 0.005242753 ubox
33 58 0.023319195 ubox
33 66 0.016741997 ubox
34 42 0.100448482 ubox
34 46 0.007619771 ubox
34 49 0.004530330 ubox
34 56 0.006717637 ubox
34 57 0.022935214 ubox
34 65 0.016737773 ubox
35 41 0.136012392 ubox
35 43 0.137967726 ubox
35 45 0.012966117 ubox
35 47 0.009172795 ubox
35 48 0.004446239 ubox
35 55 0.007909241 ubox
35 64 0.016711682 ubox
36 42 0.138294876 ubox
36 46 0.009271383 ubox
36 56 0.007707027 ubox
36 63 0.016675768 ubox
37 41 0.129875032 ubox
37 43 0.016975072 ubox
37 45 0.008950166 ubox
37 47 0.007444018 ubox
37 54 0.022965632 ubox
37 55 0.006485052 ubox
38 42 0.016927531 ubox
38 46 0.007530352 ubox
38 53 0.023348910 ubox
38 61 0.015954065 ubox
39 52 0.022960205 ubox
39 60 0.014817500 ubox
41 49 0.004790211 ubox
42 48 0.007039451 ubox
42 54 0.004619912 ubox
42 59 0.017022930 ubox
43 50 0.005621274 ubox
43 51 0.021465366 ubox
43 53 0.004639481 ubox
43 58 0.017068320 ubox
44 49 0.005629355 ubox
44 50 0.021477023 ubox
44 51 0.007847725 ubox
44 57 0.017060081 ubox
45 49 0.021322241 ubox
45 50 0.007858502 ubox
45 56 0.017049147 ubox
46 54 0.008915913 ubox
46 55 0.014427427 ubox
47 53 0.012588432 ubox
53 67 0.004088452 ubox
54 66 0.004109632 ubox
55 65 0.004110815 ubox
56 64 0.004096238 ubox
57 68 0.014417250 ubox
58 64 0.013332517 ubox
58 67 0.016269474 ubox
59 63 0.013833575 ubox
59 66 0.016402416 ubox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
18 55 0.9500000 lbox
19 54 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
25 48 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
showpage
end
%%EOF
