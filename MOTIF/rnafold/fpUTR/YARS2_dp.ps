%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (YARS2)
} def

/sequence { (\
ACCUUCCCUAGGAGCUGUAAGUAGGUGGGUGUGGUGGGAGCCUCUGCAAUCCCAGCAUUCCCUUCGUGCCGCUACCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.029358901 ubox
1 26 0.014610740 ubox
1 30 0.004120312 ubox
2 12 0.331680606 ubox
2 17 0.030936656 ubox
2 25 0.015521326 ubox
2 29 0.004365330 ubox
3 11 0.333396349 ubox
3 12 0.035600084 ubox
3 14 0.082659448 ubox
3 24 0.015523280 ubox
3 28 0.004370010 ubox
3 79 0.082122040 ubox
4 10 0.330119847 ubox
4 11 0.034942465 ubox
4 13 0.081551914 ubox
4 14 0.084846875 ubox
4 23 0.014634973 ubox
4 27 0.004301825 ubox
4 78 0.083788558 ubox
4 79 0.004892152 ubox
5 10 0.030068196 ubox
5 12 0.079627473 ubox
5 13 0.114933129 ubox
5 77 0.082906920 ubox
5 78 0.006910835 ubox
6 11 0.078718695 ubox
6 12 0.127459930 ubox
7 11 0.126603812 ubox
7 25 0.010344233 ubox
8 21 0.003725766 ubox
8 24 0.010417657 ubox
8 79 0.570762143 ubox
9 17 0.007095936 ubox
9 19 0.003168415 ubox
9 20 0.003466038 ubox
9 23 0.010428949 ubox
9 74 0.016555561 ubox
9 78 0.572646135 ubox
10 16 0.007928958 ubox
10 18 0.003403958 ubox
10 22 0.009943872 ubox
10 73 0.017489827 ubox
11 15 0.007839110 ubox
11 70 0.003704801 ubox
11 72 0.017504172 ubox
11 76 0.924815612 ubox
12 69 0.003682519 ubox
12 75 0.924785932 ubox
13 73 0.972824266 ubox
14 22 0.015607483 ubox
14 26 0.004513058 ubox
14 69 0.018220307 ubox
14 72 0.979951395 ubox
15 21 0.016204386 ubox
15 24 0.004748198 ubox
15 25 0.004872889 ubox
15 66 0.003309229 ubox
15 68 0.018219087 ubox
15 71 0.978609640 ubox
15 79 0.048679019 ubox
16 20 0.014987061 ubox
16 23 0.007644691 ubox
16 24 0.004877554 ubox
16 66 0.007226012 ubox
16 71 0.038862037 ubox
16 74 0.009281240 ubox
16 77 0.091353426 ubox
16 78 0.044926392 ubox
17 22 0.006800552 ubox
17 65 0.007504136 ubox
17 69 0.938623042 ubox
17 70 0.178446924 ubox
17 72 0.046195305 ubox
17 73 0.007809865 ubox
17 75 0.124166635 ubox
17 76 0.096547586 ubox
18 66 0.003363884 ubox
18 68 0.935908907 ubox
18 71 0.045545561 ubox
18 74 0.127105914 ubox
19 64 0.007922382 ubox
19 67 0.847758661 ubox
19 73 0.102135933 ubox
20 63 0.010529013 ubox
20 64 0.021799619 ubox
20 73 0.139920690 ubox
21 62 0.006108688 ubox
21 63 0.023443017 ubox
21 67 0.076743539 ubox
21 69 0.273767164 ubox
21 72 0.160650636 ubox
21 75 0.036578365 ubox
22 66 0.128804391 ubox
22 68 0.274496507 ubox
22 71 0.150314987 ubox
22 74 0.036555164 ubox
23 63 0.535475810 ubox
23 64 0.104396991 ubox
23 67 0.264502805 ubox
23 73 0.035149603 ubox
24 61 0.003345102 ubox
24 62 0.533811090 ubox
24 63 0.139310013 ubox
24 64 0.182118945 ubox
24 65 0.603806213 ubox
24 70 0.174527540 ubox
24 72 0.027259075 ubox
24 73 0.004940302 ubox
24 76 0.011953915 ubox
25 60 0.003593929 ubox
25 61 0.529828132 ubox
25 62 0.127154923 ubox
25 63 0.188029575 ubox
25 64 0.524650989 ubox
25 69 0.175096184 ubox
25 72 0.006585905 ubox
25 75 0.011965507 ubox
26 54 0.006953517 ubox
26 66 0.007274741 ubox
26 68 0.174500366 ubox
26 71 0.007747904 ubox
26 74 0.011821298 ubox
26 77 0.003570450 ubox
27 53 0.007023676 ubox
27 59 0.017750179 ubox
27 60 0.523205321 ubox
27 61 0.128394854 ubox
27 62 0.834436763 ubox
27 63 0.032864049 ubox
27 65 0.003729418 ubox
27 67 0.010147655 ubox
27 70 0.005121194 ubox
27 73 0.005368508 ubox
27 76 0.004328894 ubox
28 52 0.007022672 ubox
28 58 0.009060687 ubox
28 59 0.517297546 ubox
28 60 0.133341123 ubox
28 61 0.837316783 ubox
28 62 0.033416523 ubox
28 69 0.004468882 ubox
28 70 0.005215053 ubox
28 72 0.003398276 ubox
28 75 0.004304183 ubox
28 76 0.005677675 ubox
29 51 0.007000401 ubox
29 58 0.501522726 ubox
29 59 0.111148556 ubox
29 60 0.838748342 ubox
29 61 0.033012021 ubox
29 69 0.005821867 ubox
29 75 0.005721264 ubox
30 48 0.005900202 ubox
30 57 0.498106545 ubox
30 68 0.006008732 ubox
30 74 0.005632403 ubox
31 47 0.006473404 ubox
31 56 0.495452406 ubox
31 58 0.833046057 ubox
31 67 0.004687873 ubox
31 72 0.008223082 ubox
32 46 0.006461296 ubox
32 54 0.029435560 ubox
32 55 0.480901275 ubox
32 57 0.865957952 ubox
32 66 0.005796833 ubox
32 71 0.008264902 ubox
33 45 0.006396537 ubox
33 53 0.036177784 ubox
33 56 0.868072127 ubox
33 65 0.006200926 ubox
33 70 0.008279735 ubox
34 44 0.006415242 ubox
34 52 0.036063926 ubox
34 56 0.006981905 ubox
34 64 0.005290876 ubox
34 69 0.008274547 ubox
35 48 0.003535220 ubox
35 54 0.985199296 ubox
35 55 0.005102451 ubox
35 68 0.008232840 ubox
36 42 0.006333983 ubox
36 45 0.003223679 ubox
36 47 0.003627150 ubox
36 51 0.035543860 ubox
36 52 0.016904729 ubox
36 53 0.999025347 ubox
36 62 0.008971600 ubox
36 67 0.004240471 ubox
37 41 0.006239397 ubox
37 44 0.003262901 ubox
37 45 0.003882570 ubox
37 50 0.034859641 ubox
37 51 0.017263879 ubox
37 52 0.999101593 ubox
37 61 0.008982499 ubox
37 65 0.004147502 ubox
38 44 0.004230320 ubox
38 50 0.016761498 ubox
38 51 0.999052224 ubox
38 60 0.008983457 ubox
38 64 0.004197251 ubox
38 65 0.003270416 ubox
39 43 0.003749352 ubox
39 45 0.009745410 ubox
39 50 0.960743737 ubox
39 59 0.008945459 ubox
39 63 0.004365929 ubox
40 44 0.015347121 ubox
40 47 0.859612553 ubox
40 58 0.008233535 ubox
40 62 0.004511428 ubox
41 46 0.858317123 ubox
44 55 0.006199487 ubox
45 54 0.006251110 ubox
45 57 0.008173504 ubox
46 53 0.006211465 ubox
46 56 0.008334591 ubox
47 55 0.008330605 ubox
63 78 0.004525229 ubox
64 77 0.004745149 ubox
65 71 0.004673077 ubox
66 70 0.005505839 ubox
66 72 0.005853931 ubox
66 75 0.011911026 ubox
67 71 0.005486541 ubox
67 74 0.011814653 ubox
68 73 0.010292132 ubox
72 79 0.006811110 ubox
73 78 0.007054218 ubox
11 76 0.9500000 lbox
12 75 0.9500000 lbox
13 73 0.9500000 lbox
14 72 0.9500000 lbox
15 71 0.9500000 lbox
17 69 0.9500000 lbox
18 68 0.9500000 lbox
19 67 0.9500000 lbox
23 63 0.9500000 lbox
24 62 0.9500000 lbox
25 61 0.9500000 lbox
27 60 0.9500000 lbox
28 59 0.9500000 lbox
29 58 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
32 55 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
