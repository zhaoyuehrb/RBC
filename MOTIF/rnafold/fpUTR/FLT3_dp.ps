%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FLT3)
} def

/sequence { (\
ACCUGCAGCGCGAGGCGCGCCGCUCCAGGCGGCAUCGCAGGGCUGGGCCGGCGCGGCCUGGGGACCCCGGGCUCCGGAGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 15 0.003291754 ubox
2 29 0.013658780 ubox
2 41 0.918534320 ubox
2 42 0.044060938 ubox
2 46 0.113242546 ubox
2 47 0.015414676 ubox
2 80 0.011083729 ubox
3 14 0.003413782 ubox
3 28 0.013734357 ubox
3 40 0.921734330 ubox
3 41 0.034257137 ubox
3 45 0.122220378 ubox
3 46 0.018787493 ubox
3 47 0.004020478 ubox
3 79 0.011131494 ubox
4 27 0.013713864 ubox
4 39 0.921959146 ubox
4 40 0.019274293 ubox
4 45 0.015169348 ubox
4 46 0.005515320 ubox
4 78 0.010839193 ubox
5 11 0.003280084 ubox
5 23 0.009312373 ubox
5 26 0.013064726 ubox
5 38 0.921974888 ubox
5 43 0.132753163 ubox
6 10 0.003272724 ubox
6 22 0.009593779 ubox
6 37 0.920927563 ubox
6 42 0.133018124 ubox
6 45 0.360509719 ubox
7 24 0.012497613 ubox
7 44 0.361579560 ubox
8 16 0.046215361 ubox
8 18 0.916118559 ubox
8 20 0.024523387 ubox
8 23 0.012753876 ubox
8 33 0.013615674 ubox
8 38 0.005182089 ubox
8 43 0.361763913 ubox
9 15 0.046266694 ubox
9 17 0.917242372 ubox
9 19 0.029109960 ubox
9 22 0.012743617 ubox
9 31 0.011895232 ubox
9 32 0.009993154 ubox
9 37 0.005332000 ubox
9 42 0.361495562 ubox
10 16 0.917132155 ubox
10 18 0.073122174 ubox
10 20 0.009061516 ubox
10 21 0.008997148 ubox
10 30 0.014960998 ubox
10 36 0.005727297 ubox
10 38 0.381214856 ubox
10 43 0.007865054 ubox
11 15 0.910472602 ubox
11 17 0.073187028 ubox
11 19 0.012752978 ubox
11 29 0.014978164 ubox
11 37 0.381739338 ubox
11 42 0.008007915 ubox
12 16 0.068474519 ubox
12 18 0.012711986 ubox
12 36 0.382795956 ubox
13 35 0.361854006 ubox
14 26 0.014589321 ubox
14 36 0.003607139 ubox
15 23 0.003464563 ubox
15 25 0.014567255 ubox
15 33 0.379696523 ubox
15 35 0.003542096 ubox
15 38 0.062821278 ubox
16 22 0.003621507 ubox
16 32 0.381205573 ubox
16 37 0.062846264 ubox
16 55 0.003308171 ubox
17 21 0.003391398 ubox
17 23 0.014539506 ubox
17 33 0.009728825 ubox
17 36 0.062868352 ubox
17 54 0.004133375 ubox
18 22 0.014439400 ubox
18 31 0.381262952 ubox
18 32 0.006910310 ubox
18 53 0.004136225 ubox
19 30 0.383024643 ubox
19 33 0.922058314 ubox
19 36 0.004397902 ubox
19 52 0.004148826 ubox
20 29 0.383032560 ubox
20 32 0.923167696 ubox
20 51 0.004149416 ubox
21 28 0.382941108 ubox
21 31 0.923413173 ubox
21 50 0.004149224 ubox
22 30 0.923416627 ubox
22 33 0.004958702 ubox
22 43 0.003543805 ubox
22 49 0.003894999 ubox
23 29 0.923173669 ubox
23 32 0.004957902 ubox
23 42 0.003542444 ubox
24 28 0.831671767 ubox
24 31 0.004584370 ubox
24 42 0.003388463 ubox
24 47 0.003529082 ubox
25 41 0.005283092 ubox
25 42 0.005461161 ubox
25 46 0.004641786 ubox
25 61 0.003899586 ubox
26 40 0.005293676 ubox
26 41 0.005534430 ubox
26 45 0.004722458 ubox
26 60 0.003907711 ubox
27 44 0.004708436 ubox
27 59 0.003907668 ubox
28 43 0.004659822 ubox
28 58 0.003908543 ubox
29 38 0.009080784 ubox
29 57 0.003908529 ubox
30 37 0.009089158 ubox
30 45 0.013610814 ubox
30 56 0.003905319 ubox
31 36 0.009598548 ubox
31 44 0.013719950 ubox
32 43 0.013742824 ubox
32 54 0.003856957 ubox
33 42 0.013730549 ubox
33 53 0.003579302 ubox
35 41 0.003959752 ubox
36 40 0.004262407 ubox
36 41 0.004167557 ubox
37 52 0.003632144 ubox
38 51 0.003629358 ubox
41 49 0.003330838 ubox
41 82 0.042602732 ubox
42 48 0.003481467 ubox
42 81 0.109178989 ubox
43 47 0.003511880 ubox
43 61 0.060953710 ubox
43 79 0.006216053 ubox
43 80 0.109351654 ubox
44 60 0.060957539 ubox
44 78 0.006719017 ubox
44 79 0.104841717 ubox
45 59 0.061253521 ubox
45 82 0.059985809 ubox
46 58 0.061538821 ubox
46 81 0.043985720 ubox
46 82 0.971986778 ubox
47 57 0.061541051 ubox
47 81 0.990554337 ubox
48 56 0.061541500 ubox
48 77 0.113732537 ubox
48 80 0.991533319 ubox
49 55 0.061535927 ubox
49 76 0.114266998 ubox
49 79 0.991228166 ubox
50 54 0.057567282 ubox
50 75 0.115289590 ubox
51 74 0.115210458 ubox
52 76 0.988739360 ubox
53 75 0.988540585 ubox
54 76 0.021033074 ubox
55 73 0.955212449 ubox
55 74 0.204043175 ubox
55 75 0.019105821 ubox
56 72 0.997712917 ubox
56 73 0.022713289 ubox
56 74 0.012959815 ubox
57 71 0.998083036 ubox
58 70 0.998078079 ubox
59 69 0.997318517 ubox
60 67 0.009112509 ubox
60 68 0.997960425 ubox
61 66 0.012707819 ubox
61 67 0.997865903 ubox
61 68 0.010099527 ubox
62 66 0.981740909 ubox
62 67 0.013428221 ubox
62 82 0.059326670 ubox
63 81 0.060018606 ubox
65 80 0.061528998 ubox
66 79 0.061541891 ubox
67 77 0.061669005 ubox
68 76 0.061676348 ubox
69 75 0.061664303 ubox
70 74 0.060668834 ubox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
8 18 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
11 15 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
24 28 0.9500000 lbox
46 82 0.9500000 lbox
47 81 0.9500000 lbox
48 80 0.9500000 lbox
49 79 0.9500000 lbox
52 76 0.9500000 lbox
53 75 0.9500000 lbox
55 73 0.9500000 lbox
56 72 0.9500000 lbox
57 71 0.9500000 lbox
58 70 0.9500000 lbox
59 69 0.9500000 lbox
60 68 0.9500000 lbox
61 67 0.9500000 lbox
62 66 0.9500000 lbox
showpage
end
%%EOF
