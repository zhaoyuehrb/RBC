%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGUGCGGCACCUUAGUGAUCCCGAGUUUAAGCCGAGAGUUGCUCACGUGACCGAGAUCUCACAUGACGUAGGCGCUCACGUGAUUACUCGCUUACGUGAGCAGAAGUAGUUCUGGUCGUCGUCUACCGUCUCGCUAUAGCCGUUUGAGGGAAGAAGGAGGAAAAUUACCCGGUAUCGUUAGAGCUACACCAAAAUUGCAUUGAGCCAAACUUGCCACCAAGAGCCCAACAAUCACC\
) } def
/len { sequence length } bind def

/coor [
[148.65841675 374.33911133]
[161.81027222 366.95809937]
[157.94372559 352.46499634]
[153.98280334 337.99740601]
[149.92767334 323.55593872]
[145.87252808 309.11450195]
[141.81739807 294.67303467]
[128.74491882 287.62701416]
[124.42671204 273.03909302]
[131.90583801 259.37524414]
[127.85070801 244.93379211]
[123.79557037 230.49232483]
[120.93721008 228.46052551]
[118.91250610 224.95263672]
[118.40040588 220.37161255]
[119.87606812 215.40663147]
[116.38864899 200.81765747]
[112.90122986 186.22869873]
[109.41381073 171.63972473]
[105.92639160 157.05076599]
[102.43897247 142.46179199]
[87.43830872 140.63442993]
[74.02341461 133.67744446]
[62.91120148 143.75308228]
[57.88505554 158.75469971]
[43.25928879 161.57183838]
[32.14707565 171.64747620]
[27.90325356 179.71282959]
[20.82371712 181.78088379]
[9.58110809 191.71081543]
[4.88045263 207.42182922]
[-11.13628292 210.94265747]
[-21.99245262 198.65138245]
[-16.52016258 183.19219971]
[-0.34883311 180.46821594]
[10.89377689 170.53826904]
[22.07142639 160.53526306]
[33.18363953 150.45960999]
[37.41496658 136.17868042]
[52.83555222 132.64086914]
[63.94776535 122.56522369]
[58.12511063 107.44622803]
[58.37868881 91.24674988]
[44.47418976 85.61959076]
[30.56969070 79.99243927]
[16.66518974 74.36528015]
[2.76069069 68.73812866]
[-11.14380932 63.11096954]
[-25.04830933 57.48381424]
[-38.95280838 51.85665894]
[-52.85731125 46.22950363]
[-66.76181030 40.60234833]
[-80.66631317 34.97519302]
[-94.57080841 29.34803772]
[-110.26570892 31.34320831]
[-119.16086578 19.39643288]
[-133.06536865 13.76927757]
[-146.96986389 8.14212227]
[-160.87435913 2.51496649]
[-174.01217651 10.55884647]
[-189.18994141 9.33863926]
[-200.60388184 -0.46880832]
[-204.01335144 -14.94339180]
[-217.91784668 -20.57054710]
[-231.82234192 -26.19770241]
[-245.72683716 -31.82485771]
[-261.42175293 -29.82968712]
[-270.31689453 -41.77646255]
[-284.22140503 -47.40361786]
[-298.12591553 -53.03077316]
[-312.06677246 -58.56718445]
[-326.04345703 -64.01261139]
[-342.16250610 -60.99470139]
[-352.62875366 -73.61967468]
[-346.67538452 -88.90003967]
[-330.42675781 -91.11666870]
[-320.59802246 -77.98928070]
[-306.62136841 -72.54385376]
[-299.26287842 -73.04318237]
[-292.49874878 -66.93527222]
[-278.59423828 -61.30811691]
[-264.68975830 -55.68096161]
[-249.98939514 -58.07862473]
[-240.09968567 -45.72935867]
[-226.19519043 -40.10220337]
[-212.29069519 -34.47504807]
[-198.38618469 -28.84789085]
[-185.86943054 -36.87712479]
[-170.84712219 -35.98581696]
[-159.09272766 -26.30657578]
[-155.24720764 -11.38953304]
[-141.34271240 -5.76237774]
[-127.43820953 -0.13522223]
[-113.53370667 5.49193335]
[-98.83335114 3.09426975]
[-88.94365692 15.44353676]
[-75.03915405 21.07069206]
[-61.13465500 26.69784737]
[-47.23015213 32.32500458]
[-33.32565308 37.95215988]
[-19.42115402 43.57931519]
[-5.51665401 49.20647049]
[8.38784599 54.83362579]
[22.29234695 60.46078110]
[36.19684601 66.08793640]
[50.10134506 71.71509552]
[64.00584412 77.34224701]
[80.69896698 62.09983063]
[102.84422302 57.56341934]
[124.18604279 65.01445770]
[134.75802612 54.37334824]
[145.33000183 43.73223877]
[155.90197754 33.09112549]
[166.47396851 22.45001411]
[177.04594421 11.80890369]
[187.61791992 1.16779220]
[198.18989563 -9.47331905]
[208.76188660 -20.11442947]
[219.33386230 -30.75554085]
[220.28724670 -34.94494629]
[222.31166077 -38.28593445]
[225.01260376 -40.54736710]
[227.96104431 -41.64857101]
[230.74510193 -41.65767670]
[241.85731506 -51.73332596]
[243.26177979 -64.54148102]
[252.70756531 -72.70463562]
[264.78344727 -72.26622772]
[276.02606201 -82.19616699]
[287.26867676 -92.12610626]
[298.51129150 -102.05604553]
[309.75390625 -111.98599243]
[320.39501953 -122.55796814]
[330.39801025 -133.73562622]
[340.40103149 -144.91326904]
[350.40402222 -156.09091187]
[343.30352783 -169.46282959]
[341.21032715 -184.42915344]
[344.35797119 -199.18084717]
[352.34765625 -211.94152832]
[364.19873047 -221.18128967]
[378.46899414 -225.80018616]
[393.43014526 -225.25910950]
[407.27719116 -219.64263916]
[417.28021240 -230.82029724]
[416.15493774 -246.58447266]
[426.56918335 -258.47222900]
[442.34439087 -259.43075562]
[454.12136841 -248.89140320]
[454.91308594 -233.10696411]
[444.24978638 -221.44206238]
[428.45785522 -220.81729126]
[418.45483398 -209.63963318]
[425.56802368 -196.49856567]
[427.76013184 -181.68898010]
[424.74752808 -166.99548340]
[416.87487793 -154.19537354]
[405.07592773 -144.84365845]
[390.76272583 -140.08412170]
[375.65673828 -140.50956726]
[361.58166504 -146.08790588]
[351.57867432 -134.91026306]
[341.57565308 -123.73261261]
[331.57266235 -112.55496216]
[346.32232666 -115.28394318]
[360.24099731 -109.69188690]
[369.00271606 -97.51682281]
[369.88433838 -82.54275513]
[362.61190796 -69.42362976]
[349.44561768 -62.23687744]
[334.47763062 -63.21614075]
[322.35995483 -72.05706787]
[316.85876465 -86.01188660]
[319.68383789 -100.74337769]
[308.44122314 -90.81343842]
[297.19860840 -80.88349915]
[285.95602417 -70.95355988]
[274.71340942 -61.02361679]
[270.02429199 -44.10377884]
[251.93296814 -40.62111282]
[240.82075500 -30.54546356]
[229.97497559 -20.18356323]
[219.40299988 -9.54245090]
[208.83100891 1.09866035]
[198.25903320 11.73977184]
[187.68705750 22.38088226]
[177.11508179 33.02199554]
[166.54309082 43.66310501]
[155.97111511 54.30421829]
[145.39913940 64.94532776]
[134.82716370 75.58644104]
[138.28916931 81.48264313]
[140.76162720 87.85741425]
[142.18064880 94.54599762]
[142.50953674 101.37552643]
[141.73980713 108.16951752]
[139.89135742 114.75237274]
[137.01194763 120.95396423]
[133.17599487 126.61401367]
[128.48265076 131.58625793]
[123.05318451 135.74218750]
[117.02793884 138.97438049]
[120.51535797 153.56333923]
[124.00277710 168.15231323]
[127.49019623 182.74127197]
[130.97761536 197.33024597]
[134.46502686 211.91920471]
[138.23703003 226.43719482]
[142.29216003 240.87866211]
[146.34730530 255.32011414]
[159.84594727 263.09344482]
[163.75271606 277.79690552]
[156.25885010 290.61788940]
[160.31399536 305.05935669]
[164.36912537 319.50082397]
[168.42427063 333.94229126]
[173.74676514 341.34030151]
[172.43682861 348.59844971]
[176.30337524 363.09155273]
[191.38407898 362.94052124]
[206.02836609 366.54547119]
[219.31567383 373.67977905]
[230.41075134 383.89498901]
[238.61614990 396.54891968]
[243.41607666 410.84619141]
[244.50878906 425.88800049]
[241.82560730 440.72888184]
[235.53521729 454.43588257]
[226.03300476 466.14736938]
[213.91632080 475.12713623]
[199.94679260 480.81076050]
[185.00259399 482.84091187]
[170.02310181 481.08996582]
[155.94995117 475.66806030]
[143.66780090 466.91595459]
[133.94869995 455.38381958]
[127.40360260 441.79660034]
[124.44394684 427.00839233]
[125.25578308 411.94876099]
[129.78807068 397.56442261]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 219]
[3 218]
[4 216]
[5 215]
[6 214]
[7 213]
[10 210]
[11 209]
[12 208]
[16 207]
[17 206]
[18 205]
[19 204]
[20 203]
[21 202]
[23 41]
[24 40]
[26 38]
[27 37]
[29 36]
[30 35]
[43 107]
[44 106]
[45 105]
[46 104]
[47 103]
[48 102]
[49 101]
[50 100]
[51 99]
[52 98]
[53 97]
[54 96]
[56 94]
[57 93]
[58 92]
[59 91]
[63 87]
[64 86]
[65 85]
[66 84]
[68 82]
[69 81]
[70 80]
[71 78]
[72 77]
[110 191]
[111 190]
[112 189]
[113 188]
[114 187]
[115 186]
[116 185]
[117 184]
[118 183]
[119 182]
[124 181]
[125 180]
[128 178]
[129 177]
[130 176]
[131 175]
[132 174]
[133 164]
[134 163]
[135 162]
[136 161]
[144 153]
[145 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
