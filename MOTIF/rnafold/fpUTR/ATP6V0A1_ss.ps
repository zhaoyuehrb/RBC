%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGCAGGGGCGGGGCUUUACGGACGCAAGCACGUCGAAGCGCUGCUCCUGGAGCCGCGGAGGGUGCGGGUUUGGCUGCGGUGGUUUCUGUGGCGGUUGCUGUGGCGGAGUUUGGAGGUUGGAGAGAAAUCCAGGUACUCACUAGACUGGUACCUUCUGCCACC\
) } def
/len { sequence length } bind def

/coor [
[-141.56826782 262.58224487]
[-135.22775269 248.99050903]
[-149.08595276 254.73075867]
[-162.94413757 260.47100830]
[-176.80233765 266.21127319]
[-190.66052246 271.95150757]
[-201.50254822 286.81164551]
[-218.78923035 283.89352417]
[-232.53767395 289.89190674]
[-246.28610229 295.89028931]
[-260.03454590 301.88867188]
[-273.78295898 307.88705444]
[-287.53140259 313.88543701]
[-301.27984619 319.88381958]
[-315.02825928 325.88220215]
[-328.77670288 331.88058472]
[-338.33132935 344.49087524]
[-353.09075928 342.48867798]
[-366.83920288 348.48706055]
[-380.58761597 354.48544312]
[-394.33605957 360.48382568]
[-408.08450317 366.48220825]
[-411.22872925 370.75286865]
[-415.29858398 373.12533569]
[-419.40463257 373.56695557]
[-422.77606201 372.40734863]
[-436.83920288 377.62539673]
[-450.90234375 382.84347534]
[-464.96548462 388.06152344]
[-471.32662964 402.52914429]
[-486.08483887 408.18331909]
[-500.48440552 401.66958618]
[-505.98223877 386.85238647]
[-499.31661987 372.52252197]
[-484.44213867 367.18164062]
[-470.18353271 373.99838257]
[-456.12042236 368.78033447]
[-442.05728149 363.56225586]
[-427.99414062 358.34420776]
[-414.08288574 352.73376465]
[-400.33444214 346.73538208]
[-386.58599854 340.73699951]
[-372.83758545 334.73861694]
[-359.08914185 328.74026489]
[-350.51788330 316.55899048]
[-334.77508545 318.13214111]
[-321.02664185 312.13375854]
[-307.27822876 306.13537598]
[-293.52978516 300.13699341]
[-279.78134155 294.13861084]
[-266.03292847 288.14022827]
[-252.28448486 282.14184570]
[-238.53605652 276.14346313]
[-224.78761292 270.14508057]
[-220.06094360 258.98190308]
[-208.62150574 253.88391113]
[-196.40077209 258.09332275]
[-182.54258728 252.35307312]
[-168.68438721 246.61282349]
[-154.82620239 240.87257385]
[-140.96800232 235.13230896]
[-127.57752991 228.37249756]
[-114.72966003 220.63090515]
[-101.88179779 212.88929749]
[-89.03392792 205.14770508]
[-76.18605804 197.40611267]
[-63.33818817 189.66452026]
[-50.49032211 181.92292786]
[-37.64245224 174.18133545]
[-24.79458427 166.43974304]
[-17.88663292 153.24392700]
[-2.07317686 152.74876404]
[10.77469158 145.00717163]
[23.62256050 137.26556396]
[36.47042847 129.52397156]
[49.31829453 121.78237915]
[62.16616440 114.04078674]
[75.01403046 106.29919434]
[69.20325470 89.87965393]
[75.16809845 69.84135437]
[94.32902527 54.63770676]
[94.60951233 39.64033127]
[86.20767975 25.55696106]
[94.43847656 11.37295246]
[110.83475494 11.67959785]
[118.52943420 26.16144753]
[109.60688782 39.92081451]
[109.32640839 54.91819000]
[123.53035736 59.73978424]
[132.43766785 47.67081833]
[141.34495544 35.60184860]
[150.25225830 23.53288269]
[159.15956116 11.46391678]
[168.06686401 -0.60505015]
[170.03627014 -16.30320358]
[183.81939697 -21.94897270]
[192.72669983 -34.01794052]
[201.63400269 -46.08690643]
[210.54130554 -58.15587234]
[215.08203125 -74.49044037]
[232.03524780 -74.64903259]
[236.88075256 -58.40226364]
[222.61027527 -49.24856949]
[213.70297241 -37.17960358]
[204.79566956 -25.11063766]
[195.88836670 -13.04166985]
[194.55607605 1.79322970]
[180.13583374 8.30225277]
[171.22853088 20.37121964]
[162.32122803 32.44018555]
[153.41392517 44.50915146]
[144.50662231 56.57812119]
[135.59931946 68.64708710]
[138.40454102 75.60271454]
[152.31588745 69.99250031]
[157.92588806 83.90393066]
[144.01496887 89.51396942]
[146.82017517 96.46960449]
[161.60824585 98.98219299]
[176.39631653 101.49478912]
[194.91845703 93.60858154]
[209.30912781 106.48727417]
[224.18080139 108.44516754]
[239.05245972 110.40306091]
[253.92413330 112.36095428]
[268.79580688 114.31884766]
[281.18005371 104.50017548]
[296.87005615 106.39727020]
[306.55725098 118.88462067]
[304.49438477 134.55369568]
[291.90530396 144.10832214]
[276.25891113 141.87989807]
[266.83792114 129.19052124]
[251.96624756 127.23262787]
[237.09457397 125.27473450]
[222.22290039 123.31684113]
[207.35122681 121.35894775]
[199.79473877 128.31263733]
[189.43759155 129.97178650]
[179.68612671 125.54480743]
[173.88371277 116.28285217]
[159.09565735 113.77026367]
[144.30758667 111.25766754]
[110.37132263 134.20375061]
[82.75563049 119.14706421]
[69.90776062 126.88865662]
[57.05989075 134.63024902]
[44.21202087 142.37184143]
[31.36415291 150.11343384]
[18.51628494 157.85502625]
[5.66841698 165.59663391]
[-2.15849996 179.34617615]
[-17.05298996 179.28761292]
[-29.90085793 187.02920532]
[-42.74872589 194.77079773]
[-55.59659576 202.51239014]
[-68.44446564 210.25398254]
[-81.29233551 217.99557495]
[-94.14019775 225.73716736]
[-106.98806763 233.47875977]
[-119.83593750 241.22036743]
[-105.13301849 244.19091797]
[-94.87834167 255.13813782]
[-92.87361145 270.00357056]
[-99.86204529 283.27615356]
[-113.25282288 290.03540039]
[-128.08158875 287.77539062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 61]
[3 60]
[4 59]
[5 58]
[6 57]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[16 46]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[26 39]
[27 38]
[28 37]
[29 36]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 153]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
[78 145]
[81 88]
[82 87]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[96 106]
[97 105]
[98 104]
[99 103]
[118 143]
[119 142]
[120 141]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
