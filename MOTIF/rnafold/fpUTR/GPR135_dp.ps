%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPR135)
} def

/sequence { (\
GCCGAGCCCAGCUCCCCGCGGCGGCCGCUAGCCCCCGGCCCCGAGCCACCACUCCGACCUAGCGGCCGCCGCCCCCGGUGCGGGAUGAGGAGAUCCGCGGCCGCCACUGGGCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.018330012 ubox
1 12 0.051815648 ubox
1 19 0.055176414 ubox
1 72 0.004134090 ubox
1 79 0.030405862 ubox
1 98 0.017348680 ubox
1 101 0.033862019 ubox
1 112 0.162042391 ubox
2 6 0.018277393 ubox
2 11 0.051880547 ubox
2 18 0.055864192 ubox
2 71 0.003931886 ubox
2 78 0.031527917 ubox
2 90 0.021374090 ubox
2 97 0.017249726 ubox
2 100 0.033975560 ubox
2 110 0.005004692 ubox
2 111 0.157263935 ubox
3 18 0.004135659 ubox
3 77 0.031511708 ubox
3 89 0.021451386 ubox
3 99 0.033943704 ubox
3 109 0.005369696 ubox
3 110 0.136402876 ubox
4 14 0.909358055 ubox
4 17 0.009676036 ubox
4 76 0.014415420 ubox
4 95 0.007149325 ubox
4 98 0.028385512 ubox
5 13 0.911510524 ubox
5 94 0.006936484 ubox
5 108 0.015286460 ubox
6 12 0.911861410 ubox
6 98 0.021792012 ubox
6 101 0.003246605 ubox
6 107 0.015115678 ubox
6 112 0.400157060 ubox
7 11 0.905234129 ubox
7 84 0.025647544 ubox
7 90 0.003217914 ubox
7 97 0.022382823 ubox
7 100 0.003307777 ubox
7 111 0.401099884 ubox
8 83 0.025700701 ubox
8 84 0.003323906 ubox
8 89 0.003216743 ubox
8 99 0.003296268 ubox
8 110 0.401103376 ubox
9 82 0.025652686 ubox
9 83 0.003328541 ubox
9 109 0.401093847 ubox
10 108 0.400513979 ubox
11 79 0.005191369 ubox
11 81 0.026618907 ubox
11 104 0.021017682 ubox
11 107 0.397558645 ubox
12 18 0.004727700 ubox
12 78 0.011038755 ubox
12 80 0.026817222 ubox
12 89 0.005239944 ubox
12 92 0.048876579 ubox
12 103 0.023125299 ubox
13 77 0.010592178 ubox
13 78 0.004406139 ubox
13 85 0.003377740 ubox
13 88 0.005341261 ubox
13 91 0.049012584 ubox
14 77 0.005734390 ubox
14 78 0.030270398 ubox
14 84 0.003416354 ubox
14 87 0.005317399 ubox
14 90 0.048988125 ubox
14 92 0.003187793 ubox
14 100 0.003894618 ubox
15 77 0.030372942 ubox
15 78 0.015996196 ubox
15 83 0.003338660 ubox
15 84 0.007132363 ubox
15 89 0.048864635 ubox
15 90 0.003944951 ubox
15 99 0.003880490 ubox
15 100 0.006996100 ubox
15 111 0.018276231 ubox
16 77 0.016050912 ubox
16 78 0.020054896 ubox
16 82 0.003219804 ubox
16 83 0.007269409 ubox
16 89 0.004442279 ubox
16 90 0.003552604 ubox
16 99 0.006952924 ubox
16 100 0.008658541 ubox
16 110 0.018314841 ubox
16 111 0.004407311 ubox
17 77 0.020195374 ubox
17 82 0.007320069 ubox
17 87 0.037415881 ubox
17 89 0.003571934 ubox
17 97 0.003271669 ubox
17 99 0.008679786 ubox
17 103 0.008268574 ubox
17 109 0.018204707 ubox
17 110 0.003856700 ubox
18 72 0.996206958 ubox
18 76 0.008254695 ubox
18 81 0.007211309 ubox
18 98 0.005667839 ubox
19 71 0.998285941 ubox
19 80 0.007164167 ubox
19 97 0.005554036 ubox
20 70 0.999971807 ubox
21 69 0.999993026 ubox
22 68 0.999979287 ubox
23 67 0.999977022 ubox
24 66 0.999994218 ubox
25 65 0.999994248 ubox
26 64 0.999977052 ubox
27 63 0.999980092 ubox
28 62 0.999985605 ubox
29 61 0.999094792 ubox
30 53 0.020502624 ubox
30 60 0.992915510 ubox
31 39 0.374505890 ubox
31 46 0.014325420 ubox
31 52 0.026006612 ubox
31 59 0.917606363 ubox
32 38 0.407826866 ubox
32 45 0.016110657 ubox
33 37 0.405159863 ubox
36 43 0.031953784 ubox
36 56 0.741713885 ubox
37 42 0.048594517 ubox
37 47 0.493009743 ubox
37 50 0.055361494 ubox
37 53 0.050400942 ubox
37 54 0.024515739 ubox
37 55 0.738751943 ubox
37 59 0.097412167 ubox
37 60 0.008993757 ubox
38 46 0.496674851 ubox
38 49 0.054850775 ubox
38 52 0.052535213 ubox
38 53 0.017424459 ubox
38 54 0.670247591 ubox
38 58 0.111597772 ubox
38 59 0.011404272 ubox
39 45 0.498157534 ubox
42 56 0.236248145 ubox
43 54 0.506405745 ubox
43 55 0.172265433 ubox
44 53 0.674584161 ubox
45 52 0.672899330 ubox
71 79 0.007488732 ubox
71 112 0.033768828 ubox
72 78 0.007857544 ubox
72 111 0.033087061 ubox
73 77 0.008113762 ubox
73 84 0.017385162 ubox
73 109 0.004472546 ubox
73 110 0.032479160 ubox
73 111 0.075284592 ubox
74 83 0.017267996 ubox
74 84 0.051824250 ubox
74 109 0.031762899 ubox
74 110 0.064151571 ubox
74 111 0.888471811 ubox
75 82 0.017088183 ubox
75 83 0.052016375 ubox
75 84 0.003354190 ubox
75 109 0.049574805 ubox
75 110 0.900455928 ubox
75 111 0.004237291 ubox
76 82 0.052107239 ubox
76 83 0.003361943 ubox
76 103 0.377416218 ubox
76 109 0.910307876 ubox
76 110 0.003220499 ubox
77 81 0.048799017 ubox
77 102 0.392078062 ubox
77 105 0.090543247 ubox
77 108 0.911037951 ubox
78 101 0.391967507 ubox
78 104 0.090589713 ubox
78 107 0.911810554 ubox
79 99 0.248673578 ubox
79 100 0.297926196 ubox
79 103 0.089967182 ubox
79 106 0.909546349 ubox
80 98 0.355903444 ubox
80 101 0.036858136 ubox
80 102 0.078454372 ubox
80 104 0.616036585 ubox
80 105 0.672679730 ubox
81 97 0.356439690 ubox
81 99 0.158651505 ubox
81 100 0.039977892 ubox
81 103 0.868568352 ubox
82 96 0.306536481 ubox
82 98 0.164144876 ubox
82 102 0.866225628 ubox
83 95 0.246695238 ubox
83 96 0.271889583 ubox
83 101 0.861217743 ubox
83 102 0.283779767 ubox
84 94 0.140888107 ubox
84 95 0.331377980 ubox
84 101 0.290825225 ubox
85 94 0.377805408 ubox
86 93 0.391692952 ubox
86 97 0.036296057 ubox
86 99 0.734660357 ubox
87 95 0.045898184 ubox
87 96 0.041858531 ubox
87 98 0.780612838 ubox
88 94 0.046405292 ubox
89 95 0.035534051 ubox
89 96 0.903941041 ubox
90 94 0.023268436 ubox
90 95 0.902657987 ubox
96 103 0.005403201 ubox
97 102 0.005412642 ubox
97 104 0.033160888 ubox
98 103 0.033180248 ubox
99 105 0.018467165 ubox
99 113 0.050841060 ubox
99 114 0.004636791 ubox
100 104 0.018209712 ubox
100 112 0.051034988 ubox
100 113 0.004008766 ubox
101 111 0.051029093 ubox
102 109 0.003667461 ubox
102 110 0.050948004 ubox
103 112 0.036848287 ubox
104 110 0.003225813 ubox
104 111 0.037054361 ubox
105 109 0.005181848 ubox
105 110 0.036990690 ubox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
7 11 0.9500000 lbox
18 72 0.9500000 lbox
19 71 0.9500000 lbox
20 70 0.9500000 lbox
21 69 0.9500000 lbox
22 68 0.9500000 lbox
23 67 0.9500000 lbox
24 66 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
30 60 0.9500000 lbox
31 59 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
74 111 0.9500000 lbox
75 110 0.9500000 lbox
76 109 0.9500000 lbox
77 108 0.9500000 lbox
78 107 0.9500000 lbox
79 106 0.9500000 lbox
80 105 0.9500000 lbox
81 103 0.9500000 lbox
82 102 0.9500000 lbox
83 101 0.9500000 lbox
86 99 0.9500000 lbox
87 98 0.9500000 lbox
89 96 0.9500000 lbox
90 95 0.9500000 lbox
showpage
end
%%EOF
