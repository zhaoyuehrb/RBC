%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:13:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NUDT7)
} def

/sequence { (\
GGCCGCUCCCAAGCCCAGAGCUGCUCUGCGCAAGCGCGACCGACCGAGCAGCUCCGAGGAGUCCGCCCGGAAACAAACAUUCCCCAGGGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004546689 ubox
1 8 0.010322859 ubox
1 9 0.036842344 ubox
1 10 0.114757655 ubox
1 15 0.078436623 ubox
1 16 0.099301461 ubox
1 63 0.158740508 ubox
1 64 0.925279795 ubox
1 67 0.024938279 ubox
1 68 0.004719429 ubox
2 6 0.005328667 ubox
2 7 0.007362472 ubox
2 8 0.036856769 ubox
2 9 0.113955840 ubox
2 14 0.080859743 ubox
2 15 0.098592845 ubox
2 62 0.160509725 ubox
2 63 0.922620278 ubox
2 66 0.025341652 ubox
2 67 0.004090299 ubox
2 90 0.021500363 ubox
3 13 0.081039809 ubox
3 59 0.035910797 ubox
3 61 0.208632163 ubox
3 65 0.025469499 ubox
3 89 0.021501907 ubox
4 56 0.004060868 ubox
4 58 0.036038973 ubox
4 65 0.004010650 ubox
4 88 0.021242541 ubox
5 14 0.181493802 ubox
5 62 0.908099786 ubox
5 64 0.010921633 ubox
5 90 0.003951816 ubox
6 13 0.182080158 ubox
6 58 0.195857090 ubox
6 59 0.004428588 ubox
6 61 0.946914230 ubox
6 87 0.004592212 ubox
6 89 0.003926356 ubox
7 12 0.168550686 ubox
7 57 0.195845116 ubox
7 58 0.003483992 ubox
7 60 0.947021012 ubox
7 86 0.004293912 ubox
7 88 0.003394654 ubox
8 56 0.195419368 ubox
8 58 0.003340998 ubox
8 59 0.943148508 ubox
8 87 0.003352104 ubox
9 58 0.938001371 ubox
9 59 0.076512039 ubox
10 58 0.107641866 ubox
13 31 0.006131031 ubox
13 62 0.115573783 ubox
13 90 0.057423275 ubox
14 30 0.006132413 ubox
14 59 0.053680045 ubox
14 61 0.119419366 ubox
14 89 0.057483388 ubox
15 58 0.057997435 ubox
15 59 0.198394867 ubox
15 88 0.057481489 ubox
16 28 0.006284085 ubox
16 58 0.200410513 ubox
16 87 0.057418130 ubox
17 27 0.006301099 ubox
18 26 0.006304821 ubox
18 54 0.997210516 ubox
19 25 0.006295292 ubox
19 53 0.999473254 ubox
20 24 0.006156738 ubox
20 52 0.999963015 ubox
21 51 0.999966442 ubox
22 50 0.999734426 ubox
23 49 0.999969154 ubox
24 48 0.999968469 ubox
25 39 0.017085569 ubox
25 43 0.022629499 ubox
25 47 0.999304947 ubox
26 38 0.021580000 ubox
26 42 0.028686940 ubox
26 46 0.997320310 ubox
27 36 0.230059422 ubox
27 38 0.720642087 ubox
27 42 0.331812731 ubox
27 46 0.033128757 ubox
28 35 0.241754899 ubox
28 37 0.750883218 ubox
28 41 0.333343538 ubox
28 45 0.181384727 ubox
29 34 0.241765670 ubox
29 36 0.751006484 ubox
29 38 0.605295439 ubox
29 42 0.045746104 ubox
29 46 0.005243780 ubox
30 35 0.731564521 ubox
30 37 0.610774463 ubox
30 41 0.040903660 ubox
30 45 0.009228874 ubox
31 36 0.609968263 ubox
33 53 0.004013292 ubox
34 49 0.004191738 ubox
34 52 0.004247682 ubox
35 42 0.019583899 ubox
35 48 0.004188382 ubox
35 51 0.004246511 ubox
36 41 0.025162552 ubox
36 45 0.018447993 ubox
36 49 0.004207640 ubox
37 46 0.019848353 ubox
37 48 0.004213108 ubox
38 45 0.120531573 ubox
53 60 0.003579443 ubox
53 71 0.016084040 ubox
54 59 0.004073947 ubox
54 70 0.022381539 ubox
55 65 0.007020438 ubox
55 69 0.028010933 ubox
55 87 0.003251575 ubox
56 63 0.048237845 ubox
56 64 0.011783307 ubox
56 68 0.035920246 ubox
57 62 0.047243788 ubox
58 64 0.060900838 ubox
58 67 0.042214780 ubox
58 68 0.022426140 ubox
58 83 0.028173384 ubox
58 85 0.004674575 ubox
59 63 0.059995449 ubox
59 66 0.042153922 ubox
59 67 0.022383217 ubox
59 82 0.028273186 ubox
59 84 0.004661017 ubox
60 81 0.028194621 ubox
61 74 0.003630792 ubox
61 80 0.027455122 ubox
61 90 0.058242154 ubox
62 71 0.025474498 ubox
62 79 0.016254919 ubox
62 89 0.058238264 ubox
63 70 0.030040351 ubox
63 88 0.058469979 ubox
63 89 0.003505921 ubox
64 69 0.030005221 ubox
64 87 0.058595552 ubox
64 88 0.003546897 ubox
65 90 0.994953176 ubox
66 88 0.010549272 ubox
66 89 0.995976909 ubox
67 87 0.012670850 ubox
67 88 0.995964461 ubox
68 87 0.994994840 ubox
68 88 0.004027771 ubox
69 82 0.042594887 ubox
69 83 0.907420258 ubox
69 84 0.179866588 ubox
69 85 0.354371799 ubox
70 81 0.042754503 ubox
70 82 0.910507887 ubox
70 83 0.172711596 ubox
70 84 0.353098270 ubox
71 80 0.054277458 ubox
71 81 0.905564114 ubox
72 80 0.837092128 ubox
72 81 0.140920659 ubox
73 80 0.138291078 ubox
75 81 0.027646911 ubox
76 80 0.024028041 ubox
81 89 0.003172917 ubox
82 88 0.004211648 ubox
82 89 0.006045425 ubox
83 87 0.004289892 ubox
83 88 0.006134911 ubox
1 64 0.9500000 lbox
2 63 0.9500000 lbox
5 62 0.9500000 lbox
6 61 0.9500000 lbox
7 60 0.9500000 lbox
8 59 0.9500000 lbox
9 58 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
20 52 0.9500000 lbox
21 51 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
30 35 0.9500000 lbox
65 90 0.9500000 lbox
66 89 0.9500000 lbox
67 88 0.9500000 lbox
68 87 0.9500000 lbox
69 83 0.9500000 lbox
70 82 0.9500000 lbox
71 81 0.9500000 lbox
72 80 0.9500000 lbox
showpage
end
%%EOF
