%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WDR90)
} def

/sequence { (\
GUACUCUGCGCUGGGCGCGCGGAGGCCUAGGCGGGAAGCUCGAGCGGCGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.004010596 ubox
1 26 0.430506533 ubox
1 39 0.191479533 ubox
1 45 0.008460642 ubox
1 48 0.009194362 ubox
1 51 0.068192039 ubox
1 53 0.047695819 ubox
2 8 0.003999769 ubox
2 25 0.408111872 ubox
2 29 0.033231056 ubox
2 38 0.189917762 ubox
2 44 0.008204625 ubox
2 47 0.009015114 ubox
2 50 0.066936156 ubox
2 52 0.046388220 ubox
3 7 0.003637235 ubox
3 28 0.034607003 ubox
4 24 0.949023128 ubox
4 25 0.022641878 ubox
4 34 0.003445526 ubox
4 35 0.061477087 ubox
4 38 0.030184168 ubox
4 44 0.003584015 ubox
4 50 0.005068140 ubox
5 23 0.953058616 ubox
5 24 0.009924139 ubox
5 34 0.029162579 ubox
5 35 0.231248925 ubox
5 36 0.032743009 ubox
5 37 0.023987862 ubox
5 43 0.003735496 ubox
5 49 0.004309257 ubox
6 22 0.953490078 ubox
6 33 0.028648089 ubox
6 34 0.264251270 ubox
6 35 0.030577398 ubox
6 42 0.003426127 ubox
6 47 0.003601109 ubox
6 50 0.004716847 ubox
7 19 0.005549158 ubox
7 21 0.952764005 ubox
7 33 0.264937127 ubox
7 34 0.023752725 ubox
7 46 0.003613282 ubox
7 49 0.004771342 ubox
8 18 0.011926515 ubox
8 20 0.953424407 ubox
8 32 0.267453631 ubox
8 45 0.003644346 ubox
8 48 0.004811402 ubox
8 51 0.003399563 ubox
8 53 0.136624569 ubox
9 17 0.012223285 ubox
9 19 0.953432846 ubox
9 31 0.267268677 ubox
9 33 0.016738799 ubox
9 44 0.003636048 ubox
9 46 0.003583273 ubox
9 47 0.003635874 ubox
9 49 0.003198340 ubox
9 52 0.137068478 ubox
10 16 0.013535240 ubox
10 18 0.953399619 ubox
10 32 0.017052300 ubox
10 45 0.004778369 ubox
10 48 0.004017410 ubox
10 51 0.137092712 ubox
11 15 0.013688107 ubox
11 17 0.952690557 ubox
11 30 0.267374212 ubox
11 31 0.012827049 ubox
11 44 0.004766975 ubox
11 47 0.004022227 ubox
11 50 0.137089852 ubox
12 29 0.267947895 ubox
12 30 0.005927929 ubox
12 43 0.004306204 ubox
12 46 0.004013447 ubox
12 49 0.136387642 ubox
13 28 0.268016206 ubox
13 41 0.003719765 ubox
13 45 0.004012654 ubox
13 48 0.132890181 ubox
14 27 0.268190532 ubox
14 40 0.003742865 ubox
14 54 0.004337512 ubox
15 26 0.268183379 ubox
15 39 0.004000389 ubox
15 45 0.015164030 ubox
15 48 0.030536250 ubox
15 53 0.004400008 ubox
16 25 0.268163764 ubox
16 38 0.003945134 ubox
16 42 0.005083994 ubox
16 44 0.015127225 ubox
16 46 0.132017399 ubox
16 47 0.031199929 ubox
16 52 0.004406073 ubox
17 41 0.005335922 ubox
17 45 0.132502545 ubox
17 51 0.004405421 ubox
18 25 0.003505307 ubox
18 42 0.014016374 ubox
18 44 0.132287362 ubox
18 46 0.031168420 ubox
18 50 0.004333389 ubox
19 26 0.006388836 ubox
19 39 0.008549075 ubox
19 41 0.013870973 ubox
19 45 0.031409575 ubox
19 53 0.004679815 ubox
20 25 0.006461609 ubox
20 38 0.008588294 ubox
20 42 0.116299992 ubox
20 44 0.031392087 ubox
20 49 0.004172354 ubox
20 52 0.004699689 ubox
21 40 0.022106769 ubox
21 41 0.108612404 ubox
21 48 0.004114658 ubox
21 51 0.004679425 ubox
22 39 0.074789762 ubox
22 40 0.064296619 ubox
22 41 0.079210183 ubox
23 40 0.088989546 ubox
24 39 0.090556484 ubox
24 40 0.014254286 ubox
24 54 0.014877916 ubox
25 32 0.073287934 ubox
25 39 0.020125925 ubox
25 45 0.127241958 ubox
25 48 0.291307802 ubox
25 51 0.421628721 ubox
25 53 0.029050414 ubox
26 31 0.073733415 ubox
26 34 0.035022692 ubox
26 35 0.141510342 ubox
26 38 0.019204357 ubox
26 44 0.122872160 ubox
26 47 0.291526423 ubox
26 50 0.421998253 ubox
26 52 0.028999274 ubox
27 33 0.035253812 ubox
27 34 0.141913130 ubox
27 35 0.016203695 ubox
27 38 0.007755577 ubox
27 44 0.047854698 ubox
27 46 0.290405145 ubox
27 47 0.012541466 ubox
27 49 0.421184752 ubox
27 50 0.023833647 ubox
28 33 0.132764878 ubox
28 34 0.016054976 ubox
28 37 0.009394394 ubox
28 43 0.070228507 ubox
28 46 0.021867907 ubox
28 49 0.022431352 ubox
29 40 0.012502632 ubox
30 39 0.011578147 ubox
30 40 0.189446626 ubox
30 41 0.096259151 ubox
30 54 0.767063852 ubox
31 39 0.218656588 ubox
31 40 0.012733047 ubox
31 45 0.410449568 ubox
31 48 0.029911162 ubox
31 51 0.011422026 ubox
31 53 0.773676517 ubox
32 38 0.219006745 ubox
32 42 0.290751408 ubox
32 44 0.406785319 ubox
32 46 0.026047449 ubox
32 47 0.028590160 ubox
32 49 0.005871403 ubox
32 50 0.011059867 ubox
32 52 0.773684376 ubox
33 40 0.087322806 ubox
33 41 0.317097204 ubox
33 45 0.027106928 ubox
33 48 0.008187405 ubox
33 51 0.772170754 ubox
33 54 0.032324229 ubox
34 39 0.104641972 ubox
34 40 0.311676789 ubox
34 41 0.136256492 ubox
34 53 0.032494128 ubox
34 54 0.026047194 ubox
35 39 0.305590538 ubox
35 40 0.107200290 ubox
35 41 0.322736962 ubox
35 53 0.027395763 ubox
36 40 0.281017949 ubox
38 45 0.309273225 ubox
38 48 0.710178179 ubox
38 51 0.083528769 ubox
38 53 0.064023933 ubox
39 44 0.308367634 ubox
39 47 0.709673208 ubox
39 50 0.083919583 ubox
39 52 0.064160220 ubox
40 46 0.633357461 ubox
40 47 0.031359355 ubox
40 49 0.040431354 ubox
40 50 0.065123643 ubox
41 46 0.261658277 ubox
41 49 0.099328487 ubox
41 52 0.006709697 ubox
42 48 0.099531878 ubox
42 51 0.006416765 ubox
44 51 0.071264815 ubox
44 53 0.277509143 ubox
45 50 0.071417595 ubox
45 52 0.278264438 ubox
46 51 0.277161592 ubox
46 54 0.147372636 ubox
47 53 0.148451309 ubox
48 52 0.147376889 ubox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
6 22 0.9500000 lbox
7 21 0.9500000 lbox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
38 48 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
showpage
end
%%EOF
