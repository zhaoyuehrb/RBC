%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BBS4)
} def

/sequence { (\
GUCUGGGAAACCGCCGACUUCCGGCCGCGCAGCGGUGGGCUGAGCUAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.021571875 ubox
1 14 0.028477410 ubox
1 18 0.507466242 ubox
1 25 0.052673408 ubox
1 28 0.008143524 ubox
1 40 0.015792064 ubox
1 45 0.090517874 ubox
2 8 0.022905126 ubox
2 10 0.020884122 ubox
2 13 0.025568259 ubox
2 17 0.511165057 ubox
2 24 0.032596731 ubox
2 27 0.007818086 ubox
2 39 0.015616868 ubox
2 43 0.012184482 ubox
2 44 0.022271308 ubox
3 7 0.024352762 ubox
3 16 0.507901785 ubox
3 23 0.031927478 ubox
3 24 0.061295876 ubox
3 38 0.015403505 ubox
3 42 0.013293548 ubox
3 44 0.110859441 ubox
4 13 0.352023321 ubox
4 16 0.084523910 ubox
4 23 0.062048967 ubox
4 37 0.013598350 ubox
4 42 0.006516261 ubox
4 43 0.111982946 ubox
4 47 0.031084731 ubox
5 12 0.904905176 ubox
5 15 0.300096264 ubox
5 22 0.068213604 ubox
5 26 0.014488079 ubox
5 41 0.008173578 ubox
5 46 0.028982614 ubox
6 11 0.905088173 ubox
6 12 0.146468098 ubox
6 14 0.299804948 ubox
6 15 0.083015038 ubox
6 21 0.068020577 ubox
6 22 0.020839424 ubox
6 25 0.010474138 ubox
6 26 0.016945536 ubox
6 40 0.008129159 ubox
6 41 0.111026963 ubox
6 45 0.027682631 ubox
6 46 0.007805461 ubox
7 11 0.144617203 ubox
7 14 0.083830859 ubox
7 20 0.066869327 ubox
7 21 0.021653682 ubox
7 25 0.014760828 ubox
7 40 0.110687698 ubox
7 45 0.007714879 ubox
8 19 0.064071381 ubox
8 20 0.022093615 ubox
9 19 0.020659980 ubox
10 19 0.003504485 ubox
10 36 0.006754118 ubox
11 24 0.017032208 ubox
11 35 0.006871676 ubox
11 38 0.116566571 ubox
11 39 0.004984901 ubox
12 23 0.017062821 ubox
12 27 0.005267851 ubox
12 34 0.006800859 ubox
12 37 0.116839855 ubox
12 38 0.004175897 ubox
13 22 0.016949984 ubox
13 25 0.820490500 ubox
13 26 0.052138686 ubox
13 33 0.005520243 ubox
13 36 0.116801688 ubox
13 40 0.012546734 ubox
13 45 0.103483780 ubox
14 24 0.825676736 ubox
14 32 0.005384729 ubox
14 35 0.116840042 ubox
14 39 0.012420172 ubox
14 44 0.103561117 ubox
15 23 0.825701352 ubox
15 27 0.003573205 ubox
15 34 0.116837583 ubox
15 38 0.011982100 ubox
15 42 0.082291842 ubox
16 22 0.820602765 ubox
16 26 0.003834932 ubox
16 33 0.116736187 ubox
16 41 0.074011079 ubox
17 36 0.010935268 ubox
18 24 0.004004245 ubox
18 32 0.110437647 ubox
18 35 0.010413493 ubox
18 39 0.011264247 ubox
18 44 0.143926619 ubox
19 23 0.003719278 ubox
19 31 0.105329165 ubox
19 32 0.013422339 ubox
19 34 0.009844643 ubox
19 38 0.006959232 ubox
19 39 0.004949384 ubox
19 43 0.167301394 ubox
19 44 0.079085607 ubox
19 48 0.015468216 ubox
19 49 0.006435316 ubox
20 31 0.025917426 ubox
20 37 0.006343016 ubox
20 38 0.004115038 ubox
20 39 0.075309806 ubox
20 42 0.154596930 ubox
20 43 0.099583435 ubox
20 47 0.016410433 ubox
20 48 0.008783861 ubox
21 35 0.003640412 ubox
21 37 0.005304720 ubox
21 38 0.099258900 ubox
21 39 0.439004220 ubox
21 42 0.071048553 ubox
22 29 0.113589874 ubox
22 34 0.003857417 ubox
22 37 0.099406452 ubox
22 38 0.444880577 ubox
22 42 0.283096385 ubox
23 28 0.113783042 ubox
23 33 0.003534946 ubox
23 36 0.069983085 ubox
23 41 0.292471769 ubox
23 46 0.017372139 ubox
24 30 0.021089496 ubox
24 33 0.004851696 ubox
24 36 0.450149037 ubox
24 40 0.293175929 ubox
24 45 0.018209124 ubox
25 29 0.020946086 ubox
25 32 0.005130650 ubox
25 35 0.456552809 ubox
25 38 0.051701166 ubox
25 39 0.288809924 ubox
25 44 0.018183273 ubox
26 34 0.456740540 ubox
26 37 0.072748264 ubox
26 38 0.284123877 ubox
26 42 0.015855037 ubox
27 33 0.456712693 ubox
27 36 0.088478570 ubox
27 40 0.029011316 ubox
27 41 0.003692622 ubox
27 45 0.828431271 ubox
28 32 0.453396420 ubox
28 34 0.008953686 ubox
28 35 0.090399655 ubox
28 37 0.276985622 ubox
28 39 0.029226496 ubox
28 44 0.827818616 ubox
29 33 0.009427727 ubox
29 36 0.278002869 ubox
29 45 0.011831803 ubox
30 35 0.277734441 ubox
30 37 0.029784417 ubox
30 42 0.828530087 ubox
30 44 0.010675701 ubox
31 36 0.028573602 ubox
31 41 0.830679068 ubox
32 40 0.830958073 ubox
33 39 0.830841826 ubox
36 47 0.004728965 ubox
37 46 0.006537072 ubox
38 45 0.006713533 ubox
38 46 0.018251755 ubox
39 45 0.042871206 ubox
40 44 0.044343068 ubox
41 47 0.013802351 ubox
42 46 0.012282710 ubox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
showpage
end
%%EOF
