%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUAAAGUUUGAGGGGCGGUGGUGGCGGCGGCCGGCAGGCGCGGGGGAACACAGGGGCCGCUACGGGAGCCGCGCCGCCGCCCAUGUCAUUCCACUUCAAGUGACUUCAUGUGAUGUCAGCUGAAUGUAAAAGACAGUGAUCUCACGCGGAGGGGAAGAUGUUUGCCAUCAAAAUGUGACAGAAGAGACACGCUGCAUGGCUCGGAACGCAUCUCCUUGGUGGUGGGGGAAAGAGACUUAGAGGAGAGAGGCU\
GCGCCCUGGCCCAGCCUGGCUCGGCUCAGCUCCGCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[86.90669250 244.53605652]
[84.21491241 259.29257202]
[81.52313995 274.04907227]
[78.83135986 288.80557251]
[89.64144135 299.93759155]
[91.81040955 315.30230713]
[84.50425720 328.99172974]
[70.53235626 335.74194336]
[55.26716995 332.95736694]
[44.57848740 321.70874023]
[42.57632065 306.32138062]
[50.03054428 292.71203613]
[64.07485962 286.11376953]
[66.76663208 271.35726929]
[69.45841217 256.60076904]
[72.15019226 241.84428406]
[74.76362610 227.07369995]
[77.29863739 212.28945923]
[79.83364868 197.50521851]
[82.36865997 182.72097778]
[84.82518005 167.92350769]
[87.20314026 153.11318970]
[89.58110046 138.30288696]
[77.88263702 132.70126343]
[68.67362213 123.66829681]
[62.91089630 112.20662689]
[49.11440659 118.09363556]
[35.31791687 123.98064423]
[21.52142906 129.86766052]
[7.72493887 135.75466919]
[-6.07155037 141.64167786]
[-19.86804008 147.52868652]
[-33.66452789 153.41569519]
[-47.46101761 159.30270386]
[-61.22607422 165.26284790]
[-74.95930481 171.29594421]
[-88.69253540 177.32905579]
[-102.42576599 183.36215210]
[-105.83152008 198.38571167]
[-117.29655457 208.40600586]
[-132.28619385 209.73812866]
[-145.03338623 202.07997131]
[-158.76661682 208.11308289]
[-168.28935242 220.74748230]
[-183.05378723 218.78259277]
[-196.78701782 224.81570435]
[-206.30975342 237.45010376]
[-221.07418823 235.48522949]
[-234.80741882 241.51832581]
[-236.40872192 256.79351807]
[-245.44606018 269.21212769]
[-259.48843384 275.43362427]
[-274.75854492 273.78445435]
[-287.14877319 264.70825195]
[-293.32623291 250.64642334]
[-291.62918091 235.38157654]
[-282.51419067 223.01985168]
[-268.43307495 216.88652039]
[-253.17361450 218.63137817]
[-240.84053040 227.78509521]
[-227.10728455 221.75199890]
[-218.56684875 209.54911804]
[-202.82012939 211.08247375]
[-189.08688354 205.04936218]
[-180.54644775 192.84649658]
[-164.79971313 194.37985229]
[-151.06648254 188.34674072]
[-148.08361816 173.77827454]
[-136.96264648 163.63981628]
[-121.82727051 161.97436523]
[-108.45886993 169.62892151]
[-94.72563934 163.59582520]
[-80.99240875 157.56271362]
[-67.25917816 151.52961731]
[-62.42189026 145.98846436]
[-53.34803009 145.50621033]
[-39.55154037 139.61920166]
[-25.75504875 133.73219299]
[-11.95855999 127.84518433]
[1.83792973 121.95817566]
[15.63441944 116.07116699]
[29.43090820 110.18415833]
[43.22739792 104.29714966]
[57.02388763 98.41014099]
[60.18407822 83.74681091]
[50.03718948 72.69960785]
[39.83181763 61.70640945]
[29.56825638 50.76752090]
[19.30469322 39.82863617]
[9.04112911 28.88974762]
[0.92752755 24.79865646]
[-1.27255452 17.77987289]
[-11.41944218 6.73267031]
[-26.97416878 5.90306568]
[-37.10718536 -5.44491386]
[-36.22042465 -20.26885605]
[-46.36731339 -31.31605721]
[-56.57268143 -42.30925751]
[-66.83624268 -53.24814606]
[-77.09980774 -64.18703461]
[-87.36337280 -75.12592316]
[-102.92602539 -75.79039001]
[-113.17890930 -87.03018951]
[-112.44953156 -101.86270142]
[-122.71309662 -112.80158997]
[-132.97665405 -123.74047852]
[-143.24021912 -134.67936707]
[-158.32531738 -139.44911194]
[-161.39129639 -154.02474976]
[-171.65486145 -164.96363831]
[-187.50013733 -169.18966675]
[-191.50106812 -185.09327698]
[-179.54183960 -196.31417847]
[-163.92507935 -191.30929565]
[-160.71597290 -175.22720337]
[-150.45240784 -164.28831482]
[-136.10144043 -160.30097961]
[-132.30133057 -144.94293213]
[-122.03777313 -134.00404358]
[-111.77420807 -123.06515503]
[-101.51064301 -112.12626648]
[-86.66177368 -111.91025543]
[-76.09723663 -100.96288300]
[-76.42448425 -85.38948059]
[-66.16091919 -74.45059967]
[-55.89735794 -63.51170731]
[-45.63379288 -52.57281876]
[-38.79767609 -49.85783005]
[-35.32011032 -41.46294403]
[-25.17322350 -30.41574287]
[-10.32748222 -30.04215050]
[0.12027653 -18.98326302]
[-0.37224063 -3.41421771]
[9.77464771 7.63298416]
[19.98001671 18.62618446]
[30.24357986 29.56507111]
[40.50714493 40.50395966]
[50.77070618 51.44284821]
[57.60682678 54.15783691]
[61.08439255 62.55272293]
[71.23127747 73.59992218]
[95.72602081 63.88646317]
[118.81665802 72.06060028]
[129.75553894 61.79703522]
[140.69442749 51.53347397]
[151.63331604 41.26990891]
[162.57220459 31.00634575]
[173.51109314 20.74278069]
[184.39537048 10.42131329]
[195.22470093 0.04222992]
[199.83409119 -15.09263706]
[214.37635803 -18.31313896]
[225.20570374 -28.69222260]
[236.03503418 -39.07130432]
[246.86437988 -49.45038986]
[257.69372559 -59.82947159]
[268.52307129 -70.20855713]
[279.35241699 -80.58763885]
[278.08355713 -93.96864319]
[284.64410400 -105.47666931]
[296.45339966 -111.03598785]
[309.12017822 -108.82624817]
[320.05908203 -119.08981323]
[330.99795532 -129.35337830]
[341.93685913 -139.61694336]
[352.87573242 -149.88050842]
[363.64984131 -160.31690979]
[374.25643921 -170.92350769]
[384.86306763 -181.53010559]
[395.46966553 -192.13671875]
[406.07626343 -202.74331665]
[416.62643433 -213.40605164]
[427.11987305 -224.12463379]
[426.37536621 -234.91711426]
[431.56323242 -244.15983582]
[440.77542114 -248.94351196]
[450.88436890 -247.91436768]
[461.60296631 -258.40780640]
[472.32153320 -268.90124512]
[483.04010010 -279.39468384]
[479.14492798 -294.25143433]
[483.21548462 -309.06109619]
[494.15676880 -319.83993530]
[509.02566528 -323.68853760]
[523.82250977 -319.57159424]
[534.56701660 -308.59655762]
[538.36895752 -293.71566772]
[534.20562744 -278.93179321]
[523.19702148 -268.22177124]
[508.30426025 -264.46646118]
[493.53353882 -268.67608643]
[482.81497192 -258.18267822]
[472.09637451 -247.68923950]
[461.37780762 -237.19580078]
[457.49728394 -218.22579956]
[437.83843994 -213.63119507]
[427.34500122 -202.91262817]
[424.92257690 -195.96743774]
[416.68286133 -192.13671875]
[406.07626343 -181.53010559]
[395.46966553 -170.92350769]
[384.86306763 -160.31690979]
[374.25643921 -149.71031189]
[373.87606812 -146.24902344]
[371.82833862 -142.79359436]
[368.13104248 -140.11318970]
[363.13931274 -138.94161987]
[352.20040894 -128.67805481]
[341.26153564 -118.41448975]
[330.32263184 -108.15092468]
[319.38375854 -97.88735962]
[319.55334473 -81.04943085]
[307.23397827 -69.07905579]
[289.73147583 -69.75829315]
[278.90216064 -59.37921524]
[268.07281494 -49.00012970]
[257.24346924 -38.62104797]
[246.41412354 -28.24196434]
[235.58477783 -17.86288071]
[224.75543213 -7.48379850]
[220.92063904 6.90868664]
[205.60379028 10.87157154]
[194.77444458 21.25065422]
[192.13217163 28.11520386]
[183.77465820 31.68166924]
[172.83576965 41.94523239]
[161.89688110 52.20879745]
[150.95799255 62.47235870]
[140.01910400 72.73592377]
[129.08021545 82.99948883]
[133.53857422 90.39481354]
[136.07383728 98.95977783]
[136.38159180 108.18417358]
[134.29498291 117.47977448]
[129.80422974 126.21778107]
[139.95111084 137.26498413]
[150.09800720 148.31219482]
[158.16772461 152.48916626]
[160.29319763 159.53089905]
[170.32226562 170.68516541]
[185.30271912 175.77403259]
[188.05862427 190.41145325]
[198.08770752 201.56573486]
[213.63275146 202.56037903]
[223.64474487 214.01525879]
[222.60070801 228.82894897]
[232.62977600 239.98323059]
[242.65884399 251.13749695]
[258.20388794 252.13214111]
[268.21591187 263.58703613]
[267.17187500 278.40072632]
[277.20092773 289.55499268]
[287.23001099 300.70925903]
[297.25906372 311.86352539]
[307.28814697 323.01782227]
[317.31719971 334.17208862]
[332.29766846 339.26095581]
[335.05358887 353.89837646]
[345.08264160 365.05264282]
[360.83465576 369.61404419]
[364.49713135 385.59896851]
[352.30242920 396.56353760]
[336.79541016 391.22830200]
[333.92837524 375.08169556]
[323.89929199 363.92742920]
[309.63619995 359.63641357]
[306.16293335 344.20114136]
[296.13388062 333.04687500]
[286.10479736 321.89260864]
[276.07571411 310.73834229]
[266.04666138 299.58407593]
[256.01757812 288.42977905]
[241.17665100 287.89865112]
[230.84684753 276.72952271]
[231.50457764 261.16656494]
[221.47550964 250.01229858]
[211.44644165 238.85801697]
[196.60549927 238.32688904]
[186.27569580 227.15774536]
[186.93342590 211.59480286]
[176.90435791 200.44052124]
[162.64125061 196.14949036]
[159.16798401 180.71423340]
[149.13891602 169.55996704]
[139.05079651 158.45907593]
[128.90391541 147.41188049]
[118.75701904 136.36466980]
[104.39141846 140.68084717]
[102.01345825 155.49114990]
[99.63549805 170.30146790]
[101.36063385 179.22286987]
[97.15290070 185.25599670]
[94.61788940 200.04023743]
[92.08287811 214.82447815]
[89.54786682 229.60871887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[17 295]
[18 294]
[19 293]
[20 292]
[21 290]
[22 289]
[23 288]
[26 84]
[27 83]
[28 82]
[29 81]
[30 80]
[31 79]
[32 78]
[33 77]
[34 76]
[35 74]
[36 73]
[37 72]
[38 71]
[42 67]
[43 66]
[45 64]
[46 63]
[48 61]
[49 60]
[85 141]
[86 140]
[87 138]
[88 137]
[89 136]
[90 135]
[92 134]
[93 133]
[96 130]
[97 129]
[98 127]
[99 126]
[100 125]
[101 124]
[104 121]
[105 120]
[106 119]
[107 118]
[109 116]
[110 115]
[143 230]
[144 229]
[145 228]
[146 227]
[147 226]
[148 225]
[149 223]
[150 222]
[152 220]
[153 219]
[154 218]
[155 217]
[156 216]
[157 215]
[158 214]
[162 211]
[163 210]
[164 209]
[165 208]
[166 207]
[167 203]
[168 202]
[169 201]
[170 200]
[171 199]
[172 197]
[173 196]
[177 194]
[178 193]
[179 192]
[180 191]
[235 287]
[236 286]
[237 285]
[239 284]
[240 283]
[242 281]
[243 280]
[246 277]
[247 276]
[248 275]
[251 272]
[252 271]
[253 270]
[254 269]
[255 268]
[256 267]
[258 265]
[259 264]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
