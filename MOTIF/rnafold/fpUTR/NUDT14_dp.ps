%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NUDT14)
} def

/sequence { (\
GGAGCAUGCUCAGAGCCGCGGUCACGCGCCCGCCCGAAGGCUCCUGUCGGGACAGGGCGCCGCCCCGUGUCGGCCCCCGCAGAGCUCGCGGCCCCCGCCUGUCCGGGCGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.004460155 ubox
1 87 0.055256335 ubox
1 114 0.016039410 ubox
2 11 0.049531122 ubox
2 86 0.024205074 ubox
2 87 0.995826805 ubox
3 10 0.049643487 ubox
3 86 0.997949614 ubox
4 9 0.049255428 ubox
4 85 0.998492326 ubox
5 84 0.997263891 ubox
7 81 0.990819093 ubox
8 16 0.041544432 ubox
8 19 0.003438654 ubox
8 74 0.007481264 ubox
8 80 0.996055213 ubox
8 85 0.013820874 ubox
9 15 0.041716814 ubox
9 18 0.003449518 ubox
9 73 0.007603041 ubox
9 79 0.994621925 ubox
9 82 0.015520637 ubox
9 84 0.014039230 ubox
10 14 0.037902553 ubox
10 72 0.006610017 ubox
10 73 0.046867874 ubox
10 81 0.014971655 ubox
10 83 0.014732657 ubox
11 46 0.009800872 ubox
11 72 0.046968055 ubox
11 82 0.014707452 ubox
12 45 0.014303272 ubox
13 43 0.054566989 ubox
13 44 0.010419000 ubox
13 71 0.093411361 ubox
13 87 0.051945212 ubox
14 42 0.055694676 ubox
14 70 0.091395286 ubox
14 86 0.052013038 ubox
15 29 0.020437692 ubox
15 41 0.055736277 ubox
15 68 0.004744983 ubox
15 70 0.027838587 ubox
15 74 0.987184934 ubox
15 80 0.005767355 ubox
15 85 0.052028105 ubox
16 28 0.014496666 ubox
16 40 0.055735722 ubox
16 67 0.003853560 ubox
16 69 0.030696835 ubox
16 73 0.988589966 ubox
16 79 0.005673252 ubox
16 84 0.051983546 ubox
17 28 0.022792300 ubox
17 39 0.055661946 ubox
17 67 0.081330866 ubox
17 69 0.197707051 ubox
17 72 0.973059789 ubox
18 27 0.030232524 ubox
18 29 0.005885444 ubox
18 33 0.047405553 ubox
18 63 0.012837921 ubox
18 66 0.084309094 ubox
18 68 0.574308739 ubox
18 70 0.061577083 ubox
18 71 0.804947450 ubox
18 80 0.047051495 ubox
19 26 0.030300215 ubox
19 28 0.005896446 ubox
19 32 0.047445445 ubox
19 36 0.028052020 ubox
19 62 0.013952953 ubox
19 67 0.942789889 ubox
19 69 0.285870402 ubox
19 72 0.005573848 ubox
19 79 0.047073562 ubox
20 25 0.031170439 ubox
20 27 0.005877725 ubox
20 30 0.007042122 ubox
20 31 0.046967348 ubox
20 34 0.003891150 ubox
20 35 0.028393331 ubox
20 61 0.013961737 ubox
20 64 0.268085305 ubox
20 65 0.084562400 ubox
20 66 0.948862896 ubox
20 68 0.108142994 ubox
20 71 0.012185439 ubox
20 75 0.003340751 ubox
20 78 0.046926954 ubox
21 29 0.009746534 ubox
21 30 0.046431372 ubox
21 33 0.004224640 ubox
21 34 0.028323845 ubox
21 60 0.010507146 ubox
21 63 0.272382677 ubox
21 64 0.090338867 ubox
21 65 0.946364487 ubox
21 68 0.008947878 ubox
21 70 0.018839744 ubox
21 74 0.003545433 ubox
21 76 0.003208127 ubox
21 77 0.046610571 ubox
22 28 0.011541204 ubox
22 32 0.004296809 ubox
22 59 0.006148074 ubox
22 62 0.273342770 ubox
22 67 0.004088517 ubox
22 73 0.003835768 ubox
23 69 0.034160350 ubox
23 72 0.003690093 ubox
24 68 0.034401107 ubox
24 70 0.003797111 ubox
25 32 0.015700614 ubox
25 62 0.329161166 ubox
25 67 0.034350839 ubox
25 69 0.003805232 ubox
26 31 0.014998776 ubox
26 33 0.022441121 ubox
26 60 0.968476257 ubox
26 61 0.234842430 ubox
26 63 0.004937088 ubox
26 66 0.013974684 ubox
27 32 0.022421563 ubox
27 59 0.997874116 ubox
27 62 0.004723769 ubox
28 58 0.998018537 ubox
29 51 0.003201485 ubox
29 57 0.998032213 ubox
30 50 0.003239763 ubox
30 55 0.003968885 ubox
30 56 0.998019761 ubox
31 49 0.003238881 ubox
31 55 0.996034359 ubox
32 41 0.043176624 ubox
33 40 0.043224352 ubox
33 51 0.994349879 ubox
34 39 0.043073085 ubox
34 50 0.997105702 ubox
34 51 0.024803060 ubox
35 49 0.997108302 ubox
35 50 0.024059124 ubox
36 43 0.004139842 ubox
36 48 0.993270013 ubox
37 42 0.004420902 ubox
37 47 0.927990173 ubox
38 45 0.712178750 ubox
39 44 0.718225993 ubox
39 45 0.591910222 ubox
39 48 0.085714128 ubox
40 44 0.596780547 ubox
40 47 0.142313882 ubox
41 46 0.176998102 ubox
42 51 0.014040289 ubox
42 52 0.035057120 ubox
43 50 0.017010569 ubox
43 51 0.037879974 ubox
44 49 0.017046741 ubox
44 50 0.037879379 ubox
44 51 0.004090036 ubox
44 55 0.004893245 ubox
44 82 0.014675873 ubox
45 49 0.034125261 ubox
45 50 0.004039752 ubox
45 54 0.007374770 ubox
45 81 0.014847569 ubox
46 53 0.007716921 ubox
46 74 0.053183603 ubox
46 80 0.014850406 ubox
47 52 0.007143062 ubox
47 73 0.053640198 ubox
47 79 0.004813504 ubox
48 72 0.054074167 ubox
48 79 0.014041662 ubox
49 71 0.054094437 ubox
49 77 0.003398652 ubox
49 78 0.014594360 ubox
50 70 0.053636823 ubox
50 76 0.003420420 ubox
50 77 0.014553269 ubox
51 71 0.005429882 ubox
51 75 0.003167488 ubox
51 76 0.014197255 ubox
52 68 0.054173167 ubox
52 70 0.006785289 ubox
53 67 0.054124927 ubox
53 69 0.006814939 ubox
54 68 0.006367826 ubox
55 65 0.054475420 ubox
55 66 0.004645083 ubox
55 75 0.011170377 ubox
55 77 0.015458621 ubox
55 78 0.021405715 ubox
56 64 0.054525689 ubox
56 65 0.004381787 ubox
56 71 0.007618131 ubox
56 74 0.011178038 ubox
56 76 0.015693166 ubox
56 77 0.021505237 ubox
57 63 0.054545954 ubox
57 64 0.004072290 ubox
57 70 0.007648990 ubox
57 75 0.015761548 ubox
57 76 0.021474559 ubox
58 62 0.054171261 ubox
58 69 0.007662610 ubox
58 72 0.011269121 ubox
59 68 0.007701599 ubox
59 71 0.011476305 ubox
59 74 0.029181919 ubox
60 67 0.007626913 ubox
60 69 0.003294150 ubox
60 73 0.029247955 ubox
61 67 0.007594286 ubox
61 69 0.014588242 ubox
61 72 0.029333487 ubox
62 66 0.007535511 ubox
62 68 0.014929630 ubox
62 70 0.004444598 ubox
62 71 0.028889083 ubox
62 74 0.044908169 ubox
63 67 0.014933755 ubox
63 69 0.018375378 ubox
63 73 0.044864955 ubox
64 72 0.044665291 ubox
64 73 0.005094578 ubox
65 72 0.006078413 ubox
65 73 0.012242553 ubox
66 72 0.012503934 ubox
67 71 0.012318166 ubox
68 81 0.011638372 ubox
69 80 0.014980769 ubox
70 79 0.003479327 ubox
70 83 0.031720650 ubox
71 79 0.030120996 ubox
71 82 0.033630617 ubox
71 112 0.004189278 ubox
72 78 0.067259600 ubox
72 111 0.004685515 ubox
73 77 0.066233533 ubox
73 80 0.038239186 ubox
73 110 0.004686466 ubox
74 79 0.038257517 ubox
74 109 0.004682725 ubox
76 107 0.004329504 ubox
77 106 0.004336853 ubox
78 105 0.004339639 ubox
79 104 0.004060961 ubox
88 98 0.004641621 ubox
88 113 0.997899173 ubox
89 97 0.004647266 ubox
89 112 0.999884748 ubox
90 96 0.004661636 ubox
90 111 0.999960750 ubox
90 114 0.003306864 ubox
91 95 0.004586452 ubox
91 110 0.999976694 ubox
91 113 0.003331026 ubox
92 109 0.998914248 ubox
92 112 0.003325432 ubox
93 107 0.114835854 ubox
94 106 0.105484303 ubox
94 107 0.991574526 ubox
95 105 0.095087063 ubox
95 106 0.993246730 ubox
95 107 0.004022147 ubox
96 105 0.994258072 ubox
96 106 0.004026115 ubox
96 109 0.019588421 ubox
97 104 0.965191304 ubox
97 108 0.047660492 ubox
98 107 0.047674176 ubox
99 106 0.047654298 ubox
100 105 0.044580954 ubox
2 87 0.9500000 lbox
3 86 0.9500000 lbox
4 85 0.9500000 lbox
5 84 0.9500000 lbox
7 81 0.9500000 lbox
8 80 0.9500000 lbox
9 79 0.9500000 lbox
15 74 0.9500000 lbox
16 73 0.9500000 lbox
17 72 0.9500000 lbox
18 71 0.9500000 lbox
19 67 0.9500000 lbox
20 66 0.9500000 lbox
21 65 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 57 0.9500000 lbox
30 56 0.9500000 lbox
31 55 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
88 113 0.9500000 lbox
89 112 0.9500000 lbox
90 111 0.9500000 lbox
91 110 0.9500000 lbox
92 109 0.9500000 lbox
94 107 0.9500000 lbox
95 106 0.9500000 lbox
96 105 0.9500000 lbox
97 104 0.9500000 lbox
showpage
end
%%EOF
