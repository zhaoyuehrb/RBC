%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCACGCCGGGCAAGAGGAAGACCUCCAUCAGCUCGCCGCGCAGCGCGGCUGUAUUUGCGGCCUGUGCGAGUAGGCGCUUGGGCACUCAGUCUCCCUGGCGAGCGACGGGCAGAAAUCUCGAACCAGUGGAGCGCACUCGUAACCUGGAUCCCAGAAGGUCGCGAAGGCAGUACCGUUUCCUCAGCGGCGGACUGCUGCAGUAAGA\
) } def
/len { sequence length } bind def

/coor [
[31.95534515 193.33354187]
[25.04149437 191.68644714]
[14.63604546 202.49044800]
[4.23059654 213.29446411]
[-6.17485285 224.09846497]
[-10.18898582 242.06904602]
[-27.22736359 246.26873779]
[-37.46924210 257.22793579]
[-47.71112061 268.18713379]
[-57.78711700 279.29901123]
[-67.69494629 290.56112671]
[-77.60278320 301.82321167]
[-87.51062012 313.08532715]
[-97.41844940 324.34741211]
[-95.07328796 344.30041504]
[-107.95751953 359.31524658]
[-127.42510986 360.00540161]
[-136.81518555 371.70269775]
[-146.20526123 383.39996338]
[-155.59533691 395.09725952]
[-157.55557251 411.37881470]
[-172.74020386 417.57229614]
[-185.52857971 407.30633545]
[-182.76510620 391.14172363]
[-167.29261780 385.70718384]
[-157.90254211 374.00988770]
[-148.51246643 362.31262207]
[-139.12239075 350.61532593]
[-142.94708252 341.08654785]
[-142.46679688 330.74923706]
[-137.70124817 321.47244263]
[-129.45103455 314.96136475]
[-119.16381836 312.44390869]
[-108.68054962 314.43957520]
[-98.77271271 303.17749023]
[-88.86488342 291.91537476]
[-78.95704651 280.65328979]
[-69.04921722 269.39120483]
[-68.45491791 264.65100098]
[-64.87556458 260.23428345]
[-58.67031479 257.94525146]
[-48.42843628 246.98605347]
[-38.18655777 236.02685547]
[-38.28181076 223.92970276]
[-29.83746338 214.71549988]
[-16.97886276 213.69302368]
[-6.57341337 202.88900757]
[3.83203578 192.08500671]
[14.23748493 181.28099060]
[17.25585175 159.03363037]
[39.59878922 152.80441284]
[49.16362381 141.24958801]
[58.72845459 129.69477844]
[68.29328918 118.13994598]
[77.85812378 106.58512115]
[84.38501740 90.96684265]
[97.00563049 87.37139130]
[100.57852173 72.80312347]
[104.15141296 58.23485184]
[107.72431183 43.66658401]
[111.29720306 29.09831619]
[114.87009430 14.53004837]
[118.44298553 -0.03821970]
[122.01587677 -14.60648823]
[125.58876801 -29.17475700]
[129.16166687 -43.74302292]
[120.68538666 -64.09116364]
[134.56056213 -80.29421234]
[135.23675537 -95.27896118]
[135.91294861 -110.26371002]
[136.58914185 -125.24846649]
[137.26531982 -140.23321533]
[137.94151306 -155.21797180]
[138.61770630 -170.20271301]
[135.91641235 -176.23991394]
[136.57221985 -181.88696289]
[139.54615784 -185.62573242]
[140.67245483 -200.58338928]
[141.79876709 -215.54103088]
[142.92506409 -230.49868774]
[144.05137634 -245.45634460]
[144.72756958 -260.44110107]
[144.95303345 -275.43939209]
[145.17849731 -290.43771362]
[130.18777466 -295.48513794]
[117.50599670 -304.90615845]
[108.36727905 -317.76904297]
[103.65632629 -332.80780029]
[103.82278442 -348.54684448]
[108.83835602 -363.44573975]
[118.20073700 -376.05007935]
[130.98390198 -385.13323975]
[145.92965698 -389.81600952]
[145.92965698 -404.81600952]
[145.92965698 -419.81600952]
[138.19235229 -433.61618042]
[145.92965698 -446.34344482]
[145.92965698 -461.34344482]
[145.92965698 -476.34344482]
[145.92965698 -491.34344482]
[133.29739380 -500.35485840]
[128.40640259 -515.08093262]
[133.13735962 -529.85925293]
[145.67112732 -539.00714111]
[161.18820190 -539.00714111]
[173.72195435 -529.85925293]
[178.45291138 -515.08093262]
[173.56192017 -500.35485840]
[160.92965698 -491.34344482]
[160.92965698 -476.34344482]
[160.92965698 -461.34344482]
[160.92965698 -446.34344482]
[168.66696167 -433.61618042]
[160.92965698 -419.81600952]
[160.92965698 -404.81600952]
[160.92965698 -389.81600952]
[174.59172058 -385.74710083]
[186.56629944 -377.98364258]
[195.87745667 -367.14764404]
[201.76333618 -354.11196899]
[203.73843384 -339.93008423]
[201.63369751 -325.75073242]
[195.61093140 -312.72512817]
[186.15039062 -301.91329956]
[174.01252747 -294.19793701]
[160.17680359 -290.21224976]
[159.95133972 -275.21392822]
[159.72586060 -260.21563721]
[161.58062744 -258.11175537]
[162.71308899 -255.14585876]
[162.79055786 -251.58959961]
[161.58477783 -247.83004761]
[159.00903320 -244.33004761]
[157.88272095 -229.37239075]
[156.75642395 -214.41473389]
[155.63011169 -199.45707703]
[154.50381470 -184.49942017]
[153.60246277 -169.52653503]
[152.92626953 -154.54177856]
[152.25007629 -139.55702209]
[151.57388306 -124.57227325]
[150.89770508 -109.58752441]
[150.22151184 -94.60277557]
[149.54531860 -79.61801910]
[153.07910156 -77.54043579]
[156.11579895 -74.78682709]
[158.52819824 -71.47257233]
[173.37551880 -73.60729218]
[188.22283936 -75.74201965]
[203.07015991 -77.87673950]
[217.88758850 -86.11568451]
[229.90641785 -74.15808868]
[221.74327087 -59.29876709]
[205.20487976 -63.02941895]
[190.35755920 -60.89469528]
[175.51023865 -58.75997543]
[160.66291809 -56.62525177]
[154.92741394 -45.89169312]
[143.72993469 -40.17013168]
[140.15704346 -25.60186386]
[136.58415222 -11.03359509]
[133.01126099 3.53467274]
[129.43835449 18.10294151]
[125.86547089 32.67120743]
[122.29257965 47.23947906]
[118.71968079 61.80774689]
[115.14678955 76.37601471]
[111.57389832 90.94428253]
[115.36536407 105.45719910]
[125.60723877 116.41639709]
[135.84912109 127.37558746]
[146.09100342 138.33477783]
[156.33288574 149.29397583]
[166.57475281 160.25317383]
[174.72196960 164.38716125]
[176.88668823 171.45491028]
[186.96267700 182.56681824]
[197.03868103 193.67871094]
[207.11466980 204.79061890]
[217.19067383 215.90251160]
[232.60182190 214.09260559]
[246.11705017 221.71615601]
[252.53944397 235.84175110]
[249.39947510 251.03781128]
[237.90452576 261.46115112]
[222.47463989 263.10375977]
[209.04292297 255.33404541]
[202.77413940 241.13961792]
[206.07876587 225.97850037]
[196.00277710 214.86660767]
[185.92677307 203.75469971]
[175.85078430 192.64280701]
[165.77479553 181.53089905]
[155.61557007 170.49504089]
[145.37368774 159.53585815]
[135.13180542 148.57666016]
[124.88993073 137.61746216]
[114.64804840 126.65827179]
[104.40617371 115.69908142]
[89.41294861 116.14995575]
[79.84811401 127.70478058]
[70.28327942 139.25959778]
[60.71844482 150.81442261]
[51.15361023 162.36924744]
[53.51611710 169.50411987]
[53.26069641 176.94747925]
[50.46618652 183.77758789]
[45.52293777 189.16493225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 49]
[3 48]
[4 47]
[5 46]
[7 43]
[8 42]
[9 41]
[10 38]
[11 37]
[12 36]
[13 35]
[14 34]
[17 28]
[18 27]
[19 26]
[20 25]
[51 204]
[52 203]
[53 202]
[54 201]
[55 200]
[57 168]
[58 167]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[65 160]
[66 159]
[68 144]
[69 143]
[70 142]
[71 141]
[72 140]
[73 139]
[74 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 128]
[83 127]
[84 126]
[93 116]
[94 115]
[95 114]
[97 112]
[98 111]
[99 110]
[100 109]
[147 157]
[148 156]
[149 155]
[150 154]
[169 199]
[170 198]
[171 197]
[172 196]
[173 195]
[174 194]
[176 193]
[177 192]
[178 191]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
