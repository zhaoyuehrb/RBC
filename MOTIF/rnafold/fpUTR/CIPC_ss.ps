%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGAGGCUGUGGGGAUAGCGAGACACCCAGCGACGACGAGGUUGUCAUGGUGCCGCGGGGCCGUGCUCGCGCAUGCGCCACCUGACCCACAGGCCGGUCGUGGAGCUGCGACCCCGGCCCUAGGGCAGUCCAGAUGAAAAGAGUACCAAUGAAUCUGCCUCCAGCUGAAUAAACC\
) } def
/len { sequence length } bind def

/coor [
[114.01420593 285.67181396]
[126.48185730 276.79397583]
[124.39426422 261.93994141]
[122.30667114 247.08592224]
[112.87337494 235.55932617]
[118.61476135 220.81663513]
[116.52716064 205.96261597]
[114.43956757 191.10859680]
[112.35197449 176.25457764]
[110.26437378 161.40055847]
[108.17678070 146.54653931]
[95.51787567 145.44004822]
[84.04459381 141.07153320]
[74.54766846 133.98963928]
[63.57735825 144.21961975]
[52.60705185 154.44960022]
[41.63674927 164.67956543]
[46.22114944 179.23793030]
[44.02641678 194.34243774]
[35.48831177 206.99406433]
[22.30208778 214.68081665]
[7.08587646 215.87649536]
[-7.13913298 210.34370422]
[-17.54855347 199.18095398]
[-22.07558823 184.60466003]
[-19.82139015 169.50891113]
[-11.23353291 156.89100647]
[1.98285925 149.25624084]
[17.20366096 148.12048340]
[31.40677261 153.70925903]
[42.37707901 143.47929382]
[53.34738541 133.24931335]
[64.31768799 123.01934052]
[62.03438187 119.01918030]
[60.19776535 114.79524994]
[58.82944489 110.39723969]
[43.86598587 111.44358826]
[28.90252304 112.48993683]
[13.93906307 113.53627777]
[-1.02439773 114.58262634]
[-15.98785877 115.62897491]
[-31.36663628 122.76546478]
[-42.48150253 109.96327972]
[-33.25652695 95.73878479]
[-17.03420639 100.66551208]
[-2.07074475 99.61917114]
[12.89271641 98.57282257]
[27.85617638 97.52647400]
[42.81963730 96.48012543]
[57.78310013 95.43377686]
[60.35725403 84.78257751]
[65.57132721 75.14474487]
[55.15145493 64.35464478]
[44.73157883 53.56454849]
[34.31170273 42.77445221]
[23.89182663 31.98435402]
[13.47195244 21.19425774]
[2.77319527 10.68061829]
[-8.19711018 0.45064294]
[-19.16741562 -9.77933216]
[-30.13772202 -20.00930786]
[-41.10802841 -30.23928261]
[-52.07833099 -40.46925735]
[-67.86225891 -39.66728592]
[-79.53409576 -50.32297897]
[-80.16914368 -66.11450195]
[-69.39064789 -77.67302704]
[-53.59329224 -78.14109039]
[-42.14936829 -67.24098969]
[-41.84835815 -51.43956375]
[-30.87805176 -41.20958710]
[-19.90774536 -30.97961426]
[-8.93744087 -20.74963760]
[2.03286505 -10.51966286]
[13.00317097 -0.28968719]
[16.54792404 -0.05690789]
[20.15272713 1.92177415]
[22.99026108 5.65407133]
[24.26204872 10.77438164]
[34.68192291 21.56447792]
[45.10179901 32.35457611]
[55.52167511 43.14467239]
[65.94155121 53.93476868]
[76.36142731 64.72486877]
[97.77764893 57.59506607]
[119.82182312 62.44720459]
[129.05674744 50.62704086]
[138.29167175 38.80688095]
[141.12069702 30.09142494]
[147.79235840 26.86287498]
[157.23216248 15.20568562]
[166.67196655 3.54849648]
[162.81205750 -11.36482716]
[168.40829468 -25.52588463]
[181.11964417 -33.58103180]
[195.95915222 -32.61815643]
[205.39895630 -44.27534866]
[214.83876038 -55.93253708]
[224.27856445 -67.58972931]
[233.51348877 -79.40988922]
[242.54071045 -91.38941956]
[251.56794739 -103.36894989]
[260.59515381 -115.34848785]
[269.62237549 -127.32801819]
[278.64962769 -139.30755615]
[276.20217896 -154.92118835]
[285.57943726 -167.64289856]
[301.21807861 -169.92514038]
[313.83993530 -160.41387939]
[315.95672607 -144.75198364]
[306.31253052 -132.23138428]
[290.62915039 -130.28031921]
[281.60192871 -118.30078888]
[272.57470703 -106.32125854]
[263.54748535 -94.34172821]
[254.52024841 -82.36219788]
[245.49302673 -70.38265991]
[245.26460266 -65.58673096]
[242.00230408 -60.89027023]
[235.93576050 -58.14992142]
[226.49595642 -46.49272919]
[217.05613708 -34.83554077]
[207.61633301 -23.17835236]
[211.64347839 -8.86331940]
[206.40719604 5.24502230]
[193.71911621 13.66321564]
[178.32916260 12.98830223]
[168.88935852 24.64549255]
[159.44955444 36.30268097]
[150.11183167 48.04180527]
[140.87690735 59.86196518]
[131.64198303 71.68212891]
[139.76895142 81.97735596]
[144.53329468 94.58587646]
[145.28663635 108.40634918]
[141.74162292 122.16024780]
[155.22352600 128.73580933]
[168.70544434 135.31138611]
[182.18734741 141.88694763]
[192.86947632 131.15516663]
[206.45851135 124.47559357]
[221.48042297 122.57275391]
[236.30575562 125.65307617]
[249.32635498 133.38241577]
[259.12985229 144.92234802]
[264.65283203 159.02111816]
[265.29620361 174.14939880]
[260.99020386 188.66618347]
[252.20185852 200.99679565]
[239.88452148 209.80369568]
[225.37425232 214.13160706]
[210.24501038 213.51103210]
[196.13792419 208.00932312]
[184.58322144 198.22323608]
[176.83425903 185.21429443]
[173.73159790 170.39363098]
[175.61178589 155.36886597]
[162.12988281 148.79328918]
[148.64796448 142.21772766]
[135.16606140 135.64216614]
[123.03079987 144.45893860]
[125.11839294 159.31295776]
[127.20599365 174.16697693]
[129.29359436 189.02099609]
[131.38117981 203.87501526]
[133.46878052 218.72904968]
[143.05139160 231.31808472]
[137.16069031 244.99832153]
[139.24829102 259.85235596]
[141.33587646 274.70635986]
[155.76762390 279.80374146]
[166.16893005 291.03192139]
[170.14964294 305.81069946]
[166.79501343 320.74404907]
[156.87594604 332.40039062]
[142.67173767 338.10119629]
[127.44642639 336.53643799]
[114.69866943 328.06570435]
[107.35781860 314.63549805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 170]
[3 169]
[4 168]
[6 166]
[7 165]
[8 164]
[9 163]
[10 162]
[11 161]
[14 33]
[15 32]
[16 31]
[17 30]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[41 45]
[52 84]
[53 83]
[54 82]
[55 81]
[56 80]
[57 79]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[86 132]
[87 131]
[88 130]
[90 129]
[91 128]
[92 127]
[96 123]
[97 122]
[98 121]
[99 120]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[105 112]
[136 160]
[137 159]
[138 158]
[139 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
