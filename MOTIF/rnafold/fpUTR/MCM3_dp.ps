%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MCM3)
} def

/sequence { (\
GAAGAAGAAGAAGCUUUUGAUUGGACAGUCGCUAGUCCGACCUCAGAGAACUCAGCCAAUCAUAAUGCUUAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.006218352 ubox
1 53 0.003289016 ubox
1 61 0.010673735 ubox
1 70 0.003868389 ubox
2 16 0.007230808 ubox
2 60 0.010398908 ubox
2 70 0.015498316 ubox
3 15 0.007615220 ubox
3 18 0.022799701 ubox
3 69 0.015816502 ubox
3 70 0.004552935 ubox
4 14 0.007699974 ubox
4 17 0.032251691 ubox
4 53 0.003199899 ubox
4 61 0.006413729 ubox
4 68 0.015719872 ubox
4 70 0.005733197 ubox
5 16 0.033418533 ubox
5 60 0.006265328 ubox
5 69 0.003691661 ubox
5 70 0.009403407 ubox
6 15 0.033933615 ubox
6 17 0.003281556 ubox
6 18 0.008487464 ubox
6 69 0.007931423 ubox
6 70 0.007927109 ubox
7 14 0.033988390 ubox
7 16 0.003461654 ubox
7 17 0.011961967 ubox
7 53 0.011946424 ubox
7 61 0.012100304 ubox
7 68 0.007214926 ubox
7 69 0.003568648 ubox
7 70 0.012838477 ubox
8 15 0.003311704 ubox
8 16 0.012388110 ubox
8 52 0.010320300 ubox
8 60 0.011887280 ubox
8 69 0.008214455 ubox
8 70 0.027445611 ubox
9 15 0.012542423 ubox
9 52 0.008578129 ubox
9 69 0.024327582 ubox
9 70 0.021917060 ubox
10 14 0.012331863 ubox
10 51 0.010446186 ubox
10 53 0.031614710 ubox
10 61 0.021053536 ubox
10 68 0.022800269 ubox
10 69 0.009497176 ubox
10 70 0.077396182 ubox
11 52 0.029184130 ubox
11 60 0.020935949 ubox
11 69 0.056636171 ubox
11 70 0.931937244 ubox
12 52 0.015883655 ubox
12 69 0.988227451 ubox
12 70 0.019215326 ubox
13 51 0.019460760 ubox
13 56 0.030287017 ubox
13 68 0.997106658 ubox
13 69 0.003334864 ubox
14 48 0.021489240 ubox
14 55 0.030321259 ubox
14 67 0.996542078 ubox
15 47 0.018917202 ubox
15 48 0.046020791 ubox
15 49 0.008442247 ubox
15 50 0.003755147 ubox
15 54 0.027546490 ubox
15 65 0.643463754 ubox
16 46 0.015620290 ubox
16 47 0.059032398 ubox
16 48 0.007497344 ubox
16 49 0.003860563 ubox
16 64 0.578082779 ubox
16 65 0.412891225 ubox
17 45 0.011277283 ubox
17 46 0.060789792 ubox
17 47 0.006550987 ubox
17 48 0.003365866 ubox
17 64 0.410276377 ubox
17 65 0.032595552 ubox
18 45 0.062703880 ubox
18 46 0.004439528 ubox
18 62 0.979296496 ubox
18 64 0.016443436 ubox
19 44 0.064074568 ubox
19 61 0.997815906 ubox
19 63 0.003883237 ubox
20 43 0.062039281 ubox
20 60 0.997611322 ubox
21 40 0.061992691 ubox
21 59 0.996852391 ubox
22 39 0.067267284 ubox
22 58 0.997089980 ubox
23 38 0.071218953 ubox
23 44 0.003340820 ubox
23 57 0.997423220 ubox
24 30 0.007900069 ubox
24 37 0.072443299 ubox
24 43 0.003790576 ubox
24 44 0.031167672 ubox
24 53 0.010872422 ubox
24 56 0.994923851 ubox
25 29 0.006924910 ubox
25 36 0.073669276 ubox
25 43 0.042754663 ubox
25 52 0.016872436 ubox
26 35 0.073780706 ubox
27 33 0.030822275 ubox
27 43 0.105848784 ubox
27 52 0.577652996 ubox
28 32 0.030356083 ubox
28 41 0.609126994 ubox
28 42 0.079049611 ubox
28 51 0.662960012 ubox
29 40 0.616688490 ubox
29 47 0.051709278 ubox
29 49 0.609460018 ubox
29 50 0.472509897 ubox
30 39 0.617457415 ubox
30 46 0.056125997 ubox
30 48 0.762077834 ubox
31 38 0.598801905 ubox
31 56 0.021022444 ubox
32 46 0.750592038 ubox
32 48 0.078253884 ubox
32 55 0.027654466 ubox
33 45 0.745540434 ubox
33 47 0.075253408 ubox
33 54 0.027434939 ubox
34 43 0.712873986 ubox
34 52 0.028931793 ubox
35 41 0.181942156 ubox
35 42 0.711724318 ubox
35 51 0.029263435 ubox
36 40 0.173838551 ubox
36 47 0.053611572 ubox
36 49 0.018666275 ubox
36 50 0.024146993 ubox
37 46 0.055400496 ubox
37 48 0.023494742 ubox
39 53 0.015155034 ubox
40 52 0.014965295 ubox
42 48 0.141438825 ubox
42 55 0.267137582 ubox
43 47 0.127837446 ubox
43 49 0.110357179 ubox
43 54 0.264616496 ubox
44 48 0.115021517 ubox
45 52 0.283939837 ubox
46 51 0.289321423 ubox
46 53 0.345229530 ubox
46 61 0.003356372 ubox
47 52 0.323402158 ubox
47 60 0.003327557 ubox
48 61 0.006855838 ubox
49 60 0.006553176 ubox
54 69 0.032632379 ubox
55 68 0.034943267 ubox
56 67 0.033794239 ubox
57 67 0.009723943 ubox
58 66 0.012208367 ubox
59 66 0.008804251 ubox
60 65 0.009033981 ubox
61 67 0.004142754 ubox
62 66 0.003576909 ubox
62 72 0.006959393 ubox
63 71 0.008088942 ubox
64 70 0.008172595 ubox
65 69 0.006256552 ubox
11 70 0.9500000 lbox
12 69 0.9500000 lbox
13 68 0.9500000 lbox
14 67 0.9500000 lbox
18 62 0.9500000 lbox
19 61 0.9500000 lbox
20 60 0.9500000 lbox
21 59 0.9500000 lbox
22 58 0.9500000 lbox
23 57 0.9500000 lbox
24 56 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
showpage
end
%%EOF
