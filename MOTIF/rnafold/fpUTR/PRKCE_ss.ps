%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACCCGGCGAGGAAAUACAUGCACUGGCUGAGAAUCGCCCGCGCCAGGGCGCAACGCCACAAGGUGUAGGGAGUGUGCGGGGUGGGGCGAAAGGGGACCCAAGAGUCCCUGUGGCUCGGAGUGCCGGGCCGUCGGUUCUUCAUUCCUGCCCUCGGGGCAGACGGAGUGACCCCGGCCCCCACUCCCCGCCCCGACC\
) } def
/len { sequence length } bind def

/coor [
[128.65820312 138.09452820]
[121.11268616 145.16949463]
[111.84125519 150.68475342]
[101.18125916 154.22621155]
[89.56757355 155.45581055]
[77.51490784 154.13406372]
[69.20610809 166.62261963]
[60.89730453 179.11116028]
[52.58850479 191.59971619]
[51.38615417 207.37516785]
[37.89442062 213.68565369]
[29.58561897 226.17420959]
[37.41077042 239.27877808]
[38.76657104 254.48156738]
[33.38383484 268.76403809]
[22.33130074 279.29037476]
[7.80345964 283.97061157]
[-7.31517410 281.87545776]
[-20.02278519 273.42092896]
[-27.79627037 260.28564453]
[-29.09219360 245.07763672]
[-23.65325356 230.81648254]
[-12.55935287 220.33372498]
[1.98680532 215.71073914]
[17.09707069 217.86540222]
[25.40587234 205.37686157]
[26.01391983 190.49467468]
[40.09995651 183.29090881]
[48.40875626 170.80236816]
[56.71755600 158.31381226]
[65.02635956 145.82527161]
[60.97155380 139.51586914]
[51.47634888 151.12797546]
[37.49840546 145.68580627]
[38.35480881 130.71028137]
[52.86194229 126.89706421]
[48.80713272 120.58766174]
[33.99555206 122.95767975]
[19.18396759 125.32770538]
[4.37238455 127.69772339]
[-10.43919945 130.06774902]
[-19.50426292 143.01379395]
[-35.08275986 145.67575073]
[-47.93224335 136.47431946]
[-50.42934036 120.86854553]
[-41.09257507 108.11706543]
[-25.46127510 105.78509521]
[-12.80922031 115.25615692]
[2.00236344 112.88613892]
[16.81394577 110.51612091]
[31.62553024 108.14609528]
[46.43711472 105.77607727]
[47.26839828 98.32228851]
[48.93097305 83.41471100]
[49.76226044 75.96092224]
[35.83673859 70.38598633]
[21.91122055 64.81105042]
[7.98570251 59.23611069]
[-5.93981647 53.66117477]
[-22.08620262 56.52932358]
[-32.43479156 43.80773926]
[-26.33984375 28.58329773]
[-10.07131863 26.51759720]
[-0.36487976 39.73565674]
[13.56063938 45.31059265]
[27.48615837 50.88552856]
[41.41167831 56.46046829]
[55.33719635 62.03540421]
[98.74540710 53.44104767]
[125.06951904 76.24937439]
[137.93927002 68.54421234]
[150.80902100 60.83905029]
[156.57217407 53.73809433]
[163.94465637 53.11560059]
[176.93502808 45.61560059]
[189.92541504 38.11560059]
[192.13244629 27.45115280]
[199.69306946 19.92112732]
[209.93577576 17.84495163]
[219.42417908 21.67248154]
[232.64598083 14.58841515]
[245.86778259 7.50434875]
[259.08956909 0.42028272]
[272.31137085 -6.66378355]
[285.53317261 -13.74784946]
[298.75497437 -20.83191490]
[311.97677612 -27.91598129]
[325.19857788 -35.00004959]
[310.25854492 -36.33988571]
[301.17108154 -48.27379990]
[303.85266113 -63.03215790]
[316.55740356 -71.00646973]
[331.01382446 -67.00501251]
[337.80999756 -53.63340759]
[339.47256470 -68.54098511]
[341.13513184 -83.44856262]
[342.79772949 -98.35614014]
[344.46029663 -113.26371765]
[346.12286377 -128.17129517]
[336.06051636 -140.35836792]
[337.64608765 -156.08291626]
[349.93884277 -166.01585388]
[365.64575195 -164.26412964]
[375.44818115 -151.86701965]
[373.53048706 -136.17951965]
[361.03042603 -126.50872040]
[359.36785889 -111.60114288]
[357.70529175 -96.69356537]
[356.04272461 -81.78598785]
[354.38015747 -66.87841034]
[352.71759033 -51.97083282]
[359.53982544 -48.85522079]
[373.18429565 -42.62399673]
[380.00653076 -39.50838470]
[390.18417358 -50.52725983]
[400.36181641 -61.54613495]
[410.53945923 -72.56501007]
[420.71710205 -83.58388519]
[430.89474487 -94.60276031]
[441.07238770 -105.62163544]
[444.15551758 -121.72834778]
[459.73263550 -126.85530853]
[471.77932739 -115.72833252]
[467.90298462 -99.79389954]
[452.09124756 -95.44399261]
[441.91360474 -84.42511749]
[431.73596191 -73.40624237]
[421.55834961 -62.38736725]
[411.38070679 -51.36849213]
[401.20306396 -40.34961700]
[391.02542114 -29.33074188]
[395.70590210 -15.07967567]
[410.43484497 -12.24090672]
[425.16378784 -9.40213776]
[439.89270020 -6.56336927]
[454.62164307 -3.72460079]
[462.99160767 -12.18527031]
[474.29226685 -15.51610851]
[485.67883301 -12.99938965]
[494.34283447 -5.37447643]
[498.20486450 5.37426090]
[512.83630371 8.67891884]
[527.46777344 11.98357677]
[542.09924316 15.28823471]
[556.73065186 18.59289360]
[571.36212158 21.89755058]
[585.99353027 25.20220947]
[600.69952393 28.15773582]
[615.47161865 30.76245880]
[630.24371338 33.36717987]
[645.01586914 35.97190475]
[659.78796387 38.57662582]
[676.43640137 35.37258148]
[684.12396240 50.48342133]
[671.73181152 62.05366135]
[657.18322754 53.34874344]
[642.41113281 50.74401855]
[627.63903809 48.13929749]
[612.86688232 45.53457642]
[598.09478760 42.92985153]
[595.00579834 44.65074539]
[590.92724609 44.95473099]
[586.53704834 43.39195633]
[582.68890381 39.83365631]
[568.05743408 36.52899933]
[553.42602539 33.22433853]
[538.79455566 29.91968155]
[524.16308594 26.61502457]
[509.53167725 23.31036568]
[494.90020752 20.00570679]
[480.04898071 30.69560623]
[461.78503418 27.08401299]
[451.78286743 11.00432968]
[437.05392456 8.16556072]
[422.32501221 5.32679224]
[407.59606934 2.48802376]
[392.86715698 -0.35074487]
[332.28265381 -21.77824783]
[319.06085205 -14.69418144]
[305.83905029 -7.61011505]
[292.61724854 -0.52604908]
[279.39544678 6.55801725]
[266.17364502 13.64208317]
[252.95184326 20.72614861]
[239.73004150 27.81021500]
[226.50823975 34.89428329]
[217.55586243 52.02622223]
[197.42541504 51.10598373]
[184.43502808 58.60598373]
[171.44465637 66.10597992]
[158.51417542 73.70880127]
[145.64442444 81.41396332]
[132.77467346 89.11912537]
[136.48970032 95.86594391]
[138.73748779 103.68788147]
[139.23410034 112.25029755]
[137.77462769 121.14807129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 31]
[7 30]
[8 29]
[9 28]
[11 26]
[12 25]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[70 193]
[71 192]
[72 191]
[74 190]
[75 189]
[76 188]
[80 186]
[81 185]
[82 184]
[83 183]
[84 182]
[85 181]
[86 180]
[87 179]
[88 178]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[114 131]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[120 125]
[132 177]
[133 176]
[134 175]
[135 174]
[136 173]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
