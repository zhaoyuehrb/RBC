%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGUGAUGACCCCAGAGCGUGCGUUCGGUGGCCCAUAGGGGAAGAUGGCGGCUGCUCCUUUGGAGGAGCGGGAUUGAGAGGAUCGGGGUGGGGAGACCAAACAAGAGAGACAUUUCUGGCUCUGAAGGCGAACGCUUCGCUGGCCAUUUAGGAGCUCUGCUCAAAGCCAGACGUAUCCUAGAAGGAAAACAUCACC\
) } def
/len { sequence length } bind def

/coor [
[266.25622559 523.94049072]
[251.26219177 528.38037109]
[236.94285583 522.09625244]
[230.05938721 508.05514526]
[233.86192322 492.88693237]
[246.55503845 483.75357056]
[247.49690247 468.78314209]
[248.43876648 453.81274414]
[249.38061523 438.84234619]
[250.32247925 423.87194824]
[251.26432800 408.90155029]
[254.92770386 397.43893433]
[261.26998901 388.77276611]
[269.18472290 383.43106079]
[277.48785400 381.58145142]
[268.86276245 369.30920410]
[260.23767090 357.03695679]
[251.61260986 344.76470947]
[242.70079041 332.69906616]
[233.50718689 320.84674072]
[224.31358337 308.99441528]
[215.11997986 297.14208984]
[205.92636108 285.28976440]
[196.54772949 273.58331299]
[186.98637390 262.02563477]
[172.91200256 257.15103149]
[170.07713318 241.58587646]
[160.51577759 230.02816772]
[150.95442200 218.47047424]
[141.39305115 206.91278076]
[131.83169556 195.35507202]
[125.13979340 192.20231628]
[122.21264648 183.53991699]
[112.83400726 171.83346558]
[103.45536804 160.12701416]
[94.07672882 148.42054749]
[79.96351624 143.33947754]
[65.27517700 146.38130188]
[50.58683395 149.42311096]
[44.32431030 163.62030029]
[30.89601517 171.39593506]
[15.46540451 169.76013184]
[3.96586251 159.34187317]
[0.81919670 144.14718628]
[7.23536491 130.01876831]
[20.74721909 122.38925934]
[36.15917587 124.19236755]
[47.54502487 134.73475647]
[62.23336792 131.69294739]
[76.92170715 128.65113831]
[77.86170959 121.21028137]
[62.98001862 119.33003998]
[64.86051178 104.44837952]
[79.74170685 106.32855988]
[80.68170929 98.88770294]
[67.21128845 92.28861237]
[53.74087906 85.68952942]
[40.27046585 79.09043884]
[26.80005074 72.49134827]
[13.32963753 65.89226532]
[-0.14077617 59.29317474]
[-13.61118984 52.69408798]
[-29.92665100 54.34870529]
[-39.29653549 40.88998032]
[-32.08190536 26.16309357]
[-15.70455933 25.31780434]
[-7.01210213 39.22367477]
[6.45831156 45.82276154]
[19.92872429 52.42185211]
[33.39913940 59.02093887]
[46.86955261 65.62002563]
[60.33996582 72.21911621]
[73.81037903 78.81819916]
[87.28079224 85.41728973]
[97.11179352 74.08805847]
[88.68054199 61.68185425]
[80.24929810 49.27564240]
[71.81804657 36.86943436]
[56.39200974 32.46296310]
[50.35239410 17.60017014]
[58.33227921 3.68251824]
[74.21017456 1.38643980]
[85.80592346 12.47328949]
[84.22425079 28.43818474]
[92.65550232 40.84439468]
[101.08675385 53.25060272]
[109.51800537 65.65680695]
[116.51279449 62.95072937]
[130.50238037 57.53856659]
[137.49717712 54.83248520]
[135.38365173 39.98213196]
[133.27014160 25.13177681]
[120.48279572 15.84418201]
[118.09065247 0.22197992]
[127.51292419 -12.46645451]
[143.15954590 -14.69329834]
[155.74765015 -5.13740444]
[157.80894470 10.53188419]
[148.12049866 23.01825714]
[150.23400879 37.86861038]
[152.34753418 52.71896744]
[159.77270508 53.77572632]
[161.88623047 38.92537308]
[171.14152527 27.12115479]
[176.73658752 41.03889084]
[174.62306213 55.88924408]
[182.04823303 56.94600296]
[188.22096252 43.27495575]
[194.39367676 29.60390663]
[200.56639099 15.93285656]
[206.73910522 2.26180744]
[204.57281494 -13.99363041]
[217.73059082 -23.78163910]
[232.67681885 -17.03315353]
[234.03611755 -0.69043887]
[220.41015625 8.43452263]
[214.23744202 22.10557175]
[208.06471252 35.77662277]
[201.89199829 49.44766998]
[195.71928406 63.11872101]
[105.78318787 139.04191589]
[115.16182709 150.74836731]
[124.54046631 162.45481873]
[133.91909790 174.16128540]
[143.38940430 185.79371643]
[152.95075989 197.35140991]
[162.51211548 208.90911865]
[172.07347107 220.46681213]
[181.63484192 232.02450562]
[196.39309692 237.72578430]
[198.54406738 252.46426392]
[208.10542297 264.02197266]
[214.17205811 266.68630981]
[217.47961426 271.32150269]
[217.77868652 276.09616089]
[226.97230530 287.94848633]
[236.16590881 299.80081177]
[245.35951233 311.65313721]
[254.55311584 323.50546265]
[259.40359497 325.48199463]
[262.67816162 328.79357910]
[264.13201904 332.61389160]
[263.88485718 336.13961792]
[272.50991821 348.41186523]
[281.13500977 360.68411255]
[289.76010132 372.95635986]
[300.69461060 383.22457886]
[313.48422241 391.06204224]
[329.29351807 391.67547607]
[336.10256958 404.92260742]
[348.89218140 412.76007080]
[361.68179321 420.59756470]
[374.47140503 428.43502808]
[387.26098633 436.27252197]
[400.05059814 444.10998535]
[412.84020996 451.94747925]
[425.69094849 459.68426514]
[438.60208130 467.31988525]
[451.57278442 474.85388184]
[464.60226440 482.28573608]
[477.63174438 489.71762085]
[490.66122437 497.14950562]
[503.74865723 504.47882080]
[516.89324951 511.70513916]
[533.68603516 514.03723145]
[536.09375000 530.81933594]
[520.63403320 537.77874756]
[509.66696167 524.84973145]
[496.52233887 517.62341309]
[489.13977051 517.15551758]
[483.22933960 510.17898560]
[470.19985962 502.74710083]
[457.17037964 495.31521606]
[444.14089966 487.88333130]
[436.76660156 487.29953003]
[430.96646118 480.23101807]
[418.05532837 472.59539795]
[410.69110107 471.89581299]
[405.00271606 464.73709106]
[392.21310425 456.89959717]
[379.42352295 449.06213379]
[366.63391113 441.22463989]
[353.84429932 433.38717651]
[341.05471802 425.54968262]
[328.26510620 417.71221924]
[313.37060547 417.65936279]
[305.64672852 403.85165405]
[292.85714722 396.01419067]
[286.20153809 399.47149658]
[293.11593628 412.78280640]
[279.80453491 419.69699097]
[272.89035034 406.38610840]
[266.23474121 409.84341431]
[265.29287720 424.81381226]
[264.35101318 439.78421021]
[263.40914917 454.75460815]
[262.46731567 469.72500610]
[261.52545166 484.69540405]
[272.97375488 495.34765625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[15 146]
[16 145]
[17 144]
[18 143]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[24 132]
[25 131]
[27 129]
[28 128]
[29 127]
[30 126]
[31 125]
[33 124]
[34 123]
[35 122]
[36 121]
[37 50]
[38 49]
[39 48]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[75 87]
[76 86]
[77 85]
[78 84]
[90 101]
[91 100]
[92 99]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[147 188]
[148 187]
[150 185]
[151 184]
[152 183]
[153 182]
[154 181]
[155 180]
[156 179]
[157 177]
[158 176]
[159 174]
[160 173]
[161 172]
[162 171]
[163 169]
[164 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
