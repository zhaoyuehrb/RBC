%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:15:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LPCAT4)
} def

/sequence { (\
AGCGCCGCCGCCGCCGCUGCUGCAGCAGCAGCUGCUCUGCAGAGUGGUGGCCGGGGCCAGGGCCGGGGUGCCCUCCCUCCCACCUUCUCCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 85 0.012477136 ubox
1 86 0.003633710 ubox
1 88 0.011186641 ubox
2 8 0.033716693 ubox
2 11 0.004993693 ubox
2 57 0.619601106 ubox
2 63 0.009869813 ubox
2 71 0.005368099 ubox
2 84 0.014043883 ubox
2 85 0.003423725 ubox
2 87 0.012481621 ubox
2 93 0.384652504 ubox
3 7 0.033569639 ubox
3 10 0.005257002 ubox
3 53 0.004456311 ubox
3 56 0.620991345 ubox
3 62 0.009887650 ubox
3 70 0.005381134 ubox
3 92 0.385163368 ubox
4 9 0.007176765 ubox
4 51 0.004394828 ubox
4 52 0.004751292 ubox
4 57 0.770481201 ubox
4 63 0.003928858 ubox
4 69 0.005378999 ubox
4 91 0.070227343 ubox
4 93 0.015371713 ubox
5 50 0.004413197 ubox
5 54 0.624217784 ubox
5 55 0.022248400 ubox
5 56 0.773711840 ubox
5 61 0.003178394 ubox
5 62 0.003982568 ubox
5 68 0.005378401 ubox
5 92 0.015064952 ubox
6 49 0.004410618 ubox
6 53 0.624539492 ubox
6 54 0.021657469 ubox
6 55 0.773080223 ubox
6 60 0.003195538 ubox
6 61 0.003971103 ubox
6 67 0.005370491 ubox
7 48 0.004381770 ubox
7 51 0.035455582 ubox
7 52 0.610005713 ubox
7 57 0.020266948 ubox
7 93 0.012217796 ubox
8 47 0.004378936 ubox
8 50 0.048960245 ubox
8 54 0.770310371 ubox
8 55 0.003611655 ubox
8 56 0.020249157 ubox
8 66 0.003908359 ubox
8 92 0.012031314 ubox
9 46 0.004375945 ubox
9 49 0.048919859 ubox
9 53 0.770881823 ubox
9 54 0.004274443 ubox
9 55 0.020171859 ubox
9 65 0.003900853 ubox
10 45 0.004321505 ubox
10 48 0.048498099 ubox
10 51 0.834752821 ubox
10 52 0.545030891 ubox
11 44 0.004309660 ubox
11 47 0.048449755 ubox
11 50 0.998735075 ubox
12 46 0.048406170 ubox
12 49 0.998747996 ubox
13 40 0.003526472 ubox
13 45 0.047885306 ubox
13 48 0.998410750 ubox
14 39 0.003525354 ubox
14 44 0.047750542 ubox
14 47 0.998805555 ubox
15 46 0.998778223 ubox
16 32 0.004162947 ubox
16 35 0.003585598 ubox
16 45 0.998407437 ubox
17 31 0.004366450 ubox
17 34 0.003579454 ubox
17 42 0.047796943 ubox
17 44 0.998756709 ubox
18 30 0.004383314 ubox
18 41 0.048911841 ubox
18 43 0.994894855 ubox
19 29 0.004434040 ubox
19 32 0.004347370 ubox
19 40 0.050040002 ubox
20 28 0.004434133 ubox
20 31 0.004550982 ubox
20 39 0.049983396 ubox
20 42 0.996277586 ubox
21 27 0.004428636 ubox
21 30 0.004552828 ubox
21 41 0.998393646 ubox
22 26 0.004358115 ubox
22 29 0.004554324 ubox
22 35 0.050045255 ubox
22 40 0.998703145 ubox
23 28 0.004547769 ubox
23 34 0.050125382 ubox
23 39 0.998683570 ubox
24 33 0.050183791 ubox
24 36 0.075695255 ubox
24 38 0.995095505 ubox
25 32 0.050265335 ubox
25 35 0.111193065 ubox
25 37 0.992042921 ubox
26 31 0.050211989 ubox
26 34 0.118123174 ubox
27 33 0.117987931 ubox
27 36 0.987829806 ubox
28 32 0.115405699 ubox
28 35 0.991620660 ubox
29 34 0.990201901 ubox
33 41 0.004232937 ubox
34 40 0.004442652 ubox
35 39 0.004410899 ubox
50 93 0.004578013 ubox
51 92 0.003794725 ubox
52 92 0.077747769 ubox
53 77 0.004393369 ubox
53 78 0.010523383 ubox
53 79 0.007258168 ubox
53 80 0.016361209 ubox
53 81 0.018340602 ubox
53 84 0.007330598 ubox
53 86 0.005404655 ubox
53 87 0.003681890 ubox
53 89 0.003370931 ubox
53 90 0.017754428 ubox
53 91 0.082345251 ubox
54 76 0.004398674 ubox
54 77 0.012494194 ubox
54 78 0.006832517 ubox
54 79 0.016461531 ubox
54 80 0.018344409 ubox
54 81 0.013879568 ubox
54 83 0.007282433 ubox
54 85 0.008236184 ubox
54 86 0.003320838 ubox
54 88 0.003407522 ubox
54 89 0.017927085 ubox
54 90 0.082372795 ubox
54 91 0.022050638 ubox
55 64 0.015714147 ubox
55 75 0.004394835 ubox
55 76 0.013179866 ubox
55 77 0.009206342 ubox
55 78 0.016270743 ubox
55 79 0.018304156 ubox
55 80 0.015502734 ubox
55 81 0.013006026 ubox
55 84 0.022383476 ubox
55 85 0.004381152 ubox
55 87 0.004614134 ubox
55 88 0.018048329 ubox
55 89 0.082311682 ubox
55 90 0.027891523 ubox
55 91 0.005771377 ubox
55 94 0.068386808 ubox
56 63 0.015738735 ubox
56 75 0.013155061 ubox
56 76 0.009232487 ubox
56 77 0.019971511 ubox
56 78 0.011610468 ubox
56 79 0.015481334 ubox
56 80 0.013001807 ubox
56 83 0.022513672 ubox
56 84 0.005014667 ubox
56 86 0.004514213 ubox
56 87 0.027645920 ubox
56 88 0.073424323 ubox
56 89 0.027964691 ubox
56 90 0.005751008 ubox
56 93 0.069355230 ubox
57 62 0.015690050 ubox
57 92 0.069177574 ubox
59 74 0.076706535 ubox
59 78 0.111406591 ubox
59 85 0.137993854 ubox
59 86 0.096460474 ubox
59 88 0.011029601 ubox
60 73 0.081664437 ubox
60 76 0.004191755 ubox
60 77 0.119083715 ubox
60 78 0.015837074 ubox
60 79 0.007912000 ubox
60 80 0.025865754 ubox
60 81 0.524421791 ubox
60 84 0.145945397 ubox
60 85 0.113776890 ubox
60 86 0.005258068 ubox
60 87 0.010799422 ubox
60 88 0.004130681 ubox
60 89 0.022604139 ubox
60 90 0.039789097 ubox
60 91 0.802055610 ubox
60 94 0.014226785 ubox
61 72 0.081688055 ubox
61 75 0.004229016 ubox
61 76 0.119115678 ubox
61 77 0.017192061 ubox
61 78 0.007066578 ubox
61 79 0.025948351 ubox
61 80 0.524997663 ubox
61 81 0.045883630 ubox
61 83 0.145405080 ubox
61 84 0.115967054 ubox
61 85 0.005734776 ubox
61 86 0.007237856 ubox
61 87 0.004429971 ubox
61 88 0.022784870 ubox
61 89 0.039873331 ubox
61 90 0.803067400 ubox
61 91 0.028341626 ubox
61 93 0.012432884 ubox
61 94 0.128499785 ubox
62 71 0.081688799 ubox
62 74 0.003542898 ubox
62 75 0.118891424 ubox
62 76 0.017209259 ubox
62 77 0.007938594 ubox
62 78 0.019718787 ubox
62 79 0.523677714 ubox
62 80 0.047149614 ubox
62 83 0.115902744 ubox
62 84 0.006377626 ubox
62 85 0.005709258 ubox
62 86 0.003813847 ubox
62 87 0.025432670 ubox
62 88 0.035125762 ubox
62 89 0.802474822 ubox
62 90 0.028203457 ubox
62 93 0.130165381 ubox
63 70 0.081201676 ubox
63 92 0.118884315 ubox
64 70 0.006562307 ubox
64 92 0.054952323 ubox
65 69 0.005715679 ubox
65 72 0.060500383 ubox
65 73 0.094344085 ubox
65 74 0.043024393 ubox
65 75 0.046306654 ubox
65 76 0.233563520 ubox
65 77 0.203011674 ubox
65 78 0.418043718 ubox
65 79 0.063847263 ubox
65 80 0.083768392 ubox
65 81 0.055395117 ubox
65 84 0.013795349 ubox
65 85 0.020699208 ubox
65 86 0.751337409 ubox
65 87 0.089260546 ubox
65 88 0.020406197 ubox
65 89 0.008292287 ubox
65 90 0.102594801 ubox
65 91 0.076541742 ubox
66 71 0.060507090 ubox
66 72 0.094444035 ubox
66 73 0.046501462 ubox
66 74 0.048039016 ubox
66 75 0.233762083 ubox
66 76 0.203019362 ubox
66 77 0.452395674 ubox
66 78 0.038939361 ubox
66 79 0.083105826 ubox
66 80 0.055079069 ubox
66 81 0.024413888 ubox
66 83 0.013210592 ubox
66 84 0.020185886 ubox
66 85 0.797939076 ubox
66 86 0.063410773 ubox
66 87 0.019893250 ubox
66 88 0.005403152 ubox
66 89 0.100911853 ubox
66 90 0.075872914 ubox
66 91 0.007804728 ubox
67 71 0.092924271 ubox
67 72 0.046396026 ubox
67 73 0.078419054 ubox
67 74 0.224566879 ubox
67 75 0.202659302 ubox
67 76 0.452722634 ubox
67 77 0.047492113 ubox
67 78 0.077666355 ubox
67 79 0.054623166 ubox
67 80 0.024812881 ubox
67 81 0.012277461 ubox
67 83 0.018497705 ubox
67 84 0.808361849 ubox
67 85 0.010262676 ubox
67 86 0.003405366 ubox
67 87 0.008105839 ubox
67 88 0.068908779 ubox
67 89 0.066339024 ubox
67 90 0.007983121 ubox
68 72 0.077516198 ubox
68 73 0.230910976 ubox
68 74 0.164319110 ubox
68 75 0.452102115 ubox
68 76 0.047180213 ubox
68 77 0.082449901 ubox
68 78 0.038677167 ubox
68 79 0.024880615 ubox
68 80 0.012241654 ubox
68 83 0.809372642 ubox
68 84 0.008357958 ubox
68 86 0.005991732 ubox
68 87 0.072130157 ubox
68 88 0.040423533 ubox
68 89 0.008105210 ubox
69 82 0.809044680 ubox
70 81 0.804201331 ubox
2 57 0.9500000 lbox
3 56 0.9500000 lbox
5 54 0.9500000 lbox
6 53 0.9500000 lbox
7 52 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
15 46 0.9500000 lbox
16 45 0.9500000 lbox
17 44 0.9500000 lbox
18 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
60 91 0.9500000 lbox
61 90 0.9500000 lbox
62 89 0.9500000 lbox
65 86 0.9500000 lbox
66 85 0.9500000 lbox
67 84 0.9500000 lbox
68 83 0.9500000 lbox
69 82 0.9500000 lbox
70 81 0.9500000 lbox
showpage
end
%%EOF
