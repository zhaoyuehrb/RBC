%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VMAC)
} def

/sequence { (\
AGUUCCGGGCCGCCUGGGGGCGUGGCCGGGCCUGUACAGCAGCCUGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.006899634 ubox
2 10 0.018031886 ubox
2 21 0.582367845 ubox
2 23 0.005964609 ubox
2 26 0.003272585 ubox
2 31 0.003569883 ubox
2 32 0.007294041 ubox
2 49 0.410980504 ubox
3 9 0.017876014 ubox
3 18 0.008063669 ubox
3 19 0.271898051 ubox
3 20 0.554572752 ubox
3 22 0.004320551 ubox
3 48 0.292213764 ubox
4 8 0.013179495 ubox
4 17 0.004599345 ubox
4 18 0.373710123 ubox
4 19 0.521347714 ubox
4 20 0.007491149 ubox
4 25 0.003552130 ubox
4 30 0.007481943 ubox
4 47 0.044188839 ubox
4 48 0.517476342 ubox
5 16 0.004993895 ubox
5 17 0.436872987 ubox
5 18 0.492455334 ubox
5 19 0.008904345 ubox
5 24 0.004497609 ubox
5 25 0.255667054 ubox
5 29 0.022638302 ubox
5 30 0.008930573 ubox
5 46 0.032451226 ubox
5 47 0.697068985 ubox
5 48 0.012712145 ubox
6 16 0.471220658 ubox
6 17 0.459602378 ubox
6 18 0.008649716 ubox
6 22 0.008976914 ubox
6 24 0.262118660 ubox
6 28 0.024677046 ubox
6 29 0.011766995 ubox
6 34 0.003487391 ubox
6 46 0.698276055 ubox
6 47 0.010337703 ubox
7 14 0.123987332 ubox
7 15 0.500616052 ubox
7 21 0.008870181 ubox
7 23 0.263142131 ubox
7 27 0.020887036 ubox
7 33 0.003565621 ubox
7 45 0.698157736 ubox
7 50 0.005835461 ubox
8 13 0.124676274 ubox
8 14 0.509161873 ubox
8 15 0.394792584 ubox
8 26 0.016023259 ubox
8 27 0.038608586 ubox
8 32 0.003578213 ubox
8 44 0.698660708 ubox
8 49 0.005620950 ubox
8 50 0.028601724 ubox
9 13 0.501089399 ubox
9 14 0.389510243 ubox
9 21 0.265839462 ubox
9 23 0.017090220 ubox
9 26 0.041219236 ubox
9 31 0.003590088 ubox
9 43 0.698656890 ubox
9 49 0.028978619 ubox
10 17 0.004860249 ubox
10 18 0.007210703 ubox
10 19 0.020900497 ubox
10 20 0.265111904 ubox
10 22 0.012532137 ubox
10 25 0.043562513 ubox
10 30 0.003527275 ubox
10 42 0.697327555 ubox
10 47 0.004312278 ubox
10 48 0.028978067 ubox
11 16 0.005480849 ubox
11 17 0.007677235 ubox
11 18 0.028714121 ubox
11 19 0.264255894 ubox
11 22 0.071611082 ubox
11 24 0.042447554 ubox
11 29 0.003434808 ubox
11 34 0.014591191 ubox
11 46 0.004231851 ubox
11 47 0.019462831 ubox
12 21 0.077267742 ubox
12 23 0.037349560 ubox
12 26 0.015216430 ubox
12 31 0.120227097 ubox
12 40 0.684563391 ubox
13 19 0.006929706 ubox
13 20 0.077319252 ubox
13 22 0.037230690 ubox
13 25 0.015314592 ubox
13 30 0.120579280 ubox
13 39 0.650514745 ubox
14 18 0.009588714 ubox
14 19 0.077076151 ubox
14 20 0.028285836 ubox
14 24 0.015309921 ubox
14 29 0.120705856 ubox
14 30 0.004048908 ubox
14 39 0.219212036 ubox
15 19 0.025493975 ubox
15 22 0.012473889 ubox
15 28 0.120592159 ubox
15 29 0.004036924 ubox
15 34 0.006399270 ubox
15 36 0.557133961 ubox
15 38 0.303600806 ubox
16 21 0.014383832 ubox
16 27 0.120459998 ubox
16 32 0.003962636 ubox
16 33 0.009724935 ubox
16 35 0.590272836 ubox
16 37 0.299292285 ubox
17 26 0.120373317 ubox
17 27 0.005785491 ubox
17 31 0.003993425 ubox
17 32 0.011466168 ubox
17 33 0.019977802 ubox
18 26 0.006841262 ubox
18 27 0.003472648 ubox
18 31 0.011445959 ubox
18 32 0.018005087 ubox
18 33 0.677534860 ubox
18 50 0.004105355 ubox
19 26 0.003629386 ubox
19 27 0.014344590 ubox
19 31 0.015344088 ubox
19 32 0.685433664 ubox
19 33 0.010126481 ubox
19 50 0.109099053 ubox
20 26 0.014643911 ubox
20 31 0.685529247 ubox
20 32 0.009602905 ubox
20 35 0.051476212 ubox
20 49 0.111812379 ubox
21 25 0.014692299 ubox
21 28 0.015482019 ubox
21 30 0.685499206 ubox
21 34 0.053009841 ubox
21 48 0.111798402 ubox
22 27 0.025854984 ubox
22 31 0.009259615 ubox
22 33 0.049617300 ubox
22 49 0.038656688 ubox
23 30 0.009268215 ubox
23 46 0.003771860 ubox
23 48 0.037143458 ubox
24 32 0.056592956 ubox
24 50 0.639050363 ubox
25 31 0.056621772 ubox
25 49 0.647710162 ubox
26 30 0.056210834 ubox
26 47 0.433845653 ubox
26 48 0.566312243 ubox
27 46 0.536837061 ubox
27 47 0.470438016 ubox
28 44 0.005438878 ubox
28 45 0.622671032 ubox
28 50 0.005804992 ubox
29 43 0.005016767 ubox
29 44 0.644486212 ubox
29 45 0.307375471 ubox
29 49 0.005767659 ubox
29 50 0.019997936 ubox
30 43 0.644856920 ubox
30 44 0.307299035 ubox
30 49 0.029862855 ubox
31 42 0.460078733 ubox
31 47 0.006554037 ubox
31 48 0.030134311 ubox
32 39 0.045216460 ubox
32 42 0.547648455 ubox
32 46 0.006547666 ubox
32 47 0.030052818 ubox
33 38 0.042805887 ubox
33 41 0.715613113 ubox
33 46 0.026103266 ubox
34 40 0.718124200 ubox
34 43 0.022585414 ubox
34 45 0.010489437 ubox
34 49 0.008292564 ubox
35 39 0.671807108 ubox
35 42 0.022283932 ubox
35 48 0.006924970 ubox
37 46 0.015727396 ubox
38 45 0.016505035 ubox
39 44 0.016290732 ubox
4 48 0.9500000 lbox
5 47 0.9500000 lbox
6 46 0.9500000 lbox
7 45 0.9500000 lbox
8 44 0.9500000 lbox
9 43 0.9500000 lbox
10 42 0.9500000 lbox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
18 33 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
showpage
end
%%EOF
