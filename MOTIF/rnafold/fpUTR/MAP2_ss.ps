%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUAAUGCUCCCGGAGAAGGAUUCUGCAGCAGUUCUCAAAGGCUAGACUUGAGUGGUAUUGCUGCAUAUGCGCUGAUUCUUCAGCUUGUCUCUAACCGAGGAAGCAUUGAUUGGGAGCUACUCAUUCAGAAAAUUAAAAGAAAGAAGCCAGAAAAUAUUAUCAACCCUUUGAGAACACGACACAACGAACUUUAUAUUUUACCACUUCCUUGAAUAGUUGCAGGAGAAAUAACAAGGCAUUGAAGA\
) } def
/len { sequence length } bind def

/coor [
[81.68812561 418.18698120]
[71.61127472 406.50534058]
[69.47229767 391.22695923]
[75.95372009 377.22717285]
[88.98735046 368.97317505]
[88.98735046 353.97317505]
[88.98735046 338.97317505]
[88.98735046 323.97317505]
[88.98735046 308.97317505]
[88.98735046 293.97317505]
[88.98735046 278.97317505]
[81.66941833 277.33065796]
[59.71563721 272.40304565]
[53.30498123 285.96414185]
[58.86751556 300.75717163]
[52.26456833 315.11602783]
[37.41355515 320.52185059]
[23.12531471 313.76745605]
[17.87681007 298.86010742]
[24.78188324 284.64407349]
[39.74388123 279.55349731]
[46.15453339 265.99237061]
[68.96903229 251.73236084]
[89.27599335 256.09652710]
[89.65445709 241.10128784]
[90.03292084 226.10606384]
[90.41139221 211.11083984]
[90.78985596 196.11561584]
[91.16831970 181.12039185]
[91.54678345 166.12516785]
[91.92524719 151.12994385]
[92.30371094 136.13471985]
[70.15687561 108.57668304]
[82.49539948 81.93171692]
[75.74462128 68.53668213]
[68.99385071 55.14164352]
[62.24308014 41.74660492]
[55.49230576 28.35156441]
[48.74153519 14.95652485]
[41.99076080 1.56148624]
[35.23999023 -11.83355331]
[28.48921776 -25.22859192]
[21.73844528 -38.62363052]
[14.98767281 -52.01866913]
[7.57278442 -52.71207047]
[0.91276008 -55.88988495]
[-4.19602871 -61.12027740]
[-7.16070032 -67.72928619]
[-7.66046143 -74.88744354]
[-5.68071651 -81.71382904]
[-1.50914991 -87.38447571]
[-7.40203905 -101.17845917]
[-13.29492855 -114.97243500]
[-19.18781853 -128.76641846]
[-25.42152405 -135.40835571]
[-25.06682205 -142.77178955]
[-30.78521156 -156.63902283]
[-36.50360107 -170.50625610]
[-42.22198868 -184.37347412]
[-47.94037628 -198.24070740]
[-53.65876389 -212.10794067]
[-59.37715149 -225.97515869]
[-74.22806549 -236.88174438]
[-71.20359039 -254.17881775]
[-77.09648132 -267.97280884]
[-82.98936462 -281.76678467]
[-88.32131958 -267.74642944]
[-101.36560822 -260.34057617]
[-116.13740540 -262.94711304]
[-125.85929108 -274.37011719]
[-126.07077789 -289.36862183]
[-116.67484283 -301.06118774]
[-101.98240662 -304.08319092]
[-88.73358917 -297.04708862]
[-93.38684082 -311.30706787]
[-98.04009247 -325.56707764]
[-113.78689575 -333.21374512]
[-119.01642609 -349.56494141]
[-110.95318604 -364.33648682]
[-115.78598022 -378.53662109]
[-120.61877441 -392.73678589]
[-125.45156097 -406.93692017]
[-130.28434753 -421.13708496]
[-154.54756165 -423.92291260]
[-172.68312073 -443.62960815]
[-173.65180969 -472.75717163]
[-183.38993835 -484.16632080]
[-193.12805176 -495.57550049]
[-202.86618042 -506.98464966]
[-210.79689026 -511.46554565]
[-212.65408325 -518.59973145]
[-222.24749756 -530.13085938]
[-231.84089661 -541.66198730]
[-241.43429565 -553.19311523]
[-257.21466064 -556.08447266]
[-264.66561890 -570.29229736]
[-258.07150269 -584.91754150]
[-242.49070740 -588.74090576]
[-229.87550354 -578.82952881]
[-229.90318298 -562.78649902]
[-220.30978394 -551.25537109]
[-210.71638489 -539.72424316]
[-201.12297058 -528.19317627]
[-191.45701599 -516.72277832]
[-181.71890259 -505.31362915]
[-171.98077393 -493.90444946]
[-162.24264526 -482.49530029]
[-155.36437988 -485.48519897]
[-141.60784912 -491.46496582]
[-134.72959900 -494.45486450]
[-136.42919922 -509.35827637]
[-138.12881470 -524.26165771]
[-147.37995911 -537.09625244]
[-141.13458252 -550.61828613]
[-142.83419800 -565.52166748]
[-144.53381348 -580.42504883]
[-146.23342896 -595.32849121]
[-157.84439087 -606.39941406]
[-156.28465271 -622.36645508]
[-142.75071716 -630.98107910]
[-127.62464905 -625.63488770]
[-122.50988770 -610.42901611]
[-131.33003235 -597.02807617]
[-129.63041687 -582.12469482]
[-127.93080139 -567.22131348]
[-126.23118591 -552.31787109]
[-117.10161591 -540.54925537]
[-123.22542572 -525.96130371]
[-121.52581024 -511.05789185]
[-119.82619476 -496.15447998]
[-111.36090851 -491.08206177]
[-104.43724823 -484.38165283]
[-99.34439087 -476.47930908]
[-96.26081848 -467.84570312]
[-95.24939728 -458.96887207]
[-96.25899506 -450.32681274]
[-99.13237000 -442.36175537]
[-103.61959076 -435.45755005]
[-109.39611053 -429.92126465]
[-116.08420563 -425.96984863]
[-111.25141907 -411.76971436]
[-106.41862488 -397.56958008]
[-101.58583069 -383.36941528]
[-96.75304413 -369.16928101]
[-84.52239227 -365.16061401]
[-76.71093750 -354.68768311]
[-76.34445953 -341.43304443]
[-83.78010559 -330.22030640]
[-79.12685394 -315.96032715]
[-74.47360229 -301.70034790]
[-69.19538879 -287.65966797]
[-63.30249786 -273.86569214]
[-57.40961075 -260.07171631]
[-46.31655884 -255.28689575]
[-41.28702927 -243.86366272]
[-45.50992584 -231.69355774]
[-39.79153442 -217.82632446]
[-34.07314682 -203.95909119]
[-28.35475922 -190.09187317]
[-22.63636971 -176.22463989]
[-16.91798210 -162.35740662]
[-11.19959354 -148.49018860]
[-5.39383888 -134.65930176]
[0.49905038 -120.86532593]
[6.39193964 -107.07134247]
[12.28482914 -93.27736664]
[31.55195045 -81.75215912]
[28.38271141 -58.76944351]
[35.13348389 -45.37440491]
[41.88425446 -31.97936440]
[48.63502884 -18.58432579]
[55.38579941 -5.18928623]
[62.13657379 8.20575237]
[68.88734436 21.60079193]
[75.63811493 34.99583054]
[82.38889313 48.39086914]
[89.13966370 61.78590775]
[95.89043427 75.18094635]
[102.76871490 73.30216217]
[110.33543396 73.41320801]
[117.99691772 75.73685455]
[125.09379578 80.31565857]
[130.95600891 86.99415588]
[134.96220398 95.41781616]
[136.59851074 105.04970551]
[150.82885742 109.79282379]
[165.05920410 114.53594208]
[180.59788513 111.55935669]
[190.22552490 122.92411804]
[204.45588684 127.66723633]
[218.68623352 132.41035461]
[228.08934021 120.52097321]
[240.99340820 112.56730652]
[255.84020996 109.50979614]
[270.83691406 111.71765137]
[284.17260742 118.92426300]
[294.23690796 130.25939941]
[299.81454468 144.35427856]
[300.23199463 159.50688171]
[295.43878174 173.88746643]
[286.01379395 185.75950623]
[273.09509277 193.68937683]
[258.24267578 196.71951294]
[243.25006104 194.48402405]
[229.92768860 187.25285339]
[219.88427734 175.89918518]
[214.33261108 161.79405212]
[213.94311523 146.64070129]
[199.71276855 141.89758301]
[185.48242188 137.15446472]
[170.96159363 140.47030640]
[160.31610107 128.76629639]
[146.08573914 124.02317047]
[131.85539246 119.28005981]
[125.71627808 123.58834076]
[134.33264160 135.86671448]
[122.05412292 144.48286438]
[113.43804932 132.20489502]
[107.29894257 136.51318359]
[106.92047119 151.50840759]
[106.54200745 166.50363159]
[106.16354370 181.49885559]
[105.78507996 196.49407959]
[105.40661621 211.48930359]
[105.02815247 226.48452759]
[104.64968109 241.47975159]
[104.27121735 256.47497559]
[113.29095459 244.48980713]
[126.96374512 238.32093811]
[141.91815186 239.48951721]
[154.46673584 247.70736694]
[161.51525879 260.94815063]
[161.32571411 275.94696045]
[153.94482422 289.00537109]
[141.19258118 296.90347290]
[126.21340942 297.69375610]
[112.70088196 291.18133545]
[103.98735046 278.97317505]
[103.98735046 293.97317505]
[103.98735046 308.97317505]
[103.98735046 323.97317505]
[103.98735046 338.97317505]
[103.98735046 353.97317505]
[103.98735046 368.97317505]
[117.02097321 377.22717285]
[123.50239563 391.22695923]
[121.36341858 406.50534058]
[111.28657532 418.18698120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 244]
[6 243]
[7 242]
[8 241]
[9 240]
[10 239]
[11 238]
[13 22]
[14 21]
[24 227]
[25 226]
[26 225]
[27 224]
[28 223]
[29 222]
[30 221]
[31 220]
[32 219]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[51 166]
[52 165]
[53 164]
[54 163]
[56 162]
[57 161]
[58 160]
[59 159]
[60 158]
[61 157]
[62 156]
[64 153]
[65 152]
[66 151]
[74 150]
[75 149]
[76 148]
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[86 107]
[87 106]
[88 105]
[89 104]
[91 103]
[92 102]
[93 101]
[94 100]
[110 130]
[111 129]
[112 128]
[114 126]
[115 125]
[116 124]
[117 123]
[185 214]
[186 213]
[187 212]
[189 210]
[190 209]
[191 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
