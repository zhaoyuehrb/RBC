%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC22A14)
} def

/sequence { (\
GGCCAGUUCCUAGUCGGUGGCUCCCAUGCUGGUCUCUGAUGUUUAGGAAGUGGUGUCAGCAGAGACUGAGCUGCACCCUUUCUUUGGACAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.013361935 ubox
1 22 0.013482909 ubox
1 23 0.004184524 ubox
1 34 0.975963073 ubox
1 35 0.041341379 ubox
1 36 0.028470306 ubox
1 37 0.008288115 ubox
1 57 0.009282964 ubox
2 9 0.013256935 ubox
2 21 0.016094478 ubox
2 33 0.984280657 ubox
2 34 0.050480304 ubox
2 35 0.008774184 ubox
2 36 0.007519413 ubox
2 42 0.003752457 ubox
2 54 0.069097276 ubox
2 56 0.004464840 ubox
3 13 0.003264786 ubox
3 20 0.016120105 ubox
3 32 0.986606098 ubox
3 41 0.003823686 ubox
3 53 0.076044609 ubox
3 87 0.010896967 ubox
4 19 0.016118188 ubox
4 31 0.986607699 ubox
4 38 0.139571449 ubox
4 52 0.076549663 ubox
4 86 0.010926592 ubox
5 11 0.003477791 ubox
5 18 0.015841090 ubox
5 22 0.004280626 ubox
5 30 0.986332748 ubox
5 35 0.005087776 ubox
5 37 0.139851070 ubox
5 51 0.076506172 ubox
5 85 0.010376969 ubox
6 10 0.003523105 ubox
6 21 0.005825673 ubox
6 29 0.986454750 ubox
6 34 0.005540430 ubox
6 36 0.139727497 ubox
6 84 0.007872147 ubox
6 89 0.006172156 ubox
7 20 0.006419824 ubox
7 26 0.007245757 ubox
7 28 0.979077663 ubox
7 49 0.076215469 ubox
7 88 0.005465901 ubox
8 12 0.003372420 ubox
8 17 0.012217703 ubox
8 19 0.009419274 ubox
8 20 0.020839913 ubox
8 48 0.077104746 ubox
8 87 0.004622137 ubox
8 88 0.004635034 ubox
9 16 0.025851927 ubox
9 17 0.062198031 ubox
9 19 0.020935012 ubox
9 20 0.076079618 ubox
9 32 0.026441359 ubox
9 47 0.077249069 ubox
9 86 0.004519774 ubox
9 87 0.005652463 ubox
10 16 0.066238321 ubox
10 17 0.025253773 ubox
10 19 0.076413831 ubox
10 20 0.036673327 ubox
10 31 0.026197230 ubox
10 32 0.137355595 ubox
10 46 0.077256830 ubox
10 86 0.005647701 ubox
11 16 0.024090134 ubox
11 19 0.036786868 ubox
11 28 0.012044205 ubox
11 31 0.137802096 ubox
11 45 0.076917475 ubox
12 18 0.036964362 ubox
12 22 0.884753229 ubox
12 27 0.028106879 ubox
12 30 0.140272234 ubox
12 35 0.003409443 ubox
12 43 0.005187468 ubox
12 44 0.075994441 ubox
13 21 0.917127735 ubox
13 27 0.127254905 ubox
13 29 0.140511275 ubox
13 34 0.003472202 ubox
13 40 0.070561884 ubox
13 42 0.003348241 ubox
13 43 0.035140178 ubox
14 20 0.915525651 ubox
14 26 0.127167733 ubox
14 28 0.128377973 ubox
14 32 0.003546576 ubox
14 39 0.080625169 ubox
15 19 0.883516723 ubox
15 28 0.052960037 ubox
15 31 0.003737461 ubox
15 38 0.081010111 ubox
16 22 0.009639449 ubox
16 23 0.011241923 ubox
16 24 0.132676054 ubox
16 25 0.081213763 ubox
16 27 0.040961266 ubox
16 30 0.003760145 ubox
16 37 0.080961012 ubox
17 21 0.009938798 ubox
17 22 0.008292794 ubox
17 23 0.132722165 ubox
17 24 0.080791405 ubox
17 27 0.326039979 ubox
17 29 0.003744348 ubox
17 36 0.080925980 ubox
18 26 0.336271929 ubox
18 28 0.003367799 ubox
18 31 0.007730472 ubox
19 25 0.338053085 ubox
19 30 0.010527629 ubox
19 34 0.079751517 ubox
19 35 0.006423843 ubox
20 24 0.332597306 ubox
20 29 0.012094055 ubox
20 33 0.080108709 ubox
20 34 0.006788365 ubox
21 28 0.013045783 ubox
21 32 0.079791180 ubox
22 31 0.077390117 ubox
23 31 0.012021889 ubox
23 32 0.007962294 ubox
24 31 0.008485849 ubox
24 32 0.015896472 ubox
25 31 0.016793089 ubox
26 30 0.013766130 ubox
33 39 0.004025886 ubox
33 88 0.003279412 ubox
34 38 0.006848241 ubox
34 87 0.003456984 ubox
34 91 0.003979843 ubox
35 87 0.006238436 ubox
35 88 0.109307443 ubox
35 90 0.005880195 ubox
36 46 0.007179654 ubox
36 86 0.007570584 ubox
36 87 0.118143813 ubox
36 91 0.156804234 ubox
37 45 0.007634347 ubox
37 86 0.117583266 ubox
37 90 0.157012314 ubox
38 44 0.007955646 ubox
38 84 0.003490039 ubox
38 85 0.115846873 ubox
38 89 0.152621249 ubox
39 43 0.006825085 ubox
39 84 0.115565459 ubox
40 86 0.024942739 ubox
40 90 0.877719841 ubox
41 85 0.020344356 ubox
41 89 0.975026196 ubox
42 87 0.043397687 ubox
42 88 0.974776076 ubox
43 86 0.056394174 ubox
43 87 0.966367160 ubox
43 88 0.017251438 ubox
44 86 0.861594300 ubox
44 87 0.021778062 ubox
45 83 0.718587152 ubox
45 84 0.339807300 ubox
45 85 0.555356925 ubox
46 81 0.003474191 ubox
46 82 0.823879118 ubox
46 83 0.450331645 ubox
46 84 0.318885883 ubox
46 85 0.003448663 ubox
47 80 0.003982093 ubox
47 81 0.833894890 ubox
47 82 0.538303089 ubox
47 83 0.073517299 ubox
47 84 0.003191102 ubox
48 79 0.003377700 ubox
48 80 0.846478360 ubox
48 81 0.523883146 ubox
48 83 0.003303968 ubox
48 84 0.003460299 ubox
49 79 0.856716552 ubox
49 80 0.505786552 ubox
49 81 0.012232100 ubox
49 83 0.003807938 ubox
50 78 0.866461338 ubox
50 79 0.463501523 ubox
50 80 0.012784503 ubox
50 82 0.003863326 ubox
52 77 0.996409766 ubox
52 78 0.029351290 ubox
53 76 0.996767751 ubox
53 77 0.024927155 ubox
54 75 0.996702270 ubox
54 90 0.025353146 ubox
55 66 0.005925174 ubox
55 71 0.004953369 ubox
55 74 0.996686452 ubox
55 76 0.030702196 ubox
55 89 0.055897133 ubox
56 65 0.005971711 ubox
56 69 0.035527925 ubox
56 73 0.204689812 ubox
56 75 0.030475865 ubox
56 87 0.004081086 ubox
56 88 0.055821099 ubox
57 64 0.006007888 ubox
57 68 0.051268312 ubox
57 73 0.975251042 ubox
57 86 0.006657320 ubox
57 87 0.055130265 ubox
58 67 0.051278268 ubox
58 72 0.994018127 ubox
58 83 0.004355285 ubox
58 85 0.008118693 ubox
59 66 0.051023718 ubox
59 71 0.994497479 ubox
59 74 0.042953493 ubox
59 82 0.004426998 ubox
59 84 0.007317465 ubox
60 68 0.139860978 ubox
60 70 0.985329392 ubox
60 73 0.043703796 ubox
60 86 0.052109848 ubox
61 67 0.282197033 ubox
61 72 0.043956511 ubox
61 81 0.005872140 ubox
61 83 0.016999483 ubox
61 85 0.052652647 ubox
62 66 0.292841871 ubox
62 71 0.043938558 ubox
62 80 0.006233139 ubox
62 82 0.017472402 ubox
62 84 0.052831164 ubox
63 79 0.006344873 ubox
63 81 0.017419376 ubox
63 83 0.052887780 ubox
64 78 0.006473551 ubox
64 80 0.017112756 ubox
64 82 0.052892160 ubox
65 79 0.016557663 ubox
65 81 0.050981032 ubox
67 75 0.016734052 ubox
68 74 0.016950606 ubox
68 80 0.045227154 ubox
69 79 0.048149087 ubox
69 80 0.004079230 ubox
70 78 0.047944305 ubox
70 79 0.003927633 ubox
71 91 0.010231234 ubox
72 90 0.010582087 ubox
73 89 0.010627051 ubox
76 87 0.014030012 ubox
77 86 0.014253686 ubox
77 87 0.041588534 ubox
78 86 0.041951436 ubox
78 87 0.009760974 ubox
78 91 0.010874155 ubox
79 86 0.009722528 ubox
79 90 0.010878697 ubox
80 88 0.003488517 ubox
81 87 0.003721680 ubox
81 88 0.013758893 ubox
82 86 0.003964727 ubox
82 87 0.014315418 ubox
1 34 0.9500000 lbox
2 33 0.9500000 lbox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
40 90 0.9500000 lbox
41 89 0.9500000 lbox
42 88 0.9500000 lbox
43 87 0.9500000 lbox
44 86 0.9500000 lbox
45 83 0.9500000 lbox
46 82 0.9500000 lbox
47 81 0.9500000 lbox
48 80 0.9500000 lbox
49 79 0.9500000 lbox
50 78 0.9500000 lbox
52 77 0.9500000 lbox
53 76 0.9500000 lbox
54 75 0.9500000 lbox
55 74 0.9500000 lbox
57 73 0.9500000 lbox
58 72 0.9500000 lbox
59 71 0.9500000 lbox
60 70 0.9500000 lbox
showpage
end
%%EOF
