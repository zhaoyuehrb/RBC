%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCCGCCAUCAGCAGCGCAGCUCCAGGGCCGGCUGCAGCGGCAGCGGCUCCGCCGGGCGUCCUGGCAGCAGCACAUGGAUUAAUUGAUGUAUGUUGAGUUUAUGGAGCUGCCUUUUGGUGGCUUGCUUUAUCUGCAGUUUUUAAGAAGAAAAAGAAGGCCCUGAGUCAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[261.84509277 444.13531494]
[271.61373901 432.56585693]
[284.61096191 424.79730225]
[281.49230957 410.12509155]
[278.37362671 395.45285034]
[275.25494385 380.78063965]
[271.96575928 368.73767090]
[273.05795288 357.68521118]
[277.55139160 349.01345825]
[284.08056641 343.59634399]
[273.85058594 332.62603760]
[263.62060547 321.65573120]
[253.39064026 310.68542480]
[243.16065979 299.71511841]
[232.93069458 288.74481201]
[222.70071411 277.77450562]
[212.47073364 266.80419922]
[198.13204956 262.77288818]
[194.37905884 247.40324402]
[184.14909363 236.43295288]
[177.26847839 233.67765808]
[173.83836365 225.18077087]
[163.80140686 214.03359985]
[153.76445007 202.88642883]
[143.72749329 191.73925781]
[133.69053650 180.59208679]
[123.65357208 169.44490051]
[113.61661530 158.29772949]
[103.57965851 147.15055847]
[93.54269409 136.00338745]
[79.63494110 130.38429260]
[64.67147827 131.43063354]
[49.70801926 132.47698975]
[34.74455643 133.52333069]
[19.78109550 134.56968689]
[4.81763506 135.61602783]
[-3.55220485 139.34542847]
[-10.41569424 136.54774475]
[-25.39513779 137.33277893]
[-40.37458038 138.11781311]
[-55.35402298 138.90286255]
[-68.80532074 148.28340149]
[-83.53791809 141.08044434]
[-84.39618683 124.70377350]
[-70.49720764 116.00029755]
[-56.13906479 123.92340851]
[-41.15961838 123.13837433]
[-26.18017769 122.35333252]
[-11.20073414 121.56829071]
[3.77128792 120.65256500]
[18.73474884 119.60621643]
[33.69820786 118.55987549]
[48.66167068 117.51352692]
[63.62512970 116.46717834]
[78.58859253 115.42082977]
[69.43852997 107.18087769]
[64.07920837 94.10698700]
[52.25904846 84.87206268]
[40.43888855 75.63714600]
[28.61872673 66.40222168]
[16.79856682 57.16729736]
[4.97840452 47.93237686]
[-11.22550011 42.94541168]
[-10.91911697 25.99423409]
[5.45441866 21.59609032]
[14.21332645 36.11221313]
[26.03348732 45.34713745]
[37.85364914 54.58205795]
[49.67380905 63.81698227]
[61.49397278 73.05190277]
[73.31413269 82.28682709]
[79.90525818 78.70813751]
[93.08751678 71.55075073]
[99.67864990 67.97206116]
[98.37130737 53.02914047]
[97.06397247 38.08622360]
[95.75663757 23.14330101]
[94.18871307 8.22547340]
[92.36067200 -6.66271925]
[90.53263092 -21.55091095]
[88.70458984 -36.43910217]
[79.34314728 -49.19347382]
[85.47171021 -62.76881790]
[83.64366913 -77.65700531]
[73.34765625 -90.42118835]
[79.50537109 -105.62035370]
[95.78228760 -107.61890411]
[105.43409729 -94.36090851]
[98.53186035 -79.48504639]
[100.35990143 -64.59685516]
[109.59059143 -52.90739059]
[103.59278107 -38.26714325]
[105.42082214 -23.37895203]
[107.24886322 -8.49075985]
[109.07690430 6.39743280]
[112.24411774 10.00601387]
[113.15985870 15.65054798]
[110.69956207 21.83596611]
[112.00689697 36.77888489]
[113.31423187 51.72180557]
[114.62156677 66.66472626]
[124.53352356 75.07950592]
[130.50039673 86.04874420]
[132.04173279 97.92147064]
[129.31327820 109.04978943]
[123.03965759 118.01690674]
[114.37115479 123.81734467]
[104.68987274 125.96643066]
[114.72682953 137.11360168]
[124.76378632 148.26077271]
[134.80075073 159.40794373]
[144.83770752 170.55511475]
[154.87466431 181.70228577]
[164.91162109 192.84947205]
[174.94857788 203.99664307]
[184.98553467 215.14381409]
[195.11940002 226.20297241]
[205.34936523 237.17327881]
[220.41976929 241.98925781]
[223.44104004 256.57421875]
[233.67102051 267.54452515]
[243.90100098 278.51483154]
[254.13096619 289.48513794]
[264.36093140 300.45544434]
[274.59091187 311.42575073]
[284.82089233 322.39605713]
[295.05087280 333.36636353]
[308.80676270 339.34759521]
[323.80676270 339.34759521]
[338.80676270 339.34759521]
[353.80676270 339.34759521]
[363.71914673 327.25302124]
[379.09619141 324.41040039]
[392.67733765 332.16192627]
[398.04998779 346.84759521]
[392.67733765 361.53326416]
[379.09619141 369.28479004]
[363.71914673 366.44216919]
[353.80676270 354.34759521]
[338.80676270 354.34759521]
[323.80676270 354.34759521]
[308.80676270 354.34759521]
[304.08688354 360.17617798]
[317.25061035 367.36758423]
[330.41433716 374.55895996]
[343.57809448 381.75033569]
[356.74182129 388.94171143]
[371.74160767 389.02389526]
[384.87213135 396.27572632]
[392.92968750 408.92782593]
[393.94830322 423.89321899]
[387.67941284 437.52041626]
[375.65258789 446.48455811]
[360.80230713 448.59844971]
[346.75186157 443.34631348]
[336.92944336 432.00964355]
[333.73156738 417.35699463]
[323.96044922 405.97610474]
[314.18933105 394.59518433]
[304.41818237 383.21429443]
[294.64706421 371.83337402]
[289.92715454 377.66198730]
[293.04583740 392.33419800]
[296.16452026 407.00640869]
[299.28317261 421.67861938]
[314.31649780 423.48910522]
[327.94635010 430.08505249]
[338.69421387 440.75097656]
[345.39428711 454.32992554]
[347.31976318 469.34896851]
[344.26181030 484.17892456]
[336.55209351 497.21115112]
[325.02694702 507.03204346]
[310.93652344 512.57629395]
[295.80923462 513.24243164]
[281.28598022 508.95831299]
[268.94213867 500.18859863]
[260.11666870 487.88455200]
[255.76689148 473.38082886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 165]
[4 164]
[5 163]
[6 162]
[10 127]
[11 126]
[12 125]
[13 124]
[14 123]
[15 122]
[16 121]
[17 120]
[19 118]
[20 117]
[22 116]
[23 115]
[24 114]
[25 113]
[26 112]
[27 111]
[28 110]
[29 109]
[30 108]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[36 50]
[38 49]
[39 48]
[40 47]
[41 46]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[74 101]
[75 100]
[76 99]
[77 98]
[78 95]
[79 94]
[80 93]
[81 92]
[83 90]
[84 89]
[128 142]
[129 141]
[130 140]
[131 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
