%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCUGUGUAUGAAUGACAAGGAUACCUUCAGCCAGCUCAUUCUGGAUGAAUGAAUGAUUACACUAAGUGUCCUCCACAUUCCUCUGUGGGCUCACUUCAUGGACUCACUUUGCGUGCUUGUUAAAUGUGCUGUGUUGCUCCCAAGACCAUGUAAAGCCUACUGACCACUAACCUCCCUCACAGCAGAAACUAGACGUCAGGUUAAA\
) } def
/len { sequence length } bind def

/coor [
[109.62928772 234.67674255]
[107.82984924 219.78506470]
[106.03040314 204.89338684]
[104.11909485 190.01565552]
[102.09602356 175.15270996]
[100.07294464 160.28976440]
[98.04987335 145.42681885]
[94.03229523 139.22212219]
[96.10983276 130.32545471]
[94.31038666 115.43377686]
[85.60180664 110.11508179]
[81.25738525 100.13549042]
[83.56111145 88.80270386]
[68.68338013 90.71401978]
[53.80564880 92.62532806]
[38.92791748 94.53664398]
[24.05018616 96.44795227]
[16.54225540 109.89923859]
[2.71502423 116.27584839]
[-12.04109097 113.32270050]
[-22.10826111 102.37783051]
[-36.98599243 104.28914642]
[-51.86372375 106.20045471]
[-66.74145508 108.11177063]
[-81.61918640 110.02307892]
[-96.49691772 111.93439484]
[-111.37464905 113.84570312]
[-119.48908234 118.04367065]
[-126.49016571 115.67219543]
[-141.39494324 117.35966492]
[-149.57156372 121.43518829]
[-156.53620911 118.95874023]
[-171.46467590 120.42198944]
[-176.77700806 134.68875122]
[-187.71231079 145.19142151]
[-202.06451416 149.88549805]
[-216.97030640 147.89085388]
[-229.48028564 139.65618896]
[-237.14263916 126.85955811]
[-252.07110596 128.32279968]
[-266.99957275 129.78604126]
[-281.92800903 131.24928284]
[-296.85647583 132.71253967]
[-311.78494263 134.17578125]
[-318.72811890 147.95242310]
[-332.02890015 155.76860046]
[-347.44305420 155.13021851]
[-360.05197144 146.24098206]
[-365.83218384 131.93739319]
[-362.93930054 116.78369141]
[-352.29635620 105.61537170]
[-337.29953003 101.99619293]
[-322.73422241 107.08102417]
[-313.24816895 119.24732208]
[-298.31973267 117.78407288]
[-283.39126587 116.32083130]
[-268.46279907 114.85758209]
[-253.53434753 113.39434052]
[-238.60588074 111.93109131]
[-233.57406616 97.89021301]
[-222.90109253 87.38322449]
[-208.66629028 82.53229523]
[-193.67578125 84.35028839]
[-180.90931702 92.52978516]
[-172.92791748 105.49353027]
[-157.99945068 104.03028107]
[-143.08241272 102.45487976]
[-128.17764282 100.76741028]
[-113.28595734 98.96797180]
[-98.40822601 97.05666351]
[-83.53049469 95.14534760]
[-68.65276337 93.23403931]
[-53.77503586 91.32272339]
[-38.89730453 89.41141510]
[-24.01957321 87.50009918]
[-17.04577446 74.36602020]
[-3.51527286 67.77894592]
[11.47473621 70.45346069]
[22.13887405 81.57022095]
[37.01660538 79.65891266]
[51.89433670 77.74759674]
[66.77206421 75.83628845]
[81.64979553 73.92497253]
[95.60307312 68.41988373]
[107.77796936 59.65791702]
[119.88665771 50.80469513]
[131.92848206 41.86071777]
[143.97029114 32.91674042]
[156.01210022 23.97276497]
[168.05392456 15.02878857]
[180.09573364 6.08481216]
[192.13754272 -2.85916448]
[186.95158386 -17.03610802]
[185.97152710 -32.08475494]
[189.26829529 -46.78497314]
[196.56636047 -59.94728851]
[207.26679993 -70.50914001]
[220.49639893 -77.62065125]
[235.17897034 -80.71301270]
[250.12284851 -79.54399109]
[264.11758423 -74.21682739]
[276.03207397 -65.17125702]
[288.07388306 -74.11523438]
[300.11569214 -83.05921173]
[303.08828735 -88.96755219]
[307.87963867 -92.02732086]
[312.65658569 -92.08457947]
[324.96179199 -100.66255188]
[337.26702881 -109.24052429]
[349.24127197 -118.27475739]
[360.86764526 -127.75247192]
[372.49404907 -137.23019409]
[384.12042236 -146.70791626]
[395.74679565 -156.18563843]
[407.37319946 -165.66336060]
[418.99957275 -175.14108276]
[430.62594604 -184.61880493]
[442.25234985 -194.09652710]
[444.10638428 -198.97933960]
[447.32659912 -202.32705688]
[451.09902954 -203.87631226]
[454.62319946 -203.72514343]
[466.66500854 -212.66912842]
[478.70681763 -221.61309814]
[475.07336426 -236.34651184]
[477.35137939 -251.30825806]
[485.16299438 -264.22305298]
[497.29116821 -273.13906860]
[511.86932373 -276.72265625]
[526.66851807 -274.45803833]
[539.43835449 -266.72103882]
[551.48016357 -275.66500854]
[553.53991699 -291.33450317]
[566.12701416 -300.89166260]
[581.77386475 -298.66641235]
[591.19744873 -285.97891235]
[588.80688477 -270.35647583]
[576.02044678 -261.06759644]
[560.42413330 -263.62319946]
[548.38232422 -254.67922974]
[552.09967041 -240.21856689]
[549.99169922 -225.39622498]
[542.34875488 -212.47528076]
[530.30877686 -203.44053650]
[515.68774414 -199.69366455]
[500.70596313 -201.83576965]
[487.65078735 -209.57128906]
[475.60897827 -200.62730408]
[463.56716919 -191.68333435]
[451.73007202 -182.47013855]
[440.10366821 -172.99241638]
[428.47729492 -163.51469421]
[416.85092163 -154.03697205]
[405.22451782 -144.55924988]
[393.59814453 -135.08152771]
[381.97177124 -125.60381317]
[370.34536743 -116.12609100]
[358.71899414 -106.64836884]
[373.14727783 -102.54660797]
[379.07833862 -88.76899719]
[372.14102173 -75.46961975]
[357.44808960 -72.45008087]
[345.82821655 -81.93577576]
[345.84500122 -96.93531036]
[333.53976440 -88.35733795]
[321.23455811 -79.77935791]
[309.05966187 -71.01739502]
[297.01785278 -62.07341766]
[284.97604370 -53.12944031]
[290.19329834 -39.10953903]
[291.24966431 -24.17249107]
[288.05099487 -9.52822971]
[280.84820557 3.63461471]
[270.21749878 14.24518871]
[257.01440430 21.43753433]
[242.30479431 24.62126160]
[227.27900696 23.52999687]
[213.15538025 18.24365425]
[201.08152771 9.18264961]
[189.03970337 18.12662697]
[176.99789429 27.07060242]
[164.95608521 36.01457977]
[152.91426086 44.95855713]
[140.87245178 53.90253067]
[128.83064270 62.84650803]
[125.33477783 69.35942841]
[116.53993225 71.83280945]
[104.36504364 80.59477234]
[115.73934937 89.82272339]
[117.23989868 103.52263641]
[109.20206451 113.63433075]
[111.00150299 128.52600098]
[112.91281891 143.40373230]
[114.93589020 158.26669312]
[116.95896912 173.12963867]
[118.98204041 187.99258423]
[123.24087524 196.07522583]
[120.92208099 203.09394836]
[122.72152710 217.98562622]
[124.52096558 232.87728882]
[138.45063782 239.50811768]
[146.56471252 252.62928772]
[146.27400208 268.05392456]
[137.67129517 280.86004639]
[123.50166321 286.96127319]
[108.28659821 284.41076660]
[96.88116455 274.02230835]
[92.92478943 259.11090088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[4 196]
[5 195]
[6 194]
[7 193]
[9 192]
[10 191]
[13 83]
[14 82]
[15 81]
[16 80]
[17 79]
[21 75]
[22 74]
[23 73]
[24 72]
[25 71]
[26 70]
[27 69]
[29 68]
[30 67]
[32 66]
[33 65]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[84 188]
[85 187]
[86 185]
[87 184]
[88 183]
[89 182]
[90 181]
[91 180]
[92 179]
[102 169]
[103 168]
[104 167]
[107 166]
[108 165]
[109 164]
[110 158]
[111 157]
[112 156]
[113 155]
[114 154]
[115 153]
[116 152]
[117 151]
[118 150]
[122 149]
[123 148]
[124 147]
[131 140]
[132 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
