%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RNF219)
} def

/sequence { (\
GGCGAAGAGUAGCGGUAGGUCGGCGGGACUUCCGUGUUGGCGGGAUUCUGAACGCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.010068497 ubox
1 38 0.008667338 ubox
1 56 0.040603384 ubox
1 59 0.056136121 ubox
2 10 0.173765316 ubox
2 13 0.918887421 ubox
2 16 0.040396433 ubox
2 20 0.010389242 ubox
2 37 0.010436855 ubox
2 55 0.042997910 ubox
2 58 0.056696201 ubox
3 9 0.177156137 ubox
3 12 0.919651745 ubox
3 14 0.068264030 ubox
3 15 0.039356399 ubox
3 19 0.010410819 ubox
3 36 0.010556340 ubox
3 54 0.043009190 ubox
3 57 0.056487740 ubox
4 13 0.073169125 ubox
4 21 0.003307812 ubox
4 35 0.003998343 ubox
4 53 0.042483845 ubox
4 56 0.026709490 ubox
5 20 0.003230326 ubox
6 38 0.003778527 ubox
6 49 0.041000017 ubox
6 56 0.006943331 ubox
7 21 0.004832090 ubox
7 38 0.009167449 ubox
7 48 0.041483944 ubox
7 55 0.008387250 ubox
8 20 0.004716810 ubox
8 37 0.009316669 ubox
8 38 0.022173499 ubox
8 47 0.041423609 ubox
8 49 0.006210194 ubox
8 56 0.003734699 ubox
9 37 0.021694765 ubox
9 41 0.003303919 ubox
9 46 0.040815609 ubox
9 48 0.006228656 ubox
9 53 0.008789377 ubox
9 55 0.004258178 ubox
9 58 0.246693493 ubox
10 17 0.009886775 ubox
10 36 0.008383855 ubox
10 39 0.004355704 ubox
10 45 0.039296892 ubox
10 50 0.005699733 ubox
10 52 0.008513207 ubox
10 54 0.004005397 ubox
10 57 0.247160680 ubox
11 16 0.010481511 ubox
11 35 0.008458007 ubox
11 38 0.006839757 ubox
11 49 0.005953617 ubox
11 56 0.248459645 ubox
12 20 0.013056274 ubox
12 24 0.004074907 ubox
12 35 0.073811367 ubox
12 37 0.004099029 ubox
12 41 0.003547663 ubox
12 48 0.005943732 ubox
12 55 0.248982138 ubox
12 58 0.050711377 ubox
13 19 0.013562823 ubox
13 22 0.011316844 ubox
13 23 0.003805163 ubox
13 34 0.077735248 ubox
13 36 0.003625675 ubox
13 40 0.003271221 ubox
13 42 0.032436390 ubox
13 50 0.007500099 ubox
13 54 0.248952414 ubox
13 57 0.050830553 ubox
14 21 0.013494155 ubox
14 33 0.079241446 ubox
14 41 0.031896113 ubox
14 47 0.003220428 ubox
14 49 0.008170497 ubox
14 53 0.247474333 ubox
14 56 0.050590991 ubox
14 59 0.864196741 ubox
15 20 0.009580074 ubox
15 24 0.028763119 ubox
15 32 0.079255540 ubox
15 41 0.004439981 ubox
15 46 0.006410666 ubox
15 48 0.010124535 ubox
15 53 0.016052063 ubox
15 55 0.050537402 ubox
15 58 0.870687998 ubox
16 23 0.028646602 ubox
16 39 0.030743494 ubox
16 40 0.004898844 ubox
16 45 0.006308765 ubox
16 50 0.133332036 ubox
16 52 0.021430283 ubox
16 54 0.045892707 ubox
16 57 0.868783805 ubox
17 30 0.005931654 ubox
17 31 0.082409142 ubox
17 38 0.030044292 ubox
17 47 0.004795251 ubox
17 49 0.142373402 ubox
17 56 0.865356781 ubox
18 29 0.005955943 ubox
18 30 0.096777159 ubox
18 37 0.023058715 ubox
18 38 0.003888150 ubox
18 46 0.004904920 ubox
18 47 0.009566570 ubox
18 48 0.142357898 ubox
18 49 0.035343321 ubox
18 55 0.843088774 ubox
18 56 0.080909970 ubox
18 59 0.404085500 ubox
19 29 0.133626777 ubox
19 37 0.005062788 ubox
19 41 0.046015210 ubox
19 46 0.034066266 ubox
19 47 0.098804565 ubox
19 48 0.034208412 ubox
19 53 0.486288475 ubox
19 55 0.199233382 ubox
19 58 0.407528041 ubox
20 27 0.008539270 ubox
20 28 0.134066503 ubox
20 40 0.046896924 ubox
20 43 0.091100047 ubox
20 44 0.036592404 ubox
20 45 0.046723526 ubox
20 51 0.069711077 ubox
20 52 0.466744185 ubox
20 54 0.153594677 ubox
20 57 0.058503980 ubox
21 26 0.013314187 ubox
21 27 0.133993348 ubox
21 34 0.015363381 ubox
21 36 0.016042276 ubox
21 39 0.046995703 ubox
21 42 0.094740218 ubox
21 43 0.042079813 ubox
21 44 0.043823727 ubox
21 50 0.090526650 ubox
21 54 0.489843844 ubox
21 57 0.406635945 ubox
22 33 0.015443621 ubox
22 35 0.011494615 ubox
22 38 0.046264233 ubox
22 41 0.096475472 ubox
22 49 0.068373515 ubox
22 53 0.501413850 ubox
22 56 0.410737670 ubox
22 59 0.011785294 ubox
23 29 0.003247896 ubox
23 32 0.015400364 ubox
23 35 0.030400405 ubox
23 37 0.044527026 ubox
23 41 0.056035085 ubox
23 48 0.059086248 ubox
23 55 0.412060794 ubox
23 58 0.011884056 ubox
24 34 0.033554984 ubox
24 36 0.044380825 ubox
24 39 0.097098043 ubox
24 40 0.055016569 ubox
24 42 0.012691169 ubox
24 50 0.835807113 ubox
24 54 0.412024159 ubox
24 57 0.011875214 ubox
25 33 0.034254704 ubox
25 35 0.038984880 ubox
25 38 0.097243716 ubox
25 41 0.012678184 ubox
25 47 0.019942297 ubox
25 48 0.014901179 ubox
25 49 0.839468371 ubox
25 53 0.409750983 ubox
25 56 0.011740835 ubox
26 32 0.034220207 ubox
26 33 0.043879621 ubox
26 37 0.097417803 ubox
26 38 0.036154929 ubox
26 46 0.020350868 ubox
26 47 0.020753609 ubox
26 48 0.840950844 ubox
26 49 0.493747600 ubox
26 55 0.010791717 ubox
27 31 0.022171372 ubox
27 32 0.043820114 ubox
27 37 0.024554368 ubox
27 38 0.039169698 ubox
27 46 0.020553473 ubox
27 47 0.837849329 ubox
27 48 0.502988941 ubox
28 35 0.100472724 ubox
28 37 0.046798492 ubox
28 46 0.828132521 ubox
28 47 0.497977727 ubox
29 34 0.100368097 ubox
29 36 0.049698970 ubox
29 43 0.007239910 ubox
29 44 0.023988750 ubox
30 42 0.007119844 ubox
30 43 0.010288829 ubox
30 44 0.025510406 ubox
30 45 0.971289076 ubox
31 42 0.008124980 ubox
31 43 0.004056755 ubox
31 44 0.983908285 ubox
31 45 0.027348215 ubox
32 40 0.011586761 ubox
32 43 0.988342404 ubox
32 44 0.024030919 ubox
33 39 0.011603655 ubox
33 42 0.988505342 ubox
33 43 0.018629462 ubox
34 38 0.007168351 ubox
34 41 0.988242469 ubox
34 55 0.007354718 ubox
35 40 0.976642636 ubox
35 42 0.005056789 ubox
35 54 0.007519032 ubox
36 41 0.006649956 ubox
36 53 0.009438823 ubox
36 55 0.005819370 ubox
36 58 0.008444297 ubox
37 52 0.009347183 ubox
37 54 0.005543371 ubox
37 57 0.006599247 ubox
38 51 0.008142798 ubox
38 57 0.010388235 ubox
39 53 0.003784733 ubox
39 56 0.042032698 ubox
39 59 0.057534059 ubox
40 55 0.047459723 ubox
40 58 0.058222215 ubox
41 50 0.014118657 ubox
41 54 0.047484290 ubox
41 57 0.058223688 ubox
42 48 0.004668780 ubox
42 49 0.016424434 ubox
42 53 0.047419927 ubox
42 56 0.058155623 ubox
43 48 0.016775475 ubox
43 49 0.005247415 ubox
43 55 0.058154262 ubox
44 48 0.005835608 ubox
46 52 0.031048037 ubox
47 51 0.026152789 ubox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
18 55 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
