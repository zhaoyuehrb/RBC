%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:15:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCUUUACAAUUCCAACAGCGCGUCCAAAACGUGGUCCCUGACUGAGACUUAUUUUACGCCACUAGAGUGAGGGUGGGUAGCGUCAGAAAGAGCGGGGCACGGGGCGGGCCAGCUUCGCCGCGGGAAAAGAACGGGAGGCGGAGUGUCCGCAGCGCGCACGCGCAACGAAAGUCAAUGGCGGUCUGGAGAGACUGGCGGAAGCUAGCUUUGCAAU\
) } def
/len { sequence length } bind def

/coor [
[89.34068298 172.27912903]
[78.31629181 182.45079041]
[65.07273102 189.49409485]
[50.47591400 192.94851685]
[35.48024368 192.58819580]
[21.06618881 188.43667603]
[8.17619991 180.76542664]
[-2.34692883 170.07600403]
[-9.81515312 157.06732178]
[-13.74017048 142.58995056]
[-13.86534977 127.59047699]
[-10.18250561 113.04961395]
[-2.93243670 99.91810608]
[7.41081953 89.05454254]
[20.17098045 81.16921997]
[34.51373672 76.77771759]
[49.50130844 76.16716766]
[64.15373993 79.37748718]
[77.51300812 86.19877625]
[88.70320892 96.18223572]
[80.86110687 83.39546967]
[73.01899719 70.60870361]
[65.17688751 57.82193756]
[57.33478165 45.03517532]
[49.49267578 32.24840927]
[40.34229279 33.69185257]
[31.19701767 32.46666718]
[22.81590080 28.69560623]
[15.88855457 22.71184540]
[10.97840500 15.02964878]
[8.47689724 6.30021429]
[8.57235146 -2.74351168]
[-5.33721304 -8.35813618]
[-19.24677849 -13.97276020]
[-33.15634155 -19.58738518]
[-39.73827744 -19.04537010]
[-44.84185791 -21.53258896]
[-47.38350677 -25.57116508]
[-61.12469482 -31.58612823]
[-74.86588287 -37.60108948]
[-88.60707092 -43.61605453]
[-102.34825134 -49.63101578]
[-111.46004486 -50.20468521]
[-116.24384308 -55.83380508]
[-129.89651489 -62.04706955]
[-142.40342712 -53.24227524]
[-157.53831482 -51.88879395]
[-171.22760010 -58.25038528]
[-179.83703613 -70.52774048]
[-181.13644409 -85.36610413]
[-194.78910828 -91.57936859]
[-210.55464172 -90.25331879]
[-218.93380737 -102.56749725]
[-232.58647156 -108.78076172]
[-248.35200500 -107.45471191]
[-256.73117065 -119.76889038]
[-270.38385010 -125.98215485]
[-284.03649902 -132.19541931]
[-297.68917847 -138.40867615]
[-306.79171753 -139.11419678]
[-311.49349976 -144.81198120]
[-325.05480957 -151.22224426]
[-338.61608887 -157.63250732]
[-352.17736816 -164.04275513]
[-365.73867798 -170.45301819]
[-379.28417969 -162.88340759]
[-394.68798828 -164.75473022]
[-406.02703857 -175.34742737]
[-408.94125366 -190.58839417]
[-402.31002808 -204.61717224]
[-388.68319702 -212.03939819]
[-373.30059814 -210.00106812]
[-362.07708740 -199.28599548]
[-359.32839966 -184.01431274]
[-345.76712036 -177.60404968]
[-332.20584106 -171.19378662]
[-318.64453125 -164.78353882]
[-305.08325195 -158.37327576]
[-291.47592163 -152.06134033]
[-277.82324219 -145.84808350]
[-264.17056274 -139.63482666]
[-250.51791382 -133.42155457]
[-235.72889709 -135.19201660]
[-226.37321472 -122.43343353]
[-212.72053528 -116.22016907]
[-197.93153381 -117.99063110]
[-188.57585144 -105.23204041]
[-174.92317200 -99.01877594]
[-162.88119507 -107.78554535]
[-147.96868896 -109.35818481]
[-134.18013000 -103.21473694]
[-125.25936890 -90.91365051]
[-123.68325043 -75.69973755]
[-110.03057861 -69.48647308]
[-96.33329010 -63.37220383]
[-82.59210205 -57.35723877]
[-68.85091400 -51.34227753]
[-55.10972977 -45.32731628]
[-41.36854172 -39.31235123]
[-27.54171944 -33.49694824]
[-13.63215351 -27.88232422]
[0.27741116 -22.26770020]
[14.18697643 -16.65307617]
[24.18948936 -25.58497810]
[37.01325607 -29.50672531]
[50.30066299 -27.69731522]
[58.69055557 -40.13153076]
[67.08045197 -52.56574249]
[75.47034454 -64.99995422]
[83.86023712 -77.43417358]
[92.25012970 -89.86838531]
[93.09158325 -96.41877747]
[96.58770752 -100.89202118]
[101.06726074 -102.53630066]
[109.81361389 -114.72241211]
[118.55997467 -126.90851593]
[127.30632782 -139.09461975]
[136.05268860 -151.28073120]
[144.79904175 -163.46684265]
[153.54539490 -175.65295410]
[162.29176331 -187.83906555]
[163.38002014 -207.97102356]
[181.33450317 -215.15599060]
[189.72439575 -227.59020996]
[183.53686523 -241.72236633]
[185.99456787 -256.95269775]
[196.31326294 -268.42129517]
[211.20028687 -272.46850586]
[225.90524292 -267.80291748]
[235.73585510 -255.91331482]
[237.55517578 -240.59361267]
[230.78269958 -226.73225403]
[217.57946777 -218.75238037]
[202.15861511 -219.20031738]
[193.76872253 -206.76609802]
[196.61039734 -196.95663452]
[193.52098083 -186.99230957]
[185.28930664 -180.23210144]
[174.47785950 -179.09269714]
[165.73150635 -166.90660095]
[156.98515320 -154.72048950]
[148.23880005 -142.53437805]
[139.49244690 -130.34826660]
[130.74607849 -118.16216278]
[121.99972534 -105.97605133]
[113.25337219 -93.78993988]
[104.68434906 -81.47849274]
[96.29444885 -69.04428101]
[87.90455627 -56.61006546]
[79.51466370 -44.17584991]
[71.12477112 -31.74163437]
[62.73487854 -19.30742073]
[71.24374390 2.46334767]
[62.27944183 24.40630150]
[70.12154388 37.19306564]
[77.96365356 49.97983170]
[85.80576324 62.76659775]
[93.64786530 75.55335999]
[101.48997498 88.34012604]
[113.91063690 74.63770294]
[135.41958618 70.49510956]
[149.94073486 74.25489807]
[164.46189880 78.01468658]
[173.54936218 77.13616180]
[179.16528320 81.93544006]
[193.63049316 85.90505981]
[208.17848206 89.55963135]
[222.80239868 92.89744568]
[238.30496216 87.54930115]
[250.50878906 98.50368500]
[246.85963440 114.49166870]
[231.11143494 119.06618500]
[219.46458435 107.52136230]
[204.84066772 104.18354797]
[201.67968750 105.73621368]
[197.61056519 105.83763123]
[193.32232666 104.07801056]
[189.66087341 100.37026215]
[175.19566345 96.40065002]
[160.70210266 92.53584290]
[146.18095398 88.77605438]
[131.65979004 85.01626587]
[127.02618408 90.91369629]
[132.60725403 104.83676147]
[117.75897980 102.70856476]
[113.12537384 108.60599518]
[120.21427155 121.82520294]
[133.55487061 130.33042908]
[132.75096130 145.20332336]
[139.83985901 158.42253113]
[146.92875671 171.64173889]
[154.01765442 184.86096191]
[160.82806396 190.94143677]
[161.11192322 198.32324219]
[168.00871277 211.64369202]
[174.90548706 224.96414185]
[181.80227661 238.28459167]
[188.69906616 251.60504150]
[202.79464722 259.98635864]
[202.31349182 276.37844849]
[187.75056458 283.91854858]
[174.08694458 274.85003662]
[175.37861633 258.50183105]
[168.48182678 245.18138123]
[161.58503723 231.86093140]
[154.68826294 218.54048157]
[147.79147339 205.22003174]
[140.79844666 191.94985962]
[133.70954895 178.73065186]
[126.62065125 165.51142883]
[119.53175354 152.29222107]
[106.69819641 144.73252869]
[106.99506378 128.91410828]
[99.90615845 115.69489288]
[102.88636780 130.39585876]
[102.04091644 145.37200928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 159]
[21 158]
[22 157]
[23 156]
[24 155]
[25 154]
[32 103]
[33 102]
[34 101]
[35 100]
[38 99]
[39 98]
[40 97]
[41 96]
[42 95]
[44 94]
[45 93]
[50 88]
[51 87]
[53 85]
[54 84]
[56 82]
[57 81]
[58 80]
[59 79]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[106 152]
[107 151]
[108 150]
[109 149]
[110 148]
[111 147]
[114 146]
[115 145]
[116 144]
[117 143]
[118 142]
[119 141]
[120 140]
[121 139]
[123 135]
[124 134]
[161 182]
[162 181]
[163 180]
[165 179]
[166 178]
[167 174]
[168 173]
[186 214]
[187 213]
[189 211]
[190 210]
[191 209]
[192 208]
[194 207]
[195 206]
[196 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
