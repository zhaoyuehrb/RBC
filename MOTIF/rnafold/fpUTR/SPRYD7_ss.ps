%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAGCCCCACCCGUCUCCCCGGCCCAGCCCGGCCGCUCGCCCUGUCCGGUCUCUCCCCGGCCCCUUGAUUCUCCGCGUCUUCCUCGCAGGCCAGCCUAAGCUCAGCCUGCAUUGCGCCCUCCCGGCCUAGGGUGUCGCUGUACCGGCCUCCGAGCUCCACAUAGACAAGUCCGGACCUCGGGCGGGGGCAGGAGACGGAGCUGAGCGGCGGGGGGCAGUGUCGCCUCGGUCUAGGGACGGCGGCGGAGUCGGUG\
GUCCCUGCGCG\
) } def
/len { sequence length } bind def

/coor [
[228.00112915 903.02929688]
[218.68754578 891.10821533]
[213.51551819 876.89184570]
[212.99177551 861.77294922]
[217.16758728 847.23272705]
[225.63388062 834.69573975]
[237.56120300 825.39013672]
[251.78105164 820.22766113]
[251.25167847 805.23699951]
[250.72230530 790.24633789]
[250.19293213 775.25567627]
[246.82774353 768.70446777]
[249.74656677 760.08575439]
[249.39361572 745.08990479]
[241.35897827 732.54821777]
[248.76940918 718.56976318]
[248.41645813 703.57391357]
[248.06350708 688.57812500]
[247.71054077 673.58227539]
[230.86618042 662.25183105]
[223.48312378 644.28918457]
[227.14903259 626.11383057]
[239.67526245 613.66217041]
[234.98966980 599.41278076]
[230.30409241 585.16339111]
[225.61851501 570.91400146]
[221.86471558 568.01159668]
[219.87477112 562.73406982]
[220.99459839 556.27386475]
[216.64561462 541.91815186]
[212.29661560 527.56243896]
[207.94763184 513.20672607]
[203.01760864 507.73519897]
[203.63299561 498.65649414]
[199.45320129 484.25061035]
[195.27342224 469.84472656]
[191.09364319 455.43884277]
[186.91386414 441.03295898]
[182.73408508 426.62707520]
[178.46961975 412.24603271]
[174.12063599 397.89031982]
[163.02561951 387.95303345]
[166.42945862 372.50231934]
[162.08045959 358.14660645]
[157.73147583 343.79089355]
[153.38247681 329.43521118]
[149.03347778 315.07949829]
[141.19171143 312.62826538]
[135.01872253 307.20645142]
[120.49613953 310.96075439]
[105.97355652 314.71502686]
[91.45097351 318.46929932]
[84.88118744 332.65985107]
[70.70502472 339.26065063]
[55.61603928 335.15496826]
[46.73878479 322.28143311]
[48.26483536 306.71847534]
[59.47362900 295.81448364]
[75.07272339 294.71798706]
[87.69670105 303.94671631]
[102.21928406 300.19244385]
[116.74186707 296.43817139]
[131.26445007 292.68386841]
[134.20217896 283.46032715]
[141.34284973 276.44802856]
[139.75737000 261.53204346]
[138.17189026 246.61607361]
[136.58641052 231.70010376]
[133.52661133 228.07348633]
[132.69053650 222.49554443]
[135.14335632 216.41510010]
[133.90930176 201.46594238]
[132.67523193 186.51679993]
[131.44117737 171.56764221]
[130.20712280 156.61848450]
[128.97305298 141.66934204]
[127.73899078 126.72019196]
[119.44927216 139.22142029]
[108.32194519 149.28036499]
[95.05020905 156.27043152]
[80.46083069 159.75613403]
[65.46268463 159.52033997]
[50.99009705 155.57774353]
[37.94464874 148.17393494]
[27.13902855 137.77015686]
[19.24638367 125.01452637]
[14.75882530 110.70404816]
[3.87517285 100.38192749]
[-7.00847960 90.05980682]
[-17.89213181 79.73769379]
[-28.77578354 69.41557312]
[-39.65943527 59.09345627]
[-57.67316818 55.19911575]
[-61.96812439 38.16890335]
[-72.97247314 27.97555542]
[-83.97682190 17.78220940]
[-100.07912445 14.67609406]
[-105.18385315 -0.90831310]
[-94.03971100 -12.93910885]
[-78.11082458 -9.04004288]
[-73.78347778 6.77786064]
[-62.77912521 16.97120667]
[-51.77477646 27.16455269]
[-39.70061111 27.00986481]
[-30.45179176 35.38227844]
[-29.33731842 48.20980453]
[-18.45366669 58.53192139]
[-7.57001448 68.85404205]
[3.31363797 79.17615509]
[14.19729042 89.49827576]
[25.08094215 99.82039642]
[31.66257286 96.22426605]
[32.01549911 81.22841644]
[44.82583618 89.03201294]
[51.40746689 85.43588257]
[48.60021591 70.70091248]
[45.79296112 55.96594238]
[42.98571014 41.23097229]
[40.17845917 26.49600410]
[37.37120438 11.76103401]
[34.56395340 -2.97393584]
[20.46840096 -9.46200466]
[12.90783310 -23.01255608]
[14.78944206 -38.41512680]
[25.38971138 -49.74711227]
[40.63262177 -52.65113449]
[54.65695953 -46.01054001]
[62.07008362 -32.37876892]
[60.02149963 -16.99751472]
[49.29892349 -5.78118801]
[52.10617447 8.95378113]
[54.91342926 23.68875122]
[57.72068024 38.42372131]
[60.52793121 53.15869141]
[63.33518600 67.89366150]
[66.14243317 82.62863159]
[73.64126587 82.76099396]
[96.13776398 83.15808868]
[99.46328735 68.53136444]
[102.78881073 53.90464783]
[106.11433411 39.27792740]
[103.73001862 22.49247742]
[119.19944000 15.55466652]
[130.14848328 28.49896431]
[120.74105072 42.60345078]
[117.41552734 57.23017120]
[114.09000397 71.85688782]
[110.76448059 86.48360443]
[117.34611511 90.07973480]
[130.50936890 97.27198792]
[137.09100342 100.86811829]
[147.60359192 90.16832733]
[158.11618042 79.46854401]
[168.62878418 68.76875305]
[179.14137268 58.06896591]
[183.29389954 42.80243683]
[197.73284912 39.14643097]
[208.24543762 28.44664574]
[218.75802612 17.74685669]
[229.14399719 6.92411947]
[239.40190125 -4.02007055]
[236.34779358 -19.23361969]
[242.84985352 -33.32272339]
[256.40792847 -40.86983109]
[271.80859375 -38.97292709]
[283.13006592 -28.36141014]
[286.01895142 -13.11562443]
[279.36444092 0.90211380]
[265.72531128 8.30169868]
[250.34608459 6.23783875]
[240.08818054 17.18202782]
[239.34107971 21.86781311]
[235.66390991 26.14459610]
[229.45780945 28.25944710]
[218.94522095 38.95923615]
[208.43263245 49.65902328]
[205.03202820 64.16023254]
[189.84115601 68.58155823]
[179.32856750 79.28134155]
[168.81597900 89.98113251]
[158.30339050 100.68091583]
[147.79080200 111.38070679]
[142.68814087 125.48612976]
[143.92221069 140.43528748]
[145.15626526 155.38442993]
[146.39033508 170.33358765]
[147.62438965 185.28273010]
[148.85844421 200.23188782]
[150.09251404 215.18103027]
[151.50238037 230.11462402]
[153.08786011 245.03059387]
[154.67333984 259.94656372]
[156.25881958 274.86254883]
[170.92823792 291.01861572]
[163.38919067 310.73049927]
[167.73817444 325.08621216]
[172.08717346 339.44192505]
[176.43617249 353.79760742]
[180.78515625 368.15332031]
[192.19123840 379.11743164]
[188.47633362 393.54135132]
[192.82533264 407.89703369]
[198.29032898 415.17269897]
[197.13996887 422.44729614]
[201.31974792 436.85317993]
[205.49952698 451.25906372]
[209.67930603 465.66494751]
[213.85908508 480.07083130]
[218.03886414 494.47671509]
[222.30332947 508.85775757]
[226.65232849 523.21343994]
[231.00131226 537.56915283]
[235.35031128 551.92486572]
[239.86790466 566.22839355]
[244.55349731 580.47778320]
[249.23907471 594.72717285]
[253.92465210 608.97656250]
[270.10440063 610.85986328]
[283.62774658 621.32354736]
[290.10403442 638.02038574]
[286.90176392 656.46368408]
[297.66320801 666.91314697]
[308.42465210 677.36260986]
[319.18612671 687.81207275]
[329.94757080 698.26153564]
[340.70901489 708.71099854]
[351.53173828 719.09698486]
[362.41540527 729.41906738]
[377.64666748 726.45452881]
[391.69726562 733.03936768]
[399.16445923 746.64160156]
[397.17700195 762.03082275]
[386.49905396 773.28967285]
[371.23654175 776.08880615]
[357.25820923 769.35192871]
[349.93899536 755.66955566]
[352.09329224 740.30273438]
[341.20962524 729.98059082]
[334.21783447 727.66595459]
[330.25955200 719.47241211]
[319.49810791 709.02294922]
[308.73666382 698.57354736]
[297.97518921 688.12408447]
[287.21374512 677.67462158]
[276.45230103 667.22515869]
[262.70639038 673.22930908]
[263.05935669 688.22515869]
[263.41229248 703.22100830]
[263.76525879 718.21685791]
[271.82513428 731.83111572]
[264.38946533 744.73693848]
[264.74240112 759.73278809]
[265.18359375 774.72631836]
[265.71295166 789.71691895]
[266.24234009 804.70758057]
[266.77169800 819.69824219]
[281.32028198 823.84484863]
[293.87429810 832.28588867]
[303.20385742 844.19451904]
[308.39492798 858.40393066]
[308.93893433 873.52209473]
[304.78262329 888.06793213]
[296.33312988 900.61627197]
[284.41827393 909.93786621]
[270.20538330 915.11938477]
[255.08683777 915.65325928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 256]
[9 255]
[10 254]
[11 253]
[13 252]
[14 251]
[16 249]
[17 248]
[18 247]
[19 246]
[23 217]
[24 216]
[25 215]
[26 214]
[29 213]
[30 212]
[31 211]
[32 210]
[34 209]
[35 208]
[36 207]
[37 206]
[38 205]
[39 204]
[40 202]
[41 201]
[43 199]
[44 198]
[45 197]
[46 196]
[47 195]
[49 63]
[50 62]
[51 61]
[52 60]
[65 193]
[66 192]
[67 191]
[68 190]
[71 189]
[72 188]
[73 187]
[74 186]
[75 185]
[76 184]
[77 183]
[87 111]
[88 110]
[89 109]
[90 108]
[91 107]
[92 106]
[94 103]
[95 102]
[96 101]
[115 136]
[116 135]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[138 148]
[139 147]
[140 146]
[141 145]
[151 182]
[152 181]
[153 180]
[154 179]
[155 178]
[157 176]
[158 175]
[159 174]
[160 171]
[161 170]
[221 245]
[222 244]
[223 243]
[224 242]
[225 241]
[226 240]
[227 238]
[228 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
