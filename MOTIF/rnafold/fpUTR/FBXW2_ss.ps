%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCCGCCGGGAGCCGCGGAGCUGAGGGACGCGCGGAGAUGACGCAGGCAGCACCGGAAGCCGCUCCCCUGUGAGGCUGCGGACCGGGAGCAGCGGCCGCAGGUCCGGGCGCCAUGGCUGCGGAGCGGACCCGGCCGCUGCAAGGCUCUGGCGGUCCGAGCGUGCCUAGUAGCUGUGAACCCGGCGCGAGGUCCCGGGCCCCGGGGCGCUCGCUCAGGUAAAUUUUUCCAUAACCUU\
) } def
/len { sequence length } bind def

/coor [
[373.05691528 645.69824219]
[368.69363403 631.34686279]
[371.67608643 616.64636230]
[381.28741455 605.13012695]
[395.21737671 599.56634521]
[410.11627197 601.29168701]
[423.51593018 608.03326416]
[414.98870850 595.69281006]
[406.46148682 583.35235596]
[397.93429565 571.01196289]
[389.40707397 558.67150879]
[380.87985229 546.33105469]
[368.01608276 545.81408691]
[357.64025879 537.86853027]
[353.67108154 525.21325684]
[357.76895142 512.39471436]
[349.40469360 499.94326782]
[341.04043579 487.49179077]
[332.67614746 475.04034424]
[324.31188965 462.58886719]
[308.15643311 455.71490479]
[307.08306885 437.32324219]
[298.55587769 424.98278809]
[290.02865601 412.64233398]
[283.65267944 408.93334961]
[281.47171021 400.08316040]
[273.10745239 387.63171387]
[264.74319458 375.18023682]
[251.22351074 368.92980957]
[249.95100403 353.15985107]
[241.58674622 340.70840454]
[233.22247314 328.25692749]
[224.85820007 315.80545044]
[211.33853149 309.55505371]
[210.06602478 293.78509521]
[201.70176697 281.33361816]
[193.33749390 268.88214111]
[184.97322083 256.43069458]
[177.13839722 256.59515381]
[169.78540039 253.62467957]
[164.13108826 247.93124390]
[161.14230347 240.38359070]
[161.37098694 232.17510986]
[164.85398865 224.63528442]
[157.15565491 211.76144409]
[149.45733643 198.88760376]
[136.28483582 191.93528748]
[135.84288025 176.12025452]
[128.14454651 163.24641418]
[122.02592468 159.12667847]
[120.43093109 150.15237427]
[112.90248871 137.17845154]
[105.37404633 124.20453644]
[84.46852875 119.32649994]
[75.20607758 99.96047211]
[60.91605759 95.40029144]
[46.62603378 90.84011078]
[32.33601379 86.27993011]
[22.99678230 91.80856323]
[12.37503147 91.30583954]
[3.95457458 85.17772675]
[0.36483714 75.63563538]
[-13.80037594 70.70139313]
[-27.96558952 65.76715088]
[-42.13080215 60.83290863]
[-56.22809982 67.45892334]
[-70.52334595 62.25310898]
[-76.75335693 48.77265930]
[-90.91857147 43.83841705]
[-105.03722382 50.94048309]
[-120.01609039 45.89975357]
[-126.96849060 31.70680809]
[-121.76967621 16.78206825]
[-107.50402069 9.98011494]
[-92.63507843 15.33642864]
[-85.98432922 29.67320442]
[-71.81911469 34.60744476]
[-58.56217575 27.91498375]
[-44.12634277 32.71721649]
[-37.19655991 46.66769791]
[-23.03134918 51.60193634]
[-8.86613464 56.53617859]
[5.29907799 61.47042084]
[23.99308395 56.48599625]
[36.89619446 71.98990631]
[51.18621826 76.55008698]
[65.47624207 81.11026764]
[79.76625824 85.67045593]
[82.82717896 82.11608887]
[86.50273895 79.20182800]
[90.66139221 77.03196716]
[89.47959137 62.07859421]
[88.29779816 47.12522125]
[87.11599731 32.17184830]
[85.93419647 17.21847725]
[84.75239563 2.26510477]
[83.57059479 -12.68826771]
[82.38879395 -27.64163971]
[81.20699310 -42.59501266]
[80.02519226 -57.54838562]
[76.61544800 -63.17688751]
[76.55479431 -68.83567810]
[79.01414490 -72.90947723]
[78.22583008 -87.88874817]
[77.43750763 -102.86801910]
[76.64918518 -117.84729004]
[75.86086273 -132.82656860]
[75.07254028 -147.80583191]
[61.85437393 -159.27830505]
[61.04859543 -176.42381287]
[72.66596985 -188.59606934]
[71.68082428 -203.56367493]
[70.69567871 -218.53129578]
[57.97620010 -227.62792969]
[54.12980652 -242.78509521]
[60.97265244 -256.84600830]
[75.27375031 -263.17156982]
[90.28056335 -258.77502441]
[98.90732574 -245.73228455]
[97.08075714 -230.20173645]
[85.66329193 -219.51643372]
[86.64843750 -204.54882812]
[87.63358307 -189.58120728]
[98.40871429 -182.53558350]
[103.23597717 -170.39114380]
[100.14759827 -157.49259949]
[90.05181122 -148.59414673]
[90.84013367 -133.61488342]
[91.62845612 -118.63561249]
[92.41677856 -103.65634155]
[93.20509338 -88.67707062]
[93.99341583 -73.69779968]
[94.97856140 -58.73018646]
[96.16036224 -43.77681351]
[97.34216309 -28.82344055]
[98.52396393 -13.87006855]
[99.70576477 1.08330429]
[100.88756561 16.03667641]
[102.06936646 30.99004936]
[103.25116730 45.94342041]
[104.43296814 60.89679337]
[105.61476898 75.85016632]
[116.87243652 81.83242035]
[123.66944122 92.61773682]
[124.20881653 105.35475159]
[118.34796906 116.67609406]
[125.87640381 129.65000916]
[133.40484619 142.62393188]
[141.01840210 155.54809570]
[148.71672058 168.42193604]
[162.43984985 176.29507446]
[162.33117676 191.18927002]
[170.02951050 204.06312561]
[177.72782898 216.93696594]
[198.03808594 226.42572021]
[197.42469788 248.06642151]
[205.78895569 260.51788330]
[214.15322876 272.96936035]
[222.51750183 285.42083740]
[236.63543701 292.56185913]
[237.30967712 307.44119263]
[245.67393494 319.89266968]
[254.03820801 332.34411621]
[262.40246582 344.79559326]
[276.52041626 351.93664551]
[277.19464111 366.81597900]
[285.55892944 379.26742554]
[293.92318726 391.71890259]
[302.36911011 404.11514282]
[310.89633179 416.45556641]
[319.42352295 428.79602051]
[331.93655396 431.87258911]
[338.78686523 442.31060791]
[336.76336670 454.22460938]
[345.12762451 466.67605591]
[353.49188232 479.12753296]
[361.85617065 491.57901001]
[370.22042847 504.03045654]
[387.45291138 507.09292603]
[396.94393921 521.39465332]
[393.22030640 537.80383301]
[401.74752808 550.14428711]
[410.27474976 562.48474121]
[418.80194092 574.82519531]
[427.32916260 587.16564941]
[435.85638428 599.50604248]
[446.70413208 609.86590576]
[459.42370605 617.81652832]
[472.14324951 625.76721191]
[484.86282349 633.71783447]
[497.58236694 641.66851807]
[510.35391235 649.53533936]
[523.17687988 657.31811523]
[535.99987793 665.10089111]
[548.82281494 672.88366699]
[561.64581299 680.66644287]
[574.46875000 688.44921875]
[587.29174805 696.23199463]
[603.96917725 699.28131104]
[605.65576172 716.15118408]
[589.91210938 722.44189453]
[579.50897217 709.05493164]
[566.68597412 701.27215576]
[553.86303711 693.48944092]
[541.04003906 685.70666504]
[528.21710205 677.92388916]
[515.39410400 670.14111328]
[502.57113647 662.35833740]
[495.23641968 661.57617188]
[489.63171387 654.38806152]
[476.91217041 646.43737793]
[464.19259644 638.48675537]
[451.47305298 630.53613281]
[438.75347900 622.58544922]
[432.84609985 627.20635986]
[421.03134155 636.44818115]
[415.12396240 641.06909180]
[419.77795410 655.32885742]
[424.43197632 669.58862305]
[429.08596802 683.84832764]
[444.23782349 685.37829590]
[457.45422363 692.94445801]
[466.44534302 705.23590088]
[469.65341187 720.12310791]
[466.52261353 735.02673340]
[457.59536743 747.36462402]
[444.41839600 754.99920654]
[429.27465820 756.60778809]
[414.78793335 751.91156006]
[403.46810913 741.72424316]
[397.27642822 727.81079102]
[397.28561401 712.58190918]
[403.49411011 698.67596436]
[414.82623291 688.50231934]
[410.17221069 674.24261475]
[405.51821899 659.98284912]
[400.86422729 645.72314453]
[398.11199951 660.46844482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[12 181]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[22 171]
[23 170]
[24 169]
[26 168]
[27 167]
[28 166]
[30 164]
[31 163]
[32 162]
[33 161]
[35 159]
[36 158]
[37 157]
[38 156]
[44 154]
[45 153]
[46 152]
[48 150]
[49 149]
[51 148]
[52 147]
[53 146]
[55 88]
[56 87]
[57 86]
[58 85]
[62 83]
[63 82]
[64 81]
[65 80]
[68 77]
[69 76]
[91 142]
[92 141]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
[100 133]
[103 132]
[104 131]
[105 130]
[106 129]
[107 128]
[108 127]
[111 123]
[112 122]
[113 121]
[187 214]
[188 213]
[189 212]
[190 211]
[191 210]
[192 208]
[193 207]
[194 206]
[195 205]
[196 204]
[197 203]
[198 202]
[217 237]
[218 236]
[219 235]
[220 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
