%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CACTIN)
} def

/sequence { (\
CCCAGCGCAGGCUUCGGCUAUUGGUGUUGGUGCCGCGGCCACUGGCCCAGCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.029816334 ubox
1 17 0.027663704 ubox
1 24 0.008914619 ubox
1 30 0.012850210 ubox
1 38 0.005531605 ubox
1 45 0.009940984 ubox
2 10 0.030070219 ubox
2 11 0.092229862 ubox
2 16 0.028202653 ubox
2 17 0.028853487 ubox
2 23 0.008905345 ubox
2 24 0.036268238 ubox
2 29 0.009445145 ubox
2 30 0.266085632 ubox
2 37 0.005163105 ubox
2 38 0.012543398 ubox
2 44 0.008230271 ubox
2 45 0.160267007 ubox
3 10 0.093117958 ubox
3 16 0.029164780 ubox
3 23 0.036476884 ubox
3 26 0.011939990 ubox
3 29 0.267738865 ubox
3 37 0.012071905 ubox
3 44 0.162023326 ubox
4 13 0.596583832 ubox
4 14 0.028489272 ubox
4 19 0.013803826 ubox
4 22 0.035453914 ubox
4 25 0.014271937 ubox
4 28 0.267739950 ubox
4 43 0.162624242 ubox
5 12 0.638330094 ubox
5 13 0.005069859 ubox
5 18 0.015553853 ubox
5 21 0.030762222 ubox
5 25 0.010425710 ubox
5 27 0.267902512 ubox
5 33 0.013173681 ubox
5 36 0.030786721 ubox
5 39 0.074828084 ubox
5 42 0.161086983 ubox
5 46 0.047769447 ubox
5 51 0.092901758 ubox
6 11 0.638326242 ubox
6 17 0.015481762 ubox
6 23 0.015508385 ubox
6 24 0.010958644 ubox
6 26 0.268018055 ubox
6 32 0.013204307 ubox
6 35 0.030797158 ubox
6 37 0.153294920 ubox
6 38 0.057620218 ubox
6 44 0.006630200 ubox
6 45 0.047770483 ubox
6 50 0.093041299 ubox
6 53 0.022741579 ubox
7 18 0.020723733 ubox
7 22 0.014952847 ubox
7 25 0.265069704 ubox
7 31 0.013194096 ubox
7 33 0.003214162 ubox
7 34 0.013776329 ubox
7 36 0.212096738 ubox
7 39 0.021045702 ubox
7 43 0.009379107 ubox
7 46 0.010478259 ubox
7 51 0.041508430 ubox
7 52 0.012851052 ubox
8 17 0.020746467 ubox
8 23 0.109705846 ubox
8 24 0.244282674 ubox
8 30 0.013146221 ubox
8 32 0.004445660 ubox
8 35 0.211546452 ubox
8 38 0.021022087 ubox
8 44 0.037561168 ubox
8 45 0.009660201 ubox
8 50 0.042099152 ubox
9 19 0.024183877 ubox
9 22 0.143384106 ubox
9 31 0.004133982 ubox
9 43 0.035818934 ubox
10 18 0.020868524 ubox
10 19 0.232942415 ubox
10 21 0.060168522 ubox
10 22 0.026394363 ubox
10 28 0.010285628 ubox
10 34 0.222021361 ubox
10 40 0.187286892 ubox
10 42 0.017733919 ubox
10 47 0.078188626 ubox
10 48 0.008585031 ubox
10 52 0.639450509 ubox
11 18 0.268654891 ubox
11 21 0.008021213 ubox
11 27 0.013032300 ubox
11 33 0.222542667 ubox
11 39 0.188403664 ubox
11 46 0.078534919 ubox
11 47 0.006136527 ubox
11 51 0.640324057 ubox
12 17 0.268879850 ubox
12 26 0.013077998 ubox
12 32 0.222483116 ubox
12 38 0.188407885 ubox
12 45 0.078744560 ubox
12 50 0.640014846 ubox
13 30 0.005570847 ubox
13 37 0.184805181 ubox
13 44 0.076624412 ubox
13 49 0.609470287 ubox
13 50 0.018223082 ubox
14 24 0.011126158 ubox
14 30 0.189332648 ubox
14 37 0.003536080 ubox
14 44 0.003667194 ubox
14 49 0.121644728 ubox
15 23 0.013504318 ubox
15 29 0.222232390 ubox
15 35 0.189743410 ubox
15 53 0.592804859 ubox
16 22 0.012404089 ubox
16 28 0.221618501 ubox
16 34 0.190235597 ubox
16 40 0.080347382 ubox
16 47 0.638880541 ubox
16 48 0.033991294 ubox
16 52 0.648667972 ubox
17 21 0.008068312 ubox
17 25 0.011929979 ubox
17 27 0.222077555 ubox
17 31 0.007357730 ubox
17 33 0.190210265 ubox
17 39 0.080594968 ubox
17 46 0.640261198 ubox
17 47 0.024170122 ubox
17 51 0.648798532 ubox
18 24 0.012734701 ubox
18 26 0.222155183 ubox
18 30 0.011805200 ubox
18 32 0.187888201 ubox
18 38 0.080587275 ubox
18 45 0.640708988 ubox
18 50 0.647046032 ubox
19 23 0.011902415 ubox
19 26 0.004350650 ubox
19 29 0.021091204 ubox
19 32 0.027790500 ubox
19 37 0.078000491 ubox
19 44 0.639678488 ubox
19 49 0.469724310 ubox
20 25 0.015709774 ubox
20 27 0.010497900 ubox
20 28 0.022757981 ubox
20 31 0.143358499 ubox
20 43 0.617570686 ubox
21 26 0.011871419 ubox
21 30 0.146121325 ubox
21 45 0.019789445 ubox
21 50 0.050346009 ubox
22 29 0.133227604 ubox
22 35 0.087869581 ubox
22 41 0.629084283 ubox
22 44 0.024378638 ubox
22 49 0.441183456 ubox
22 53 0.015573647 ubox
23 28 0.084052031 ubox
23 31 0.003617745 ubox
23 34 0.103940313 ubox
23 36 0.004373671 ubox
23 40 0.635579664 ubox
23 43 0.067162967 ubox
23 47 0.157181887 ubox
23 48 0.625785001 ubox
23 52 0.026549310 ubox
24 33 0.103978866 ubox
24 36 0.013730506 ubox
24 39 0.634082509 ubox
24 42 0.077677461 ubox
24 46 0.157146410 ubox
24 47 0.625892574 ubox
24 51 0.025958908 ubox
25 32 0.101862579 ubox
25 35 0.015453550 ubox
25 37 0.206473454 ubox
25 38 0.593143681 ubox
25 41 0.076577202 ubox
25 44 0.018197002 ubox
25 45 0.154058054 ubox
25 50 0.024277038 ubox
25 53 0.003789784 ubox
26 31 0.050393973 ubox
26 33 0.104591581 ubox
26 34 0.021436528 ubox
26 36 0.292995134 ubox
26 39 0.067984606 ubox
26 40 0.055682556 ubox
26 42 0.055928799 ubox
26 43 0.020806640 ubox
26 46 0.625921500 ubox
26 51 0.047952179 ubox
26 52 0.004732196 ubox
27 32 0.103400941 ubox
27 35 0.255929064 ubox
27 38 0.100574146 ubox
27 41 0.039687615 ubox
27 45 0.625589879 ubox
27 50 0.049159715 ubox
28 35 0.464214171 ubox
28 37 0.211485539 ubox
28 41 0.136933444 ubox
28 44 0.615862644 ubox
28 49 0.055557423 ubox
28 53 0.006403342 ubox
29 34 0.503032192 ubox
29 36 0.238611992 ubox
29 40 0.151309987 ubox
29 43 0.625518703 ubox
29 48 0.057164878 ubox
29 52 0.012661831 ubox
30 36 0.036845385 ubox
30 39 0.151465458 ubox
30 42 0.628395679 ubox
30 47 0.057170073 ubox
30 51 0.013360301 ubox
31 35 0.035991271 ubox
31 37 0.015245380 ubox
31 38 0.150049715 ubox
31 41 0.626777410 ubox
31 49 0.016332130 ubox
31 50 0.013321324 ubox
31 53 0.027905946 ubox
32 36 0.017718468 ubox
32 39 0.433401701 ubox
32 40 0.455484839 ubox
32 46 0.059234776 ubox
32 48 0.018142175 ubox
32 51 0.156804448 ubox
32 52 0.044009407 ubox
33 38 0.610517824 ubox
33 45 0.059254752 ubox
33 50 0.157820250 ubox
34 44 0.059174491 ubox
34 53 0.044952766 ubox
35 43 0.048738710 ubox
35 46 0.007557557 ubox
35 51 0.182763291 ubox
35 52 0.036559185 ubox
36 44 0.003323648 ubox
36 45 0.007507192 ubox
36 50 0.184994065 ubox
36 53 0.024112761 ubox
37 43 0.009149762 ubox
37 47 0.308276472 ubox
37 48 0.042698685 ubox
37 52 0.028372483 ubox
38 42 0.010928409 ubox
38 46 0.314572898 ubox
38 47 0.030545256 ubox
38 51 0.028547747 ubox
39 45 0.316036255 ubox
39 50 0.028167121 ubox
40 44 0.313739785 ubox
42 50 0.014954198 ubox
43 49 0.017098780 ubox
43 53 0.099357042 ubox
44 48 0.016897694 ubox
44 52 0.179866070 ubox
45 51 0.180269708 ubox
46 50 0.179027340 ubox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
12 50 0.9500000 lbox
13 49 0.9500000 lbox
16 47 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
19 44 0.9500000 lbox
20 43 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
showpage
end
%%EOF
