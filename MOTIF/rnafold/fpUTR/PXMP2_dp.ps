%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PXMP2)
} def

/sequence { (\
GGGCUCCGCGCCCGGCCAGCCUGAGGUGGGGUCGGUGCCCCCGGCGGCACGGCGCUGGGGAGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.049575493 ubox
1 12 0.005169447 ubox
1 13 0.100774477 ubox
1 33 0.004183997 ubox
1 39 0.033463770 ubox
1 40 0.501663540 ubox
2 6 0.048836514 ubox
2 11 0.005499929 ubox
2 12 0.102585768 ubox
2 32 0.003307665 ubox
2 33 0.048876638 ubox
2 38 0.037471936 ubox
2 39 0.774255570 ubox
2 40 0.003513378 ubox
3 9 0.017354024 ubox
3 11 0.102792372 ubox
3 32 0.049115824 ubox
3 36 0.007392687 ubox
3 38 0.972339778 ubox
3 64 0.135377745 ubox
4 8 0.017250706 ubox
4 10 0.102719199 ubox
4 31 0.049148173 ubox
4 35 0.006742357 ubox
4 37 0.972650428 ubox
4 59 0.004610085 ubox
4 60 0.029686052 ubox
4 62 0.036351784 ubox
4 63 0.133228744 ubox
5 30 0.044831712 ubox
5 34 0.005338208 ubox
5 35 0.005723609 ubox
5 58 0.004513965 ubox
5 59 0.030282878 ubox
5 61 0.043228529 ubox
5 62 0.121269890 ubox
5 63 0.003965193 ubox
6 29 0.044806358 ubox
6 30 0.020091993 ubox
6 31 0.008030651 ubox
6 34 0.006063352 ubox
6 35 0.977579701 ubox
6 57 0.004602639 ubox
6 58 0.031670130 ubox
6 59 0.005947178 ubox
6 60 0.043439639 ubox
6 62 0.026061829 ubox
6 63 0.020694864 ubox
7 28 0.044388990 ubox
7 29 0.020153268 ubox
7 30 0.008293831 ubox
7 34 0.979230852 ubox
7 37 0.007425435 ubox
7 57 0.031674936 ubox
7 58 0.006152028 ubox
7 59 0.042453681 ubox
7 62 0.021614510 ubox
7 65 0.050951740 ubox
8 27 0.040039257 ubox
8 32 0.005956577 ubox
8 33 0.975992906 ubox
8 36 0.008137687 ubox
8 38 0.136721952 ubox
8 55 0.039831792 ubox
8 56 0.007573186 ubox
8 64 0.056250855 ubox
9 26 0.039307375 ubox
9 28 0.022623878 ubox
9 31 0.027558246 ubox
9 34 0.020221182 ubox
9 35 0.007563380 ubox
9 37 0.136994153 ubox
9 54 0.040400002 ubox
9 57 0.031470329 ubox
9 63 0.056210005 ubox
9 65 0.005952694 ubox
10 27 0.029226837 ubox
10 32 0.967713694 ubox
10 33 0.022052598 ubox
10 36 0.136504018 ubox
10 38 0.075267098 ubox
10 53 0.040420470 ubox
10 55 0.031189651 ubox
10 56 0.007016418 ubox
10 64 0.006564747 ubox
11 26 0.030665385 ubox
11 29 0.005894127 ubox
11 30 0.079163786 ubox
11 31 0.976350014 ubox
11 35 0.111656758 ubox
11 37 0.075412177 ubox
11 52 0.037495803 ubox
11 54 0.031883644 ubox
11 63 0.006557980 ubox
12 25 0.031226286 ubox
12 28 0.005826613 ubox
12 29 0.079137282 ubox
12 30 0.976380751 ubox
12 34 0.079254770 ubox
12 35 0.110228820 ubox
12 51 0.034261254 ubox
12 52 0.035371966 ubox
12 62 0.005557194 ubox
13 23 0.034880212 ubox
13 28 0.078987160 ubox
13 29 0.976294794 ubox
13 34 0.137333923 ubox
13 51 0.038461773 ubox
14 21 0.037164730 ubox
14 22 0.032427917 ubox
14 27 0.055650854 ubox
14 33 0.172614846 ubox
14 50 0.041163386 ubox
15 20 0.037056284 ubox
15 21 0.032155015 ubox
15 27 0.976302944 ubox
15 32 0.172764239 ubox
15 36 0.066463635 ubox
15 48 0.050325108 ubox
15 64 0.021553305 ubox
16 26 0.979548900 ubox
16 29 0.005591960 ubox
16 30 0.016891076 ubox
16 31 0.172276499 ubox
16 35 0.069533081 ubox
16 47 0.050357717 ubox
16 63 0.021589991 ubox
17 23 0.015541624 ubox
17 25 0.978901526 ubox
17 28 0.006550410 ubox
17 29 0.021653059 ubox
17 30 0.171381556 ubox
17 34 0.069582103 ubox
17 46 0.050166176 ubox
17 62 0.021564448 ubox
18 22 0.025087920 ubox
18 27 0.005958310 ubox
19 27 0.162475145 ubox
19 32 0.069722922 ubox
19 38 0.019437344 ubox
19 45 0.050240825 ubox
20 26 0.163714084 ubox
20 29 0.055970482 ubox
20 30 0.004737924 ubox
20 31 0.070177057 ubox
20 37 0.019481207 ubox
20 44 0.050090881 ubox
21 25 0.162539583 ubox
21 28 0.056246271 ubox
21 29 0.005911341 ubox
21 30 0.070161651 ubox
21 35 0.019571660 ubox
21 43 0.049861364 ubox
21 44 0.004992062 ubox
22 28 0.005956473 ubox
22 29 0.069323881 ubox
22 34 0.019567542 ubox
22 43 0.006482094 ubox
23 33 0.019679030 ubox
23 42 0.025197920 ubox
24 32 0.019482302 ubox
25 41 0.012928028 ubox
25 42 0.036849366 ubox
26 40 0.012742095 ubox
26 41 0.035550691 ubox
28 39 0.012955855 ubox
28 40 0.034050484 ubox
28 41 0.032137386 ubox
28 42 0.008003359 ubox
29 38 0.012953668 ubox
29 39 0.033955218 ubox
29 40 0.033738057 ubox
29 41 0.007836522 ubox
30 38 0.033820752 ubox
30 39 0.033970335 ubox
30 40 0.007657418 ubox
31 38 0.034129267 ubox
31 39 0.007453842 ubox
32 37 0.032082048 ubox
34 64 0.005133349 ubox
35 50 0.011159860 ubox
35 64 0.079865199 ubox
36 49 0.011348565 ubox
36 63 0.080157296 ubox
36 65 0.056066724 ubox
37 48 0.011370504 ubox
37 64 0.114039114 ubox
38 47 0.011363043 ubox
38 60 0.006701660 ubox
38 63 0.114000949 ubox
39 46 0.011336180 ubox
39 59 0.006764558 ubox
39 60 0.622232365 ubox
39 62 0.085646323 ubox
40 58 0.006224990 ubox
40 59 0.860008180 ubox
40 60 0.063488739 ubox
40 62 0.003612623 ubox
41 52 0.019519824 ubox
41 57 0.004732077 ubox
41 58 0.995627620 ubox
41 59 0.063355242 ubox
41 60 0.018047556 ubox
41 63 0.006586872 ubox
42 51 0.019731188 ubox
42 57 0.997089532 ubox
42 58 0.047606791 ubox
42 59 0.017660016 ubox
42 62 0.006604115 ubox
43 50 0.019703113 ubox
43 56 0.997329962 ubox
44 53 0.003431251 ubox
44 55 0.998326003 ubox
45 52 0.003607338 ubox
45 54 0.998269402 ubox
45 57 0.015611795 ubox
46 53 0.988347440 ubox
46 56 0.015770157 ubox
47 53 0.120306064 ubox
47 55 0.015809677 ubox
48 52 0.168661601 ubox
48 54 0.015802388 ubox
53 65 0.018203239 ubox
54 64 0.019816640 ubox
55 63 0.019756151 ubox
56 62 0.019461984 ubox
2 39 0.9500000 lbox
3 38 0.9500000 lbox
4 37 0.9500000 lbox
6 35 0.9500000 lbox
7 34 0.9500000 lbox
8 33 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
40 59 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
showpage
end
%%EOF
