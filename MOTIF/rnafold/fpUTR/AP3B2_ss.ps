%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCCUUUAAGACCUCAGCGCGCGGCCCUGAUUGAGAAAUCCGCGCGCAGCCUCCGCCGCUGCACACUGCAGCCUCUGCUGAACCCCUGCCGCGCCGCCGCCUUCGCCAGCCCGGACCGGACCGGCCCGCCUUCCCUUCCUCCGCUCCAGCCGGCCUCCGGCCCCGCAACCUCCUCCUCGGCGAAGUCUCCCUGGCCGCCCC\
) } def
/len { sequence length } bind def

/coor [
[45.66852570 300.50259399]
[40.65959930 314.64157104]
[35.65067291 328.78054810]
[30.64174461 342.91952515]
[41.71606827 353.37319946]
[47.57508469 367.42993164]
[47.20367813 382.65432739]
[40.66620636 396.40866089]
[29.09531593 406.30987549]
[14.49574089 410.64257812]
[-0.60305679 408.65606689]
[-13.58511925 400.69454956]
[-22.20122528 388.13739014]
[-24.95858383 373.16015625]
[-21.37946320 358.35781860]
[-12.08396912 346.29489136]
[1.31739700 339.06143188]
[16.50276947 337.91061401]
[21.51169586 323.77163696]
[26.52062225 309.63265991]
[31.52954865 295.49368286]
[36.09852219 281.20645142]
[40.22316360 266.78469849]
[44.34780502 252.36293030]
[48.47244644 237.94116211]
[52.59708786 223.51939392]
[56.72172928 209.09762573]
[48.30416489 201.76036072]
[43.21205139 191.76484680]
[42.21622849 180.53976440]
[45.49895096 169.70565796]
[52.62197876 160.84106445]
[62.58470154 155.25241089]
[73.96456146 153.78166199]
[78.75408173 139.56686401]
[83.54360199 125.35207367]
[88.33312988 111.13727570]
[78.38866425 122.36704254]
[63.39046097 122.59921265]
[53.10316849 111.68264008]
[54.22437286 96.72460175]
[66.02410889 87.46360016]
[80.81974030 89.92881012]
[68.14984894 81.89924622]
[55.47995377 73.86968994]
[42.81006241 65.84012604]
[30.14017105 57.81056976]
[17.40852547 49.87928772]
[4.61589241 42.04675674]
[-8.17674160 34.21422577]
[-26.40825462 39.34622955]
[-42.33187485 29.69365120]
[-46.08419800 11.78090286]
[-59.11309433 4.34801531]
[-74.93386078 4.23023891]
[-82.15465546 -8.79701996]
[-95.18354797 -16.22990799]
[-116.56130981 -14.80578041]
[-126.22596741 -33.03816605]
[-139.58578491 -39.85836411]
[-152.94561768 -46.67855835]
[-166.30543518 -53.49875641]
[-179.66526794 -60.31895447]
[-193.02508545 -67.13915253]
[-209.88143921 -68.95568085]
[-212.80220032 -85.65614319]
[-197.56294250 -93.08591461]
[-186.20489502 -80.49897766]
[-172.84506226 -73.67877960]
[-159.48524475 -66.85858154]
[-146.12542725 -60.03838348]
[-132.76559448 -53.21818542]
[-119.40576935 -46.39799118]
[-111.50778961 -50.47878265]
[-102.48023987 -50.46372223]
[-94.35173035 -46.22955704]
[-89.00706482 -38.61528778]
[-87.75066376 -29.25880623]
[-74.72176361 -21.82591820]
[-59.83290863 -22.23979187]
[-51.68020630 -8.68088245]
[-38.65130997 -1.24799430]
[-28.55324364 -6.57396603]
[-17.01882362 -6.35880184]
[-6.91859198 -0.54026008]
[-0.82202291 9.53504181]
[-0.34421164 21.42159271]
[12.44842243 29.25412178]
[25.24105644 37.08665085]
[32.59181213 37.89881516]
[38.16973114 45.14067841]
[50.83962250 53.17023849]
[63.50951385 61.19979858]
[76.17940521 69.22935486]
[88.84929657 77.25891876]
[88.92096710 62.25909042]
[98.84376526 51.01017761]
[113.71741486 49.06734848]
[126.19670105 57.39004898]
[130.11885071 71.86819458]
[123.54695129 85.35189056]
[109.72857666 91.18225861]
[124.24219513 87.39347839]
[138.75581360 83.60470581]
[153.26943970 79.81592560]
[167.78305054 76.02715302]
[182.29667664 72.23837280]
[196.81028748 68.44959259]
[205.35437012 60.55967331]
[215.61473083 61.78786469]
[229.27668762 55.59505844]
[234.91885376 41.07597351]
[248.86224365 34.99020767]
[262.66918945 40.45862198]
[276.33114624 34.26581192]
[282.86047363 27.86848068]
[290.25277710 28.08470535]
[304.00894165 22.10406113]
[317.76510620 16.12341690]
[331.52127075 10.14277172]
[345.27740479 4.16212702]
[358.93936157 -2.03068066]
[372.50387573 -8.43416882]
[386.06835938 -14.83765697]
[399.63284302 -21.24114418]
[413.19732666 -27.64463234]
[418.90209961 -45.70511246]
[435.70541382 -53.72901535]
[452.74282837 -47.04522324]
[466.10266113 -53.86542130]
[465.25173950 -69.07054901]
[470.66491699 -83.30491638]
[481.40435791 -94.10233307]
[495.60937500 -99.59209442]
[510.81884766 -98.82305145]
[524.39770508 -91.92845154]
[533.99322510 -80.10282135]
[537.94299316 -65.39503479]
[535.56268311 -50.35329056]
[527.26470947 -37.58366776]
[514.48669434 -29.29858208]
[499.44256592 -26.93347359]
[484.73876953 -30.89811134]
[472.92285156 -40.50559616]
[459.56301880 -33.68539810]
[458.48010254 -22.32035637]
[451.97573853 -12.79239368]
[441.57174683 -7.53620005]
[429.80322266 -7.96219683]
[419.60083008 -14.08014488]
[406.03631592 -7.67665672]
[392.47183228 -1.27316844]
[378.90734863 5.13031960]
[365.34286499 11.53380775]
[362.91445923 15.65297985]
[357.86959839 18.28701210]
[351.25805664 17.91828537]
[337.50189209 23.89892960]
[323.74575806 29.87957573]
[309.98959351 35.86021805]
[296.23342896 41.84086227]
[282.52395630 47.92777252]
[268.86199951 54.12057877]
[263.87432861 68.10838318]
[250.10737610 74.58338928]
[235.46949768 69.25701904]
[221.80754089 75.44982147]
[236.49667358 78.48777008]
[248.55661011 87.40729523]
[255.76264954 100.56301880]
[256.78549194 115.52810669]
[251.43643188 129.54194641]
[240.70225525 140.01940918]
[226.56304932 145.02770996]
[211.62710571 143.64299011]
[198.64964294 136.12066650]
[190.02461243 123.84838104]
[187.34306335 109.09001923]
[191.09968567 94.56803894]
[200.59907532 82.96321106]
[186.08544922 86.75199127]
[171.57183838 90.54077148]
[157.05821228 94.32954407]
[142.54458618 98.11832428]
[128.03097534 101.90710449]
[113.51734924 105.69587708]
[102.54792786 115.92679596]
[97.75839996 130.14160156]
[92.96887970 144.35639954]
[88.17935944 158.57119751]
[99.91387177 173.68333435]
[100.17495728 192.66461182]
[89.03796387 207.85179138]
[71.14349365 213.22227478]
[67.01885223 227.64404297]
[62.89421082 242.06581116]
[58.76956940 256.48757935]
[54.64492798 270.90933228]
[50.52028656 285.33111572]
[51.72808456 289.51696777]
[51.55461502 293.47067261]
[50.24331284 296.78552246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[3 19]
[4 18]
[22 199]
[23 198]
[24 197]
[25 196]
[26 195]
[27 194]
[34 190]
[35 189]
[36 188]
[37 187]
[43 95]
[44 94]
[45 93]
[46 92]
[47 91]
[48 89]
[49 88]
[50 87]
[53 82]
[54 81]
[56 79]
[57 78]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[102 186]
[103 185]
[104 184]
[105 183]
[106 182]
[107 181]
[108 180]
[110 167]
[111 166]
[114 163]
[115 162]
[117 161]
[118 160]
[119 159]
[120 158]
[121 157]
[122 154]
[123 153]
[124 152]
[125 151]
[126 150]
[129 145]
[130 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
