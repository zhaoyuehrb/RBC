%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCUGCAGUGCGAACCUGGGAAAUCCAGGCGACUUCGCAGUUGCCGAAGGGAUCUGAAGAAGUGGGAUGUGCAAAAGCGCCGGCUGGAAAUCCCGGCUGUGUCUCCGUCAACUCUUUACGCAACAGAGGUCUCCCCCUGCCCUUGGUUUCUACCGGGCCGCCUGCUCCCACUCGGCGAAAAAAAUUACACAACAGCAGCCGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[168.00100708 251.18568420]
[162.97787476 245.48434448]
[159.65153503 238.62266541]
[158.27751160 231.09468079]
[158.97015381 223.44668579]
[161.69331360 216.23764038]
[166.26190186 209.99827576]
[158.72937012 197.02673340]
[151.19685364 184.05517578]
[143.66433716 171.08363342]
[137.58604431 166.87727356]
[136.11776733 157.86000061]
[128.78106689 144.77670288]
[121.44437408 131.69338989]
[108.41367340 135.46714783]
[95.54347992 134.34843445]
[84.52552032 128.94427490]
[74.61768341 140.20637512]
[64.70985413 151.46847534]
[54.80202103 162.73057556]
[44.89418793 173.99267578]
[44.47932434 190.03036499]
[31.59551620 199.59001160]
[16.12611580 195.33828735]
[9.93792248 180.53674316]
[17.77799034 166.53985596]
[33.63208771 164.08483887]
[43.53992081 152.82273865]
[53.44775772 141.56063843]
[63.35559082 130.29853821]
[73.26342010 119.03644562]
[67.20197296 98.76690674]
[74.76828766 79.00972748]
[65.73406219 67.03546906]
[56.69983673 55.06121826]
[47.66561127 43.08696365]
[38.63138199 31.11271095]
[29.59715652 19.13845634]
[18.75408745 18.25574684]
[10.36018372 11.68581581]
[7.03868151 1.78854036]
[9.65768051 -8.09036064]
[0.98746538 -20.33075905]
[-7.68275023 -32.57115936]
[-16.35296631 -44.81155777]
[-25.02318192 -57.05195618]
[-41.92767334 -64.35217285]
[-42.87083435 -81.87513733]
[-51.72405624 -93.98383331]
[-60.57727814 -106.09252167]
[-69.43049622 -118.20121765]
[-78.28372192 -130.30990601]
[-87.13694000 -142.41860962]
[-97.96551514 -143.46420288]
[-106.25971985 -150.15956116]
[-109.43208313 -160.10563660]
[-106.66488647 -169.94406128]
[-115.15013885 -182.31340027]
[-123.63539124 -194.68273926]
[-128.91462708 -180.64244080]
[-143.13494873 -175.86936951]
[-155.81602478 -183.88127136]
[-157.61192322 -198.77337646]
[-147.19906616 -209.57023621]
[-132.25215149 -208.31486511]
[-139.78466797 -221.28640747]
[-147.31718445 -234.25796509]
[-154.94699097 -247.17253113]
[-162.67362976 -260.02938843]
[-170.40026855 -272.88626099]
[-179.96510315 -284.44110107]
[-191.15242004 -294.43328857]
[-202.33973694 -304.42547607]
[-213.52705383 -314.41766357]
[-229.68301392 -317.23138428]
[-235.06941223 -332.72070312]
[-224.14517212 -344.95153809]
[-208.14822388 -341.34185791]
[-203.53485107 -325.60498047]
[-192.34754944 -315.61279297]
[-181.16023254 -305.62060547]
[-169.97291565 -295.62838745]
[-157.66769409 -304.20639038]
[-163.17279053 -318.15966797]
[-168.67788696 -332.11294556]
[-174.18298340 -346.06622314]
[-179.68806458 -360.01950073]
[-185.19316101 -373.97277832]
[-190.69825745 -387.92605591]
[-204.78231812 -395.60842896]
[-207.41522217 -411.43395996]
[-196.57725525 -423.26263428]
[-180.58235168 -422.02053833]
[-171.70045471 -408.66046143]
[-176.74497986 -393.43112183]
[-171.23988342 -379.47784424]
[-165.73478699 -365.52456665]
[-160.22970581 -351.57128906]
[-154.72460938 -337.61801147]
[-149.21951294 -323.66473389]
[-143.71441650 -309.71145630]
[-145.92475891 -290.06072998]
[-157.54341125 -280.61291504]
[-149.81677246 -267.75604248]
[-142.09011841 -254.89918518]
[-135.94927979 -250.78466797]
[-134.34564209 -241.79048157]
[-126.81311798 -228.81893921]
[-119.28059387 -215.84738159]
[-111.26605225 -203.16798401]
[-102.78079987 -190.79864502]
[-94.29554749 -178.42930603]
[-76.28724670 -171.38989258]
[-75.02824402 -151.27183533]
[-66.17502594 -139.16313171]
[-57.32180405 -127.05444336]
[-48.46858215 -114.94574738]
[-39.61536026 -102.83705139]
[-30.76214027 -90.72835541]
[-18.86010933 -88.56230164]
[-11.38539505 -78.54544830]
[-12.78278255 -65.72216797]
[-4.11256695 -53.48177338]
[4.55764866 -41.24137497]
[13.22786427 -29.00097466]
[21.89807892 -16.76057625]
[40.01015472 -9.99263763]
[41.57141113 10.10422993]
[50.60563660 22.07848358]
[59.63986206 34.05273819]
[68.67408752 46.02699280]
[77.70831299 58.00124359]
[86.74254608 69.97550201]
[93.98582458 67.04237366]
[101.87282562 65.86879730]
[109.97351837 66.59381866]
[117.82862854 69.25087738]
[124.97566223 73.76194763]
[130.97601318 79.93800354]
[135.44158936 87.48621368]
[138.05941772 96.02343750]
[152.79541016 93.22158051]
[167.53140259 90.41971588]
[182.26741028 87.61785889]
[187.51779175 83.59564209]
[193.16368103 82.92990875]
[197.48805237 84.96025085]
[212.30162048 82.60260010]
[227.11517334 80.24494934]
[239.50418091 69.50043488]
[254.91320801 75.11237335]
[257.49078369 91.30768585]
[244.58529663 101.42602539]
[229.47282410 95.05850220]
[214.65927124 97.41615295]
[199.84570312 99.77380371]
[185.06925964 102.35385132]
[170.33326721 105.15571594]
[155.59727478 107.95757294]
[140.86128235 110.75943756]
[134.52767944 124.35669708]
[141.86437988 137.44000244]
[149.20106506 150.52331543]
[156.63587952 163.55110168]
[164.16841125 176.52265930]
[171.70092773 189.49420166]
[179.23344421 202.46575928]
[201.97937012 206.31954956]
[214.28862000 225.51269531]
[208.44274902 247.27342224]
[217.29595947 259.38211060]
[228.12454224 260.42770386]
[236.41874695 267.12307739]
[239.59111023 277.06915283]
[236.82391357 286.90756226]
[245.30915833 299.27691650]
[253.79441833 311.64624023]
[262.27966309 324.01556396]
[276.56701660 319.13964844]
[291.64010620 318.30038452]
[306.38043213 321.56002808]
[319.69415283 328.67669678]
[330.59332275 339.12228394]
[338.26916504 352.12170410]
[342.15200806 366.71023560]
[341.95379639 381.80538940]
[337.68920898 396.28695679]
[329.67471313 409.08032227]
[318.50500488 419.23614502]
[305.00900269 426.00076294]
[290.18817139 428.87222290]
[275.14230347 427.63745117]
[260.98791504 422.38806152]
[248.77537537 413.51358032]
[239.41090393 401.67257690]
[233.58943176 387.74374390]
[231.74293518 372.76065063]
[234.00843811 357.83514404]
[240.21783447 344.07485962]
[249.91032410 332.50082397]
[241.42507935 320.13150024]
[232.93981934 307.76214600]
[224.45457458 295.39282227]
[206.44627380 288.35339355]
[205.18727112 268.23532104]
[196.33404541 256.12664795]
[189.04893494 257.86984253]
[181.53610229 257.59936523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 167]
[8 166]
[9 165]
[10 164]
[12 163]
[13 162]
[14 161]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[33 133]
[34 132]
[35 131]
[36 130]
[37 129]
[38 128]
[42 126]
[43 125]
[44 124]
[45 123]
[46 122]
[48 119]
[49 118]
[50 117]
[51 116]
[52 115]
[53 114]
[57 112]
[58 111]
[59 110]
[65 109]
[66 108]
[67 107]
[68 105]
[69 104]
[70 103]
[71 82]
[72 81]
[73 80]
[74 79]
[83 101]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[141 160]
[142 159]
[143 158]
[144 157]
[147 156]
[148 155]
[149 154]
[170 206]
[171 205]
[175 203]
[176 202]
[177 201]
[178 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
