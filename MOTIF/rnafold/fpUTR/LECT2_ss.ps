%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUCAAAUAGCUAUCCAUGGAAUAUUAGAACUUGACUUGCUCCAUCCUCUUAAACUUUUUGUGUCUCACACUAAAGAAAUGAGAGAUGCAGAAUUCUAAGGCUAAAUAGCUAGGAAGUAUUCAUUCAAACUUGAAUAUUCUUCAAAGAGAGUGUGGGGGCAACUCUAAUCAGAGGAAGAAACUAAAGGAAGUAAAACCAG\
) } def
/len { sequence length } bind def

/coor [
[72.97745514 563.34191895]
[58.10779953 560.62438965]
[44.70052719 553.64324951]
[33.94779968 543.01922607]
[26.80574417 529.69696045]
[23.90942955 514.86108398]
[25.51639175 499.83084106]
[31.48373985 485.94262695]
[41.28086472 474.43142700]
[54.03660583 466.32080078]
[68.61673737 462.33190918]
[69.08323669 447.33917236]
[69.54973602 432.34643555]
[66.61345673 425.55813599]
[70.14187622 417.12466431]
[70.84148407 402.14099121]
[71.54108429 387.15731812]
[63.74356842 399.97131348]
[49.81237411 405.53204346]
[34.91710663 407.30154419]
[20.07085037 405.15942383]
[6.28334522 399.25140381]
[-5.50767326 389.97930908]
[-14.50025749 377.97375488]
[-20.08279037 364.05126953]
[-21.87558746 349.15878296]
[-19.75671196 334.30920410]
[-13.87027550 320.51248169]
[-4.61663723 308.70693970]
[7.37483311 299.69558716]
[21.28855515 294.09127808]
[36.17820740 292.27517700]
[51.03109741 294.37081909]
[64.83702850 300.23565674]
[76.65701294 309.47079468]
[85.68712616 321.44815063]
[91.31314087 335.35281372]
[98.70837402 348.40313721]
[98.47509766 333.40493774]
[98.24182129 318.40673828]
[98.00854492 303.40856934]
[97.77526093 288.41036987]
[97.54198456 273.41220093]
[97.30870819 258.41400146]
[96.95880890 243.41809082]
[96.49231720 228.42533875]
[88.36293793 215.94485474]
[95.66731262 201.91073608]
[95.20081329 186.91798401]
[94.73432159 171.92524719]
[94.26782227 156.93249512]
[93.80132294 141.93975830]
[79.09826660 138.52404785]
[66.06996155 129.95776367]
[56.51321793 117.01336670]
[51.88213730 101.08502197]
[53.07587814 84.04084778]
[60.28847885 68.00412750]
[49.76467514 57.31537247]
[39.24087143 46.62660980]
[28.71706963 35.93785095]
[18.19326782 25.24909210]
[7.66946459 14.56033325]
[-2.85433817 3.87157369]
[-13.37814045 -6.81718588]
[-23.90194321 -17.50594521]
[-34.42574692 -28.19470406]
[-44.94954681 -38.88346481]
[-60.14504242 -43.28885651]
[-63.56085587 -57.78649521]
[-74.08465576 -68.47525787]
[-89.16309357 -65.21268463]
[-103.60372925 -70.64144135]
[-112.79862213 -83.02923584]
[-113.81371307 -98.42317200]
[-106.32508087 -111.91108704]
[-92.72232819 -119.18904877]
[-77.34604645 -117.93468475]
[-65.10274506 -108.54824829]
[-59.89921951 -94.02492523]
[-63.39589691 -78.99905396]
[-52.87209320 -68.31029510]
[-38.42933273 -64.66943359]
[-34.26078796 -49.40726852]
[-23.73698616 -38.71850586]
[-13.21318340 -28.02974701]
[-2.68938136 -17.34098816]
[7.83442116 -6.65222883]
[18.35822487 4.03653049]
[28.88202667 14.72529030]
[39.40583038 25.41404915]
[49.92963028 36.10280991]
[60.45343399 46.79156876]
[70.97723389 57.48032761]
[78.13497162 55.24048996]
[73.65529633 40.92502594]
[69.17584229 26.60949326]
[83.49143982 22.13026047]
[87.97075653 36.44535065]
[92.45043182 50.76081467]
[99.60816193 48.52097702]
[102.16181946 33.73994827]
[104.71546936 18.95891762]
[107.26912689 4.17788696]
[101.10233307 -11.01759624]
[111.39071655 -23.78792191]
[127.55046844 -20.99607277]
[132.95782471 -5.51406384]
[122.05015564 6.73154020]
[119.49649811 21.51256943]
[116.94284821 36.29360199]
[114.38919830 51.07463074]
[119.92870331 56.18958282]
[124.34047699 61.83908463]
[127.59120178 67.81160736]
[139.21405029 58.32956314]
[150.83691406 48.84751892]
[162.45976257 39.36547089]
[173.93376160 29.70381546]
[185.25610352 19.86488533]
[196.57844543 10.02595615]
[207.90078735 0.18702745]
[219.22312927 -9.65190125]
[230.54547119 -19.49083138]
[229.06164551 -34.93679810]
[236.96908569 -48.28789520]
[251.22724915 -54.41036224]
[266.35357666 -50.94997787]
[276.53164673 -39.23733139]
[277.84783936 -23.77617836]
[269.79602051 -10.51164436]
[255.47229004 -4.54421425]
[240.38441467 -8.16848660]
[229.06205750 1.67044246]
[217.73971558 11.50937176]
[206.41737366 21.34830093]
[195.09503174 31.18722916]
[183.77268982 41.02615738]
[182.55108643 45.64997482]
[178.40753174 49.55274963]
[171.94181824 50.98832703]
[160.31895447 60.47037506]
[148.69610596 69.95242310]
[137.07324219 79.43446350]
[142.36248779 98.33062744]
[138.57661438 117.58440399]
[126.52667999 133.07116699]
[108.79406738 141.47325134]
[109.26056671 156.46600342]
[109.72706604 171.45874023]
[110.19355774 186.45149231]
[110.66005707 201.44422913]
[118.82279968 214.99710083]
[111.48506165 227.95884705]
[111.95155334 242.95159912]
[115.34838867 251.43893433]
[112.30689240 258.18072510]
[112.54017639 273.17892456]
[112.77345276 288.17709351]
[113.00672913 303.17529297]
[113.24000549 318.17346191]
[113.47328186 333.17166138]
[113.70655823 348.16986084]
[121.07147217 361.23730469]
[133.78118896 369.20364380]
[146.49090576 377.17001343]
[159.20063782 385.13638306]
[175.59968567 385.19030762]
[183.51663208 399.55184937]
[174.80718994 413.44711304]
[158.43089294 412.58181763]
[151.23426819 397.84609985]
[138.52455139 389.87973022]
[125.81482697 381.91339111]
[113.10510254 373.94702148]
[106.46001434 377.42449951]
[113.79457092 390.50900269]
[121.12911987 403.59350586]
[128.46366882 416.67800903]
[140.57574463 425.52661133]
[139.46066284 440.48510742]
[126.17051697 447.44009399]
[113.24460602 439.82952881]
[112.87863159 424.83389282]
[106.30903625 411.34909058]
[99.73944092 397.86425781]
[93.16984558 384.37945557]
[86.52476501 387.85690308]
[85.82515717 402.84060669]
[85.12554932 417.82427979]
[84.54248047 432.81292725]
[84.07598114 447.80566406]
[83.60948181 462.79843140]
[97.91342926 467.68603516]
[110.14025879 476.57397461]
[119.20278931 488.67199707]
[124.29516602 502.90432739]
[124.96459198 518.00543213]
[121.15154266 532.63250732]
[113.19506073 545.48498535]
[101.80264282 555.41998291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 193]
[12 192]
[13 191]
[15 190]
[16 189]
[17 188]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[43 158]
[44 157]
[45 155]
[46 154]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[58 94]
[59 93]
[60 92]
[61 91]
[62 90]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[70 82]
[71 81]
[101 112]
[102 111]
[103 110]
[104 109]
[115 144]
[116 143]
[117 142]
[118 141]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[124 133]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
