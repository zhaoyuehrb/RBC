%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:15:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EIF2AK4)
} def

/sequence { (\
CCCCGCCCCGCAGGCUGCCGGGGGCCCACCGCCGCCCAGGCAAGGCCGCCCUGCCUUGGGCGCAGCGCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.020167077 ubox
1 23 0.076005215 ubox
1 24 0.013035001 ubox
2 21 0.020237363 ubox
2 22 0.079721888 ubox
2 23 0.013169464 ubox
2 24 0.009282982 ubox
3 13 0.003268494 ubox
3 20 0.020192419 ubox
3 21 0.079762120 ubox
3 22 0.012845803 ubox
3 23 0.009073382 ubox
3 24 0.026533455 ubox
4 10 0.010350697 ubox
4 17 0.006488735 ubox
4 20 0.079750919 ubox
4 21 0.012458556 ubox
4 22 0.007828452 ubox
4 23 0.026715144 ubox
4 62 0.025579338 ubox
4 67 0.006995296 ubox
5 9 0.042500502 ubox
5 11 0.006819078 ubox
5 15 0.041366615 ubox
5 18 0.037065830 ubox
5 19 0.062451894 ubox
5 25 0.157686898 ubox
5 61 0.035533176 ubox
5 63 0.007877675 ubox
5 66 0.007207531 ubox
5 71 0.022530805 ubox
6 10 0.007041623 ubox
6 14 0.044553621 ubox
6 17 0.049119104 ubox
6 21 0.007406090 ubox
6 22 0.034877518 ubox
6 23 0.066607255 ubox
6 24 0.155490028 ubox
6 60 0.035443428 ubox
6 62 0.007883823 ubox
6 65 0.007148687 ubox
6 70 0.022386700 ubox
7 13 0.044473353 ubox
7 14 0.040805008 ubox
7 20 0.007300644 ubox
7 21 0.035258306 ubox
7 22 0.074611559 ubox
7 23 0.152938848 ubox
7 59 0.035335374 ubox
7 60 0.008623256 ubox
8 13 0.040917717 ubox
8 14 0.032373176 ubox
8 20 0.035332888 ubox
8 21 0.079775932 ubox
8 22 0.150339533 ubox
8 58 0.035204970 ubox
8 59 0.009062335 ubox
9 13 0.032200394 ubox
9 17 0.006580670 ubox
9 20 0.084564795 ubox
9 21 0.147044035 ubox
9 58 0.009474276 ubox
9 67 0.017983555 ubox
10 16 0.005420681 ubox
10 18 0.154652060 ubox
10 19 0.066299714 ubox
10 54 0.032983125 ubox
10 57 0.009296236 ubox
10 63 0.005368940 ubox
10 66 0.018024390 ubox
10 68 0.014025730 ubox
10 71 0.978100230 ubox
11 17 0.166096000 ubox
11 53 0.032999635 ubox
11 62 0.005366558 ubox
11 65 0.018000885 ubox
11 67 0.013975138 ubox
11 70 0.980112323 ubox
12 16 0.134618624 ubox
12 52 0.032921652 ubox
12 56 0.015376561 ubox
12 69 0.979863744 ubox
13 19 0.040967980 ubox
13 47 0.019998772 ubox
13 50 0.016508881 ubox
13 51 0.027316916 ubox
13 55 0.015544893 ubox
13 68 0.978431378 ubox
14 18 0.040440240 ubox
14 46 0.020898466 ubox
14 49 0.023276372 ubox
14 50 0.021263749 ubox
14 54 0.015535206 ubox
14 63 0.003950897 ubox
14 66 0.979517076 ubox
14 68 0.003398035 ubox
15 44 0.011820247 ubox
15 45 0.021046395 ubox
15 48 0.028440199 ubox
15 53 0.015504611 ubox
15 62 0.003887686 ubox
15 65 0.980249692 ubox
15 67 0.004409717 ubox
16 42 0.035409790 ubox
16 43 0.008856755 ubox
16 44 0.014242400 ubox
16 64 0.979917242 ubox
17 41 0.043658289 ubox
17 46 0.012734810 ubox
17 61 0.004298407 ubox
17 63 0.979971893 ubox
18 40 0.043893814 ubox
18 45 0.012777316 ubox
18 60 0.004575117 ubox
18 62 0.975760718 ubox
19 31 0.086673237 ubox
19 34 0.158270921 ubox
19 39 0.043979911 ubox
19 44 0.012765808 ubox
19 59 0.004857951 ubox
19 62 0.060967809 ubox
20 26 0.003722689 ubox
20 27 0.014602100 ubox
20 30 0.089629124 ubox
20 33 0.946750776 ubox
20 36 0.041105192 ubox
20 37 0.099692156 ubox
20 50 0.021629223 ubox
20 51 0.037737588 ubox
20 61 0.005854168 ubox
21 25 0.003677906 ubox
21 26 0.014568925 ubox
21 27 0.005176512 ubox
21 29 0.089340980 ubox
21 30 0.042423300 ubox
21 32 0.947542917 ubox
21 33 0.109092936 ubox
21 35 0.041391142 ubox
21 36 0.099807719 ubox
21 49 0.021747064 ubox
21 50 0.037777007 ubox
22 26 0.005478694 ubox
22 29 0.043116054 ubox
22 30 0.290273809 ubox
22 32 0.109134149 ubox
22 33 0.031135009 ubox
22 35 0.099721154 ubox
22 37 0.012825808 ubox
22 49 0.037745610 ubox
23 29 0.290437149 ubox
23 30 0.909053052 ubox
23 32 0.030281838 ubox
23 33 0.194036176 ubox
23 36 0.012917516 ubox
23 47 0.049926007 ubox
23 72 0.040333617 ubox
24 29 0.903557626 ubox
24 32 0.194397586 ubox
24 35 0.012958298 ubox
24 46 0.049992348 ubox
24 68 0.006335562 ubox
24 71 0.068442379 ubox
25 31 0.194304430 ubox
25 34 0.012971433 ubox
25 45 0.049867607 ubox
25 67 0.006057845 ubox
25 70 0.067484285 ubox
26 44 0.049657640 ubox
26 45 0.004056675 ubox
27 44 0.005483634 ubox
27 70 0.159593051 ubox
28 69 0.160848355 ubox
29 40 0.006009282 ubox
30 39 0.006021159 ubox
30 67 0.189671391 ubox
31 41 0.049795430 ubox
31 63 0.016407553 ubox
31 66 0.191258110 ubox
31 68 0.010339884 ubox
31 71 0.003427146 ubox
32 40 0.049857511 ubox
32 62 0.011722300 ubox
32 65 0.190438891 ubox
32 67 0.010353982 ubox
32 70 0.003431099 ubox
33 39 0.049849189 ubox
33 62 0.189855041 ubox
34 41 0.003802394 ubox
34 46 0.004644795 ubox
34 61 0.979032643 ubox
35 40 0.003834139 ubox
35 45 0.004744529 ubox
35 59 0.015551967 ubox
35 60 0.992394463 ubox
36 44 0.004710500 ubox
36 58 0.015928678 ubox
36 59 0.992512807 ubox
37 58 0.992361429 ubox
38 56 0.693194883 ubox
38 57 0.706212344 ubox
39 47 0.098712082 ubox
39 50 0.004521443 ubox
39 55 0.983102127 ubox
39 56 0.135407722 ubox
39 72 0.006781979 ubox
40 46 0.098847576 ubox
40 49 0.004585949 ubox
40 54 0.986306067 ubox
40 55 0.110738431 ubox
40 71 0.006857245 ubox
41 45 0.098129433 ubox
41 48 0.004623696 ubox
41 53 0.988875591 ubox
41 58 0.009570349 ubox
41 70 0.006859120 ubox
42 52 0.804276778 ubox
42 57 0.012399051 ubox
42 69 0.006678501 ubox
43 52 0.571766111 ubox
43 56 0.018207686 ubox
43 69 0.005222605 ubox
44 50 0.573493967 ubox
44 51 0.806275588 ubox
44 52 0.010120665 ubox
44 55 0.019203906 ubox
44 68 0.005545901 ubox
44 72 0.006283046 ubox
45 49 0.565252774 ubox
45 50 0.796552106 ubox
45 51 0.014580579 ubox
45 54 0.019485076 ubox
45 63 0.019358099 ubox
45 66 0.010445608 ubox
45 71 0.006339163 ubox
46 53 0.019369543 ubox
46 62 0.013707682 ubox
46 65 0.010406675 ubox
46 70 0.006332571 ubox
47 62 0.021394655 ubox
48 61 0.106743229 ubox
48 68 0.005274355 ubox
49 60 0.106851385 ubox
49 67 0.005273162 ubox
50 59 0.106853446 ubox
51 58 0.106818342 ubox
51 65 0.005260847 ubox
52 62 0.003255624 ubox
52 64 0.005249090 ubox
53 61 0.041219877 ubox
53 63 0.005212295 ubox
54 60 0.041265508 ubox
54 62 0.005196302 ubox
55 59 0.040967266 ubox
62 68 0.004568355 ubox
62 71 0.025627053 ubox
63 67 0.004603563 ubox
63 70 0.026292898 ubox
64 69 0.023694292 ubox
65 71 0.012908848 ubox
66 70 0.012845216 ubox
10 71 0.9500000 lbox
11 70 0.9500000 lbox
12 69 0.9500000 lbox
13 68 0.9500000 lbox
14 66 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
17 63 0.9500000 lbox
18 62 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
34 61 0.9500000 lbox
35 60 0.9500000 lbox
36 59 0.9500000 lbox
37 58 0.9500000 lbox
38 57 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
showpage
end
%%EOF
