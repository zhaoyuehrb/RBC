%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGCGUGCGCAGGCGGGAGCGCGGCGGCUGGUCCAAGCCCGGCGCUGGGGGCGCGCAGCCGAGAAAGGGUUUGACGUGGCAGUUCCCAGCCCAGCUGCAACUCCGAGCGUGAGUCCAGGCUAAGGGGACGCCGGCCGGGGAAGAGGCGCGGCGGGAGAAGCGACCGCAGCGGGAGCCCGGCCACCGAGGGCUGCCGGCACUAGGCGCAGAGCCGCCAGCGCUCGGAAGCCCGCGGGGUGCGGGAGCGGGAACA\
GACUUCUUUUGUAGAAUUAUCCUAUGGAAUGAUAUUUUCAUA\
) } def
/len { sequence length } bind def

/coor [
[434.04965210 631.38848877]
[438.57122803 627.77105713]
[443.42391968 625.83117676]
[435.47216797 613.11230469]
[427.52038574 600.39343262]
[419.56860352 587.67456055]
[406.75823975 586.57305908]
[396.76257324 578.18017578]
[393.36132812 565.37805176]
[398.00762939 552.76611328]
[390.19036865 539.96417236]
[382.37313843 527.16217041]
[369.13681030 520.33215332]
[368.54837036 504.52191162]
[360.73110962 491.71994019]
[352.91387939 478.91793823]
[334.86590576 475.65731812]
[324.80041504 459.94375610]
[329.54489136 441.56454468]
[321.45947266 428.93020630]
[313.37408447 416.29589844]
[305.28866577 403.66156006]
[297.20324707 391.02725220]
[289.11785889 378.39291382]
[280.96594238 365.80139160]
[272.74780273 353.25302124]
[264.52963257 340.70462036]
[256.31149292 328.15625000]
[248.09333801 315.60784912]
[239.87518311 303.05947876]
[231.65702820 290.51107788]
[215.57740784 283.43161011]
[214.75424194 265.01397705]
[206.40425110 252.55293274]
[197.98870850 240.13606262]
[189.50782776 227.76373291]
[175.93002319 221.64060974]
[174.50941467 205.88330078]
[166.02853394 193.51097107]
[149.80322266 186.77207947]
[148.59193420 168.37590027]
[139.98109436 156.09365845]
[131.37025452 143.81141663]
[122.75941467 131.52917480]
[114.14856720 119.24694061]
[81.41452789 114.25866699]
[66.51527405 115.99424744]
[51.61602020 117.72982025]
[36.71676636 119.46540070]
[21.81751442 121.20097351]
[6.91825962 122.93654633]
[-7.98099470 124.67212677]
[-22.88024902 126.40769958]
[-37.77950287 128.14328003]
[-52.63885498 130.19259644]
[-67.45169830 132.55471802]
[-82.26454163 134.91685486]
[-97.06472778 137.35704041]
[-111.85184479 139.87519836]
[-126.63896179 142.39335632]
[-141.41259766 144.98942566]
[-156.17234802 147.66334534]
[-163.76997375 161.33119202]
[-178.39399719 166.86940002]
[-193.13941956 161.66299438]
[-201.04389954 148.17028809]
[-198.37516785 132.76210022]
[-186.39334106 122.71373749]
[-170.75585938 122.76970673]
[-158.84626770 132.90359497]
[-144.08651733 130.22967529]
[-138.09367371 125.96575928]
[-129.15711975 127.60624695]
[-114.37000275 125.08808136]
[-99.58288574 122.56992340]
[-93.54543304 118.36941528]
[-84.62667847 120.10401154]
[-69.81383514 117.74188232]
[-55.00098801 115.37974548]
[-53.25633621 113.24318695]
[-50.58016205 111.65216827]
[-47.17018890 110.95767212]
[-43.34501266 111.43484497]
[-39.51507950 113.24402618]
[-24.61582565 111.50844574]
[-9.71657085 109.77287292]
[5.18268299 108.03729248]
[20.08193779 106.30171967]
[34.98118973 104.56613922]
[49.88044739 102.83056641]
[64.77970123 101.09499359]
[79.67895508 99.35941315]
[87.76436615 86.72509003]
[83.09903717 72.46904755]
[71.45333862 61.75979233]
[74.84843445 47.25728607]
[70.18311310 33.00124359]
[65.51778412 18.74520302]
[60.85246277 4.48915958]
[56.18714142 -9.76688385]
[40.02684784 3.94589019]
[14.12360001 5.13774443]
[-13.29217720 -10.86452484]
[-22.90704536 -22.37774849]
[-32.52191544 -33.89097214]
[-42.13678360 -45.40419388]
[-59.58218384 -51.36614990]
[-61.86142349 -68.78678131]
[-71.59712982 -80.19800568]
[-81.33283997 -91.60923004]
[-96.17593384 -97.08580780]
[-98.55039978 -111.78993225]
[-108.28610992 -123.20115662]
[-123.91420746 -128.17051697]
[-127.15988159 -144.24526978]
[-114.68426514 -154.88908386]
[-99.32118988 -149.15252686]
[-96.87488556 -132.93685913]
[-87.13917542 -121.52564240]
[-72.99243927 -116.86526489]
[-69.92161560 -101.34493256]
[-60.18590927 -89.93370819]
[-50.45019913 -78.52249146]
[-38.44901276 -77.26617432]
[-30.24328423 -67.88053894]
[-30.62355995 -55.01906204]
[-21.00869179 -43.50584030]
[-11.39382267 -31.99261665]
[-1.77895439 -20.47939301]
[11.97159290 -26.47459602]
[25.72092438 -32.46925354]
[23.82837486 -47.34938049]
[21.93582535 -62.22951126]
[20.04327774 -77.10964203]
[18.15072823 -91.98976898]
[16.17977142 -106.85971832]
[14.13046074 -121.71907043]
[12.08115005 -136.57841492]
[-1.66380870 -143.77951050]
[-8.52083206 -157.69931030]
[-5.85325527 -172.98538208]
[5.31318474 -183.75988770]
[20.68476295 -185.87985229]
[34.35079575 -178.53007507]
[41.05641174 -164.53669739]
[38.22316742 -149.28048706]
[26.94050026 -138.62773132]
[28.98981094 -123.76837921]
[31.03912354 -108.90902710]
[35.04661560 -102.74176788]
[33.03085709 -93.88231659]
[34.92340851 -79.00218964]
[36.81595612 -64.12206268]
[38.70850372 -49.24193192]
[40.60105515 -34.36180115]
[55.56584930 -33.33473587]
[59.47358704 -47.81678009]
[49.62514114 -59.80792999]
[48.73941422 -75.29970551]
[57.15698624 -88.33520508]
[71.64112854 -93.90200043]
[86.62239075 -89.85955811]
[96.34017944 -77.76227570]
[97.05779266 -62.26179886]
[88.49931335 -49.31838608]
[73.95562744 -43.90904236]
[70.04789734 -29.42699814]
[70.44318390 -14.43220711]
[75.10850525 -0.17616402]
[79.77382660 14.07987881]
[84.43915558 28.33592224]
[89.10447693 42.59196472]
[100.41648102 52.28153229]
[97.35507965 67.80372620]
[102.02040863 82.05976868]
[116.65431213 85.35351562]
[126.97772217 74.47108459]
[137.30113220 63.58865738]
[147.62452698 52.70622635]
[157.94793701 41.82379913]
[154.17271423 26.86548233]
[159.10551453 12.24799538]
[171.17231750 2.63572192]
[186.52264404 1.09590447]
[200.25827026 8.11989307]
[207.99618530 21.46635818]
[207.26725769 36.87649155]
[198.30410767 49.43297577]
[183.96681213 55.12908173]
[168.83036804 52.14720535]
[158.50695801 63.02963638]
[148.18356323 73.91206360]
[137.86015320 84.79449463]
[127.53674316 95.67692566]
[126.43080902 110.63610077]
[135.04165649 122.91833496]
[143.65249634 135.20057678]
[152.26333618 147.48281860]
[160.87417603 159.76506042]
[173.39060974 162.74853516]
[180.31442261 173.11601257]
[178.40086365 185.03009033]
[186.88174438 197.40242004]
[201.06614685 204.41050720]
[201.88015747 219.28285217]
[210.36103821 231.65518188]
[217.75761414 236.93190002]
[218.86531067 244.20294189]
[227.21528625 256.66400146]
[239.66603088 259.91070557]
[246.36975098 270.42184448]
[244.20541382 282.29293823]
[252.42356873 294.84130859]
[260.64172363 307.38970947]
[268.85986328 319.93807983]
[277.07803345 332.48648071]
[285.29617310 345.03485107]
[293.51434326 357.58325195]
[300.79800415 363.01473999]
[301.75216675 370.30752563]
[309.83758545 382.94183350]
[317.92297363 395.57617188]
[326.00839233 408.21047974]
[334.09381104 420.84481812]
[342.17922974 433.47912598]
[354.00875854 433.71282959]
[364.16360474 439.54858398]
[370.19689941 449.44760132]
[370.71893311 460.90887451]
[365.71585083 471.10070801]
[373.53311157 483.90267944]
[381.35034180 496.70468140]
[395.14581299 504.45034790]
[395.17510986 519.34490967]
[402.99237061 532.14691162]
[410.80960083 544.94885254]
[427.90478516 548.76544189]
[436.75558472 563.48730469]
[432.28747559 579.72283936]
[440.23925781 592.44165039]
[448.19100952 605.16052246]
[456.14279175 617.87939453]
[465.51278687 629.59277344]
[476.17514038 640.14331055]
[486.83749390 650.69384766]
[497.49987793 661.24438477]
[512.30358887 654.91424561]
[528.36456299 654.75988770]
[543.21563721 660.77532959]
[554.58691406 672.00915527]
[560.75268555 686.71478271]
[560.79321289 702.62200928]
[554.73199463 717.28753662]
[565.50500488 727.72509766]
[576.27801514 738.16265869]
[587.05102539 748.60021973]
[597.82397461 759.03778076]
[613.82324219 760.22283936]
[622.75274658 773.55108643]
[617.76257324 788.79833984]
[602.68078613 794.26812744]
[589.07678223 785.76452637]
[587.38641357 769.81079102]
[576.61346436 759.37322998]
[565.84045410 748.93566895]
[555.06744385 738.49810791]
[544.29443359 728.06054688]
[531.66070557 734.11431885]
[517.69042969 735.50274658]
[504.05450439 732.03930664]
[492.39071655 724.11901855]
[484.10720825 712.67352295]
[480.21234131 699.06140137]
[481.19204712 684.90704346]
[486.94931030 671.90673828]
[476.28695679 661.35620117]
[465.62460327 650.80566406]
[454.96224976 640.25512695]
[441.84210205 647.52575684]
[445.13583374 662.15966797]
[448.42959595 676.79357910]
[451.72332764 691.42742920]
[455.01708984 706.06134033]
[458.31085205 720.69525146]
[471.79962158 728.93103027]
[475.43280029 744.31207275]
[467.05487061 757.71301270]
[451.63632202 761.18341064]
[438.32467651 752.66424561]
[435.01751709 737.20983887]
[443.67694092 723.98901367]
[440.38317871 709.35510254]
[437.08944702 694.72119141]
[433.79568481 680.08728027]
[430.50192261 665.45336914]
[427.20819092 650.81945801]
[427.93460083 643.18878174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 242]
[4 241]
[5 240]
[6 239]
[10 236]
[11 235]
[12 234]
[14 232]
[15 231]
[16 230]
[19 225]
[20 224]
[21 223]
[22 222]
[23 221]
[24 220]
[25 218]
[26 217]
[27 216]
[28 215]
[29 214]
[30 213]
[31 212]
[33 209]
[34 208]
[35 206]
[36 205]
[38 203]
[39 202]
[41 199]
[42 198]
[43 197]
[44 196]
[45 195]
[46 92]
[47 91]
[48 90]
[49 89]
[50 88]
[51 87]
[52 86]
[53 85]
[54 84]
[55 79]
[56 78]
[57 77]
[58 75]
[59 74]
[60 73]
[61 71]
[62 70]
[93 175]
[94 174]
[96 172]
[97 171]
[98 170]
[99 169]
[100 168]
[103 129]
[104 128]
[105 127]
[106 126]
[108 123]
[109 122]
[110 121]
[112 119]
[113 118]
[131 155]
[132 154]
[133 153]
[134 152]
[135 151]
[136 149]
[137 148]
[138 147]
[156 167]
[157 166]
[176 194]
[177 193]
[178 192]
[179 191]
[180 190]
[243 278]
[244 277]
[245 276]
[246 275]
[253 267]
[254 266]
[255 265]
[256 264]
[257 263]
[279 296]
[280 295]
[281 294]
[282 293]
[283 292]
[284 291]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
