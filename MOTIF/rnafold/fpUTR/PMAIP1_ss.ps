%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGGACAAAAGCGUGGUCUCUGGCGCGGGGAUCUCAGAGUUUCCCGGGCACUCACCGUGUGUAGUUGGCAUCUCCGCGCGUCCGGACACCCGAUCCCAGCAUCCCUGCCUGCAGGACUGUUCGUGUUCAGCUCGCGUCCUGCAGCUGUCCGAGGUGCUCCAGUUGGAGGCUGAGGUUCCCGGGCUCUGUAGCUGAGUGGGCGGCGGCACCGGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[77.84442902 124.51851654]
[68.80796051 110.91253662]
[53.89469147 112.52326202]
[38.98142624 114.13397980]
[24.06815529 115.74469757]
[20.80613327 125.82632446]
[14.40155029 134.21995544]
[5.60299301 139.98638916]
[-4.57495499 142.49104309]
[-14.96868134 141.47373962]
[-24.39857483 137.07543945]
[-31.80290031 129.81939697]
[-36.35733414 120.54898071]
[-51.33843231 121.30178070]
[-59.74636459 124.85614777]
[-66.53952026 121.95637512]
[-81.52987671 122.49420166]
[-96.52023315 123.03202820]
[-110.03410339 131.25917053]
[-123.03061676 123.98317719]
[-138.02096558 124.52101135]
[-153.01132202 125.05883789]
[-168.00167847 125.59666443]
[-182.97698975 126.45690155]
[-197.93032837 127.63915253]
[-212.88366699 128.82139587]
[-227.83700562 130.00364685]
[-242.79034424 131.18589783]
[-257.74368286 132.36814880]
[-272.69702148 133.55039978]
[-287.65036011 134.73265076]
[-302.60369873 135.91490173]
[-317.55703735 137.09715271]
[-330.70443726 145.89805603]
[-344.00195312 139.18794250]
[-358.95529175 140.37019348]
[-373.90863037 141.55244446]
[-388.86196899 142.73469543]
[-392.95516968 157.31108093]
[-401.77191162 169.58450317]
[-414.23239136 178.08493042]
[-428.82180786 181.80232239]
[-443.77453613 180.30674744]
[-457.28784180 173.79789734]
[-467.73910522 163.07875061]
[-473.88076782 149.45649719]
[-488.83410645 150.63874817]
[-503.78744507 151.82099915]
[-512.71569824 164.65922546]
[-527.82086182 168.70495605]
[-541.97070312 162.04795837]
[-548.48413086 147.83143616]
[-544.28570557 132.76800537]
[-531.35772705 123.97015381]
[-515.80444336 125.59196472]
[-504.96969604 136.86766052]
[-490.01635742 135.68540955]
[-475.06301880 134.50315857]
[-471.13830566 120.08505249]
[-462.50134277 107.85673523]
[-450.17874146 99.30523682]
[-435.64678955 95.47852325]
[-420.65444946 96.85710907]
[-407.01303101 103.29383850]
[-396.37713623 114.02929688]
[-390.04421997 127.78136444]
[-375.09088135 126.59911346]
[-360.13754272 125.41686249]
[-345.18420410 124.23461151]
[-333.10635376 115.51826477]
[-318.73928833 122.14380646]
[-303.78594971 120.96156311]
[-288.83261108 119.77931213]
[-273.87927246 118.59706116]
[-258.92593384 117.41481018]
[-243.97259521 116.23256683]
[-229.01925659 115.05031586]
[-214.06591797 113.86806488]
[-199.11257935 112.68581390]
[-184.15924072 111.50357056]
[-181.60684204 109.07906342]
[-177.75552368 107.76741028]
[-173.13973999 108.16466522]
[-168.53950500 110.60630798]
[-153.54916382 110.06848145]
[-138.55880737 109.53065491]
[-123.56844330 108.99282837]
[-111.12677765 100.80416107]
[-97.05805969 108.04167938]
[-82.06770325 107.50384521]
[-67.07734680 106.96601868]
[-52.09123993 106.32068634]
[-37.11014175 105.56787872]
[-27.53853226 88.50170135]
[-9.46560287 80.63310242]
[9.82887268 85.32203674]
[22.45743561 100.83143616]
[37.37070465 99.22071075]
[52.28397369 97.60999298]
[67.19724274 95.99927521]
[69.20480347 88.01322174]
[73.12454224 80.77146912]
[78.71305084 74.72367096]
[85.62333679 70.24536133]
[93.42631531 67.61460876]
[93.85661316 52.62078476]
[94.28691101 37.62695694]
[94.71720123 22.63312912]
[86.45648956 8.46652603]
[94.82857513 -5.63454628]
[111.22097015 -5.16411352]
[118.77059174 9.39388371]
[109.71102905 23.06342506]
[109.28073120 38.05725479]
[108.85044098 53.05107880]
[108.42014313 68.04490662]
[124.58953094 77.92327881]
[132.67449951 95.05992126]
[147.62782288 96.24217224]
[162.58116150 97.42442322]
[177.53450012 98.60667419]
[192.48783875 99.78892517]
[206.85490417 93.16337585]
[218.93275452 101.87972260]
[233.88609314 103.06197357]
[248.83943176 104.24422455]
[263.79278564 105.42647552]
[278.74609375 106.60871887]
[291.84530640 95.01004791]
[308.94329834 96.44839478]
[319.49645996 109.54647064]
[334.46520996 110.51409912]
[349.43395996 111.48172760]
[364.40270996 112.44934845]
[379.37145996 113.41697693]
[394.34024048 114.38460541]
[404.96896362 101.22322083]
[421.18768311 97.03417969]
[436.55252075 103.27716827]
[445.08032227 117.30724335]
[460.06143188 118.06004333]
[475.04251099 118.81285095]
[490.02362061 119.56565857]
[505.00473022 120.31845856]
[519.98583984 121.07126617]
[530.05480957 113.01660919]
[542.51354980 113.94851685]
[550.72711182 122.82398987]
[565.69586182 123.79161835]
[580.66461182 124.75924683]
[595.63336182 125.72687531]
[610.60217285 126.69449615]
[619.36175537 124.12630463]
[625.77819824 127.78488159]
[640.73156738 128.96713257]
[655.09863281 122.34158325]
[667.17645264 131.05793762]
[682.12982178 132.24018860]
[697.08312988 133.42243958]
[711.45019531 126.79689026]
[723.52807617 135.51324463]
[738.48138428 136.69549561]
[753.43475342 137.87773132]
[768.38806152 139.05998230]
[783.34143066 140.24223328]
[799.60778809 135.46308899]
[808.70318604 149.77081299]
[797.47247314 162.47149658]
[782.15917969 155.19557190]
[767.20581055 154.01332092]
[752.25250244 152.83106995]
[737.29913330 151.64881897]
[722.34582520 150.46658325]
[709.04827881 157.17668152]
[695.90087891 148.37577820]
[680.94757080 147.19352722]
[665.99420166 146.01127625]
[652.69671631 152.72138977]
[639.54931641 143.92047119]
[624.59594727 142.73822021]
[609.63452148 141.66325378]
[594.66577148 140.69563293]
[579.69702148 139.72799683]
[564.72827148 138.76037598]
[549.75952148 137.79275513]
[534.46551514 146.40382385]
[519.23303223 136.05236816]
[504.25192261 135.29956055]
[489.27081299 134.54675293]
[474.28973389 133.79394531]
[459.30862427 133.04113770]
[444.32751465 132.28834534]
[436.95092773 143.41220093]
[424.94540405 149.48861694]
[411.39724731 148.83567810]
[399.84884644 141.51710510]
[393.37261963 129.35336304]
[378.40383911 128.38574219]
[363.43508911 127.41810608]
[348.46633911 126.45048523]
[333.49758911 125.48285675]
[318.52880859 124.51522827]
[310.13677979 134.28836060]
[297.45922852 137.49316406]
[285.06759644 132.74296570]
[277.56387329 121.56205750]
[262.61053467 120.37980652]
[247.65718079 119.19756317]
[232.70384216 118.01531219]
[217.75051880 116.83306122]
[204.45300293 123.54317474]
[191.30558777 114.74225616]
[176.35224915 113.56001282]
[161.39891052 112.37776184]
[146.44558716 111.19551086]
[131.49224854 110.01325989]
[122.84980011 123.87285614]
[108.62519073 131.90036011]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 100]
[3 99]
[4 98]
[5 97]
[13 93]
[14 92]
[16 91]
[17 90]
[18 89]
[20 87]
[21 86]
[22 85]
[23 84]
[24 80]
[25 79]
[26 78]
[27 77]
[28 76]
[29 75]
[30 74]
[31 73]
[32 72]
[33 71]
[35 69]
[36 68]
[37 67]
[38 66]
[46 58]
[47 57]
[48 56]
[105 116]
[106 115]
[107 114]
[108 113]
[118 216]
[119 215]
[120 214]
[121 213]
[122 212]
[124 210]
[125 209]
[126 208]
[127 207]
[128 206]
[131 202]
[132 201]
[133 200]
[134 199]
[135 198]
[136 197]
[140 192]
[141 191]
[142 190]
[143 189]
[144 188]
[145 187]
[148 185]
[149 184]
[150 183]
[151 182]
[152 181]
[154 180]
[155 179]
[157 177]
[158 176]
[159 175]
[161 173]
[162 172]
[163 171]
[164 170]
[165 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
