%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUAUUGACUGAGGCGGCCAAGCGGCUCCGGGACAGGGGGUACGGGGGGUGGGGGCGGGUGGUUGCCUGCGGGAGGCCGCCGCGGGUCAUGUGACCGGAAGGGCUCCUCACGGACGCCGUCCCUCCUCGGCGCGGCCUGAGCGCCCGGCCCGACCCCGGCC\
) } def
/len { sequence length } bind def

/coor [
[110.97653961 457.88818359]
[109.82830048 442.93222046]
[108.68006897 427.97622681]
[107.53182983 413.02023315]
[106.38359070 398.06423950]
[93.68442535 392.97229004]
[84.38076019 382.85025024]
[80.33618164 369.64108276]
[82.39719391 355.91418457]
[90.21684265 344.36547852]
[102.31154633 337.28805542]
[101.44999695 322.31280518]
[100.58844757 307.33758545]
[97.04826355 300.80993652]
[99.85661316 292.06774902]
[99.28207397 277.07876587]
[98.70753479 262.08978271]
[98.13299561 247.10078430]
[87.06476593 237.19978333]
[86.26856995 222.00698853]
[96.72869873 210.46475220]
[96.15415955 195.47575378]
[87.93505096 183.05418396]
[95.13808441 168.96777344]
[94.56354523 153.97879028]
[86.34443665 141.55720520]
[93.54747009 127.47080994]
[92.97293091 112.48181152]
[85.68656921 100.54864502]
[92.03807831 88.09272766]
[91.46353149 73.10373688]
[90.88899231 58.11474228]
[90.31445312 43.12574768]
[89.73991394 28.13675499]
[86.90327454 23.64400673]
[86.17881012 18.98083496]
[87.27085114 14.99142647]
[89.58798981 12.27557945]
[89.87531281 -2.72166872]
[90.16263580 -17.71891594]
[90.44995880 -32.71616364]
[90.73728180 -47.71341324]
[87.76199341 -56.40018082]
[91.17649078 -62.99443817]
[91.75102997 -77.98342896]
[92.32556915 -92.97242737]
[92.90010834 -107.96141815]
[78.34026337 -118.70237732]
[73.15323639 -135.87234497]
[79.22389984 -152.58358765]
[93.95991516 -162.24913025]
[93.95991516 -177.24913025]
[93.95991516 -192.24913025]
[93.95991516 -207.24913025]
[93.95991516 -222.24913025]
[93.95991516 -237.24913025]
[93.81624603 -252.24844360]
[93.52892303 -267.24569702]
[78.37619019 -277.13265991]
[72.21154022 -293.97634888]
[77.31234741 -311.00869751]
[91.46887970 -321.50466919]
[90.60733032 -336.47988892]
[89.74578857 -351.45513916]
[88.88423920 -366.43035889]
[88.02268982 -381.40560913]
[86.44523621 -396.32241821]
[84.15550232 -411.14663696]
[81.86576080 -425.97085571]
[79.57601929 -440.79504395]
[77.28627777 -455.61926270]
[74.99654388 -470.44345093]
[72.70680237 -485.26766968]
[70.41706085 -500.09188843]
[56.95110703 -508.04183960]
[51.79450607 -522.80474854]
[57.38204956 -537.41003418]
[71.07546997 -544.96142578]
[86.40915680 -541.89349365]
[96.14300537 -529.65478516]
[95.68099213 -514.02404785]
[85.24127197 -502.38162231]
[87.53100586 -487.55740356]
[89.82074738 -472.73321533]
[92.11048889 -457.90899658]
[94.40022278 -443.08477783]
[96.68996429 -428.26058960]
[98.97970581 -413.43637085]
[101.26944733 -398.61218262]
[112.28758240 -408.79061890]
[127.14353943 -406.71682739]
[134.95315552 -393.91021729]
[129.99475098 -379.75344849]
[115.90106964 -374.61843872]
[102.99792480 -382.26715088]
[103.85947418 -367.29193115]
[104.72102356 -352.31668091]
[105.58257294 -337.34143066]
[106.44412231 -322.36621094]
[117.56361389 -317.36572266]
[125.53504181 -308.04510498]
[128.78851318 -296.14498901]
[126.64289856 -283.92269897]
[119.44734955 -273.72402954]
[108.52617645 -267.53302002]
[108.81349945 -252.53576660]
[112.10105896 -245.87731934]
[108.95991516 -237.24913025]
[108.95991516 -222.24913025]
[108.95991516 -207.24913025]
[108.95991516 -192.24913025]
[108.95991516 -177.24913025]
[108.95991516 -162.24913025]
[119.77384949 -156.61824036]
[127.19676971 -146.85516357]
[129.76136780 -134.78782654]
[126.91728973 -122.70894623]
[119.14784241 -112.94038391]
[107.88910675 -107.38687897]
[107.31455994 -92.39788055]
[106.74002075 -77.40888977]
[106.16548157 -62.41989899]
[105.73452759 -47.42609024]
[105.44720459 -32.42884064]
[105.15988159 -17.43159294]
[104.87255859 -2.43434548]
[104.58523560 12.56290245]
[104.72890472 27.56221390]
[105.30344391 42.55120850]
[105.87799072 57.54019928]
[106.45252991 72.52919006]
[107.02706909 87.51818848]
[114.31343079 99.45135498]
[107.96192169 111.90727234]
[108.53646851 126.89626312]
[116.79666901 140.38995361]
[109.55253601 153.40425110]
[110.12708282 168.39323425]
[118.38728333 181.88691711]
[111.14315033 194.90121460]
[111.71769714 209.89021301]
[123.03068542 220.59786987]
[123.39982605 235.80702209]
[113.12198639 246.52624512]
[113.69652557 261.51522827]
[114.27106476 276.50424194]
[114.84561157 291.49322510]
[115.56368256 306.47601318]
[116.42523193 321.45126343]
[117.28678131 336.42651367]
[132.11659241 343.68859863]
[141.21984863 357.35263062]
[142.19813538 373.64828491]
[134.87950134 388.13589478]
[121.33957672 396.91601562]
[122.48781586 411.87200928]
[123.63605499 426.82797241]
[124.78429413 441.78396606]
[125.93253326 456.73995972]
[137.12684631 468.23199463]
[134.97868347 484.13058472]
[121.13593292 492.23968506]
[106.21755981 486.33868408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[3 157]
[4 156]
[5 155]
[11 150]
[12 149]
[13 148]
[15 147]
[16 146]
[17 145]
[18 144]
[21 141]
[22 140]
[24 138]
[25 137]
[27 135]
[28 134]
[30 132]
[31 131]
[32 130]
[33 129]
[34 128]
[38 127]
[39 126]
[40 125]
[41 124]
[42 123]
[44 122]
[45 121]
[46 120]
[47 119]
[51 113]
[52 112]
[53 111]
[54 110]
[55 109]
[56 108]
[57 106]
[58 105]
[62 99]
[63 98]
[64 97]
[65 96]
[66 95]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
