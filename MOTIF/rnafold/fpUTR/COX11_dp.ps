%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COX11)
} def

/sequence { (\
CGACUGCAAGCGCUGCCACCUGAGGAGCCUGGUAGCCAAGGCAGCGGCAGGCUCAACCCAGAUCUCGCGAGACGGAGCACGCCUCGCGAGAUUUGACCUCUCGUCCCUGAGAGGCGGGUGGGUGUUAGUUCAGAGGGUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.006876181 ubox
1 46 0.005039940 ubox
2 11 0.007891007 ubox
2 45 0.005179615 ubox
2 126 0.004980995 ubox
2 130 0.537536895 ubox
2 131 0.412390048 ubox
2 139 0.298159343 ubox
3 125 0.005164058 ubox
3 129 0.604352673 ubox
3 130 0.359161106 ubox
3 138 0.330802101 ubox
4 10 0.006957791 ubox
4 44 0.005332665 ubox
4 50 0.004509118 ubox
4 124 0.005158444 ubox
4 128 0.636609402 ubox
4 133 0.487270362 ubox
4 135 0.144824420 ubox
4 136 0.103976824 ubox
4 137 0.333271672 ubox
5 9 0.006345051 ubox
5 43 0.005336723 ubox
5 49 0.004523920 ubox
5 127 0.633566936 ubox
5 132 0.487197268 ubox
5 134 0.144214438 ubox
5 135 0.105344761 ubox
5 136 0.329638035 ubox
6 13 0.024385717 ubox
6 42 0.005340126 ubox
6 48 0.004529352 ubox
6 125 0.020967025 ubox
6 126 0.508583657 ubox
6 129 0.567645618 ubox
6 131 0.455596416 ubox
6 138 0.007735211 ubox
7 12 0.024450230 ubox
7 15 0.005115904 ubox
7 41 0.005338068 ubox
7 47 0.004525936 ubox
7 124 0.028617958 ubox
7 128 0.642743956 ubox
7 137 0.008099147 ubox
8 14 0.004904403 ubox
8 123 0.020644103 ubox
8 126 0.046773871 ubox
8 130 0.132776536 ubox
9 125 0.043937085 ubox
9 126 0.785517595 ubox
9 129 0.108646461 ubox
9 130 0.109933034 ubox
9 139 0.013297658 ubox
10 123 0.034945037 ubox
10 125 0.975008315 ubox
10 129 0.131911482 ubox
10 138 0.017451041 ubox
11 46 0.004493698 ubox
11 122 0.036110768 ubox
11 124 0.978809609 ubox
11 128 0.133049480 ubox
11 137 0.017741724 ubox
12 36 0.005370276 ubox
12 45 0.004522048 ubox
12 123 0.976484341 ubox
12 125 0.140933579 ubox
12 129 0.080987739 ubox
13 35 0.005378002 ubox
13 44 0.004522423 ubox
13 121 0.004642556 ubox
13 122 0.971257257 ubox
13 124 0.144808999 ubox
13 128 0.082678475 ubox
13 133 0.009069840 ubox
13 135 0.016895634 ubox
14 34 0.005375772 ubox
14 43 0.004521004 ubox
14 120 0.003930377 ubox
14 121 0.238102361 ubox
14 124 0.030263759 ubox
14 127 0.082068727 ubox
14 132 0.009316034 ubox
14 134 0.015803902 ubox
15 33 0.005377173 ubox
15 42 0.004516626 ubox
15 119 0.004101004 ubox
15 123 0.051886334 ubox
15 125 0.007967364 ubox
15 126 0.078121734 ubox
15 131 0.009508890 ubox
15 138 0.012162420 ubox
16 32 0.005378517 ubox
16 41 0.004512583 ubox
16 118 0.004350835 ubox
16 121 0.965006795 ubox
16 122 0.044016329 ubox
16 124 0.006298170 ubox
16 137 0.012786273 ubox
17 31 0.005377894 ubox
17 40 0.004506229 ubox
17 117 0.004304090 ubox
17 120 0.998614902 ubox
17 121 0.031754304 ubox
17 124 0.020120771 ubox
17 136 0.012802172 ubox
18 30 0.005194743 ubox
18 33 0.003872848 ubox
18 119 0.999382931 ubox
18 123 0.020174267 ubox
19 32 0.003901009 ubox
19 117 0.003869129 ubox
19 118 0.999661329 ubox
19 122 0.020174184 ubox
20 27 0.004838795 ubox
20 31 0.003896083 ubox
20 116 0.004913636 ubox
20 117 0.999649195 ubox
20 121 0.020165174 ubox
20 133 0.012813307 ubox
21 26 0.004812550 ubox
21 116 0.997878596 ubox
21 120 0.019310985 ubox
21 132 0.012812359 ubox
22 59 0.003592300 ubox
22 115 0.988553760 ubox
22 119 0.007261929 ubox
22 131 0.012814372 ubox
23 30 0.003437368 ubox
23 130 0.012580822 ubox
24 29 0.003575229 ubox
24 54 0.054912125 ubox
24 58 0.092254048 ubox
24 59 0.008109683 ubox
24 129 0.010180325 ubox
25 53 0.023893695 ubox
25 54 0.993732091 ubox
25 57 0.075293019 ubox
25 58 0.007576903 ubox
26 53 0.999030955 ubox
27 42 0.021453330 ubox
27 52 0.999718418 ubox
28 41 0.021476653 ubox
28 51 0.999725304 ubox
29 40 0.021475626 ubox
29 50 0.999710190 ubox
30 38 0.013560668 ubox
30 39 0.017001922 ubox
30 46 0.005542223 ubox
30 49 0.997568931 ubox
31 37 0.019421041 ubox
31 45 0.009857425 ubox
31 48 0.958380297 ubox
31 58 0.004916487 ubox
32 36 0.019141532 ubox
32 42 0.013937669 ubox
32 45 0.567607842 ubox
32 48 0.151924234 ubox
32 57 0.004938997 ubox
33 41 0.013787400 ubox
33 44 0.544039761 ubox
33 47 0.200590423 ubox
33 56 0.004724052 ubox
34 53 0.004752616 ubox
35 42 0.778246178 ubox
35 45 0.566818824 ubox
35 48 0.219178929 ubox
35 52 0.005019551 ubox
36 41 0.780915799 ubox
36 44 0.566278535 ubox
36 47 0.246974127 ubox
36 51 0.005019874 ubox
37 46 0.246984399 ubox
37 50 0.005010067 ubox
41 48 0.008607711 ubox
42 47 0.008937095 ubox
43 53 0.019829493 ubox
44 52 0.021207692 ubox
45 51 0.021211247 ubox
51 123 0.006505626 ubox
52 122 0.006840522 ubox
53 121 0.006837273 ubox
54 120 0.006827233 ubox
55 119 0.005060691 ubox
56 119 0.017247442 ubox
56 123 0.008383691 ubox
57 117 0.004424615 ubox
57 118 0.018540986 ubox
57 122 0.008653747 ubox
58 116 0.004518369 ubox
58 117 0.018538851 ubox
58 121 0.008654357 ubox
59 95 0.996490758 ubox
59 116 0.017168620 ubox
59 120 0.008482642 ubox
60 94 0.998110775 ubox
60 119 0.006874125 ubox
61 93 0.998710039 ubox
62 92 0.999424441 ubox
63 91 0.999743786 ubox
64 90 0.999982625 ubox
65 89 0.999848861 ubox
66 88 0.999969750 ubox
67 87 0.999981701 ubox
68 86 0.999981701 ubox
69 85 0.999968737 ubox
70 84 0.999817384 ubox
71 83 0.997522922 ubox
73 81 0.996490041 ubox
74 80 0.997609799 ubox
74 83 0.013684685 ubox
75 82 0.015646392 ubox
94 116 0.006485297 ubox
95 115 0.018850019 ubox
96 123 0.007042684 ubox
97 114 0.995422646 ubox
97 122 0.007220486 ubox
98 113 0.999903525 ubox
98 121 0.007210800 ubox
99 112 0.999797115 ubox
99 114 0.003827547 ubox
99 120 0.006809387 ubox
100 111 0.999934761 ubox
100 113 0.005160199 ubox
100 118 0.007817067 ubox
101 110 0.999785996 ubox
101 112 0.005186660 ubox
101 117 0.007825172 ubox
102 109 0.999386748 ubox
102 111 0.005199345 ubox
102 116 0.007839277 ubox
103 108 0.706708276 ubox
103 115 0.007837726 ubox
104 114 0.006458499 ubox
105 113 0.006388922 ubox
105 114 0.004307724 ubox
106 113 0.004311700 ubox
123 132 0.013873885 ubox
124 131 0.015507765 ubox
126 133 0.003570462 ubox
127 139 0.005603961 ubox
128 138 0.006923146 ubox
129 135 0.004904452 ubox
129 136 0.005899887 ubox
129 137 0.015122301 ubox
130 134 0.006567691 ubox
130 135 0.009304775 ubox
130 136 0.029870665 ubox
130 137 0.047446581 ubox
131 135 0.040889472 ubox
131 136 0.087784701 ubox
132 139 0.019184011 ubox
133 138 0.019196513 ubox
133 139 0.018643352 ubox
134 138 0.018274181 ubox
2 130 0.9500000 lbox
3 129 0.9500000 lbox
4 128 0.9500000 lbox
5 127 0.9500000 lbox
6 126 0.9500000 lbox
10 125 0.9500000 lbox
11 124 0.9500000 lbox
12 123 0.9500000 lbox
13 122 0.9500000 lbox
16 121 0.9500000 lbox
17 120 0.9500000 lbox
18 119 0.9500000 lbox
19 118 0.9500000 lbox
20 117 0.9500000 lbox
21 116 0.9500000 lbox
22 115 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
59 95 0.9500000 lbox
60 94 0.9500000 lbox
61 93 0.9500000 lbox
62 92 0.9500000 lbox
63 91 0.9500000 lbox
64 90 0.9500000 lbox
65 89 0.9500000 lbox
66 88 0.9500000 lbox
67 87 0.9500000 lbox
68 86 0.9500000 lbox
69 85 0.9500000 lbox
70 84 0.9500000 lbox
71 83 0.9500000 lbox
73 81 0.9500000 lbox
74 80 0.9500000 lbox
97 114 0.9500000 lbox
98 113 0.9500000 lbox
99 112 0.9500000 lbox
100 111 0.9500000 lbox
101 110 0.9500000 lbox
102 109 0.9500000 lbox
103 108 0.9500000 lbox
showpage
end
%%EOF
