%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCGCAUAGUGUUAGGCGCAUGCUCCUUGAUGCACUGCGGCGCGGCGCUCCGAGGCUCGGGGACGCGCACGCAAUUCGCUGUUGUUGGCUGACUUCCGGUGGUGCCAAAGCCGUUUCCGUGGAAUCAGGCCGGCUGGUGAGGGUACAGAAUGGAACAAAAGUGGGACUUUUAAA\
) } def
/len { sequence length } bind def

/coor [
[79.54081726 123.01467896]
[72.05545044 122.54641724]
[64.63287354 135.58119202]
[64.52761841 151.40205383]
[51.50608063 158.63314819]
[44.08350372 171.66792297]
[36.66093063 184.70269775]
[29.23835373 197.73747253]
[27.70233727 206.77543640]
[21.56517982 210.93696594]
[13.91112900 223.83717346]
[6.25707865 236.73738098]
[-1.39697206 249.63760376]
[-4.27926826 266.34475708]
[-21.13139153 268.20010376]
[-27.57935905 252.52017212]
[-14.29718590 241.98355103]
[-6.64313507 229.08334351]
[1.01091540 216.18312073]
[8.66496563 203.28291321]
[16.20357895 190.31489563]
[23.62615395 177.28012085]
[31.04872894 164.24534607]
[38.47130585 151.21057129]
[38.04564667 136.32205200]
[51.59810257 128.15861511]
[59.02067566 115.12384033]
[56.65217972 108.00765228]
[43.88905334 115.88816833]
[33.87879181 127.05932617]
[18.87892914 127.12374115]
[8.77309513 116.03897095]
[10.22017002 101.10893250]
[22.26665497 92.17124939]
[36.97515488 95.11523438]
[51.91518402 93.77526093]
[49.54668808 86.65906525]
[35.79315948 80.67237091]
[22.03963280 74.68568420]
[8.28610611 68.69898987]
[-5.52030420 62.83528519]
[-19.37849808 57.09503174]
[-33.23669052 51.35478210]
[-47.09488297 45.61452866]
[-60.95307541 39.87427902]
[-70.78283691 44.62530899]
[-81.38427734 43.19329071]
[-89.26991272 36.29402161]
[-91.98091125 26.40097809]
[-105.62538910 20.16975403]
[-119.26987457 13.93852806]
[-132.91435242 7.70730305]
[-146.55883789 1.47607803]
[-160.20330811 -4.75514698]
[-177.12283325 -5.83501673]
[-180.76895142 -22.39225388]
[-165.86813354 -30.47938538]
[-153.97209167 -18.39962769]
[-140.32760620 -12.16840172]
[-126.68312836 -5.93717670]
[-113.03864288 0.29404843]
[-99.39416504 6.52527380]
[-85.74968719 12.75649929]
[-66.71140289 9.48455811]
[-55.21282578 26.01608658]
[-41.35463333 31.75633812]
[-27.49643898 37.49658966]
[-13.63824558 43.23683929]
[0.21994716 48.97709274]
[7.62690783 48.63070679]
[14.27279758 54.94546127]
[28.02632523 60.93215561]
[41.77985382 66.91884613]
[55.53337860 72.90554047]
[92.39910126 66.66574097]
[108.87164307 86.31542206]
[119.09291840 75.33700562]
[129.31417847 64.35858917]
[139.53544617 53.38016891]
[149.75672913 42.40175247]
[159.97799683 31.42333412]
[158.96166992 20.55303001]
[164.00822449 11.12044716]
[173.22822571 6.14305353]
[183.44491577 7.06024790]
[194.05151367 -3.54635406]
[204.65811157 -14.15295601]
[215.26472473 -24.75955772]
[225.87132263 -35.36615753]
[236.47792053 -45.97275925]
[246.98944092 -56.67360306]
[257.40502930 -67.46783447]
[267.82061768 -78.26206207]
[271.83520508 -93.56544495]
[286.24057007 -97.35161591]
[296.65615845 -108.14584351]
[307.07174683 -118.94007111]
[317.39059448 -129.82682800]
[327.61187744 -140.80525208]
[337.83312988 -151.78366089]
[347.75683594 -163.03178406]
[357.37582397 -174.54156494]
[366.99484253 -186.05133057]
[376.61386108 -197.56109619]
[374.95571899 -213.27815247]
[384.96173096 -225.51155090]
[400.69543457 -227.00340271]
[412.82235718 -216.86862183]
[414.14776611 -201.12001038]
[403.88537598 -189.10093689]
[388.12362671 -187.94209290]
[378.50460815 -176.43232727]
[368.88562012 -164.92254639]
[359.26660156 -153.41278076]
[359.22854614 -149.85650635]
[357.44573975 -146.14469910]
[353.86550903 -143.10653687]
[348.81155396 -141.56239319]
[338.59030151 -130.58398438]
[328.36901855 -119.60556030]
[326.10510254 -112.54456329]
[317.86599731 -108.52448273]
[307.45037842 -97.73024750]
[297.03479004 -86.93601990]
[293.76519775 -72.40470886]
[278.61486816 -67.84646606]
[268.19924927 -57.05223846]
[257.78366089 -46.25800705]
[255.39407349 -39.23854446]
[247.08451843 -35.36615753]
[236.47792053 -24.75955772]
[225.87132263 -14.15295601]
[215.26472473 -3.54635406]
[204.65811157 7.06024790]
[194.05151367 17.66684914]
[190.46395874 36.64818954]
[170.95640564 41.64460373]
[160.73513794 52.62302017]
[150.51387024 63.60143661]
[140.29260254 74.57985687]
[130.07133484 85.55827332]
[119.85006714 96.53668976]
[134.08340454 91.80255890]
[145.36267090 81.91426849]
[159.50437927 76.91308594]
[174.49241638 77.51199341]
[188.19000244 83.62562561]
[198.64428711 94.38237762]
[204.36488342 108.24869537]
[204.53620911 123.24771881]
[199.13383484 137.24108887]
[188.92797852 148.23382568]
[175.37361145 154.65873718]
[160.40316772 155.59983826]
[146.15090942 150.92297363]
[134.64872742 141.29490662]
[127.53663635 128.08888245]
[115.85511780 118.67919159]
[121.59536743 132.53738403]
[127.33561707 146.39558411]
[133.07586670 160.25376892]
[138.81611633 174.11196899]
[144.55638123 187.97015381]
[156.20384216 200.28977966]
[147.59001160 214.89245605]
[131.17346191 210.65769958]
[130.69818115 193.71040344]
[124.95793152 179.85221863]
[119.21768188 165.99401855]
[113.47742462 152.13583374]
[107.73717499 138.27763367]
[101.99692535 124.41944885]
[94.51155853 123.95118713]
[98.24707031 138.47860718]
[85.58499146 146.52049255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[5 24]
[6 23]
[7 22]
[8 21]
[10 20]
[11 19]
[12 18]
[13 17]
[37 74]
[38 73]
[39 72]
[40 71]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[54 58]
[76 142]
[77 141]
[78 140]
[79 139]
[80 138]
[81 137]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 128]
[92 127]
[93 126]
[95 124]
[96 123]
[97 122]
[98 120]
[99 119]
[100 118]
[101 114]
[102 113]
[103 112]
[104 111]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
[163 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
