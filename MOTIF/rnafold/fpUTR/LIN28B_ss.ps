%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGACAAAGUCACGUGUGCUCAGGGGGCCAGAAACUGGAGAGAGGAGAGAAAAAAAUCAAAAGAAGGAAAGCACAUUAGACCAUGCGAGCUAAAUUUGUGAUCGCACAAAAUCAAGAUGUUAGAUUGAUGCAGAAGAUCACUCCGUUCCAAAGGGAAAGUUUUCAUCUCACGAGUUUGGAGCUGAGGGCCCGUGGGGCAAC\
) } def
/len { sequence length } bind def

/coor [
[34.48363113 681.53710938]
[19.77959061 685.09332275]
[4.69645500 683.92962646]
[-9.28808403 678.16003418]
[-20.80396271 668.34985352]
[-28.72297287 655.46014404]
[-32.26929092 640.75372314]
[-31.09548569 625.67138672]
[-25.31655312 611.69073486]
[-15.49865437 600.18139648]
[-2.60364723 592.27105713]
[12.10514641 588.73455811]
[13.25900269 573.77899170]
[14.41285896 558.82348633]
[15.56671524 543.86791992]
[16.72057152 528.91235352]
[9.98522663 515.62762451]
[18.76116180 502.46350098]
[19.91501808 487.50796509]
[13.17967415 474.22320557]
[21.95560837 461.05911255]
[23.10946655 446.10354614]
[24.26332283 431.14801025]
[25.41717911 416.19244385]
[26.57103539 401.23687744]
[17.44199944 394.38302612]
[12.70847797 383.86349487]
[13.65301418 372.24645996]
[20.15613174 362.42984009]
[30.69739723 356.91833496]
[32.31126404 342.00540161]
[33.92512894 327.09249878]
[35.53899384 312.17956543]
[37.15286255 297.26663208]
[24.43422699 289.47549438]
[16.32626534 276.88302612]
[14.48218441 261.95785522]
[19.32090569 247.65377808]
[29.93343163 236.82504272]
[44.25308990 231.65699768]
[45.86695480 216.74406433]
[47.48081970 201.83113098]
[49.09468842 186.91821289]
[50.59367752 171.99330139]
[51.97770309 157.05728149]
[53.36172867 142.12127686]
[54.74575424 127.18525696]
[56.12977982 112.24924469]
[46.63621902 100.63578796]
[31.72328949 99.02192688]
[21.40506172 110.61130524]
[6.23822451 113.88951874]
[-7.94526577 107.59600830]
[-15.69156742 94.15077209]
[-14.02206802 78.72377014]
[-3.57872558 67.24700165]
[11.62278271 64.13351440]
[25.73716545 70.58052063]
[33.33715439 84.10899353]
[48.25008392 85.72286224]
[33.49631882 83.01613617]
[23.48652458 71.84455872]
[22.40963936 56.88326645]
[30.71632195 44.39331055]
[44.93035889 39.60153580]
[59.10340881 44.51322174]
[67.30428314 57.07291031]
[66.10053253 72.02573395]
[68.40141296 57.20324707]
[70.70228577 42.38076782]
[53.66939545 43.30846024]
[36.30100632 30.73669624]
[27.82395935 18.36173439]
[19.34691429 5.98677158]
[0.79232353 -1.88361394]
[0.12976848 -21.20519447]
[-8.72434521 -33.31323624]
[-17.57845879 -45.42127991]
[-33.23219299 -47.59755325]
[-42.69541168 -60.25547409]
[-40.35375977 -75.88532257]
[-27.59649277 -85.21418762]
[-11.99227428 -82.70742035]
[-2.79880857 -69.85223389]
[-5.47041655 -54.27539062]
[3.38369679 -42.16735077]
[12.23781013 -30.05930901]
[22.44194603 -29.40512276]
[30.77467918 -23.10768509]
[34.33625031 -13.05562782]
[31.72187614 -2.49027467]
[40.19892120 9.88468742]
[48.67596817 22.25964928]
[56.17596817 22.25964928]
[48.67606354 9.26921368]
[56.17625046 -3.72105813]
[71.17625427 -3.72073150]
[78.67587280 9.26986694]
[71.17596436 22.25964928]
[78.67596436 22.25964928]
[87.15301514 9.88468742]
[95.63005829 -2.49027467]
[104.10710907 -14.86523724]
[112.58415222 -27.24019814]
[121.06119537 -39.61516190]
[112.93893433 -51.31823730]
[109.30775452 -65.06223297]
[110.58428192 -79.19039917]
[116.59480286 -92.00685120]
[126.59860229 -101.98017120]
[139.37916565 -107.92634583]
[153.39212036 -109.14936066]
[166.95182800 -105.52256012]
[175.61843872 -117.76551819]
[184.28504944 -130.00846863]
[192.95164490 -142.25141907]
[201.61825562 -154.49438477]
[195.74917603 -168.76173401]
[198.54779053 -183.93313599]
[209.12104797 -195.16743469]
[224.09509277 -198.87982178]
[238.69174194 -193.88566589]
[248.25325012 -181.77861023]
[249.72859192 -166.42195129]
[242.64698792 -152.71595764]
[229.26814270 -145.03414917]
[213.86120605 -145.82777405]
[205.19461060 -133.58482361]
[196.52799988 -121.34186554]
[187.86138916 -109.09890747]
[179.19477844 -96.85595703]
[187.84492493 -83.58116913]
[190.74676514 -67.96557617]
[187.42704773 -52.39405060]
[178.36500549 -39.25629044]
[164.92343140 -30.58006859]
[149.14378357 -27.71829605]
[133.43615723 -31.13811493]
[124.95911407 -18.76315308]
[116.48207092 -6.38819075]
[108.00502014 5.98677158]
[99.52797699 18.36173439]
[91.05093384 30.73669624]
[85.52476501 44.68164062]
[83.22389221 59.50412369]
[80.92301941 74.32660675]
[108.91342926 73.06968689]
[123.69786072 92.86408234]
[138.69607544 93.09507751]
[153.69430542 93.32606506]
[168.69252014 93.55706024]
[182.74809265 85.10879517]
[196.95918274 93.29273987]
[196.70664978 109.68994141]
[182.25027466 117.43237305]
[168.46153259 108.55527496]
[153.46331787 108.32428741]
[138.46508789 108.09329987]
[123.46686554 107.86230469]
[111.93263245 124.39945984]
[90.19888306 127.90175629]
[71.06578827 113.63327026]
[69.68177032 128.56929016]
[68.29774475 143.50529480]
[66.91371918 158.44131470]
[65.52969360 173.37731934]
[67.85482025 182.21678162]
[64.00761414 188.53207397]
[62.39374924 203.44500732]
[60.77988434 218.35792542]
[59.16601562 233.27085876]
[72.04853058 241.38272095]
[80.09873962 254.23110962]
[81.76531982 269.23919678]
[76.77094269 283.42428589]
[66.15674591 293.99066162]
[52.06579208 298.88049316]
[50.45192337 313.79342651]
[48.83805847 328.70635986]
[47.22418976 343.61929321]
[45.61032486 358.53219604]
[58.04181290 372.82235718]
[56.11915970 391.34423828]
[41.52658844 402.39074707]
[40.37273407 417.34631348]
[39.21887589 432.30184937]
[38.06502151 447.25741577]
[36.91116333 462.21298218]
[43.56397629 476.56744385]
[34.87057495 488.66180420]
[33.71671677 503.61737061]
[40.36952972 517.97180176]
[31.67612648 530.06622314]
[30.52227020 545.02178955]
[29.36841393 559.97729492]
[28.21455765 574.93286133]
[27.06070137 589.88842773]
[41.05295944 595.63922119]
[52.58197403 605.43395996]
[60.51825333 618.31304932]
[64.08427429 633.01470947]
[62.93068314 648.09863281]
[57.17049408 662.08703613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 197]
[13 196]
[14 195]
[15 194]
[16 193]
[18 191]
[19 190]
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[30 181]
[31 180]
[32 179]
[33 178]
[34 177]
[40 171]
[41 170]
[42 169]
[43 168]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[49 60]
[50 59]
[68 146]
[69 145]
[70 144]
[72 93]
[73 92]
[74 91]
[76 87]
[77 86]
[78 85]
[100 143]
[101 142]
[102 141]
[103 140]
[104 139]
[105 138]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
