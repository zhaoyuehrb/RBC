%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGUGACCGGCCGCGGCUCCGGCAGUCAACGCCUGCCUCCUCUCGAGCGUCCUCAGCGCAGCCGCCGCCCGCGGAGCCAGCACGAACGAGCCCAGCACCGGCCGG\
) } def
/len { sequence length } bind def

/coor [
[41.54212189 444.24984741]
[35.93736649 458.62310791]
[23.43817139 467.66598511]
[8.03298759 468.49295044]
[-5.36244678 460.84011841]
[-12.47369766 447.14947510]
[-11.03159142 431.78967285]
[-1.49629736 419.66192627]
[13.08950520 414.63619995]
[16.54874420 400.04052734]
[20.00798225 385.44485474]
[23.46722031 370.84918213]
[26.92645836 356.25350952]
[30.38569641 341.65783691]
[33.84493256 327.06216431]
[25.83138657 314.55941772]
[29.13162613 299.70806885]
[42.29998779 291.38748169]
[45.75922775 276.79180908]
[49.21846390 262.19613647]
[43.11207962 251.64176941]
[45.98749161 239.37788391]
[56.81972885 232.19132996]
[60.70201492 217.70243835]
[64.58430481 203.21354675]
[59.08697891 186.61791992]
[72.02716827 173.61875916]
[75.48640442 159.02308655]
[69.26956940 150.67636108]
[68.74668884 140.06015015]
[74.34142303 130.76313782]
[84.36760712 126.06548309]
[88.66966248 111.69564056]
[84.33394623 95.55710602]
[96.49649811 84.09748077]
[100.37878418 69.60859680]
[104.26107025 55.11970520]
[100.35915375 39.78720474]
[111.12687683 29.49616241]
[115.00916290 15.00727558]
[118.89144897 0.51838815]
[122.77373505 -13.97049904]
[116.70642853 -23.23226166]
[116.82538605 -34.08221436]
[122.84366608 -42.84334183]
[132.51675415 -46.68368530]
[137.23492432 -60.92232513]
[134.23112488 -76.45576477]
[145.57899475 -86.10330963]
[150.29716492 -100.34194946]
[155.01533508 -114.58058929]
[140.79838562 -109.79745483]
[127.24628448 -116.22710419]
[121.95835114 -130.26411438]
[127.89980316 -144.03726196]
[141.73896790 -149.82324219]
[155.71554565 -144.37757874]
[161.99215698 -130.75465393]
[169.11116028 -143.95768738]
[176.23016357 -157.16070557]
[175.21260071 -173.52824402]
[189.02624512 -182.36654663]
[203.46080017 -174.58349609]
[203.66723633 -158.18565369]
[189.43318176 -150.04170227]
[182.31417847 -136.83868408]
[175.19517517 -123.63565826]
[169.25398254 -109.86241150]
[164.53581238 -95.62377167]
[159.81764221 -81.38513184]
[163.15892029 -66.87014008]
[151.47357178 -56.20415497]
[146.75540161 -41.96551514]
[152.17304993 -23.49981689]
[137.26261902 -10.08821392]
[133.38034058 4.40067387]
[129.49804688 18.88956070]
[125.61576080 33.37844849]
[129.79536438 47.67461014]
[118.74995422 59.00199127]
[114.86766815 73.49088287]
[110.98538208 87.97976685]
[116.21417999 98.49501038]
[113.01007080 109.79299164]
[103.03950500 115.99768829]
[98.73744965 130.36753845]
[104.38719940 149.61000061]
[90.08207703 162.48231506]
[86.62284088 177.07798767]
[92.74665070 188.54460144]
[89.45715332 200.70394897]
[79.07318878 207.09584045]
[75.19090271 221.58471680]
[71.30861664 236.07360840]
[76.52918243 253.65692139]
[63.81414032 265.65536499]
[60.35490036 280.25103760]
[56.89566422 294.84671021]
[64.92907715 308.19219971]
[61.21299744 322.94500732]
[48.44060516 330.52142334]
[44.98136902 345.11709595]
[41.52212906 359.71276855]
[38.06289291 374.30844116]
[34.60365295 388.90411377]
[31.14441681 403.49978638]
[27.68517876 418.09545898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 107]
[10 106]
[11 105]
[12 104]
[13 103]
[14 102]
[15 101]
[18 98]
[19 97]
[20 96]
[23 94]
[24 93]
[25 92]
[27 89]
[28 88]
[32 86]
[33 85]
[35 82]
[36 81]
[37 80]
[39 78]
[40 77]
[41 76]
[42 75]
[46 73]
[47 72]
[49 70]
[50 69]
[51 68]
[58 67]
[59 66]
[60 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
