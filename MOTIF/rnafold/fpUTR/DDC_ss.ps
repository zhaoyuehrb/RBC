%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCACAUGUGGCUGGAAAUGCAAGAAGAGGGAAACGUGUGGCUUGGAGUUUCAAGAAGAGUGACUGUCUCAGUGCCGAGUGCCUCAGCAGCUUCUCCACAUGCUCUUCAGUCCCCAAAGUUGGAGAAUCCCAUCAAGGAGAGUAGCCCUGUAAGGAAUUCGAAUUUCCAGCAUUUUUCACCUCUGACAGAGCCCAGACACC\
) } def
/len { sequence length } bind def

/coor [
[68.04912567 682.79003906]
[56.92763138 693.48187256]
[41.78678131 696.44128418]
[27.45795631 690.72393799]
[18.51343918 678.15417480]
[17.80739021 662.74298096]
[25.56510544 649.40802002]
[39.31113052 642.40441895]
[40.70881653 627.46966553]
[42.10650635 612.53491211]
[35.58878708 599.14202881]
[44.57831573 586.12286377]
[45.97600174 571.18811035]
[47.37369156 556.25341797]
[48.77138138 541.31866455]
[47.08103180 539.07379150]
[46.18136978 536.02172852]
[46.38520813 532.46142578]
[47.89100266 528.79980469]
[50.74864578 525.50885010]
[53.07212067 510.68988037]
[39.29419708 500.37469482]
[32.60000610 484.42184448]
[34.91509628 467.18719482]
[45.69160843 453.42623901]
[62.03445435 446.98199463]
[63.89593506 432.09793091]
[65.75741577 417.21389771]
[67.61889648 402.32983398]
[69.48037720 387.44580078]
[71.22605896 372.54772949]
[72.85584259 357.63650513]
[74.48562622 342.72531128]
[76.11540985 327.81411743]
[69.80676270 314.32153320]
[78.99767303 301.44372559]
[80.62745667 286.53253174]
[82.25724030 271.62133789]
[83.88701630 256.71014404]
[82.23178864 254.43923950]
[81.37969971 251.37353516]
[81.63888550 247.81684875]
[83.20143890 244.17910767]
[86.10991669 240.93296814]
[88.66356659 226.15193176]
[91.21722412 211.37091064]
[93.77087402 196.58987427]
[96.32453156 181.80883789]
[90.86691284 167.95013428]
[100.84066010 155.66864014]
[103.39431000 140.88761902]
[105.94795990 126.10658264]
[83.60961914 124.62586975]
[68.09166718 105.55261230]
[71.74930573 79.01155090]
[63.19882202 66.68721771]
[54.64833832 54.36288071]
[46.09785461 42.03854752]
[37.54737091 29.71421242]
[28.99688530 17.38987732]
[20.44640160 5.06554317]
[9.64001179 3.75053072]
[1.51126432 -3.15572500]
[-1.40914142 -13.18599701]
[1.61227798 -22.95661545]
[-6.55078459 -35.54090881]
[-14.71384716 -48.12519836]
[-32.83480072 -48.53964996]
[-46.95911789 -59.64693069]
[-51.55326462 -76.85559845]
[-44.96164703 -93.23305511]
[-53.51213074 -105.55738831]
[-62.15819550 -117.81485748]
[-70.89930725 -130.00473022]
[-79.64042664 -142.19459534]
[-93.97013092 -148.90057373]
[-95.09905243 -163.75233459]
[-103.84017181 -175.94219971]
[-112.58128357 -188.13208008]
[-126.72500610 -197.48042297]
[-121.65736389 -213.65927124]
[-104.70792389 -213.26843262]
[-100.39141846 -196.87318420]
[-91.65029907 -184.68331909]
[-82.90918732 -172.49345398]
[-69.20470428 -166.65937805]
[-67.45055389 -150.93571472]
[-58.70944214 -138.74584961]
[-49.96832657 -126.55597687]
[-43.51104355 -122.94958496]
[-41.18779755 -114.10787201]
[-32.63731384 -101.78353882]
[-20.58710098 -103.32150269]
[-8.95856476 -99.56523132]
[0.02030445 -91.16985321]
[4.60181808 -79.68540192]
[3.85856986 -67.27085114]
[-2.12955546 -56.28826141]
[6.03350735 -43.70397186]
[14.19657040 -31.11967850]
[32.01644516 -23.62452888]
[32.77073669 -3.48494077]
[41.32122040 8.83939362]
[49.87170410 21.16372871]
[58.42218781 33.48806381]
[66.97267151 45.81239700]
[75.52315521 58.13673401]
[84.07363892 70.46106720]
[91.57001495 70.22782135]
[86.49335480 56.11301804]
[98.34857178 46.92313766]
[110.75211334 55.35830688]
[106.56275940 69.76132202]
[114.05912781 69.52806854]
[121.82687378 56.69599533]
[129.59461975 43.86392212]
[129.39349365 27.46600723]
[143.63018799 19.32666969]
[157.65919495 27.81896210]
[157.04867554 44.20674133]
[142.42669678 51.63166428]
[134.65895081 64.46373749]
[126.89120483 77.29581451]
[129.66412354 91.05033112]
[126.59828949 103.07621002]
[141.01435852 98.93168640]
[155.43041992 94.78716278]
[169.84648132 90.64263916]
[180.97160339 79.39353180]
[195.34123230 83.31305695]
[209.75730896 79.16853333]
[213.54687500 64.35008240]
[224.17469788 53.48977661]
[238.71495056 49.43423462]
[253.23576355 53.17617798]
[263.86233521 63.61368179]
[278.27841187 59.46915436]
[292.69445801 55.32462692]
[297.86474609 40.69425964]
[310.66619873 31.92482376]
[326.17633057 32.38834381]
[338.43124390 41.90658951]
[342.71862793 56.81959915]
[337.38992310 71.39302063]
[324.49414062 80.02307129]
[308.98992920 79.39131927]
[296.83898926 69.74069214]
[282.42291260 73.88521576]
[268.00686646 78.02974701]
[264.54608154 92.51727295]
[254.22969055 103.39974976]
[239.75566101 107.68563080]
[224.98274231 104.12786865]
[213.90182495 93.58459473]
[199.48576355 97.72911835]
[189.39178467 108.68178558]
[173.99101257 105.05870056]
[159.57495117 109.20322418]
[145.15887451 113.34775543]
[130.74281311 117.49227905]
[120.72899628 128.66023254]
[118.17533875 143.44126892]
[115.62168884 158.22230530]
[120.89664459 173.13824463]
[111.10556030 184.36250305]
[108.55191040 199.14352417]
[105.99825287 213.92456055]
[103.44460297 228.70558167]
[100.89094543 243.48661804]
[98.79821777 258.33990479]
[97.16843414 273.25112915]
[95.53865051 288.16232300]
[93.90886688 303.07351685]
[100.10094452 317.63265991]
[91.02660370 329.44390869]
[89.39682770 344.35510254]
[87.76704407 359.26629639]
[86.13726044 374.17749023]
[88.31675720 383.05572510]
[84.36442566 389.30728149]
[82.50294495 404.19131470]
[80.64146423 419.07537842]
[78.77998352 433.95941162]
[76.91850281 448.84347534]
[87.91522217 455.63009644]
[95.49879456 466.03540039]
[98.57006836 478.49118042]
[96.70666504 491.13674927]
[90.22066498 502.09674072]
[80.10703278 509.75936890]
[67.89107513 513.01336670]
[65.56760406 527.83227539]
[63.70612335 542.71636963]
[62.30843353 557.65106201]
[60.91074371 572.58581543]
[59.51305389 587.52056885]
[65.93080139 601.98162842]
[57.04124832 613.93261719]
[55.64355850 628.86730957]
[54.24586868 643.80206299]
[66.45369720 653.23461914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 200]
[9 199]
[10 198]
[12 196]
[13 195]
[14 194]
[15 193]
[20 192]
[21 191]
[26 184]
[27 183]
[28 182]
[29 181]
[30 180]
[31 178]
[32 177]
[33 176]
[34 175]
[36 173]
[37 172]
[38 171]
[39 170]
[44 169]
[45 168]
[46 167]
[47 166]
[48 165]
[50 163]
[51 162]
[52 161]
[55 108]
[56 107]
[57 106]
[58 105]
[59 104]
[60 103]
[61 102]
[65 100]
[66 99]
[67 98]
[71 92]
[72 91]
[73 89]
[74 88]
[75 87]
[77 85]
[78 84]
[79 83]
[114 123]
[115 122]
[116 121]
[125 160]
[126 159]
[127 158]
[128 157]
[130 155]
[131 154]
[136 149]
[137 148]
[138 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
