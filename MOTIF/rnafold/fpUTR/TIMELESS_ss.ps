%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCGCUCGGAGUCACGUGGACCAGCCCGGCUCGCCCCGCCUCGCUCUUCGCGCAGGCGGGGACCGGUCCAGCUGAGCCUGGUGGCGGAAAGGCUGCGGCCCCGCGCCAGAGGGCCGGUGGCUCCUCCGGGCUUCUGAGGACCCGCAGGGAGCGGGCCUCAUCAUUUCUGUCUCCUGUUUCUCCACUUCCUUCUCUGUUGGUUGGUCCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[4.88681412 506.22525024]
[-1.30771863 520.08135986]
[-12.09211063 530.76129150]
[-26.00786209 536.82073975]
[-41.17298126 537.44006348]
[-55.53651047 532.53564453]
[-67.15589905 522.77069092]
[-74.45972443 509.46585083]
[-76.46019745 494.42050171]
[-72.88677216 479.66940308]
[-64.22273254 467.20751953]
[-51.63981247 458.72018433]
[-36.83974838 455.35531616]
[-34.68557358 440.51080322]
[-32.53140259 425.66629028]
[-30.37723160 410.82177734]
[-32.52629852 403.75457764]
[-28.08357048 395.77947998]
[-25.71570396 380.96752930]
[-23.34783936 366.15560913]
[-20.97997475 351.34368896]
[-18.61211014 336.53176880]
[-16.24424553 321.71981812]
[-13.87638092 306.90789795]
[-11.50851536 292.09597778]
[-9.14065075 277.28402710]
[-6.77278614 262.47210693]
[-4.40492105 247.66018677]
[-22.34127235 247.30307007]
[-32.48846817 235.05857849]
[-47.48690796 234.84242249]
[-62.48535156 234.62626648]
[-77.48379517 234.41011047]
[-92.48223877 234.19395447]
[-107.48068237 233.97779846]
[-122.44915009 234.94985962]
[-137.29365540 237.10403442]
[-152.13816833 239.25819397]
[-166.98268127 241.41236877]
[-181.82719421 243.56654358]
[-196.67170715 245.72071838]
[-211.51622009 247.87489319]
[-226.36073303 250.02905273]
[-241.18934631 252.29013062]
[-256.00128174 254.65800476]
[-270.81320190 257.02587891]
[-281.35095215 269.12277222]
[-297.37197876 268.28240967]
[-306.58630371 255.14939880]
[-301.92550659 239.79829407]
[-286.96493530 234.00514221]
[-273.18106079 242.21394348]
[-258.36914062 239.84606934]
[-243.55720520 237.47821045]
[-237.45167542 233.32055664]
[-228.51490784 235.18455505]
[-213.67039490 233.03038025]
[-198.82588196 230.87620544]
[-183.98136902 228.72203064]
[-169.13685608 226.56785583]
[-154.29234314 224.41368103]
[-139.44783020 222.25952148]
[-124.60332489 220.10534668]
[-138.10197449 213.56422424]
[-147.08641052 201.55256653]
[-149.54789734 186.75590515]
[-144.93612671 172.48245239]
[-134.28216553 161.92341614]
[-119.96800232 157.43957520]
[-105.19396973 160.03340149]
[-93.26320648 169.12498474]
[-86.84316254 182.68164062]
[-87.36920929 197.67242432]
[-94.72374725 210.74571228]
[-107.26451874 218.97935486]
[-92.26608276 219.19551086]
[-77.26763916 219.41166687]
[-62.26919556 219.62782288]
[-47.27075195 219.84397888]
[-32.27230835 220.06013489]
[-14.61658764 207.34100342]
[5.91433048 220.85461426]
[14.08995819 208.27848816]
[14.53983212 193.39067078]
[28.54852486 186.03764343]
[36.72415161 173.46150208]
[44.89978027 160.88537598]
[53.07540894 148.30924988]
[61.25103378 135.73310852]
[69.42666626 123.15698242]
[77.60228729 110.58084869]
[85.77791595 98.00471497]
[88.35898590 83.22844696]
[84.93091583 68.62541962]
[81.50284576 54.02239609]
[76.49749756 46.38782501]
[78.13220215 39.18425751]
[74.91492462 24.53334618]
[71.69764709 9.88243771]
[60.24912643 -1.85908484]
[64.95317078 -17.56908226]
[80.97066498 -21.08645439]
[91.82418823 -8.79283142]
[86.34855652 6.66516161]
[89.56583405 21.31607056]
[92.78311157 35.96697998]
[96.10587311 50.59432602]
[99.53394318 65.19734955]
[102.96200562 79.80037689]
[117.89624786 81.20339203]
[123.98413086 67.49435425]
[130.07200623 53.78532028]
[136.15989685 40.07628250]
[142.24777222 26.36724472]
[140.77729797 10.61452198]
[153.01417542 2.12286353]
[159.10205078 -11.58617306]
[165.18994141 -25.29520988]
[171.27781677 -39.00424576]
[163.39010620 -52.36701965]
[164.89675903 -67.81077576]
[175.21846008 -79.39707947]
[190.38627625 -82.67075348]
[204.56788635 -76.37301636]
[212.31016541 -62.92546463]
[210.63606262 -47.49895859]
[200.18928528 -36.02531052]
[184.98686218 -32.91636658]
[178.89897156 -19.20732880]
[172.81109619 -5.49829149]
[166.72320557 8.21074486]
[168.62913513 22.98290634]
[155.95681763 32.45512772]
[149.86892700 46.16416168]
[143.78105164 59.87319946]
[137.69317627 73.58223724]
[131.60528564 87.29127502]
[142.13519287 97.97402954]
[155.93052673 92.08432770]
[169.72587585 86.19463348]
[183.52120972 80.30493927]
[190.18063354 74.06055450]
[197.55804443 74.43135834]
[211.43682861 68.74106598]
[225.31561279 63.05078125]
[239.19439697 57.36049652]
[253.07318115 51.67020798]
[260.56744385 37.48516846]
[276.35653687 34.64189148]
[288.32839966 45.32149887]
[287.29925537 61.33150864]
[274.05856323 70.39041138]
[258.76345825 65.54898834]
[244.88468933 71.23928070]
[231.00590515 76.92956543]
[217.12712097 82.61985016]
[203.24833679 88.31014252]
[189.41091919 94.10028076]
[175.61557007 99.98997498]
[161.82022095 105.87966919]
[148.02488708 111.76937103]
[134.63139343 121.63889313]
[120.61638641 124.76840210]
[108.67221832 121.96591187]
[100.86789703 114.98069000]
[98.35404968 106.18034363]
[90.17842102 118.75647736]
[82.00279236 131.33261108]
[73.82717133 143.90873718]
[65.65154266 156.48487854]
[57.47591400 169.06100464]
[49.30028534 181.63713074]
[41.12465668 194.21327209]
[40.09000778 210.00061035]
[26.66609001 216.45411682]
[18.49046326 229.03024292]
[27.73850060 217.22033691]
[39.50142288 207.91262817]
[53.12126160 201.62771606]
[67.83618164 198.71717834]
[82.82308197 199.34382629]
[97.24367523 203.47257996]
[110.29132080 210.87251282]
[121.23619080 221.12968445]
[129.46607971 233.67037964]
[134.52062988 247.79310608]
[136.11712646 262.70791626]
[134.16625977 277.58050537]
[128.77716064 291.57897949]
[120.25125885 303.92034912]
[109.06546783 313.91424561]
[95.84547424 321.00167847]
[81.33074188 324.78619385]
[66.33316803 325.05612183]
[51.69165802 321.79635620]
[38.22519302 315.18920898]
[26.68702888 305.60427856]
[17.72256470 293.57769775]
[11.83323383 279.78219604]
[9.34846210 264.98944092]
[10.40700722 250.02804565]
[8.03914261 264.83996582]
[5.67127752 279.65191650]
[3.30341244 294.46383667]
[0.93554765 309.27575684]
[-1.43231726 324.08767700]
[-3.80018210 338.89962769]
[-6.16804695 353.71154785]
[-8.53591156 368.52346802]
[-10.90377712 383.33538818]
[-13.27164173 398.14733887]
[-15.53271866 412.97592163]
[-17.68689156 427.82043457]
[-19.84106255 442.66494751]
[-21.99523544 457.50946045]
[-8.76210785 464.94241333]
[0.88930434 476.65628052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 215]
[14 214]
[15 213]
[16 212]
[18 211]
[19 210]
[20 209]
[21 208]
[22 207]
[23 206]
[24 205]
[25 204]
[26 203]
[27 202]
[28 201]
[30 80]
[31 79]
[32 78]
[33 77]
[34 76]
[35 75]
[36 63]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[43 56]
[44 54]
[45 53]
[46 52]
[82 176]
[83 175]
[85 173]
[86 172]
[87 171]
[88 170]
[89 169]
[90 168]
[91 167]
[92 166]
[93 109]
[94 108]
[95 107]
[97 106]
[98 105]
[99 104]
[110 137]
[111 136]
[112 135]
[113 134]
[114 133]
[116 131]
[117 130]
[118 129]
[119 128]
[138 161]
[139 160]
[140 159]
[141 158]
[143 157]
[144 156]
[145 155]
[146 154]
[147 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
