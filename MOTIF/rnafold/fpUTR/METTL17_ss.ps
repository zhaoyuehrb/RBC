%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:30:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCUUCAAGUCGGCCCAAACACGGUUUCUGCCUCAAGGAUUAUUUAUAUAACCAUUGCUUAUUGGCUGCUGGCAAACACUCGCUCUUCUCGUUGGCUGAAACUGUCGGGAGAAGUUCUGCGAAGGCUGCUCCUUGCGGCGUUGGGACUGAGGGUCACAGGCACCUGUAUUUCCGUUUCCGGUUCGCCUCCGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[189.42448425 151.19329834]
[176.09194946 144.31990051]
[162.75941467 137.44650269]
[149.42687988 130.57310486]
[136.09434509 123.69970703]
[122.76181793 116.82630920]
[109.42929077 109.95291138]
[103.36946869 116.05373383]
[93.54833984 117.97394562]
[82.98389435 113.61089325]
[68.40671539 117.14727783]
[53.82954407 120.68366241]
[39.25236893 124.22004700]
[24.67519760 127.75643158]
[10.09802341 131.29281616]
[-4.42120743 135.06002808]
[-18.87883949 139.05714417]
[-33.33647156 143.05424500]
[-47.79410553 147.05136108]
[-50.75633240 162.49279785]
[-60.22522736 174.95048523]
[-74.17576599 181.87060547]
[-89.67316437 181.87199402]
[-103.49018097 175.02114868]
[-115.28097534 184.29353333]
[-127.07177734 193.56591797]
[-132.66107178 208.98316956]
[-148.85258484 211.58451843]
[-158.98986816 198.69392395]
[-152.64454651 183.57211304]
[-136.34416199 181.77511597]
[-124.55335999 172.50273132]
[-112.76256561 163.23034668]
[-113.58856964 161.33732605]
[-114.29710388 159.39726257]
[-129.22918701 160.82310486]
[-144.16125488 162.24894714]
[-159.08155823 163.79319763]
[-173.98913574 165.45578003]
[-182.18133545 169.52093506]
[-189.14616394 167.02453613]
[-204.07824707 168.45037842]
[-219.01031494 169.87622070]
[-233.94239807 171.30204773]
[-246.97961426 181.25007629]
[-262.00717163 174.68467712]
[-263.56600952 158.35978699]
[-250.05253601 149.06904602]
[-235.36824036 156.36997986]
[-220.43615723 154.94413757]
[-205.50408936 153.51829529]
[-190.57200623 152.09245300]
[-175.65170288 150.54820251]
[-160.74412537 148.88562012]
[-154.43821716 145.01570129]
[-145.58709717 147.31686401]
[-130.65501404 145.89102173]
[-115.72294617 144.46517944]
[-109.58645630 128.74002075]
[-96.54673004 117.89156342]
[-79.80587769 114.68742371]
[-63.52529526 120.00511932]
[-51.79121017 132.59371948]
[-37.33358002 128.59661865]
[-22.87594604 124.59951019]
[-8.41831398 120.60240173]
[-5.32148933 116.95391083]
[0.10421053 115.21848297]
[6.56163931 116.71564484]
[21.13881302 113.17926025]
[35.71598816 109.64287567]
[50.29315948 106.10649109]
[64.87033081 102.57010651]
[79.44750977 99.03372192]
[64.52527618 100.55919647]
[51.32425690 93.43647766]
[44.40635681 80.12698364]
[46.16220856 65.23011017]
[55.98504257 53.89379883]
[70.48035431 50.03556824]
[84.63896942 54.98872375]
[93.56805420 67.04158020]
[94.18187714 82.02935791]
[95.60771179 67.09727478]
[85.52404022 48.19652939]
[98.16356659 31.88780022]
[98.87729645 16.90479088]
[99.59102631 1.92178059]
[100.30475616 -13.06122971]
[101.01848602 -28.04423904]
[101.73221588 -43.02724838]
[99.01250458 -51.75884628]
[102.57799530 -58.24175644]
[103.52935028 -73.21155548]
[104.48071289 -88.18135834]
[105.43206787 -103.15115356]
[106.38343048 -118.12095642]
[94.94187927 -128.78045654]
[93.08025360 -144.30683899]
[101.67755890 -157.36900330]
[116.67440796 -161.79942322]
[130.98974609 -155.50616455]
[137.86431885 -141.46072388]
[134.05213928 -126.29492950]
[121.35322571 -117.16960144]
[120.40187073 -102.19979858]
[119.45050812 -87.22999573]
[118.49915314 -72.26020050]
[117.54779053 -57.29039764]
[116.71522522 -42.31352234]
[116.00149536 -27.33051109]
[115.28776550 -12.34750080]
[114.57403564 2.63550925]
[113.86030579 17.61851883]
[113.14658356 32.60152817]
[120.12311554 38.12338257]
[123.82714844 46.36425018]
[123.30985260 55.52235413]
[118.56104279 63.53059769]
[110.53979492 68.52311707]
[109.11395264 83.45519257]
[116.30268860 96.62038422]
[129.63522339 103.49378204]
[142.96774292 110.36717987]
[156.30027771 117.24057770]
[169.63281250 124.11397552]
[182.96534729 130.98736572]
[196.29788208 137.86076355]
[209.73777771 144.52177429]
[223.28167725 150.96868896]
[236.82557678 157.41561890]
[250.36947632 163.86253357]
[263.91339111 170.30946350]
[275.50354004 162.83779907]
[289.16387939 162.07751465]
[301.31762695 168.12048340]
[308.83547974 179.29124451]
[309.84100342 192.60998535]
[323.28091431 199.27098083]
[336.72079468 205.93197632]
[350.16070557 212.59297180]
[365.03167725 204.54446411]
[381.60571289 206.91815186]
[393.38372803 218.58329773]
[395.86660767 234.80526733]
[409.41049194 241.25219727]
[422.95440674 247.69911194]
[429.58157349 247.55621338]
[434.53683472 250.36607361]
[436.82077026 254.57147217]
[450.15332031 261.44488525]
[465.96481323 260.89129639]
[473.73184204 273.60046387]
[487.06436157 280.47384644]
[504.86639404 274.01730347]
[521.45538330 282.46841431]
[526.52117920 300.05166626]
[540.06506348 306.49859619]
[553.60894775 312.94552612]
[567.15289307 319.39242554]
[583.44866943 317.55413818]
[592.96954346 330.90646362]
[585.92126465 345.71368408]
[569.55450439 346.74340820]
[560.70593262 332.93634033]
[547.16204834 326.48941040]
[533.61816406 320.04248047]
[520.07427979 313.59558105]
[510.39407349 319.65728760]
[498.87026978 320.29513550]
[488.36410522 315.23471069]
[481.54019165 305.63088989]
[480.19097900 293.80639648]
[466.85842896 286.93298340]
[452.00054932 287.97821045]
[443.27990723 274.77740479]
[429.94738770 267.90402222]
[416.50747681 261.24301147]
[402.96356201 254.79608154]
[389.41967773 248.34916687]
[378.32888794 255.79187012]
[364.90084839 256.78775024]
[352.63778687 250.96977234]
[344.79113770 239.76203918]
[343.49972534 226.03288269]
[330.05981445 219.37188721]
[316.61990356 212.71089172]
[303.17999268 206.04988098]
[288.89385986 214.12597656]
[272.44372559 212.07873535]
[260.33251953 200.51797485]
[257.46646118 183.85336304]
[243.92256165 177.40643311]
[230.37866211 170.95951843]
[216.83476257 164.51258850]
[203.29086304 158.06565857]
[198.56118774 158.79502869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 128]
[2 127]
[3 126]
[4 125]
[5 124]
[6 123]
[7 122]
[10 74]
[11 73]
[12 72]
[13 71]
[14 70]
[15 69]
[16 66]
[17 65]
[18 64]
[19 63]
[24 33]
[25 32]
[26 31]
[35 58]
[36 57]
[37 56]
[38 54]
[39 53]
[41 52]
[42 51]
[43 50]
[44 49]
[83 121]
[84 120]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
[91 110]
[93 109]
[94 108]
[95 107]
[96 106]
[97 105]
[129 196]
[130 195]
[131 194]
[132 193]
[133 192]
[138 188]
[139 187]
[140 186]
[141 185]
[145 180]
[146 179]
[147 178]
[150 177]
[151 176]
[153 174]
[154 173]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
