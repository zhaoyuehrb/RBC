%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FBXW9)
} def

/sequence { (\
AAGUGCCCUCGUGCUGCCUAGGAGACAAGACGCGAGGCCGGCAGCGCCCACCCGGUCGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 15 0.004895521 ubox
3 14 0.005127985 ubox
3 26 0.004498227 ubox
3 38 0.012114618 ubox
3 42 0.353715935 ubox
3 45 0.019228095 ubox
3 47 0.015385506 ubox
3 51 0.006080679 ubox
3 59 0.082278209 ubox
4 13 0.005118585 ubox
4 25 0.004495532 ubox
4 37 0.003989988 ubox
4 40 0.246458933 ubox
4 41 0.307079305 ubox
4 43 0.789169644 ubox
4 44 0.011450701 ubox
4 46 0.015405080 ubox
4 50 0.006089377 ubox
4 58 0.082242274 ubox
4 60 0.025152868 ubox
5 12 0.005194022 ubox
5 38 0.226348167 ubox
5 39 0.333233989 ubox
5 42 0.876020552 ubox
5 45 0.015670522 ubox
5 49 0.006009519 ubox
5 56 0.012414296 ubox
5 57 0.081599533 ubox
5 59 0.031840303 ubox
6 11 0.005220049 ubox
6 37 0.187012177 ubox
6 41 0.875864351 ubox
6 44 0.015663262 ubox
6 55 0.069082401 ubox
6 58 0.031778497 ubox
7 22 0.004411976 ubox
7 36 0.132489977 ubox
7 37 0.755603363 ubox
7 40 0.620497916 ubox
7 54 0.068836394 ubox
7 55 0.042818249 ubox
8 21 0.004413438 ubox
8 24 0.006800068 ubox
8 36 0.985734395 ubox
8 37 0.043947539 ubox
8 40 0.003685043 ubox
8 54 0.042839278 ubox
9 20 0.004237582 ubox
9 23 0.006820662 ubox
9 35 0.996041540 ubox
9 36 0.019342742 ubox
9 37 0.007157858 ubox
9 55 0.003643513 ubox
10 22 0.006820265 ubox
10 32 0.004151490 ubox
10 34 0.996464978 ubox
10 36 0.007774242 ubox
10 54 0.004083772 ubox
11 17 0.003231809 ubox
11 31 0.005745035 ubox
11 33 0.996458129 ubox
11 47 0.081428121 ubox
11 51 0.007011536 ubox
12 20 0.006334367 ubox
12 27 0.007218285 ubox
12 30 0.006507380 ubox
12 32 0.996007459 ubox
12 34 0.007873800 ubox
12 43 0.007694242 ubox
12 46 0.081641857 ubox
12 50 0.006344499 ubox
13 19 0.005963260 ubox
13 26 0.012248964 ubox
13 31 0.995256798 ubox
13 33 0.008561421 ubox
13 42 0.008590196 ubox
13 45 0.081936515 ubox
14 21 0.018451591 ubox
14 22 0.028425466 ubox
14 24 0.047382398 ubox
14 29 0.967874470 ubox
14 32 0.008544024 ubox
14 41 0.008592569 ubox
14 44 0.081991075 ubox
15 20 0.017386184 ubox
15 21 0.028248875 ubox
15 23 0.047575206 ubox
15 27 0.460485285 ubox
15 28 0.869638810 ubox
15 32 0.005030094 ubox
15 40 0.008507336 ubox
15 43 0.081976722 ubox
16 26 0.620831512 ubox
16 31 0.014391024 ubox
16 33 0.003558230 ubox
16 38 0.006505969 ubox
16 39 0.006025890 ubox
16 42 0.082000957 ubox
17 32 0.003558340 ubox
17 37 0.008877252 ubox
17 41 0.081974765 ubox
18 24 0.694200698 ubox
18 29 0.052519766 ubox
18 36 0.008891912 ubox
18 40 0.081574228 ubox
19 23 0.627149866 ubox
19 28 0.052624770 ubox
19 35 0.008707470 ubox
21 39 0.072115236 ubox
22 38 0.072302236 ubox
29 57 0.007545598 ubox
30 56 0.007556699 ubox
31 55 0.007547725 ubox
32 38 0.007804538 ubox
32 59 0.005405499 ubox
33 37 0.007956445 ubox
33 54 0.007526857 ubox
33 58 0.005407482 ubox
34 53 0.007558882 ubox
34 57 0.004916057 ubox
35 56 0.003746790 ubox
36 52 0.008915961 ubox
36 57 0.013109022 ubox
37 51 0.009188865 ubox
37 56 0.022596771 ubox
38 55 0.044229005 ubox
39 46 0.003926233 ubox
39 54 0.044517642 ubox
39 58 0.008747088 ubox
40 45 0.004718396 ubox
40 48 0.018799171 ubox
40 52 0.003181322 ubox
40 53 0.044090552 ubox
40 57 0.009399548 ubox
41 47 0.019092714 ubox
41 51 0.004363454 ubox
41 52 0.043640870 ubox
41 56 0.009317441 ubox
41 59 0.024879677 ubox
42 46 0.019131447 ubox
42 55 0.009253852 ubox
42 58 0.024859422 ubox
44 56 0.010397228 ubox
44 59 0.993302507 ubox
45 54 0.008588620 ubox
45 55 0.010235575 ubox
45 58 0.994315711 ubox
46 53 0.008692435 ubox
46 56 0.127765558 ubox
46 57 0.985180329 ubox
46 59 0.022150237 ubox
47 55 0.591645955 ubox
47 58 0.022070711 ubox
48 54 0.589592230 ubox
48 55 0.799241535 ubox
49 54 0.799956069 ubox
50 56 0.009162943 ubox
51 55 0.009213770 ubox
4 43 0.9500000 lbox
5 42 0.9500000 lbox
6 41 0.9500000 lbox
7 40 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 29 0.9500000 lbox
15 28 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
