%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGCCCAGGCUGCGGCUCCGCUCCCGGCCACGGGGGGCGCUGCGCUGCGCCGGUGGUUGGUGGUGGCUGUUGGGGGGGGUGGGGGGGAACGGCGGCCGCGGGUGGUGCGGAGGGAGGCCUUGCGGGCGGAUCGGGCGCUUGGCGGCGGAGGUGGUGGGAGGCGGCGGGCGGGAGCGCGGGUCAGGCCGGCCCCGGCG\
) } def
/len { sequence length } bind def

/coor [
[101.24816132 989.21270752]
[111.13999939 976.58215332]
[110.67118073 961.58947754]
[110.20236969 946.59680176]
[109.73355103 931.60412598]
[109.26473236 916.61145020]
[108.79591370 901.61877441]
[108.32709503 886.62609863]
[105.51528931 882.75659180]
[105.10986328 877.07781982]
[108.08532715 871.15911865]
[108.08532715 856.15911865]
[108.08532715 841.15911865]
[108.08532715 826.15911865]
[99.75390625 817.38208008]
[99.63593292 804.88012695]
[108.34039307 795.35479736]
[108.57482910 780.35662842]
[108.80926514 765.35845947]
[109.04370117 750.36029053]
[109.27813721 735.36212158]
[109.39536285 720.36254883]
[109.39536285 705.36254883]
[109.39536285 690.36254883]
[109.39536285 675.36254883]
[109.39536285 660.36254883]
[109.39536285 645.36254883]
[109.39536285 630.36254883]
[109.39536285 615.36254883]
[101.65806580 602.63531494]
[109.39536285 588.83514404]
[109.39536285 573.83514404]
[99.81335449 559.13714600]
[109.14213562 543.26519775]
[108.90769196 528.26702881]
[95.32660675 522.10101318]
[85.72998810 510.60260010]
[82.06240082 496.01800537]
[85.10324097 481.22702026]
[94.30184174 469.17410278]
[107.87628174 462.28237915]
[107.64184570 447.28421021]
[107.40740967 432.28604126]
[107.17297363 417.28787231]
[106.93852997 402.28970337]
[106.70409393 387.29153442]
[96.89353943 372.74508667]
[105.97311401 356.72930908]
[105.50429535 341.73663330]
[105.03547668 326.74395752]
[104.56665802 311.75131226]
[103.98069000 296.76275635]
[103.27760315 281.77923584]
[102.57452393 266.79571533]
[101.87143707 251.81221008]
[101.05128479 236.83464050]
[100.11410522 221.86395264]
[99.17692566 206.89324951]
[90.65956116 194.67427063]
[97.51953125 180.41763306]
[96.58235168 165.44694519]
[95.64517212 150.47624207]
[94.70799255 135.50555420]
[93.77082062 120.53485870]
[72.92016602 108.19659424]
[72.87328339 77.68238831]
[65.47502899 64.63379669]
[58.07677460 51.58520126]
[50.67852020 38.53660583]
[43.28026962 25.48800850]
[35.88201523 12.43941402]
[28.48376274 -0.60918176]
[21.08550835 -13.65777779]
[13.68725491 -26.70637321]
[6.28900146 -39.75496674]
[-8.59040546 -36.94748306]
[-23.57483482 -39.12591934]
[-37.03889084 -46.05397797]
[-47.52208710 -56.98015213]
[-53.88729095 -70.71925354]
[-55.44404984 -85.78096771]
[-52.02349854 -100.53150940]
[-43.99667358 -113.37085724]
[-32.23426437 -122.90628815]
[-18.01216888 -128.10346985]
[-2.87309480 -128.39865112]
[11.54078579 -123.75982666]
[23.66596222 -114.69016266]
[32.18718719 -102.17347717]
[36.18014145 -87.56748199]
[35.21169662 -72.45652771]
[29.38690567 -58.47974396]
[19.33759689 -47.15322113]
[26.73585129 -34.10462570]
[34.13410568 -21.05603027]
[41.53235626 -8.00743484]
[48.93061066 5.04116058]
[56.32886505 18.08975601]
[63.72711945 31.13835144]
[71.12537384 44.18694687]
[78.52362061 57.23554230]
[85.92187500 70.28414154]
[93.41821289 70.51854706]
[89.23127747 56.11474228]
[101.63637543 47.68186569]
[113.48979187 56.87406158]
[108.41088867 70.98736572]
[115.90721893 71.22177124]
[124.10627747 58.66090393]
[125.17035675 42.87552261]
[138.60627747 36.44705200]
[146.80532837 23.88618088]
[147.86941528 8.10079765]
[161.30534363 1.67232740]
[169.50439453 -10.88854313]
[177.70344543 -23.44941330]
[185.90251160 -36.01028442]
[189.49708557 -52.57878876]
[206.41316223 -53.71130753]
[212.18426514 -37.76982880]
[198.46337891 -27.81122780]
[190.26432800 -15.25035763]
[182.06526184 -2.68948650]
[173.86621094 9.87138367]
[173.38858032 24.75832939]
[159.36621094 32.08523560]
[151.16714478 44.64610672]
[150.68952942 59.53305435]
[136.66714478 66.85996246]
[128.46809387 79.42082977]
[130.55403137 98.97495270]
[122.05728149 113.79344940]
[108.74151611 119.59767914]
[109.67868805 134.56837463]
[110.61586761 149.53907776]
[111.55304718 164.50976562]
[112.49022675 179.48045349]
[121.07462311 192.77026367]
[114.14762115 205.95608521]
[115.08480072 220.92677307]
[116.02198029 235.89746094]
[119.68397522 244.27474976]
[116.85494995 251.10911560]
[117.55803680 266.09265137]
[118.26111603 281.07614136]
[118.96420288 296.05966187]
[122.49482727 304.49316406]
[119.55933380 311.28247070]
[120.02815247 326.27514648]
[120.49696350 341.26782227]
[120.96578217 356.26049805]
[129.81805420 365.64862061]
[129.89549255 378.15090942]
[121.70226288 387.05709839]
[121.93669891 402.05526733]
[122.17113495 417.05343628]
[122.40557861 432.05160522]
[122.64001465 447.04977417]
[122.87445068 462.04794312]
[136.65766907 468.51202393]
[146.22846985 480.27157593]
[149.73011780 494.96029663]
[146.52015686 509.65237427]
[137.28759766 521.44512939]
[123.90586090 528.03259277]
[124.14030457 543.03076172]
[132.84475708 552.55609131]
[132.72677612 565.05804443]
[124.39536285 573.83514404]
[124.39536285 588.83514404]
[132.13265991 602.63531494]
[124.39536285 615.36254883]
[124.39536285 630.36254883]
[124.39536285 645.36254883]
[124.39536285 660.36254883]
[124.39536285 675.36254883]
[124.39536285 690.36254883]
[124.39536285 705.36254883]
[124.39536285 720.36254883]
[127.52680969 728.95227051]
[124.27630615 735.59655762]
[124.04187012 750.59472656]
[123.80743408 765.59289551]
[123.57299805 780.59106445]
[123.33855438 795.58923340]
[132.66734314 811.46112061]
[123.08532715 826.15911865]
[123.08532715 841.15911865]
[123.08532715 856.15911865]
[123.08532715 871.15911865]
[123.31976318 886.15728760]
[123.78858185 901.14996338]
[124.25740051 916.14263916]
[124.72621918 931.13531494]
[125.19503784 946.12799072]
[125.66385651 961.12066650]
[126.13267517 976.11334229]
[136.79432678 988.10119629]
[133.92738342 1003.88598633]
[119.73113251 1011.35900879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[11 190]
[12 189]
[13 188]
[14 187]
[17 185]
[18 184]
[19 183]
[20 182]
[21 181]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[31 170]
[32 169]
[34 166]
[35 165]
[41 159]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[48 151]
[49 150]
[50 149]
[51 148]
[52 146]
[53 145]
[54 144]
[55 143]
[56 141]
[57 140]
[58 139]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[66 102]
[67 101]
[68 100]
[69 99]
[70 98]
[71 97]
[72 96]
[73 95]
[74 94]
[75 93]
[108 130]
[109 129]
[111 127]
[112 126]
[114 124]
[115 123]
[116 122]
[117 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
