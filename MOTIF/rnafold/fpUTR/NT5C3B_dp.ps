%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NT5C3B)
} def

/sequence { (\
AGGCGGGAGGCGACGCCUGCGCAGUGCGGUCGCGGGGCUGUCGUUGUCCCGCGAGCCGCCGACCAGGCCUCGAACGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.169667750 ubox
1 70 0.286768276 ubox
2 17 0.179869477 ubox
2 57 0.014475724 ubox
2 60 0.031993775 ubox
2 64 0.025694336 ubox
2 69 0.331932884 ubox
2 71 0.008255578 ubox
3 11 0.251524005 ubox
3 16 0.180010371 ubox
3 20 0.054383050 ubox
3 22 0.112974351 ubox
3 27 0.003189540 ubox
3 44 0.003274537 ubox
3 52 0.600841710 ubox
3 56 0.013474579 ubox
3 59 0.031730583 ubox
3 63 0.025179902 ubox
3 68 0.332072143 ubox
4 10 0.258561304 ubox
4 12 0.026819142 ubox
4 15 0.180053670 ubox
4 19 0.054451226 ubox
4 21 0.113144224 ubox
4 26 0.003193241 ubox
4 43 0.003326379 ubox
4 51 0.618323331 ubox
4 55 0.012534696 ubox
4 58 0.031730467 ubox
4 61 0.021626275 ubox
4 67 0.330822517 ubox
4 72 0.068450026 ubox
4 76 0.493883043 ubox
5 11 0.029589016 ubox
5 14 0.180106680 ubox
5 18 0.054214136 ubox
5 20 0.113010325 ubox
5 25 0.003172295 ubox
5 42 0.003316844 ubox
5 49 0.003549065 ubox
5 50 0.619099035 ubox
5 57 0.031641946 ubox
5 60 0.021518509 ubox
5 64 0.302024255 ubox
5 71 0.069106353 ubox
5 75 0.499041189 ubox
6 17 0.054207479 ubox
6 41 0.003172420 ubox
6 48 0.004576288 ubox
6 49 0.619106761 ubox
6 56 0.031499180 ubox
6 59 0.019766396 ubox
6 60 0.012986314 ubox
6 63 0.303587652 ubox
6 64 0.133348533 ubox
6 69 0.005474397 ubox
6 70 0.068704378 ubox
6 71 0.004434562 ubox
7 16 0.054149876 ubox
7 47 0.004003175 ubox
7 48 0.619035200 ubox
7 59 0.012955486 ubox
7 63 0.133104123 ubox
7 68 0.004820035 ubox
7 69 0.068565297 ubox
7 71 0.101419573 ubox
8 18 0.142014788 ubox
8 45 0.003925360 ubox
8 47 0.595625225 ubox
8 70 0.101782560 ubox
9 17 0.145012165 ubox
9 44 0.008323483 ubox
9 45 0.434468564 ubox
9 57 0.020281988 ubox
9 60 0.323109234 ubox
9 64 0.012855601 ubox
9 69 0.101805726 ubox
9 70 0.007050620 ubox
9 71 0.015447756 ubox
10 16 0.145069050 ubox
10 20 0.011548316 ubox
10 22 0.028596175 ubox
10 25 0.009618243 ubox
10 27 0.004949828 ubox
10 44 0.616122183 ubox
10 47 0.003610858 ubox
10 56 0.020311347 ubox
10 59 0.322053215 ubox
10 63 0.012849802 ubox
10 68 0.088752174 ubox
10 69 0.009596538 ubox
10 70 0.012871925 ubox
11 15 0.144026067 ubox
11 19 0.011566068 ubox
11 21 0.028651257 ubox
11 24 0.010093763 ubox
11 26 0.005395503 ubox
11 37 0.003456825 ubox
11 43 0.619037150 ubox
11 46 0.004821675 ubox
11 55 0.020286346 ubox
11 58 0.321964968 ubox
11 61 0.014425716 ubox
11 67 0.075875648 ubox
11 72 0.609315894 ubox
11 76 0.005161239 ubox
12 18 0.010131379 ubox
12 20 0.028537254 ubox
12 25 0.004830679 ubox
12 27 0.015059448 ubox
12 31 0.004549497 ubox
12 42 0.619110010 ubox
12 45 0.004838593 ubox
12 57 0.313536095 ubox
12 60 0.014343650 ubox
12 71 0.656434987 ubox
12 75 0.004943790 ubox
13 25 0.043131882 ubox
13 30 0.008298799 ubox
13 41 0.619021431 ubox
13 44 0.004847704 ubox
13 70 0.650985583 ubox
14 21 0.017276812 ubox
14 24 0.044277967 ubox
14 26 0.018093640 ubox
14 28 0.164666907 ubox
14 29 0.007727153 ubox
14 34 0.003529306 ubox
14 40 0.618366395 ubox
14 43 0.004847809 ubox
14 61 0.008294616 ubox
14 72 0.006011058 ubox
15 20 0.017150400 ubox
15 22 0.060987248 ubox
15 25 0.018732212 ubox
15 27 0.169141171 ubox
15 30 0.062335808 ubox
15 31 0.009265989 ubox
15 33 0.003621739 ubox
15 38 0.537367353 ubox
15 39 0.257638627 ubox
15 42 0.004635200 ubox
15 56 0.189612764 ubox
15 60 0.007911567 ubox
15 68 0.667780800 ubox
16 21 0.060950862 ubox
16 24 0.018380524 ubox
16 26 0.169109783 ubox
16 29 0.080108224 ubox
16 32 0.003610299 ubox
16 35 0.003435330 ubox
16 36 0.377029530 ubox
16 37 0.487162537 ubox
16 55 0.189923411 ubox
16 67 0.670043445 ubox
17 24 0.164621049 ubox
17 28 0.079304215 ubox
17 29 0.250909566 ubox
17 34 0.003488584 ubox
17 35 0.455374789 ubox
17 36 0.415181663 ubox
17 37 0.058199678 ubox
17 55 0.003778848 ubox
17 66 0.671911483 ubox
18 23 0.154089402 ubox
18 26 0.007293881 ubox
18 28 0.253197811 ubox
18 34 0.521309212 ubox
18 35 0.312945716 ubox
18 36 0.059090328 ubox
18 54 0.003963015 ubox
18 61 0.005652494 ubox
18 65 0.671454631 ubox
18 72 0.004284628 ubox
19 25 0.029582129 ubox
19 27 0.273003029 ubox
19 30 0.012668753 ubox
19 31 0.005372573 ubox
19 33 0.582467498 ubox
19 60 0.007951905 ubox
19 64 0.667590319 ubox
19 68 0.126291635 ubox
19 71 0.009823458 ubox
19 75 0.003880390 ubox
20 24 0.030811623 ubox
20 26 0.272940934 ubox
20 28 0.057714814 ubox
20 29 0.011549407 ubox
20 32 0.582807625 ubox
20 34 0.204137042 ubox
20 61 0.387611918 ubox
20 67 0.127588129 ubox
20 72 0.017562877 ubox
20 76 0.011566671 ubox
21 25 0.168424211 ubox
21 27 0.068763909 ubox
21 30 0.117083396 ubox
21 31 0.568306334 ubox
21 33 0.207062440 ubox
21 47 0.005058430 ubox
21 59 0.005413243 ubox
21 60 0.395008063 ubox
21 68 0.065310598 ubox
21 71 0.017400878 ubox
21 75 0.011396601 ubox
22 26 0.069526019 ubox
22 29 0.557101678 ubox
22 32 0.206893254 ubox
22 46 0.005397987 ubox
22 58 0.005962883 ubox
22 67 0.065719893 ubox
23 45 0.005387474 ubox
23 70 0.010108632 ubox
24 30 0.043981524 ubox
24 33 0.005068922 ubox
24 44 0.005023866 ubox
24 56 0.004183882 ubox
24 59 0.018149882 ubox
24 63 0.273546960 ubox
24 68 0.016571753 ubox
24 69 0.009709668 ubox
24 75 0.012506606 ubox
25 29 0.020893189 ubox
25 32 0.005380979 ubox
25 34 0.012019859 ubox
25 43 0.004625832 ubox
25 55 0.004170580 ubox
25 58 0.014167216 ubox
25 61 0.105018932 ubox
25 62 0.253733327 ubox
25 65 0.005771437 ubox
25 67 0.016735436 ubox
25 74 0.012018733 ubox
26 31 0.013915217 ubox
26 33 0.012502760 ubox
26 42 0.004849998 ubox
26 56 0.024071737 ubox
26 57 0.010776028 ubox
26 59 0.704555582 ubox
26 60 0.087485407 ubox
27 32 0.012526018 ubox
27 34 0.004105712 ubox
27 40 0.005644891 ubox
27 55 0.024440784 ubox
27 58 0.711520490 ubox
27 61 0.013199456 ubox
27 72 0.005896463 ubox
28 33 0.004447522 ubox
28 39 0.005754747 ubox
28 57 0.716377156 ubox
28 60 0.013272773 ubox
28 71 0.004982233 ubox
29 38 0.005819955 ubox
29 56 0.720190015 ubox
29 59 0.013264609 ubox
29 70 0.003696291 ubox
30 37 0.005821909 ubox
30 54 0.675273881 ubox
30 55 0.377115047 ubox
30 58 0.009729854 ubox
31 36 0.005838564 ubox
31 53 0.784337618 ubox
32 52 0.785214626 ubox
33 51 0.785219902 ubox
34 50 0.785217814 ubox
35 49 0.785229883 ubox
36 48 0.785208250 ubox
37 44 0.009094647 ubox
37 47 0.784827130 ubox
38 43 0.009988506 ubox
38 46 0.784940358 ubox
40 45 0.063365737 ubox
48 78 0.008359094 ubox
49 77 0.009159846 ubox
50 76 0.009372719 ubox
51 75 0.009833661 ubox
52 72 0.146840356 ubox
53 57 0.005167089 ubox
53 71 0.589837308 ubox
53 75 0.007117739 ubox
54 70 0.590047586 ubox
55 68 0.276445465 ubox
55 69 0.531817582 ubox
56 67 0.370021496 ubox
56 77 0.067597886 ubox
56 78 0.014065363 ubox
57 66 0.370019120 ubox
57 72 0.009479804 ubox
57 76 0.067777748 ubox
57 77 0.014269193 ubox
58 68 0.495466647 ubox
58 71 0.003934557 ubox
58 75 0.056485809 ubox
59 67 0.498387508 ubox
59 77 0.013674032 ubox
60 66 0.499329221 ubox
60 72 0.086552309 ubox
60 76 0.016945948 ubox
60 77 0.003916116 ubox
61 71 0.087298465 ubox
61 75 0.016723333 ubox
62 70 0.083712045 ubox
63 77 0.039877474 ubox
63 78 0.014282727 ubox
64 76 0.039951587 ubox
64 77 0.014290327 ubox
68 77 0.099910249 ubox
68 78 0.063426739 ubox
69 76 0.102891199 ubox
69 77 0.075701530 ubox
69 78 0.160996275 ubox
70 76 0.067679908 ubox
70 77 0.166569593 ubox
70 78 0.041110926 ubox
71 76 0.173731343 ubox
71 77 0.096105372 ubox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
11 72 0.9500000 lbox
12 71 0.9500000 lbox
13 70 0.9500000 lbox
15 68 0.9500000 lbox
16 67 0.9500000 lbox
17 66 0.9500000 lbox
18 65 0.9500000 lbox
19 64 0.9500000 lbox
26 59 0.9500000 lbox
27 58 0.9500000 lbox
28 57 0.9500000 lbox
29 56 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
showpage
end
%%EOF
