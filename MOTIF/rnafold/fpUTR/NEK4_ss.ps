%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUGCGCAGAACUGCUCCCGGCCCGGAUCGCUAUGGCAGCGGCGUCGUCGCGGGCCGGGCCCCAGCAAUCCCGCCCGGGCCCGGCUGCCUCAACAGCCGCCCCCACUGCCCCCUCUCGGGCAUGAACCGAGCUUCUUGUUGCCGCCCGCUGCCCUACCCGCCGCUGCCGCCGCAUCCCGACUCUGGGCCAGCGCUGGGAAC\
) } def
/len { sequence length } bind def

/coor [
[116.94393158 707.10992432]
[120.05284119 721.78417969]
[115.50537872 736.07824707]
[104.48923492 746.25885010]
[89.88155365 749.66705322]
[75.49752045 745.41271973]
[65.09387970 734.60693359]
[61.38781357 720.07269287]
[55.75444031 733.97467041]
[50.12106323 747.87664795]
[52.92137527 764.03497314]
[40.15643692 774.33001709]
[24.95772743 768.17120361]
[22.96037483 751.89410400]
[36.21908188 742.24328613]
[41.85245895 728.34130859]
[47.48583221 714.43933105]
[52.03312302 700.14520264]
[55.46738052 685.54364014]
[58.90163803 670.94207764]
[62.33589935 656.34045410]
[65.09214020 641.59588623]
[67.16448212 626.73974609]
[69.23683167 611.88354492]
[71.30917358 597.02740479]
[73.38152313 582.17126465]
[75.45386505 567.31512451]
[77.52621460 552.45892334]
[79.59855652 537.60278320]
[81.55644989 522.73114014]
[83.39977264 507.84481812]
[84.66875458 492.89859009]
[85.36150360 477.91458130]
[75.16853333 467.11462402]
[75.65763092 451.90887451]
[87.05472565 441.29077148]
[87.74747467 426.30676270]
[88.44023132 411.32278442]
[89.13298035 396.33877563]
[89.82573700 381.35479736]
[90.51848602 366.37078857]
[91.21123505 351.38681030]
[91.90399170 336.40280151]
[92.59674072 321.41882324]
[93.28948975 306.43481445]
[93.98224640 291.45083618]
[78.98867035 277.56576538]
[79.10866547 256.83715820]
[94.69735718 242.73248291]
[94.46636963 227.73426819]
[86.53399658 215.12765503]
[94.05786133 201.20996094]
[93.82687378 186.21174622]
[93.59588623 171.21353149]
[93.36489105 156.21530151]
[93.13390350 141.21708679]
[92.90290833 126.21886444]
[58.60423279 114.55977631]
[51.03394699 64.29588318]
[38.92590714 55.44176865]
[26.81786346 46.58765793]
[14.70982170 37.73354340]
[2.60178018 28.87942886]
[-9.50626183 20.02531624]
[-24.92372513 22.24783325]
[-37.07686996 13.09601879]
[-39.10068893 -1.61587226]
[-51.20872879 -10.46998596]
[-66.78557587 -7.79837799]
[-79.64075470 -16.99184418]
[-82.14752960 -32.59606171]
[-72.81866455 -45.35332870]
[-57.18881226 -47.69498062]
[-44.53089142 -38.23176193]
[-42.35461807 -22.57802773]
[-30.24657440 -13.72391415]
[-15.61347008 -16.25528336]
[-3.20806360 -7.44843626]
[-0.65214807 7.91727400]
[11.45589352 16.77138710]
[23.56393623 25.62550163]
[35.67197800 34.47961426]
[47.78001785 43.33372879]
[59.88806152 52.18783951]
[72.13101196 43.52123260]
[67.80438232 29.15877342]
[63.47775269 14.79631329]
[59.15112305 0.43385255]
[54.82449341 -13.92860794]
[40.78390121 -21.18376350]
[36.06554413 -36.26728821]
[43.46873856 -50.23038864]
[58.60130310 -54.78900909]
[72.48535156 -47.23860168]
[76.88372803 -32.05868530]
[69.18695068 -18.25523758]
[73.51358032 -3.89277792]
[77.84021759 10.46968269]
[82.16684723 24.83214188]
[86.49347687 39.19460297]
[93.97547150 39.71393585]
[90.33935547 25.16131973]
[103.05619049 17.20631981]
[114.55144501 26.84266281]
[108.93946838 40.75260162]
[116.42146301 41.27193451]
[122.69087219 27.64495468]
[123.43575287 18.53521538]
[129.16317749 13.85755062]
[135.64169312 0.32873258]
[142.12019348 -13.20008564]
[148.59870911 -26.72890472]
[155.07720947 -40.25772095]
[149.58885193 -55.07843399]
[156.26365662 -69.40402985]
[171.14155579 -74.73538208]
[185.39578247 -67.90950012]
[190.56954956 -52.97605896]
[183.59333801 -38.79479980]
[168.60603333 -33.77921295]
[162.12751770 -20.25039673]
[155.64901733 -6.72157717]
[149.17050171 6.80724096]
[142.69200134 20.33605957]
[136.31785583 33.91436005]
[130.04844666 47.54133987]
[135.39242554 52.80364990]
[145.91703796 42.11569214]
[156.44183350 31.42790985]
[167.12944031 41.95288086]
[156.60499573 52.64030838]
[146.08038330 63.32826614]
[151.42436218 68.59057617]
[164.95318604 62.11206818]
[167.62489319 46.82672882]
[178.79423523 36.05522919]
[194.16639709 33.93943024]
[207.83042908 41.29290009]
[214.53227234 55.28807831]
[211.69490051 70.54353333]
[200.40934753 81.19323730]
[185.01515198 83.14215088]
[171.43168640 75.64088440]
[157.90286255 82.11939240]
[138.75807190 120.57688904]
[107.90113068 125.98786926]
[108.13212585 140.98609924]
[108.36311340 155.98431396]
[108.59410095 170.98252869]
[108.82509613 185.98075867]
[109.05608368 200.97897339]
[117.00498199 214.65837097]
[109.46459198 227.50328064]
[109.69557953 242.50149536]
[118.32830048 246.95684814]
[124.70472717 254.20893860]
[127.97911835 263.23196411]
[127.74055481 272.76983643]
[124.06407928 281.51110840]
[117.49452972 288.26919556]
[108.96623993 292.14358521]
[108.27349091 307.12756348]
[107.58073425 322.11157227]
[106.88798523 337.09555054]
[106.19522858 352.07955933]
[105.50247955 367.06353760]
[104.80973053 382.04754639]
[104.11697388 397.03152466]
[103.42422485 412.01553345]
[102.73147583 426.99951172]
[102.03871918 441.98352051]
[112.40748596 453.60791016]
[111.49147797 468.79394531]
[100.34549713 478.60733032]
[99.65274811 493.59133911]
[112.34452820 485.59640503]
[126.55966949 490.38491821]
[131.82722473 504.42959595]
[124.26706696 517.38507080]
[109.44806671 519.70825195]
[98.28607941 509.68814087]
[96.44275665 524.57446289]
[98.49457550 533.48132324]
[94.45471191 539.67510986]
[92.38237000 554.53131104]
[90.31002045 569.38745117]
[88.23767853 584.24359131]
[86.16532898 599.09973145]
[84.09298706 613.95593262]
[82.02064514 628.81207275]
[79.94829559 643.66821289]
[92.56015015 635.54779053]
[107.24961090 638.58422852]
[115.60836029 651.03936768]
[112.85181427 665.78393555]
[100.55783081 674.37799072]
[85.76354218 671.90228271]
[76.93746948 659.77471924]
[73.50321198 674.37628174]
[70.06895447 688.97790527]
[66.63469696 703.57946777]
[78.05772400 693.85760498]
[92.79248810 691.04925537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 17]
[9 16]
[10 15]
[18 201]
[19 200]
[20 199]
[21 198]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[27 186]
[28 185]
[29 184]
[30 182]
[31 181]
[32 175]
[33 174]
[36 171]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[44 163]
[45 162]
[46 161]
[49 154]
[50 153]
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[59 84]
[60 83]
[61 82]
[62 81]
[63 80]
[64 79]
[67 76]
[68 75]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[106 126]
[107 125]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
[133 144]
[134 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
