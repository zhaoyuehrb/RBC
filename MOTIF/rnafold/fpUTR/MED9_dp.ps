%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MED9)
} def

/sequence { (\
GUAGAGUGCGCGACGCUUUUGGCGACCCGACCUCUGGCUAACCUACCCCCGGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.042006952 ubox
1 11 0.011675618 ubox
1 23 0.105042594 ubox
1 26 0.009859585 ubox
1 31 0.058734078 ubox
1 38 0.090623329 ubox
1 42 0.005753195 ubox
1 46 0.022706436 ubox
1 55 0.011408881 ubox
2 8 0.041808997 ubox
2 10 0.011501708 ubox
2 21 0.038778358 ubox
2 22 0.097583248 ubox
2 25 0.009701905 ubox
2 30 0.058497537 ubox
2 36 0.313136989 ubox
2 37 0.066077520 ubox
2 41 0.005014126 ubox
2 45 0.022786303 ubox
2 54 0.009177399 ubox
3 7 0.034816936 ubox
3 17 0.012665354 ubox
3 18 0.004444438 ubox
3 19 0.119405148 ubox
3 20 0.053648759 ubox
3 33 0.034803390 ubox
3 35 0.923996472 ubox
3 44 0.022640112 ubox
4 16 0.013607226 ubox
4 17 0.003576331 ubox
4 18 0.166625395 ubox
4 19 0.058109492 ubox
4 20 0.066005754 ubox
4 32 0.038683695 ubox
4 34 0.965387539 ubox
4 43 0.022478132 ubox
5 17 0.171955886 ubox
5 18 0.057369776 ubox
5 19 0.067430987 ubox
5 20 0.006490098 ubox
5 33 0.965362101 ubox
5 35 0.020086711 ubox
6 14 0.016226055 ubox
6 16 0.172958373 ubox
6 17 0.052171701 ubox
6 18 0.056941921 ubox
6 19 0.006600196 ubox
6 26 0.072516884 ubox
6 31 0.160963686 ubox
6 32 0.955459862 ubox
6 34 0.020571834 ubox
6 42 0.019748268 ubox
6 55 0.003506336 ubox
7 13 0.016318372 ubox
7 15 0.172821630 ubox
7 24 0.025895442 ubox
7 25 0.071520694 ubox
7 29 0.018960934 ubox
7 30 0.204331456 ubox
7 40 0.005099932 ubox
7 41 0.019025788 ubox
8 14 0.171408742 ubox
8 16 0.105068432 ubox
8 23 0.033903242 ubox
8 28 0.024538348 ubox
8 38 0.013854366 ubox
8 39 0.003684836 ubox
8 55 0.005594414 ubox
9 15 0.105163207 ubox
9 22 0.033896752 ubox
9 24 0.081779408 ubox
9 29 0.952079481 ubox
9 37 0.013886542 ubox
9 54 0.005266239 ubox
10 14 0.098406168 ubox
10 16 0.009901027 ubox
10 23 0.082363582 ubox
10 28 0.947164094 ubox
10 38 0.014170070 ubox
10 55 0.008561839 ubox
11 15 0.009844746 ubox
11 21 0.031814383 ubox
11 22 0.081579118 ubox
11 24 0.020408717 ubox
11 29 0.167133428 ubox
11 36 0.003603421 ubox
11 37 0.014124083 ubox
11 54 0.008348818 ubox
12 18 0.003501888 ubox
12 19 0.012490633 ubox
12 20 0.033316300 ubox
12 23 0.019476820 ubox
12 28 0.167623003 ubox
12 34 0.013995265 ubox
13 18 0.011512249 ubox
13 19 0.031925316 ubox
13 33 0.013899081 ubox
14 21 0.023033079 ubox
14 24 0.968549523 ubox
14 51 0.005882745 ubox
15 20 0.016145360 ubox
15 23 0.974540784 ubox
15 38 0.007292539 ubox
15 50 0.005660871 ubox
15 55 0.003387061 ubox
16 22 0.974303173 ubox
16 37 0.007332191 ubox
16 54 0.003375657 ubox
17 21 0.877733729 ubox
17 36 0.007264629 ubox
18 30 0.005765496 ubox
19 29 0.006435971 ubox
19 30 0.094918396 ubox
19 41 0.006490947 ubox
20 29 0.115198320 ubox
20 40 0.008920590 ubox
21 27 0.020117370 ubox
21 28 0.125225490 ubox
21 32 0.041683362 ubox
21 39 0.009228863 ubox
21 43 0.005235346 ubox
21 56 0.093242114 ubox
22 26 0.020220439 ubox
22 27 0.123724788 ubox
22 31 0.042757447 ubox
22 38 0.009268690 ubox
22 42 0.005233672 ubox
22 55 0.094571877 ubox
23 29 0.042550763 ubox
23 37 0.009201401 ubox
23 54 0.094120298 ubox
24 28 0.040167040 ubox
24 34 0.006115643 ubox
25 33 0.005882644 ubox
26 52 0.021660360 ubox
27 36 0.003177769 ubox
27 37 0.007021979 ubox
27 51 0.019175196 ubox
27 52 0.092763619 ubox
28 36 0.007575420 ubox
28 51 0.093557702 ubox
29 35 0.006638018 ubox
29 50 0.093417811 ubox
31 37 0.003649310 ubox
31 52 0.004699151 ubox
32 36 0.003711776 ubox
32 51 0.004721860 ubox
32 54 0.222731586 ubox
33 53 0.227378060 ubox
34 52 0.227985002 ubox
35 45 0.015819311 ubox
35 51 0.227822549 ubox
36 43 0.096744309 ubox
36 44 0.015832507 ubox
36 47 0.027752706 ubox
36 48 0.014535502 ubox
36 49 0.014393662 ubox
36 50 0.227471362 ubox
36 56 0.901919905 ubox
37 42 0.096324514 ubox
37 43 0.015995628 ubox
37 46 0.028332142 ubox
37 47 0.014843046 ubox
37 48 0.018177668 ubox
37 49 0.225843910 ubox
37 55 0.958577180 ubox
38 52 0.006196452 ubox
38 54 0.958752824 ubox
39 45 0.063318614 ubox
39 51 0.006580673 ubox
39 53 0.892536855 ubox
40 44 0.057008866 ubox
42 52 0.911180534 ubox
43 51 0.913602403 ubox
43 52 0.163792723 ubox
43 54 0.051018251 ubox
44 51 0.157642513 ubox
44 53 0.052466041 ubox
46 52 0.137737795 ubox
47 51 0.136876342 ubox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
5 33 0.9500000 lbox
6 32 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
39 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
showpage
end
%%EOF
