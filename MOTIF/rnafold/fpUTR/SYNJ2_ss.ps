%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAAGUGAAACUCUGGCAAGUUGCGGGCGCGCGGGGAGCUGUCGCGGGCAGCGCGCCCUCGGGAGGACGUGGCCCCGGCCCCCGCCCGCAGUGGGCCCGACCCUC\
) } def
/len { sequence length } bind def

/coor [
[49.57821655 475.11471558]
[35.78399658 481.32556152]
[20.74543381 482.96777344]
[5.93585539 479.88043213]
[-7.19384623 472.36605835]
[-17.35735703 461.16076660]
[-23.55896187 447.36239624]
[-25.19108772 432.32272339]
[-22.09383774 417.51522827]
[-14.57064724 404.39056396]
[-3.35856271 394.23455811]
[10.44396973 388.04220581]
[25.48472023 386.42016602]
[28.54593277 371.73583984]
[23.56886482 357.69738770]
[33.95967865 345.76669312]
[37.02088928 331.08239746]
[40.08210373 316.39807129]
[31.73166275 304.11776733]
[34.62698364 289.18218994]
[47.56430817 280.50674438]
[50.62552261 265.82244873]
[53.68673706 251.13812256]
[56.74795151 236.45381165]
[59.80916214 221.76950073]
[62.87037659 207.08518982]
[65.93158722 192.40087891]
[68.99280548 177.71656799]
[72.05401611 163.03225708]
[70.47249603 160.53576660]
[69.86688995 157.21435547]
[70.57583618 153.46900940]
[72.77378845 149.82238770]
[76.43158722 146.85339355]
[81.19231415 132.62893677]
[85.95304871 118.40446472]
[90.71377563 104.18000031]
[90.08528900 96.00534058]
[95.82869720 89.61142731]
[101.00495148 75.53284454]
[106.18121338 61.45426941]
[111.35746765 47.37569046]
[110.35847473 42.77173615]
[110.92253113 38.55146408]
[112.71050262 35.18495941]
[115.25949860 32.97110748]
[118.05454254 32.01119232]
[124.84477234 18.63611031]
[131.63499451 5.26102972]
[138.42523193 -8.11405087]
[138.45140076 -14.98324108]
[141.56867981 -19.97356987]
[146.02673340 -22.05727768]
[153.59020996 -35.01080322]
[161.15368652 -47.96432877]
[168.71716309 -60.91785049]
[168.99397278 -76.73663330]
[182.09315491 -83.82611084]
[189.65663147 -96.77964020]
[197.22010803 -109.73316193]
[196.75923157 -126.12583160]
[210.86518860 -134.48968506]
[225.02696228 -126.22071838]
[224.67614746 -109.82532501]
[210.17362976 -102.16968536]
[202.61015320 -89.21615601]
[195.04667664 -76.26263428]
[195.31086731 -61.37037277]
[181.67068481 -53.35437393]
[174.10720825 -40.40084839]
[166.54373169 -27.44732475]
[158.98025513 -14.49380016]
[151.80030823 -1.32382095]
[145.01008606 12.05125999]
[138.21984863 25.42634010]
[131.42962646 38.80142212]
[125.43604279 52.55194855]
[120.25978851 66.63053131]
[115.08352661 80.70910645]
[109.90727234 94.78768158]
[104.93824005 108.94072723]
[100.17751312 123.16519928]
[95.41677856 137.38966370]
[90.65605164 151.61413574]
[86.73832703 166.09347534]
[83.67711639 180.77778625]
[80.61589813 195.46209717]
[77.55468750 210.14640808]
[74.49347687 224.83071899]
[71.43225861 239.51502991]
[68.37104797 254.19934082]
[65.30983734 268.88363647]
[62.24861908 283.56796265]
[70.64183044 296.69015503]
[67.32814026 311.53851318]
[54.76641464 319.45928955]
[51.70520020 334.14361572]
[48.64398956 348.82791138]
[53.40209579 363.91668701]
[43.23024368 374.79705811]
[40.16902924 389.48138428]
[53.30878830 396.97814941]
[63.48730850 408.16979980]
[69.70739746 421.95986938]
[71.35968018 436.99731445]
[68.28227234 451.80895996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 101]
[14 100]
[16 98]
[17 97]
[18 96]
[21 93]
[22 92]
[23 91]
[24 90]
[25 89]
[26 88]
[27 87]
[28 86]
[29 85]
[34 84]
[35 83]
[36 82]
[37 81]
[39 80]
[40 79]
[41 78]
[42 77]
[47 76]
[48 75]
[49 74]
[50 73]
[53 72]
[54 71]
[55 70]
[56 69]
[58 67]
[59 66]
[60 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
