%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NCBP2-AS2)
} def

/sequence { (\
GUCAUCAAGCUGCGCGGGGGCAUAGACGUCCGGGUCGGGCGCCGCGGGGCGGAAGACGAGGGCGGCGAGGUCGGGUUCCGGGCGCUUGGAGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.005495146 ubox
2 56 0.005627486 ubox
2 89 0.004918446 ubox
2 90 0.046200055 ubox
2 92 0.912376610 ubox
3 55 0.005644511 ubox
3 88 0.004918434 ubox
3 89 0.047993780 ubox
3 91 0.975075161 ubox
4 87 0.004273453 ubox
5 53 0.005512741 ubox
5 89 0.962055858 ubox
5 90 0.062034993 ubox
5 92 0.005123590 ubox
6 52 0.005582748 ubox
6 88 0.998651072 ubox
6 89 0.046433744 ubox
6 91 0.004396025 ubox
7 87 0.999215116 ubox
8 86 0.999403329 ubox
9 50 0.005710582 ubox
9 85 0.999929336 ubox
10 25 0.013153837 ubox
10 49 0.005719565 ubox
10 84 0.977279827 ubox
11 22 0.018812499 ubox
11 24 0.014100753 ubox
11 48 0.005736867 ubox
11 84 0.209154238 ubox
12 21 0.020894288 ubox
12 23 0.014156079 ubox
12 83 0.999112719 ubox
12 85 0.005651765 ubox
13 20 0.020894315 ubox
13 46 0.005771462 ubox
13 82 0.999451606 ubox
13 84 0.006225597 ubox
14 21 0.016628263 ubox
14 45 0.005786331 ubox
14 83 0.008549691 ubox
15 20 0.016629554 ubox
15 44 0.005782479 ubox
15 80 0.999064574 ubox
15 82 0.008541724 ubox
16 43 0.005139678 ubox
16 78 0.006637825 ubox
16 79 0.992100960 ubox
17 42 0.004404101 ubox
17 76 0.003208888 ubox
17 77 0.008773588 ubox
17 78 0.984529544 ubox
17 79 0.121848152 ubox
18 31 0.052520787 ubox
18 42 0.003752505 ubox
18 72 0.022088622 ubox
18 76 0.056845779 ubox
18 77 0.950025302 ubox
18 78 0.170548216 ubox
19 30 0.052649116 ubox
19 71 0.019343832 ubox
19 72 0.903733344 ubox
19 76 0.330500395 ubox
19 77 0.206320894 ubox
19 78 0.003298483 ubox
20 29 0.052796178 ubox
20 40 0.006442053 ubox
20 66 0.023822328 ubox
20 71 0.942993093 ubox
20 76 0.241764122 ubox
20 77 0.003834760 ubox
21 28 0.052844059 ubox
21 39 0.006494175 ubox
21 65 0.023883535 ubox
21 70 0.943251294 ubox
21 75 0.269831794 ubox
22 71 0.077446603 ubox
22 76 0.012225011 ubox
23 70 0.078656108 ubox
23 75 0.013257241 ubox
25 36 0.008543186 ubox
25 72 0.267084083 ubox
26 35 0.008577163 ubox
26 71 0.266786295 ubox
27 34 0.008584606 ubox
27 41 0.005087111 ubox
27 64 0.968916786 ubox
27 67 0.012216747 ubox
27 70 0.231954538 ubox
27 84 0.014052017 ubox
28 40 0.141366158 ubox
28 63 0.984901257 ubox
28 66 0.015516642 ubox
28 83 0.025661920 ubox
29 39 0.145784965 ubox
29 62 0.984582274 ubox
29 65 0.012065603 ubox
29 68 0.053742439 ubox
29 75 0.009162014 ubox
29 82 0.025669465 ubox
30 38 0.153178003 ubox
30 39 0.019885657 ubox
30 61 0.985050908 ubox
30 62 0.014048096 ubox
30 64 0.005616501 ubox
30 65 0.031471250 ubox
30 67 0.027348171 ubox
30 74 0.011246625 ubox
30 75 0.004290111 ubox
30 81 0.025769110 ubox
31 37 0.153303358 ubox
31 38 0.020743934 ubox
31 60 0.984677828 ubox
31 61 0.015005077 ubox
31 64 0.035973798 ubox
31 67 0.003383938 ubox
31 73 0.011291414 ubox
31 74 0.004405939 ubox
31 80 0.025769884 ubox
32 36 0.143421994 ubox
32 63 0.035849090 ubox
32 66 0.004600977 ubox
32 72 0.011343779 ubox
32 77 0.035955762 ubox
32 79 0.025799489 ubox
33 71 0.010947229 ubox
33 72 0.006221380 ubox
33 76 0.044322798 ubox
33 77 0.004814736 ubox
33 78 0.025766587 ubox
34 40 0.004365672 ubox
34 57 0.984472664 ubox
34 63 0.006984628 ubox
34 66 0.006018750 ubox
34 71 0.006020437 ubox
34 76 0.005588774 ubox
34 77 0.022820555 ubox
35 39 0.004089398 ubox
35 56 0.985205497 ubox
35 59 0.035601122 ubox
35 62 0.006529635 ubox
35 65 0.006028521 ubox
35 70 0.006143937 ubox
35 74 0.051351996 ubox
35 75 0.009694176 ubox
36 55 0.984974573 ubox
36 58 0.036156902 ubox
36 61 0.005945663 ubox
36 64 0.006017655 ubox
36 69 0.007650613 ubox
36 73 0.054025966 ubox
36 74 0.014242023 ubox
37 57 0.036171261 ubox
37 63 0.005963003 ubox
37 72 0.053996905 ubox
38 71 0.048704023 ubox
38 72 0.014960322 ubox
39 50 0.007191719 ubox
39 71 0.015027216 ubox
40 49 0.007181115 ubox
40 51 0.984286986 ubox
40 67 0.083590733 ubox
40 70 0.012970821 ubox
41 50 0.985484784 ubox
41 66 0.165534225 ubox
42 48 0.009733719 ubox
42 49 0.985471266 ubox
42 52 0.034928203 ubox
42 65 0.165710623 ubox
43 47 0.012282600 ubox
43 48 0.985114168 ubox
43 51 0.034942649 ubox
43 64 0.165709449 ubox
44 50 0.034937318 ubox
44 63 0.165709342 ubox
45 49 0.034683679 ubox
45 62 0.165670850 ubox
50 58 0.164689721 ubox
51 57 0.164768336 ubox
58 87 0.003267877 ubox
59 86 0.003395978 ubox
60 85 0.003410814 ubox
61 72 0.011518066 ubox
61 86 0.003327238 ubox
62 71 0.011603483 ubox
62 83 0.003422137 ubox
62 85 0.003418616 ubox
63 70 0.011630144 ubox
63 73 0.012857323 ubox
63 82 0.003417158 ubox
63 84 0.003424923 ubox
64 72 0.023217479 ubox
64 77 0.004116399 ubox
65 71 0.028397570 ubox
65 76 0.038589779 ubox
65 83 0.005782425 ubox
66 70 0.028864664 ubox
66 73 0.106485237 ubox
66 75 0.041508711 ubox
66 82 0.006105619 ubox
67 72 0.106455654 ubox
68 77 0.003814124 ubox
69 76 0.004266761 ubox
69 79 0.005972678 ubox
70 78 0.005972022 ubox
70 83 0.003362923 ubox
71 81 0.004293132 ubox
72 80 0.005202451 ubox
73 79 0.006063720 ubox
74 78 0.006027448 ubox
2 92 0.9500000 lbox
3 91 0.9500000 lbox
5 89 0.9500000 lbox
6 88 0.9500000 lbox
7 87 0.9500000 lbox
8 86 0.9500000 lbox
9 85 0.9500000 lbox
10 84 0.9500000 lbox
12 83 0.9500000 lbox
13 82 0.9500000 lbox
15 80 0.9500000 lbox
16 79 0.9500000 lbox
17 78 0.9500000 lbox
18 77 0.9500000 lbox
19 72 0.9500000 lbox
20 71 0.9500000 lbox
21 70 0.9500000 lbox
27 64 0.9500000 lbox
28 63 0.9500000 lbox
29 62 0.9500000 lbox
30 61 0.9500000 lbox
31 60 0.9500000 lbox
34 57 0.9500000 lbox
35 56 0.9500000 lbox
36 55 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
