%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SCGB2A1)
} def

/sequence { (\
CCUCCACAGCAACUUCCUUGAUCCCUGCCACGCACGACUGAACACAGACAGCAGCCGCCUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.085527951 ubox
2 47 0.017952259 ubox
2 51 0.012837903 ubox
2 54 0.019669997 ubox
3 8 0.079787276 ubox
3 21 0.056895730 ubox
3 37 0.030053415 ubox
3 41 0.009785560 ubox
3 46 0.017259827 ubox
3 48 0.009647664 ubox
3 50 0.012290415 ubox
3 53 0.019011924 ubox
4 20 0.058969700 ubox
4 36 0.032406683 ubox
4 40 0.009906102 ubox
4 47 0.010123292 ubox
5 20 0.103612131 ubox
5 27 0.033115998 ubox
5 40 0.011048876 ubox
6 19 0.100520631 ubox
6 26 0.032310197 ubox
6 39 0.010441436 ubox
7 20 0.189790779 ubox
7 27 0.264286441 ubox
7 40 0.066180037 ubox
8 14 0.052622414 ubox
8 15 0.026825056 ubox
8 18 0.105812299 ubox
8 19 0.187485555 ubox
8 26 0.266702919 ubox
8 39 0.066480063 ubox
8 60 0.031959380 ubox
9 13 0.054992039 ubox
9 14 0.022480202 ubox
9 17 0.111361691 ubox
9 18 0.175749135 ubox
9 25 0.266004936 ubox
9 28 0.483397097 ubox
9 33 0.094701154 ubox
9 38 0.065835509 ubox
9 52 0.141463475 ubox
9 55 0.218881380 ubox
9 58 0.116735429 ubox
9 59 0.030076869 ubox
9 63 0.211850249 ubox
10 20 0.314100601 ubox
10 27 0.484521782 ubox
10 32 0.094710481 ubox
10 40 0.009631936 ubox
10 51 0.141122138 ubox
10 54 0.219209665 ubox
10 57 0.117616623 ubox
10 62 0.211875086 ubox
11 19 0.312892739 ubox
11 26 0.460903910 ubox
11 39 0.009321098 ubox
12 18 0.282416442 ubox
13 47 0.055499190 ubox
13 51 0.205608808 ubox
13 54 0.074464229 ubox
14 21 0.079416179 ubox
14 37 0.006699975 ubox
14 41 0.009596290 ubox
14 42 0.036206402 ubox
14 46 0.053555513 ubox
14 47 0.013013217 ubox
14 48 0.012524456 ubox
14 50 0.202854058 ubox
14 51 0.006072683 ubox
14 53 0.071984304 ubox
14 54 0.010211033 ubox
15 20 0.074313439 ubox
15 21 0.351407239 ubox
15 36 0.006712049 ubox
15 37 0.024511035 ubox
15 40 0.009978274 ubox
15 41 0.043334761 ubox
15 46 0.013645942 ubox
15 47 0.010857904 ubox
15 48 0.183786869 ubox
15 50 0.007437123 ubox
15 53 0.012943754 ubox
16 20 0.352675837 ubox
16 36 0.025967718 ubox
16 40 0.043824964 ubox
16 47 0.185783847 ubox
17 47 0.131077783 ubox
17 51 0.031975660 ubox
17 54 0.029515334 ubox
18 37 0.070116821 ubox
18 41 0.053548654 ubox
18 42 0.033073472 ubox
18 46 0.129441005 ubox
18 47 0.023844200 ubox
18 48 0.006501163 ubox
18 50 0.026708317 ubox
18 51 0.054679821 ubox
18 53 0.023788701 ubox
18 54 0.081092975 ubox
19 27 0.006962125 ubox
19 30 0.096297162 ubox
19 32 0.012518795 ubox
19 34 0.022908052 ubox
19 36 0.075421655 ubox
19 40 0.056482784 ubox
19 41 0.036373250 ubox
19 44 0.223639900 ubox
19 46 0.034392155 ubox
19 47 0.005363335 ubox
19 50 0.069254377 ubox
19 53 0.105024604 ubox
19 57 0.023064988 ubox
19 62 0.154513840 ubox
20 26 0.012225120 ubox
20 29 0.107980157 ubox
20 31 0.019736734 ubox
20 33 0.025124727 ubox
20 35 0.077943424 ubox
20 39 0.048285483 ubox
20 43 0.226626954 ubox
20 45 0.038342580 ubox
20 49 0.072705458 ubox
20 52 0.109074247 ubox
20 56 0.032509555 ubox
20 61 0.212282669 ubox
21 60 0.206873501 ubox
22 37 0.183180466 ubox
22 41 0.222737390 ubox
22 48 0.059627742 ubox
23 36 0.196978672 ubox
23 40 0.224613778 ubox
23 47 0.058965736 ubox
25 47 0.155661201 ubox
25 51 0.029499046 ubox
25 54 0.291651779 ubox
26 32 0.014909945 ubox
26 34 0.460115816 ubox
26 36 0.039591250 ubox
26 44 0.052702855 ubox
26 46 0.156759718 ubox
26 50 0.030014491 ubox
26 53 0.297120896 ubox
26 57 0.032279924 ubox
26 62 0.022482676 ubox
27 31 0.022440750 ubox
27 33 0.500524574 ubox
27 35 0.044338546 ubox
27 43 0.053268326 ubox
27 45 0.156332960 ubox
27 49 0.029764744 ubox
27 52 0.297810373 ubox
27 55 0.242774483 ubox
27 56 0.035908214 ubox
27 58 0.207105461 ubox
27 61 0.029120535 ubox
27 63 0.240284434 ubox
28 32 0.497020352 ubox
28 51 0.295826806 ubox
28 54 0.244789200 ubox
28 57 0.207896001 ubox
28 62 0.241098524 ubox
29 40 0.072989951 ubox
30 39 0.071321314 ubox
31 40 0.070216889 ubox
31 57 0.104836263 ubox
31 62 0.201295611 ubox
32 39 0.054120268 ubox
32 52 0.459989559 ubox
32 55 0.228963169 ubox
32 56 0.092177404 ubox
32 58 0.271947452 ubox
32 61 0.203481151 ubox
32 63 0.190587062 ubox
33 40 0.133998324 ubox
33 51 0.459787437 ubox
33 54 0.234915254 ubox
33 57 0.269044520 ubox
33 62 0.190089014 ubox
34 39 0.114326245 ubox
35 57 0.416394719 ubox
35 62 0.183612741 ubox
36 56 0.432302908 ubox
36 61 0.190270254 ubox
37 60 0.183771088 ubox
38 47 0.658425064 ubox
38 51 0.415498278 ubox
38 54 0.454697003 ubox
39 46 0.661242680 ubox
39 50 0.423184535 ubox
39 53 0.455658211 ubox
39 57 0.016179830 ubox
39 62 0.011032574 ubox
40 45 0.657748351 ubox
40 49 0.423574416 ubox
40 52 0.454665689 ubox
40 56 0.017953160 ubox
40 61 0.015605263 ubox
41 60 0.014910935 ubox
46 60 0.023403915 ubox
47 59 0.025639278 ubox
47 61 0.097269235 ubox
48 60 0.096052694 ubox
50 60 0.048367557 ubox
51 58 0.309682495 ubox
51 59 0.039406629 ubox
51 63 0.189103009 ubox
52 57 0.312464295 ubox
52 62 0.189806245 ubox
53 60 0.160205008 ubox
54 59 0.159492805 ubox
54 63 0.368464198 ubox
55 62 0.365645193 ubox
56 62 0.098087598 ubox
57 61 0.106304986 ubox
57 63 0.248160922 ubox
58 62 0.247036528 ubox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
32 58 0.9500000 lbox
33 57 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
showpage
end
%%EOF
