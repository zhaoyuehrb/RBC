%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCGCGCCGGCUGUGCUGCACAGGGGGAGGAGAGGGAACCCCAGGCGCGAGCGGGAAGAGGGGACCUGCAGCCACAACUUCUCUGGUCCUCUGCAUCCCUUCUGUCCCUCCACCCGUCCCCUUCCCCACCCUCUGGCCCCCACCUUCUUGGAGGCGACAACCCCCGGGAGGCAUUAGAAGGGAUUUUUCCCGCAGGUUGCGAAGGGAAGCAAACUUGGUGGCAACUUGCCUCCCGGUGCGGGCGUCUCUCCCCC\
ACCGUCUCAAC\
) } def
/len { sequence length } bind def

/coor [
[124.43379974 298.89074707]
[120.59414673 284.39050293]
[116.75450134 269.89025879]
[112.91484833 255.38999939]
[109.07520294 240.88975525]
[105.23554993 226.38951111]
[101.39590454 211.88926697]
[97.55625153 197.38902283]
[93.71660614 182.88877869]
[89.87696075 168.38853455]
[86.03730774 153.88829041]
[59.13182831 129.35169983]
[55.15038300 96.78379059]
[71.45157623 72.53730774]
[57.07053757 68.27285004]
[42.68949509 64.00838470]
[27.45000076 72.63082123]
[11.01820469 67.64551544]
[3.44344902 52.61296463]
[-10.98677349 48.51800537]
[-20.06170082 49.18679428]
[-25.56215668 44.28904343]
[-39.94319916 40.02458572]
[-54.32424164 35.76012421]
[-68.70528412 31.49566269]
[-83.08632660 27.23120117]
[-97.46736908 22.96674156]
[-111.84841156 18.70228004]
[-129.66952515 23.39997482]
[-141.22013855 10.16901588]
[-155.65036011 6.07405758]
[-171.03858948 9.75004673]
[-181.17015076 -1.16786075]
[-195.60037231 -5.26281881]
[-210.03059387 -9.35777664]
[-224.46081543 -13.45273495]
[-238.89103699 -17.54769325]
[-254.27926636 -13.87170410]
[-264.41082764 -24.78961182]
[-278.84106445 -28.88456917]
[-282.93887329 -27.70042038]
[-286.81622314 -27.84691429]
[-290.08685303 -29.09562683]
[-292.47637939 -31.11735344]
[-293.84530640 -33.52658081]
[-308.06689453 -38.29591370]
[-320.69006348 -29.46634293]
[-335.91400146 -29.75932312]
[-347.90438843 -38.85295486]
[-352.18963623 -53.09285736]
[-366.41119385 -57.86219025]
[-380.63278198 -62.63152313]
[-389.72912598 -62.39042664]
[-394.99307251 -67.54154205]
[-409.15756226 -72.47787476]
[-423.32205200 -77.41420746]
[-438.89978027 -74.64936066]
[-448.37188721 -86.14408875]
[-462.53637695 -91.08042145]
[-476.70083618 -96.01675415]
[-490.86532593 -100.95309448]
[-505.02981567 -105.88942719]
[-519.19427490 -110.82575989]
[-533.35876465 -115.76209259]
[-547.52325439 -120.69842529]
[-554.02410889 -119.84550476]
[-559.21527100 -122.05104828]
[-561.96063232 -125.92115021]
[-576.00500488 -131.18940735]
[-590.04943848 -136.45767212]
[-604.09387207 -141.72593689]
[-618.13824463 -146.99420166]
[-632.30273438 -151.93052673]
[-646.57946777 -156.53219604]
[-660.85620117 -161.13386536]
[-672.71057129 -151.26084900]
[-688.02368164 -149.38677979]
[-701.90917969 -156.10969543]
[-709.93615723 -169.28431702]
[-709.54333496 -184.70668030]
[-700.85601807 -197.45556641]
[-686.64630127 -203.46284485]
[-671.44842529 -200.81161499]
[-660.11206055 -190.34788513]
[-656.25451660 -175.41058350]
[-641.97778320 -170.80891418]
[-627.70104980 -166.20724487]
[-625.16943359 -167.33386230]
[-622.04638672 -167.54290771]
[-618.67297363 -166.60688782]
[-615.46533203 -164.42366028]
[-612.86999512 -161.03860474]
[-598.82556152 -155.77033997]
[-584.78118896 -150.50207520]
[-570.73675537 -145.23382568]
[-556.69238281 -139.96556091]
[-542.58691406 -134.86291504]
[-528.42242432 -129.92657471]
[-514.25799561 -124.99024200]
[-500.09347534 -120.05390930]
[-485.92898560 -115.11757660]
[-471.76452637 -110.18124390]
[-457.60003662 -105.24491119]
[-443.43554688 -100.30857849]
[-428.87094116 -103.42649841]
[-418.38571167 -91.57868958]
[-404.22122192 -86.64235687]
[-390.05673218 -81.70602417]
[-375.86346436 -76.85310364]
[-361.64187622 -72.08377075]
[-347.42028809 -67.31444550]
[-335.41610718 -76.09154510]
[-320.36740112 -76.11737823]
[-308.04498291 -67.17246246]
[-303.29754639 -52.51749802]
[-289.07595825 -47.74816513]
[-274.74609375 -43.31479263]
[-260.31588745 -39.21983337]
[-245.95979309 -43.18872070]
[-234.79608154 -31.97791672]
[-220.36585999 -27.88295746]
[-205.93563843 -23.78800011]
[-191.50541687 -19.69304085]
[-177.07519531 -15.59808350]
[-162.71910095 -19.56697083]
[-151.55538940 -8.35616493]
[-137.12516785 -4.26120663]
[-126.43393707 -9.87430286]
[-114.39410400 -6.60622120]
[-107.58395386 4.32123852]
[-93.20291138 8.58569908]
[-78.82186890 12.85015965]
[-64.44082642 17.11462021]
[-50.05978012 21.37908173]
[-35.67873764 25.64354134]
[-21.29769707 29.90800285]
[-6.89181519 34.08778381]
[7.53840733 38.18274307]
[17.78325272 30.40056419]
[30.83429909 29.92227173]
[41.94733047 37.14543915]
[46.95395660 49.62734604]
[61.33499908 53.89180374]
[75.71604156 58.15626526]
[89.82146454 53.05361557]
[98.14584351 40.57544708]
[106.47022247 28.09727669]
[114.79460144 15.61910820]
[123.11898041 3.14093852]
[131.44335938 -9.33723068]
[139.76774597 -21.81539917]
[148.09211731 -34.29356766]
[149.31414795 -50.06750870]
[162.81375122 -56.36116409]
[171.13813782 -68.83933258]
[167.79808044 -84.28665161]
[176.42932129 -97.52588654]
[191.91108704 -100.70243073]
[205.05831909 -91.93170929]
[208.07101440 -76.41722107]
[199.16177368 -63.36344528]
[183.61630249 -60.51495361]
[175.29191589 -48.03678513]
[174.66529846 -33.15536880]
[160.57028198 -25.96919060]
[152.24591064 -13.49102020]
[143.92152405 -1.01285124]
[135.59715271 11.46531773]
[127.27277374 23.94348717]
[118.94839478 36.42165756]
[110.62401581 48.89982605]
[102.29962921 61.37799454]
[106.85659027 67.33485413]
[118.77030182 58.22094345]
[130.68402100 49.10703659]
[142.59788513 39.99332428]
[151.71141052 51.90734482]
[139.79792786 61.02075195]
[127.88421631 70.13465881]
[115.97049713 79.24857330]
[120.52745056 85.20542908]
[134.74903870 80.43609619]
[148.97062683 75.66676331]
[163.19219971 70.89743042]
[173.63876343 58.25617981]
[189.76251221 61.24898529]
[194.97671509 76.79711151]
[183.91744995 88.90597534]
[167.96153259 85.11901855]
[153.73994446 89.88835144]
[139.51837158 94.65768433]
[125.29678345 99.42701721]
[125.73795319 114.42052460]
[140.21536255 118.34541321]
[154.69276428 122.27030182]
[169.17016602 126.19519043]
[183.64756775 130.12008667]
[198.12498474 134.04496765]
[212.60238647 137.96986389]
[227.07978821 141.89474487]
[241.55718994 145.81964111]
[257.65463257 135.78033447]
[275.65963745 140.64649963]
[284.20925903 156.86120605]
[298.77499390 160.44433594]
[313.34075928 164.02748108]
[325.10882568 153.91354370]
[340.57693481 152.68185425]
[353.79730225 160.80603027]
[359.68637085 175.16217041]
[355.97970581 190.23002625]
[344.10260010 200.21569824]
[328.62203979 201.27952576]
[315.49060059 193.01240540]
[309.75759888 178.59323120]
[295.19186401 175.01008606]
[280.62609863 171.42695618]
[272.40991211 179.28527832]
[261.30941772 182.24722290]
[250.03813171 179.46952820]
[241.40896606 171.52679443]
[237.63230896 160.29704285]
[223.15489197 156.37214661]
[208.67749023 152.44726562]
[194.20008850 148.52236938]
[179.72268677 144.59748840]
[165.24528503 140.67259216]
[150.76786804 136.74771118]
[136.29046631 132.82281494]
[121.81306458 128.89793396]
[116.49418640 134.18560791]
[120.33386230 148.68585205]
[105.85643005 144.76097107]
[100.53755188 150.04864502]
[104.37720490 164.54888916]
[108.21685028 179.04913330]
[112.05650330 193.54937744]
[115.89614868 208.04962158]
[119.73579407 222.54986572]
[123.57544708 237.05010986]
[127.41509247 251.55035400]
[131.25474548 266.05059814]
[135.09439087 280.55084229]
[138.93403625 295.05108643]
[154.01501465 294.92803955]
[168.65258789 298.56015015]
[181.92663574 305.71911621]
[193.00274658 315.95486450]
[201.18464661 328.62399292]
[205.95803833 342.93014526]
[207.02284241 357.97396851]
[204.31213379 372.80984497]
[197.99632263 386.50515747]
[188.47239685 398.19897461]
[176.33906555 407.15628052]
[162.35902405 412.81393433]
[147.41108704 414.81637573]
[132.43486023 413.03765869]
[118.37180328 407.58963013]
[106.10590363 398.81475830]
[96.40821838 387.26461792]
[89.88834381 373.66528320]
[86.95613098 358.87158203]
[87.79589844 343.81350708]
[92.35485840 329.43762207]
[100.34643555 316.64755249]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 244]
[2 243]
[3 242]
[4 241]
[5 240]
[6 239]
[7 238]
[8 237]
[9 236]
[10 235]
[11 234]
[14 144]
[15 143]
[16 142]
[19 138]
[20 137]
[22 136]
[23 135]
[24 134]
[25 133]
[26 132]
[27 131]
[28 130]
[30 127]
[31 126]
[33 124]
[34 123]
[35 122]
[36 121]
[37 120]
[39 118]
[40 117]
[45 116]
[46 115]
[50 111]
[51 110]
[52 109]
[54 108]
[55 107]
[56 106]
[58 104]
[59 103]
[60 102]
[61 101]
[62 100]
[63 99]
[64 98]
[65 97]
[68 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 87]
[74 86]
[75 85]
[145 172]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[154 163]
[155 162]
[181 192]
[182 191]
[183 190]
[184 189]
[193 230]
[194 229]
[195 228]
[196 227]
[197 226]
[198 225]
[199 224]
[200 223]
[201 222]
[204 217]
[205 216]
[206 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
