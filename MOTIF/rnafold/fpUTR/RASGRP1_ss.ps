%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAAGUUUGUGCCUGCGGUGCACCUCGGUCGGGCUCGCCGGGCUCGAGGGCUGGCGGGCGCCGGGGCUACGAGGCCCGGGGGGGAGAGAGCCGGCAGGCGGCGGCGGUGGUGGCGGGGGCGAUGCGCCGCGCCCGGCCGCGCUAGGUGAGCCGGCACCGGGAGCGCGGGCCGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[-18.73467827 128.88117981]
[-20.11744881 143.81730652]
[-27.75632477 156.72650146]
[-40.18303680 165.12750244]
[-55.00904846 167.40554810]
[-69.38464355 163.12275696]
[-80.54668427 153.10234070]
[-86.34972382 139.27032471]
[-85.67834473 124.28534698]
[-78.66159821 111.02770233]
[-66.64817810 102.04562378]
[-51.94445038 99.06562042]
[-65.79001617 93.29497528]
[-79.63558197 87.52433777]
[-93.48114777 81.75370026]
[-107.32671356 75.98305511]
[-121.17227936 70.21241760]
[-135.06794739 64.56349945]
[-149.01266479 59.03673172]
[-162.95736694 53.50997162]
[-178.63279724 64.43857574]
[-197.57977295 63.75200653]
[-212.19070435 51.90589523]
[-216.70722961 33.80048752]
[-230.92347717 29.01526833]
[-245.13972473 24.23004723]
[-259.35595703 19.44482613]
[-271.31790161 30.90124893]
[-288.58309937 33.76183319]
[-305.30493164 25.99302673]
[-315.22045898 9.34571362]
[-330.15063477 7.90002060]
[-345.08081055 6.45432758]
[-360.02307129 5.13970661]
[-374.97631836 3.95625901]
[-389.92956543 2.77281141]
[-404.88281250 1.58936393]
[-419.83605957 0.40591633]
[-434.78930664 -0.77753127]
[-449.74252319 -1.96097887]
[-464.69577026 -3.14442635]
[-479.64901733 -4.32787418]
[-494.01663208 2.29652238]
[-506.09378052 -6.42079687]
[-521.04699707 -7.60424423]
[-537.31378174 -2.82640433]
[-546.40802002 -17.13484764]
[-535.17626953 -29.83463097]
[-519.86358643 -22.55748558]
[-504.91030884 -21.37403870]
[-491.61227417 -28.08308411]
[-478.46557617 -19.28111649]
[-463.51232910 -18.09766769]
[-448.55908203 -16.91422081]
[-433.60583496 -15.73077297]
[-418.65258789 -14.54732609]
[-403.69937134 -13.36387825]
[-388.74612427 -12.18043041]
[-373.79287720 -10.99698353]
[-358.83963013 -9.81353569]
[-351.90338135 -12.42785931]
[-343.63510132 -8.47584248]
[-328.70492554 -7.03014898]
[-313.77478027 -5.58445597]
[-306.35089111 -18.61849213]
[-315.21020508 -30.72272301]
[-324.06951904 -42.82695389]
[-332.92886353 -54.93118668]
[-341.78817749 -67.03541565]
[-357.00305176 -73.15424347]
[-359.04321289 -89.42599487]
[-345.80993652 -99.11167908]
[-330.91647339 -92.24750519]
[-329.68392944 -75.89473724]
[-320.82461548 -63.79050827]
[-311.96530151 -51.68627548]
[-303.10598755 -39.58204269]
[-294.24667358 -27.47781181]
[-272.85992432 -26.36490250]
[-257.84045410 -13.11924458]
[-254.57073975 5.22857904]
[-240.35450745 10.01380062]
[-226.13825989 14.79902172]
[-211.92201233 19.58424377]
[-204.17584229 11.48863888]
[-193.91571045 6.85980988]
[-182.61746216 6.40580559]
[-171.92216492 10.23108578]
[-163.39776611 17.81573868]
[-158.30914307 28.08581161]
[-157.43060303 39.56526184]
[-143.48590088 45.09202576]
[-129.54118347 50.61878967]
[-122.14288330 50.15892792]
[-115.40164185 56.36684799]
[-101.55607605 62.13748932]
[-87.71051025 67.90813446]
[-73.86494446 73.67877197]
[-60.01937485 79.44940948]
[-46.17380905 85.22005463]
[-31.79838562 89.50341797]
[-17.05236816 92.25204468]
[-2.30635118 95.00067902]
[11.62321949 89.72655487]
[23.77192497 99.86161804]
[38.51794434 102.61025238]
[53.26396179 105.35888672]
[68.00997925 108.10751343]
[82.75599670 110.85614777]
[80.22759247 101.42009735]
[82.39286804 92.16933441]
[88.49283600 85.23877716]
[96.89176178 82.10479736]
[105.50930023 83.27426147]
[112.33450317 88.21958160]
[126.63254547 83.68459320]
[140.93057251 79.14959717]
[155.22862244 74.61460876]
[166.04373169 63.06715012]
[180.51463318 66.59449768]
[194.81268311 62.05950546]
[209.11071777 57.52451324]
[216.16096497 43.37992096]
[231.17430115 38.44276047]
[245.24356079 45.64216232]
[250.02171326 60.70685196]
[242.67396545 74.69921112]
[227.55960083 79.31782532]
[213.64570618 71.82254791]
[199.34767151 76.35754395]
[185.04963684 80.89253235]
[175.25720215 92.11561584]
[159.76361084 88.91264343]
[145.46557617 93.44763947]
[131.16752625 97.98262787]
[116.86949921 102.51761627]
[113.23979950 113.22937775]
[103.02360535 120.15116119]
[114.72759247 129.53288269]
[126.43157959 138.91461182]
[138.13555908 148.29632568]
[149.83955383 157.67805481]
[161.54353333 167.05976868]
[173.24752808 176.44149780]
[193.27493286 178.56240845]
[199.56765747 196.82815552]
[211.59367371 205.79335022]
[223.61968994 214.75854492]
[235.64572144 223.72373962]
[251.24649048 221.19563293]
[264.01651001 230.50704956]
[266.37951660 246.13368225]
[256.93362427 258.80453491]
[241.28288269 261.00219727]
[228.71260071 251.42286682]
[226.68052673 235.74977112]
[214.65449524 226.78456116]
[202.62847900 217.81936646]
[190.60244751 208.85417175]
[180.62902832 211.23553467]
[170.79029846 207.64416504]
[164.43455505 199.04425049]
[163.86579895 188.14547729]
[152.16181946 178.76376343]
[140.45782471 169.38203430]
[128.75384521 160.00032043]
[117.04985809 150.61859131]
[105.34587097 141.23687744]
[93.64188385 131.85514832]
[80.00736237 125.60216522]
[65.26134491 122.85353088]
[50.51532745 120.10490417]
[35.76931000 117.35626984]
[21.02329445 114.60763550]
[6.03899002 119.68515778]
[-5.05498219 109.74669647]
[-19.80099869 106.99806213]
[-34.54701614 104.24943542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 100]
[13 99]
[14 98]
[15 97]
[16 96]
[17 95]
[18 93]
[19 92]
[20 91]
[24 84]
[25 83]
[26 82]
[27 81]
[31 64]
[32 63]
[33 62]
[34 60]
[35 59]
[36 58]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[44 50]
[45 49]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[101 178]
[102 177]
[103 176]
[105 174]
[106 173]
[107 172]
[108 171]
[109 170]
[115 136]
[116 135]
[117 134]
[118 133]
[120 131]
[121 130]
[122 129]
[138 169]
[139 168]
[140 167]
[141 166]
[142 165]
[143 164]
[144 163]
[146 159]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
